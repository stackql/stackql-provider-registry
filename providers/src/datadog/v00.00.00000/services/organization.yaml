openapi: 3.0.0
info:
  title: organization API
  description: datadog organization API
  version: '1.0'
paths:
  /api/v2/api_keys:
    get:
      description: List all API keys available for your account.
      operationId: ListAPIKeys
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/APIKeysSortParameter'
        - $ref: '#/components/parameters/APIKeyFilterParameter'
        - $ref: '#/components/parameters/APIKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/APIKeyFilterCreatedAtEndParameter'
        - $ref: '#/components/parameters/APIKeyFilterModifiedAtStartParameter'
        - $ref: '#/components/parameters/APIKeyFilterModifiedAtEndParameter'
        - $ref: '#/components/parameters/APIKeyIncludeParameter'
        - $ref: '#/components/parameters/APIKeyReadConfigReadEnabledParameter'
        - $ref: '#/components/parameters/APIKeyCategoryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all API keys
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - api_keys_read
    post:
      description: Create an API key.
      operationId: CreateAPIKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - api_keys_write
  /api/v2/api_keys/{api_key_id}:
    delete:
      description: Delete an API key.
      operationId: DeleteAPIKey
      parameters:
        - $ref: '#/components/parameters/APIKeyId'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an API key
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - api_keys_delete
    get:
      description: Get an API key.
      operationId: GetAPIKey
      parameters:
        - $ref: '#/components/parameters/APIKeyId'
        - $ref: '#/components/parameters/APIKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get API key
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - api_keys_read
    patch:
      description: Update an API key.
      operationId: UpdateAPIKey
      parameters:
        - $ref: '#/components/parameters/APIKeyId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an API key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - api_keys_write
  /api/v2/application_keys:
    get:
      description: List all application keys available for your org
      operationId: ListApplicationKeys
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationKeysSortParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'
        - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all application keys
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
  /api/v2/application_keys/{app_key_id}:
    delete:
      description: Delete an application key
      operationId: DeleteApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_write
    get:
      description: Get an application key for your org.
      operationId: GetApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
        - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an application key
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
    patch:
      description: Edit an application key
      operationId: UpdateApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_write
  /api/v2/audit/events:
    get:
      description: >-
        List endpoint returns events that match a Audit Logs search query.

        [Results are paginated][1].


        Use this endpoint to see your latest Audit Logs events.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      operationId: ListAuditLogs
      parameters:
        - description: Search query following Audit Logs syntax.
          example: '@type:session @application_id:xxxx'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: Minimum timestamp for requested events.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested events.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Order of events in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/AuditLogsSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of events in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a list of Audit Logs events
      tags:
        - Audit
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - audit_logs_read
  /api/v2/audit/events/search:
    post:
      description: >-
        List endpoint returns Audit Logs events that match an Audit search
        query.

        [Results are paginated][1].


        Use this endpoint to build complex Audit Logs events filtering and
        search.


        [1]:
        https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
      operationId: SearchAuditLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogsSearchEventsRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsEventsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search Audit Logs events
      tags:
        - Audit
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - audit_logs_read
  /api/v2/authn_mappings:
    get:
      description: List all AuthN Mappings in the org.
      operationId: ListAuthNMappings
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: Sort AuthN Mappings depending on the given field.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/AuthNMappingsSort'
        - description: Filter all mappings by the given string.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: >-
            Filter by mapping resource type. Defaults to "role" if not
            specified.
          in: query
          name: resource_type
          schema:
            $ref: '#/components/schemas/AuthNMappingResourceType'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all AuthN Mappings
      tags:
        - AuthN Mappings
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    post:
      description: Create an AuthN Mapping.
      operationId: CreateAuthNMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthNMappingCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an AuthN Mapping
      tags:
        - AuthN Mappings
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/authn_mappings/{authn_mapping_id}:
    delete:
      description: Delete an AuthN Mapping specified by AuthN Mapping UUID.
      operationId: DeleteAuthNMapping
      parameters:
        - $ref: '#/components/parameters/AuthNMappingID'
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an AuthN Mapping
      tags:
        - AuthN Mappings
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
    get:
      description: Get an AuthN Mapping specified by the AuthN Mapping UUID.
      operationId: GetAuthNMapping
      parameters:
        - $ref: '#/components/parameters/AuthNMappingID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an AuthN Mapping by UUID
      tags:
        - AuthN Mappings
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    patch:
      description: Edit an AuthN Mapping.
      operationId: UpdateAuthNMapping
      parameters:
        - $ref: '#/components/parameters/AuthNMappingID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthNMappingUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthNMappingResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication Error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an AuthN Mapping
      tags:
        - AuthN Mappings
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/current_user/application_keys:
    get:
      description: List all application keys available for current user
      operationId: ListCurrentUserApplicationKeys
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationKeysSortParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'
        - $ref: '#/components/parameters/ApplicationKeyIncludeParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all application keys owned by current user
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
    post:
      description: Create an application key for current user
      operationId: CreateCurrentUserApplicationKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an application key for current user
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
  /api/v2/current_user/application_keys/{app_key_id}:
    delete:
      description: Delete an application key owned by current user
      operationId: DeleteCurrentUserApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key owned by current user
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
    get:
      description: Get an application key owned by current user
      operationId: GetCurrentUserApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get one application key owned by current user
      tags:
        - Key Management
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
    patch:
      description: Edit an application key owned by current user
      operationId: UpdateCurrentUserApplicationKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key owned by current user
      tags:
        - Key Management
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_app_keys
  /api/v2/deletion/data/{product}:
    post:
      description: >-
        Creates a data deletion request by providing a query and a timeframe
        targeting the proper data.
      operationId: CreateDataDeletionRequest
      parameters:
        - $ref: '#/components/parameters/ProductName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataDeletionRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDataDeletionResponseBody'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Precondition failed error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal server error
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Creates a data deletion request
      tags:
        - Data Deletion
      x-permission:
        operator: OR
        permissions:
          - rum_delete_data
          - logs_delete_data
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/deletion/requests:
    get:
      description: >-
        Gets a list of data deletion requests based on several filter
        parameters.
      operationId: GetDataDeletionRequests
      parameters:
        - description: >-
            The next page of the previous search. If the next_page parameter is
            included, the rest of the query elements are ignored.
          example: cGFnZTI=
          in: query
          name: next_page
          required: false
          schema:
            type: string
        - description: Retrieve only the requests related to the given product.
          example: logs
          in: query
          name: product
          required: false
          schema:
            type: string
        - description: Retrieve only the requests that matches the given query.
          example: service:xyz host:abc
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Retrieve only the requests with the given status.
          example: pending
          in: query
          name: status
          required: false
          schema:
            type: string
        - description: Sets the page size of the search.
          example: '50'
          in: query
          name: page_size
          required: false
          schema:
            default: 50
            format: int64
            maximum: 50
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataDeletionsResponseBody'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal server error
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Gets a list of data deletion requests
      tags:
        - Data Deletion
      x-permission:
        operator: OR
        permissions:
          - rum_delete_data
          - logs_delete_data
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/deletion/requests/{id}/cancel:
    put:
      description: Cancels a data deletion request by providing its ID.
      operationId: CancelDataDeletionRequest
      parameters:
        - $ref: '#/components/parameters/RequestId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelDataDeletionResponseBody'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '412':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Precondition failed error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal server error
      security:
        - apiKeyAuth: []
          appKeyAuth: []
      summary: Cancels a data deletion request
      tags:
        - Data Deletion
      x-permission:
        operator: OR
        permissions:
          - rum_delete_data
          - logs_delete_data
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/domain_allowlist:
    get:
      description: Get the domain allowlist for an organization.
      operationId: GetDomainAllowlist
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAllowlistResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
        - AuthZ:
            - monitors_write
      summary: Get Domain Allowlist
      tags:
        - Domain Allowlist
      x-permission:
        operator: OR
        permissions:
          - org_management
          - monitors_write
          - generate_dashboard_reports
          - generate_log_reports
          - manage_log_reports
    patch:
      description: Update the domain allowlist for an organization.
      operationId: PatchDomainAllowlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainAllowlistRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainAllowlistResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
        - AuthZ:
            - monitors_write
      summary: Sets Domain Allowlist
      tags:
        - Domain Allowlist
      x-permission:
        operator: OR
        permissions:
          - org_management
          - monitors_write
          - generate_dashboard_reports
          - generate_log_reports
          - manage_log_reports
  /api/v2/ip_allowlist:
    get:
      description: Returns the IP allowlist and its enabled or disabled state.
      operationId: GetIPAllowlist
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
      summary: Get IP Allowlist
      tags:
        - IP Allowlist
      x-permission:
        operator: OR
        permissions:
          - org_management
    patch:
      description: Edit the entries in the IP allowlist, and enable or disable it.
      operationId: UpdateIPAllowlist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IPAllowlistUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPAllowlistResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_management
      summary: Update IP Allowlist
      tags:
        - IP Allowlist
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_management
  /api/v2/org_configs:
    get:
      description: Returns all Org Configs (name, description, and value).
      operationId: ListOrgConfigs
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfigListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List Org Configs
      tags:
        - Organizations
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/org_configs/{org_config_name}:
    get:
      description: Return the name, description, and value of a specific Org Config.
      operationId: GetOrgConfig
      parameters:
        - $ref: '#/components/parameters/OrgConfigName'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfigGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a specific Org Config value
      tags:
        - Organizations
      x-permission:
        operator: OPEN
        permissions: []
    patch:
      description: Update the value of a specific Org Config.
      operationId: UpdateOrgConfig
      parameters:
        - $ref: '#/components/parameters/OrgConfigName'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgConfigWriteRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConfigGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a specific Org Config
      tags:
        - Organizations
      x-permission:
        operator: OR
        permissions:
          - org_management
  /api/v2/org_connections:
    get:
      description: Returns a list of org connections.
      operationId: ListOrgConnections
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConnectionListResponse'
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_connections_read
      summary: List Org Connections
      tags:
        - Org Connections
      x-permission:
        operator: OR
        permissions:
          - org_connections_read
    post:
      description: Create a new org connection between the current org and a target org.
      operationId: CreateOrgConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgConnectionCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConnectionResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_connections_write
      summary: Create Org Connection
      tags:
        - Org Connections
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_connections_write
  /api/v2/org_connections/{connection_id}:
    delete:
      description: Delete an existing org connection.
      operationId: DeleteOrgConnections
      parameters:
        - $ref: '#/components/parameters/OrgConnectionId'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_connections_write
      summary: Delete Org Connection
      tags:
        - Org Connections
      x-permission:
        operator: OR
        permissions:
          - org_connections_write
    patch:
      description: Update an existing org connection.
      operationId: UpdateOrgConnections
      parameters:
        - $ref: '#/components/parameters/OrgConnectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgConnectionUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgConnectionResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - org_connections_write
      summary: Update Org Connection
      tags:
        - Org Connections
      x-permission:
        operator: OR
        permissions:
          - org_connections_write
  /api/v2/permissions:
    get:
      description: Returns a list of all permissions, including name, description, and ID.
      operationId: ListPermissions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List permissions
      tags:
        - Roles
      x-permission:
        operator: OR
        permissions:
          - user_access_read
  /api/v2/restriction_policy/{resource_id}:
    delete:
      description: Deletes the restriction policy associated with a specified resource.
      operationId: DeleteRestrictionPolicy
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Delete a restriction policy
      tags:
        - Restriction Policies
      x-permission:
        operator: OPEN
        permissions: []
    get:
      description: Retrieves the restriction policy associated with a specified resource.
      operationId: GetRestrictionPolicy
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get a restriction policy
      tags:
        - Restriction Policies
      x-permission:
        operator: OPEN
        permissions: []
    post:
      description: |-
        Updates the restriction policy associated with a resource.

        #### Supported resources
        Restriction policies can be applied to the following resources:
        - Dashboards: `dashboard`
        - Integration Services: `integration-service`
        - Integration Webhooks: `integration-webhook`
        - Notebooks: `notebook`
        - Powerpacks: `powerpack`
        - Reference Tables: `reference-table`
        - Security Rules: `security-rule`
        - Service Level Objectives: `slo`
        - Synthetic Global Variables: `synthetics-global-variable`
        - Synthetic Tests: `synthetics-test`
        - Synthetic Private Locations: `synthetics-private-location`
        - Monitors: `monitor`
        - Workflows: `workflow`
        - App Builder Apps: `app-builder-app`
        - Connections: `connection`
        - Connection Groups: `connection-group`
        - RUM Applications: `rum-application`
        - Cross Org Connections: `cross-org-connection`
        - Spreadsheets: `spreadsheet`
        - On-Call Schedules: `on-call-schedule`
        - On-Call Escalation Policies: `on-call-escalation-policy`
        - On-Call Team Routing Rules: `on-call-team-routing-rules`

        #### Supported relations for resources
        Resource Type               | Supported Relations
        ----------------------------|--------------------------
        Dashboards                  | `viewer`, `editor`
        Integration Services        | `viewer`, `editor`
        Integration Webhooks        | `viewer`, `editor`
        Notebooks                   | `viewer`, `editor`
        Powerpacks                  | `viewer`, `editor`
        Security Rules              | `viewer`, `editor`
        Service Level Objectives    | `viewer`, `editor`
        Synthetic Global Variables  | `viewer`, `editor`
        Synthetic Tests             | `viewer`, `editor`
        Synthetic Private Locations | `viewer`, `editor`
        Monitors                    | `viewer`, `editor`
        Reference Tables            | `viewer`, `editor`
        Workflows                   | `viewer`, `runner`, `editor`
        App Builder Apps            | `viewer`, `editor`
        Connections                 | `viewer`, `resolver`, `editor`
        Connection Groups           | `viewer`, `editor`
        RUM Application             | `viewer`, `editor`
        Cross Org Connections       | `viewer`, `editor`
        Spreadsheets                | `viewer`, `editor`
        On-Call Schedules           | `viewer`, `overrider`, `editor`
        On-Call Escalation Policies | `viewer`, `editor`
        On-Call Team Routing Rules  | `viewer`, `editor`
      operationId: UpdateRestrictionPolicy
      parameters:
        - $ref: '#/components/parameters/ResourceID'
        - description: >-
            Allows admins (users with the `user_access_manage` permission) to
            remove their own access from the resource if set to `true`. By
            default, this is set to `false`, preventing admins from locking
            themselves out.
          in: query
          name: allow_self_lockout
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestrictionPolicyUpdateRequest'
        description: Restriction policy payload
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Update a restriction policy
      tags:
        - Restriction Policies
      x-codegen-request-body-name: body
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/roles:
    get:
      description: Returns all roles, including their names and their unique identifiers.
      operationId: ListRoles
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: >-
            Sort roles depending on the given field. Sort order is **ascending**
            by default.

            Sort order is **descending** if the field is prefixed by a negative
            sign, for example:

            `sort=-name`.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/RolesSort'
        - description: Filter all roles by the given string.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Filter all roles by the given list of role IDs.
          in: query
          name: filter[id]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List roles
      tags:
        - Roles
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    post:
      description: Create a new role for your organization.
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Create role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}:
    delete:
      description: Disables a role.
      operationId: DeleteRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Delete role
      tags:
        - Roles
      x-codegen-request-body-name: body
    get:
      description: Get a role in the organization specified by the role’s `role_id`.
      operationId: GetRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get a role
      tags:
        - Roles
      x-codegen-request-body-name: body
    patch:
      description: >-
        Edit a role. Can only be used with application keys belonging to
        administrators.
      operationId: UpdateRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleUpdateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Update a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}/clone:
    post:
      description: Clone an existing role
      operationId: CloneRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCloneRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Create a new role by cloning an existing role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}/permissions:
    delete:
      description: Removes a permission from a role.
      operationId: RemovePermissionFromRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToPermission'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Revoke permission
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
    get:
      description: Returns a list of all permissions for a single role.
      operationId: ListRolePermissions
      parameters:
        - $ref: '#/components/parameters/RoleID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List permissions for a role
      tags:
        - Roles
      x-codegen-request-body-name: body
    post:
      description: Adds a permission to a role.
      operationId: AddPermissionToRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToPermission'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Grant permission to a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/roles/{role_id}/users:
    delete:
      description: Removes a user from a role.
      operationId: RemoveUserFromRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToUser'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Remove a user from a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
    get:
      description: Gets all users of a role.
      operationId: ListRoleUsers
      parameters:
        - $ref: '#/components/parameters/RoleID'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: >-
            User attribute to order results by. Sort order is **ascending** by
            default.

            Sort order is **descending** if the field is prefixed by a negative
            sign,

            for example `sort=-name`. Options: `name`, `email`, `status`.
          in: query
          name: sort
          required: false
          schema:
            default: name
            type: string
        - description: Filter all users by the given string. Defaults to no filtering.
          in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get all users of a role
      tags:
        - Roles
    post:
      description: Adds a user to a role.
      operationId: AddUserToRole
      parameters:
        - $ref: '#/components/parameters/RoleID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToUser'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Add a user to a role
      tags:
        - Roles
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
  /api/v2/saml_configurations/idp_metadata:
    post:
      description: >-
        Endpoint for uploading IdP metadata for SAML setup.


        Use this endpoint to upload or replace IdP metadata for SAML login
        configuration.
      operationId: UploadIdPMetadata
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IdPMetadataFormData'
        required: true
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Upload IdP metadata
      tags:
        - Organizations
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - org_management
  /api/v2/service_accounts:
    post:
      description: Create a service account for your organization.
      operationId: CreateServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a service account
      tags:
        - Service Accounts
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - service_account_write
  /api/v2/service_accounts/{service_account_id}/application_keys:
    get:
      description: List all application keys available for this service account.
      operationId: ListServiceAccountApplicationKeys
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/ApplicationKeysSortParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtStartParameter'
        - $ref: '#/components/parameters/ApplicationKeyFilterCreatedAtEndParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListApplicationKeysResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List application keys for this service account
      tags:
        - Service Accounts
      x-permission:
        operator: OR
        permissions:
          - service_account_write
    post:
      description: Create an application key for this service account.
      operationId: CreateServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an application key for this service account
      tags:
        - Service Accounts
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - service_account_write
  /api/v2/service_accounts/{service_account_id}/application_keys/{app_key_id}:
    delete:
      description: Delete an application key owned by this service account.
      operationId: DeleteServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '204':
          description: No Content
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an application key for this service account
      tags:
        - Service Accounts
      x-permission:
        operator: OR
        permissions:
          - service_account_write
    get:
      description: Get an application key owned by this service account.
      operationId: GetServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/ApplicationKeyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialApplicationKeyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get one application key for this service account
      tags:
        - Service Accounts
      x-permission:
        operator: OR
        permissions:
          - service_account_write
    patch:
      description: Edit an application key owned by this service account.
      operationId: UpdateServiceAccountApplicationKey
      parameters:
        - $ref: '#/components/parameters/ServiceAccountID'
        - $ref: '#/components/parameters/ApplicationKeyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationKeyUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartialApplicationKeyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit an application key for this service account
      tags:
        - Service Accounts
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - service_account_write
  /api/v2/team:
    get:
      description: >-
        Get all teams.

        Can be used to search for teams using the `filter[keyword]` and
        `filter[me]` query parameters.
      operationId: ListTeams
      parameters:
        - $ref: '#/components/parameters/PageNumber'
        - $ref: '#/components/parameters/PageSize'
        - description: Specifies the order of the returned teams
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/ListTeamsSort'
        - description: >-
            Included related resources optionally requested. Allowed enum
            values: `team_links, user_team_permissions`
          in: query
          name: include
          required: false
          schema:
            items:
              $ref: '#/components/schemas/ListTeamsInclude'
            type: array
        - description: Search query. Can be team name, team handle, or email of team member
          in: query
          name: filter[keyword]
          required: false
          schema:
            type: string
        - description: When true, only returns teams the current user belongs to
          in: query
          name: filter[me]
          required: false
          schema:
            type: boolean
        - description: List of fields that need to be fetched.
          explode: false
          in: query
          name: fields[team]
          required: false
          schema:
            items:
              $ref: '#/components/schemas/TeamsField'
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get all teams
      tags:
        - Teams
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - teams_read
    post:
      description: >-
        Create a new team.

        User IDs passed through the `users` relationship field are added to the
        team.
      operationId: CreateTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: CREATED
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
            - teams_manage
      summary: Create a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - teams_read
          - teams_manage
  /api/v2/team/sync:
    post:
      description: >-
        This endpoint attempts to link your existing Datadog teams with GitHub
        teams by matching their names.

        It evaluates all current Datadog teams and compares them against teams
        in the GitHub organization

        connected to your Datadog account, based on Datadog Team handle and
        GitHub Team slug

        (lowercased and kebab-cased).


        This operation is read-only on the GitHub side, no teams will be
        modified or created.


        [A GitHub organization must be connected to your Datadog
        account](https://docs.datadoghq.com/integrations/github/),

        and the GitHub App integrated with Datadog must have the `Members Read`
        permission. Matching is performed by comparing the Datadog team handle
        to the GitHub team slug

        using a normalized exact match; case is ignored and spaces are removed.
        No modifications are made

        to teams in GitHub. This will not create new Teams in Datadog.
      operationId: SyncTeams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamSyncRequest'
        required: true
      responses:
        '200':
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Internal Server Error - Unexpected error during linking.
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_manage
      summary: Link Teams with GitHub Teams
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - teams_manage
      x-unstable: >-
        **Note**: This endpoint is in Preview. To request access, fill out this
        [form](https://www.datadoghq.com/product-preview/github-integration-for-teams/).

        If you have any feedback, contact [Datadog
        support](https://docs.datadoghq.com/help/).
  /api/v2/team/{super_team_id}/member_teams:
    get:
      description: Get all member teams.
      operationId: ListMemberTeams
      parameters:
        - description: None
          in: path
          name: super_team_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: List of fields that need to be fetched.
          explode: false
          in: query
          name: fields[team]
          required: false
          schema:
            items:
              $ref: '#/components/schemas/TeamsField'
            type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get all member teams
      tags:
        - Teams
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - teams_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: >-
        Add a member team.

        Adds the team given by the `id` in the body as a member team of the
        super team.
      operationId: AddMemberTeam
      parameters:
        - description: None
          in: path
          name: super_team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMemberTeamRequest'
        required: true
      responses:
        '204':
          description: Added
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Add a member team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/team/{super_team_id}/member_teams/{member_team_id}:
    delete:
      description: Remove a super team's member team identified by `member_team_id`.
      operationId: RemoveMemberTeam
      parameters:
        - description: None
          in: path
          name: super_team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: member_team_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a member team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/team/{team_id}:
    delete:
      description: Remove a team using the team's `id`.
      operationId: DeleteTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
            - teams_manage
      summary: Remove a team
      tags:
        - Teams
      x-permission:
        operator: AND
        permissions:
          - teams_read
          - teams_manage
    get:
      description: Get a single team using the team's `id`.
      operationId: GetTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    patch:
      description: >-
        Update a team using the team's `id`.

        If the `team_links` relationship is present, the associated links are
        updated to be in the order they appear in the array, and any existing
        team links not present are removed.
      operationId: UpdateTeam
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/links:
    get:
      description: Get all links for a given team.
      operationId: GetTeamLinks
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinksResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get links for a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    post:
      description: Add a new link to a team.
      operationId: CreateTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamLinkCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Create a team link
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/links/{link_id}:
    delete:
      description: Remove a link from a team.
      operationId: DeleteTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a team link
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    get:
      description: Get a single link for a team.
      operationId: GetTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get a team link
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    patch:
      description: Update a team link.
      operationId: UpdateTeamLink
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: link_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamLinkCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLinkResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a team link
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/memberships:
    get:
      description: Get a paginated list of members for a team
      operationId: GetTeamMemberships
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: Specifies the order of returned team memberships
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/GetTeamMembershipsSort'
        - description: Search query, can be user email or name
          in: query
          name: filter[keyword]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get team memberships
      tags:
        - Teams
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - teams_read
    post:
      description: Add a user to a team.
      operationId: CreateTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTeamRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Add a user to a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/memberships/{user_id}:
    delete:
      description: Remove a user from a team.
      operationId: DeleteTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Remove a user from a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
    patch:
      description: Update a user's membership attributes on a team.
      operationId: UpdateTeamMembership
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTeamUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamResponse'
          description: Represents a user's association to a team
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update a user's membership attributes on a team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/permission-settings:
    get:
      description: Get all permission settings for a given team.
      operationId: GetTeamPermissionSettings
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPermissionSettingsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get permission settings for a team
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/team/{team_id}/permission-settings/{action}:
    put:
      description: Update a team permission setting for a given team.
      operationId: UpdateTeamPermissionSetting
      parameters:
        - description: None
          in: path
          name: team_id
          required: true
          schema:
            type: string
        - description: None
          in: path
          name: action
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamPermissionSettingUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamPermissionSettingResponse'
          description: OK
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Update permission setting for team
      tags:
        - Teams
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - teams_read
  /api/v2/usage/application_security:
    get:
      deprecated: true
      description: >-
        Get hourly usage for application security .

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageApplicationSecurityMonitoring
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: >-
                  #/components/schemas/UsageApplicationSecurityMonitoringResponse
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for application security
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/billing_dimension_mapping:
    get:
      description: >-
        Get a mapping of billing dimensions to the corresponding keys for the
        supported usage metering public API endpoints.

        Mapping data is updated on a monthly cadence.


        This endpoint is only accessible to [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetBillingDimensionMapping
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, and for mappings beginning this
            month. Defaults to the current month.
          in: query
          name: filter[month]
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            String to specify whether to retrieve active billing dimension
            mappings for the contract or for all available mappings. Allowed
            views have the string `active` or `all`. Defaults to `active`.
          in: query
          name: filter[view]
          required: false
          schema:
            default: active
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/BillingDimensionsMappingResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get billing dimension mapping for usage endpoints
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/cost_by_org:
    get:
      deprecated: true
      description: >-
        Get cost across multi-org account.

        Cost by org data for a given month becomes available no later than the
        16th of the following month.

        **Note:** This endpoint has been deprecated. Please use the new endpoint

        [`/historical_cost`](https://docs.datadoghq.com/api/latest/usage-metering/#get-historical-cost-across-your-account)

        instead.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetCostByOrg
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
            - billing_read
      summary: Get cost across multi-org account
      tags:
        - Usage Metering
      x-permission:
        operator: AND
        permissions:
          - usage_read
          - billing_read
  /api/v2/usage/estimated_cost:
    get:
      description: >-
        Get estimated cost across multi-org and single root-org accounts.

        Estimated cost data is only available for the current month and previous
        month

        and is delayed by up to 72 hours from when it was incurred.

        To access historical costs prior to this, use the `/historical_cost`
        endpoint.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetEstimatedCostByOrg
      parameters:
        - description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`. Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month. **Either start_month or start_date should
            be specified, but not both.** (start_month cannot go beyond two
            months in the past). Provide an `end_month` to view month-over-month
            cost.
          in: query
          name: start_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for
            cost beginning this day. **Either start_month or start_date should
            be specified, but not both.** (start_date cannot go beyond two
            months in the past). Provide an `end_date` to view day-over-day
            cumulative cost.
          in: query
          name: start_date
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for
            cost ending this day.
          in: query
          name: end_date
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
            - billing_read
      summary: Get estimated cost across your account
      tags:
        - Usage Metering
      x-permission:
        operator: AND
        permissions:
          - usage_read
          - billing_read
  /api/v2/usage/historical_cost:
    get:
      description: >-
        Get historical cost across multi-org and single root-org accounts.

        Cost data for a given month becomes available no later than the 16th of
        the following month.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetHistoricalCostByOrg
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost beginning this month.
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`.  Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for
            cost ending this month.
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
            - billing_read
      summary: Get historical cost across your account
      tags:
        - Usage Metering
      x-permission:
        operator: AND
        permissions:
          - usage_read
          - billing_read
  /api/v2/usage/hourly_usage:
    get:
      description: Get hourly usage by product family.
      operationId: GetHourlyUsage
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage beginning at this hour.
          in: query
          name: filter[timestamp][start]
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh]
            for usage ending **before** this hour.
          in: query
          name: filter[timestamp][end]
          required: false
          schema:
            format: date-time
            type: string
        - description: >-
            Comma separated list of product families to retrieve. Available
            families are `all`, `analyzed_logs`,

            `application_security`, `audit_trail`, `serverless`, `ci_app`,
            `cloud_cost_management`, `cloud_siem`,

            `csm_container_enterprise`, `csm_host_enterprise`, `cspm`,
            `custom_events`, `cws`, `dbm`, `error_tracking`,

            `fargate`, `infra_hosts`, `incident_management`, `indexed_logs`,
            `indexed_spans`, `ingested_spans`, `iot`,

            `lambda_traced_invocations`, `llm_observability`, `logs`,
            `network_flows`, `network_hosts`, `network_monitoring`,

            `observability_pipelines`, `online_archive`, `profiling`,
            `product_analytics`, `rum`, `rum_browser_sessions`,

            `rum_mobile_sessions`, `sds`, `snmp`, `software_delivery`,
            `synthetics_api`, `synthetics_browser`,

            `synthetics_mobile`, `synthetics_parallel_testing`, `timeseries`,
            `vuln_management` and `workflow_executions`.

            The following product family has been **deprecated**: `audit_logs`.
          in: query
          name: filter[product_families]
          required: true
          schema:
            type: string
        - description: Include child org usage in the response. Defaults to false.
          in: query
          name: filter[include_descendants]
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to false.
          in: query
          name: filter[include_connected_accounts]
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Include breakdown of usage by subcategories where applicable (for
            product family logs only). Defaults to false.
          in: query
          name: filter[include_breakdown]
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            Comma separated list of product family versions to use in the format
            `product_family:version`. For example,

            `infra_hosts:1.0.0`. If this parameter is not used, the API will use
            the latest version of each requested

            product family. Currently all families have one version `1.0.0`.
          in: query
          name: filter[versions]
          required: false
          schema:
            type: string
        - description: >-
            Maximum number of results to return (between 1 and 500) - defaults
            to 500 if limit not specified.
          in: query
          name: page[limit]
          required: false
          schema:
            default: 500
            format: int32
            maximum: 500
            minimum: 1
            type: integer
        - description: >-
            List following results with a next_record_id provided in the
            previous query.
          in: query
          name: page[next_record_id]
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/HourlyUsageResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage by product family
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/lambda_traced_invocations:
    get:
      deprecated: true
      description: >-
        Get hourly usage for Lambda traced invocations.

        **Note:** This endpoint has been deprecated.. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageLambdaTracedInvocations
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaTracedInvocationsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for Lambda traced invocations
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/observability_pipelines:
    get:
      deprecated: true
      description: >-
        Get hourly usage for observability pipelines.

        **Note:** This endpoint has been deprecated. Hourly usage data for all
        products is now available in the [Get hourly usage by product family
        API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageObservabilityPipelines
      parameters:
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage beginning at this hour.
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: >-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`
            for usage ending

            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageObservabilityPipelinesResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for observability pipelines
      tags:
        - Usage Metering
      x-permission:
        operator: OR
        permissions:
          - usage_read
  /api/v2/usage/projected_cost:
    get:
      description: >-
        Get projected cost across multi-org and single root-org accounts.

        Projected cost data is only available for the current month and becomes
        available around the 12th of the month.


        This endpoint is only accessible for [parent-level
        organizations](https://docs.datadoghq.com/account_management/multi_organization/).
      operationId: GetProjectedCost
      parameters:
        - description: >-
            String to specify whether cost is broken down at a parent-org level
            or at the sub-org level. Available views are `summary` and
            `sub-org`. Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: >-
            Boolean to specify whether to include accounts connected to the
            current account as partner customers in the Datadog partner network
            program. Defaults to `false`. 
          in: query
          name: include_connected_accounts
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/ProjectedCostResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
            - billing_read
      summary: Get projected cost across your account
      tags:
        - Usage Metering
      x-permission:
        operator: AND
        permissions:
          - usage_read
          - billing_read
  /api/v2/user_invitations:
    post:
      description: >-
        Sends emails to one or more users inviting them to join the
        organization.
      operationId: SendInvitations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitationsRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_invite
      summary: Send invitation emails
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
  /api/v2/user_invitations/{user_invitation_uuid}:
    get:
      description: Returns a single user invitation by its UUID.
      operationId: GetInvitation
      parameters:
        - description: The UUID of the user invitation.
          in: path
          name: user_invitation_uuid
          required: true
          schema:
            example: 00000000-0000-0000-3456-000000000000
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_invite
      summary: Get a user invitation
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
  /api/v2/users:
    get:
      description: |-
        Get the list of all users in the organization. This list includes
        all users even if they are deactivated or unverified.
      operationId: ListUsers
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
        - description: >-
            User attribute to order results by. Sort order is ascending by
            default.

            Sort order is descending if the field

            is prefixed by a negative sign, for example `sort=-name`. Options:
            `name`,

            `modified_at`, `user_count`.
          in: query
          name: sort
          required: false
          schema:
            default: name
            example: name
            type: string
        - description: 'Direction of sort. Options: `asc`, `desc`.'
          in: query
          name: sort_dir
          required: false
          schema:
            $ref: '#/components/schemas/QuerySortOrder'
        - description: Filter all users by the given string. Defaults to no filtering.
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: >-
            Filter on status attribute.

            Comma separated list, with possible values `Active`, `Pending`, and
            `Disabled`.

            Defaults to no filtering.
          in: query
          name: filter[status]
          required: false
          schema:
            example: Active
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: List all users
      tags:
        - Users
      x-codegen-request-body-name: body
      x-pagination:
        limitParam: page[size]
        pageParam: page[number]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    post:
      description: Create a user for your organization.
      operationId: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_invite
      summary: Create a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_invite
  /api/v2/users/{user_id}:
    delete:
      description: |-
        Disable a user. Can only be used with an application key belonging
        to an administrator user.
      operationId: DisableUser
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Disable a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
          - service_account_write
    get:
      description: Get a user in the organization specified by the user’s `user_id`.
      operationId: GetUser
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get user details
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_read
    patch:
      description: |-
        Edit a user. Can only be used with an application key belonging
        to an administrator user.
      operationId: UpdateUser
      parameters:
        - $ref: '#/components/parameters/UserID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_manage
      summary: Update a user
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
          - service_account_write
  /api/v2/users/{user_id}/orgs:
    get:
      description: >-
        Get a user organization. Returns the user information and all
        organizations

        joined by this user.
      operationId: ListUserOrganizations
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get a user organization
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OPEN
        permissions: []
  /api/v2/users/{user_id}/permissions:
    get:
      description: |-
        Get a user permission set. Returns a list of the user’s permissions
        granted by the associated user's roles.
      operationId: ListUserPermissions
      parameters:
        - $ref: '#/components/parameters/UserID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Authentication error
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - user_access_read
      summary: Get a user permissions
      tags:
        - Users
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - user_access_read
  /api/v2/users/{user_uuid}/memberships:
    get:
      description: Get a list of memberships for a user
      operationId: GetUserMemberships
      parameters:
        - description: None
          in: path
          name: user_uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsResponse'
          description: Represents a user's association to a team
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: API error response.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - teams_read
      summary: Get user memberships
      tags:
        - Teams
      x-permission:
        operator: OR
        permissions:
          - teams_read
components:
  schemas:
    APIKeysResponse:
      description: Response for a list of API keys.
      properties:
        data:
          description: Array of API keys.
          items:
            $ref: '#/components/schemas/PartialAPIKey'
          type: array
        included:
          description: Array of objects related to the API key.
          items:
            $ref: '#/components/schemas/APIKeyResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/APIKeysResponseMeta'
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    APIKeyCreateRequest:
      description: Request used to create an API key.
      properties:
        data:
          $ref: '#/components/schemas/APIKeyCreateData'
      required:
        - data
      type: object
    APIKeyResponse:
      description: Response for retrieving an API key.
      properties:
        data:
          $ref: '#/components/schemas/FullAPIKey'
        included:
          description: Array of objects related to the API key.
          items:
            $ref: '#/components/schemas/APIKeyResponseIncludedItem'
          type: array
      type: object
    APIKeyUpdateRequest:
      description: Request used to update an API key.
      properties:
        data:
          $ref: '#/components/schemas/APIKeyUpdateData'
      required:
        - data
      type: object
    ListApplicationKeysResponse:
      description: Response for a list of application keys.
      properties:
        data:
          description: Array of application keys.
          items:
            $ref: '#/components/schemas/PartialApplicationKey'
          type: array
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/ApplicationKeyResponseMeta'
      type: object
    ApplicationKeyResponse:
      description: Response for retrieving an application key.
      properties:
        data:
          $ref: '#/components/schemas/FullApplicationKey'
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
      type: object
    ApplicationKeyUpdateRequest:
      description: Request used to update an application key.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationKeyUpdateData'
      required:
        - data
      type: object
    AuditLogsSort:
      description: Sort parameters when querying events.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    AuditLogsEventsResponse:
      description: >-
        Response object with all events matching the request and pagination
        information.
      properties:
        data:
          description: Array of events matching the request.
          items:
            $ref: '#/components/schemas/AuditLogsEvent'
          type: array
        links:
          $ref: '#/components/schemas/AuditLogsResponseLinks'
        meta:
          $ref: '#/components/schemas/AuditLogsResponseMetadata'
      type: object
    AuditLogsSearchEventsRequest:
      description: The request for a Audit Logs events list.
      properties:
        filter:
          $ref: '#/components/schemas/AuditLogsQueryFilter'
        options:
          $ref: '#/components/schemas/AuditLogsQueryOptions'
        page:
          $ref: '#/components/schemas/AuditLogsQueryPageOptions'
        sort:
          $ref: '#/components/schemas/AuditLogsSort'
      type: object
    AuthNMappingsSort:
      description: Sorting options for AuthN Mappings.
      enum:
        - created_at
        - '-created_at'
        - role_id
        - '-role_id'
        - saml_assertion_attribute_id
        - '-saml_assertion_attribute_id'
        - role.name
        - '-role.name'
        - saml_assertion_attribute.attribute_key
        - '-saml_assertion_attribute.attribute_key'
        - saml_assertion_attribute.attribute_value
        - '-saml_assertion_attribute.attribute_value'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - ROLE_ID_ASCENDING
        - ROLE_ID_DESCENDING
        - SAML_ASSERTION_ATTRIBUTE_ID_ASCENDING
        - SAML_ASSERTION_ATTRIBUTE_ID_DESCENDING
        - ROLE_NAME_ASCENDING
        - ROLE_NAME_DESCENDING
        - SAML_ASSERTION_ATTRIBUTE_KEY_ASCENDING
        - SAML_ASSERTION_ATTRIBUTE_KEY_DESCENDING
        - SAML_ASSERTION_ATTRIBUTE_VALUE_ASCENDING
        - SAML_ASSERTION_ATTRIBUTE_VALUE_DESCENDING
    AuthNMappingResourceType:
      description: The type of resource being mapped to.
      enum:
        - role
        - team
      type: string
      x-enum-varnames:
        - ROLE
        - TEAM
    AuthNMappingsResponse:
      description: Array of AuthN Mappings response.
      properties:
        data:
          description: Array of returned AuthN Mappings.
          items:
            $ref: '#/components/schemas/AuthNMapping'
          type: array
        included:
          description: Included data in the AuthN Mapping response.
          items:
            $ref: '#/components/schemas/AuthNMappingIncluded'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    AuthNMappingCreateRequest:
      description: Request for creating an AuthN Mapping.
      properties:
        data:
          $ref: '#/components/schemas/AuthNMappingCreateData'
      required:
        - data
      type: object
    AuthNMappingResponse:
      description: AuthN Mapping response from the API.
      properties:
        data:
          $ref: '#/components/schemas/AuthNMapping'
        included:
          description: Included data in the AuthN Mapping response.
          items:
            $ref: '#/components/schemas/AuthNMappingIncluded'
          type: array
      type: object
    AuthNMappingUpdateRequest:
      description: Request to update an AuthN Mapping.
      properties:
        data:
          $ref: '#/components/schemas/AuthNMappingUpdateData'
      required:
        - data
      type: object
    ApplicationKeyCreateRequest:
      description: Request used to create an application key.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationKeyCreateData'
      required:
        - data
      type: object
    CreateDataDeletionRequestBody:
      description: Object needed to create a data deletion request.
      properties:
        data:
          $ref: '#/components/schemas/CreateDataDeletionRequestBodyData'
      required:
        - data
      type: object
    CreateDataDeletionResponseBody:
      description: The response from the create data deletion request endpoint.
      properties:
        data:
          $ref: '#/components/schemas/DataDeletionResponseItem'
        meta:
          $ref: '#/components/schemas/DataDeletionResponseMeta'
      type: object
    GetDataDeletionsResponseBody:
      description: The response from the get data deletion requests endpoint.
      properties:
        data:
          description: The list of data deletion requests that matches the query.
          items:
            $ref: '#/components/schemas/DataDeletionResponseItem'
          type: array
        meta:
          $ref: '#/components/schemas/DataDeletionResponseMeta'
      type: object
    CancelDataDeletionResponseBody:
      description: The response from the cancel data deletion request endpoint.
      properties:
        data:
          $ref: '#/components/schemas/DataDeletionResponseItem'
        meta:
          $ref: '#/components/schemas/DataDeletionResponseMeta'
      type: object
    DomainAllowlistResponse:
      description: Response containing information about the email domain allowlist.
      properties:
        data:
          $ref: '#/components/schemas/DomainAllowlistResponseData'
      type: object
    DomainAllowlistRequest:
      description: Request containing the desired email domain allowlist configuration.
      properties:
        data:
          $ref: '#/components/schemas/DomainAllowlist'
      required:
        - data
      type: object
    IPAllowlistResponse:
      description: Response containing information about the IP allowlist.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistData'
      type: object
    IPAllowlistUpdateRequest:
      description: Update the IP allowlist.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistData'
      required:
        - data
      type: object
    OrgConfigListResponse:
      description: A response with multiple Org Configs.
      properties:
        data:
          description: An array of Org Configs.
          items:
            $ref: '#/components/schemas/OrgConfigRead'
          type: array
      required:
        - data
      type: object
    OrgConfigGetResponse:
      description: A response with a single Org Config.
      properties:
        data:
          $ref: '#/components/schemas/OrgConfigRead'
      required:
        - data
      type: object
    OrgConfigWriteRequest:
      description: A request to update an Org Config.
      properties:
        data:
          $ref: '#/components/schemas/OrgConfigWrite'
      required:
        - data
      type: object
    OrgConnectionListResponse:
      description: Response containing a list of org connections.
      properties:
        data:
          description: List of org connections.
          items:
            $ref: '#/components/schemas/OrgConnection'
          type: array
        meta:
          $ref: '#/components/schemas/OrgConnectionListResponseMeta'
      required:
        - data
      type: object
    OrgConnectionCreateRequest:
      description: Request to create an org connection.
      properties:
        data:
          $ref: '#/components/schemas/OrgConnectionCreate'
      required:
        - data
      type: object
    OrgConnectionResponse:
      description: Response containing a single org connection.
      properties:
        data:
          $ref: '#/components/schemas/OrgConnection'
      required:
        - data
      type: object
    OrgConnectionUpdateRequest:
      description: Request to update an org connection.
      properties:
        data:
          $ref: '#/components/schemas/OrgConnectionUpdate'
      required:
        - data
      type: object
    PermissionsResponse:
      description: Payload with API-returned permissions.
      properties:
        data:
          description: Array of permissions.
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    RestrictionPolicyResponse:
      description: Response containing information about a single restriction policy.
      properties:
        data:
          $ref: '#/components/schemas/RestrictionPolicy'
      required:
        - data
      type: object
    RestrictionPolicyUpdateRequest:
      description: Update request for a restriction policy.
      properties:
        data:
          $ref: '#/components/schemas/RestrictionPolicy'
      required:
        - data
      type: object
    RolesSort:
      default: name
      description: Sorting options for roles.
      enum:
        - name
        - '-name'
        - modified_at
        - '-modified_at'
        - user_count
        - '-user_count'
      type: string
      x-enum-varnames:
        - NAME_ASCENDING
        - NAME_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - USER_COUNT_ASCENDING
        - USER_COUNT_DESCENDING
    RolesResponse:
      description: Response containing information about multiple roles.
      properties:
        data:
          description: Array of returned roles.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    RoleCreateRequest:
      description: Create a role.
      properties:
        data:
          $ref: '#/components/schemas/RoleCreateData'
      required:
        - data
      type: object
    RoleCreateResponse:
      description: Response containing information about a created role.
      properties:
        data:
          $ref: '#/components/schemas/RoleCreateResponseData'
      type: object
    RoleResponse:
      description: Response containing information about a single role.
      properties:
        data:
          $ref: '#/components/schemas/Role'
      type: object
    RoleUpdateRequest:
      description: Update a role.
      properties:
        data:
          $ref: '#/components/schemas/RoleUpdateData'
      required:
        - data
      type: object
    RoleUpdateResponse:
      description: Response containing information about an updated role.
      properties:
        data:
          $ref: '#/components/schemas/RoleUpdateResponseData'
      type: object
    RoleCloneRequest:
      description: Request to create a role by cloning an existing role.
      properties:
        data:
          $ref: '#/components/schemas/RoleClone'
      required:
        - data
      type: object
    RelationshipToPermission:
      description: Relationship to a permissions object.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToPermissionData'
      type: object
    RelationshipToUser:
      description: Relationship to user.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserData'
      required:
        - data
      type: object
    UsersResponse:
      description: Response containing information about multiple users.
      properties:
        data:
          description: Array of returned users.
          items:
            $ref: '#/components/schemas/User'
          type: array
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/UserResponseIncludedItem'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      readOnly: true
      type: object
    IdPMetadataFormData:
      description: The form data submitted to upload IdP metadata
      properties:
        idp_file:
          description: The IdP metadata XML file
          format: binary
          type: string
          x-mimetype: application/xml
      type: object
    ServiceAccountCreateRequest:
      description: Create a service account.
      properties:
        data:
          $ref: '#/components/schemas/ServiceAccountCreateData'
      required:
        - data
      type: object
    UserResponse:
      description: Response containing information about a single user.
      properties:
        data:
          $ref: '#/components/schemas/User'
        included:
          description: Array of objects related to the user.
          items:
            $ref: '#/components/schemas/UserResponseIncludedItem'
          type: array
      type: object
    PartialApplicationKeyResponse:
      description: Response for retrieving a partial application key.
      properties:
        data:
          $ref: '#/components/schemas/PartialApplicationKey'
        included:
          description: Array of objects related to the application key.
          items:
            $ref: '#/components/schemas/ApplicationKeyResponseIncludedItem'
          type: array
      type: object
    ListTeamsSort:
      description: Specifies the order of the returned teams
      enum:
        - name
        - '-name'
        - user_count
        - '-user_count'
      type: string
      x-enum-varnames:
        - NAME
        - _NAME
        - USER_COUNT
        - _USER_COUNT
    ListTeamsInclude:
      description: Included related resources optionally requested.
      enum:
        - team_links
        - user_team_permissions
      type: string
      x-enum-varnames:
        - TEAM_LINKS
        - USER_TEAM_PERMISSIONS
    TeamsField:
      description: Supported teams field.
      enum:
        - id
        - name
        - handle
        - summary
        - description
        - avatar
        - banner
        - visible_modules
        - hidden_modules
        - created_at
        - modified_at
        - user_count
        - link_count
        - team_links
        - user_team_permissions
      type: string
      x-enum-varnames:
        - ID
        - NAME
        - HANDLE
        - SUMMARY
        - DESCRIPTION
        - AVATAR
        - BANNER
        - VISIBLE_MODULES
        - HIDDEN_MODULES
        - CREATED_AT
        - MODIFIED_AT
        - USER_COUNT
        - LINK_COUNT
        - TEAM_LINKS
        - USER_TEAM_PERMISSIONS
    TeamsResponse:
      description: Response with multiple teams
      properties:
        data:
          description: Teams response data
          items:
            $ref: '#/components/schemas/Team'
          type: array
        included:
          description: Resources related to the team
          items:
            $ref: '#/components/schemas/TeamIncluded'
          type: array
        links:
          $ref: '#/components/schemas/TeamsResponseLinks'
        meta:
          $ref: '#/components/schemas/TeamsResponseMeta'
      type: object
    TeamCreateRequest:
      description: Request to create a team
      properties:
        data:
          $ref: '#/components/schemas/TeamCreate'
      required:
        - data
      type: object
    TeamResponse:
      description: Response with a team
      properties:
        data:
          $ref: '#/components/schemas/Team'
      type: object
    TeamSyncRequest:
      description: Team sync request.
      example:
        data:
          attributes:
            source: github
            type: link
          type: team_sync_bulk
      properties:
        data:
          $ref: '#/components/schemas/TeamSyncData'
      required:
        - data
      type: object
    AddMemberTeamRequest:
      description: Request to add a member team to super team's hierarchy
      properties:
        data:
          $ref: '#/components/schemas/MemberTeam'
      required:
        - data
      type: object
    TeamUpdateRequest:
      description: Team update request
      properties:
        data:
          $ref: '#/components/schemas/TeamUpdate'
      required:
        - data
      type: object
    TeamLinksResponse:
      description: Team links response
      properties:
        data:
          description: Team links response data
          items:
            $ref: '#/components/schemas/TeamLink'
          type: array
      type: object
    TeamLinkCreateRequest:
      description: Team link create request
      properties:
        data:
          $ref: '#/components/schemas/TeamLinkCreate'
      required:
        - data
      type: object
    TeamLinkResponse:
      description: Team link response
      properties:
        data:
          $ref: '#/components/schemas/TeamLink'
      type: object
    GetTeamMembershipsSort:
      description: Specifies the order of returned team memberships
      enum:
        - manager_name
        - '-manager_name'
        - name
        - '-name'
        - handle
        - '-handle'
        - email
        - '-email'
      type: string
      x-enum-varnames:
        - MANAGER_NAME
        - _MANAGER_NAME
        - NAME
        - _NAME
        - HANDLE
        - _HANDLE
        - EMAIL
        - _EMAIL
    UserTeamsResponse:
      description: Team memberships response
      properties:
        data:
          description: Team memberships response data
          items:
            $ref: '#/components/schemas/UserTeam'
          type: array
        included:
          description: Resources related to the team memberships
          items:
            $ref: '#/components/schemas/UserTeamIncluded'
          type: array
        links:
          $ref: '#/components/schemas/TeamsResponseLinks'
        meta:
          $ref: '#/components/schemas/TeamsResponseMeta'
      type: object
    UserTeamRequest:
      description: Team membership request
      properties:
        data:
          $ref: '#/components/schemas/UserTeamCreate'
      required:
        - data
      type: object
    UserTeamResponse:
      description: Team membership response
      properties:
        data:
          $ref: '#/components/schemas/UserTeam'
        included:
          description: Resources related to the team memberships
          items:
            $ref: '#/components/schemas/UserTeamIncluded'
          type: array
      type: object
    UserTeamUpdateRequest:
      description: Team membership request
      properties:
        data:
          $ref: '#/components/schemas/UserTeamUpdate'
      required:
        - data
      type: object
    TeamPermissionSettingsResponse:
      description: Team permission settings response
      properties:
        data:
          description: Team permission settings response data
          items:
            $ref: '#/components/schemas/TeamPermissionSetting'
          type: array
      type: object
    TeamPermissionSettingUpdateRequest:
      description: Team permission setting update request
      properties:
        data:
          $ref: '#/components/schemas/TeamPermissionSettingUpdate'
      required:
        - data
      type: object
    TeamPermissionSettingResponse:
      description: Team permission setting response
      properties:
        data:
          $ref: '#/components/schemas/TeamPermissionSetting'
      type: object
    UsageApplicationSecurityMonitoringResponse:
      description: Application Security Monitoring usage response.
      properties:
        data:
          description: Response containing Application Security Monitoring usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    BillingDimensionsMappingResponse:
      description: Billing dimensions mapping response.
      properties:
        data:
          $ref: '#/components/schemas/BillingDimensionsMappingBody'
      type: object
    CostByOrgResponse:
      description: Chargeback Summary response.
      properties:
        data:
          description: Response containing Chargeback Summary.
          items:
            $ref: '#/components/schemas/CostByOrg'
          type: array
      type: object
    HourlyUsageResponse:
      description: Hourly usage response.
      properties:
        data:
          description: Response containing hourly usage.
          items:
            $ref: '#/components/schemas/HourlyUsage'
          type: array
        meta:
          $ref: '#/components/schemas/HourlyUsageMetadata'
      type: object
    UsageLambdaTracedInvocationsResponse:
      description: Lambda Traced Invocations usage response.
      properties:
        data:
          description: Response containing Lambda Traced Invocations usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageObservabilityPipelinesResponse:
      description: Observability Pipelines usage response.
      properties:
        data:
          description: Response containing Observability Pipelines usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    ProjectedCostResponse:
      description: Projected Cost response.
      properties:
        data:
          description: Response containing Projected Cost.
          items:
            $ref: '#/components/schemas/ProjectedCost'
          type: array
      type: object
    UserInvitationsRequest:
      description: Object to invite users to join the organization.
      properties:
        data:
          description: List of user invitations.
          example: []
          items:
            $ref: '#/components/schemas/UserInvitationData'
          type: array
      required:
        - data
      type: object
    UserInvitationsResponse:
      description: User invitations as returned by the API.
      properties:
        data:
          description: Array of user invitations.
          items:
            $ref: '#/components/schemas/UserInvitationResponseData'
          type: array
      type: object
    UserInvitationResponse:
      description: User invitation as returned by the API.
      properties:
        data:
          $ref: '#/components/schemas/UserInvitationResponseData'
      type: object
    QuerySortOrder:
      default: desc
      description: Direction of sort.
      enum:
        - asc
        - desc
      type: string
      x-enum-varnames:
        - ASC
        - DESC
    UserCreateRequest:
      description: Create a user.
      properties:
        data:
          $ref: '#/components/schemas/UserCreateData'
      required:
        - data
      type: object
    UserUpdateRequest:
      description: Update a user.
      properties:
        data:
          $ref: '#/components/schemas/UserUpdateData'
      required:
        - data
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - modified_at
        - '-modified_at'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    PartialAPIKey:
      description: Partial Datadog API key.
      properties:
        attributes:
          $ref: '#/components/schemas/PartialAPIKeyAttributes'
        id:
          description: ID of the API key.
          type: string
        relationships:
          $ref: '#/components/schemas/APIKeyRelationships'
        type:
          $ref: '#/components/schemas/APIKeysType'
      type: object
    APIKeyResponseIncludedItem:
      description: An object related to an API key.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/LeakedKey'
    APIKeysResponseMeta:
      description: Additional information related to api keys response.
      properties:
        max_allowed:
          description: Max allowed number of API keys.
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/APIKeysResponseMetaPage'
      type: object
    APIKeyCreateData:
      description: Object used to create an API key.
      properties:
        attributes:
          $ref: '#/components/schemas/APIKeyCreateAttributes'
        type:
          $ref: '#/components/schemas/APIKeysType'
      required:
        - attributes
        - type
      type: object
    FullAPIKey:
      description: Datadog API key.
      properties:
        attributes:
          $ref: '#/components/schemas/FullAPIKeyAttributes'
        id:
          description: ID of the API key.
          type: string
        relationships:
          $ref: '#/components/schemas/APIKeyRelationships'
        type:
          $ref: '#/components/schemas/APIKeysType'
      type: object
    APIKeyUpdateData:
      description: Object used to update an API key.
      properties:
        attributes:
          $ref: '#/components/schemas/APIKeyUpdateAttributes'
        id:
          description: ID of the API key.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        type:
          $ref: '#/components/schemas/APIKeysType'
      required:
        - attributes
        - id
        - type
      type: object
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    PartialApplicationKey:
      description: Partial Datadog application key.
      properties:
        attributes:
          $ref: '#/components/schemas/PartialApplicationKeyAttributes'
        id:
          description: ID of the application key.
          type: string
        relationships:
          $ref: '#/components/schemas/ApplicationKeyRelationships'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      type: object
    ApplicationKeyResponseIncludedItem:
      description: An object related to an application key.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Role'
        - $ref: '#/components/schemas/LeakedKey'
    ApplicationKeyResponseMeta:
      description: Additional information related to the application key response.
      properties:
        max_allowed_per_user:
          description: Max allowed number of application keys per user.
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/ApplicationKeyResponseMetaPage'
      type: object
    FullApplicationKey:
      description: Datadog application key.
      properties:
        attributes:
          $ref: '#/components/schemas/FullApplicationKeyAttributes'
        id:
          description: ID of the application key.
          type: string
        relationships:
          $ref: '#/components/schemas/ApplicationKeyRelationships'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      type: object
    ApplicationKeyUpdateData:
      description: Object used to update an application key.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationKeyUpdateAttributes'
        id:
          description: ID of the application key.
          example: 00112233-4455-6677-8899-aabbccddeeff
          type: string
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      required:
        - attributes
        - id
        - type
      type: object
    AuditLogsEvent:
      description: >-
        Object description of an Audit Logs event after it is processed and
        stored by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/AuditLogsEventAttributes'
        id:
          description: Unique ID of the event.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/AuditLogsEventType'
      type: object
    AuditLogsResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/audit/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    AuditLogsResponseMetadata:
      description: The metadata associated with a request.
      properties:
        elapsed:
          description: Time elapsed in milliseconds.
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/AuditLogsResponsePage'
        request_id:
          description: The identifier of the request.
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/AuditLogsResponseStatus'
        warnings:
          description: >-
            A list of warnings (non-fatal errors) encountered. Partial results
            may return if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/AuditLogsWarning'
          type: array
      type: object
    AuditLogsQueryFilter:
      description: Search and filter query settings.
      properties:
        from:
          default: now-15m
          description: >-
            Minimum time for the requested events. Supports date, math, and
            regular timestamps (in milliseconds).
          example: now-15m
          type: string
        query:
          default: '*'
          description: Search query following the Audit Logs search syntax.
          example: '@type:session AND @session.type:user'
          type: string
        to:
          default: now
          description: >-
            Maximum time for the requested events. Supports date, math, and
            regular timestamps (in milliseconds).
          example: now
          type: string
      type: object
    AuditLogsQueryOptions:
      description: >-
        Global query options that are used during the query.

        Note: Specify either timezone or time offset, not both. Otherwise, the
        query fails.
      properties:
        time_offset:
          description: Time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    AuditLogsQueryPageOptions:
      description: Paging attributes for listing events.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of events in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    AuthNMapping:
      description: The AuthN Mapping object returned by API.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingAttributes'
        id:
          description: ID of the AuthN Mapping.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        relationships:
          $ref: '#/components/schemas/AuthNMappingRelationships'
        type:
          $ref: '#/components/schemas/AuthNMappingsType'
      required:
        - id
        - type
      type: object
    AuthNMappingIncluded:
      description: Included data in the AuthN Mapping response.
      oneOf:
        - $ref: '#/components/schemas/SAMLAssertionAttribute'
        - $ref: '#/components/schemas/Role'
        - $ref: '#/components/schemas/AuthNMappingTeam'
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    AuthNMappingCreateData:
      description: Data for creating an AuthN Mapping.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingCreateAttributes'
        relationships:
          $ref: '#/components/schemas/AuthNMappingCreateRelationships'
        type:
          $ref: '#/components/schemas/AuthNMappingsType'
      required:
        - type
      type: object
    AuthNMappingUpdateData:
      description: Data for updating an AuthN Mapping.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingUpdateAttributes'
        id:
          description: ID of the AuthN Mapping.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        relationships:
          $ref: '#/components/schemas/AuthNMappingUpdateRelationships'
        type:
          $ref: '#/components/schemas/AuthNMappingsType'
      required:
        - id
        - type
      type: object
    ApplicationKeyCreateData:
      description: Object used to create an application key.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationKeyCreateAttributes'
        type:
          $ref: '#/components/schemas/ApplicationKeysType'
      required:
        - attributes
        - type
      type: object
    CreateDataDeletionRequestBodyData:
      description: Data needed to create a data deletion request.
      properties:
        attributes:
          $ref: '#/components/schemas/CreateDataDeletionRequestBodyAttributes'
        type:
          $ref: '#/components/schemas/CreateDataDeletionRequestBodyDataType'
      required:
        - attributes
        - type
      type: object
    DataDeletionResponseItem:
      description: The created data deletion request information.
      properties:
        attributes:
          $ref: '#/components/schemas/DataDeletionResponseItemAttributes'
        id:
          description: The ID of the created data deletion request.
          example: '1'
          type: string
        type:
          description: The type of the request created.
          example: deletion_request
          type: string
      required:
        - id
        - type
        - attributes
      type: object
    DataDeletionResponseMeta:
      description: The metadata of the data deletion response.
      properties:
        count_product:
          additionalProperties:
            format: int64
            type: integer
          description: The total deletion requests created by product.
          example:
            logs: 8
            rum: 7
          type: object
        count_status:
          additionalProperties:
            format: int64
            type: integer
          description: The total deletion requests created by status.
          example:
            completed: 10
            pending: 5
          type: object
        next_page:
          description: >-
            The next page when searching deletion requests created in the
            current organization.
          example: cGFnZTI=
          type: string
        product:
          description: The product of the deletion request.
          example: logs
          type: string
        request_status:
          description: The status of the executed request.
          example: canceled
          type: string
      type: object
    DomainAllowlistResponseData:
      description: The email domain allowlist response for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/DomainAllowlistResponseDataAttributes'
        id:
          description: The unique identifier of the org.
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/DomainAllowlistType'
      required:
        - type
      type: object
    DomainAllowlist:
      description: The email domain allowlist for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/DomainAllowlistAttributes'
        id:
          description: The unique identifier of the org.
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/DomainAllowlistType'
      required:
        - type
      type: object
    IPAllowlistData:
      description: IP allowlist data.
      properties:
        attributes:
          $ref: '#/components/schemas/IPAllowlistAttributes'
        id:
          description: The unique identifier of the org.
          type: string
        type:
          $ref: '#/components/schemas/IPAllowlistType'
      required:
        - type
      type: object
    OrgConfigRead:
      description: A single Org Config.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConfigReadAttributes'
        id:
          description: A unique identifier for an Org Config.
          example: abcd1234
          type: string
        type:
          $ref: '#/components/schemas/OrgConfigType'
      required:
        - id
        - type
        - attributes
      type: object
    OrgConfigWrite:
      description: An Org Config write operation.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConfigWriteAttributes'
        type:
          $ref: '#/components/schemas/OrgConfigType'
      required:
        - type
        - attributes
      type: object
    OrgConnection:
      description: An org connection.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConnectionAttributes'
        id:
          description: The unique identifier of the org connection.
          example: f9ec96b0-8c8a-4b0a-9b0a-1b2c3d4e5f6a
          format: uuid
          type: string
        relationships:
          $ref: '#/components/schemas/OrgConnectionRelationships'
        type:
          $ref: '#/components/schemas/OrgConnectionType'
      required:
        - id
        - type
        - attributes
        - relationships
      type: object
    OrgConnectionListResponseMeta:
      description: Pagination metadata.
      properties:
        page:
          $ref: '#/components/schemas/OrgConnectionListResponseMetaPage'
      type: object
    OrgConnectionCreate:
      description: Org connection creation data.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConnectionCreateAttributes'
        relationships:
          $ref: '#/components/schemas/OrgConnectionCreateRelationships'
        type:
          $ref: '#/components/schemas/OrgConnectionType'
      required:
        - type
        - attributes
        - relationships
      type: object
    OrgConnectionUpdate:
      description: Org connection update data.
      properties:
        attributes:
          $ref: '#/components/schemas/OrgConnectionUpdateAttributes'
        id:
          description: The unique identifier of the org connection.
          example: f9ec96b0-8c8a-4b0a-9b0a-1b2c3d4e5f6a
          format: uuid
          type: string
        type:
          $ref: '#/components/schemas/OrgConnectionType'
      required:
        - type
        - id
        - attributes
      type: object
    Permission:
      description: Permission object.
      properties:
        attributes:
          $ref: '#/components/schemas/PermissionAttributes'
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      required:
        - type
      type: object
    RestrictionPolicy:
      description: Restriction policy object.
      properties:
        attributes:
          $ref: '#/components/schemas/RestrictionPolicyAttributes'
        id:
          description: >-
            The identifier, always equivalent to the value specified in the
            `resource_id` path parameter.
          example: dashboard:abc-def-ghi
          type: string
        type:
          $ref: '#/components/schemas/RestrictionPolicyType'
      required:
        - type
        - id
        - attributes
      type: object
    Role:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleCreateData:
      description: Data related to the creation of a role.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCreateAttributes'
        relationships:
          $ref: '#/components/schemas/RoleRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - attributes
      type: object
    RoleCreateResponseData:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCreateAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleUpdateData:
      description: Data related to the update of a role.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleUpdateAttributes'
        id:
          description: The unique identifier of the role.
          example: 00000000-0000-1111-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/RoleRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - attributes
        - type
        - id
      type: object
    RoleUpdateResponseData:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleUpdateAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    RoleClone:
      description: Data for the clone role request.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleCloneAttributes'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
        - attributes
      type: object
    RelationshipToPermissionData:
      description: Relationship to permission object.
      properties:
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      type: object
    RelationshipToUserData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    User:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    UserResponseIncludedItem:
      description: An object related to a user.
      oneOf:
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/Permission'
        - $ref: '#/components/schemas/Role'
    ServiceAccountCreateData:
      description: Object to create a service account User.
      properties:
        attributes:
          $ref: '#/components/schemas/ServiceAccountCreateAttributes'
        relationships:
          $ref: '#/components/schemas/UserRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
      type: object
    Team:
      description: A team
      properties:
        attributes:
          $ref: '#/components/schemas/TeamAttributes'
        id:
          description: The team's identifier
          example: aeadc05e-98a8-11ec-ac2c-da7ad0900001
          type: string
        relationships:
          $ref: '#/components/schemas/TeamRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - id
        - type
      type: object
    TeamIncluded:
      description: Included resources related to the team
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/TeamLink'
        - $ref: '#/components/schemas/UserTeamPermission'
    TeamsResponseLinks:
      description: Teams response links.
      properties:
        first:
          description: First link.
          type: string
        last:
          description: Last link.
          nullable: true
          type: string
        next:
          description: Next link.
          type: string
        prev:
          description: Previous link.
          nullable: true
          type: string
        self:
          description: Current link.
          type: string
      type: object
    TeamsResponseMeta:
      description: Teams response metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/TeamsResponseMetaPagination'
      type: object
    TeamCreate:
      description: Team create
      properties:
        attributes:
          $ref: '#/components/schemas/TeamCreateAttributes'
        relationships:
          $ref: '#/components/schemas/TeamCreateRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - type
      type: object
    TeamSyncData:
      description: Team sync data.
      properties:
        attributes:
          $ref: '#/components/schemas/TeamSyncAttributes'
        type:
          $ref: '#/components/schemas/TeamSyncBulkType'
      required:
        - attributes
        - type
      type: object
    MemberTeam:
      description: A member team
      properties:
        id:
          description: The member team's identifier
          example: aeadc05e-98a8-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/MemberTeamType'
      required:
        - id
        - type
      type: object
    TeamUpdate:
      description: Team update request
      properties:
        attributes:
          $ref: '#/components/schemas/TeamUpdateAttributes'
        relationships:
          $ref: '#/components/schemas/TeamUpdateRelationships'
        type:
          $ref: '#/components/schemas/TeamType'
      required:
        - attributes
        - type
      type: object
    TeamLink:
      description: Team link
      properties:
        attributes:
          $ref: '#/components/schemas/TeamLinkAttributes'
        id:
          description: The team link's identifier
          example: b8626d7e-cedd-11eb-abf5-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - attributes
        - id
        - type
      type: object
    TeamLinkCreate:
      description: Team link create
      properties:
        attributes:
          $ref: '#/components/schemas/TeamLinkAttributes'
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - attributes
        - type
      type: object
    UserTeam:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        id:
          description: The ID of a user's relationship with a team
          example: TeamMembership-aeadc05e-98a8-11ec-ac2c-da7ad0900001-38835
          type: string
        relationships:
          $ref: '#/components/schemas/UserTeamRelationships'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - id
        - type
      type: object
    UserTeamIncluded:
      description: Included resources related to the team membership
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/Team'
    UserTeamCreate:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        relationships:
          $ref: '#/components/schemas/UserTeamRelationships'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - type
      type: object
    UserTeamUpdate:
      description: A user's relationship with a team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamAttributes'
        type:
          $ref: '#/components/schemas/UserTeamType'
      required:
        - type
      type: object
    TeamPermissionSetting:
      description: Team permission setting
      properties:
        attributes:
          $ref: '#/components/schemas/TeamPermissionSettingAttributes'
        id:
          description: The team permission setting's identifier
          example: TeamPermission-aeadc05e-98a8-11ec-ac2c-da7ad0900001-edit
          type: string
        type:
          $ref: '#/components/schemas/TeamPermissionSettingType'
      required:
        - id
        - type
      type: object
    TeamPermissionSettingUpdate:
      description: Team permission setting update
      properties:
        attributes:
          $ref: '#/components/schemas/TeamPermissionSettingUpdateAttributes'
        type:
          $ref: '#/components/schemas/TeamPermissionSettingType'
      required:
        - type
      type: object
    UsageDataObject:
      description: Usage data.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageAttributesObject'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    BillingDimensionsMappingBody:
      description: Billing dimensions mapping data.
      items:
        $ref: '#/components/schemas/BillingDimensionsMappingBodyItem'
      type: array
    CostByOrg:
      description: Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/CostByOrgAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/CostByOrgType'
      type: object
    HourlyUsage:
      description: Hourly usage for a product family for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/HourlyUsageAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    HourlyUsageMetadata:
      description: The object containing document metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/HourlyUsagePagination'
      type: object
    ProjectedCost:
      description: Projected Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectedCostAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/ProjectedCostType'
      type: object
    UserInvitationData:
      description: Object to create a user invitation.
      properties:
        relationships:
          $ref: '#/components/schemas/UserInvitationRelationships'
        type:
          $ref: '#/components/schemas/UserInvitationsType'
      required:
        - type
        - relationships
      type: object
    UserInvitationResponseData:
      description: Object of a user invitation returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserInvitationDataAttributes'
        id:
          description: ID of the user invitation.
          type: string
        relationships:
          $ref: '#/components/schemas/UserInvitationRelationships'
        type:
          $ref: '#/components/schemas/UserInvitationsType'
      type: object
    UserCreateData:
      description: Object to create a user.
      properties:
        attributes:
          $ref: '#/components/schemas/UserCreateAttributes'
        relationships:
          $ref: '#/components/schemas/UserRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
      type: object
    UserUpdateData:
      description: Object to update a user.
      properties:
        attributes:
          $ref: '#/components/schemas/UserUpdateAttributes'
        id:
          description: ID of the user.
          example: 00000000-0000-feed-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - attributes
        - type
        - id
      type: object
    PartialAPIKeyAttributes:
      description: Attributes of a partial API key.
      properties:
        category:
          description: The category of the API key.
          type: string
        created_at:
          description: Creation date of the API key.
          example: '2020-11-23T10:00:00.000Z'
          readOnly: true
          type: string
        last4:
          description: The last four characters of the API key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        modified_at:
          description: Date the API key was last modified.
          example: '2020-11-23T10:00:00.000Z'
          readOnly: true
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The remote config read enabled status.
          type: boolean
      type: object
    APIKeyRelationships:
      description: Resources related to the API key.
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        modified_by:
          $ref: '#/components/schemas/NullableRelationshipToUser'
      type: object
    APIKeysType:
      default: api_keys
      description: API Keys resource type.
      enum:
        - api_keys
      example: api_keys
      type: string
      x-enum-varnames:
        - API_KEYS
    LeakedKey:
      description: The definition of LeakedKey object.
      properties:
        attributes:
          $ref: '#/components/schemas/LeakedKeyAttributes'
        id:
          description: The LeakedKey id.
          example: id
          type: string
        type:
          $ref: '#/components/schemas/LeakedKeyType'
      required:
        - attributes
        - id
        - type
      type: object
    APIKeysResponseMetaPage:
      description: Additional information related to the API keys response.
      properties:
        total_filtered_count:
          description: Total filtered application key count.
          format: int64
          type: integer
      type: object
    APIKeyCreateAttributes:
      description: Attributes used to create an API Key.
      properties:
        category:
          description: The APIKeyCreateAttributes category.
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The APIKeyCreateAttributes remote_config_read_enabled.
          type: boolean
      required:
        - name
      type: object
    FullAPIKeyAttributes:
      description: Attributes of a full API key.
      properties:
        category:
          description: The category of the API key.
          type: string
        created_at:
          description: Creation date of the API key.
          example: '2020-11-23T10:00:00.000Z'
          format: date-time
          readOnly: true
          type: string
        key:
          description: The API key.
          readOnly: true
          type: string
        last4:
          description: The last four characters of the API key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        modified_at:
          description: Date the API key was last modified.
          example: '2020-11-23T10:00:00.000Z'
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The remote config read enabled status.
          type: boolean
      type: object
    APIKeyUpdateAttributes:
      description: Attributes used to update an API Key.
      properties:
        category:
          description: The APIKeyUpdateAttributes category.
          type: string
        name:
          description: Name of the API key.
          example: API Key for submitting metrics
          type: string
        remote_config_read_enabled:
          description: The APIKeyUpdateAttributes remote_config_read_enabled.
          type: boolean
      required:
        - name
      type: object
    PartialApplicationKeyAttributes:
      description: Attributes of a partial application key.
      properties:
        created_at:
          description: Creation date of the application key.
          example: '2020-11-23T10:00:00.000Z'
          readOnly: true
          type: string
        last4:
          description: The last four characters of the application key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      type: object
    ApplicationKeyRelationships:
      description: Resources related to the application key.
      properties:
        owned_by:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    ApplicationKeysType:
      default: application_keys
      description: Application Keys resource type.
      enum:
        - application_keys
      example: application_keys
      type: string
      x-enum-varnames:
        - APPLICATION_KEYS
    ApplicationKeyResponseMetaPage:
      description: Additional information related to the application key response.
      properties:
        total_filtered_count:
          description: Total filtered application key count.
          format: int64
          type: integer
      type: object
    FullApplicationKeyAttributes:
      description: Attributes of a full application key.
      properties:
        created_at:
          description: Creation date of the application key.
          example: '2020-11-23T10:00:00.000Z'
          format: date-time
          readOnly: true
          type: string
        key:
          description: The application key.
          readOnly: true
          type: string
        last4:
          description: The last four characters of the application key.
          example: abcd
          maxLength: 4
          minLength: 4
          readOnly: true
          type: string
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      type: object
    ApplicationKeyUpdateAttributes:
      description: Attributes used to update an application Key.
      properties:
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      type: object
    AuditLogsEventAttributes:
      description: JSON object containing all event attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from Audit Logs events.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        message:
          description: Message of the event.
          type: string
        service:
          description: >-
            Name of the application or service generating Audit Logs events.

            This name is used to correlate Audit Logs to APM, so make sure you
            specify the same

            value when you use both products.
          example: web-app
          type: string
        tags:
          description: Array of tags associated with your event.
          example:
            - team:A
          items:
            description: Tag associated with your event.
            type: string
          type: array
        timestamp:
          description: Timestamp of your event.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    AuditLogsEventType:
      default: audit
      description: Type of the event.
      enum:
        - audit
      example: audit
      type: string
      x-enum-varnames:
        - Audit
    AuditLogsResponsePage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same parameters with the addition of
            `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    AuditLogsResponseStatus:
      description: The status of the response.
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    AuditLogsWarning:
      description: Warning message indicating something that went wrong with the query.
      properties:
        code:
          description: Unique code for this type of warning.
          example: unknown_index
          type: string
        detail:
          description: Detailed explanation of this specific warning.
          example: 'indexes: foo, bar'
          type: string
        title:
          description: Short human-readable summary of the warning.
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    AuthNMappingAttributes:
      description: Attributes of AuthN Mapping.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
        created_at:
          description: Creation time of the AuthN Mapping.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last AuthN Mapping modification.
          format: date-time
          readOnly: true
          type: string
        saml_assertion_attribute_id:
          description: The ID of the SAML assertion attribute.
          example: '0'
          type: string
      type: object
    AuthNMappingRelationships:
      description: All relationships associated with AuthN Mapping.
      properties:
        role:
          $ref: '#/components/schemas/RelationshipToRole'
        saml_assertion_attribute:
          $ref: '#/components/schemas/RelationshipToSAMLAssertionAttribute'
        team:
          $ref: '#/components/schemas/RelationshipToTeam'
      type: object
    AuthNMappingsType:
      default: authn_mappings
      description: AuthN Mappings resource type.
      enum:
        - authn_mappings
      example: authn_mappings
      type: string
      x-enum-varnames:
        - AUTHN_MAPPINGS
    SAMLAssertionAttribute:
      description: SAML assertion attribute.
      properties:
        attributes:
          $ref: '#/components/schemas/SAMLAssertionAttributeAttributes'
        id:
          description: The ID of the SAML assertion attribute.
          example: '0'
          type: string
        type:
          $ref: '#/components/schemas/SAMLAssertionAttributesType'
      required:
        - id
        - type
      type: object
    AuthNMappingTeam:
      description: Team.
      properties:
        attributes:
          $ref: '#/components/schemas/AuthNMappingTeamAttributes'
        id:
          description: The ID of the Team.
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamType'
      type: object
    Pagination:
      description: Pagination object.
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    AuthNMappingCreateAttributes:
      description: Key/Value pair of attributes used for create request.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
      type: object
    AuthNMappingCreateRelationships:
      description: Relationship of AuthN Mapping create object to a Role or Team.
      oneOf:
        - $ref: '#/components/schemas/AuthNMappingRelationshipToRole'
        - $ref: '#/components/schemas/AuthNMappingRelationshipToTeam'
    AuthNMappingUpdateAttributes:
      description: Key/Value pair of attributes used for update request.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
      type: object
    AuthNMappingUpdateRelationships:
      description: Relationship of AuthN Mapping update object to a Role or Team.
      oneOf:
        - $ref: '#/components/schemas/AuthNMappingRelationshipToRole'
        - $ref: '#/components/schemas/AuthNMappingRelationshipToTeam'
    ApplicationKeyCreateAttributes:
      description: Attributes used to create an application Key.
      properties:
        name:
          description: Name of the application key.
          example: Application Key for managing dashboards
          type: string
        scopes:
          description: Array of scopes to grant the application key.
          example:
            - dashboards_read
            - dashboards_write
            - dashboards_public_share
          items:
            description: Name of scope.
            type: string
          nullable: true
          type: array
      required:
        - name
      type: object
    CreateDataDeletionRequestBodyAttributes:
      description: Attributes for creating a data deletion request.
      properties:
        from:
          description: Start of requested time window, milliseconds since Unix epoch.
          example: 1672527600000
          format: int64
          type: integer
        indexes:
          description: >-
            List of indexes for the search. If not provided, the search is
            performed in all indexes.
          example:
            - test-index
            - test-index-2
          items:
            description: Individual index.
            type: string
          type: array
        query:
          additionalProperties:
            type: string
          description: Query for creating a data deletion request.
          example:
            host: abc
            service: xyz
          type: object
        to:
          description: End of requested time window, milliseconds since Unix epoch.
          example: 1704063600000
          format: int64
          type: integer
      required:
        - query
        - from
        - to
      type: object
    CreateDataDeletionRequestBodyDataType:
      description: The deletion request type.
      enum:
        - create_deletion_req
      example: create_deletion_req
      type: string
      x-enum-varnames:
        - CREATE_DELETION_REQ
    DataDeletionResponseItemAttributes:
      description: Deletion attribute for data deletion response.
      properties:
        created_at:
          description: Creation time of the deletion request.
          example: '2024-01-01T00:00:00.000000Z'
          type: string
        created_by:
          description: User who created the deletion request.
          example: test.user@datadoghq.com
          type: string
        from_time:
          description: Start of requested time window, milliseconds since Unix epoch.
          example: 1672527600000
          format: int64
          type: integer
        indexes:
          description: >-
            List of indexes for the search. If not provided, the search is
            performed in all indexes.
          example:
            - test-index
            - test-index-2
          items:
            description: Individual index.
            type: string
          type: array
        is_created:
          description: >-
            Whether the deletion request is fully created or not. It can take
            several minutes to fully create a deletion request depending on the
            target query and timeframe.
          example: true
          type: boolean
        org_id:
          description: Organization ID.
          example: 321813
          format: int64
          type: integer
        product:
          description: Product name.
          example: logs
          type: string
        query:
          description: Query for creating a data deletion request.
          example: service:xyz host:abc
          type: string
        starting_at:
          description: Starting time of the process to delete the requested data.
          example: '2024-01-01T02:00:00.000000Z'
          type: string
        status:
          description: Status of the deletion request.
          example: pending
          type: string
        to_time:
          description: End of requested time window, milliseconds since Unix epoch.
          example: 1704063600000
          format: int64
          type: integer
        total_unrestricted:
          description: >-
            Total number of elements to be deleted. Only the data accessible to
            the current user that matches the query and timeframe provided will
            be deleted.
          example: 100
          format: int64
          type: integer
        updated_at:
          description: Update time of the deletion request.
          example: '2024-01-01T00:00:00.000000Z'
          type: string
      required:
        - created_at
        - created_by
        - from_time
        - is_created
        - org_id
        - product
        - query
        - starting_at
        - status
        - to_time
        - total_unrestricted
        - updated_at
      type: object
    DomainAllowlistResponseDataAttributes:
      description: The details of the email domain allowlist.
      properties:
        domains:
          description: The list of domains in the email domain allowlist.
          items:
            type: string
          type: array
        enabled:
          description: Whether the email domain allowlist is enabled for the org.
          type: boolean
      type: object
    DomainAllowlistType:
      default: domain_allowlist
      description: Email domain allowlist allowlist type.
      enum:
        - domain_allowlist
      example: domain_allowlist
      type: string
      x-enum-varnames:
        - DOMAIN_ALLOWLIST
    DomainAllowlistAttributes:
      description: The details of the email domain allowlist.
      properties:
        domains:
          description: The list of domains in the email domain allowlist.
          items:
            type: string
          type: array
        enabled:
          description: Whether the email domain allowlist is enabled for the org.
          type: boolean
      type: object
    IPAllowlistAttributes:
      description: Attributes of the IP allowlist.
      properties:
        enabled:
          description: Whether the IP allowlist logic is enabled or not.
          type: boolean
        entries:
          description: Array of entries in the IP allowlist.
          items:
            $ref: '#/components/schemas/IPAllowlistEntry'
          type: array
      type: object
    IPAllowlistType:
      default: ip_allowlist
      description: IP allowlist type.
      enum:
        - ip_allowlist
      example: ip_allowlist
      type: string
      x-enum-varnames:
        - IP_ALLOWLIST
    OrgConfigReadAttributes:
      description: Readable attributes of an Org Config.
      properties:
        description:
          description: The description of an Org Config.
          example: Frobulate the turbo encabulator manifold
          type: string
        modified_at:
          description: The timestamp of the last Org Config update (if any).
          format: date-time
          nullable: true
          type: string
        name:
          description: The machine-friendly name of an Org Config.
          example: monitor_timezone
          type: string
        value:
          description: The value of an Org Config.
        value_type:
          description: The type of an Org Config value.
          example: bool
          type: string
      required:
        - name
        - description
        - value_type
        - value
      type: object
    OrgConfigType:
      description: Data type of an Org Config.
      enum:
        - org_configs
      example: org_configs
      type: string
      x-enum-varnames:
        - ORG_CONFIGS
    OrgConfigWriteAttributes:
      description: Writable attributes of an Org Config.
      properties:
        value:
          description: The value of an Org Config.
      required:
        - value
      type: object
    OrgConnectionAttributes:
      description: Org connection attributes.
      properties:
        connection_types:
          description: List of connection types.
          example:
            - logs
            - metrics
          items:
            $ref: '#/components/schemas/OrgConnectionTypeEnum'
          type: array
        created_at:
          description: Timestamp when the connection was created.
          example: '2023-01-01T12:00:00Z'
          format: date-time
          type: string
      required:
        - connection_types
        - created_at
      type: object
    OrgConnectionRelationships:
      description: Related organizations and user.
      properties:
        created_by:
          $ref: '#/components/schemas/OrgConnectionUserRelationship'
        sink_org:
          $ref: '#/components/schemas/OrgConnectionOrgRelationship'
        source_org:
          $ref: '#/components/schemas/OrgConnectionOrgRelationship'
      type: object
    OrgConnectionType:
      description: Org connection type.
      enum:
        - org_connection
      example: org_connection
      type: string
      x-enum-varnames:
        - ORG_CONNECTION
    OrgConnectionListResponseMetaPage:
      description: Page information.
      properties:
        total_count:
          description: Total number of org connections.
          example: 0
          format: int64
          type: integer
        total_filtered_count:
          description: Total number of org connections matching the filter.
          example: 0
          format: int64
          type: integer
      type: object
    OrgConnectionCreateAttributes:
      description: Attributes for creating an org connection.
      properties:
        connection_types:
          description: List of connection types to establish.
          example:
            - logs
          items:
            $ref: '#/components/schemas/OrgConnectionTypeEnum'
          minItems: 1
          type: array
      required:
        - connection_types
      type: object
    OrgConnectionCreateRelationships:
      description: Relationships for org connection creation.
      properties:
        sink_org:
          $ref: '#/components/schemas/OrgConnectionOrgRelationship'
      required:
        - sink_org
      type: object
    OrgConnectionUpdateAttributes:
      description: Attributes for updating an org connection.
      properties:
        connection_types:
          description: Updated list of connection types.
          example:
            - logs
            - metrics
          items:
            $ref: '#/components/schemas/OrgConnectionTypeEnum'
          minItems: 1
          type: array
      required:
        - connection_types
      type: object
    PermissionAttributes:
      description: Attributes of a permission.
      properties:
        created:
          description: Creation time of the permission.
          format: date-time
          type: string
        description:
          description: Description of the permission.
          type: string
        display_name:
          description: Displayed name for the permission.
          type: string
        display_type:
          description: Display type.
          type: string
        group_name:
          description: Name of the permission group.
          type: string
        name:
          description: Name of the permission.
          type: string
        restricted:
          description: Whether or not the permission is restricted.
          type: boolean
      type: object
    PermissionsType:
      default: permissions
      description: Permissions resource type.
      enum:
        - permissions
      example: permissions
      type: string
      x-enum-varnames:
        - PERMISSIONS
    RestrictionPolicyAttributes:
      description: Restriction policy attributes.
      example:
        bindings: []
      properties:
        bindings:
          description: An array of bindings.
          items:
            $ref: '#/components/schemas/RestrictionPolicyBinding'
          type: array
      required:
        - bindings
      type: object
    RestrictionPolicyType:
      default: restriction_policy
      description: Restriction policy type.
      enum:
        - restriction_policy
      example: restriction_policy
      type: string
      x-enum-varnames:
        - RESTRICTION_POLICY
    RoleAttributes:
      description: Attributes of the role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: >-
            The name of the role. The name is neither unique nor a stable
            identifier of the role.
          type: string
        user_count:
          description: Number of users with that role.
          format: int64
          readOnly: true
          type: integer
      type: object
    RoleResponseRelationships:
      description: Relationships of the role object returned by the API.
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
      type: object
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    RoleCreateAttributes:
      description: Attributes of the created role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          example: developers
          type: string
      required:
        - name
      type: object
    RoleRelationships:
      description: Relationships of the role object.
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
      type: object
    RoleUpdateAttributes:
      description: Attributes of the role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the role.
          type: string
        user_count:
          description: The user count.
          format: int32
          maximum: 2147483647
          type: integer
      type: object
    RoleCloneAttributes:
      description: Attributes required to create a new role by cloning an existing one.
      properties:
        name:
          description: Name of the new role that is cloned.
          example: cloned-role
          type: string
      required:
        - name
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    UserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        mfa_enabled:
          description: If user has MFA enabled.
          readOnly: true
          type: boolean
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        service_account:
          description: Whether the user is a service account.
          type: boolean
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    Organization:
      description: Organization object.
      properties:
        attributes:
          $ref: '#/components/schemas/OrganizationAttributes'
        id:
          description: ID of the organization.
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - type
      type: object
    ServiceAccountCreateAttributes:
      description: Attributes of the created user.
      properties:
        email:
          description: The email of the user.
          example: jane.doe@example.com
          type: string
        name:
          description: The name of the user.
          type: string
        service_account:
          description: Whether the user is a service account. Must be true.
          example: true
          type: boolean
        title:
          description: The title of the user.
          type: string
      required:
        - email
        - service_account
      type: object
    UserRelationships:
      description: Relationships of the user object.
      properties:
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    TeamAttributes:
      description: Team attributes
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        created_at:
          description: Creation date of the team
          format: date-time
          type: string
        description:
          description: Free-form markdown description/content for the team's homepage
          nullable: true
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        link_count:
          description: The number of links belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        modified_at:
          description: Modification date of the team
          format: date-time
          type: string
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        summary:
          description: A brief summary of the team, derived from the `description`
          maxLength: 120
          nullable: true
          type: string
        user_count:
          description: The number of users belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamRelationships:
      description: Resources related to a team
      properties:
        team_links:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
        user_team_permissions:
          $ref: '#/components/schemas/RelationshipToUserTeamPermission'
      type: object
    TeamType:
      default: team
      description: Team type
      enum:
        - team
      example: team
      type: string
      x-enum-varnames:
        - TEAM
    UserTeamPermission:
      description: A user's permissions for a given team
      properties:
        attributes:
          $ref: '#/components/schemas/UserTeamPermissionAttributes'
        id:
          description: The user team permission's identifier
          example: UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
          type: string
        type:
          $ref: '#/components/schemas/UserTeamPermissionType'
      required:
        - id
        - type
      type: object
    TeamsResponseMetaPagination:
      description: Teams response metadata.
      properties:
        first_offset:
          description: The first offset.
          format: int64
          type: integer
        last_offset:
          description: The last offset.
          format: int64
          type: integer
        limit:
          description: Pagination limit.
          format: int64
          type: integer
        next_offset:
          description: The next offset.
          format: int64
          type: integer
        offset:
          description: The offset.
          format: int64
          type: integer
        prev_offset:
          description: The previous offset.
          format: int64
          type: integer
        total:
          description: Total results.
          format: int64
          type: integer
        type:
          description: Offset type.
          type: string
      type: object
    TeamCreateAttributes:
      description: Team creation attributes
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        description:
          description: Free-form markdown description/content for the team's homepage
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamCreateRelationships:
      description: Relationships formed with the team on creation
      properties:
        users:
          $ref: '#/components/schemas/RelationshipToUsers'
      type: object
    TeamSyncAttributes:
      description: Team sync attributes.
      properties:
        source:
          $ref: '#/components/schemas/TeamSyncAttributesSource'
        type:
          $ref: '#/components/schemas/TeamSyncAttributesType'
      required:
        - source
        - type
      type: object
    TeamSyncBulkType:
      description: Team sync bulk type.
      enum:
        - team_sync_bulk
      example: team_sync_bulk
      type: string
      x-enum-varnames:
        - TEAM_SYNC_BULK
    MemberTeamType:
      default: member_teams
      description: Member team type
      enum:
        - member_teams
      example: member_teams
      type: string
      x-enum-varnames:
        - MEMBER_TEAMS
    TeamUpdateAttributes:
      description: Team update attributes
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        description:
          description: Free-form markdown description/content for the team's homepage
          type: string
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        hidden_modules:
          description: Collection of hidden modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        visible_modules:
          description: Collection of visible modules for the team
          items:
            description: String identifier of the module
            type: string
          type: array
      required:
        - handle
        - name
      type: object
    TeamUpdateRelationships:
      description: Team update relationships
      properties:
        team_links:
          $ref: '#/components/schemas/RelationshipToTeamLinks'
      type: object
    TeamLinkAttributes:
      description: Team link attributes
      properties:
        label:
          description: The link's label
          example: Link label
          maxLength: 256
          type: string
        position:
          description: The link's position, used to sort links for the team
          format: int32
          maximum: 2147483647
          type: integer
        team_id:
          description: ID of the team the link is associated with
          readOnly: true
          type: string
        url:
          description: The URL for the link
          example: https://example.com
          type: string
      required:
        - label
        - url
      type: object
    TeamLinkType:
      default: team_links
      description: Team link type
      enum:
        - team_links
      example: team_links
      type: string
      x-enum-varnames:
        - TEAM_LINKS
    UserTeamAttributes:
      description: Team membership attributes
      properties:
        provisioned_by:
          description: >-
            The mechanism responsible for provisioning the team relationship.

            Possible values: null for added by a user, "service_account" if
            added by a service account, and "saml_mapping" if provisioned via
            SAML mapping.
          nullable: true
          readOnly: true
          type: string
        provisioned_by_id:
          description: >-
            UUID of the User or Service Account who provisioned this team
            membership, or null if provisioned via SAML mapping.
          nullable: true
          readOnly: true
          type: string
        role:
          $ref: '#/components/schemas/UserTeamRole'
      type: object
    UserTeamRelationships:
      description: Relationship between membership and a user
      properties:
        team:
          $ref: '#/components/schemas/RelationshipToUserTeamTeam'
        user:
          $ref: '#/components/schemas/RelationshipToUserTeamUser'
      type: object
    UserTeamType:
      default: team_memberships
      description: Team membership type
      enum:
        - team_memberships
      example: team_memberships
      type: string
      x-enum-varnames:
        - TEAM_MEMBERSHIPS
    TeamPermissionSettingAttributes:
      description: Team permission setting attributes
      properties:
        action:
          $ref: '#/components/schemas/TeamPermissionSettingSerializerAction'
        editable:
          description: >-
            Whether or not the permission setting is editable by the current
            user
          readOnly: true
          type: boolean
        options:
          $ref: '#/components/schemas/TeamPermissionSettingValues'
        title:
          description: The team permission name
          readOnly: true
          type: string
        value:
          $ref: '#/components/schemas/TeamPermissionSettingValue'
      type: object
    TeamPermissionSettingType:
      default: team_permission_settings
      description: Team permission setting type
      enum:
        - team_permission_settings
      example: team_permission_settings
      type: string
      x-enum-varnames:
        - TEAM_PERMISSION_SETTINGS
    TeamPermissionSettingUpdateAttributes:
      description: Team permission setting update attributes
      properties:
        value:
          $ref: '#/components/schemas/TeamPermissionSettingValue'
      type: object
    UsageAttributesObject:
      description: Usage attributes data.
      properties:
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        timeseries:
          description: List of usage data reported for each requested hour.
          items:
            $ref: '#/components/schemas/UsageTimeSeriesObject'
          type: array
        usage_type:
          $ref: '#/components/schemas/HourlyUsageType'
      type: object
    UsageTimeSeriesType:
      default: usage_timeseries
      description: Type of usage data.
      enum:
        - usage_timeseries
      example: usage_timeseries
      type: string
      x-enum-varnames:
        - USAGE_TIMESERIES
    BillingDimensionsMappingBodyItem:
      description: The mapping data for each billing dimension.
      properties:
        attributes:
          $ref: '#/components/schemas/BillingDimensionsMappingBodyItemAttributes'
        id:
          description: ID of the billing dimension.
          type: string
        type:
          $ref: '#/components/schemas/ActiveBillingDimensionsType'
      type: object
    CostByOrgAttributes:
      description: Cost attributes data.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        total_cost:
          description: The total cost of products for the month.
          format: double
          type: number
      type: object
    CostByOrgType:
      default: cost_by_org
      description: Type of cost data.
      enum:
        - cost_by_org
      example: cost_by_org
      type: string
      x-enum-varnames:
        - COST_BY_ORG
    HourlyUsageAttributes:
      description: >-
        Attributes of hourly usage for a product family for an org for a time
        period.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        measurements:
          description: >-
            List of the measured usage values for the product family for the org
            for the time period.
          items:
            $ref: '#/components/schemas/HourlyUsageMeasurement'
          type: array
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        timestamp:
          description: Datetime in ISO-8601 format, UTC. The hour for the usage.
          format: date-time
          type: string
      type: object
    HourlyUsagePagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: >-
            The cursor to get the next results (if any). To make the next
            request, use the same parameters and add `next_record_id`.
          nullable: true
          type: string
      type: object
    ProjectedCostAttributes:
      description: Projected Cost attributes data.
      properties:
        account_name:
          description: The account name.
          type: string
        account_public_id:
          description: The account public ID.
          type: string
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        projected_total_cost:
          description: The total projected cost of products for the month.
          format: double
          type: number
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
      type: object
    ProjectedCostType:
      default: projected_cost
      description: Type of cost data.
      enum:
        - projected_cost
      example: projected_cost
      type: string
      x-enum-varnames:
        - PROJECt_COST
    UserInvitationRelationships:
      description: Relationships data for user invitation.
      properties:
        user:
          $ref: '#/components/schemas/RelationshipToUser'
      required:
        - user
      type: object
    UserInvitationsType:
      default: user_invitations
      description: User invitations type.
      enum:
        - user_invitations
      example: user_invitations
      type: string
      x-enum-varnames:
        - USER_INVITATIONS
    UserInvitationDataAttributes:
      description: Attributes of a user invitation.
      properties:
        created_at:
          description: Creation time of the user invitation.
          format: date-time
          type: string
        expires_at:
          description: Time of invitation expiration.
          format: date-time
          type: string
        invite_type:
          description: Type of invitation.
          type: string
        uuid:
          description: UUID of the user invitation.
          type: string
      type: object
    UserCreateAttributes:
      description: Attributes of the created user.
      properties:
        email:
          description: The email of the user.
          example: jane.doe@example.com
          type: string
        name:
          description: The name of the user.
          type: string
        title:
          description: The title of the user.
          type: string
      required:
        - email
      type: object
    UserUpdateAttributes:
      description: Attributes of the edited user.
      properties:
        disabled:
          description: If the user is enabled or disabled.
          type: boolean
        email:
          description: The email of the user.
          type: string
        name:
          description: The name of the user.
          type: string
      type: object
    NullableRelationshipToUser:
      description: Relationship to user.
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/NullableRelationshipToUserData'
      required:
        - data
      type: object
    LeakedKeyAttributes:
      description: The definition of LeakedKeyAttributes object.
      properties:
        date:
          description: The LeakedKeyAttributes date.
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        leak_source:
          description: The LeakedKeyAttributes leak_source.
          type: string
      required:
        - date
      type: object
    LeakedKeyType:
      default: leaked_keys
      description: The definition of LeakedKeyType object.
      enum:
        - leaked_keys
      example: leaked_keys
      type: string
      x-enum-varnames:
        - LEAKED_KEYS
    RelationshipToRole:
      description: Relationship to role.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToRoleData'
      type: object
    RelationshipToSAMLAssertionAttribute:
      description: AuthN Mapping relationship to SAML Assertion Attribute.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToSAMLAssertionAttributeData'
      required:
        - data
      type: object
    RelationshipToTeam:
      description: Relationship to team.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToTeamData'
      type: object
    SAMLAssertionAttributeAttributes:
      description: Key/Value pair of attributes used in SAML assertion attributes.
      properties:
        attribute_key:
          description: >-
            Key portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: member-of
          type: string
        attribute_value:
          description: >-
            Value portion of a key/value pair of the attribute sent from the
            Identity Provider.
          example: Development
          type: string
      type: object
    SAMLAssertionAttributesType:
      default: saml_assertion_attributes
      description: SAML assertion attributes resource type.
      enum:
        - saml_assertion_attributes
      example: saml_assertion_attributes
      type: string
      x-enum-varnames:
        - SAML_ASSERTION_ATTRIBUTES
    AuthNMappingTeamAttributes:
      description: Team attributes.
      properties:
        avatar:
          description: >-
            Unicode representation of the avatar for the team, limited to a
            single grapheme
          example: 🥑
          nullable: true
          type: string
        banner:
          description: Banner selection for the team
          format: int64
          nullable: true
          type: integer
        handle:
          description: The team's identifier
          example: example-team
          maxLength: 195
          type: string
        link_count:
          description: The number of links belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
        name:
          description: The name of the team
          example: Example Team
          maxLength: 200
          type: string
        summary:
          description: A brief summary of the team, derived from the `description`
          maxLength: 120
          nullable: true
          type: string
        user_count:
          description: The number of users belonging to the team
          format: int32
          maximum: 2147483647
          readOnly: true
          type: integer
      type: object
    AuthNMappingRelationshipToRole:
      description: Relationship of AuthN Mapping to a Role.
      properties:
        role:
          $ref: '#/components/schemas/RelationshipToRole'
      required:
        - role
      type: object
    AuthNMappingRelationshipToTeam:
      description: Relationship of AuthN Mapping to a Team.
      properties:
        team:
          $ref: '#/components/schemas/RelationshipToTeam'
      required:
        - team
      type: object
    IPAllowlistEntry:
      description: IP allowlist entry object.
      properties:
        data:
          $ref: '#/components/schemas/IPAllowlistEntryData'
      required:
        - data
      type: object
    OrgConnectionTypeEnum:
      description: Available connection types between organizations.
      enum:
        - logs
        - metrics
      example: logs
      type: string
      x-enum-varnames:
        - LOGS
        - METRICS
    OrgConnectionUserRelationship:
      description: User relationship.
      properties:
        data:
          $ref: '#/components/schemas/OrgConnectionUserRelationshipData'
      type: object
    OrgConnectionOrgRelationship:
      description: Org relationship.
      properties:
        data:
          $ref: '#/components/schemas/OrgConnectionOrgRelationshipData'
      type: object
    RestrictionPolicyBinding:
      description: Specifies which principals are associated with a relation.
      properties:
        principals:
          description: >-
            An array of principals. A principal is a subject or group of
            subjects.

            Each principal is formatted as `type:id`. Supported types: `role`,
            `team`, `user`, and `org`.

            The org ID can be obtained through the api/v2/current_user API.

            The user principal type accepts service account IDs.
          example:
            - role:00000000-0000-1111-0000-000000000000
          items:
            description: >-
              Subject or group of subjects. Each principal is formatted as
              `type:id`.

              Supported types: `role`, `team`, `user`, and `org`.

              The org ID can be obtained through the api/v2/current_user API.

              The user principal type accepts service account IDs.
            type: string
          type: array
        relation:
          description: The role/level of access.
          example: editor
          type: string
      required:
        - relation
        - principals
      type: object
    RelationshipToPermissions:
      description: Relationship to multiple permissions objects.
      properties:
        data:
          description: Relationships to permission objects.
          items:
            $ref: '#/components/schemas/RelationshipToPermissionData'
          type: array
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      properties:
        data:
          description: An array containing type and the unique identifier of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    OrganizationAttributes:
      description: Attributes of the organization.
      properties:
        created_at:
          description: Creation time of the organization.
          format: date-time
          type: string
        description:
          description: Description of the organization.
          type: string
        disabled:
          description: Whether or not the organization is disabled.
          type: boolean
        modified_at:
          description: Time of last organization modification.
          format: date-time
          type: string
        name:
          description: Name of the organization.
          type: string
        public_id:
          description: Public ID of the organization.
          type: string
        sharing:
          description: Sharing type of the organization.
          type: string
        url:
          description: URL of the site that this organization exists at.
          type: string
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    RelationshipToTeamLinks:
      description: Relationship between a team and a team link
      properties:
        data:
          description: Related team links
          items:
            $ref: '#/components/schemas/RelationshipToTeamLinkData'
          type: array
        links:
          $ref: '#/components/schemas/TeamRelationshipsLinks'
      type: object
    RelationshipToUserTeamPermission:
      description: Relationship between a user team permission and a team
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamPermissionData'
        links:
          $ref: '#/components/schemas/TeamRelationshipsLinks'
      type: object
    UserTeamPermissionAttributes:
      description: User team permission attributes
      properties:
        permissions:
          description: >-
            Object of team permission actions and boolean values that a logged
            in user can perform on this team.
          readOnly: true
          type: object
      type: object
    UserTeamPermissionType:
      default: user_team_permissions
      description: User team permission type
      enum:
        - user_team_permissions
      example: user_team_permissions
      type: string
      x-enum-varnames:
        - USER_TEAM_PERMISSIONS
    TeamSyncAttributesSource:
      description: >-
        The external source platform for team synchronization. Only "github" is
        supported.
      enum:
        - github
      example: github
      type: string
      x-enum-varnames:
        - GITHUB
    TeamSyncAttributesType:
      description: >-
        The type of synchronization operation. Only "link" is supported, which
        links existing teams by matching names.
      enum:
        - link
      example: link
      type: string
      x-enum-varnames:
        - LINK
    UserTeamRole:
      description: The user's role within the team
      enum:
        - admin
      nullable: true
      type: string
      x-enum-varnames:
        - ADMIN
    RelationshipToUserTeamTeam:
      description: Relationship between team membership and team
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamTeamData'
      required:
        - data
      type: object
    RelationshipToUserTeamUser:
      description: Relationship between team membership and user
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserTeamUserData'
      required:
        - data
      type: object
    TeamPermissionSettingSerializerAction:
      description: The identifier for the action
      enum:
        - manage_membership
        - edit
      readOnly: true
      type: string
      x-enum-varnames:
        - MANAGE_MEMBERSHIP
        - EDIT
    TeamPermissionSettingValues:
      description: Possible values for action
      items:
        $ref: '#/components/schemas/TeamPermissionSettingValue'
      readOnly: true
      type: array
    TeamPermissionSettingValue:
      description: What type of user is allowed to perform the specified action
      enum:
        - admins
        - members
        - organization
        - user_access_manage
        - teams_manage
      type: string
      x-enum-varnames:
        - ADMINS
        - MEMBERS
        - ORGANIZATION
        - USER_ACCESS_MANAGE
        - TEAMS_MANAGE
    UsageTimeSeriesObject:
      description: Usage timeseries data.
      properties:
        timestamp:
          description: Datetime in ISO-8601 format, UTC. The hour for the usage.
          format: date-time
          type: string
        value:
          description: >-
            Contains the number measured for the given usage_type during the
            hour.
          format: int64
          nullable: true
          type: integer
      type: object
    HourlyUsageType:
      description: Usage type that is being measured.
      enum:
        - app_sec_host_count
        - observability_pipelines_bytes_processed
        - lambda_traced_invocations_count
      example: observability_pipelines_bytes_processed
      type: string
      x-enum-varnames:
        - APP_SEC_HOST_COUNT
        - OBSERVABILITY_PIPELINES_BYTES_PROCESSSED
        - LAMBDA_TRACED_INVOCATIONS_COUNT
    BillingDimensionsMappingBodyItemAttributes:
      description: Mapping of billing dimensions to endpoint keys.
      properties:
        endpoints:
          description: >-
            List of supported endpoints with their keys mapped to the
            billing_dimension.
          items:
            $ref: >-
              #/components/schemas/BillingDimensionsMappingBodyItemAttributesEndpointsItems
          type: array
        in_app_label:
          description: Label used for the billing dimension in the Plan & Usage charts.
          example: APM Hosts
          type: string
        timestamp:
          description: >-
            Month in ISO-8601 format, UTC, and precise to the second:
            `[YYYY-MM-DDThh:mm:ss]`.
          format: date-time
          type: string
      type: object
    ActiveBillingDimensionsType:
      default: billing_dimensions
      description: Type of active billing dimensions data.
      enum:
        - billing_dimensions
      type: string
      x-enum-varnames:
        - BILLING_DIMENSIONS
    ChargebackBreakdown:
      description: Charges breakdown.
      properties:
        charge_type:
          description: The type of charge for a particular product.
          example: on_demand
          type: string
        cost:
          description: >-
            The cost for a particular product and charge type during a given
            month.
          format: double
          type: number
        product_name:
          description: The product for which cost is being reported.
          example: infra_host
          type: string
      type: object
    HourlyUsageMeasurement:
      description: Usage amount for a given usage type.
      properties:
        usage_type:
          description: Type of usage.
          type: string
        value:
          description: >-
            Contains the number measured for the given usage_type during the
            hour.
          format: int64
          nullable: true
          type: integer
      type: object
    NullableRelationshipToUserData:
      description: Relationship to user object.
      nullable: true
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    RelationshipToSAMLAssertionAttributeData:
      description: Data of AuthN Mapping relationship to SAML Assertion Attribute.
      properties:
        id:
          description: The ID of the SAML assertion attribute.
          example: '0'
          type: string
        type:
          $ref: '#/components/schemas/SAMLAssertionAttributesType'
      required:
        - id
        - type
      type: object
    RelationshipToTeamData:
      description: Relationship to Team object.
      properties:
        id:
          description: The unique identifier of the team.
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamType'
      type: object
    IPAllowlistEntryData:
      description: Data of the IP allowlist entry object.
      properties:
        attributes:
          $ref: '#/components/schemas/IPAllowlistEntryAttributes'
        id:
          description: The unique identifier of the IP allowlist entry.
          type: string
        type:
          $ref: '#/components/schemas/IPAllowlistEntryType'
      required:
        - type
      type: object
    OrgConnectionUserRelationshipData:
      description: The data for a user relationship.
      properties:
        id:
          description: User UUID.
          example: usr123abc456
          type: string
        name:
          description: User name.
          example: John Doe
          type: string
        type:
          $ref: '#/components/schemas/OrgConnectionUserRelationshipDataType'
      type: object
    OrgConnectionOrgRelationshipData:
      description: The definition of `OrgConnectionOrgRelationshipData` object.
      properties:
        id:
          description: Org UUID.
          example: f9ec96b0-8c8a-4b0a-9b0a-1b2c3d4e5f6a
          type: string
        name:
          description: Org name.
          example: Example Org
          type: string
        type:
          $ref: '#/components/schemas/OrgConnectionOrgRelationshipDataType'
      type: object
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToTeamLinkData:
      description: Relationship between a link and a team
      properties:
        id:
          description: The team link's identifier
          example: f9bb8444-af7f-11ec-ac2c-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/TeamLinkType'
      required:
        - id
        - type
      type: object
    TeamRelationshipsLinks:
      description: Links attributes.
      properties:
        related:
          description: Related link.
          example: /api/v2/team/c75a4a8e-20c7-11ee-a3a5-da7ad0900002/links
          type: string
      type: object
    RelationshipToUserTeamPermissionData:
      description: Related user team permission data
      properties:
        id:
          description: The ID of the user team permission
          example: UserTeamPermissions-aeadc05e-98a8-11ec-ac2c-da7ad0900001-416595
          type: string
        type:
          $ref: '#/components/schemas/UserTeamPermissionType'
      required:
        - id
        - type
      type: object
    RelationshipToUserTeamTeamData:
      description: The team associated with the membership
      properties:
        id:
          description: The ID of the team associated with the membership
          example: d7e15d9d-d346-43da-81d8-3d9e71d9a5e9
          type: string
        type:
          $ref: '#/components/schemas/UserTeamTeamType'
      required:
        - id
        - type
      type: object
    RelationshipToUserTeamUserData:
      description: A user's relationship with a team
      properties:
        id:
          description: The ID of the user associated with the team
          example: b8626d7e-cedd-11eb-abf5-da7ad0900001
          type: string
        type:
          $ref: '#/components/schemas/UserTeamUserType'
      required:
        - id
        - type
      type: object
    BillingDimensionsMappingBodyItemAttributesEndpointsItems:
      description: An endpoint's keys mapped to the billing_dimension.
      properties:
        id:
          description: The URL for the endpoint.
          example: api/v1/usage/billable-summary
          type: string
        keys:
          description: The billing dimension.
          example:
            - apm_host_top99p
            - apm_host_sum
          items:
            example: apm_host_top99p
            type: string
          type: array
        status:
          $ref: >-
            #/components/schemas/BillingDimensionsMappingBodyItemAttributesEndpointsItemsStatus
      type: object
    IPAllowlistEntryAttributes:
      description: Attributes of the IP allowlist entry.
      properties:
        cidr_block:
          description: The CIDR block describing the IP range of the entry.
          type: string
        created_at:
          description: Creation time of the entry.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last entry modification.
          format: date-time
          readOnly: true
          type: string
        note:
          description: A note describing the IP allowlist entry.
          type: string
      type: object
    IPAllowlistEntryType:
      default: ip_allowlist_entry
      description: IP allowlist Entry type.
      enum:
        - ip_allowlist_entry
      example: ip_allowlist_entry
      type: string
      x-enum-varnames:
        - IP_ALLOWLIST_ENTRY
    OrgConnectionUserRelationshipDataType:
      description: The type of the user relationship.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    OrgConnectionOrgRelationshipDataType:
      description: The type of the organization relationship.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    UserTeamTeamType:
      default: team
      description: User team team type
      enum:
        - team
      example: team
      type: string
      x-enum-varnames:
        - TEAM
    UserTeamUserType:
      default: users
      description: User team user type
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    BillingDimensionsMappingBodyItemAttributesEndpointsItemsStatus:
      description: Denotes whether mapping keys were available for this endpoint.
      enum:
        - OK
        - NOT_FOUND
      type: string
      x-enum-varnames:
        - OK
        - NOT_FOUND
  responses:
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Unauthorized
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
  parameters:
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: page[size]
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    PageNumber:
      description: Specific page number to return.
      in: query
      name: page[number]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      in: query
      name: filter[created_at][start]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      in: query
      name: filter[created_at][end]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      in: query
      name: filter[modified_at][start]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      in: query
      name: filter[modified_at][end]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyIncludeParameter:
      description: >-
        Comma separated list of resource paths for related resources to include
        in the response. Supported resource paths are `created_by` and
        `modified_by`.
      in: query
      name: include
      required: false
      schema:
        example: created_by,modified_by
        type: string
    APIKeyReadConfigReadEnabledParameter:
      description: Filter API keys by remote config read enabled status.
      in: query
      name: filter[remote_config_read_enabled]
      required: false
      schema:
        type: boolean
    APIKeyCategoryParameter:
      description: Filter API keys by category.
      in: query
      name: filter[category]
      required: false
      schema:
        type: string
    APIKeyId:
      description: The ID of the API key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified date.
      in: query
      name: filter[created_at][start]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified date.
      in: query
      name: filter[created_at][end]
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyIncludeParameter:
      description: >-
        Resource path for related resources to include in the response. Only
        `owned_by` is supported.
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
    ApplicationKeyID:
      description: The ID of the application key.
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    AuthNMappingID:
      description: The UUID of the AuthN Mapping.
      in: path
      name: authn_mapping_id
      required: true
      schema:
        type: string
    ProductName:
      description: Name of the product to be deleted, either `logs` or `rum`.
      in: path
      name: product
      required: true
      schema:
        type: string
    RequestId:
      description: ID of the deletion request.
      in: path
      name: id
      required: true
      schema:
        type: string
    OrgConfigName:
      description: The name of an Org Config.
      in: path
      name: org_config_name
      required: true
      schema:
        example: monitor_timezone
        type: string
    OrgConnectionId:
      description: The unique identifier of the org connection.
      in: path
      name: connection_id
      required: true
      schema:
        example: f9ec96b0-8c8a-4b0a-9b0a-1b2c3d4e5f6a
        format: uuid
        type: string
    ResourceID:
      description: >-
        Identifier, formatted as `type:id`. Supported types: `dashboard`,
        `integration-service`, `integration-webhook`, `notebook`,
        `reference-table`, `security-rule`, `slo`, `workflow`,
        `app-builder-app`, `connection`, `connection-group`, `rum-application`,
        `cross-org-connection`, `spreadsheet`, `on-call-schedule`,
        `on-call-escalation-policy`, `on-call-team-routing-rules.
      example: dashboard:abc-def-ghi
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RoleID:
      description: The unique identifier of the role.
      in: path
      name: role_id
      required: true
      schema:
        type: string
    ServiceAccountID:
      description: The ID of the service account.
      in: path
      name: service_account_id
      required: true
      schema:
        example: 00000000-0000-1234-0000-000000000000
        type: string
    UserID:
      description: The ID of the user.
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-9999-0000-000000000000
        type: string
  x-stackQL-resources:
    api_keys:
      id: datadog.organization.api_keys
      name: api_keys
      title: Api Keys
      methods:
        list_apikeys:
          operation:
            $ref: '#/paths/~1api~1v2~1api_keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_apikey:
          operation:
            $ref: '#/paths/~1api~1v2~1api_keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_apikey:
          operation:
            $ref: '#/paths/~1api~1v2~1api_keys~1{api_key_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_apikey:
          operation:
            $ref: '#/paths/~1api~1v2~1api_keys~1{api_key_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_apikey:
          operation:
            $ref: '#/paths/~1api~1v2~1api_keys~1{api_key_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/api_keys/methods/get_apikey'
          - $ref: '#/components/x-stackQL-resources/api_keys/methods/list_apikeys'
        insert:
          - $ref: '#/components/x-stackQL-resources/api_keys/methods/create_apikey'
        update:
          - $ref: '#/components/x-stackQL-resources/api_keys/methods/update_apikey'
        delete:
          - $ref: '#/components/x-stackQL-resources/api_keys/methods/delete_apikey'
        replace: []
    application_keys:
      id: datadog.organization.application_keys
      name: application_keys
      title: Application Keys
      methods:
        list_application_keys:
          operation:
            $ref: '#/paths/~1api~1v2~1application_keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        delete_application_key:
          operation:
            $ref: '#/paths/~1api~1v2~1application_keys~1{app_key_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_application_key:
          operation:
            $ref: '#/paths/~1api~1v2~1application_keys~1{app_key_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_application_key:
          operation:
            $ref: '#/paths/~1api~1v2~1application_keys~1{app_key_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/application_keys/methods/get_application_key
          - $ref: >-
              #/components/x-stackQL-resources/application_keys/methods/list_application_keys
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/application_keys/methods/update_application_key
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/application_keys/methods/delete_application_key
        replace: []
    audit_logs:
      id: datadog.organization.audit_logs
      name: audit_logs
      title: Audit Logs
      methods:
        list_audit_logs:
          operation:
            $ref: '#/paths/~1api~1v2~1audit~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        search_audit_logs:
          operation:
            $ref: '#/paths/~1api~1v2~1audit~1events~1search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/audit_logs/methods/list_audit_logs
        insert: []
        update: []
        delete: []
        replace: []
    authn_mappings:
      id: datadog.organization.authn_mappings
      name: authn_mappings
      title: Authn Mappings
      methods:
        list_auth_nmappings:
          operation:
            $ref: '#/paths/~1api~1v2~1authn_mappings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_auth_nmapping:
          operation:
            $ref: '#/paths/~1api~1v2~1authn_mappings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_auth_nmapping:
          operation:
            $ref: '#/paths/~1api~1v2~1authn_mappings~1{authn_mapping_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_auth_nmapping:
          operation:
            $ref: '#/paths/~1api~1v2~1authn_mappings~1{authn_mapping_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_auth_nmapping:
          operation:
            $ref: '#/paths/~1api~1v2~1authn_mappings~1{authn_mapping_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/authn_mappings/methods/get_auth_nmapping
          - $ref: >-
              #/components/x-stackQL-resources/authn_mappings/methods/list_auth_nmappings
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/authn_mappings/methods/create_auth_nmapping
        update:
          - $ref: >-
              #/components/x-stackQL-resources/authn_mappings/methods/update_auth_nmapping
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/authn_mappings/methods/delete_auth_nmapping
        replace: []
    current_user_application_keys:
      id: datadog.organization.current_user_application_keys
      name: current_user_application_keys
      title: Current User Application Keys
      methods:
        list_current_user_application_keys:
          operation:
            $ref: '#/paths/~1api~1v2~1current_user~1application_keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_current_user_application_key:
          operation:
            $ref: '#/paths/~1api~1v2~1current_user~1application_keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_current_user_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1current_user~1application_keys~1{app_key_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_current_user_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1current_user~1application_keys~1{app_key_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_current_user_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1current_user~1application_keys~1{app_key_id}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/current_user_application_keys/methods/get_current_user_application_key
          - $ref: >-
              #/components/x-stackQL-resources/current_user_application_keys/methods/list_current_user_application_keys
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/current_user_application_keys/methods/create_current_user_application_key
        update:
          - $ref: >-
              #/components/x-stackQL-resources/current_user_application_keys/methods/update_current_user_application_key
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/current_user_application_keys/methods/delete_current_user_application_key
        replace: []
    data_deletion_requests:
      id: datadog.organization.data_deletion_requests
      name: data_deletion_requests
      title: Data Deletion Requests
      methods:
        create_data_deletion_request:
          operation:
            $ref: '#/paths/~1api~1v2~1deletion~1data~1{product}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_data_deletion_requests:
          operation:
            $ref: '#/paths/~1api~1v2~1deletion~1requests/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        cancel_data_deletion_request:
          operation:
            $ref: '#/paths/~1api~1v2~1deletion~1requests~1{id}~1cancel/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/data_deletion_requests/methods/get_data_deletion_requests
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/data_deletion_requests/methods/create_data_deletion_request
        update: []
        delete: []
        replace: []
    domain_allowlist:
      id: datadog.organization.domain_allowlist
      name: domain_allowlist
      title: Domain Allowlist
      methods:
        get_domain_allowlist:
          operation:
            $ref: '#/paths/~1api~1v2~1domain_allowlist/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        patch_domain_allowlist:
          operation:
            $ref: '#/paths/~1api~1v2~1domain_allowlist/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/domain_allowlist/methods/get_domain_allowlist
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/domain_allowlist/methods/patch_domain_allowlist
        delete: []
        replace: []
    ip_allowlist:
      id: datadog.organization.ip_allowlist
      name: ip_allowlist
      title: Ip Allowlist
      methods:
        get_ipallowlist:
          operation:
            $ref: '#/paths/~1api~1v2~1ip_allowlist/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_ipallowlist:
          operation:
            $ref: '#/paths/~1api~1v2~1ip_allowlist/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/ip_allowlist/methods/get_ipallowlist
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/ip_allowlist/methods/update_ipallowlist
        delete: []
        replace: []
    configs:
      id: datadog.organization.configs
      name: configs
      title: Configs
      methods:
        list_org_configs:
          operation:
            $ref: '#/paths/~1api~1v2~1org_configs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        get_org_config:
          operation:
            $ref: '#/paths/~1api~1v2~1org_configs~1{org_config_name}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_org_config:
          operation:
            $ref: '#/paths/~1api~1v2~1org_configs~1{org_config_name}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/configs/methods/get_org_config'
          - $ref: '#/components/x-stackQL-resources/configs/methods/list_org_configs'
        insert: []
        update:
          - $ref: '#/components/x-stackQL-resources/configs/methods/update_org_config'
        delete: []
        replace: []
    connections:
      id: datadog.organization.connections
      name: connections
      title: Connections
      methods:
        list_org_connections:
          operation:
            $ref: '#/paths/~1api~1v2~1org_connections/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_org_connections:
          operation:
            $ref: '#/paths/~1api~1v2~1org_connections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_org_connections:
          operation:
            $ref: '#/paths/~1api~1v2~1org_connections~1{connection_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_org_connections:
          operation:
            $ref: '#/paths/~1api~1v2~1org_connections~1{connection_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/list_org_connections
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/create_org_connections
        update:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/update_org_connections
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/delete_org_connections
        replace: []
    permissions:
      id: datadog.organization.permissions
      name: permissions
      title: Permissions
      methods:
        list_permissions:
          operation:
            $ref: '#/paths/~1api~1v2~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/permissions/methods/list_permissions
        insert: []
        update: []
        delete: []
        replace: []
    restriction_policies:
      id: datadog.organization.restriction_policies
      name: restriction_policies
      title: Restriction Policies
      methods:
        delete_restriction_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1restriction_policy~1{resource_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_restriction_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1restriction_policy~1{resource_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_restriction_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1restriction_policy~1{resource_id}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/restriction_policies/methods/get_restriction_policy
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/restriction_policies/methods/delete_restriction_policy
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/restriction_policies/methods/update_restriction_policy
    roles:
      id: datadog.organization.roles
      name: roles
      title: Roles
      methods:
        list_roles:
          operation:
            $ref: '#/paths/~1api~1v2~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        clone_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1clone/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/get_role'
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_roles'
        insert:
          - $ref: '#/components/x-stackQL-resources/roles/methods/create_role'
        update:
          - $ref: '#/components/x-stackQL-resources/roles/methods/update_role'
        delete:
          - $ref: '#/components/x-stackQL-resources/roles/methods/delete_role'
        replace: []
    role_permissions:
      id: datadog.organization.role_permissions
      name: role_permissions
      title: Role Permissions
      methods:
        remove_permission_from_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1permissions/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_role_permissions:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        add_permission_to_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1permissions/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        remove_user_from_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1users/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/list_role_permissions
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/add_permission_to_role
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/remove_permission_from_role
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/remove_user_from_role
        replace: []
    role_users:
      id: datadog.organization.role_users
      name: role_users
      title: Role Users
      methods:
        list_role_users:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        add_user_to_role:
          operation:
            $ref: '#/paths/~1api~1v2~1roles~1{role_id}~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_users/methods/list_role_users
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/role_users/methods/add_user_to_role
        update: []
        delete: []
        replace: []
    idp_metadata:
      id: datadog.organization.idp_metadata
      name: idp_metadata
      title: Idp Metadata
      methods:
        upload_id_pmetadata:
          operation:
            $ref: '#/paths/~1api~1v2~1saml_configurations~1idp_metadata/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
        replace: []
    service_accounts:
      id: datadog.organization.service_accounts
      name: service_accounts
      title: Service Accounts
      methods:
        create_service_account:
          operation:
            $ref: '#/paths/~1api~1v2~1service_accounts/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select: []
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_accounts/methods/create_service_account
        update: []
        delete: []
        replace: []
    service_account_keys:
      id: datadog.organization.service_account_keys
      name: service_account_keys
      title: Service Account Keys
      methods:
        list_service_account_application_keys:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1service_accounts~1{service_account_id}~1application_keys/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_service_account_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1service_accounts~1{service_account_id}~1application_keys/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_service_account_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1service_accounts~1{service_account_id}~1application_keys~1{app_key_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_service_account_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1service_accounts~1{service_account_id}~1application_keys~1{app_key_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_service_account_application_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1service_accounts~1{service_account_id}~1application_keys~1{app_key_id}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/get_service_account_application_key
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/list_service_account_application_keys
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/create_service_account_application_key
        update:
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/update_service_account_application_key
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/service_account_keys/methods/delete_service_account_application_key
        replace: []
    teams:
      id: datadog.organization.teams
      name: teams
      title: Teams
      methods:
        list_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1team/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        sync_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1sync/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/teams/methods/get_team'
          - $ref: '#/components/x-stackQL-resources/teams/methods/list_teams'
        insert:
          - $ref: '#/components/x-stackQL-resources/teams/methods/create_team'
        update:
          - $ref: '#/components/x-stackQL-resources/teams/methods/update_team'
        delete:
          - $ref: '#/components/x-stackQL-resources/teams/methods/delete_team'
        replace: []
    team_members:
      id: datadog.organization.team_members
      name: team_members
      title: Team Members
      methods:
        list_member_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{super_team_id}~1member_teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        add_member_team:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{super_team_id}~1member_teams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        remove_member_team:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1team~1{super_team_id}~1member_teams~1{member_team_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/team_members/methods/list_member_teams
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/team_members/methods/add_member_team
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/team_members/methods/remove_member_team
        replace: []
    team_links:
      id: datadog.organization.team_links
      name: team_links
      title: Team Links
      methods:
        get_team_links:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_team_link:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1links~1{link_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/team_links/methods/get_team_link'
          - $ref: '#/components/x-stackQL-resources/team_links/methods/get_team_links'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/team_links/methods/create_team_link
        update:
          - $ref: >-
              #/components/x-stackQL-resources/team_links/methods/update_team_link
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/team_links/methods/delete_team_link
        replace: []
    team_memberships:
      id: datadog.organization.team_memberships
      name: team_memberships
      title: Team Memberships
      methods:
        get_team_memberships:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_team_membership:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_team_membership:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships~1{user_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        update_team_membership:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1memberships~1{user_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/team_memberships/methods/get_team_memberships
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/team_memberships/methods/create_team_membership
        update:
          - $ref: >-
              #/components/x-stackQL-resources/team_memberships/methods/update_team_membership
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/team_memberships/methods/delete_team_membership
        replace: []
    team_permission_settings:
      id: datadog.organization.team_permission_settings
      name: team_permission_settings
      title: Team Permission Settings
      methods:
        get_team_permission_settings:
          operation:
            $ref: '#/paths/~1api~1v2~1team~1{team_id}~1permission-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_team_permission_setting:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1team~1{team_id}~1permission-settings~1{action}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/team_permission_settings/methods/get_team_permission_settings
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/team_permission_settings/methods/update_team_permission_setting
    usage_application_security_monitoring:
      id: datadog.organization.usage_application_security_monitoring
      name: usage_application_security_monitoring
      title: Usage Application Security Monitoring
      methods:
        get_usage_application_security_monitoring:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1application_security/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/usage_application_security_monitoring/methods/get_usage_application_security_monitoring
        insert: []
        update: []
        delete: []
        replace: []
    billing_dimension_mapping:
      id: datadog.organization.billing_dimension_mapping
      name: billing_dimension_mapping
      title: Billing Dimension Mapping
      methods:
        get_billing_dimension_mapping:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1billing_dimension_mapping/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/billing_dimension_mapping/methods/get_billing_dimension_mapping
        insert: []
        update: []
        delete: []
        replace: []
    cost_by_org:
      id: datadog.organization.cost_by_org
      name: cost_by_org
      title: Cost By Org
      methods:
        get_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1cost_by_org/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/cost_by_org/methods/get_cost_by_org
        insert: []
        update: []
        delete: []
        replace: []
    estimated_cost_by_org:
      id: datadog.organization.estimated_cost_by_org
      name: estimated_cost_by_org
      title: Estimated Cost By Org
      methods:
        get_estimated_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1estimated_cost/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/estimated_cost_by_org/methods/get_estimated_cost_by_org
        insert: []
        update: []
        delete: []
        replace: []
    historical_cost_by_org:
      id: datadog.organization.historical_cost_by_org
      name: historical_cost_by_org
      title: Historical Cost By Org
      methods:
        get_historical_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1historical_cost/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/historical_cost_by_org/methods/get_historical_cost_by_org
        insert: []
        update: []
        delete: []
        replace: []
    hourly_usage:
      id: datadog.organization.hourly_usage
      name: hourly_usage
      title: Hourly Usage
      methods:
        get_hourly_usage:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1hourly_usage/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/hourly_usage/methods/get_hourly_usage
        insert: []
        update: []
        delete: []
        replace: []
    lambda_traced_invocations_usage:
      id: datadog.organization.lambda_traced_invocations_usage
      name: lambda_traced_invocations_usage
      title: Lambda Traced Invocations Usage
      methods:
        get_usage_lambda_traced_invocations:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1lambda_traced_invocations/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/lambda_traced_invocations_usage/methods/get_usage_lambda_traced_invocations
        insert: []
        update: []
        delete: []
        replace: []
    observability_pipelines_usage:
      id: datadog.organization.observability_pipelines_usage
      name: observability_pipelines_usage
      title: Observability Pipelines Usage
      methods:
        get_usage_observability_pipelines:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1observability_pipelines/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/observability_pipelines_usage/methods/get_usage_observability_pipelines
        insert: []
        update: []
        delete: []
        replace: []
    projected_cost:
      id: datadog.organization.projected_cost
      name: projected_cost
      title: Projected Cost
      methods:
        get_projected_cost:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1projected_cost/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/projected_cost/methods/get_projected_cost
        insert: []
        update: []
        delete: []
        replace: []
    invitations:
      id: datadog.organization.invitations
      name: invitations
      title: Invitations
      methods:
        send_invitations:
          operation:
            $ref: '#/paths/~1api~1v2~1user_invitations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_invitation:
          operation:
            $ref: '#/paths/~1api~1v2~1user_invitations~1{user_invitation_uuid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/invitations/methods/get_invitation
        insert: []
        update: []
        delete: []
        replace: []
    users:
      id: datadog.organization.users
      name: users
      title: Users
      methods:
        list_users:
          operation:
            $ref: '#/paths/~1api~1v2~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_user:
          operation:
            $ref: '#/paths/~1api~1v2~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        disable_user:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_user:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_user:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/get_user'
          - $ref: '#/components/x-stackQL-resources/users/methods/list_users'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_user'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/update_user'
        delete: []
        replace: []
    user_organizations:
      id: datadog.organization.user_organizations
      name: user_organizations
      title: User Organizations
      methods:
        list_user_organizations:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_id}~1orgs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_organizations/methods/list_user_organizations
        insert: []
        update: []
        delete: []
        replace: []
    user_permissions:
      id: datadog.organization.user_permissions
      name: user_permissions
      title: User Permissions
      methods:
        list_user_permissions:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_id}~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_permissions/methods/list_user_permissions
        insert: []
        update: []
        delete: []
        replace: []
    user_team_memberships:
      id: datadog.organization.user_team_memberships
      name: user_team_memberships
      title: User Team Memberships
      methods:
        get_user_memberships:
          operation:
            $ref: '#/paths/~1api~1v2~1users~1{user_uuid}~1memberships/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_team_memberships/methods/get_user_memberships
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
