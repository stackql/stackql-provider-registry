openapi: 3.0.0
info:
  title: dashboards API
  description: datadog dashboards API
  version: '1.0'
paths:
  /api/v2/dashboard/lists/manual/{dashboard_list_id}/dashboards:
    delete:
      description: Delete dashboards from an existing dashboard list.
      operationId: DeleteDashboardListItems
      parameters:
        - description: ID of the dashboard list to delete items from.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListDeleteItemsRequest'
        description: Dashboards to delete from the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListDeleteItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete items from a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
    get:
      description: Fetch the dashboard listâ€™s dashboard definitions.
      operationId: GetDashboardListItems
      parameters:
        - description: ID of the dashboard list to get items from.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListItems'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_read
      summary: Get items of a Dashboard List
      tags:
        - Dashboard Lists
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    post:
      description: Add dashboards to an existing dashboard list.
      operationId: CreateDashboardListItems
      parameters:
        - description: ID of the dashboard list to add items to.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListAddItemsRequest'
        description: Dashboards to add to the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListAddItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Add Items to a Dashboard List
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
    put:
      description: Update dashboards of an existing dashboard list.
      operationId: UpdateDashboardListItems
      parameters:
        - description: ID of the dashboard list to update items from.
          in: path
          name: dashboard_list_id
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardListUpdateItemsRequest'
        description: New dashboards of the dashboard list.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardListUpdateItemsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update items of a dashboard list
      tags:
        - Dashboard Lists
      x-codegen-request-body-name: body
  /api/v2/powerpacks:
    get:
      description: Get a list of all powerpacks.
      operationId: ListPowerpacks
      parameters:
        - description: Maximum number of powerpacks in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 25
            format: int64
            maximum: 1000
            type: integer
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPowerpacksResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_read
      summary: Get all powerpacks
      tags:
        - Powerpack
      x-pagination:
        limitParam: page[limit]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    post:
      description: Create a powerpack.
      operationId: CreatePowerpack
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Powerpack'
        description: Create a powerpack request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerpackResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_write
      summary: Create a new powerpack
      tags:
        - Powerpack
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
  /api/v2/powerpacks/{powerpack_id}:
    delete:
      description: Delete a powerpack.
      operationId: DeletePowerpack
      parameters:
        - description: Powerpack id
          in: path
          name: powerpack_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Powerpack Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_write
      summary: Delete a powerpack
      tags:
        - Powerpack
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
    get:
      description: Get a powerpack.
      operationId: GetPowerpack
      parameters:
        - description: ID of the powerpack.
          in: path
          name: powerpack_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerpackResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Powerpack Not Found.
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_read
      summary: Get a Powerpack
      tags:
        - Powerpack
      x-permission:
        operator: OR
        permissions:
          - dashboards_read
    patch:
      description: Update a powerpack.
      operationId: UpdatePowerpack
      parameters:
        - description: ID of the powerpack.
          in: path
          name: powerpack_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Powerpack'
        description: Update a powerpack request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PowerpackResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Powerpack Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - dashboards_write
      summary: Update a powerpack
      tags:
        - Powerpack
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - dashboards_write
components:
  schemas:
    DashboardListDeleteItemsRequest:
      description: Request containing a list of dashboards to delete.
      properties:
        dashboards:
          description: List of dashboards to delete from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListDeleteItemsResponse:
      description: Response containing a list of deleted dashboards.
      properties:
        deleted_dashboards_from_list:
          description: List of dashboards deleted from the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    DashboardListItems:
      description: Dashboards within a list.
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          example: []
          items:
            $ref: '#/components/schemas/DashboardListItem'
          type: array
        total:
          description: Number of dashboards in the dashboard list.
          format: int64
          readOnly: true
          type: integer
      required:
        - dashboards
      type: object
    DashboardListAddItemsRequest:
      description: Request containing a list of dashboards to add.
      properties:
        dashboards:
          description: List of dashboards to add the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListAddItemsResponse:
      description: Response containing a list of added dashboards.
      properties:
        added_dashboards_to_list:
          description: List of dashboards added to the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    DashboardListUpdateItemsRequest:
      description: Request containing the list of dashboards to update to.
      properties:
        dashboards:
          description: List of dashboards to update the dashboard list to.
          items:
            $ref: '#/components/schemas/DashboardListItemRequest'
          type: array
      type: object
    DashboardListUpdateItemsResponse:
      description: Response containing a list of updated dashboards.
      properties:
        dashboards:
          description: List of dashboards in the dashboard list.
          items:
            $ref: '#/components/schemas/DashboardListItemResponse'
          type: array
      type: object
    ListPowerpacksResponse:
      description: Response object which includes all powerpack configurations.
      properties:
        data:
          description: List of powerpack definitions.
          items:
            $ref: '#/components/schemas/PowerpackData'
          type: array
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/User'
          type: array
        links:
          $ref: '#/components/schemas/PowerpackResponseLinks'
        meta:
          $ref: '#/components/schemas/PowerpacksResponseMeta'
      type: object
    Powerpack:
      description: >-
        Powerpacks are templated groups of dashboard widgets you can save from
        an existing dashboard and turn into reusable packs in the widget tray.
      properties:
        data:
          $ref: '#/components/schemas/PowerpackData'
      type: object
    PowerpackResponse:
      description: Response object which includes a single powerpack configuration.
      properties:
        data:
          $ref: '#/components/schemas/PowerpackData'
        included:
          description: Array of objects related to the users.
          items:
            $ref: '#/components/schemas/User'
          type: array
      readOnly: true
      type: object
    DashboardListItemRequest:
      description: A dashboard within a list.
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
        - type
        - id
      type: object
    DashboardListItemResponse:
      description: A dashboard within a list.
      properties:
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
      required:
        - type
        - id
      type: object
    DashboardListItem:
      description: A dashboard within a list.
      properties:
        author:
          $ref: '#/components/schemas/Creator'
        created:
          description: Date of creation of the dashboard.
          format: date-time
          readOnly: true
          type: string
        icon:
          description: URL to the icon of the dashboard.
          nullable: true
          readOnly: true
          type: string
        id:
          description: ID of the dashboard.
          example: q5j-nti-fv6
          type: string
        integration_id:
          description: The short name of the integration.
          nullable: true
          readOnly: true
          type: string
        is_favorite:
          description: Whether or not the dashboard is in the favorites.
          readOnly: true
          type: boolean
        is_read_only:
          description: Whether or not the dashboard is read only.
          readOnly: true
          type: boolean
        is_shared:
          description: Whether the dashboard is publicly shared or not.
          readOnly: true
          type: boolean
        modified:
          description: Date of last edition of the dashboard.
          format: date-time
          readOnly: true
          type: string
        popularity:
          description: Popularity of the dashboard.
          format: int32
          maximum: 5
          readOnly: true
          type: integer
        tags:
          description: List of team names representing ownership of a dashboard.
          items:
            description: The name of a Datadog team, formatted as `team:<name>`
            type: string
          maxItems: 5
          nullable: true
          readOnly: true
          type: array
        title:
          description: Title of the dashboard.
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/DashboardType'
        url:
          description: URL path to the dashboard.
          readOnly: true
          type: string
      required:
        - type
        - id
      type: object
    PowerpackData:
      description: Powerpack data object.
      properties:
        attributes:
          $ref: '#/components/schemas/PowerpackAttributes'
        id:
          description: ID of the powerpack.
          type: string
        relationships:
          $ref: '#/components/schemas/PowerpackRelationships'
        type:
          description: Type of widget, must be powerpack.
          example: powerpack
          type: string
      type: object
    User:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    PowerpackResponseLinks:
      description: Links attributes.
      properties:
        first:
          description: Link to last page.
          type: string
        last:
          description: Link to first page.
          example: >-
            https://app.datadoghq.com/api/v2/powerpacks?page[offset]=0&page[limit]=25
          nullable: true
          type: string
        next:
          description: Link for the next set of results.
          example: >-
            https://app.datadoghq.com/api/v2/powerpacks?page[offset]=25&page[limit]=25
          type: string
        prev:
          description: Link for the previous set of results.
          nullable: true
          type: string
        self:
          description: Link to current page.
          example: https://app.datadoghq.com/api/v2/powerpacks
          type: string
      type: object
    PowerpacksResponseMeta:
      description: Powerpack response metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/PowerpacksResponseMetaPagination'
      type: object
    DashboardType:
      description: The type of the dashboard.
      enum:
        - custom_timeboard
        - custom_screenboard
        - integration_screenboard
        - integration_timeboard
        - host_timeboard
      example: host_timeboard
      type: string
      x-enum-varnames:
        - CUSTOM_TIMEBOARD
        - CUSTOM_SCREENBOARD
        - INTEGRATION_SCREENBOARD
        - INTEGRATION_TIMEBOARD
        - HOST_TIMEBOARD
    Creator:
      description: Creator of the object.
      properties:
        email:
          description: Email of the creator.
          type: string
        handle:
          description: Handle of the creator.
          type: string
        name:
          description: Name of the creator.
          nullable: true
          type: string
      type: object
    PowerpackAttributes:
      description: Powerpack attribute object.
      properties:
        description:
          description: Description of this powerpack.
          example: Powerpack for ABC
          type: string
        group_widget:
          $ref: '#/components/schemas/PowerpackGroupWidget'
        name:
          description: Name of the powerpack.
          example: Sample Powerpack
          type: string
        tags:
          description: List of tags to identify this powerpack.
          example:
            - tag:foo1
          items:
            maxLength: 80
            type: string
          maxItems: 8
          type: array
        template_variables:
          description: List of template variables for this powerpack.
          example:
            - defaults:
                - '*'
              name: test
          items:
            $ref: '#/components/schemas/PowerpackTemplateVariable'
          type: array
      required:
        - group_widget
        - name
      type: object
    PowerpackRelationships:
      description: Powerpack relationship object.
      properties:
        author:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    UserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        mfa_enabled:
          description: If user has MFA enabled.
          readOnly: true
          type: boolean
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        service_account:
          description: Whether the user is a service account.
          type: boolean
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    PowerpacksResponseMetaPagination:
      description: Powerpack response pagination metadata.
      properties:
        first_offset:
          description: The first offset.
          format: int64
          type: integer
        last_offset:
          description: The last offset.
          format: int64
          nullable: true
          type: integer
        limit:
          description: Pagination limit.
          format: int64
          type: integer
        next_offset:
          description: The next offset.
          format: int64
          type: integer
        offset:
          description: The offset.
          format: int64
          type: integer
        prev_offset:
          description: The previous offset.
          format: int64
          type: integer
        total:
          description: Total results.
          format: int64
          type: integer
        type:
          description: Offset type.
          type: string
      type: object
    PowerpackGroupWidget:
      description: Powerpack group widget definition object.
      properties:
        definition:
          $ref: '#/components/schemas/PowerpackGroupWidgetDefinition'
        layout:
          $ref: '#/components/schemas/PowerpackGroupWidgetLayout'
        live_span:
          $ref: '#/components/schemas/WidgetLiveSpan'
      required:
        - definition
      type: object
    PowerpackTemplateVariable:
      description: Powerpack template variables.
      properties:
        available_values:
          description: >-
            The list of values that the template variable drop-down is limited
            to.
          example:
            - my-host
            - host1
            - host2
          items:
            description: Template variable value.
            type: string
          nullable: true
          type: array
        defaults:
          description: >-
            One or many template variable default values within the saved view,
            which are unioned together using `OR` if more than one is specified.
          items:
            description: One or many default values of the template variable.
            minLength: 1
            type: string
          type: array
        name:
          description: The name of the variable.
          example: datacenter
          type: string
        prefix:
          description: >-
            The tag prefix associated with the variable. Only tags with this
            prefix appear in the variable drop-down.
          example: host
          nullable: true
          type: string
      required:
        - name
      type: object
    RelationshipToUser:
      description: Relationship to user.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserData'
      required:
        - data
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      properties:
        data:
          description: An array containing type and the unique identifier of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    PowerpackGroupWidgetDefinition:
      description: Powerpack group widget object.
      properties:
        layout_type:
          description: Layout type of widgets.
          example: ordered
          type: string
        show_title:
          description: >-
            Boolean indicating whether powerpack group title should be visible
            or not.
          example: true
          type: boolean
        title:
          description: Name for the group widget.
          example: Sample Powerpack
          type: string
        type:
          description: Type of widget, must be group.
          example: group
          type: string
        widgets:
          description: Widgets inside the powerpack.
          example:
            - definition:
                content: example
                type: note
              layout:
                height: 5
                width: 10
                x: 0
                'y': 0
          items:
            $ref: '#/components/schemas/PowerpackInnerWidgets'
          type: array
      required:
        - widgets
        - layout_type
        - type
      type: object
    PowerpackGroupWidgetLayout:
      description: Powerpack group widget layout.
      properties:
        height:
          description: The height of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        width:
          description: The width of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        x:
          description: >-
            The position of the widget on the x (horizontal) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        'y':
          description: >-
            The position of the widget on the y (vertical) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
      required:
        - x
        - 'y'
        - width
        - height
      type: object
    WidgetLiveSpan:
      description: The available timeframes depend on the widget you are using.
      enum:
        - 1m
        - 5m
        - 10m
        - 15m
        - 30m
        - 1h
        - 4h
        - 1d
        - 2d
        - 1w
        - 1mo
        - 3mo
        - 6mo
        - 1y
        - alert
      example: 5m
      type: string
      x-enum-varnames:
        - PAST_ONE_MINUTE
        - PAST_FIVE_MINUTES
        - PAST_TEN_MINUTES
        - PAST_FIFTEEN_MINUTES
        - PAST_THIRTY_MINUTES
        - PAST_ONE_HOUR
        - PAST_FOUR_HOURS
        - PAST_ONE_DAY
        - PAST_TWO_DAYS
        - PAST_ONE_WEEK
        - PAST_ONE_MONTH
        - PAST_THREE_MONTHS
        - PAST_SIX_MONTHS
        - PAST_ONE_YEAR
        - ALERT
    RelationshipToUserData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    PowerpackInnerWidgets:
      description: Powerpack group widget definition of individual widgets.
      properties:
        definition:
          additionalProperties: {}
          description: Information about widget.
          example:
            definition:
              content: example
              type: note
          type: object
        layout:
          $ref: '#/components/schemas/PowerpackInnerWidgetLayout'
      required:
        - definition
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    PowerpackInnerWidgetLayout:
      description: Powerpack inner widget layout.
      properties:
        height:
          description: The height of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        width:
          description: The width of the widget. Should be a non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        x:
          description: >-
            The position of the widget on the x (horizontal) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
        'y':
          description: >-
            The position of the widget on the y (vertical) axis. Should be a
            non-negative integer.
          example: 0
          format: int64
          minimum: 0
          type: integer
      required:
        - x
        - 'y'
        - width
        - height
      type: object
  responses:
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
  parameters:
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
  x-stackQL-resources:
    dashboard_list_items:
      id: datadog.dashboards.dashboard_list_items
      name: dashboard_list_items
      title: Dashboard List Items
      methods:
        delete_dashboard_list_items:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1dashboard~1lists~1manual~1{dashboard_list_id}~1dashboards/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_dashboard_list_items:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1dashboard~1lists~1manual~1{dashboard_list_id}~1dashboards/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.dashboards
        create_dashboard_list_items:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1dashboard~1lists~1manual~1{dashboard_list_id}~1dashboards/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_dashboard_list_items:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1dashboard~1lists~1manual~1{dashboard_list_id}~1dashboards/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/dashboard_list_items/methods/get_dashboard_list_items
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/dashboard_list_items/methods/create_dashboard_list_items
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/dashboard_list_items/methods/delete_dashboard_list_items
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/dashboard_list_items/methods/update_dashboard_list_items
    powerpacks:
      id: datadog.dashboards.powerpacks
      name: powerpacks
      title: Powerpacks
      methods:
        list_powerpacks:
          operation:
            $ref: '#/paths/~1api~1v2~1powerpacks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_powerpack:
          operation:
            $ref: '#/paths/~1api~1v2~1powerpacks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_powerpack:
          operation:
            $ref: '#/paths/~1api~1v2~1powerpacks~1{powerpack_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_powerpack:
          operation:
            $ref: '#/paths/~1api~1v2~1powerpacks~1{powerpack_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_powerpack:
          operation:
            $ref: '#/paths/~1api~1v2~1powerpacks~1{powerpack_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/powerpacks/methods/get_powerpack'
          - $ref: >-
              #/components/x-stackQL-resources/powerpacks/methods/list_powerpacks
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/powerpacks/methods/create_powerpack
        update:
          - $ref: >-
              #/components/x-stackQL-resources/powerpacks/methods/update_powerpack
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/powerpacks/methods/delete_powerpack
        replace: []
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
