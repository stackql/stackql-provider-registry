openapi: 3.0.0
info:
  title: remote_config API
  description: datadog remote_config API
  version: '1.0'
paths:
  /api/v2/remote_config/products/asm/waf/custom_rules:
    get:
      description: Retrieve a list of WAF custom rule.
      operationId: ListApplicationSecurityWAFCustomRules
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafCustomRuleListResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all WAF custom rules
      tags:
        - Application Security
    post:
      description: Create a new WAF custom rule with the given parameters.
      operationId: CreateApplicationSecurityWafCustomRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafCustomRuleCreateRequest
        description: The definition of the new WAF Custom Rule.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a WAF custom rule
      tags:
        - Application Security
      x-codegen-request-body-name: body
  /api/v2/remote_config/products/asm/waf/custom_rules/{custom_rule_id}:
    delete:
      description: Delete a specific WAF custom rule.
      operationId: DeleteApplicationSecurityWafCustomRule
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafCustomRuleIDParam'
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a WAF Custom Rule
      tags:
        - Application Security
      x-terraform-resource: appsec_waf_custom_rule
    get:
      description: Retrieve a WAF custom rule by ID.
      operationId: GetApplicationSecurityWafCustomRule
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafCustomRuleIDParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a WAF custom rule
      tags:
        - Application Security
      x-terraform-resource: appsec_waf_custom_rule
    put:
      description: |-
        Update a specific WAF custom Rule.
        Returns the Custom Rule object when the request is successful.
      operationId: UpdateApplicationSecurityWafCustomRule
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafCustomRuleIDParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafCustomRuleUpdateRequest
        description: New definition of the WAF Custom Rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a WAF Custom Rule
      tags:
        - Application Security
      x-codegen-request-body-name: body
      x-terraform-resource: appsec_waf_custom_rule
  /api/v2/remote_config/products/asm/waf/exclusion_filters:
    get:
      description: Retrieve a list of WAF exclusion filters.
      operationId: ListApplicationSecurityWafExclusionFilters
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFiltersResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List all WAF exclusion filters
      tags:
        - Application Security
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_read
      x-terraform-resource: appsec_waf_exclusion_filter
    post:
      description: >-
        Create a new WAF exclusion filter with the given parameters.


        A request matched by an exclusion filter will be ignored by the
        Application Security WAF product.

        Go to https://app.datadoghq.com/security/appsec/passlist to review
        existing exclusion filters (also called passlist entries).
      operationId: CreateApplicationSecurityWafExclusionFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafExclusionFilterCreateRequest
        description: The definition of the new WAF exclusion filter.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFilterResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a WAF exclusion filter
      tags:
        - Application Security
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_write
      x-terraform-resource: appsec_waf_exclusion_filter
  /api/v2/remote_config/products/asm/waf/exclusion_filters/{exclusion_filter_id}:
    delete:
      description: Delete a specific WAF exclusion filter using its identifier.
      operationId: DeleteApplicationSecurityWafExclusionFilter
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafExclusionFilterID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a WAF exclusion filter
      tags:
        - Application Security
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_write
      x-terraform-resource: appsec_waf_exclusion_filter
    get:
      description: Retrieve a specific WAF exclusion filter using its identifier.
      operationId: GetApplicationSecurityWafExclusionFilter
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafExclusionFilterID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFilterResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a WAF exclusion filter
      tags:
        - Application Security
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_read
      x-terraform-resource: appsec_waf_exclusion_filter
    put:
      description: |-
        Update a specific WAF exclusion filter using its identifier.
        Returns the exclusion filter object when the request is successful.
      operationId: UpdateApplicationSecurityWafExclusionFilter
      parameters:
        - $ref: '#/components/parameters/ApplicationSecurityWafExclusionFilterID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/ApplicationSecurityWafExclusionFilterUpdateRequest
        description: The exclusion filter to update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationSecurityWafExclusionFilterResponse
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a WAF exclusion filter
      tags:
        - Application Security
      x-codegen-request-body-name: body
      x-permission:
        operator: AND
        permissions:
          - appsec_protect_write
      x-terraform-resource: appsec_waf_exclusion_filter
  /api/v2/remote_config/products/cws/agent_rules:
    get:
      description: >-
        Get the list of Workload Protection agent rules.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: ListCSMThreatsAgentRules
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityQueryAgentPolicyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudWorkloadSecurityAgentRulesListResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all Workload Protection agent rules
      tags:
        - CSM Threats
    post:
      description: >-
        Create a new Workload Protection agent rule with the given parameters.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: CreateCSMThreatsAgentRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateRequest'
        description: The definition of the new agent rule
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Workload Protection agent rule
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
  /api/v2/remote_config/products/cws/agent_rules/{agent_rule_id}:
    delete:
      description: >-
        Delete a specific Workload Protection agent rule.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: DeleteCSMThreatsAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
        - $ref: '#/components/parameters/CloudWorkloadSecurityQueryAgentPolicyID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a Workload Protection agent rule
      tags:
        - CSM Threats
    get:
      description: >-
        Get the details of a specific Workload Protection agent rule.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: GetCSMThreatsAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
        - $ref: '#/components/parameters/CloudWorkloadSecurityQueryAgentPolicyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a Workload Protection agent rule
      tags:
        - CSM Threats
    patch:
      description: >-
        Update a specific Workload Protection Agent rule.

        Returns the agent rule object when the request is successful.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: UpdateCSMThreatsAgentRule
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityAgentRuleID'
        - $ref: '#/components/parameters/CloudWorkloadSecurityQueryAgentPolicyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateRequest'
        description: New definition of the agent rule
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a Workload Protection agent rule
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
  /api/v2/remote_config/products/cws/policy:
    get:
      description: >-
        Get the list of Workload Protection policies.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: ListCSMThreatsAgentPolicies
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CloudWorkloadSecurityAgentPoliciesListResponse
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all Workload Protection policies
      tags:
        - CSM Threats
    post:
      description: >-
        Create a new Workload Protection policy with the given parameters.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: CreateCSMThreatsAgentPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudWorkloadSecurityAgentPolicyCreateRequest
        description: The definition of the new Agent policy
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a Workload Protection policy
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
  /api/v2/remote_config/products/cws/policy/download:
    get:
      description: >-
        The download endpoint generates a Workload Protection policy file from
        your currently active

        Workload Protection agent rules, and downloads them as a `.policy` file.
        This file can then be deployed to

        your agents to update the policy running in your environment.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: DownloadCSMThreatsPolicy
      responses:
        '200':
          content:
            application/zip:
              schema:
                format: binary
                type: string
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Download the Workload Protection policy
      tags:
        - CSM Threats
  /api/v2/remote_config/products/cws/policy/{policy_id}:
    delete:
      description: >-
        Delete a specific Workload Protection policy.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: DeleteCSMThreatsAgentPolicy
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityPathAgentPolicyID'
      responses:
        '202':
          description: OK
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a Workload Protection policy
      tags:
        - CSM Threats
    get:
      description: >-
        Get the details of a specific Workload Protection policy.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: GetCSMThreatsAgentPolicy
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityPathAgentPolicyID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a Workload Protection policy
      tags:
        - CSM Threats
    patch:
      description: >-
        Update a specific Workload Protection policy.

        Returns the policy object when the request is successful.


        **Note**: This endpoint is not available for the Government (US1-FED)
        site. Please reference the (US1-FED) specific resource below.
      operationId: UpdateCSMThreatsAgentPolicy
      parameters:
        - $ref: '#/components/parameters/CloudWorkloadSecurityPathAgentPolicyID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/CloudWorkloadSecurityAgentPolicyUpdateRequest
        description: New definition of the Agent policy
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConcurrentModificationResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a Workload Protection policy
      tags:
        - CSM Threats
      x-codegen-request-body-name: body
  /api/v2/remote_config/products/obs_pipelines/pipelines:
    get:
      description: Retrieve a list of pipelines.
      operationId: ListPipelines
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageNumber'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPipelinesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List pipelines
      tags:
        - Observability Pipelines
      x-permission:
        operator: OR
        permissions:
          - observability_pipelines_read
      x-unstable: >-
        **Note**: This endpoint is in Preview. Fill out this
        [form](https://www.datadoghq.com/product-preview/observability-pipelines-api-and-terraform-support/)
        to request access.
    post:
      description: Create a new pipeline.
      operationId: CreatePipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservabilityPipelineSpec'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservabilityPipeline'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a new pipeline
      tags:
        - Observability Pipelines
      x-permission:
        operator: OR
        permissions:
          - observability_pipelines_deploy
      x-unstable: >-
        **Note**: This endpoint is in Preview. Fill out this
        [form](https://www.datadoghq.com/product-preview/observability-pipelines-api-and-terraform-support/)
        to request access.
  /api/v2/remote_config/products/obs_pipelines/pipelines/validate:
    post:
      description: >
        Validates a pipeline configuration without creating or updating any
        resources.

        Returns a list of validation errors, if any.
      operationId: ValidatePipeline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservabilityPipelineSpec'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Validate an observability pipeline
      tags:
        - Observability Pipelines
      x-permission:
        operator: OR
        permissions:
          - observability_pipelines_read
      x-unstable: >-
        **Note**: This endpoint is in Preview. Fill out this
        [form](https://www.datadoghq.com/product-preview/observability-pipelines-api-and-terraform-support/)
        to request access.
  /api/v2/remote_config/products/obs_pipelines/pipelines/{pipeline_id}:
    delete:
      description: Delete a pipeline.
      operationId: DeletePipeline
      parameters:
        - description: The ID of the pipeline to delete.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Conflict
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a pipeline
      tags:
        - Observability Pipelines
      x-permission:
        operator: OR
        permissions:
          - observability_pipelines_delete
      x-unstable: >-
        **Note**: This endpoint is in Preview. Fill out this
        [form](https://www.datadoghq.com/product-preview/observability-pipelines-api-and-terraform-support/)
        to request access.
    get:
      description: Get a specific pipeline by its ID.
      operationId: GetPipeline
      parameters:
        - description: The ID of the pipeline to retrieve.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservabilityPipeline'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a specific pipeline
      tags:
        - Observability Pipelines
      x-permission:
        operator: OR
        permissions:
          - observability_pipelines_read
      x-unstable: >-
        **Note**: This endpoint is in Preview. Fill out this
        [form](https://www.datadoghq.com/product-preview/observability-pipelines-api-and-terraform-support/)
        to request access.
    put:
      description: Update a pipeline.
      operationId: UpdatePipeline
      parameters:
        - description: The ID of the pipeline to update.
          in: path
          name: pipeline_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservabilityPipeline'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservabilityPipeline'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a pipeline
      tags:
        - Observability Pipelines
      x-permission:
        operator: OR
        permissions:
          - observability_pipelines_deploy
      x-unstable: >-
        **Note**: This endpoint is in Preview. Fill out this
        [form](https://www.datadoghq.com/product-preview/observability-pipelines-api-and-terraform-support/)
        to request access.
components:
  schemas:
    ApplicationSecurityWafCustomRuleListResponse:
      description: Response object that includes a list of WAF custom rules.
      properties:
        data:
          description: The WAF custom rule data.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleData'
          type: array
      type: object
    ApplicationSecurityWafCustomRuleCreateRequest:
      description: Request object that includes the custom rule to create.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCreateData'
      required:
        - data
      type: object
    ApplicationSecurityWafCustomRuleResponse:
      description: Response object that includes a single WAF custom rule.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleData'
      type: object
    ApplicationSecurityWafCustomRuleUpdateRequest:
      description: Request object that includes the Custom Rule to update.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleUpdateData'
      required:
        - data
      type: object
    ApplicationSecurityWafExclusionFiltersResponse:
      description: Response object for multiple WAF exclusion filters.
      properties:
        data:
          description: A list of WAF exclusion filters.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterResource'
          type: array
      type: object
    ApplicationSecurityWafExclusionFilterCreateRequest:
      description: Request object for creating a single WAF exclusion filter.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterCreateData'
      required:
        - data
      type: object
    ApplicationSecurityWafExclusionFilterResponse:
      description: Response object for a single WAF exclusion filter.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterResource'
      type: object
    ApplicationSecurityWafExclusionFilterUpdateRequest:
      description: Request object for updating a single WAF exclusion filter.
      properties:
        data:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterUpdateData'
      required:
        - data
      type: object
    CloudWorkloadSecurityAgentRulesListResponse:
      description: Response object that includes a list of Agent rule
      properties:
        data:
          description: A list of Agent rules objects
          items:
            $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'
          type: array
      type: object
    CloudWorkloadSecurityAgentRuleCreateRequest:
      description: Request object that includes the Agent rule to create
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateData'
      required:
        - data
      type: object
    CloudWorkloadSecurityAgentRuleResponse:
      description: Response object that includes an Agent rule
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleData'
      type: object
    CloudWorkloadSecurityAgentRuleUpdateRequest:
      description: >-
        Request object that includes the Agent rule with the attributes to
        update
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateData'
      required:
        - data
      type: object
    CloudWorkloadSecurityAgentPoliciesListResponse:
      description: Response object that includes a list of Agent policies
      properties:
        data:
          description: A list of Agent policy objects
          items:
            $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyData'
          type: array
      type: object
    CloudWorkloadSecurityAgentPolicyCreateRequest:
      description: Request object that includes the Agent policy to create
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyCreateData'
      required:
        - data
      type: object
    CloudWorkloadSecurityAgentPolicyResponse:
      description: Response object that includes an Agent policy
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyData'
      type: object
    CloudWorkloadSecurityAgentPolicyUpdateRequest:
      description: >-
        Request object that includes the Agent policy with the attributes to
        update
      properties:
        data:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyUpdateData'
      required:
        - data
      type: object
    ListPipelinesResponse:
      description: >-
        Represents the response payload containing a list of pipelines and
        associated metadata.
      properties:
        data:
          description: The `schema` `data`.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineData'
          type: array
        meta:
          $ref: '#/components/schemas/ListPipelinesResponseMeta'
      required:
        - data
      type: object
    ObservabilityPipelineSpec:
      description: >-
        Input schema representing an observability pipeline configuration. Used
        in create and validate requests.
      properties:
        data:
          $ref: '#/components/schemas/ObservabilityPipelineSpecData'
      required:
        - data
      type: object
    ObservabilityPipeline:
      description: Top-level schema representing a pipeline.
      properties:
        data:
          $ref: '#/components/schemas/ObservabilityPipelineData'
      required:
        - data
      type: object
    ValidationResponse:
      description: Response containing validation errors.
      example:
        errors:
          - meta:
              field: region
              id: datadog-agent-source
              message: Field 'region' is required
            title: Field 'region' is required
      properties:
        errors:
          description: The `ValidationResponse` `errors`.
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    ApplicationSecurityWafCustomRuleData:
      description: Object for a single WAF custom rule.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAttributes'
        id:
          description: The ID of the custom rule.
          example: 2857c47d-1e3a-4300-8b2f-dc24089c084b
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleType'
      type: object
    ApplicationSecurityWafCustomRuleCreateData:
      description: Object for a single WAF custom rule.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleCreateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafCustomRuleUpdateData:
      description: Object for a single WAF Custom Rule.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleUpdateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafExclusionFilterResource:
      description: A JSON:API resource for an WAF exclusion filter.
      properties:
        attributes:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterAttributes'
        id:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterID'
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterType'
      type: object
    ApplicationSecurityWafExclusionFilterCreateData:
      description: Object for creating a single WAF exclusion filter.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafExclusionFilterCreateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterType'
      required:
        - attributes
        - type
      type: object
    ApplicationSecurityWafExclusionFilterUpdateData:
      description: Object for updating a single WAF exclusion filter.
      properties:
        attributes:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafExclusionFilterUpdateAttributes
        type:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterType'
      required:
        - attributes
        - type
      type: object
    CloudWorkloadSecurityAgentRuleData:
      description: Object for a single Agent rule
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleAttributes'
        id:
          description: The ID of the Agent rule
          example: 3dd-0uc-h1s
          type: string
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      type: object
    CloudWorkloadSecurityAgentRuleCreateData:
      description: Object for a single Agent rule
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreateAttributes'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      required:
        - attributes
        - type
      type: object
    CloudWorkloadSecurityAgentRuleUpdateData:
      description: Object for a single Agent rule
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdateAttributes'
        id:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleID'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleType'
      required:
        - attributes
        - type
      type: object
    CloudWorkloadSecurityAgentPolicyData:
      description: Object for a single Agent policy
      properties:
        attributes:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyAttributes'
        id:
          description: The ID of the Agent policy
          example: 6517fcc1-cec7-4394-a655-8d6e9d085255
          type: string
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyType'
      type: object
    CloudWorkloadSecurityAgentPolicyCreateData:
      description: Object for a single Agent rule
      properties:
        attributes:
          $ref: >-
            #/components/schemas/CloudWorkloadSecurityAgentPolicyCreateAttributes
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyType'
      required:
        - attributes
        - type
      type: object
    CloudWorkloadSecurityAgentPolicyUpdateData:
      description: Object for a single Agent policy
      properties:
        attributes:
          $ref: >-
            #/components/schemas/CloudWorkloadSecurityAgentPolicyUpdateAttributes
        id:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyID'
        type:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentPolicyType'
      required:
        - attributes
        - type
      type: object
    ObservabilityPipelineData:
      description: Contains the pipeline’s ID, type, and configuration attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/ObservabilityPipelineDataAttributes'
        id:
          description: Unique identifier for the pipeline.
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          type: string
        type:
          default: pipelines
          description: >-
            The resource type identifier. For pipeline resources, this should
            always be set to `pipelines`.
          example: pipelines
          type: string
      required:
        - id
        - type
        - attributes
      type: object
    ListPipelinesResponseMeta:
      description: Metadata about the response.
      properties:
        totalCount:
          description: The total number of pipelines.
          example: 42
          format: int64
          type: integer
      type: object
    ObservabilityPipelineSpecData:
      description: Contains the the pipeline configuration.
      properties:
        attributes:
          $ref: '#/components/schemas/ObservabilityPipelineDataAttributes'
        type:
          default: pipelines
          description: >-
            The resource type identifier. For pipeline resources, this should
            always be set to `pipelines`.
          example: pipelines
          type: string
      required:
        - type
        - attributes
      type: object
    ValidationError:
      description: >-
        Represents a single validation error, including a human-readable title
        and metadata.
      properties:
        meta:
          $ref: '#/components/schemas/ValidationErrorMeta'
        title:
          description: A short, human-readable summary of the error.
          example: Field 'region' is required
          type: string
      required:
        - title
        - meta
      type: object
    ApplicationSecurityWafCustomRuleAttributes:
      description: A WAF custom rule.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAction'
        blocking:
          description: Indicates whether the WAF custom rule will block the request.
          example: false
          type: boolean
        conditions:
          description: >-
            Conditions for which the WAF Custom Rule will triggers, all
            conditions needs to match in order for the WAF

            rule to trigger.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCondition'
          type: array
        enabled:
          description: Indicates whether the WAF custom rule is enabled.
          example: false
          type: boolean
        metadata:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleMetadata'
        name:
          description: The Name of the WAF custom rule.
          example: Block request from bad useragent
          type: string
        path_glob:
          description: The path glob for the WAF custom rule.
          example: /api/search/*
          type: string
        scope:
          description: The scope of the WAF custom rule.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleScope'
          type: array
        tags:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTags'
      required:
        - enabled
        - blocking
        - name
        - tags
        - conditions
      type: object
    ApplicationSecurityWafCustomRuleType:
      default: custom_rule
      description: The type of the resource. The value should always be `custom_rule`.
      enum:
        - custom_rule
      example: custom_rule
      type: string
      x-enum-varnames:
        - CUSTOM_RULE
    ApplicationSecurityWafCustomRuleCreateAttributes:
      description: Create a new WAF custom rule.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAction'
        blocking:
          description: Indicates whether the WAF custom rule will block the request.
          example: false
          type: boolean
        conditions:
          description: >-
            Conditions for which the WAF Custom Rule will triggers, all
            conditions needs to match in order for the WAF

            rule to trigger
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCondition'
          type: array
        enabled:
          description: Indicates whether the WAF custom rule is enabled.
          example: false
          type: boolean
        name:
          description: The Name of the WAF custom rule.
          example: Block request from a bad useragent
          type: string
        path_glob:
          description: The path glob for the WAF custom rule.
          example: /api/search/*
          type: string
        scope:
          description: The scope of the WAF custom rule.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleScope'
          type: array
        tags:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTags'
      required:
        - enabled
        - blocking
        - name
        - tags
        - conditions
      type: object
    ApplicationSecurityWafCustomRuleUpdateAttributes:
      description: Update a WAF custom rule.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleAction'
        blocking:
          description: Indicates whether the WAF custom rule will block the request.
          example: false
          type: boolean
        conditions:
          description: >-
            Conditions for which the WAF Custom Rule will triggers, all
            conditions needs to match in order for the WAF

            rule to trigger.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleCondition'
          type: array
        enabled:
          description: Indicates whether the WAF custom rule is enabled.
          example: false
          type: boolean
        name:
          description: The Name of the WAF custom rule.
          example: Block request from bad useragent
          type: string
        path_glob:
          description: The path glob for the WAF custom rule.
          example: /api/search/*
          type: string
        scope:
          description: The scope of the WAF custom rule.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleScope'
          type: array
        tags:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTags'
      required:
        - enabled
        - blocking
        - name
        - tags
        - conditions
      type: object
    ApplicationSecurityWafExclusionFilterAttributes:
      description: Attributes describing a WAF exclusion filter.
      properties:
        description:
          description: A description for the exclusion filter.
          example: Exclude false positives on a path
          type: string
        enabled:
          description: Indicates whether the exclusion filter is enabled.
          example: true
          type: boolean
        event_query:
          description: >-
            The event query matched by the legacy exclusion filter. Cannot be
            created nor updated.
          type: string
        ip_list:
          description: >-
            The client IP addresses matched by the exclusion filter (CIDR
            notation is supported).
          items:
            example: 198.51.100.72
            type: string
          type: array
        metadata:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterMetadata'
        on_match:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterOnMatch'
        parameters:
          description: >-
            A list of parameters matched by the exclusion filter in the HTTP
            query string and HTTP request body. Nested parameters can be matched
            by joining fields with a dot character.
          items:
            example: list.search.query
            type: string
          type: array
        path_glob:
          description: The HTTP path glob expression matched by the exclusion filter.
          example: /accounts/*
          type: string
        rules_target:
          description: The WAF rules targeted by the exclusion filter.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTarget
          type: array
        scope:
          description: The services where the exclusion filter is deployed.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterScope'
          type: array
        search_query:
          description: >-
            Generated event search query for traces matching the exclusion
            filter.
          readOnly: true
          type: string
      type: object
    ApplicationSecurityWafExclusionFilterID:
      description: The identifier of the WAF exclusion filter.
      example: 3dd-0uc-h1s
      readOnly: true
      type: string
    ApplicationSecurityWafExclusionFilterType:
      default: exclusion_filter
      description: Type of the resource. The value should always be `exclusion_filter`.
      enum:
        - exclusion_filter
      example: exclusion_filter
      type: string
      x-enum-varnames:
        - EXCLUSION_FILTER
    ApplicationSecurityWafExclusionFilterCreateAttributes:
      description: Attributes for creating a WAF exclusion filter.
      properties:
        description:
          description: A description for the exclusion filter.
          example: Exclude false positives on a path
          type: string
        enabled:
          description: Indicates whether the exclusion filter is enabled.
          example: true
          type: boolean
        ip_list:
          description: >-
            The client IP addresses matched by the exclusion filter (CIDR
            notation is supported).
          items:
            example: 198.51.100.72
            type: string
          type: array
        on_match:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterOnMatch'
        parameters:
          description: >-
            A list of parameters matched by the exclusion filter in the HTTP
            query string and HTTP request body. Nested parameters can be matched
            by joining fields with a dot character.
          items:
            example: list.search.query
            type: string
          type: array
        path_glob:
          description: The HTTP path glob expression matched by the exclusion filter.
          example: /accounts/*
          type: string
        rules_target:
          description: The WAF rules targeted by the exclusion filter.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTarget
          type: array
        scope:
          description: The services where the exclusion filter is deployed.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterScope'
          type: array
      required:
        - description
        - enabled
      type: object
    ApplicationSecurityWafExclusionFilterUpdateAttributes:
      description: Attributes for updating a WAF exclusion filter.
      properties:
        description:
          description: A description for the exclusion filter.
          example: Exclude false positives on a path
          type: string
        enabled:
          description: Indicates whether the exclusion filter is enabled.
          example: true
          type: boolean
        ip_list:
          description: >-
            The client IP addresses matched by the exclusion filter (CIDR
            notation is supported).
          items:
            example: 198.51.100.72
            type: string
          type: array
        on_match:
          $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterOnMatch'
        parameters:
          description: >-
            A list of parameters matched by the exclusion filter in the HTTP
            query string and HTTP request body. Nested parameters can be matched
            by joining fields with a dot character.
          items:
            example: list.search.query
            type: string
          type: array
        path_glob:
          description: The HTTP path glob expression matched by the exclusion filter.
          example: /accounts/*
          type: string
        rules_target:
          description: The WAF rules targeted by the exclusion filter.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTarget
          type: array
        scope:
          description: The services where the exclusion filter is deployed.
          items:
            $ref: '#/components/schemas/ApplicationSecurityWafExclusionFilterScope'
          type: array
      required:
        - description
        - enabled
      type: object
    CloudWorkloadSecurityAgentRuleAttributes:
      description: A Cloud Workload Security Agent rule returned by the API
      properties:
        actions:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActions'
        agentConstraint:
          description: The version of the Agent
          type: string
        blocking:
          description: The blocking policies that the rule belongs to
          items:
            type: string
          type: array
        category:
          description: The category of the Agent rule
          example: Process Activity
          type: string
        creationAuthorUuId:
          description: The ID of the user who created the rule
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
        creationDate:
          description: When the Agent rule was created, timestamp in milliseconds
          example: 1624366480320
          format: int64
          type: integer
        creator:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleCreatorAttributes'
        defaultRule:
          description: Whether the rule is included by default
          example: false
          type: boolean
        description:
          description: The description of the Agent rule
          example: My Agent rule
          type: string
        disabled:
          description: The disabled policies that the rule belongs to
          items:
            type: string
          type: array
        enabled:
          description: Whether the Agent rule is enabled
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule
          example: exec.file.name == "sh"
          type: string
        filters:
          description: The platforms the Agent rule is supported on
          items:
            type: string
          type: array
        monitoring:
          description: The monitoring policies that the rule belongs to
          items:
            type: string
          type: array
        name:
          description: The name of the Agent rule
          example: my_agent_rule
          type: string
        product_tags:
          description: The list of product tags associated with the rule
          items:
            type: string
          type: array
        updateAuthorUuId:
          description: The ID of the user who updated the rule
          example: e51c9744-d158-11ec-ad23-da7ad0900002
          type: string
        updateDate:
          description: Timestamp in milliseconds when the Agent rule was last updated
          example: 1624366480320
          format: int64
          type: integer
        updatedAt:
          description: When the Agent rule was last updated, timestamp in milliseconds
          example: 1624366480320
          format: int64
          type: integer
        updater:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleUpdaterAttributes'
        version:
          description: The version of the Agent rule
          example: 23
          format: int64
          type: integer
      type: object
    CloudWorkloadSecurityAgentRuleType:
      default: agent_rule
      description: The type of the resource, must always be `agent_rule`
      enum:
        - agent_rule
      example: agent_rule
      type: string
      x-enum-varnames:
        - AGENT_RULE
    CloudWorkloadSecurityAgentRuleCreateAttributes:
      description: Create a new Cloud Workload Security Agent rule.
      properties:
        actions:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActions'
        blocking:
          description: The blocking policies that the rule belongs to
          items:
            type: string
          type: array
        description:
          description: The description of the Agent rule.
          example: My Agent rule
          type: string
        disabled:
          description: The disabled policies that the rule belongs to
          items:
            type: string
          type: array
        enabled:
          description: Whether the Agent rule is enabled
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule.
          example: exec.file.name == "sh"
          type: string
        filters:
          description: The platforms the Agent rule is supported on
          items:
            type: string
          type: array
        monitoring:
          description: The monitoring policies that the rule belongs to
          items:
            type: string
          type: array
        name:
          description: The name of the Agent rule.
          example: my_agent_rule
          type: string
        policy_id:
          description: The ID of the policy where the Agent rule is saved
          example: a8c8e364-6556-434d-b798-a4c23de29c0b
          type: string
        product_tags:
          description: The list of product tags associated with the rule
          items:
            type: string
          type: array
      required:
        - name
        - expression
      type: object
    CloudWorkloadSecurityAgentRuleUpdateAttributes:
      description: Update an existing Cloud Workload Security Agent rule
      properties:
        actions:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActions'
        blocking:
          description: The blocking policies that the rule belongs to
          items:
            type: string
          type: array
        description:
          description: The description of the Agent rule
          example: My Agent rule
          type: string
        disabled:
          description: The disabled policies that the rule belongs to
          items:
            type: string
          type: array
        enabled:
          description: Whether the Agent rule is enabled
          example: true
          type: boolean
        expression:
          description: The SECL expression of the Agent rule
          example: exec.file.name == "sh"
          type: string
        monitoring:
          description: The monitoring policies that the rule belongs to
          items:
            type: string
          type: array
        policy_id:
          description: The ID of the policy where the Agent rule is saved
          example: a8c8e364-6556-434d-b798-a4c23de29c0b
          type: string
        product_tags:
          description: The list of product tags associated with the rule
          items:
            type: string
          type: array
      type: object
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule
      example: 3dd-0uc-h1s
      type: string
    CloudWorkloadSecurityAgentPolicyAttributes:
      description: A Cloud Workload Security Agent policy returned by the API
      properties:
        blockingRulesCount:
          description: The number of rules with the blocking feature in this policy
          example: 100
          format: int32
          maximum: 2147483647
          type: integer
        datadogManaged:
          description: Whether the policy is managed by Datadog
          example: false
          type: boolean
        description:
          description: The description of the policy
          example: My agent policy
          type: string
        disabledRulesCount:
          description: The number of rules that are disabled in this policy
          example: 100
          format: int32
          maximum: 2147483647
          type: integer
        enabled:
          description: Whether the Agent policy is enabled
          example: true
          type: boolean
        hostTags:
          description: The host tags defining where this policy is deployed
          items:
            type: string
          type: array
        hostTagsLists:
          description: >-
            The host tags defining where this policy is deployed, the inner
            values are linked with AND, the outer values are linked with OR
          items:
            items:
              type: string
            type: array
          type: array
        monitoringRulesCount:
          description: The number of rules in the monitoring state in this policy
          example: 100
          format: int32
          maximum: 2147483647
          type: integer
        name:
          description: The name of the policy
          example: my_agent_policy
          type: string
        policyVersion:
          description: The version of the policy
          example: '1'
          type: string
        priority:
          description: The priority of the policy
          example: 10
          format: int64
          type: integer
        ruleCount:
          description: The number of rules in this policy
          example: 100
          format: int32
          maximum: 2147483647
          type: integer
        updateDate:
          description: Timestamp in milliseconds when the policy was last updated
          example: 1624366480320
          format: int64
          type: integer
        updatedAt:
          description: When the policy was last updated, timestamp in milliseconds
          example: 1624366480320
          format: int64
          type: integer
        updater:
          $ref: >-
            #/components/schemas/CloudWorkloadSecurityAgentPolicyUpdaterAttributes
      type: object
    CloudWorkloadSecurityAgentPolicyType:
      default: policy
      description: The type of the resource, must always be `policy`
      enum:
        - policy
      example: policy
      type: string
      x-enum-varnames:
        - POLICY
    CloudWorkloadSecurityAgentPolicyCreateAttributes:
      description: Create a new Cloud Workload Security Agent policy
      properties:
        description:
          description: The description of the policy
          example: My agent policy
          type: string
        enabled:
          description: Whether the policy is enabled
          example: true
          type: boolean
        hostTags:
          description: The host tags defining where this policy is deployed
          items:
            type: string
          type: array
        hostTagsLists:
          description: >-
            The host tags defining where this policy is deployed, the inner
            values are linked with AND, the outer values are linked with OR
          items:
            items:
              type: string
            type: array
          type: array
        name:
          description: The name of the policy
          example: my_agent_policy
          type: string
      required:
        - name
      type: object
    CloudWorkloadSecurityAgentPolicyUpdateAttributes:
      description: Update an existing Cloud Workload Security Agent policy
      properties:
        description:
          description: The description of the policy
          example: My agent policy
          type: string
        enabled:
          description: Whether the policy is enabled
          example: true
          type: boolean
        hostTags:
          description: The host tags defining where this policy is deployed
          items:
            type: string
          type: array
        hostTagsLists:
          description: >-
            The host tags defining where this policy is deployed, the inner
            values are linked with AND, the outer values are linked with OR
          items:
            items:
              type: string
            type: array
          type: array
        name:
          description: The name of the policy
          example: my_agent_policy
          type: string
      type: object
    CloudWorkloadSecurityAgentPolicyID:
      description: The ID of the Agent policy
      example: 6517fcc1-cec7-4394-a655-8d6e9d085255
      type: string
    ObservabilityPipelineDataAttributes:
      description: >-
        Defines the pipeline’s name and its components (sources, processors, and
        destinations).
      properties:
        config:
          $ref: '#/components/schemas/ObservabilityPipelineConfig'
        name:
          description: Name of the pipeline.
          example: Main Observability Pipeline
          type: string
      required:
        - name
        - config
      type: object
    ValidationErrorMeta:
      description: >-
        Describes additional metadata for validation errors, including field
        names and error messages.
      properties:
        field:
          description: The field name that caused the error.
          example: region
          type: string
        id:
          description: The ID of the component in which the error occurred.
          example: datadog-agent-source
          type: string
        message:
          description: The detailed error message.
          example: Field 'region' is required
          type: string
      required:
        - message
      type: object
    ApplicationSecurityWafCustomRuleAction:
      description: The definition of `ApplicationSecurityWafCustomRuleAction` object.
      properties:
        action:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleActionAction'
        parameters:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleActionParameters
      type: object
    ApplicationSecurityWafCustomRuleCondition:
      description: One condition of the WAF Custom Rule.
      properties:
        operator:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionOperator
        parameters:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionParameters
      required:
        - operator
        - parameters
      type: object
    ApplicationSecurityWafCustomRuleMetadata:
      description: Metadata associated with the WAF Custom Rule.
      properties:
        added_at:
          description: The date and time the WAF custom rule was created.
          example: '2021-01-01T00:00:00Z'
          format: date-time
          type: string
        added_by:
          description: The handle of the user who created the WAF custom rule.
          example: john.doe@datadoghq.com
          type: string
        added_by_name:
          description: The name of the user who created the WAF custom rule.
          example: John Doe
          type: string
        modified_at:
          description: The date and time the WAF custom rule was last updated.
          example: '2021-01-01T00:00:00Z'
          format: date-time
          type: string
        modified_by:
          description: The handle of the user who last updated the WAF custom rule.
          example: john.doe@datadoghq.com
          type: string
        modified_by_name:
          description: The name of the user who last updated the WAF custom rule.
          example: John Doe
          type: string
      readOnly: true
      type: object
    ApplicationSecurityWafCustomRuleScope:
      description: The scope of the WAF custom rule.
      properties:
        env:
          description: The environment scope for the WAF custom rule.
          example: prod
          type: string
        service:
          description: The service scope for the WAF custom rule.
          example: billing-service
          type: string
      required:
        - service
        - env
      type: object
    ApplicationSecurityWafCustomRuleTags:
      additionalProperties:
        type: string
      description: >-
        Tags associated with the WAF Custom Rule. The concatenation of category
        and type will form the security

        activity field associated with the traces.
      maxProperties: 32
      properties:
        category:
          $ref: '#/components/schemas/ApplicationSecurityWafCustomRuleTagsCategory'
        type:
          description: >-
            The type of the WAF rule, associated with the category will form the
            security activity.
          example: users.login.success
          type: string
      required:
        - category
        - type
      type: object
    ApplicationSecurityWafExclusionFilterMetadata:
      description: Extra information about the exclusion filter.
      properties:
        added_at:
          description: The creation date of the exclusion filter.
          format: date-time
          type: string
        added_by:
          description: The handle of the user who created the exclusion filter.
          type: string
        added_by_name:
          description: The name of the user who created the exclusion filter.
          type: string
        modified_at:
          description: The last modification date of the exclusion filter.
          format: date-time
          type: string
        modified_by:
          description: The handle of the user who last modified the exclusion filter.
          type: string
        modified_by_name:
          description: The name of the user who last modified the exclusion filter.
          type: string
      readOnly: true
      type: object
    ApplicationSecurityWafExclusionFilterOnMatch:
      description: >-
        The action taken when the exclusion filter matches. When set to
        `monitor`, security traces are emitted but the requests are not blocked.
        By default, security traces are not emitted and the requests are not
        blocked.
      enum:
        - monitor
      type: string
      x-enum-varnames:
        - MONITOR
    ApplicationSecurityWafExclusionFilterRulesTarget:
      description: Target WAF rules based either on an identifier or tags.
      properties:
        rule_id:
          description: Target a single WAF rule based on its identifier.
          example: dog-913-009
          type: string
        tags:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafExclusionFilterRulesTargetTags
      type: object
    ApplicationSecurityWafExclusionFilterScope:
      description: Deploy on services based on their environment and/or service name.
      properties:
        env:
          description: Deploy on this environment.
          example: www
          type: string
        service:
          description: Deploy on this service.
          example: prod
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleActions:
      description: The array of actions the rule can perform if triggered
      items:
        $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleAction'
      nullable: true
      type: array
    CloudWorkloadSecurityAgentRuleCreatorAttributes:
      description: The attributes of the user who created the Agent rule
      properties:
        handle:
          description: The handle of the user
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user
          example: Datadog User
          nullable: true
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleUpdaterAttributes:
      description: The attributes of the user who last updated the Agent rule
      properties:
        handle:
          description: The handle of the user
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user
          example: Datadog User
          nullable: true
          type: string
      type: object
    CloudWorkloadSecurityAgentPolicyUpdaterAttributes:
      description: The attributes of the user who last updated the policy
      properties:
        handle:
          description: The handle of the user
          example: datadog.user@example.com
          type: string
        name:
          description: The name of the user
          example: Datadog User
          nullable: true
          type: string
      type: object
    ObservabilityPipelineConfig:
      description: >-
        Specifies the pipeline's configuration, including its sources,
        processors, and destinations.
      properties:
        destinations:
          description: A list of destination components where processed logs are sent.
          example:
            - id: datadog-logs-destination
              inputs:
                - filter-processor
              type: datadog_logs
          items:
            $ref: '#/components/schemas/ObservabilityPipelineConfigDestinationItem'
          type: array
        processors:
          description: A list of processors that transform or enrich log data.
          example:
            - id: filter-processor
              include: service:my-service
              inputs:
                - datadog-agent-source
              type: filter
          items:
            $ref: '#/components/schemas/ObservabilityPipelineConfigProcessorItem'
          type: array
        sources:
          description: A list of configured data sources for the pipeline.
          example:
            - id: datadog-agent-source
              type: datadog_agent
          items:
            $ref: '#/components/schemas/ObservabilityPipelineConfigSourceItem'
          type: array
      required:
        - sources
        - destinations
      type: object
    ApplicationSecurityWafCustomRuleActionAction:
      default: block_request
      description: >-
        Override the default action to take when the WAF custom rule would
        block.
      enum:
        - redirect_request
        - block_request
      example: block_request
      type: string
      x-enum-varnames:
        - REDIRECT_REQUEST
        - BLOCK_REQUEST
    ApplicationSecurityWafCustomRuleActionParameters:
      description: >-
        The definition of `ApplicationSecurityWafCustomRuleActionParameters`
        object.
      properties:
        location:
          description: The location to redirect to when the WAF custom rule triggers.
          example: /blocking
          type: string
        status_code:
          default: 403
          description: The status code to return when the WAF custom rule triggers.
          example: 403
          format: int64
          type: integer
      type: object
    ApplicationSecurityWafCustomRuleConditionOperator:
      description: Operator to use for the WAF Condition.
      enum:
        - match_regex
        - '!match_regex'
        - phrase_match
        - '!phrase_match'
        - is_xss
        - is_sqli
        - exact_match
        - '!exact_match'
        - ip_match
        - '!ip_match'
        - capture_data
      example: match_regex
      type: string
      x-enum-varnames:
        - MATCH_REGEX
        - NOT_MATCH_REGEX
        - PHRASE_MATCH
        - NOT_PHRASE_MATCH
        - IS_XSS
        - IS_SQLI
        - EXACT_MATCH
        - NOT_EXACT_MATCH
        - IP_MATCH
        - NOT_IP_MATCH
        - CAPTURE_DATA
    ApplicationSecurityWafCustomRuleConditionParameters:
      description: The scope of the WAF custom rule.
      properties:
        data:
          description: >-
            Identifier of a list of data from the denylist. Can only be used as
            substitution from the list parameter.
          example: blocked_users
          type: string
        inputs:
          description: >-
            List of inputs on which at least one should match with the given
            operator.
          items:
            $ref: >-
              #/components/schemas/ApplicationSecurityWafCustomRuleConditionInput
          type: array
        list:
          description: >-
            List of value to use with the condition. Only used with the
            phrase_match, !phrase_match, exact_match and

            !exact_match operator.
          items:
            type: string
          type: array
        options:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionOptions
        regex:
          description: >-
            Regex to use with the condition. Only used with match_regex and
            !match_regex operator.
          example: path.*
          type: string
        value:
          description: >-
            Store the captured value in the specified tag name. Only used with
            the capture_data operator.
          example: custom_tag
          type: string
      required:
        - inputs
      type: object
    ApplicationSecurityWafCustomRuleTagsCategory:
      description: >-
        The category of the WAF Rule, can be either `business_logic`,
        `attack_attempt` or `security_response`.
      enum:
        - attack_attempt
        - business_logic
        - security_response
      example: business_logic
      type: string
      x-enum-varnames:
        - ATTACK_ATTEMPT
        - BUSINESS_LOGIC
        - SECURITY_RESPONSE
    ApplicationSecurityWafExclusionFilterRulesTargetTags:
      additionalProperties:
        type: string
      description: Target multiple WAF rules based on their tags.
      properties:
        category:
          description: The category of the targeted WAF rules.
          example: attack_attempt
          type: string
        type:
          description: The type of the targeted WAF rules.
          example: lfi
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleAction:
      description: The action the rule can perform if triggered
      properties:
        filter:
          description: SECL expression used to target the container to apply the action on
          type: string
        hash:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActionHash'
        kill:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleKill'
        metadata:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActionMetadata'
        set:
          $ref: '#/components/schemas/CloudWorkloadSecurityAgentRuleActionSet'
      type: object
    ObservabilityPipelineConfigDestinationItem:
      description: A destination for the pipeline.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineDatadogLogsDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineAmazonS3Destination'
        - $ref: >-
            #/components/schemas/ObservabilityPipelineGoogleCloudStorageDestination
        - $ref: '#/components/schemas/ObservabilityPipelineSplunkHecDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineSumoLogicDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineElasticsearchDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineRsyslogDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineSyslogNgDestination'
        - $ref: '#/components/schemas/AzureStorageDestination'
        - $ref: '#/components/schemas/MicrosoftSentinelDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineGoogleChronicleDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineNewRelicDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineSentinelOneDestination'
        - $ref: '#/components/schemas/ObservabilityPipelineOpenSearchDestination'
        - $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonOpenSearchDestination
        - $ref: '#/components/schemas/ObservabilityPipelineSocketDestination'
        - $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonSecurityLakeDestination
        - $ref: >-
            #/components/schemas/ObservabilityPipelineCrowdStrikeNextGenSiemDestination
    ObservabilityPipelineConfigProcessorItem:
      description: A processor for the pipeline.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineFilterProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineParseJSONProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineAddFieldsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineRemoveFieldsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineRenameFieldsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineGenerateMetricsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineSampleProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineParseGrokProcessor'
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessor
        - $ref: '#/components/schemas/ObservabilityPipelineOcsfMapperProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineAddEnvVarsProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineDedupeProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineEnrichmentTableProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineReduceProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineThrottleProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineCustomProcessor'
        - $ref: '#/components/schemas/ObservabilityPipelineDatadogTagsProcessor'
    ObservabilityPipelineConfigSourceItem:
      description: A data source for the pipeline.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineKafkaSource'
        - $ref: '#/components/schemas/ObservabilityPipelineDatadogAgentSource'
        - $ref: '#/components/schemas/ObservabilityPipelineSplunkTcpSource'
        - $ref: '#/components/schemas/ObservabilityPipelineSplunkHecSource'
        - $ref: '#/components/schemas/ObservabilityPipelineAmazonS3Source'
        - $ref: '#/components/schemas/ObservabilityPipelineFluentdSource'
        - $ref: '#/components/schemas/ObservabilityPipelineFluentBitSource'
        - $ref: '#/components/schemas/ObservabilityPipelineHttpServerSource'
        - $ref: '#/components/schemas/ObservabilityPipelineSumoLogicSource'
        - $ref: '#/components/schemas/ObservabilityPipelineRsyslogSource'
        - $ref: '#/components/schemas/ObservabilityPipelineSyslogNgSource'
        - $ref: '#/components/schemas/ObservabilityPipelineAmazonDataFirehoseSource'
        - $ref: '#/components/schemas/ObservabilityPipelineGooglePubSubSource'
        - $ref: '#/components/schemas/ObservabilityPipelineHttpClientSource'
        - $ref: '#/components/schemas/ObservabilityPipelineLogstashSource'
        - $ref: '#/components/schemas/ObservabilityPipelineSocketSource'
    ApplicationSecurityWafCustomRuleConditionInput:
      description: Input from the request on which the condition should apply.
      properties:
        address:
          $ref: >-
            #/components/schemas/ApplicationSecurityWafCustomRuleConditionInputAddress
        key_path:
          description: Specific path for the input.
          items:
            type: string
          type: array
      required:
        - address
      type: object
    ApplicationSecurityWafCustomRuleConditionOptions:
      description: Options for the operator of this condition.
      properties:
        case_sensitive:
          default: false
          description: Evaluate the value as case sensitive.
          type: boolean
        min_length:
          default: 0
          description: >-
            Only evaluate this condition if the value has a minimum amount of
            characters.
          format: int64
          type: integer
      type: object
    CloudWorkloadSecurityAgentRuleActionHash:
      additionalProperties: {}
      description: An empty object indicating the hash action
      type: object
    CloudWorkloadSecurityAgentRuleKill:
      description: Kill system call applied on the container matching the rule
      properties:
        signal:
          description: Supported signals for the kill system call
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleActionMetadata:
      description: The metadata action applied on the scope matching the rule
      properties:
        image_tag:
          description: The image tag of the metadata action
          type: string
        service:
          description: The service of the metadata action
          type: string
        short_image:
          description: The short image of the metadata action
          type: string
      type: object
    CloudWorkloadSecurityAgentRuleActionSet:
      description: The set action applied on the scope matching the rule
      properties:
        append:
          description: Whether the value should be appended to the field
          type: boolean
        field:
          description: The field of the set action
          type: string
        name:
          description: The name of the set action
          type: string
        scope:
          description: The scope of the set action
          type: string
        size:
          description: The size of the set action
          format: int64
          type: integer
        ttl:
          description: The time to live of the set action
          format: int64
          type: integer
        value:
          description: The value of the set action
          type: string
      type: object
    ObservabilityPipelineDatadogLogsDestination:
      description: The `datadog_logs` destination forwards logs to Datadog Log Management.
      properties:
        id:
          description: The unique identifier for this component.
          example: datadog-logs-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogLogsDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineAmazonS3Destination:
      description: >-
        The `amazon_s3` destination sends your logs in Datadog-rehydratable
        format to an Amazon S3 bucket for archiving.
      properties:
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineAwsAuth'
        bucket:
          description: S3 bucket name.
          example: error-logs
          type: string
        id:
          description: Unique identifier for the destination component.
          example: amazon-s3-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        key_prefix:
          description: Optional prefix for object keys.
          type: string
        region:
          description: AWS region of the S3 bucket.
          example: us-east-1
          type: string
        storage_class:
          $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonS3DestinationStorageClass
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineAmazonS3DestinationType'
      required:
        - id
        - type
        - inputs
        - bucket
        - region
        - storage_class
      type: object
    ObservabilityPipelineGoogleCloudStorageDestination:
      description: >
        The `google_cloud_storage` destination stores logs in a Google Cloud
        Storage (GCS) bucket.

        It requires a bucket name, GCP authentication, and metadata fields.
      properties:
        acl:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGoogleCloudStorageDestinationAcl
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineGcpAuth'
        bucket:
          description: Name of the GCS bucket.
          example: error-logs
          type: string
        id:
          description: Unique identifier for the destination component.
          example: gcs-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        key_prefix:
          description: Optional prefix for object keys within the GCS bucket.
          type: string
        metadata:
          description: Custom metadata to attach to each object uploaded to the GCS bucket.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineMetadataEntry'
          type: array
        storage_class:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGoogleCloudStorageDestinationStorageClass
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGoogleCloudStorageDestinationType
      required:
        - id
        - type
        - inputs
        - bucket
        - auth
        - storage_class
        - acl
      type: object
    ObservabilityPipelineSplunkHecDestination:
      description: >
        The `splunk_hec` destination forwards logs to Splunk using the HTTP
        Event Collector (HEC).
      properties:
        auto_extract_timestamp:
          description: >
            If `true`, Splunk tries to extract timestamps from incoming log
            events.

            If `false`, Splunk assigns the time the event was received.
          example: true
          type: boolean
        encoding:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSplunkHecDestinationEncoding
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: splunk-hec-destination
          type: string
        index:
          description: Optional name of the Splunk index where logs are written.
          example: main
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        sourcetype:
          description: The Splunk sourcetype to assign to log events.
          example: custom_sourcetype
          type: string
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSplunkHecDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineSumoLogicDestination:
      description: The `sumo_logic` destination forwards logs to Sumo Logic.
      properties:
        encoding:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSumoLogicDestinationEncoding
        header_custom_fields:
          description: A list of custom headers to include in the request to Sumo Logic.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineSumoLogicDestinationHeaderCustomFieldsItem
          type: array
        header_host_name:
          description: Optional override for the host name header.
          example: host-123
          type: string
        header_source_category:
          description: Optional override for the source category header.
          example: source-category
          type: string
        header_source_name:
          description: Optional override for the source name header.
          example: source-name
          type: string
        id:
          description: The unique identifier for this component.
          example: sumo-logic-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSumoLogicDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineElasticsearchDestination:
      description: The `elasticsearch` destination writes logs to an Elasticsearch cluster.
      properties:
        api_version:
          $ref: >-
            #/components/schemas/ObservabilityPipelineElasticsearchDestinationApiVersion
        bulk_index:
          description: The index to write logs to in Elasticsearch.
          example: logs-index
          type: string
        id:
          description: The unique identifier for this component.
          example: elasticsearch-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineElasticsearchDestinationType
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineRsyslogDestination:
      description: >-
        The `rsyslog` destination forwards logs to an external `rsyslog` server
        over TCP or UDP using the syslog protocol.
      properties:
        id:
          description: The unique identifier for this component.
          example: rsyslog-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        keepalive:
          description: Optional socket keepalive duration in milliseconds.
          example: 60000
          format: int64
          minimum: 0
          type: integer
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineRsyslogDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineSyslogNgDestination:
      description: >-
        The `syslog_ng` destination forwards logs to an external `syslog-ng`
        server over TCP or UDP using the syslog protocol.
      properties:
        id:
          description: The unique identifier for this component.
          example: syslog-ng-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        keepalive:
          description: Optional socket keepalive duration in milliseconds.
          example: 60000
          format: int64
          minimum: 0
          type: integer
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSyslogNgDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    AzureStorageDestination:
      description: >-
        The `azure_storage` destination forwards logs to an Azure Blob Storage
        container.
      properties:
        blob_prefix:
          description: Optional prefix for blobs written to the container.
          example: logs/
          type: string
        container_name:
          description: The name of the Azure Blob Storage container to store logs in.
          example: my-log-container
          type: string
        id:
          description: The unique identifier for this component.
          example: azure-storage-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - processor-id
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/AzureStorageDestinationType'
      required:
        - id
        - type
        - inputs
        - container_name
      type: object
    MicrosoftSentinelDestination:
      description: >-
        The `microsoft_sentinel` destination forwards logs to Microsoft
        Sentinel.
      properties:
        client_id:
          description: Azure AD client ID used for authentication.
          example: a1b2c3d4-5678-90ab-cdef-1234567890ab
          type: string
        dcr_immutable_id:
          description: The immutable ID of the Data Collection Rule (DCR).
          example: dcr-uuid-1234
          type: string
        id:
          description: The unique identifier for this component.
          example: sentinel-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        table:
          description: The name of the Log Analytics table where logs are sent.
          example: CustomLogsTable
          type: string
        tenant_id:
          description: Azure AD tenant ID.
          example: abcdef12-3456-7890-abcd-ef1234567890
          type: string
        type:
          $ref: '#/components/schemas/MicrosoftSentinelDestinationType'
      required:
        - id
        - type
        - inputs
        - client_id
        - tenant_id
        - dcr_immutable_id
        - table
      type: object
    ObservabilityPipelineGoogleChronicleDestination:
      description: The `google_chronicle` destination sends logs to Google Chronicle.
      properties:
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineGcpAuth'
        customer_id:
          description: The Google Chronicle customer ID.
          example: abcdefg123456789
          type: string
        encoding:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGoogleChronicleDestinationEncoding
        id:
          description: The unique identifier for this component.
          example: google-chronicle-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - parse-json-processor
          items:
            type: string
          type: array
        log_type:
          description: The log type metadata associated with the Chronicle destination.
          example: nginx_logs
          type: string
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGoogleChronicleDestinationType
      required:
        - id
        - type
        - inputs
        - auth
        - customer_id
      type: object
    ObservabilityPipelineNewRelicDestination:
      description: The `new_relic` destination sends logs to the New Relic platform.
      properties:
        id:
          description: The unique identifier for this component.
          example: new-relic-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - parse-json-processor
          items:
            type: string
          type: array
        region:
          $ref: '#/components/schemas/ObservabilityPipelineNewRelicDestinationRegion'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineNewRelicDestinationType'
      required:
        - id
        - type
        - inputs
        - region
      type: object
    ObservabilityPipelineSentinelOneDestination:
      description: The `sentinel_one` destination sends logs to SentinelOne.
      properties:
        id:
          description: The unique identifier for this component.
          example: sentinelone-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        region:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSentinelOneDestinationRegion
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSentinelOneDestinationType'
      required:
        - id
        - type
        - inputs
        - region
      type: object
    ObservabilityPipelineOpenSearchDestination:
      description: The `opensearch` destination writes logs to an OpenSearch cluster.
      properties:
        bulk_index:
          description: The index to write logs to.
          example: logs-index
          type: string
        id:
          description: The unique identifier for this component.
          example: opensearch-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineOpenSearchDestinationType'
      required:
        - id
        - type
        - inputs
      type: object
    ObservabilityPipelineAmazonOpenSearchDestination:
      description: The `amazon_opensearch` destination writes logs to Amazon OpenSearch.
      properties:
        auth:
          $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonOpenSearchDestinationAuth
        bulk_index:
          description: The index to write logs to.
          example: logs-index
          type: string
        id:
          description: The unique identifier for this component.
          example: elasticsearch-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonOpenSearchDestinationType
      required:
        - id
        - type
        - inputs
        - auth
      type: object
    ObservabilityPipelineSocketDestination:
      description: |
        The `socket` destination sends logs over TCP or UDP to a remote server.
      properties:
        encoding:
          $ref: '#/components/schemas/ObservabilityPipelineSocketDestinationEncoding'
        framing:
          $ref: '#/components/schemas/ObservabilityPipelineSocketDestinationFraming'
        id:
          description: The unique identifier for this component.
          example: socket-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        mode:
          $ref: '#/components/schemas/ObservabilityPipelineSocketDestinationMode'
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
          description: TLS configuration. Relevant only when `mode` is `tcp`.
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSocketDestinationType'
      required:
        - id
        - type
        - inputs
        - encoding
        - framing
        - mode
      type: object
    ObservabilityPipelineAmazonSecurityLakeDestination:
      description: >
        The `amazon_security_lake` destination sends your logs to Amazon
        Security Lake.
      properties:
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineAwsAuth'
        bucket:
          description: Name of the Amazon S3 bucket in Security Lake (3-63 characters).
          example: security-lake-bucket
          type: string
        custom_source_name:
          description: Custom source name for the logs in Security Lake.
          example: my-custom-source
          type: string
        id:
          description: Unique identifier for the destination component.
          example: amazon-security-lake-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        region:
          description: AWS region of the S3 bucket.
          example: us-east-1
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonSecurityLakeDestinationType
      required:
        - id
        - type
        - inputs
        - bucket
        - region
        - custom_source_name
      type: object
    ObservabilityPipelineCrowdStrikeNextGenSiemDestination:
      description: >-
        The `crowdstrike_next_gen_siem` destination forwards logs to CrowdStrike
        Next Gen SIEM.
      properties:
        compression:
          $ref: >-
            #/components/schemas/ObservabilityPipelineCrowdStrikeNextGenSiemDestinationCompression
        encoding:
          $ref: >-
            #/components/schemas/ObservabilityPipelineCrowdStrikeNextGenSiemDestinationEncoding
        id:
          description: The unique identifier for this component.
          example: crowdstrike-ngsiem-destination
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - filter-processor
          items:
            type: string
          type: array
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineCrowdStrikeNextGenSiemDestinationType
      required:
        - id
        - type
        - inputs
        - encoding
      type: object
    ObservabilityPipelineFilterProcessor:
      description: >-
        The `filter` processor allows conditional processing of logs based on a
        Datadog search query. Logs that match the `include` query are passed
        through; others are discarded.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: filter-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs should pass
            through the filter. Logs that match this query continue to
            downstream components; others are dropped.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineFilterProcessorType'
      required:
        - id
        - type
        - include
        - inputs
      type: object
    ObservabilityPipelineParseJSONProcessor:
      description: >-
        The `parse_json` processor extracts JSON from a specified field and
        flattens it into the event. This is useful when logs contain embedded
        JSON as a string.
      properties:
        field:
          description: The name of the log field that contains a JSON string.
          example: message
          type: string
        id:
          description: >-
            A unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: parse-json-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineParseJSONProcessorType'
      required:
        - id
        - type
        - include
        - field
        - inputs
      type: object
    ObservabilityPipelineQuotaProcessor:
      description: >-
        The Quota Processor measures logging traffic for logs that match a
        specified filter. When the configured daily quota is met, the processor
        can drop or alert.
      properties:
        drop_events:
          description: >-
            If set to `true`, logs that matched the quota filter and sent after
            the quota has been met are dropped; only logs that did not match the
            filter query continue through the pipeline.
          example: false
          type: boolean
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: quota-processor
          type: string
        ignore_when_missing_partitions:
          description: >-
            If `true`, the processor skips quota checks when partition fields
            are missing from the logs.
          type: boolean
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        limit:
          $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorLimit'
        name:
          description: Name of the quota.
          example: MyQuota
          type: string
        overflow_action:
          $ref: >-
            #/components/schemas/ObservabilityPipelineQuotaProcessorOverflowAction
        overrides:
          description: >-
            A list of alternate quota rules that apply to specific sets of
            events, identified by matching field values. Each override can
            define a custom limit.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorOverride'
          type: array
        partition_fields:
          description: >-
            A list of fields used to segment log traffic for quota enforcement.
            Quotas are tracked independently by unique combinations of these
            field values.
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorType'
      required:
        - id
        - type
        - include
        - name
        - drop_events
        - limit
        - inputs
      type: object
    ObservabilityPipelineAddFieldsProcessor:
      description: The `add_fields` processor adds static key-value fields to logs.
      properties:
        fields:
          description: >-
            A list of static fields (key-value pairs) that is added to each log
            event processed by this component.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineFieldValue'
          type: array
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: add-fields-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineAddFieldsProcessorType'
      required:
        - id
        - type
        - include
        - fields
        - inputs
      type: object
    ObservabilityPipelineRemoveFieldsProcessor:
      description: The `remove_fields` processor deletes specified fields from logs.
      properties:
        fields:
          description: A list of field names to be removed from each log event.
          example:
            - field1
            - field2
          items:
            type: string
          type: array
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: remove-fields-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: The `PipelineRemoveFieldsProcessor` `inputs`.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineRemoveFieldsProcessorType'
      required:
        - id
        - type
        - include
        - fields
        - inputs
      type: object
    ObservabilityPipelineRenameFieldsProcessor:
      description: The `rename_fields` processor changes field names.
      properties:
        fields:
          description: >-
            A list of rename rules specifying which fields to rename in the
            event, what to rename them to, and whether to preserve the original
            fields.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineRenameFieldsProcessorField
          type: array
        id:
          description: >-
            A unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: rename-fields-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineRenameFieldsProcessorType'
      required:
        - id
        - type
        - include
        - fields
        - inputs
      type: object
    ObservabilityPipelineGenerateMetricsProcessor:
      description: >
        The `generate_datadog_metrics` processor creates custom metrics from
        logs and sends them to Datadog.

        Metrics can be counters, gauges, or distributions and optionally grouped
        by log fields.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline.
          example: generate-metrics-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            processor.
          example:
            - source-id
          items:
            type: string
          type: array
        metrics:
          description: Configuration for generating individual metrics.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineGeneratedMetric'
          type: array
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGenerateMetricsProcessorType
      required:
        - id
        - type
        - inputs
        - include
        - metrics
      type: object
    ObservabilityPipelineSampleProcessor:
      description: >-
        The `sample` processor allows probabilistic sampling of logs at a fixed
        rate.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: sample-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        percentage:
          description: The percentage of logs to sample.
          example: 10
          format: double
          type: number
        rate:
          description: Number of events to sample (1 in N).
          example: 10
          format: int64
          minimum: 1
          type: integer
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSampleProcessorType'
      required:
        - id
        - type
        - include
        - inputs
      type: object
    ObservabilityPipelineParseGrokProcessor:
      description: >-
        The `parse_grok` processor extracts structured fields from unstructured
        log messages using Grok patterns.
      properties:
        disable_library_rules:
          default: false
          description: >-
            If set to `true`, disables the default Grok rules provided by
            Datadog.
          example: true
          type: boolean
        id:
          description: A unique identifier for this processor.
          example: parse-grok-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        rules:
          description: >-
            The list of Grok parsing rules. If multiple matching rules are
            provided, they are evaluated in order. The first successful match is
            applied.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineParseGrokProcessorRule'
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineParseGrokProcessorType'
      required:
        - id
        - type
        - include
        - inputs
        - rules
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessor:
      description: >-
        The `sensitive_data_scanner` processor detects and optionally redacts
        sensitive data in log events.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: sensitive-scanner
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: source:prod
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - parse-json-processor
          items:
            type: string
          type: array
        rules:
          description: >-
            A list of rules for identifying and acting on sensitive data
            patterns.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorRule
          type: array
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorType
      required:
        - id
        - type
        - include
        - inputs
        - rules
      type: object
    ObservabilityPipelineOcsfMapperProcessor:
      description: >-
        The `ocsf_mapper` processor transforms logs into the OCSF schema using a
        predefined mapping configuration.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline.
          example: ocsf-mapper-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            processor.
          example:
            - filter-processor
          items:
            type: string
          type: array
        mappings:
          description: A list of mapping rules to convert events to the OCSF format.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineOcsfMapperProcessorMapping
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineOcsfMapperProcessorType'
      required:
        - id
        - type
        - include
        - inputs
        - mappings
      type: object
    ObservabilityPipelineAddEnvVarsProcessor:
      description: >-
        The `add_env_vars` processor adds environment variable values to log
        events.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            processor in the pipeline.
          example: add-env-vars-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the input for this
            processor.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineAddEnvVarsProcessorType'
        variables:
          description: A list of environment variable mappings to apply to log fields.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineAddEnvVarsProcessorVariable
          type: array
      required:
        - id
        - type
        - include
        - inputs
        - variables
      type: object
    ObservabilityPipelineDedupeProcessor:
      description: The `dedupe` processor removes duplicate fields in log events.
      properties:
        fields:
          description: A list of log field paths to check for duplicates.
          example:
            - log.message
            - log.error
          items:
            type: string
          type: array
        id:
          description: The unique identifier for this processor.
          example: dedupe-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the input for this
            processor.
          example:
            - parse-json-processor
          items:
            type: string
          type: array
        mode:
          $ref: '#/components/schemas/ObservabilityPipelineDedupeProcessorMode'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineDedupeProcessorType'
      required:
        - id
        - type
        - include
        - inputs
        - fields
        - mode
      type: object
    ObservabilityPipelineEnrichmentTableProcessor:
      description: >-
        The `enrichment_table` processor enriches logs using a static CSV file
        or GeoIP database.
      properties:
        file:
          $ref: '#/components/schemas/ObservabilityPipelineEnrichmentTableFile'
        geoip:
          $ref: '#/components/schemas/ObservabilityPipelineEnrichmentTableGeoIp'
        id:
          description: The unique identifier for this processor.
          example: enrichment-table-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: source:my-source
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the input for this
            processor.
          example:
            - add-fields-processor
          items:
            type: string
          type: array
        target:
          description: Path where enrichment results should be stored in the log.
          example: enriched.geoip
          type: string
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineEnrichmentTableProcessorType
      required:
        - id
        - type
        - include
        - inputs
        - target
      type: object
    ObservabilityPipelineReduceProcessor:
      description: >-
        The `reduce` processor aggregates and merges logs based on matching keys
        and merge strategies.
      properties:
        group_by:
          description: A list of fields used to group log events for merging.
          example:
            - log.user.id
            - log.device.id
          items:
            type: string
          type: array
        id:
          description: The unique identifier for this processor.
          example: reduce-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: env:prod
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the input for this
            processor.
          example:
            - parse-json-processor
          items:
            type: string
          type: array
        merge_strategies:
          description: >-
            List of merge strategies defining how values from grouped events
            should be combined.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineReduceProcessorMergeStrategy
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineReduceProcessorType'
      required:
        - id
        - type
        - include
        - inputs
        - group_by
        - merge_strategies
      type: object
    ObservabilityPipelineThrottleProcessor:
      description: >-
        The `throttle` processor limits the number of events that pass through
        over a given time window.
      properties:
        group_by:
          description: >-
            Optional list of fields used to group events before the threshold
            has been reached.
          example:
            - log.user.id
          items:
            type: string
          type: array
        id:
          description: The unique identifier for this processor.
          example: throttle-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: env:prod
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the input for this
            processor.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        threshold:
          description: >-
            the number of events allowed in a given time window. Events sent
            after the threshold has been reached, are dropped.
          example: 1000
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/ObservabilityPipelineThrottleProcessorType'
        window:
          description: The time window in seconds over which the threshold applies.
          example: 60
          format: double
          type: number
      required:
        - id
        - type
        - include
        - inputs
        - threshold
        - window
      type: object
    ObservabilityPipelineCustomProcessor:
      description: >-
        The `custom_processor` processor transforms events using [Vector Remap
        Language (VRL)](https://vector.dev/docs/reference/vrl/) scripts with
        advanced filtering capabilities.
      properties:
        id:
          description: The unique identifier for this processor.
          example: remap-vrl-processor
          type: string
        include:
          default: '*'
          description: >-
            A Datadog search query used to determine which logs this processor
            targets. This field should always be set to `*` for the
            custom_processor processor.
          example: '*'
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the input for this
            processor.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        remaps:
          description: Array of VRL remap rules.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineCustomProcessorRemap'
          minItems: 1
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineCustomProcessorType'
      required:
        - id
        - type
        - include
        - remaps
        - inputs
      type: object
    ObservabilityPipelineDatadogTagsProcessor:
      description: >-
        The `datadog_tags` processor includes or excludes specific Datadog tags
        in your logs.
      properties:
        action:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogTagsProcessorAction'
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: datadog-tags-processor
          type: string
        include:
          description: >-
            A Datadog search query used to determine which logs this processor
            targets.
          example: service:my-service
          type: string
        inputs:
          description: >-
            A list of component IDs whose output is used as the `input` for this
            component.
          example:
            - datadog-agent-source
          items:
            type: string
          type: array
        keys:
          description: A list of tag keys.
          example:
            - env
            - service
            - version
          items:
            type: string
          type: array
        mode:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogTagsProcessorMode'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogTagsProcessorType'
      required:
        - id
        - type
        - include
        - mode
        - action
        - keys
        - inputs
      type: object
    ObservabilityPipelineKafkaSource:
      description: The `kafka` source ingests data from Apache Kafka topics.
      properties:
        group_id:
          description: Consumer group ID used by the Kafka client.
          example: consumer-group-0
          type: string
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: kafka-source
          type: string
        librdkafka_options:
          description: >-
            Optional list of advanced Kafka client configuration options,
            defined as key-value pairs.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineKafkaSourceLibrdkafkaOption
          type: array
        sasl:
          $ref: '#/components/schemas/ObservabilityPipelineKafkaSourceSasl'
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        topics:
          description: >-
            A list of Kafka topic names to subscribe to. The source ingests
            messages from each topic specified.
          example:
            - topic1
            - topic2
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ObservabilityPipelineKafkaSourceType'
      required:
        - id
        - type
        - group_id
        - topics
      type: object
    ObservabilityPipelineDatadogAgentSource:
      description: The `datadog_agent` source collects logs from the Datadog Agent.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: datadog-agent-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineDatadogAgentSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineSplunkTcpSource:
      description: >
        The `splunk_tcp` source receives logs from a Splunk Universal Forwarder
        over TCP.

        TLS is supported for secure transmission.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: splunk-tcp-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSplunkTcpSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineSplunkHecSource:
      description: >
        The `splunk_hec` source implements the Splunk HTTP Event Collector (HEC)
        API.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: splunk-hec-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSplunkHecSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineAmazonS3Source:
      description: |
        The `amazon_s3` source ingests logs from an Amazon S3 bucket.
        It supports AWS authentication and TLS encryption.
      properties:
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineAwsAuth'
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: aws-s3-source
          type: string
        region:
          description: AWS region where the S3 bucket resides.
          example: us-east-1
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineAmazonS3SourceType'
      required:
        - id
        - type
        - region
      type: object
    ObservabilityPipelineFluentdSource:
      description: The `fluentd` source ingests logs from a Fluentd-compatible service.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: fluent-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineFluentdSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineFluentBitSource:
      description: The `fluent_bit` source ingests logs from Fluent Bit.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (for example, as the
            `input` to downstream components).
          example: fluent-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineFluentBitSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineHttpServerSource:
      description: >-
        The `http_server` source collects logs over HTTP POST from external
        services.
      properties:
        auth_strategy:
          $ref: >-
            #/components/schemas/ObservabilityPipelineHttpServerSourceAuthStrategy
        decoding:
          $ref: '#/components/schemas/ObservabilityPipelineDecoding'
        id:
          description: Unique ID for the HTTP server source.
          example: http-server-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineHttpServerSourceType'
      required:
        - id
        - type
        - auth_strategy
        - decoding
      type: object
    ObservabilityPipelineSumoLogicSource:
      description: The `sumo_logic` source receives logs from Sumo Logic collectors.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: sumo-logic-source
          type: string
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSumoLogicSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineRsyslogSource:
      description: >-
        The `rsyslog` source listens for logs over TCP or UDP from an `rsyslog`
        server using the syslog protocol.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: rsyslog-source
          type: string
        mode:
          $ref: '#/components/schemas/ObservabilityPipelineSyslogSourceMode'
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineRsyslogSourceType'
      required:
        - id
        - type
        - mode
      type: object
    ObservabilityPipelineSyslogNgSource:
      description: >-
        The `syslog_ng` source listens for logs over TCP or UDP from a
        `syslog-ng` server using the syslog protocol.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: syslog-ng-source
          type: string
        mode:
          $ref: '#/components/schemas/ObservabilityPipelineSyslogSourceMode'
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSyslogNgSourceType'
      required:
        - id
        - type
        - mode
      type: object
    ObservabilityPipelineAmazonDataFirehoseSource:
      description: The `amazon_data_firehose` source ingests logs from AWS Data Firehose.
      properties:
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineAwsAuth'
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: amazon-firehose-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonDataFirehoseSourceType
      required:
        - id
        - type
      type: object
    ObservabilityPipelineGooglePubSubSource:
      description: >-
        The `google_pubsub` source ingests logs from a Google Cloud Pub/Sub
        subscription.
      properties:
        auth:
          $ref: '#/components/schemas/ObservabilityPipelineGcpAuth'
        decoding:
          $ref: '#/components/schemas/ObservabilityPipelineDecoding'
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: google-pubsub-source
          type: string
        project:
          description: The GCP project ID that owns the Pub/Sub subscription.
          example: my-gcp-project
          type: string
        subscription:
          description: The Pub/Sub subscription name from which messages are consumed.
          example: logs-subscription
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineGooglePubSubSourceType'
      required:
        - id
        - type
        - auth
        - decoding
        - project
        - subscription
      type: object
    ObservabilityPipelineHttpClientSource:
      description: >-
        The `http_client` source scrapes logs from HTTP endpoints at regular
        intervals.
      properties:
        auth_strategy:
          $ref: >-
            #/components/schemas/ObservabilityPipelineHttpClientSourceAuthStrategy
        decoding:
          $ref: '#/components/schemas/ObservabilityPipelineDecoding'
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: http-client-source
          type: string
        scrape_interval_secs:
          description: The interval (in seconds) between HTTP scrape requests.
          example: 60
          format: int64
          type: integer
        scrape_timeout_secs:
          description: The timeout (in seconds) for each scrape request.
          example: 10
          format: int64
          type: integer
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineHttpClientSourceType'
      required:
        - id
        - type
        - decoding
      type: object
    ObservabilityPipelineLogstashSource:
      description: The `logstash` source ingests logs from a Logstash forwarder.
      properties:
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: logstash-source
          type: string
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
        type:
          $ref: '#/components/schemas/ObservabilityPipelineLogstashSourceType'
      required:
        - id
        - type
      type: object
    ObservabilityPipelineSocketSource:
      description: |
        The `socket` source ingests logs over TCP or UDP.
      properties:
        framing:
          $ref: '#/components/schemas/ObservabilityPipelineSocketSourceFraming'
        id:
          description: >-
            The unique identifier for this component. Used to reference this
            component in other parts of the pipeline (e.g., as input to
            downstream components).
          example: socket-source
          type: string
        mode:
          $ref: '#/components/schemas/ObservabilityPipelineSocketSourceMode'
        tls:
          $ref: '#/components/schemas/ObservabilityPipelineTls'
          description: TLS configuration. Relevant only when `mode` is `tcp`.
        type:
          $ref: '#/components/schemas/ObservabilityPipelineSocketSourceType'
      required:
        - id
        - type
        - mode
        - framing
      type: object
    ApplicationSecurityWafCustomRuleConditionInputAddress:
      description: Input from the request on which the condition should apply.
      enum:
        - server.db.statement
        - server.io.fs.file
        - server.io.net.url
        - server.sys.shell.cmd
        - server.request.method
        - server.request.uri.raw
        - server.request.path_params
        - server.request.query
        - server.request.headers.no_cookies
        - server.request.cookies
        - server.request.trailers
        - server.request.body
        - server.response.status
        - server.response.headers.no_cookies
        - server.response.trailers
        - grpc.server.request.metadata
        - grpc.server.request.message
        - grpc.server.method
        - graphql.server.all_resolvers
        - usr.id
        - http.client_ip
      example: server.db.statement
      type: string
      x-enum-varnames:
        - SERVER_DB_STATEMENT
        - SERVER_IO_FS_FILE
        - SERVER_IO_NET_URL
        - SERVER_SYS_SHELL_CMD
        - SERVER_REQUEST_METHOD
        - SERVER_REQUEST_URI_RAW
        - SERVER_REQUEST_PATH_PARAMS
        - SERVER_REQUEST_QUERY
        - SERVER_REQUEST_HEADERS_NO_COOKIES
        - SERVER_REQUEST_COOKIES
        - SERVER_REQUEST_TRAILERS
        - SERVER_REQUEST_BODY
        - SERVER_RESPONSE_STATUS
        - SERVER_RESPONSE_HEADERS_NO_COOKIES
        - SERVER_RESPONSE_TRAILERS
        - GRPC_SERVER_REQUEST_METADATA
        - GRPC_SERVER_REQUEST_MESSAGE
        - GRPC_SERVER_METHOD
        - GRAPHQL_SERVER_ALL_RESOLVERS
        - USR_ID
        - HTTP_CLIENT_IP
    ObservabilityPipelineDatadogLogsDestinationType:
      default: datadog_logs
      description: The destination type. The value should always be `datadog_logs`.
      enum:
        - datadog_logs
      example: datadog_logs
      type: string
      x-enum-varnames:
        - DATADOG_LOGS
    ObservabilityPipelineAwsAuth:
      description: >
        AWS authentication credentials used for accessing AWS services such as
        S3.

        If omitted, the system’s default credentials are used (for example, the
        IAM role and environment variables).
      properties:
        assume_role:
          description: The Amazon Resource Name (ARN) of the role to assume.
          type: string
        external_id:
          description: A unique identifier for cross-account role assumption.
          type: string
        session_name:
          description: >-
            A session identifier used for logging and tracing the assumed role
            session.
          type: string
      type: object
    ObservabilityPipelineAmazonS3DestinationStorageClass:
      description: S3 storage class.
      enum:
        - STANDARD
        - REDUCED_REDUNDANCY
        - INTELLIGENT_TIERING
        - STANDARD_IA
        - EXPRESS_ONEZONE
        - ONEZONE_IA
        - GLACIER
        - GLACIER_IR
        - DEEP_ARCHIVE
      example: STANDARD
      type: string
      x-enum-varnames:
        - STANDARD
        - REDUCED_REDUNDANCY
        - INTELLIGENT_TIERING
        - STANDARD_IA
        - EXPRESS_ONEZONE
        - ONEZONE_IA
        - GLACIER
        - GLACIER_IR
        - DEEP_ARCHIVE
    ObservabilityPipelineTls:
      description: >-
        Configuration for enabling TLS encryption between the pipeline component
        and external services.
      properties:
        ca_file:
          description: >-
            Path to the Certificate Authority (CA) file used to validate the
            server’s TLS certificate.
          type: string
        crt_file:
          description: >-
            Path to the TLS client certificate file used to authenticate the
            pipeline component with upstream or downstream services.
          example: /path/to/cert.crt
          type: string
        key_file:
          description: >-
            Path to the private key file associated with the TLS client
            certificate. Used for mutual TLS authentication.
          type: string
      required:
        - crt_file
      type: object
    ObservabilityPipelineAmazonS3DestinationType:
      default: amazon_s3
      description: The destination type. Always `amazon_s3`.
      enum:
        - amazon_s3
      example: amazon_s3
      type: string
      x-enum-varnames:
        - AMAZON_S3
    ObservabilityPipelineGoogleCloudStorageDestinationAcl:
      description: Access control list setting for objects written to the bucket.
      enum:
        - private
        - project-private
        - public-read
        - authenticated-read
        - bucket-owner-read
        - bucket-owner-full-control
      example: private
      type: string
      x-enum-varnames:
        - PRIVATE
        - PROJECTNOT_PRIVATE
        - PUBLICNOT_READ
        - AUTHENTICATEDNOT_READ
        - BUCKETNOT_OWNERNOT_READ
        - BUCKETNOT_OWNERNOT_FULLNOT_CONTROL
    ObservabilityPipelineGcpAuth:
      description: |
        GCP credentials used to authenticate with Google Cloud Storage.
      properties:
        credentials_file:
          description: Path to the GCP service account key file.
          example: /var/secrets/gcp-credentials.json
          type: string
      required:
        - credentials_file
      type: object
    ObservabilityPipelineMetadataEntry:
      description: A custom metadata entry.
      properties:
        name:
          description: The metadata key.
          example: environment
          type: string
        value:
          description: The metadata value.
          example: production
          type: string
      required:
        - name
        - value
      type: object
    ObservabilityPipelineGoogleCloudStorageDestinationStorageClass:
      description: Storage class used for objects stored in GCS.
      enum:
        - STANDARD
        - NEARLINE
        - COLDLINE
        - ARCHIVE
      example: STANDARD
      type: string
      x-enum-varnames:
        - STANDARD
        - NEARLINE
        - COLDLINE
        - ARCHIVE
    ObservabilityPipelineGoogleCloudStorageDestinationType:
      default: google_cloud_storage
      description: The destination type. Always `google_cloud_storage`.
      enum:
        - google_cloud_storage
      example: google_cloud_storage
      type: string
      x-enum-varnames:
        - GOOGLE_CLOUD_STORAGE
    ObservabilityPipelineSplunkHecDestinationEncoding:
      description: Encoding format for log events.
      enum:
        - json
        - raw_message
      example: json
      type: string
      x-enum-varnames:
        - JSON
        - RAW_MESSAGE
    ObservabilityPipelineSplunkHecDestinationType:
      default: splunk_hec
      description: The destination type. Always `splunk_hec`.
      enum:
        - splunk_hec
      example: splunk_hec
      type: string
      x-enum-varnames:
        - SPLUNK_HEC
    ObservabilityPipelineSumoLogicDestinationEncoding:
      description: The output encoding format.
      enum:
        - json
        - raw_message
        - logfmt
      example: json
      type: string
      x-enum-varnames:
        - JSON
        - RAW_MESSAGE
        - LOGFMT
    ObservabilityPipelineSumoLogicDestinationHeaderCustomFieldsItem:
      description: Single key-value pair used as a custom log header for Sumo Logic.
      properties:
        name:
          description: The header field name.
          example: X-Sumo-Category
          type: string
        value:
          description: The header field value.
          example: my-app-logs
          type: string
      required:
        - name
        - value
      type: object
    ObservabilityPipelineSumoLogicDestinationType:
      default: sumo_logic
      description: The destination type. The value should always be `sumo_logic`.
      enum:
        - sumo_logic
      example: sumo_logic
      type: string
      x-enum-varnames:
        - SUMO_LOGIC
    ObservabilityPipelineElasticsearchDestinationApiVersion:
      description: The Elasticsearch API version to use. Set to `auto` to auto-detect.
      enum:
        - auto
        - v6
        - v7
        - v8
      example: auto
      type: string
      x-enum-varnames:
        - AUTO
        - V6
        - V7
        - V8
    ObservabilityPipelineElasticsearchDestinationType:
      default: elasticsearch
      description: The destination type. The value should always be `elasticsearch`.
      enum:
        - elasticsearch
      example: elasticsearch
      type: string
      x-enum-varnames:
        - ELASTICSEARCH
    ObservabilityPipelineRsyslogDestinationType:
      default: rsyslog
      description: The destination type. The value should always be `rsyslog`.
      enum:
        - rsyslog
      example: rsyslog
      type: string
      x-enum-varnames:
        - RSYSLOG
    ObservabilityPipelineSyslogNgDestinationType:
      default: syslog_ng
      description: The destination type. The value should always be `syslog_ng`.
      enum:
        - syslog_ng
      example: syslog_ng
      type: string
      x-enum-varnames:
        - SYSLOG_NG
    AzureStorageDestinationType:
      default: azure_storage
      description: The destination type. The value should always be `azure_storage`.
      enum:
        - azure_storage
      example: azure_storage
      type: string
      x-enum-varnames:
        - AZURE_STORAGE
    MicrosoftSentinelDestinationType:
      default: microsoft_sentinel
      description: The destination type. The value should always be `microsoft_sentinel`.
      enum:
        - microsoft_sentinel
      example: microsoft_sentinel
      type: string
      x-enum-varnames:
        - MICROSOFT_SENTINEL
    ObservabilityPipelineGoogleChronicleDestinationEncoding:
      description: The encoding format for the logs sent to Chronicle.
      enum:
        - json
        - raw_message
      example: json
      type: string
      x-enum-varnames:
        - JSON
        - RAW_MESSAGE
    ObservabilityPipelineGoogleChronicleDestinationType:
      default: google_chronicle
      description: The destination type. The value should always be `google_chronicle`.
      enum:
        - google_chronicle
      example: google_chronicle
      type: string
      x-enum-varnames:
        - GOOGLE_CHRONICLE
    ObservabilityPipelineNewRelicDestinationRegion:
      description: The New Relic region.
      enum:
        - us
        - eu
      example: us
      type: string
      x-enum-varnames:
        - US
        - EU
    ObservabilityPipelineNewRelicDestinationType:
      default: new_relic
      description: The destination type. The value should always be `new_relic`.
      enum:
        - new_relic
      example: new_relic
      type: string
      x-enum-varnames:
        - NEW_RELIC
    ObservabilityPipelineSentinelOneDestinationRegion:
      description: The SentinelOne region to send logs to.
      enum:
        - us
        - eu
        - ca
        - data_set_us
      example: us
      type: string
      x-enum-varnames:
        - US
        - EU
        - CA
        - DATA_SET_US
    ObservabilityPipelineSentinelOneDestinationType:
      default: sentinel_one
      description: The destination type. The value should always be `sentinel_one`.
      enum:
        - sentinel_one
      example: sentinel_one
      type: string
      x-enum-varnames:
        - SENTINEL_ONE
    ObservabilityPipelineOpenSearchDestinationType:
      default: opensearch
      description: The destination type. The value should always be `opensearch`.
      enum:
        - opensearch
      example: opensearch
      type: string
      x-enum-varnames:
        - OPENSEARCH
    ObservabilityPipelineAmazonOpenSearchDestinationAuth:
      description: >
        Authentication settings for the Amazon OpenSearch destination.

        The `strategy` field determines whether basic or AWS-based
        authentication is used.
      properties:
        assume_role:
          description: The ARN of the role to assume (used with `aws` strategy).
          type: string
        aws_region:
          description: AWS region
          type: string
        external_id:
          description: External ID for the assumed role (used with `aws` strategy).
          type: string
        session_name:
          description: Session name for the assumed role (used with `aws` strategy).
          type: string
        strategy:
          $ref: >-
            #/components/schemas/ObservabilityPipelineAmazonOpenSearchDestinationAuthStrategy
      required:
        - strategy
      type: object
    ObservabilityPipelineAmazonOpenSearchDestinationType:
      default: amazon_opensearch
      description: The destination type. The value should always be `amazon_opensearch`.
      enum:
        - amazon_opensearch
      example: amazon_opensearch
      type: string
      x-enum-varnames:
        - AMAZON_OPENSEARCH
    ObservabilityPipelineSocketDestinationEncoding:
      description: Encoding format for log events.
      enum:
        - json
        - raw_message
      example: json
      type: string
      x-enum-varnames:
        - JSON
        - RAW_MESSAGE
    ObservabilityPipelineSocketDestinationFraming:
      description: Framing method configuration.
      oneOf:
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketDestinationFramingNewlineDelimited
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketDestinationFramingBytes
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketDestinationFramingCharacterDelimited
    ObservabilityPipelineSocketDestinationMode:
      description: Protocol used to send logs.
      enum:
        - tcp
        - udp
      example: tcp
      type: string
      x-enum-varnames:
        - TCP
        - UDP
    ObservabilityPipelineSocketDestinationType:
      default: socket
      description: The destination type. The value should always be `socket`.
      enum:
        - socket
      example: socket
      type: string
      x-enum-varnames:
        - SOCKET
    ObservabilityPipelineAmazonSecurityLakeDestinationType:
      default: amazon_security_lake
      description: The destination type. Always `amazon_security_lake`.
      enum:
        - amazon_security_lake
      example: amazon_security_lake
      type: string
      x-enum-varnames:
        - AMAZON_SECURITY_LAKE
    ObservabilityPipelineCrowdStrikeNextGenSiemDestinationCompression:
      description: Compression configuration for log events.
      properties:
        algorithm:
          $ref: >-
            #/components/schemas/ObservabilityPipelineCrowdStrikeNextGenSiemDestinationCompressionAlgorithm
        level:
          description: Compression level.
          example: 6
          format: int64
          type: integer
      required:
        - algorithm
      type: object
    ObservabilityPipelineCrowdStrikeNextGenSiemDestinationEncoding:
      description: Encoding format for log events.
      enum:
        - json
        - raw_message
      example: json
      type: string
      x-enum-varnames:
        - JSON
        - RAW_MESSAGE
    ObservabilityPipelineCrowdStrikeNextGenSiemDestinationType:
      default: crowdstrike_next_gen_siem
      description: >-
        The destination type. The value should always be
        `crowdstrike_next_gen_siem`.
      enum:
        - crowdstrike_next_gen_siem
      example: crowdstrike_next_gen_siem
      type: string
      x-enum-varnames:
        - CROWDSTRIKE_NEXT_GEN_SIEM
    ObservabilityPipelineFilterProcessorType:
      default: filter
      description: The processor type. The value should always be `filter`.
      enum:
        - filter
      example: filter
      type: string
      x-enum-varnames:
        - FILTER
    ObservabilityPipelineParseJSONProcessorType:
      default: parse_json
      description: The processor type. The value should always be `parse_json`.
      enum:
        - parse_json
      example: parse_json
      type: string
      x-enum-varnames:
        - PARSE_JSON
    ObservabilityPipelineQuotaProcessorLimit:
      description: >-
        The maximum amount of data or number of events allowed before the quota
        is enforced. Can be specified in bytes or events.
      properties:
        enforce:
          $ref: >-
            #/components/schemas/ObservabilityPipelineQuotaProcessorLimitEnforceType
        limit:
          description: The limit for quota enforcement.
          example: 1000
          format: int64
          type: integer
      required:
        - enforce
        - limit
      type: object
    ObservabilityPipelineQuotaProcessorOverflowAction:
      description: |
        The action to take when the quota is exceeded. Options:
        - `drop`: Drop the event.
        - `no_action`: Let the event pass through.
        - `overflow_routing`: Route to an overflow destination.
      enum:
        - drop
        - no_action
        - overflow_routing
      example: drop
      type: string
      x-enum-varnames:
        - DROP
        - NO_ACTION
        - OVERFLOW_ROUTING
    ObservabilityPipelineQuotaProcessorOverride:
      description: >-
        Defines a custom quota limit that applies to specific log events based
        on matching field values.
      properties:
        fields:
          description: >-
            A list of field matchers used to apply a specific override. If an
            event matches all listed key-value pairs, the corresponding override
            limit is enforced.
          items:
            $ref: '#/components/schemas/ObservabilityPipelineFieldValue'
          type: array
        limit:
          $ref: '#/components/schemas/ObservabilityPipelineQuotaProcessorLimit'
      required:
        - fields
        - limit
      type: object
    ObservabilityPipelineQuotaProcessorType:
      default: quota
      description: The processor type. The value should always be `quota`.
      enum:
        - quota
      example: quota
      type: string
      x-enum-varnames:
        - QUOTA
    ObservabilityPipelineFieldValue:
      description: Represents a static key-value pair used in various processors.
      properties:
        name:
          description: The field name.
          example: field_name
          type: string
        value:
          description: The field value.
          example: field_value
          type: string
      required:
        - name
        - value
      type: object
    ObservabilityPipelineAddFieldsProcessorType:
      default: add_fields
      description: The processor type. The value should always be `add_fields`.
      enum:
        - add_fields
      example: add_fields
      type: string
      x-enum-varnames:
        - ADD_FIELDS
    ObservabilityPipelineRemoveFieldsProcessorType:
      default: remove_fields
      description: The processor type. The value should always be `remove_fields`.
      enum:
        - remove_fields
      example: remove_fields
      type: string
      x-enum-varnames:
        - REMOVE_FIELDS
    ObservabilityPipelineRenameFieldsProcessorField:
      description: Defines how to rename a field in log events.
      properties:
        destination:
          description: The field name to assign the renamed value to.
          example: destination_field
          type: string
        preserve_source:
          description: >-
            Indicates whether the original field, that is received from the
            source, should be kept (`true`) or removed (`false`) after renaming.
          example: false
          type: boolean
        source:
          description: The original field name in the log event that should be renamed.
          example: source_field
          type: string
      required:
        - source
        - destination
        - preserve_source
      type: object
    ObservabilityPipelineRenameFieldsProcessorType:
      default: rename_fields
      description: The processor type. The value should always be `rename_fields`.
      enum:
        - rename_fields
      example: rename_fields
      type: string
      x-enum-varnames:
        - RENAME_FIELDS
    ObservabilityPipelineGeneratedMetric:
      description: >
        Defines a log-based custom metric, including its name, type, filter,
        value computation strategy,

        and optional grouping fields.
      properties:
        group_by:
          description: Optional fields used to group the metric series.
          example:
            - service
            - env
          items:
            type: string
          type: array
        include:
          description: Datadog filter query to match logs for metric generation.
          example: service:billing
          type: string
        metric_type:
          $ref: '#/components/schemas/ObservabilityPipelineGeneratedMetricMetricType'
        name:
          description: Name of the custom metric to be created.
          example: logs.processed
          type: string
        value:
          $ref: '#/components/schemas/ObservabilityPipelineMetricValue'
      required:
        - name
        - include
        - metric_type
        - value
      type: object
    ObservabilityPipelineGenerateMetricsProcessorType:
      default: generate_datadog_metrics
      description: The processor type. Always `generate_datadog_metrics`.
      enum:
        - generate_datadog_metrics
      example: generate_datadog_metrics
      type: string
      x-enum-varnames:
        - GENERATE_DATADOG_METRICS
    ObservabilityPipelineSampleProcessorType:
      default: sample
      description: The processor type. The value should always be `sample`.
      enum:
        - sample
      example: sample
      type: string
      x-enum-varnames:
        - SAMPLE
    ObservabilityPipelineParseGrokProcessorRule:
      description: >
        A Grok parsing rule used in the `parse_grok` processor. Each rule
        defines how to extract structured fields

        from a specific log field using Grok patterns.
      properties:
        match_rules:
          description: >
            A list of Grok parsing rules that define how to extract fields from
            the source field.

            Each rule must contain a name and a valid Grok pattern.
          example:
            - name: MyParsingRule
              rule: '%{word:user} connected on %{date("MM/dd/yyyy"):date}'
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineParseGrokProcessorRuleMatchRule
          type: array
        source:
          description: The name of the field in the log event to apply the Grok rules to.
          example: message
          type: string
        support_rules:
          description: >
            A list of Grok helper rules that can be referenced by the parsing
            rules.
          example:
            - name: user
              rule: '%{word:user.name}'
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineParseGrokProcessorRuleSupportRule
          type: array
      required:
        - source
        - match_rules
      type: object
    ObservabilityPipelineParseGrokProcessorType:
      default: parse_grok
      description: The processor type. The value should always be `parse_grok`.
      enum:
        - parse_grok
      example: parse_grok
      type: string
      x-enum-varnames:
        - PARSE_GROK
    ObservabilityPipelineSensitiveDataScannerProcessorRule:
      description: >-
        Defines a rule for detecting sensitive data, including matching pattern,
        scope, and the action to take.
      properties:
        keyword_options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorKeywordOptions
        name:
          description: A name identifying the rule.
          example: Redact Credit Card Numbers
          type: string
        on_match:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorAction
        pattern:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorPattern
        scope:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScope
        tags:
          description: Tags assigned to this rule for filtering and classification.
          example:
            - pii
            - ccn
          items:
            type: string
          type: array
      required:
        - name
        - tags
        - pattern
        - scope
        - on_match
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorType:
      default: sensitive_data_scanner
      description: The processor type. The value should always be `sensitive_data_scanner`.
      enum:
        - sensitive_data_scanner
      example: sensitive_data_scanner
      type: string
      x-enum-varnames:
        - SENSITIVE_DATA_SCANNER
    ObservabilityPipelineOcsfMapperProcessorMapping:
      description: >-
        Defines how specific events are transformed to OCSF using a mapping
        configuration.
      properties:
        include:
          description: >-
            A Datadog search query used to select the logs that this mapping
            should apply to.
          example: service:my-service
          type: string
        mapping:
          $ref: >-
            #/components/schemas/ObservabilityPipelineOcsfMapperProcessorMappingMapping
      required:
        - include
        - mapping
      type: object
    ObservabilityPipelineOcsfMapperProcessorType:
      default: ocsf_mapper
      description: The processor type. The value should always be `ocsf_mapper`.
      enum:
        - ocsf_mapper
      example: ocsf_mapper
      type: string
      x-enum-varnames:
        - OCSF_MAPPER
    ObservabilityPipelineAddEnvVarsProcessorType:
      default: add_env_vars
      description: The processor type. The value should always be `add_env_vars`.
      enum:
        - add_env_vars
      example: add_env_vars
      type: string
      x-enum-varnames:
        - ADD_ENV_VARS
    ObservabilityPipelineAddEnvVarsProcessorVariable:
      description: Defines a mapping between an environment variable and a log field.
      properties:
        field:
          description: The target field in the log event.
          example: log.environment.region
          type: string
        name:
          description: The name of the environment variable to read.
          example: AWS_REGION
          type: string
      required:
        - field
        - name
      type: object
    ObservabilityPipelineDedupeProcessorMode:
      description: The deduplication mode to apply to the fields.
      enum:
        - match
        - ignore
      example: match
      type: string
      x-enum-varnames:
        - MATCH
        - IGNORE
    ObservabilityPipelineDedupeProcessorType:
      default: dedupe
      description: The processor type. The value should always be `dedupe`.
      enum:
        - dedupe
      example: dedupe
      type: string
      x-enum-varnames:
        - DEDUPE
    ObservabilityPipelineEnrichmentTableFile:
      description: Defines a static enrichment table loaded from a CSV file.
      properties:
        encoding:
          $ref: >-
            #/components/schemas/ObservabilityPipelineEnrichmentTableFileEncoding
        key:
          description: Key fields used to look up enrichment values.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineEnrichmentTableFileKeyItems
          type: array
        path:
          description: Path to the CSV file.
          example: /etc/enrichment/lookup.csv
          type: string
        schema:
          description: Schema defining column names and their types.
          items:
            $ref: >-
              #/components/schemas/ObservabilityPipelineEnrichmentTableFileSchemaItems
          type: array
      required:
        - encoding
        - key
        - path
        - schema
      type: object
    ObservabilityPipelineEnrichmentTableGeoIp:
      description: Uses a GeoIP database to enrich logs based on an IP field.
      properties:
        key_field:
          description: Path to the IP field in the log.
          example: log.source.ip
          type: string
        locale:
          description: Locale used to resolve geographical names.
          example: en
          type: string
        path:
          description: Path to the GeoIP database file.
          example: /etc/geoip/GeoLite2-City.mmdb
          type: string
      required:
        - key_field
        - locale
        - path
      type: object
    ObservabilityPipelineEnrichmentTableProcessorType:
      default: enrichment_table
      description: The processor type. The value should always be `enrichment_table`.
      enum:
        - enrichment_table
      example: enrichment_table
      type: string
      x-enum-varnames:
        - ENRICHMENT_TABLE
    ObservabilityPipelineReduceProcessorMergeStrategy:
      description: Defines how a specific field should be merged across grouped events.
      properties:
        path:
          description: The field path in the log event.
          example: log.user.roles
          type: string
        strategy:
          $ref: >-
            #/components/schemas/ObservabilityPipelineReduceProcessorMergeStrategyStrategy
      required:
        - path
        - strategy
      type: object
    ObservabilityPipelineReduceProcessorType:
      default: reduce
      description: The processor type. The value should always be `reduce`.
      enum:
        - reduce
      example: reduce
      type: string
      x-enum-varnames:
        - REDUCE
    ObservabilityPipelineThrottleProcessorType:
      default: throttle
      description: The processor type. The value should always be `throttle`.
      enum:
        - throttle
      example: throttle
      type: string
      x-enum-varnames:
        - THROTTLE
    ObservabilityPipelineCustomProcessorRemap:
      description: >-
        Defines a single VRL remap rule with its own filtering and
        transformation logic.
      properties:
        drop_on_error:
          description: Whether to drop events that caused errors during processing.
          example: false
          type: boolean
        enabled:
          description: Whether this remap rule is enabled.
          example: true
          type: boolean
        include:
          description: >-
            A Datadog search query used to filter events for this specific remap
            rule.
          example: service:web
          type: string
        name:
          description: A descriptive name for this remap rule.
          example: Parse JSON from message field
          type: string
        source:
          description: The VRL script source code that defines the processing logic.
          example: . = parse_json!(.message)
          type: string
      required:
        - include
        - name
        - source
        - enabled
        - drop_on_error
      type: object
    ObservabilityPipelineCustomProcessorType:
      default: custom_processor
      description: The processor type. The value should always be `custom_processor`.
      enum:
        - custom_processor
      example: custom_processor
      type: string
      x-enum-varnames:
        - CUSTOM_PROCESSOR
    ObservabilityPipelineDatadogTagsProcessorAction:
      description: The action to take on tags with matching keys.
      enum:
        - include
        - exclude
      example: include
      type: string
      x-enum-varnames:
        - INCLUDE
        - EXCLUDE
    ObservabilityPipelineDatadogTagsProcessorMode:
      description: The processing mode.
      enum:
        - filter
      example: filter
      type: string
      x-enum-varnames:
        - FILTER
    ObservabilityPipelineDatadogTagsProcessorType:
      default: datadog_tags
      description: The processor type. The value should always be `datadog_tags`.
      enum:
        - datadog_tags
      example: datadog_tags
      type: string
      x-enum-varnames:
        - DATADOG_TAGS
    ObservabilityPipelineKafkaSourceLibrdkafkaOption:
      description: >-
        Represents a key-value pair used to configure low-level `librdkafka`
        client options for Kafka sources, such as timeouts, buffer sizes, and
        security settings.
      properties:
        name:
          description: The name of the `librdkafka` configuration option to set.
          example: fetch.message.max.bytes
          type: string
        value:
          description: >-
            The value assigned to the specified `librdkafka` configuration
            option.
          example: '1048576'
          type: string
      required:
        - name
        - value
      type: object
    ObservabilityPipelineKafkaSourceSasl:
      description: Specifies the SASL mechanism for authenticating with a Kafka cluster.
      properties:
        mechanism:
          $ref: >-
            #/components/schemas/ObservabilityPipelinePipelineKafkaSourceSaslMechanism
      type: object
    ObservabilityPipelineKafkaSourceType:
      default: kafka
      description: The source type. The value should always be `kafka`.
      enum:
        - kafka
      example: kafka
      type: string
      x-enum-varnames:
        - KAFKA
    ObservabilityPipelineDatadogAgentSourceType:
      default: datadog_agent
      description: The source type. The value should always be `datadog_agent`.
      enum:
        - datadog_agent
      example: datadog_agent
      type: string
      x-enum-varnames:
        - DATADOG_AGENT
    ObservabilityPipelineSplunkTcpSourceType:
      default: splunk_tcp
      description: The source type. Always `splunk_tcp`.
      enum:
        - splunk_tcp
      example: splunk_tcp
      type: string
      x-enum-varnames:
        - SPLUNK_TCP
    ObservabilityPipelineSplunkHecSourceType:
      default: splunk_hec
      description: The source type. Always `splunk_hec`.
      enum:
        - splunk_hec
      example: splunk_hec
      type: string
      x-enum-varnames:
        - SPLUNK_HEC
    ObservabilityPipelineAmazonS3SourceType:
      default: amazon_s3
      description: The source type. Always `amazon_s3`.
      enum:
        - amazon_s3
      example: amazon_s3
      type: string
      x-enum-varnames:
        - AMAZON_S3
    ObservabilityPipelineFluentdSourceType:
      default: fluentd
      description: The source type. The value should always be `fluentd.
      enum:
        - fluentd
      example: fluentd
      type: string
      x-enum-varnames:
        - FLUENTD
    ObservabilityPipelineFluentBitSourceType:
      default: fluent_bit
      description: The source type. The value should always be `fluent_bit`.
      enum:
        - fluent_bit
      example: fluent_bit
      type: string
      x-enum-varnames:
        - FLUENT_BIT
    ObservabilityPipelineHttpServerSourceAuthStrategy:
      description: HTTP authentication method.
      enum:
        - none
        - plain
      example: plain
      type: string
      x-enum-varnames:
        - NONE
        - PLAIN
    ObservabilityPipelineDecoding:
      description: The decoding format used to interpret incoming logs.
      enum:
        - bytes
        - gelf
        - json
        - syslog
      example: json
      type: string
      x-enum-varnames:
        - DECODE_BYTES
        - DECODE_GELF
        - DECODE_JSON
        - DECODE_SYSLOG
    ObservabilityPipelineHttpServerSourceType:
      default: http_server
      description: The source type. The value should always be `http_server`.
      enum:
        - http_server
      example: http_server
      type: string
      x-enum-varnames:
        - HTTP_SERVER
    ObservabilityPipelineSumoLogicSourceType:
      default: sumo_logic
      description: The source type. The value should always be `sumo_logic`.
      enum:
        - sumo_logic
      example: sumo_logic
      type: string
      x-enum-varnames:
        - SUMO_LOGIC
    ObservabilityPipelineSyslogSourceMode:
      description: Protocol used by the syslog source to receive messages.
      enum:
        - tcp
        - udp
      example: tcp
      type: string
      x-enum-varnames:
        - TCP
        - UDP
    ObservabilityPipelineRsyslogSourceType:
      default: rsyslog
      description: The source type. The value should always be `rsyslog`.
      enum:
        - rsyslog
      example: rsyslog
      type: string
      x-enum-varnames:
        - RSYSLOG
    ObservabilityPipelineSyslogNgSourceType:
      default: syslog_ng
      description: The source type. The value should always be `syslog_ng`.
      enum:
        - syslog_ng
      example: syslog_ng
      type: string
      x-enum-varnames:
        - SYSLOG_NG
    ObservabilityPipelineAmazonDataFirehoseSourceType:
      default: amazon_data_firehose
      description: The source type. The value should always be `amazon_data_firehose`.
      enum:
        - amazon_data_firehose
      example: amazon_data_firehose
      type: string
      x-enum-varnames:
        - AMAZON_DATA_FIREHOSE
    ObservabilityPipelineGooglePubSubSourceType:
      default: google_pubsub
      description: The source type. The value should always be `google_pubsub`.
      enum:
        - google_pubsub
      example: google_pubsub
      type: string
      x-enum-varnames:
        - GOOGLE_PUBSUB
    ObservabilityPipelineHttpClientSourceAuthStrategy:
      description: Optional authentication strategy for HTTP requests.
      enum:
        - basic
        - bearer
      example: basic
      type: string
      x-enum-varnames:
        - BASIC
        - BEARER
    ObservabilityPipelineHttpClientSourceType:
      default: http_client
      description: The source type. The value should always be `http_client`.
      enum:
        - http_client
      example: http_client
      type: string
      x-enum-varnames:
        - HTTP_CLIENT
    ObservabilityPipelineLogstashSourceType:
      default: logstash
      description: The source type. The value should always be `logstash`.
      enum:
        - logstash
      example: logstash
      type: string
      x-enum-varnames:
        - LOGSTASH
    ObservabilityPipelineSocketSourceFraming:
      description: Framing method configuration for the socket source.
      oneOf:
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingNewlineDelimited
        - $ref: '#/components/schemas/ObservabilityPipelineSocketSourceFramingBytes'
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingCharacterDelimited
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingOctetCounting
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingChunkedGelf
    ObservabilityPipelineSocketSourceMode:
      description: Protocol used to receive logs.
      enum:
        - tcp
        - udp
      example: tcp
      type: string
      x-enum-varnames:
        - TCP
        - UDP
    ObservabilityPipelineSocketSourceType:
      default: socket
      description: The source type. The value should always be `socket`.
      enum:
        - socket
      example: socket
      type: string
      x-enum-varnames:
        - SOCKET
    ObservabilityPipelineAmazonOpenSearchDestinationAuthStrategy:
      description: The authentication strategy to use.
      enum:
        - basic
        - aws
      example: aws
      type: string
      x-enum-varnames:
        - BASIC
        - AWS
    ObservabilityPipelineSocketDestinationFramingNewlineDelimited:
      description: Each log event is delimited by a newline character.
      properties:
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketDestinationFramingNewlineDelimitedMethod
      required:
        - method
      type: object
    ObservabilityPipelineSocketDestinationFramingBytes:
      description: Event data is not delimited at all.
      properties:
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketDestinationFramingBytesMethod
      required:
        - method
      type: object
    ObservabilityPipelineSocketDestinationFramingCharacterDelimited:
      description: Each log event is separated using the specified delimiter character.
      properties:
        delimiter:
          description: A single ASCII character used as a delimiter.
          example: '|'
          maxLength: 1
          minLength: 1
          type: string
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketDestinationFramingCharacterDelimitedMethod
      required:
        - method
        - delimiter
      type: object
    ObservabilityPipelineCrowdStrikeNextGenSiemDestinationCompressionAlgorithm:
      description: Compression algorithm for log events.
      enum:
        - gzip
        - zlib
      example: gzip
      type: string
      x-enum-varnames:
        - GZIP
        - ZLIB
    ObservabilityPipelineQuotaProcessorLimitEnforceType:
      description: Unit for quota enforcement in bytes for data size or events for count.
      enum:
        - bytes
        - events
      example: bytes
      type: string
      x-enum-varnames:
        - BYTES
        - EVENTS
    ObservabilityPipelineGeneratedMetricMetricType:
      description: Type of metric to create.
      enum:
        - count
        - gauge
        - distribution
      example: count
      type: string
      x-enum-varnames:
        - COUNT
        - GAUGE
        - DISTRIBUTION
    ObservabilityPipelineMetricValue:
      description: Specifies how the value of the generated metric is computed.
      oneOf:
        - $ref: >-
            #/components/schemas/ObservabilityPipelineGeneratedMetricIncrementByOne
        - $ref: >-
            #/components/schemas/ObservabilityPipelineGeneratedMetricIncrementByField
    ObservabilityPipelineParseGrokProcessorRuleMatchRule:
      description: >
        Defines a Grok parsing rule, which extracts structured fields from log
        content using named Grok patterns.

        Each rule must have a unique name and a valid Datadog Grok pattern that
        will be applied to the source field.
      properties:
        name:
          description: The name of the rule.
          example: MyParsingRule
          type: string
        rule:
          description: The definition of the Grok rule.
          example: '%{word:user} connected on %{date("MM/dd/yyyy"):date}'
          type: string
      required:
        - name
        - rule
      type: object
    ObservabilityPipelineParseGrokProcessorRuleSupportRule:
      description: The Grok helper rule referenced in the parsing rules.
      properties:
        name:
          description: The name of the Grok helper rule.
          example: user
          type: string
        rule:
          description: The definition of the Grok helper rule.
          example: ' %{word:user.name}'
          type: string
      required:
        - name
        - rule
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorKeywordOptions:
      description: >-
        Configuration for keywords used to reinforce sensitive data pattern
        detection.
      properties:
        keywords:
          description: A list of keywords to match near the sensitive pattern.
          example:
            - ssn
            - card
            - account
          items:
            type: string
          type: array
        proximity:
          description: >-
            Maximum number of tokens between a keyword and a sensitive value
            match.
          example: 5
          format: int64
          type: integer
      required:
        - keywords
        - proximity
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorAction:
      description: Defines what action to take when sensitive data is matched.
      oneOf:
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionRedact
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionHash
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedact
    ObservabilityPipelineSensitiveDataScannerProcessorPattern:
      description: >-
        Pattern detection configuration for identifying sensitive data using
        either a custom regex or a library reference.
      oneOf:
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorCustomPattern
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorLibraryPattern
    ObservabilityPipelineSensitiveDataScannerProcessorScope:
      description: >-
        Determines which parts of the log the pattern-matching rule should be
        applied to.
      oneOf:
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeInclude
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeExclude
        - $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeAll
    ObservabilityPipelineOcsfMapperProcessorMappingMapping:
      description: >-
        Defines a single mapping rule for transforming logs into the OCSF
        schema.
      oneOf:
        - $ref: '#/components/schemas/ObservabilityPipelineOcsfMappingLibrary'
    ObservabilityPipelineEnrichmentTableFileEncoding:
      description: File encoding format.
      properties:
        delimiter:
          description: The `encoding` `delimiter`.
          example: ','
          type: string
        includes_headers:
          description: The `encoding` `includes_headers`.
          example: true
          type: boolean
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineEnrichmentTableFileEncodingType
      required:
        - type
        - delimiter
        - includes_headers
      type: object
    ObservabilityPipelineEnrichmentTableFileKeyItems:
      description: >-
        Defines how to map log fields to enrichment table columns during
        lookups.
      properties:
        column:
          description: The `items` `column`.
          example: user_id
          type: string
        comparison:
          $ref: >-
            #/components/schemas/ObservabilityPipelineEnrichmentTableFileKeyItemsComparison
        field:
          description: The `items` `field`.
          example: log.user.id
          type: string
      required:
        - column
        - comparison
        - field
      type: object
    ObservabilityPipelineEnrichmentTableFileSchemaItems:
      description: Describes a single column and its type in an enrichment table schema.
      properties:
        column:
          description: The `items` `column`.
          example: region
          type: string
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineEnrichmentTableFileSchemaItemsType
      required:
        - column
        - type
      type: object
    ObservabilityPipelineReduceProcessorMergeStrategyStrategy:
      description: The merge strategy to apply.
      enum:
        - discard
        - retain
        - sum
        - max
        - min
        - array
        - concat
        - concat_newline
        - concat_raw
        - shortest_array
        - longest_array
        - flat_unique
      example: flat_unique
      type: string
      x-enum-varnames:
        - DISCARD
        - RETAIN
        - SUM
        - MAX
        - MIN
        - ARRAY
        - CONCAT
        - CONCAT_NEWLINE
        - CONCAT_RAW
        - SHORTEST_ARRAY
        - LONGEST_ARRAY
        - FLAT_UNIQUE
    ObservabilityPipelinePipelineKafkaSourceSaslMechanism:
      description: SASL mechanism used for Kafka authentication.
      enum:
        - PLAIN
        - SCRAM-SHA-256
        - SCRAM-SHA-512
      type: string
      x-enum-varnames:
        - PLAIN
        - SCRAMNOT_SHANOT_256
        - SCRAMNOT_SHANOT_512
    ObservabilityPipelineSocketSourceFramingNewlineDelimited:
      description: Byte frames which are delimited by a newline character.
      properties:
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingNewlineDelimitedMethod
      required:
        - method
      type: object
    ObservabilityPipelineSocketSourceFramingBytes:
      description: >-
        Byte frames are passed through as-is according to the underlying I/O
        boundaries (for example, split between messages or stream segments).
      properties:
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingBytesMethod
      required:
        - method
      type: object
    ObservabilityPipelineSocketSourceFramingCharacterDelimited:
      description: Byte frames which are delimited by a chosen character.
      properties:
        delimiter:
          description: A single ASCII character used to delimit events.
          example: '|'
          maxLength: 1
          minLength: 1
          type: string
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingCharacterDelimitedMethod
      required:
        - method
        - delimiter
      type: object
    ObservabilityPipelineSocketSourceFramingOctetCounting:
      description: Byte frames according to the octet counting format as per RFC6587.
      properties:
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingOctetCountingMethod
      required:
        - method
      type: object
    ObservabilityPipelineSocketSourceFramingChunkedGelf:
      description: Byte frames which are chunked GELF messages.
      properties:
        method:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSocketSourceFramingChunkedGelfMethod
      required:
        - method
      type: object
    ObservabilityPipelineSocketDestinationFramingNewlineDelimitedMethod:
      description: >-
        The definition of
        `ObservabilityPipelineSocketDestinationFramingNewlineDelimitedMethod`
        object.
      enum:
        - newline_delimited
      example: newline_delimited
      type: string
      x-enum-varnames:
        - NEWLINE_DELIMITED
    ObservabilityPipelineSocketDestinationFramingBytesMethod:
      description: >-
        The definition of
        `ObservabilityPipelineSocketDestinationFramingBytesMethod` object.
      enum:
        - bytes
      example: bytes
      type: string
      x-enum-varnames:
        - BYTES
    ObservabilityPipelineSocketDestinationFramingCharacterDelimitedMethod:
      description: >-
        The definition of
        `ObservabilityPipelineSocketDestinationFramingCharacterDelimitedMethod`
        object.
      enum:
        - character_delimited
      example: character_delimited
      type: string
      x-enum-varnames:
        - CHARACTER_DELIMITED
    ObservabilityPipelineGeneratedMetricIncrementByOne:
      description: >-
        Strategy that increments a generated metric by one for each matching
        event.
      properties:
        strategy:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGeneratedMetricIncrementByOneStrategy
      required:
        - strategy
      type: object
    ObservabilityPipelineGeneratedMetricIncrementByField:
      description: >-
        Strategy that increments a generated metric based on the value of a log
        field.
      properties:
        field:
          description: >-
            Name of the log field containing the numeric value to increment the
            metric by.
          example: errors
          type: string
        strategy:
          $ref: >-
            #/components/schemas/ObservabilityPipelineGeneratedMetricIncrementByFieldStrategy
      required:
        - strategy
        - field
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorActionRedact:
      description: Configuration for completely redacting matched sensitive data.
      properties:
        action:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionRedactAction
        options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionRedactOptions
      required:
        - action
        - options
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorActionHash:
      description: Configuration for hashing matched sensitive values.
      properties:
        action:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionHashAction
        options:
          description: >-
            The `ObservabilityPipelineSensitiveDataScannerProcessorActionHash`
            `options`.
          type: object
      required:
        - action
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedact:
      description: Configuration for partially redacting matched sensitive data.
      properties:
        action:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactAction
        options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactOptions
      required:
        - action
        - options
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorCustomPattern:
      description: >-
        Defines a custom regex-based pattern for identifying sensitive data in
        logs.
      properties:
        options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorCustomPatternOptions
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorCustomPatternType
      required:
        - type
        - options
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorLibraryPattern:
      description: >-
        Specifies a pattern from Datadog’s sensitive data detection library to
        match known sensitive data types.
      properties:
        options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorLibraryPatternOptions
        type:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorLibraryPatternType
      required:
        - type
        - options
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorScopeInclude:
      description: Includes only specific fields for sensitive data scanning.
      properties:
        options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeOptions
        target:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeIncludeTarget
      required:
        - target
        - options
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorScopeExclude:
      description: Excludes specific fields from sensitive data scanning.
      properties:
        options:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeOptions
        target:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeExcludeTarget
      required:
        - target
        - options
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorScopeAll:
      description: Applies scanning across all available fields.
      properties:
        target:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorScopeAllTarget
      required:
        - target
      type: object
    ObservabilityPipelineOcsfMappingLibrary:
      description: Predefined library mappings for common log formats.
      enum:
        - CloudTrail Account Change
        - GCP Cloud Audit CreateBucket
        - GCP Cloud Audit CreateSink
        - GCP Cloud Audit SetIamPolicy
        - GCP Cloud Audit UpdateSink
        - Github Audit Log API Activity
        - Google Workspace Admin Audit addPrivilege
        - Microsoft 365 Defender Incident
        - Microsoft 365 Defender UserLoggedIn
        - Okta System Log Authentication
        - Palo Alto Networks Firewall Traffic
      example: CloudTrail Account Change
      type: string
      x-enum-varnames:
        - CLOUDTRAIL_ACCOUNT_CHANGE
        - GCP_CLOUD_AUDIT_CREATEBUCKET
        - GCP_CLOUD_AUDIT_CREATESINK
        - GCP_CLOUD_AUDIT_SETIAMPOLICY
        - GCP_CLOUD_AUDIT_UPDATESINK
        - GITHUB_AUDIT_LOG_API_ACTIVITY
        - GOOGLE_WORKSPACE_ADMIN_AUDIT_ADDPRIVILEGE
        - MICROSOFT_365_DEFENDER_INCIDENT
        - MICROSOFT_365_DEFENDER_USERLOGGEDIN
        - OKTA_SYSTEM_LOG_AUTHENTICATION
        - PALO_ALTO_NETWORKS_FIREWALL_TRAFFIC
    ObservabilityPipelineEnrichmentTableFileEncodingType:
      description: Specifies the encoding format (e.g., CSV) used for enrichment tables.
      enum:
        - csv
      example: csv
      type: string
      x-enum-varnames:
        - CSV
    ObservabilityPipelineEnrichmentTableFileKeyItemsComparison:
      description: Defines how to compare key fields for enrichment table lookups.
      enum:
        - equals
      example: equals
      type: string
      x-enum-varnames:
        - EQUALS
    ObservabilityPipelineEnrichmentTableFileSchemaItemsType:
      description: Declares allowed data types for enrichment table columns.
      enum:
        - string
        - boolean
        - integer
        - float
        - date
        - timestamp
      example: string
      type: string
      x-enum-varnames:
        - STRING
        - BOOLEAN
        - INTEGER
        - FLOAT
        - DATE
        - TIMESTAMP
    ObservabilityPipelineSocketSourceFramingNewlineDelimitedMethod:
      description: Byte frames which are delimited by a newline character.
      enum:
        - newline_delimited
      example: newline_delimited
      type: string
      x-enum-varnames:
        - NEWLINE_DELIMITED
    ObservabilityPipelineSocketSourceFramingBytesMethod:
      description: >-
        Byte frames are passed through as-is according to the underlying I/O
        boundaries (for example, split between messages or stream segments).
      enum:
        - bytes
      example: bytes
      type: string
      x-enum-varnames:
        - BYTES
    ObservabilityPipelineSocketSourceFramingCharacterDelimitedMethod:
      description: Byte frames which are delimited by a chosen character.
      enum:
        - character_delimited
      example: character_delimited
      type: string
      x-enum-varnames:
        - CHARACTER_DELIMITED
    ObservabilityPipelineSocketSourceFramingOctetCountingMethod:
      description: Byte frames according to the octet counting format as per RFC6587.
      enum:
        - octet_counting
      example: octet_counting
      type: string
      x-enum-varnames:
        - OCTET_COUNTING
    ObservabilityPipelineSocketSourceFramingChunkedGelfMethod:
      description: Byte frames which are chunked GELF messages.
      enum:
        - chunked_gelf
      example: chunked_gelf
      type: string
      x-enum-varnames:
        - CHUNKED_GELF
    ObservabilityPipelineGeneratedMetricIncrementByOneStrategy:
      description: Increments the metric by 1 for each matching event.
      enum:
        - increment_by_one
      example: increment_by_one
      type: string
      x-enum-varnames:
        - INCREMENT_BY_ONE
    ObservabilityPipelineGeneratedMetricIncrementByFieldStrategy:
      description: Uses a numeric field in the log event as the metric increment.
      enum:
        - increment_by_field
      example: increment_by_field
      type: string
      x-enum-varnames:
        - INCREMENT_BY_FIELD
    ObservabilityPipelineSensitiveDataScannerProcessorActionRedactAction:
      description: >-
        Action type that completely replaces the matched sensitive data with a
        fixed replacement string to remove all visibility.
      enum:
        - redact
      example: redact
      type: string
      x-enum-varnames:
        - REDACT
    ObservabilityPipelineSensitiveDataScannerProcessorActionRedactOptions:
      description: Configuration for fully redacting sensitive data.
      properties:
        replace:
          description: >-
            The
            `ObservabilityPipelineSensitiveDataScannerProcessorActionRedactOptions`
            `replace`.
          example: '***'
          type: string
      required:
        - replace
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorActionHashAction:
      description: >-
        Action type that replaces the matched sensitive data with a hashed
        representation, preserving structure while securing content.
      enum:
        - hash
      example: hash
      type: string
      x-enum-varnames:
        - HASH
    ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactAction:
      description: >-
        Action type that redacts part of the sensitive data while preserving a
        configurable number of characters, typically used for masking purposes
        (e.g., show last 4 digits of a credit card).
      enum:
        - partial_redact
      example: partial_redact
      type: string
      x-enum-varnames:
        - PARTIAL_REDACT
    ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactOptions:
      description: >-
        Controls how partial redaction is applied, including character count and
        direction.
      properties:
        characters:
          description: >-
            The
            `ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactOptions`
            `characters`.
          example: 4
          format: int64
          type: integer
        direction:
          $ref: >-
            #/components/schemas/ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactOptionsDirection
      required:
        - characters
        - direction
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorCustomPatternOptions:
      description: Options for defining a custom regex pattern.
      properties:
        rule:
          description: >-
            A regular expression used to detect sensitive values. Must be a
            valid regex.
          example: \b\d{16}\b
          type: string
      required:
        - rule
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorCustomPatternType:
      description: Indicates a custom regular expression is used for matching.
      enum:
        - custom
      example: custom
      type: string
      x-enum-varnames:
        - CUSTOM
    ObservabilityPipelineSensitiveDataScannerProcessorLibraryPatternOptions:
      description: >-
        Options for selecting a predefined library pattern and enabling keyword
        support.
      properties:
        id:
          description: >-
            Identifier for a predefined pattern from the sensitive data scanner
            pattern library.
          example: credit_card
          type: string
        use_recommended_keywords:
          description: Whether to augment the pattern with recommended keywords (optional).
          type: boolean
      required:
        - id
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorLibraryPatternType:
      description: Indicates that a predefined library pattern is used.
      enum:
        - library
      example: library
      type: string
      x-enum-varnames:
        - LIBRARY
    ObservabilityPipelineSensitiveDataScannerProcessorScopeOptions:
      description: Fields to which the scope rule applies.
      properties:
        fields:
          description: >-
            The `ObservabilityPipelineSensitiveDataScannerProcessorScopeOptions`
            `fields`.
          example:
            - ''
          items:
            type: string
          type: array
      required:
        - fields
      type: object
    ObservabilityPipelineSensitiveDataScannerProcessorScopeIncludeTarget:
      description: Applies the rule only to included fields.
      enum:
        - include
      example: include
      type: string
      x-enum-varnames:
        - INCLUDE
    ObservabilityPipelineSensitiveDataScannerProcessorScopeExcludeTarget:
      description: Excludes specific fields from processing.
      enum:
        - exclude
      example: exclude
      type: string
      x-enum-varnames:
        - EXCLUDE
    ObservabilityPipelineSensitiveDataScannerProcessorScopeAllTarget:
      description: Applies the rule to all fields.
      enum:
        - all
      example: all
      type: string
      x-enum-varnames:
        - ALL
    ObservabilityPipelineSensitiveDataScannerProcessorActionPartialRedactOptionsDirection:
      description: >-
        Indicates whether to redact characters from the first or last part of
        the matched value.
      enum:
        - first
        - last
      example: last
      type: string
      x-enum-varnames:
        - FIRST
        - LAST
  responses:
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    ConcurrentModificationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Concurrent Modification
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
  parameters:
    ApplicationSecurityWafCustomRuleIDParam:
      description: The ID of the custom rule.
      example: 3b5-v82-ns6
      in: path
      name: custom_rule_id
      required: true
      schema:
        type: string
    ApplicationSecurityWafExclusionFilterID:
      description: The identifier of the WAF exclusion filter.
      example: 3b5-v82-ns6
      in: path
      name: exclusion_filter_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityQueryAgentPolicyID:
      description: The ID of the Agent policy
      example: 6517fcc1-cec7-4394-a655-8d6e9d085255
      in: query
      name: policy_id
      required: false
      schema:
        type: string
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityPathAgentPolicyID:
      description: The ID of the Agent policy
      example: 6517fcc1-cec7-4394-a655-8d6e9d085255
      in: path
      name: policy_id
      required: true
      schema:
        type: string
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: page[size]
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    PageNumber:
      description: Specific page number to return.
      in: query
      name: page[number]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
  x-stackQL-resources:
    waf_custom_rules:
      id: datadog.remote_config.waf_custom_rules
      name: waf_custom_rules
      title: Waf Custom Rules
      methods:
        list_application_security_wafcustom_rules:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1custom_rules/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_application_security_waf_custom_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1custom_rules/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_application_security_waf_custom_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1custom_rules~1{custom_rule_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_application_security_waf_custom_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1custom_rules~1{custom_rule_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_application_security_waf_custom_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1custom_rules~1{custom_rule_id}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/waf_custom_rules/methods/get_application_security_waf_custom_rule
          - $ref: >-
              #/components/x-stackQL-resources/waf_custom_rules/methods/list_application_security_wafcustom_rules
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/waf_custom_rules/methods/create_application_security_waf_custom_rule
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/waf_custom_rules/methods/delete_application_security_waf_custom_rule
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/waf_custom_rules/methods/update_application_security_waf_custom_rule
    waf_exclusion_filters:
      id: datadog.remote_config.waf_exclusion_filters
      name: waf_exclusion_filters
      title: Waf Exclusion Filters
      methods:
        list_application_security_waf_exclusion_filters:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1exclusion_filters/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_application_security_waf_exclusion_filter:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1exclusion_filters/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_application_security_waf_exclusion_filter:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1exclusion_filters~1{exclusion_filter_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_application_security_waf_exclusion_filter:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1exclusion_filters~1{exclusion_filter_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_application_security_waf_exclusion_filter:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1asm~1waf~1exclusion_filters~1{exclusion_filter_id}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/waf_exclusion_filters/methods/get_application_security_waf_exclusion_filter
          - $ref: >-
              #/components/x-stackQL-resources/waf_exclusion_filters/methods/list_application_security_waf_exclusion_filters
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/waf_exclusion_filters/methods/create_application_security_waf_exclusion_filter
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/waf_exclusion_filters/methods/delete_application_security_waf_exclusion_filter
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/waf_exclusion_filters/methods/update_application_security_waf_exclusion_filter
    csm_threats_agent_rules:
      id: datadog.remote_config.csm_threats_agent_rules
      name: csm_threats_agent_rules
      title: Csm Threats Agent Rules
      methods:
        list_csmthreats_agent_rules:
          operation:
            $ref: '#/paths/~1api~1v2~1remote_config~1products~1cws~1agent_rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_csmthreats_agent_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1remote_config~1products~1cws~1agent_rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_csmthreats_agent_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1agent_rules~1{agent_rule_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_csmthreats_agent_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1agent_rules~1{agent_rule_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_csmthreats_agent_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1agent_rules~1{agent_rule_id}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_rules/methods/get_csmthreats_agent_rule
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_rules/methods/list_csmthreats_agent_rules
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_rules/methods/create_csmthreats_agent_rule
        update:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_rules/methods/update_csmthreats_agent_rule
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_rules/methods/delete_csmthreats_agent_rule
        replace: []
    csm_threats_agent_policies:
      id: datadog.remote_config.csm_threats_agent_policies
      name: csm_threats_agent_policies
      title: Csm Threats Agent Policies
      methods:
        list_csmthreats_agent_policies:
          operation:
            $ref: '#/paths/~1api~1v2~1remote_config~1products~1cws~1policy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_csmthreats_agent_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1remote_config~1products~1cws~1policy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        download_csmthreats_policy:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1policy~1download/get
          response:
            mediaType: application/zip
            openAPIDocKey: '200'
        delete_csmthreats_agent_policy:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1policy~1{policy_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        get_csmthreats_agent_policy:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1policy~1{policy_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_csmthreats_agent_policy:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1cws~1policy~1{policy_id}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_policies/methods/get_csmthreats_agent_policy
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_policies/methods/list_csmthreats_agent_policies
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_policies/methods/create_csmthreats_agent_policy
        update:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_policies/methods/update_csmthreats_agent_policy
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/csm_threats_agent_policies/methods/delete_csmthreats_agent_policy
        replace: []
    observability_pipelines:
      id: datadog.remote_config.observability_pipelines
      name: observability_pipelines
      title: Observability Pipelines
      methods:
        list_pipelines:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1obs_pipelines~1pipelines/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_pipeline:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1obs_pipelines~1pipelines/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        validate_pipeline:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1obs_pipelines~1pipelines~1validate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_pipeline:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1obs_pipelines~1pipelines~1{pipeline_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_pipeline:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1obs_pipelines~1pipelines~1{pipeline_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_pipeline:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1remote_config~1products~1obs_pipelines~1pipelines~1{pipeline_id}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/observability_pipelines/methods/get_pipeline
          - $ref: >-
              #/components/x-stackQL-resources/observability_pipelines/methods/list_pipelines
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/observability_pipelines/methods/create_pipeline
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/observability_pipelines/methods/delete_pipeline
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/observability_pipelines/methods/update_pipeline
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
