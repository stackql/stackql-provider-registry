openapi: 3.0.0
info:
  title: actions API
  description: datadog actions API
  version: '1.0'
paths:
  /api/v2/actions-datastores:
    get:
      description: Lists all datastores for the organization.
      operationId: ListDatastores
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatastoreArray'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List datastores
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_read
    post:
      description: Creates a new datastore.
      operationId: CreateDatastore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppsDatastoreRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppsDatastoreResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create datastore
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_manage
  /api/v2/actions-datastores/{datastore_id}:
    delete:
      description: Deletes a datastore by its unique identifier.
      operationId: DeleteDatastore
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete datastore
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_manage
    get:
      description: Retrieves a specific datastore by its ID.
      operationId: GetDatastore
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get datastore
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_read
    patch:
      description: Updates an existing datastore's attributes.
      operationId: UpdateDatastore
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppsDatastoreRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update datastore
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_manage
  /api/v2/actions-datastores/{datastore_id}/items:
    delete:
      description: Deletes an item from a datastore by its key.
      operationId: DeleteDatastoreItem
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppsDatastoreItemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppsDatastoreItemResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete datastore item
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_write
    get:
      description: >-
        Lists items from a datastore. You can filter the results by specifying
        either an item key or a filter query parameter, but not both at the same
        time. Supports server-side pagination for large datasets.
      operationId: ListDatastoreItems
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
        - description: >-
            Optional query filter to search items using the [logs search
            syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional primary key value to retrieve a specific item. Cannot be
            used together with the filter parameter.
          in: query
          name: item_key
          schema:
            maxLength: 256
            type: string
        - description: >-
            Optional field to limit the number of items to return per page for
            pagination. Up to 100 items can be returned per page.
          in: query
          name: page[limit]
          schema:
            format: int64
            maximum: 100
            minimum: 1
            type: integer
        - description: >-
            Optional field to offset the number of items to skip from the
            beginning of the result set for pagination.
          in: query
          name: page[offset]
          schema:
            format: int64
            type: integer
        - description: >-
            Optional field to sort results by. Prefix with '-' for descending
            order (e.g., '-created_at').
          in: query
          name: sort
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemApiPayloadArray'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List datastore items
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_read
    patch:
      description: Partially updates an item in a datastore by its key.
      operationId: UpdateDatastoreItem
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppsDatastoreItemRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemApiPayload'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update datastore item
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_write
  /api/v2/actions-datastores/{datastore_id}/items/bulk:
    post:
      description: >-
        Creates or replaces multiple items in a datastore by their keys in a
        single operation.
      operationId: BulkWriteDatastoreItems
      parameters:
        - description: The unique identifier of the datastore to retrieve.
          in: path
          name: datastore_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPutAppsDatastoreItemsRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAppsDatastoreItemResponseArray'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Bulk write datastore items
      tags:
        - Actions Datastores
      x-permission:
        operator: OR
        permissions:
          - apps_datastore_write
  /api/v2/actions/app_key_registrations:
    get:
      description: List App Key Registrations
      operationId: ListAppKeyRegistrations
      parameters:
        - description: The number of App Key Registrations to return per page.
          in: query
          name: page[size]
          required: false
          schema:
            format: int64
            type: integer
        - description: The page number to return.
          in: query
          name: page[number]
          required: false
          schema:
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppKeyRegistrationsResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: List App Key Registrations
      tags:
        - Action Connection
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
  /api/v2/actions/app_key_registrations/{app_key_id}:
    delete:
      description: Unregister an App Key
      operationId: UnregisterAppKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyId'
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Unregister an App Key
      tags:
        - Action Connection
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
          - user_app_keys
          - service_account_write
    get:
      description: Get an existing App Key Registration
      operationId: GetAppKeyRegistration
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppKeyRegistrationResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Get an existing App Key Registration
      tags:
        - Action Connection
      x-permission:
        operator: OR
        permissions:
          - org_app_keys_read
    put:
      description: Register a new App Key
      operationId: RegisterAppKey
      parameters:
        - $ref: '#/components/parameters/ApplicationKeyId'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterAppKeyResponse'
          description: Created
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too many requests
      summary: Register a new App Key
      tags:
        - Action Connection
      x-permission:
        operator: OR
        permissions:
          - user_access_manage
          - user_app_keys
          - service_account_write
  /api/v2/actions/connections:
    post:
      description: >-
        Create a new Action Connection. This API requires a [registered
        application
        key](https://docs.datadoghq.com/api/latest/action-connection/#register-a-new-app-key).
      operationId: CreateActionConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActionConnectionRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActionConnectionResponse'
          description: Successfully created Action Connection
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Create a new Action Connection
      tags:
        - Action Connection
  /api/v2/actions/connections/{connection_id}:
    delete:
      description: >-
        Delete an existing Action Connection. This API requires a [registered
        application
        key](https://docs.datadoghq.com/api/latest/action-connection/#register-a-new-app-key).
        Alternatively, you can configure these permissions [in the
        UI](https://docs.datadoghq.com/account_management/api-app-keys/#actions-api-access).
      operationId: DeleteActionConnection
      parameters:
        - $ref: '#/components/parameters/ConnectionId'
      responses:
        '204':
          description: The resource was deleted successfully.
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Delete an existing Action Connection
      tags:
        - Action Connection
      x-permission:
        operator: OR
        permissions:
          - connection_write
    get:
      description: >-
        Get an existing Action Connection. This API requires a [registered
        application
        key](https://docs.datadoghq.com/api/latest/action-connection/#register-a-new-app-key).
      operationId: GetActionConnection
      parameters:
        - $ref: '#/components/parameters/ConnectionId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActionConnectionResponse'
          description: Successfully get Action Connection
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Get an existing Action Connection
      tags:
        - Action Connection
    patch:
      description: >-
        Update an existing Action Connection. This API requires a [registered
        application
        key](https://docs.datadoghq.com/api/latest/action-connection/#register-a-new-app-key).
      operationId: UpdateActionConnection
      parameters:
        - $ref: '#/components/parameters/ConnectionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActionConnectionRequest'
        description: Update an existing Action Connection request body
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActionConnectionResponse'
          description: Successfully updated Action Connection
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Not Found
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSONAPIErrorResponse'
          description: Too Many Request
      summary: Update an existing Action Connection
      tags:
        - Action Connection
components:
  schemas:
    DatastoreArray:
      description: A collection of datastores returned by list operations.
      properties:
        data:
          description: >-
            An array of datastore objects containing their configurations and
            metadata.
          items:
            $ref: '#/components/schemas/DatastoreData'
          type: array
      required:
        - data
      type: object
    CreateAppsDatastoreRequest:
      description: >-
        Request to create a new datastore with specified configuration and
        metadata.
      properties:
        data:
          $ref: '#/components/schemas/CreateAppsDatastoreRequestData'
      type: object
    CreateAppsDatastoreResponse:
      description: >-
        Response after successfully creating a new datastore, containing the
        datastore's assigned ID.
      properties:
        data:
          $ref: '#/components/schemas/CreateAppsDatastoreResponseData'
      type: object
    JSONAPIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            $ref: '#/components/schemas/JSONAPIErrorItem'
          type: array
      required:
        - errors
      type: object
    Datastore:
      description: A datastore's complete configuration and metadata.
      properties:
        data:
          $ref: '#/components/schemas/DatastoreData'
      type: object
    UpdateAppsDatastoreRequest:
      description: >-
        Request to update a datastore's configuration such as its name or
        description.
      properties:
        data:
          $ref: '#/components/schemas/UpdateAppsDatastoreRequestData'
      type: object
    DeleteAppsDatastoreItemRequest:
      description: Request to delete a specific item from a datastore by its primary key.
      properties:
        data:
          $ref: '#/components/schemas/DeleteAppsDatastoreItemRequestData'
      type: object
    DeleteAppsDatastoreItemResponse:
      description: Response from successfully deleting a datastore item.
      properties:
        data:
          $ref: '#/components/schemas/DeleteAppsDatastoreItemResponseData'
      type: object
    ItemApiPayloadArray:
      description: A collection of datastore items with pagination and schema metadata.
      properties:
        data:
          description: An array of datastore items with their content and metadata.
          items:
            $ref: '#/components/schemas/ItemApiPayloadData'
          maxItems: 100
          type: array
        meta:
          $ref: '#/components/schemas/ItemApiPayloadMeta'
          description: >-
            Metadata about the included items, including pagination info and
            datastore schema.
      required:
        - data
      type: object
    UpdateAppsDatastoreItemRequest:
      description: Request to update specific fields on an existing datastore item.
      properties:
        data:
          $ref: '#/components/schemas/UpdateAppsDatastoreItemRequestData'
      type: object
    ItemApiPayload:
      description: A single datastore item with its content and metadata.
      properties:
        data:
          $ref: '#/components/schemas/ItemApiPayloadData'
      type: object
    BulkPutAppsDatastoreItemsRequest:
      description: Request to insert multiple items into a datastore in a single operation.
      properties:
        data:
          $ref: '#/components/schemas/BulkPutAppsDatastoreItemsRequestData'
      type: object
    PutAppsDatastoreItemResponseArray:
      description: >-
        Response after successfully inserting multiple items into a datastore,
        containing the identifiers of the created items.
      properties:
        data:
          description: >-
            An array of data objects containing the identifiers of the
            successfully inserted items.
          items:
            $ref: '#/components/schemas/PutAppsDatastoreItemResponseData'
          maxItems: 100
          type: array
      required:
        - data
      type: object
    ListAppKeyRegistrationsResponse:
      description: A paginated list of app key registrations.
      properties:
        data:
          description: An array of app key registrations.
          items:
            $ref: '#/components/schemas/AppKeyRegistrationData'
          type: array
        meta:
          $ref: '#/components/schemas/ListAppKeyRegistrationsResponseMeta'
      type: object
    GetAppKeyRegistrationResponse:
      description: The response object after getting an app key registration.
      properties:
        data:
          $ref: '#/components/schemas/AppKeyRegistrationData'
      type: object
    RegisterAppKeyResponse:
      description: The response object after creating an app key registration.
      properties:
        data:
          $ref: '#/components/schemas/AppKeyRegistrationData'
      type: object
    CreateActionConnectionRequest:
      description: Request used to create an action connection.
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      required:
        - data
      type: object
    CreateActionConnectionResponse:
      description: The response for a created connection
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      type: object
    GetActionConnectionResponse:
      description: The response for found connection
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      type: object
    UpdateActionConnectionRequest:
      description: Request used to update an action connection.
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionDataUpdate'
      required:
        - data
      type: object
    UpdateActionConnectionResponse:
      description: The response for an updated connection.
      properties:
        data:
          $ref: '#/components/schemas/ActionConnectionData'
      type: object
    DatastoreData:
      description: >-
        Core information about a datastore, including its unique identifier and
        attributes.
      properties:
        attributes:
          $ref: '#/components/schemas/DatastoreDataAttributes'
        id:
          description: The unique identifier of the datastore.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreDataType'
      required:
        - type
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    CreateAppsDatastoreRequestData:
      description: >-
        Data wrapper containing the configuration needed to create a new
        datastore.
      properties:
        attributes:
          $ref: '#/components/schemas/CreateAppsDatastoreRequestDataAttributes'
        id:
          description: >-
            Optional ID for the new datastore. If not provided, one will be
            generated automatically.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreDataType'
      required:
        - type
      type: object
    CreateAppsDatastoreResponseData:
      description: The newly created datastore's data.
      properties:
        id:
          description: The unique identifier assigned to the newly created datastore.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreDataType'
      required:
        - type
      type: object
    JSONAPIErrorItem:
      description: API error response body
      properties:
        detail:
          description: >-
            A human-readable explanation specific to this occurrence of the
            error.
          example: Missing required attribute in body
          type: string
        meta:
          additionalProperties: {}
          description: Non-standard meta-information about the error
          type: object
        source:
          $ref: '#/components/schemas/JSONAPIErrorItemSource'
        status:
          description: Status code of the response.
          example: '400'
          type: string
        title:
          description: Short human-readable summary of the error.
          example: Bad Request
          type: string
      type: object
    UpdateAppsDatastoreRequestData:
      description: >-
        Data wrapper containing the datastore identifier and the attributes to
        update.
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateAppsDatastoreRequestDataAttributes'
        id:
          description: The unique identifier of the datastore to update.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreDataType'
      required:
        - type
      type: object
    DeleteAppsDatastoreItemRequestData:
      description: >-
        Data wrapper containing the information needed to identify and delete a
        specific datastore item.
      properties:
        attributes:
          $ref: '#/components/schemas/DeleteAppsDatastoreItemRequestDataAttributes'
        type:
          $ref: '#/components/schemas/DatastoreItemsDataType'
      required:
        - type
      type: object
    DeleteAppsDatastoreItemResponseData:
      description: >-
        Data containing the identifier of the datastore item that was
        successfully deleted.
      properties:
        id:
          description: The unique identifier of the item that was deleted.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreItemsDataType'
      required:
        - type
      type: object
    ItemApiPayloadData:
      description: Core data and metadata for a single datastore item.
      properties:
        attributes:
          $ref: '#/components/schemas/ItemApiPayloadDataAttributes'
        id:
          description: The unique identifier of the datastore.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreItemsDataType'
      required:
        - type
      type: object
    ItemApiPayloadMeta:
      description: >-
        Additional metadata about a collection of datastore items, including
        pagination and schema information.
      properties:
        page:
          $ref: '#/components/schemas/ItemApiPayloadMetaPage'
        schema:
          $ref: '#/components/schemas/ItemApiPayloadMetaSchema'
      type: object
    UpdateAppsDatastoreItemRequestData:
      description: >-
        Data wrapper containing the item identifier and the changes to apply
        during the update operation.
      properties:
        attributes:
          $ref: '#/components/schemas/UpdateAppsDatastoreItemRequestDataAttributes'
        id:
          description: The unique identifier of the datastore item.
          type: string
        type:
          $ref: '#/components/schemas/UpdateAppsDatastoreItemRequestDataType'
      required:
        - type
      type: object
    BulkPutAppsDatastoreItemsRequestData:
      description: >-
        Data wrapper containing the items to insert and their configuration for
        the bulk insert operation.
      properties:
        attributes:
          $ref: '#/components/schemas/BulkPutAppsDatastoreItemsRequestDataAttributes'
        type:
          $ref: '#/components/schemas/DatastoreItemsDataType'
      required:
        - type
      type: object
    PutAppsDatastoreItemResponseData:
      description: >-
        Data containing the identifier of a single item that was successfully
        inserted into the datastore.
      properties:
        id:
          description: The unique identifier assigned to the inserted item.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreItemsDataType'
      required:
        - type
      type: object
    AppKeyRegistrationData:
      description: Data related to the app key registration.
      properties:
        id:
          description: The app key registration identifier
          format: uuid
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/AppKeyRegistrationDataType'
      required:
        - type
      type: object
    ListAppKeyRegistrationsResponseMeta:
      description: The definition of `ListAppKeyRegistrationsResponseMeta` object.
      properties:
        total:
          description: The total number of app key registrations.
          example: 1
          format: int64
          type: integer
        total_filtered:
          description: >-
            The total number of app key registrations that match the specified
            filters.
          example: 1
          format: int64
          type: integer
      type: object
    ActionConnectionData:
      description: Data related to the connection.
      properties:
        attributes:
          $ref: '#/components/schemas/ActionConnectionAttributes'
        id:
          description: The connection identifier
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/ActionConnectionDataType'
      required:
        - type
        - attributes
      type: object
    ActionConnectionDataUpdate:
      description: Data related to the connection update.
      properties:
        attributes:
          $ref: '#/components/schemas/ActionConnectionAttributesUpdate'
        type:
          $ref: '#/components/schemas/ActionConnectionDataType'
      required:
        - type
        - attributes
      type: object
    DatastoreDataAttributes:
      description: Detailed information about a datastore.
      properties:
        created_at:
          description: Timestamp when the datastore was created.
          format: date-time
          type: string
        creator_user_id:
          description: The numeric ID of the user who created the datastore.
          format: int64
          type: integer
        creator_user_uuid:
          description: The UUID of the user who created the datastore.
          type: string
        description:
          description: A human-readable description about the datastore.
          type: string
        modified_at:
          description: Timestamp when the datastore was last modified.
          format: date-time
          type: string
        name:
          description: The display name of the datastore.
          type: string
        org_id:
          description: The ID of the organization that owns this datastore.
          format: int64
          type: integer
        primary_column_name:
          $ref: '#/components/schemas/DatastoreAttributesPrimaryColumnName'
        primary_key_generation_strategy:
          $ref: '#/components/schemas/DatastorePrimaryKeyGenerationStrategy'
      type: object
    DatastoreDataType:
      default: datastores
      description: The resource type for datastores.
      enum:
        - datastores
      example: datastores
      type: string
      x-enum-varnames:
        - DATASTORES
    CreateAppsDatastoreRequestDataAttributes:
      description: Configuration and metadata to create a new datastore.
      properties:
        description:
          description: A human-readable description about the datastore.
          type: string
        name:
          description: The display name for the new datastore.
          example: datastore-name
          type: string
        org_access:
          $ref: >-
            #/components/schemas/CreateAppsDatastoreRequestDataAttributesOrgAccess
        primary_column_name:
          $ref: '#/components/schemas/DatastoreAttributesPrimaryColumnName'
        primary_key_generation_strategy:
          $ref: '#/components/schemas/DatastorePrimaryKeyGenerationStrategy'
      required:
        - name
        - primary_column_name
      type: object
    JSONAPIErrorItemSource:
      description: References to the source of the error.
      properties:
        header:
          description: >-
            A string indicating the name of a single request header which caused
            the error.
          example: Authorization
          type: string
        parameter:
          description: A string indicating which URI query parameter caused the error.
          example: limit
          type: string
        pointer:
          description: >-
            A JSON pointer to the value in the request document that caused the
            error.
          example: /data/attributes/title
          type: string
      type: object
    UpdateAppsDatastoreRequestDataAttributes:
      description: Attributes that can be updated on a datastore.
      properties:
        description:
          description: A human-readable description about the datastore.
          type: string
        name:
          description: The display name of the datastore.
          type: string
      type: object
    DeleteAppsDatastoreItemRequestDataAttributes:
      description: Attributes specifying which datastore item to delete by its primary key.
      properties:
        id:
          description: Optional unique identifier of the item to delete.
          example: a7656bcc-51d4-4884-adf7-4d0d9a3e0633
          type: string
        item_key:
          description: >-
            The primary key value that identifies the item to delete. Cannot
            exceed 256 characters.
          example: primaryKey
          maxLength: 256
          type: string
      required:
        - item_key
      type: object
    DatastoreItemsDataType:
      default: items
      description: The resource type for datastore items.
      enum:
        - items
      example: items
      type: string
      x-enum-varnames:
        - ITEMS
    ItemApiPayloadDataAttributes:
      description: Metadata and content of a datastore item.
      properties:
        created_at:
          description: Timestamp when the item was first created.
          format: date-time
          type: string
        modified_at:
          description: Timestamp when the item was last modified.
          format: date-time
          type: string
        org_id:
          description: The ID of the organization that owns this item.
          format: int64
          type: integer
        primary_column_name:
          $ref: '#/components/schemas/DatastoreAttributesPrimaryColumnName'
        signature:
          description: A unique signature identifying this item version.
          type: string
        store_id:
          description: The unique identifier of the datastore containing this item.
          type: string
        value:
          $ref: '#/components/schemas/ItemApiPayloadDataAttributesValue'
      type: object
    ItemApiPayloadMetaPage:
      description: Pagination information for a collection of datastore items.
      properties:
        hasMore:
          description: Whether there are additional pages of items beyond the current page.
          type: boolean
        totalCount:
          description: The total number of items in the datastore, ignoring any filters.
          format: int64
          type: integer
        totalFilteredCount:
          description: The total number of items that match the current filter criteria.
          format: int64
          type: integer
      type: object
    ItemApiPayloadMetaSchema:
      description: >-
        Schema information about the datastore, including its primary key and
        field definitions.
      properties:
        fields:
          description: An array describing the columns available in this datastore.
          items:
            $ref: '#/components/schemas/ItemApiPayloadMetaSchemaField'
          type: array
        primary_key:
          description: The name of the primary key column for this datastore.
          type: string
      type: object
    UpdateAppsDatastoreItemRequestDataAttributes:
      description: >-
        Attributes for updating a datastore item, including the item key and
        changes to apply.
      properties:
        id:
          description: The unique identifier of the item being updated.
          type: string
        item_changes:
          $ref: >-
            #/components/schemas/UpdateAppsDatastoreItemRequestDataAttributesItemChanges
        item_key:
          description: >-
            The primary key that identifies the item to update. Cannot exceed
            256 characters.
          example: ''
          maxLength: 256
          type: string
      required:
        - item_changes
        - item_key
      type: object
    UpdateAppsDatastoreItemRequestDataType:
      default: items
      description: The resource type for datastore items.
      enum:
        - items
      example: items
      type: string
      x-enum-varnames:
        - ITEMS
    BulkPutAppsDatastoreItemsRequestDataAttributes:
      description: Configuration for bulk inserting multiple items into a datastore.
      properties:
        conflict_mode:
          $ref: '#/components/schemas/DatastoreItemConflictMode'
        values:
          $ref: '#/components/schemas/DatastoreItemValues'
      required:
        - values
      type: object
    AppKeyRegistrationDataType:
      description: The definition of `AppKeyRegistrationDataType` object.
      enum:
        - app_key_registration
      example: app_key_registration
      type: string
      x-enum-varnames:
        - APP_KEY_REGISTRATION
    ActionConnectionAttributes:
      description: The definition of `ActionConnectionAttributes` object.
      properties:
        integration:
          $ref: '#/components/schemas/ActionConnectionIntegration'
        name:
          description: Name of the connection
          example: My AWS Connection
          type: string
      required:
        - name
        - integration
      type: object
    ActionConnectionDataType:
      description: The definition of `ActionConnectionDataType` object.
      enum:
        - action_connection
      example: action_connection
      type: string
      x-enum-varnames:
        - ACTION_CONNECTION
    ActionConnectionAttributesUpdate:
      description: The definition of `ActionConnectionAttributesUpdate` object.
      properties:
        integration:
          $ref: '#/components/schemas/ActionConnectionIntegrationUpdate'
        name:
          description: Name of the connection
          example: My AWS Connection
          type: string
      type: object
    DatastoreAttributesPrimaryColumnName:
      description: >-
        The name of the primary key column for this datastore. Primary column
        names:
          - Must abide by both [PostgreSQL naming conventions](https://www.postgresql.org/docs/7.0/syntax525.htm)
          - Cannot exceed 63 characters
      example: ''
      maxLength: 63
      type: string
    DatastorePrimaryKeyGenerationStrategy:
      description: >-
        Can be set to `uuid` to automatically generate primary keys when new
        items are added. Default value is `none`, which requires you to supply a
        primary key for each new item.
      enum:
        - none
        - uuid
      type: string
      x-enum-varnames:
        - NONE
        - UUID
    CreateAppsDatastoreRequestDataAttributesOrgAccess:
      description: >-
        The organization access level for the datastore. For example,
        'contributor'.
      enum:
        - contributor
        - viewer
        - manager
      type: string
      x-enum-varnames:
        - CONTRIBUTOR
        - VIEWER
        - MANAGER
    ItemApiPayloadDataAttributesValue:
      additionalProperties: {}
      description: The data content (as key-value pairs) of a datastore item.
      type: object
    ItemApiPayloadMetaSchemaField:
      description: Information about a specific column in the datastore schema.
      properties:
        name:
          description: The name of this column in the datastore.
          example: ''
          type: string
        type:
          description: >-
            The data type of this column. For example, 'string', 'number', or
            'boolean'.
          example: ''
          type: string
      required:
        - name
        - type
      type: object
    UpdateAppsDatastoreItemRequestDataAttributesItemChanges:
      description: Changes to apply to a datastore item using set operations.
      properties:
        ops_set:
          additionalProperties: {}
          description: >-
            Set operation that contains key-value pairs to set on the datastore
            item.
          type: object
      type: object
    DatastoreItemConflictMode:
      description: >-
        How to handle conflicts when inserting items that already exist in the
        datastore.
      enum:
        - fail_on_conflict
        - overwrite_on_conflict
      example: overwrite_on_conflict
      type: string
      x-enum-varnames:
        - FAIL_ON_CONFLICT
        - OVERWRITE_ON_CONFLICT
    DatastoreItemValues:
      description: >-
        An array of items to add to the datastore, where each item is a set of
        key-value pairs representing the item's data. Up to 100 items can be
        updated in a single request.
      example:
        - data: example data
          key: value
        - data: example data2
          key: value2
      items:
        additionalProperties: {}
        description: >-
          A single item's data as key-value pairs. Key names cannot exceed 63
          characters.
        type: object
      maxItems: 100
      type: array
    ActionConnectionIntegration:
      description: The definition of `ActionConnectionIntegration` object.
      oneOf:
        - $ref: '#/components/schemas/AWSIntegration'
        - $ref: '#/components/schemas/AnthropicIntegration'
        - $ref: '#/components/schemas/AsanaIntegration'
        - $ref: '#/components/schemas/AzureIntegration'
        - $ref: '#/components/schemas/CircleCIIntegration'
        - $ref: '#/components/schemas/ClickupIntegration'
        - $ref: '#/components/schemas/CloudflareIntegration'
        - $ref: '#/components/schemas/ConfigCatIntegration'
        - $ref: '#/components/schemas/DatadogIntegration'
        - $ref: '#/components/schemas/FastlyIntegration'
        - $ref: '#/components/schemas/FreshserviceIntegration'
        - $ref: '#/components/schemas/GCPIntegration'
        - $ref: '#/components/schemas/GeminiIntegration'
        - $ref: '#/components/schemas/GitlabIntegration'
        - $ref: '#/components/schemas/GreyNoiseIntegration'
        - $ref: '#/components/schemas/HTTPIntegration'
        - $ref: '#/components/schemas/LaunchDarklyIntegration'
        - $ref: '#/components/schemas/NotionIntegration'
        - $ref: '#/components/schemas/OktaIntegration'
        - $ref: '#/components/schemas/OpenAIIntegration'
        - $ref: '#/components/schemas/ServiceNowIntegration'
        - $ref: '#/components/schemas/SplitIntegration'
        - $ref: '#/components/schemas/StatsigIntegration'
        - $ref: '#/components/schemas/VirusTotalIntegration'
    ActionConnectionIntegrationUpdate:
      description: The definition of `ActionConnectionIntegrationUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AWSIntegrationUpdate'
        - $ref: '#/components/schemas/AnthropicIntegrationUpdate'
        - $ref: '#/components/schemas/AsanaIntegrationUpdate'
        - $ref: '#/components/schemas/AzureIntegrationUpdate'
        - $ref: '#/components/schemas/CircleCIIntegrationUpdate'
        - $ref: '#/components/schemas/ClickupIntegrationUpdate'
        - $ref: '#/components/schemas/CloudflareIntegrationUpdate'
        - $ref: '#/components/schemas/ConfigCatIntegrationUpdate'
        - $ref: '#/components/schemas/DatadogIntegrationUpdate'
        - $ref: '#/components/schemas/FastlyIntegrationUpdate'
        - $ref: '#/components/schemas/FreshserviceIntegrationUpdate'
        - $ref: '#/components/schemas/GCPIntegrationUpdate'
        - $ref: '#/components/schemas/GeminiIntegrationUpdate'
        - $ref: '#/components/schemas/GitlabIntegrationUpdate'
        - $ref: '#/components/schemas/GreyNoiseIntegrationUpdate'
        - $ref: '#/components/schemas/HTTPIntegrationUpdate'
        - $ref: '#/components/schemas/LaunchDarklyIntegrationUpdate'
        - $ref: '#/components/schemas/NotionIntegrationUpdate'
        - $ref: '#/components/schemas/OktaIntegrationUpdate'
        - $ref: '#/components/schemas/OpenAIIntegrationUpdate'
        - $ref: '#/components/schemas/ServiceNowIntegrationUpdate'
        - $ref: '#/components/schemas/SplitIntegrationUpdate'
        - $ref: '#/components/schemas/StatsigIntegrationUpdate'
        - $ref: '#/components/schemas/VirusTotalIntegrationUpdate'
    AWSIntegration:
      description: The definition of `AWSIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredentials'
        type:
          $ref: '#/components/schemas/AWSIntegrationType'
      required:
        - type
        - credentials
      type: object
    AnthropicIntegration:
      description: The definition of the `AnthropicIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AnthropicCredentials'
        type:
          $ref: '#/components/schemas/AnthropicIntegrationType'
      required:
        - type
        - credentials
      type: object
    AsanaIntegration:
      description: The definition of the `AsanaIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AsanaCredentials'
        type:
          $ref: '#/components/schemas/AsanaIntegrationType'
      required:
        - type
        - credentials
      type: object
    AzureIntegration:
      description: The definition of the `AzureIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredentials'
        type:
          $ref: '#/components/schemas/AzureIntegrationType'
      required:
        - type
        - credentials
      type: object
    CircleCIIntegration:
      description: The definition of the `CircleCIIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/CircleCICredentials'
        type:
          $ref: '#/components/schemas/CircleCIIntegrationType'
      required:
        - type
        - credentials
      type: object
    ClickupIntegration:
      description: The definition of the `ClickupIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/ClickupCredentials'
        type:
          $ref: '#/components/schemas/ClickupIntegrationType'
      required:
        - type
        - credentials
      type: object
    CloudflareIntegration:
      description: The definition of the `CloudflareIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/CloudflareCredentials'
        type:
          $ref: '#/components/schemas/CloudflareIntegrationType'
      required:
        - type
        - credentials
      type: object
    ConfigCatIntegration:
      description: The definition of the `ConfigCatIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/ConfigCatCredentials'
        type:
          $ref: '#/components/schemas/ConfigCatIntegrationType'
      required:
        - type
        - credentials
      type: object
    DatadogIntegration:
      description: The definition of the `DatadogIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/DatadogCredentials'
        type:
          $ref: '#/components/schemas/DatadogIntegrationType'
      required:
        - type
        - credentials
      type: object
    FastlyIntegration:
      description: The definition of the `FastlyIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/FastlyCredentials'
        type:
          $ref: '#/components/schemas/FastlyIntegrationType'
      required:
        - type
        - credentials
      type: object
    FreshserviceIntegration:
      description: The definition of the `FreshserviceIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/FreshserviceCredentials'
        type:
          $ref: '#/components/schemas/FreshserviceIntegrationType'
      required:
        - type
        - credentials
      type: object
    GCPIntegration:
      description: The definition of the `GCPIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GCPCredentials'
        type:
          $ref: '#/components/schemas/GCPIntegrationType'
      required:
        - type
        - credentials
      type: object
    GeminiIntegration:
      description: The definition of the `GeminiIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GeminiCredentials'
        type:
          $ref: '#/components/schemas/GeminiIntegrationType'
      required:
        - type
        - credentials
      type: object
    GitlabIntegration:
      description: The definition of the `GitlabIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GitlabCredentials'
        type:
          $ref: '#/components/schemas/GitlabIntegrationType'
      required:
        - type
        - credentials
      type: object
    GreyNoiseIntegration:
      description: The definition of the `GreyNoiseIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GreyNoiseCredentials'
        type:
          $ref: '#/components/schemas/GreyNoiseIntegrationType'
      required:
        - type
        - credentials
      type: object
    HTTPIntegration:
      description: The definition of `HTTPIntegration` object.
      properties:
        base_url:
          description: Base HTTP url for the integration
          example: http://datadoghq.com
          type: string
        credentials:
          $ref: '#/components/schemas/HTTPCredentials'
        type:
          $ref: '#/components/schemas/HTTPIntegrationType'
      required:
        - type
        - base_url
        - credentials
      type: object
    LaunchDarklyIntegration:
      description: The definition of the `LaunchDarklyIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/LaunchDarklyCredentials'
        type:
          $ref: '#/components/schemas/LaunchDarklyIntegrationType'
      required:
        - type
        - credentials
      type: object
    NotionIntegration:
      description: The definition of the `NotionIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/NotionCredentials'
        type:
          $ref: '#/components/schemas/NotionIntegrationType'
      required:
        - type
        - credentials
      type: object
    OktaIntegration:
      description: The definition of the `OktaIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/OktaCredentials'
        type:
          $ref: '#/components/schemas/OktaIntegrationType'
      required:
        - type
        - credentials
      type: object
    OpenAIIntegration:
      description: The definition of the `OpenAIIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/OpenAICredentials'
        type:
          $ref: '#/components/schemas/OpenAIIntegrationType'
      required:
        - type
        - credentials
      type: object
    ServiceNowIntegration:
      description: The definition of the `ServiceNowIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/ServiceNowCredentials'
        type:
          $ref: '#/components/schemas/ServiceNowIntegrationType'
      required:
        - type
        - credentials
      type: object
    SplitIntegration:
      description: The definition of the `SplitIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/SplitCredentials'
        type:
          $ref: '#/components/schemas/SplitIntegrationType'
      required:
        - type
        - credentials
      type: object
    StatsigIntegration:
      description: The definition of the `StatsigIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/StatsigCredentials'
        type:
          $ref: '#/components/schemas/StatsigIntegrationType'
      required:
        - type
        - credentials
      type: object
    VirusTotalIntegration:
      description: The definition of the `VirusTotalIntegration` object.
      properties:
        credentials:
          $ref: '#/components/schemas/VirusTotalCredentials'
        type:
          $ref: '#/components/schemas/VirusTotalIntegrationType'
      required:
        - type
        - credentials
      type: object
    AWSIntegrationUpdate:
      description: The definition of `AWSIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredentialsUpdate'
        type:
          $ref: '#/components/schemas/AWSIntegrationType'
      required:
        - type
      type: object
    AnthropicIntegrationUpdate:
      description: The definition of the `AnthropicIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AnthropicCredentialsUpdate'
        type:
          $ref: '#/components/schemas/AnthropicIntegrationType'
      required:
        - type
      type: object
    AsanaIntegrationUpdate:
      description: The definition of the `AsanaIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AsanaCredentialsUpdate'
        type:
          $ref: '#/components/schemas/AsanaIntegrationType'
      required:
        - type
      type: object
    AzureIntegrationUpdate:
      description: The definition of the `AzureIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredentialsUpdate'
        type:
          $ref: '#/components/schemas/AzureIntegrationType'
      required:
        - type
      type: object
    CircleCIIntegrationUpdate:
      description: The definition of the `CircleCIIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/CircleCICredentialsUpdate'
        type:
          $ref: '#/components/schemas/CircleCIIntegrationType'
      required:
        - type
      type: object
    ClickupIntegrationUpdate:
      description: The definition of the `ClickupIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/ClickupCredentialsUpdate'
        type:
          $ref: '#/components/schemas/ClickupIntegrationType'
      required:
        - type
      type: object
    CloudflareIntegrationUpdate:
      description: The definition of the `CloudflareIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/CloudflareCredentialsUpdate'
        type:
          $ref: '#/components/schemas/CloudflareIntegrationType'
      required:
        - type
      type: object
    ConfigCatIntegrationUpdate:
      description: The definition of the `ConfigCatIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/ConfigCatCredentialsUpdate'
        type:
          $ref: '#/components/schemas/ConfigCatIntegrationType'
      required:
        - type
      type: object
    DatadogIntegrationUpdate:
      description: The definition of the `DatadogIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/DatadogCredentialsUpdate'
        type:
          $ref: '#/components/schemas/DatadogIntegrationType'
      required:
        - type
      type: object
    FastlyIntegrationUpdate:
      description: The definition of the `FastlyIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/FastlyCredentialsUpdate'
        type:
          $ref: '#/components/schemas/FastlyIntegrationType'
      required:
        - type
      type: object
    FreshserviceIntegrationUpdate:
      description: The definition of the `FreshserviceIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/FreshserviceCredentialsUpdate'
        type:
          $ref: '#/components/schemas/FreshserviceIntegrationType'
      required:
        - type
      type: object
    GCPIntegrationUpdate:
      description: The definition of the `GCPIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GCPCredentialsUpdate'
        type:
          $ref: '#/components/schemas/GCPIntegrationType'
      required:
        - type
      type: object
    GeminiIntegrationUpdate:
      description: The definition of the `GeminiIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GeminiCredentialsUpdate'
        type:
          $ref: '#/components/schemas/GeminiIntegrationType'
      required:
        - type
      type: object
    GitlabIntegrationUpdate:
      description: The definition of the `GitlabIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GitlabCredentialsUpdate'
        type:
          $ref: '#/components/schemas/GitlabIntegrationType'
      required:
        - type
      type: object
    GreyNoiseIntegrationUpdate:
      description: The definition of the `GreyNoiseIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/GreyNoiseCredentialsUpdate'
        type:
          $ref: '#/components/schemas/GreyNoiseIntegrationType'
      required:
        - type
      type: object
    HTTPIntegrationUpdate:
      description: The definition of `HTTPIntegrationUpdate` object.
      properties:
        base_url:
          description: Base HTTP url for the integration
          example: http://datadoghq.com
          type: string
        credentials:
          $ref: '#/components/schemas/HTTPCredentialsUpdate'
        type:
          $ref: '#/components/schemas/HTTPIntegrationType'
      required:
        - type
      type: object
    LaunchDarklyIntegrationUpdate:
      description: The definition of the `LaunchDarklyIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/LaunchDarklyCredentialsUpdate'
        type:
          $ref: '#/components/schemas/LaunchDarklyIntegrationType'
      required:
        - type
      type: object
    NotionIntegrationUpdate:
      description: The definition of the `NotionIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/NotionCredentialsUpdate'
        type:
          $ref: '#/components/schemas/NotionIntegrationType'
      required:
        - type
      type: object
    OktaIntegrationUpdate:
      description: The definition of the `OktaIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/OktaCredentialsUpdate'
        type:
          $ref: '#/components/schemas/OktaIntegrationType'
      required:
        - type
      type: object
    OpenAIIntegrationUpdate:
      description: The definition of the `OpenAIIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/OpenAICredentialsUpdate'
        type:
          $ref: '#/components/schemas/OpenAIIntegrationType'
      required:
        - type
      type: object
    ServiceNowIntegrationUpdate:
      description: The definition of the `ServiceNowIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/ServiceNowCredentialsUpdate'
        type:
          $ref: '#/components/schemas/ServiceNowIntegrationType'
      required:
        - type
      type: object
    SplitIntegrationUpdate:
      description: The definition of the `SplitIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/SplitCredentialsUpdate'
        type:
          $ref: '#/components/schemas/SplitIntegrationType'
      required:
        - type
      type: object
    StatsigIntegrationUpdate:
      description: The definition of the `StatsigIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/StatsigCredentialsUpdate'
        type:
          $ref: '#/components/schemas/StatsigIntegrationType'
      required:
        - type
      type: object
    VirusTotalIntegrationUpdate:
      description: The definition of the `VirusTotalIntegrationUpdate` object.
      properties:
        credentials:
          $ref: '#/components/schemas/VirusTotalCredentialsUpdate'
        type:
          $ref: '#/components/schemas/VirusTotalIntegrationType'
      required:
        - type
      type: object
    AWSCredentials:
      description: The definition of `AWSCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/AWSAssumeRole'
    AWSIntegrationType:
      description: The definition of `AWSIntegrationType` object.
      enum:
        - AWS
      example: AWS
      type: string
      x-enum-varnames:
        - AWS
    AnthropicCredentials:
      description: The definition of the `AnthropicCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/AnthropicAPIKey'
    AnthropicIntegrationType:
      description: The definition of the `AnthropicIntegrationType` object.
      enum:
        - Anthropic
      example: Anthropic
      type: string
      x-enum-varnames:
        - ANTHROPIC
    AsanaCredentials:
      description: The definition of the `AsanaCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/AsanaAccessToken'
    AsanaIntegrationType:
      description: The definition of the `AsanaIntegrationType` object.
      enum:
        - Asana
      example: Asana
      type: string
      x-enum-varnames:
        - ASANA
    AzureCredentials:
      description: The definition of the `AzureCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/AzureTenant'
    AzureIntegrationType:
      description: The definition of the `AzureIntegrationType` object.
      enum:
        - Azure
      example: Azure
      type: string
      x-enum-varnames:
        - AZURE
    CircleCICredentials:
      description: The definition of the `CircleCICredentials` object.
      oneOf:
        - $ref: '#/components/schemas/CircleCIAPIKey'
    CircleCIIntegrationType:
      description: The definition of the `CircleCIIntegrationType` object.
      enum:
        - CircleCI
      example: CircleCI
      type: string
      x-enum-varnames:
        - CIRCLECI
    ClickupCredentials:
      description: The definition of the `ClickupCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/ClickupAPIKey'
    ClickupIntegrationType:
      description: The definition of the `ClickupIntegrationType` object.
      enum:
        - Clickup
      example: Clickup
      type: string
      x-enum-varnames:
        - CLICKUP
    CloudflareCredentials:
      description: The definition of the `CloudflareCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/CloudflareAPIToken'
        - $ref: '#/components/schemas/CloudflareGlobalAPIToken'
    CloudflareIntegrationType:
      description: The definition of the `CloudflareIntegrationType` object.
      enum:
        - Cloudflare
      example: Cloudflare
      type: string
      x-enum-varnames:
        - CLOUDFLARE
    ConfigCatCredentials:
      description: The definition of the `ConfigCatCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/ConfigCatSDKKey'
    ConfigCatIntegrationType:
      description: The definition of the `ConfigCatIntegrationType` object.
      enum:
        - ConfigCat
      example: ConfigCat
      type: string
      x-enum-varnames:
        - CONFIGCAT
    DatadogCredentials:
      description: The definition of the `DatadogCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/DatadogAPIKey'
    DatadogIntegrationType:
      description: The definition of the `DatadogIntegrationType` object.
      enum:
        - Datadog
      example: Datadog
      type: string
      x-enum-varnames:
        - DATADOG
    FastlyCredentials:
      description: The definition of the `FastlyCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/FastlyAPIKey'
    FastlyIntegrationType:
      description: The definition of the `FastlyIntegrationType` object.
      enum:
        - Fastly
      example: Fastly
      type: string
      x-enum-varnames:
        - FASTLY
    FreshserviceCredentials:
      description: The definition of the `FreshserviceCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/FreshserviceAPIKey'
    FreshserviceIntegrationType:
      description: The definition of the `FreshserviceIntegrationType` object.
      enum:
        - Freshservice
      example: Freshservice
      type: string
      x-enum-varnames:
        - FRESHSERVICE
    GCPCredentials:
      description: The definition of the `GCPCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/GCPServiceAccount'
    GCPIntegrationType:
      description: The definition of the `GCPIntegrationType` object.
      enum:
        - GCP
      example: GCP
      type: string
      x-enum-varnames:
        - GCP
    GeminiCredentials:
      description: The definition of the `GeminiCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/GeminiAPIKey'
    GeminiIntegrationType:
      description: The definition of the `GeminiIntegrationType` object.
      enum:
        - Gemini
      example: Gemini
      type: string
      x-enum-varnames:
        - GEMINI
    GitlabCredentials:
      description: The definition of the `GitlabCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/GitlabAPIKey'
    GitlabIntegrationType:
      description: The definition of the `GitlabIntegrationType` object.
      enum:
        - Gitlab
      example: Gitlab
      type: string
      x-enum-varnames:
        - GITLAB
    GreyNoiseCredentials:
      description: The definition of the `GreyNoiseCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/GreyNoiseAPIKey'
    GreyNoiseIntegrationType:
      description: The definition of the `GreyNoiseIntegrationType` object.
      enum:
        - GreyNoise
      example: GreyNoise
      type: string
      x-enum-varnames:
        - GREYNOISE
    HTTPCredentials:
      description: The definition of `HTTPCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/HTTPTokenAuth'
    HTTPIntegrationType:
      description: The definition of `HTTPIntegrationType` object.
      enum:
        - HTTP
      example: HTTP
      type: string
      x-enum-varnames:
        - HTTP
    LaunchDarklyCredentials:
      description: The definition of the `LaunchDarklyCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/LaunchDarklyAPIKey'
    LaunchDarklyIntegrationType:
      description: The definition of the `LaunchDarklyIntegrationType` object.
      enum:
        - LaunchDarkly
      example: LaunchDarkly
      type: string
      x-enum-varnames:
        - LAUNCHDARKLY
    NotionCredentials:
      description: The definition of the `NotionCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/NotionAPIKey'
    NotionIntegrationType:
      description: The definition of the `NotionIntegrationType` object.
      enum:
        - Notion
      example: Notion
      type: string
      x-enum-varnames:
        - NOTION
    OktaCredentials:
      description: The definition of the `OktaCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/OktaAPIToken'
    OktaIntegrationType:
      description: The definition of the `OktaIntegrationType` object.
      enum:
        - Okta
      example: Okta
      type: string
      x-enum-varnames:
        - OKTA
    OpenAICredentials:
      description: The definition of the `OpenAICredentials` object.
      oneOf:
        - $ref: '#/components/schemas/OpenAIAPIKey'
    OpenAIIntegrationType:
      description: The definition of the `OpenAIIntegrationType` object.
      enum:
        - OpenAI
      example: OpenAI
      type: string
      x-enum-varnames:
        - OPENAI
    ServiceNowCredentials:
      description: The definition of the `ServiceNowCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/ServiceNowBasicAuth'
    ServiceNowIntegrationType:
      description: The definition of the `ServiceNowIntegrationType` object.
      enum:
        - ServiceNow
      example: ServiceNow
      type: string
      x-enum-varnames:
        - SERVICENOW
    SplitCredentials:
      description: The definition of the `SplitCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/SplitAPIKey'
    SplitIntegrationType:
      description: The definition of the `SplitIntegrationType` object.
      enum:
        - Split
      example: Split
      type: string
      x-enum-varnames:
        - SPLIT
    StatsigCredentials:
      description: The definition of the `StatsigCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/StatsigAPIKey'
    StatsigIntegrationType:
      description: The definition of the `StatsigIntegrationType` object.
      enum:
        - Statsig
      example: Statsig
      type: string
      x-enum-varnames:
        - STATSIG
    VirusTotalCredentials:
      description: The definition of the `VirusTotalCredentials` object.
      oneOf:
        - $ref: '#/components/schemas/VirusTotalAPIKey'
    VirusTotalIntegrationType:
      description: The definition of the `VirusTotalIntegrationType` object.
      enum:
        - VirusTotal
      example: VirusTotal
      type: string
      x-enum-varnames:
        - VIRUSTOTAL
    AWSCredentialsUpdate:
      description: The definition of `AWSCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AWSAssumeRoleUpdate'
    AnthropicCredentialsUpdate:
      description: The definition of the `AnthropicCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AnthropicAPIKeyUpdate'
    AsanaCredentialsUpdate:
      description: The definition of the `AsanaCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AsanaAccessTokenUpdate'
    AzureCredentialsUpdate:
      description: The definition of the `AzureCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/AzureTenantUpdate'
    CircleCICredentialsUpdate:
      description: The definition of the `CircleCICredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/CircleCIAPIKeyUpdate'
    ClickupCredentialsUpdate:
      description: The definition of the `ClickupCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/ClickupAPIKeyUpdate'
    CloudflareCredentialsUpdate:
      description: The definition of the `CloudflareCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/CloudflareAPITokenUpdate'
        - $ref: '#/components/schemas/CloudflareGlobalAPITokenUpdate'
    ConfigCatCredentialsUpdate:
      description: The definition of the `ConfigCatCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/ConfigCatSDKKeyUpdate'
    DatadogCredentialsUpdate:
      description: The definition of the `DatadogCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/DatadogAPIKeyUpdate'
    FastlyCredentialsUpdate:
      description: The definition of the `FastlyCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/FastlyAPIKeyUpdate'
    FreshserviceCredentialsUpdate:
      description: The definition of the `FreshserviceCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/FreshserviceAPIKeyUpdate'
    GCPCredentialsUpdate:
      description: The definition of the `GCPCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/GCPServiceAccountUpdate'
    GeminiCredentialsUpdate:
      description: The definition of the `GeminiCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/GeminiAPIKeyUpdate'
    GitlabCredentialsUpdate:
      description: The definition of the `GitlabCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/GitlabAPIKeyUpdate'
    GreyNoiseCredentialsUpdate:
      description: The definition of the `GreyNoiseCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/GreyNoiseAPIKeyUpdate'
    HTTPCredentialsUpdate:
      description: The definition of `HTTPCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/HTTPTokenAuthUpdate'
    LaunchDarklyCredentialsUpdate:
      description: The definition of the `LaunchDarklyCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/LaunchDarklyAPIKeyUpdate'
    NotionCredentialsUpdate:
      description: The definition of the `NotionCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/NotionAPIKeyUpdate'
    OktaCredentialsUpdate:
      description: The definition of the `OktaCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/OktaAPITokenUpdate'
    OpenAICredentialsUpdate:
      description: The definition of the `OpenAICredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/OpenAIAPIKeyUpdate'
    ServiceNowCredentialsUpdate:
      description: The definition of the `ServiceNowCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/ServiceNowBasicAuthUpdate'
    SplitCredentialsUpdate:
      description: The definition of the `SplitCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/SplitAPIKeyUpdate'
    StatsigCredentialsUpdate:
      description: The definition of the `StatsigCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/StatsigAPIKeyUpdate'
    VirusTotalCredentialsUpdate:
      description: The definition of the `VirusTotalCredentialsUpdate` object.
      oneOf:
        - $ref: '#/components/schemas/VirusTotalAPIKeyUpdate'
    AWSAssumeRole:
      description: The definition of `AWSAssumeRole` object.
      properties:
        account_id:
          description: AWS account the connection is created for
          example: '111222333444'
          pattern: ^\d{12}$
          type: string
        external_id:
          description: >-
            External ID used to scope which connection can be used to assume the
            role
          example: 33a1011635c44b38a064cf14e82e1d8f
          readOnly: true
          type: string
        principal_id:
          description: AWS account that will assume the role
          example: '123456789012'
          readOnly: true
          type: string
        role:
          description: Role to assume
          example: my-role
          type: string
        type:
          $ref: '#/components/schemas/AWSAssumeRoleType'
      required:
        - type
        - account_id
        - role
      type: object
    AnthropicAPIKey:
      description: The definition of the `AnthropicAPIKey` object.
      properties:
        api_token:
          description: The `AnthropicAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/AnthropicAPIKeyType'
      required:
        - type
        - api_token
      type: object
    AsanaAccessToken:
      description: The definition of the `AsanaAccessToken` object.
      properties:
        access_token:
          description: The `AsanaAccessToken` `access_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/AsanaAccessTokenType'
      required:
        - type
        - access_token
      type: object
    AzureTenant:
      description: The definition of the `AzureTenant` object.
      properties:
        app_client_id:
          description: >-
            The Client ID, also known as the Application ID in Azure, is a
            unique identifier for an application. It's used to identify the
            application during the authentication process. Your Application
            (client) ID is listed in the application's overview page. You can
            navigate to your application via the Azure Directory. 
          example: ''
          type: string
        client_secret:
          description: >-
            The Client Secret is a confidential piece of information known only
            to the application and Azure AD. It's used to prove the
            application's identity. Your Client Secret is available from the
            application’s secrets page. You can navigate to your application via
            the Azure Directory.
          example: ''
          type: string
        custom_scopes:
          description: >-
            If provided, the custom scope to be requested from Microsoft when
            acquiring an OAuth 2 access token. This custom scope is used only in
            conjunction with the HTTP action. A resource's scope is constructed
            by using the identifier URI for the resource and .default, separated
            by a forward slash (/) as follows:{identifierURI}/.default.
          type: string
        tenant_id:
          description: >-
            The Tenant ID, also known as the Directory ID in Azure, is a unique
            identifier that represents an Azure AD instance. Your Tenant ID
            (Directory ID) is listed in your Active Directory overview page
            under the 'Tenant information' section.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/AzureTenantType'
      required:
        - type
        - tenant_id
        - app_client_id
        - client_secret
      type: object
    CircleCIAPIKey:
      description: The definition of the `CircleCIAPIKey` object.
      properties:
        api_token:
          description: The `CircleCIAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/CircleCIAPIKeyType'
      required:
        - type
        - api_token
      type: object
    ClickupAPIKey:
      description: The definition of the `ClickupAPIKey` object.
      properties:
        api_token:
          description: The `ClickupAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/ClickupAPIKeyType'
      required:
        - type
        - api_token
      type: object
    CloudflareAPIToken:
      description: The definition of the `CloudflareAPIToken` object.
      properties:
        api_token:
          description: The `CloudflareAPIToken` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/CloudflareAPITokenType'
      required:
        - type
        - api_token
      type: object
    CloudflareGlobalAPIToken:
      description: The definition of the `CloudflareGlobalAPIToken` object.
      properties:
        auth_email:
          description: The `CloudflareGlobalAPIToken` `auth_email`.
          example: ''
          type: string
        global_api_key:
          description: The `CloudflareGlobalAPIToken` `global_api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/CloudflareGlobalAPITokenType'
      required:
        - type
        - auth_email
        - global_api_key
      type: object
    ConfigCatSDKKey:
      description: The definition of the `ConfigCatSDKKey` object.
      properties:
        api_password:
          description: The `ConfigCatSDKKey` `api_password`.
          example: ''
          type: string
        api_username:
          description: The `ConfigCatSDKKey` `api_username`.
          example: ''
          type: string
        sdk_key:
          description: The `ConfigCatSDKKey` `sdk_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/ConfigCatSDKKeyType'
      required:
        - type
        - sdk_key
        - api_username
        - api_password
      type: object
    DatadogAPIKey:
      description: The definition of the `DatadogAPIKey` object.
      properties:
        api_key:
          description: The `DatadogAPIKey` `api_key`.
          example: ''
          type: string
        app_key:
          description: The `DatadogAPIKey` `app_key`.
          example: ''
          type: string
        datacenter:
          description: The `DatadogAPIKey` `datacenter`.
          example: ''
          type: string
        subdomain:
          description: >-
            Custom subdomain used for Datadog URLs generated with this
            Connection. For example, if this org uses
            `https://acme.datadoghq.com` to access Datadog, set this field to
            `acme`. If this field is omitted, generated URLs will use the
            default site URL for its datacenter (see
            [https://docs.datadoghq.com/getting_started/site](https://docs.datadoghq.com/getting_started/site)).
          type: string
        type:
          $ref: '#/components/schemas/DatadogAPIKeyType'
      required:
        - type
        - datacenter
        - api_key
        - app_key
      type: object
    FastlyAPIKey:
      description: The definition of the `FastlyAPIKey` object.
      properties:
        api_key:
          description: The `FastlyAPIKey` `api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/FastlyAPIKeyType'
      required:
        - type
        - api_key
      type: object
    FreshserviceAPIKey:
      description: The definition of the `FreshserviceAPIKey` object.
      properties:
        api_key:
          description: The `FreshserviceAPIKey` `api_key`.
          example: ''
          type: string
        domain:
          description: The `FreshserviceAPIKey` `domain`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/FreshserviceAPIKeyType'
      required:
        - type
        - domain
        - api_key
      type: object
    GCPServiceAccount:
      description: The definition of the `GCPServiceAccount` object.
      properties:
        private_key:
          description: The `GCPServiceAccount` `private_key`.
          example: ''
          type: string
        service_account_email:
          description: The `GCPServiceAccount` `service_account_email`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/GCPServiceAccountCredentialType'
      required:
        - type
        - service_account_email
        - private_key
      type: object
    GeminiAPIKey:
      description: The definition of the `GeminiAPIKey` object.
      properties:
        api_key:
          description: The `GeminiAPIKey` `api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/GeminiAPIKeyType'
      required:
        - type
        - api_key
      type: object
    GitlabAPIKey:
      description: The definition of the `GitlabAPIKey` object.
      properties:
        api_token:
          description: The `GitlabAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/GitlabAPIKeyType'
      required:
        - type
        - api_token
      type: object
    GreyNoiseAPIKey:
      description: The definition of the `GreyNoiseAPIKey` object.
      properties:
        api_key:
          description: The `GreyNoiseAPIKey` `api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/GreyNoiseAPIKeyType'
      required:
        - type
        - api_key
      type: object
    HTTPTokenAuth:
      description: The definition of `HTTPTokenAuth` object.
      properties:
        body:
          $ref: '#/components/schemas/HTTPBody'
        headers:
          description: The `HTTPTokenAuth` `headers`.
          items:
            $ref: '#/components/schemas/HTTPHeader'
          type: array
        tokens:
          description: The `HTTPTokenAuth` `tokens`.
          items:
            $ref: '#/components/schemas/HTTPToken'
          type: array
        type:
          $ref: '#/components/schemas/HTTPTokenAuthType'
        url_parameters:
          description: The `HTTPTokenAuth` `url_parameters`.
          items:
            $ref: '#/components/schemas/UrlParam'
          type: array
      required:
        - type
      type: object
    LaunchDarklyAPIKey:
      description: The definition of the `LaunchDarklyAPIKey` object.
      properties:
        api_token:
          description: The `LaunchDarklyAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/LaunchDarklyAPIKeyType'
      required:
        - type
        - api_token
      type: object
    NotionAPIKey:
      description: The definition of the `NotionAPIKey` object.
      properties:
        api_token:
          description: The `NotionAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/NotionAPIKeyType'
      required:
        - type
        - api_token
      type: object
    OktaAPIToken:
      description: The definition of the `OktaAPIToken` object.
      properties:
        api_token:
          description: The `OktaAPIToken` `api_token`.
          example: ''
          type: string
        domain:
          description: The `OktaAPIToken` `domain`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/OktaAPITokenType'
      required:
        - type
        - domain
        - api_token
      type: object
    OpenAIAPIKey:
      description: The definition of the `OpenAIAPIKey` object.
      properties:
        api_token:
          description: The `OpenAIAPIKey` `api_token`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/OpenAIAPIKeyType'
      required:
        - type
        - api_token
      type: object
    ServiceNowBasicAuth:
      description: The definition of the `ServiceNowBasicAuth` object.
      properties:
        instance:
          description: The `ServiceNowBasicAuth` `instance`.
          example: ''
          type: string
        password:
          description: The `ServiceNowBasicAuth` `password`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/ServiceNowBasicAuthType'
        username:
          description: The `ServiceNowBasicAuth` `username`.
          example: ''
          type: string
      required:
        - type
        - instance
        - username
        - password
      type: object
    SplitAPIKey:
      description: The definition of the `SplitAPIKey` object.
      properties:
        api_key:
          description: The `SplitAPIKey` `api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/SplitAPIKeyType'
      required:
        - type
        - api_key
      type: object
    StatsigAPIKey:
      description: The definition of the `StatsigAPIKey` object.
      properties:
        api_key:
          description: The `StatsigAPIKey` `api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/StatsigAPIKeyType'
      required:
        - type
        - api_key
      type: object
    VirusTotalAPIKey:
      description: The definition of the `VirusTotalAPIKey` object.
      properties:
        api_key:
          description: The `VirusTotalAPIKey` `api_key`.
          example: ''
          type: string
        type:
          $ref: '#/components/schemas/VirusTotalAPIKeyType'
      required:
        - type
        - api_key
      type: object
    AWSAssumeRoleUpdate:
      description: The definition of `AWSAssumeRoleUpdate` object.
      properties:
        account_id:
          description: AWS account the connection is created for
          example: '111222333444'
          pattern: ^\d{12}$
          type: string
        generate_new_external_id:
          description: The `AWSAssumeRoleUpdate` `generate_new_external_id`.
          type: boolean
        role:
          description: Role to assume
          example: my-role
          type: string
        type:
          $ref: '#/components/schemas/AWSAssumeRoleType'
      required:
        - type
      type: object
    AnthropicAPIKeyUpdate:
      description: The definition of the `AnthropicAPIKey` object.
      properties:
        api_token:
          description: The `AnthropicAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/AnthropicAPIKeyType'
      required:
        - type
      type: object
    AsanaAccessTokenUpdate:
      description: The definition of the `AsanaAccessToken` object.
      properties:
        access_token:
          description: The `AsanaAccessTokenUpdate` `access_token`.
          type: string
        type:
          $ref: '#/components/schemas/AsanaAccessTokenType'
      required:
        - type
      type: object
    AzureTenantUpdate:
      description: The definition of the `AzureTenant` object.
      properties:
        app_client_id:
          description: >-
            The Client ID, also known as the Application ID in Azure, is a
            unique identifier for an application. It's used to identify the
            application during the authentication process. Your Application
            (client) ID is listed in the application's overview page. You can
            navigate to your application via the Azure Directory. 
          type: string
        client_secret:
          description: >-
            The Client Secret is a confidential piece of information known only
            to the application and Azure AD. It's used to prove the
            application's identity. Your Client Secret is available from the
            application’s secrets page. You can navigate to your application via
            the Azure Directory.
          type: string
        custom_scopes:
          description: >-
            If provided, the custom scope to be requested from Microsoft when
            acquiring an OAuth 2 access token. This custom scope is used only in
            conjunction with the HTTP action. A resource's scope is constructed
            by using the identifier URI for the resource and .default, separated
            by a forward slash (/) as follows:{identifierURI}/.default.
          type: string
        tenant_id:
          description: >-
            The Tenant ID, also known as the Directory ID in Azure, is a unique
            identifier that represents an Azure AD instance. Your Tenant ID
            (Directory ID) is listed in your Active Directory overview page
            under the 'Tenant information' section.
          type: string
        type:
          $ref: '#/components/schemas/AzureTenantType'
      required:
        - type
      type: object
    CircleCIAPIKeyUpdate:
      description: The definition of the `CircleCIAPIKey` object.
      properties:
        api_token:
          description: The `CircleCIAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/CircleCIAPIKeyType'
      required:
        - type
      type: object
    ClickupAPIKeyUpdate:
      description: The definition of the `ClickupAPIKey` object.
      properties:
        api_token:
          description: The `ClickupAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/ClickupAPIKeyType'
      required:
        - type
      type: object
    CloudflareAPITokenUpdate:
      description: The definition of the `CloudflareAPIToken` object.
      properties:
        api_token:
          description: The `CloudflareAPITokenUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/CloudflareAPITokenType'
      required:
        - type
      type: object
    CloudflareGlobalAPITokenUpdate:
      description: The definition of the `CloudflareGlobalAPIToken` object.
      properties:
        auth_email:
          description: The `CloudflareGlobalAPITokenUpdate` `auth_email`.
          type: string
        global_api_key:
          description: The `CloudflareGlobalAPITokenUpdate` `global_api_key`.
          type: string
        type:
          $ref: '#/components/schemas/CloudflareGlobalAPITokenType'
      required:
        - type
      type: object
    ConfigCatSDKKeyUpdate:
      description: The definition of the `ConfigCatSDKKey` object.
      properties:
        api_password:
          description: The `ConfigCatSDKKeyUpdate` `api_password`.
          type: string
        api_username:
          description: The `ConfigCatSDKKeyUpdate` `api_username`.
          type: string
        sdk_key:
          description: The `ConfigCatSDKKeyUpdate` `sdk_key`.
          type: string
        type:
          $ref: '#/components/schemas/ConfigCatSDKKeyType'
      required:
        - type
      type: object
    DatadogAPIKeyUpdate:
      description: The definition of the `DatadogAPIKey` object.
      properties:
        api_key:
          description: The `DatadogAPIKeyUpdate` `api_key`.
          type: string
        app_key:
          description: The `DatadogAPIKeyUpdate` `app_key`.
          type: string
        datacenter:
          description: The `DatadogAPIKeyUpdate` `datacenter`.
          type: string
        subdomain:
          description: >-
            Custom subdomain used for Datadog URLs generated with this
            Connection. For example, if this org uses
            `https://acme.datadoghq.com` to access Datadog, set this field to
            `acme`. If this field is omitted, generated URLs will use the
            default site URL for its datacenter (see
            [https://docs.datadoghq.com/getting_started/site](https://docs.datadoghq.com/getting_started/site)).
          type: string
        type:
          $ref: '#/components/schemas/DatadogAPIKeyType'
      required:
        - type
      type: object
    FastlyAPIKeyUpdate:
      description: The definition of the `FastlyAPIKey` object.
      properties:
        api_key:
          description: The `FastlyAPIKeyUpdate` `api_key`.
          type: string
        type:
          $ref: '#/components/schemas/FastlyAPIKeyType'
      required:
        - type
      type: object
    FreshserviceAPIKeyUpdate:
      description: The definition of the `FreshserviceAPIKey` object.
      properties:
        api_key:
          description: The `FreshserviceAPIKeyUpdate` `api_key`.
          type: string
        domain:
          description: The `FreshserviceAPIKeyUpdate` `domain`.
          type: string
        type:
          $ref: '#/components/schemas/FreshserviceAPIKeyType'
      required:
        - type
      type: object
    GCPServiceAccountUpdate:
      description: The definition of the `GCPServiceAccount` object.
      properties:
        private_key:
          description: The `GCPServiceAccountUpdate` `private_key`.
          type: string
        service_account_email:
          description: The `GCPServiceAccountUpdate` `service_account_email`.
          type: string
        type:
          $ref: '#/components/schemas/GCPServiceAccountCredentialType'
      required:
        - type
      type: object
    GeminiAPIKeyUpdate:
      description: The definition of the `GeminiAPIKey` object.
      properties:
        api_key:
          description: The `GeminiAPIKeyUpdate` `api_key`.
          type: string
        type:
          $ref: '#/components/schemas/GeminiAPIKeyType'
      required:
        - type
      type: object
    GitlabAPIKeyUpdate:
      description: The definition of the `GitlabAPIKey` object.
      properties:
        api_token:
          description: The `GitlabAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/GitlabAPIKeyType'
      required:
        - type
      type: object
    GreyNoiseAPIKeyUpdate:
      description: The definition of the `GreyNoiseAPIKey` object.
      properties:
        api_key:
          description: The `GreyNoiseAPIKeyUpdate` `api_key`.
          type: string
        type:
          $ref: '#/components/schemas/GreyNoiseAPIKeyType'
      required:
        - type
      type: object
    HTTPTokenAuthUpdate:
      description: The definition of `HTTPTokenAuthUpdate` object.
      properties:
        body:
          $ref: '#/components/schemas/HTTPBody'
        headers:
          description: The `HTTPTokenAuthUpdate` `headers`.
          items:
            $ref: '#/components/schemas/HTTPHeaderUpdate'
          type: array
        tokens:
          description: The `HTTPTokenAuthUpdate` `tokens`.
          items:
            $ref: '#/components/schemas/HTTPTokenUpdate'
          type: array
        type:
          $ref: '#/components/schemas/HTTPTokenAuthType'
        url_parameters:
          description: The `HTTPTokenAuthUpdate` `url_parameters`.
          items:
            $ref: '#/components/schemas/UrlParamUpdate'
          type: array
      required:
        - type
      type: object
    LaunchDarklyAPIKeyUpdate:
      description: The definition of the `LaunchDarklyAPIKey` object.
      properties:
        api_token:
          description: The `LaunchDarklyAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/LaunchDarklyAPIKeyType'
      required:
        - type
      type: object
    NotionAPIKeyUpdate:
      description: The definition of the `NotionAPIKey` object.
      properties:
        api_token:
          description: The `NotionAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/NotionAPIKeyType'
      required:
        - type
      type: object
    OktaAPITokenUpdate:
      description: The definition of the `OktaAPIToken` object.
      properties:
        api_token:
          description: The `OktaAPITokenUpdate` `api_token`.
          type: string
        domain:
          description: The `OktaAPITokenUpdate` `domain`.
          type: string
        type:
          $ref: '#/components/schemas/OktaAPITokenType'
      required:
        - type
      type: object
    OpenAIAPIKeyUpdate:
      description: The definition of the `OpenAIAPIKey` object.
      properties:
        api_token:
          description: The `OpenAIAPIKeyUpdate` `api_token`.
          type: string
        type:
          $ref: '#/components/schemas/OpenAIAPIKeyType'
      required:
        - type
      type: object
    ServiceNowBasicAuthUpdate:
      description: The definition of the `ServiceNowBasicAuth` object.
      properties:
        instance:
          description: The `ServiceNowBasicAuthUpdate` `instance`.
          type: string
        password:
          description: The `ServiceNowBasicAuthUpdate` `password`.
          type: string
        type:
          $ref: '#/components/schemas/ServiceNowBasicAuthType'
        username:
          description: The `ServiceNowBasicAuthUpdate` `username`.
          type: string
      required:
        - type
      type: object
    SplitAPIKeyUpdate:
      description: The definition of the `SplitAPIKey` object.
      properties:
        api_key:
          description: The `SplitAPIKeyUpdate` `api_key`.
          type: string
        type:
          $ref: '#/components/schemas/SplitAPIKeyType'
      required:
        - type
      type: object
    StatsigAPIKeyUpdate:
      description: The definition of the `StatsigAPIKey` object.
      properties:
        api_key:
          description: The `StatsigAPIKeyUpdate` `api_key`.
          type: string
        type:
          $ref: '#/components/schemas/StatsigAPIKeyType'
      required:
        - type
      type: object
    VirusTotalAPIKeyUpdate:
      description: The definition of the `VirusTotalAPIKey` object.
      properties:
        api_key:
          description: The `VirusTotalAPIKeyUpdate` `api_key`.
          type: string
        type:
          $ref: '#/components/schemas/VirusTotalAPIKeyType'
      required:
        - type
      type: object
    AWSAssumeRoleType:
      description: The definition of `AWSAssumeRoleType` object.
      enum:
        - AWSAssumeRole
      example: AWSAssumeRole
      type: string
      x-enum-varnames:
        - AWSASSUMEROLE
    AnthropicAPIKeyType:
      description: The definition of the `AnthropicAPIKey` object.
      enum:
        - AnthropicAPIKey
      example: AnthropicAPIKey
      type: string
      x-enum-varnames:
        - ANTHROPICAPIKEY
    AsanaAccessTokenType:
      description: The definition of the `AsanaAccessToken` object.
      enum:
        - AsanaAccessToken
      example: AsanaAccessToken
      type: string
      x-enum-varnames:
        - ASANAACCESSTOKEN
    AzureTenantType:
      description: The definition of the `AzureTenant` object.
      enum:
        - AzureTenant
      example: AzureTenant
      type: string
      x-enum-varnames:
        - AZURETENANT
    CircleCIAPIKeyType:
      description: The definition of the `CircleCIAPIKey` object.
      enum:
        - CircleCIAPIKey
      example: CircleCIAPIKey
      type: string
      x-enum-varnames:
        - CIRCLECIAPIKEY
    ClickupAPIKeyType:
      description: The definition of the `ClickupAPIKey` object.
      enum:
        - ClickupAPIKey
      example: ClickupAPIKey
      type: string
      x-enum-varnames:
        - CLICKUPAPIKEY
    CloudflareAPITokenType:
      description: The definition of the `CloudflareAPIToken` object.
      enum:
        - CloudflareAPIToken
      example: CloudflareAPIToken
      type: string
      x-enum-varnames:
        - CLOUDFLAREAPITOKEN
    CloudflareGlobalAPITokenType:
      description: The definition of the `CloudflareGlobalAPIToken` object.
      enum:
        - CloudflareGlobalAPIToken
      example: CloudflareGlobalAPIToken
      type: string
      x-enum-varnames:
        - CLOUDFLAREGLOBALAPITOKEN
    ConfigCatSDKKeyType:
      description: The definition of the `ConfigCatSDKKey` object.
      enum:
        - ConfigCatSDKKey
      example: ConfigCatSDKKey
      type: string
      x-enum-varnames:
        - CONFIGCATSDKKEY
    DatadogAPIKeyType:
      description: The definition of the `DatadogAPIKey` object.
      enum:
        - DatadogAPIKey
      example: DatadogAPIKey
      type: string
      x-enum-varnames:
        - DATADOGAPIKEY
    FastlyAPIKeyType:
      description: The definition of the `FastlyAPIKey` object.
      enum:
        - FastlyAPIKey
      example: FastlyAPIKey
      type: string
      x-enum-varnames:
        - FASTLYAPIKEY
    FreshserviceAPIKeyType:
      description: The definition of the `FreshserviceAPIKey` object.
      enum:
        - FreshserviceAPIKey
      example: FreshserviceAPIKey
      type: string
      x-enum-varnames:
        - FRESHSERVICEAPIKEY
    GCPServiceAccountCredentialType:
      description: The definition of the `GCPServiceAccount` object.
      enum:
        - GCPServiceAccount
      example: GCPServiceAccount
      type: string
      x-enum-varnames:
        - GCPSERVICEACCOUNT
    GeminiAPIKeyType:
      description: The definition of the `GeminiAPIKey` object.
      enum:
        - GeminiAPIKey
      example: GeminiAPIKey
      type: string
      x-enum-varnames:
        - GEMINIAPIKEY
    GitlabAPIKeyType:
      description: The definition of the `GitlabAPIKey` object.
      enum:
        - GitlabAPIKey
      example: GitlabAPIKey
      type: string
      x-enum-varnames:
        - GITLABAPIKEY
    GreyNoiseAPIKeyType:
      description: The definition of the `GreyNoiseAPIKey` object.
      enum:
        - GreyNoiseAPIKey
      example: GreyNoiseAPIKey
      type: string
      x-enum-varnames:
        - GREYNOISEAPIKEY
    HTTPBody:
      description: The definition of `HTTPBody` object.
      properties:
        content:
          description: Serialized body content
          example: '{"some-json": "with-value"}'
          type: string
        content_type:
          description: Content type of the body
          example: application/json
          type: string
      type: object
    HTTPHeader:
      description: The definition of `HTTPHeader` object.
      properties:
        name:
          description: The `HTTPHeader` `name`.
          example: MyHttpHeader
          pattern: ^[A-Za-z][A-Za-z\\d\\-\\_]*$
          type: string
        value:
          description: The `HTTPHeader` `value`.
          example: Some header value
          type: string
      required:
        - name
        - value
      type: object
    HTTPToken:
      description: The definition of `HTTPToken` object.
      properties:
        name:
          description: The `HTTPToken` `name`.
          example: MyToken
          pattern: ^[A-Za-z][A-Za-z\\d]*$
          type: string
        type:
          $ref: '#/components/schemas/TokenType'
        value:
          description: The `HTTPToken` `value`.
          example: Some Token Value
          type: string
      required:
        - name
        - value
        - type
      type: object
    HTTPTokenAuthType:
      description: The definition of `HTTPTokenAuthType` object.
      enum:
        - HTTPTokenAuth
      example: HTTPTokenAuth
      type: string
      x-enum-varnames:
        - HTTPTOKENAUTH
    UrlParam:
      description: The definition of `UrlParam` object.
      properties:
        name:
          $ref: '#/components/schemas/TokenName'
          example: MyUrlParameter
        value:
          description: The `UrlParam` `value`.
          example: Some Url Parameter value
          type: string
      required:
        - name
        - value
      type: object
    LaunchDarklyAPIKeyType:
      description: The definition of the `LaunchDarklyAPIKey` object.
      enum:
        - LaunchDarklyAPIKey
      example: LaunchDarklyAPIKey
      type: string
      x-enum-varnames:
        - LAUNCHDARKLYAPIKEY
    NotionAPIKeyType:
      description: The definition of the `NotionAPIKey` object.
      enum:
        - NotionAPIKey
      example: NotionAPIKey
      type: string
      x-enum-varnames:
        - NOTIONAPIKEY
    OktaAPITokenType:
      description: The definition of the `OktaAPIToken` object.
      enum:
        - OktaAPIToken
      example: OktaAPIToken
      type: string
      x-enum-varnames:
        - OKTAAPITOKEN
    OpenAIAPIKeyType:
      description: The definition of the `OpenAIAPIKey` object.
      enum:
        - OpenAIAPIKey
      example: OpenAIAPIKey
      type: string
      x-enum-varnames:
        - OPENAIAPIKEY
    ServiceNowBasicAuthType:
      description: The definition of the `ServiceNowBasicAuth` object.
      enum:
        - ServiceNowBasicAuth
      example: ServiceNowBasicAuth
      type: string
      x-enum-varnames:
        - SERVICENOWBASICAUTH
    SplitAPIKeyType:
      description: The definition of the `SplitAPIKey` object.
      enum:
        - SplitAPIKey
      example: SplitAPIKey
      type: string
      x-enum-varnames:
        - SPLITAPIKEY
    StatsigAPIKeyType:
      description: The definition of the `StatsigAPIKey` object.
      enum:
        - StatsigAPIKey
      example: StatsigAPIKey
      type: string
      x-enum-varnames:
        - STATSIGAPIKEY
    VirusTotalAPIKeyType:
      description: The definition of the `VirusTotalAPIKey` object.
      enum:
        - VirusTotalAPIKey
      example: VirusTotalAPIKey
      type: string
      x-enum-varnames:
        - VIRUSTOTALAPIKEY
    HTTPHeaderUpdate:
      description: The definition of `HTTPHeaderUpdate` object.
      properties:
        deleted:
          description: Should the header be deleted.
          type: boolean
        name:
          description: The `HTTPHeaderUpdate` `name`.
          example: MyHttpHeader
          pattern: ^[A-Za-z][A-Za-z\\d\\-\\_]*$
          type: string
        value:
          description: The `HTTPHeaderUpdate` `value`.
          example: Updated Header Value
          type: string
      required:
        - name
      type: object
    HTTPTokenUpdate:
      description: The definition of `HTTPTokenUpdate` object.
      properties:
        deleted:
          description: Should the header be deleted.
          type: boolean
        name:
          description: The `HTTPToken` `name`.
          example: MyToken
          pattern: ^[A-Za-z][A-Za-z\\d]*$
          type: string
        type:
          $ref: '#/components/schemas/TokenType'
        value:
          description: The `HTTPToken` `value`.
          example: Some Token Value
          type: string
      required:
        - name
        - type
        - value
      type: object
    UrlParamUpdate:
      description: The definition of `UrlParamUpdate` object.
      properties:
        deleted:
          description: Should the header be deleted.
          type: boolean
        name:
          $ref: '#/components/schemas/TokenName'
          example: MyUrlParameter
        value:
          description: The `UrlParamUpdate` `value`.
          example: Some Url Parameter value
          type: string
      required:
        - name
      type: object
    TokenType:
      description: The definition of `TokenType` object.
      enum:
        - SECRET
      example: SECRET
      type: string
      x-enum-varnames:
        - SECRET
    TokenName:
      description: Name for tokens.
      example: MyTokenName
      pattern: ^[A-Za-z][A-Za-z\\d]*$
      type: string
  responses:
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
  parameters:
    ApplicationKeyId:
      description: The ID of the app key
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    ConnectionId:
      description: The ID of the action connection
      in: path
      name: connection_id
      required: true
      schema:
        type: string
  x-stackQL-resources:
    datastores:
      id: datadog.actions.datastores
      name: datastores
      title: Datastores
      methods:
        list_datastores:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_datastore:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_datastore:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores~1{datastore_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_datastore:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores~1{datastore_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_datastore:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores~1{datastore_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/datastores/methods/get_datastore'
          - $ref: >-
              #/components/x-stackQL-resources/datastores/methods/list_datastores
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/datastores/methods/create_datastore
        update:
          - $ref: >-
              #/components/x-stackQL-resources/datastores/methods/update_datastore
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/datastores/methods/delete_datastore
        replace: []
    datastore_items:
      id: datadog.actions.datastore_items
      name: datastore_items
      title: Datastore Items
      methods:
        delete_datastore_item:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1actions-datastores~1{datastore_id}~1items/delete
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_datastore_items:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores~1{datastore_id}~1items/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_datastore_item:
          operation:
            $ref: '#/paths/~1api~1v2~1actions-datastores~1{datastore_id}~1items/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        bulk_write_datastore_items:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1actions-datastores~1{datastore_id}~1items~1bulk/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/datastore_items/methods/list_datastore_items
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/datastore_items/methods/bulk_write_datastore_items
        update:
          - $ref: >-
              #/components/x-stackQL-resources/datastore_items/methods/update_datastore_item
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/datastore_items/methods/delete_datastore_item
        replace: []
    app_key_registrations:
      id: datadog.actions.app_key_registrations
      name: app_key_registrations
      title: App Key Registrations
      methods:
        list_app_key_registrations:
          operation:
            $ref: '#/paths/~1api~1v2~1actions~1app_key_registrations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        unregister_app_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1actions~1app_key_registrations~1{app_key_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_app_key_registration:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1actions~1app_key_registrations~1{app_key_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        register_app_key:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1actions~1app_key_registrations~1{app_key_id}/put
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/app_key_registrations/methods/get_app_key_registration
          - $ref: >-
              #/components/x-stackQL-resources/app_key_registrations/methods/list_app_key_registrations
        insert: []
        update: []
        delete: []
        replace: []
    connections:
      id: datadog.actions.connections
      name: connections
      title: Connections
      methods:
        create_action_connection:
          operation:
            $ref: '#/paths/~1api~1v2~1actions~1connections/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_action_connection:
          operation:
            $ref: '#/paths/~1api~1v2~1actions~1connections~1{connection_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_action_connection:
          operation:
            $ref: '#/paths/~1api~1v2~1actions~1connections~1{connection_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_action_connection:
          operation:
            $ref: '#/paths/~1api~1v2~1actions~1connections~1{connection_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/get_action_connection
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/create_action_connection
        update:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/update_action_connection
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/connections/methods/delete_action_connection
        replace: []
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
