openapi: 3.0.0
servers:
  - url: 'https://{dd_site:^(?:api\.datadoghq\.com|us3\.datadoghq\.com|us5\.datadoghq\.com|datadoghq\.eu|ddog-gov\.com)$}/'
    variables:
      dd_site:
        default: api.datadoghq.com
        description: The regional site for Datadog customers.
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: 'https://www.datadoghq.com/support/'
  version: '1.0'
  title: Datadog API V2 Collection - incidents
  description: Manage incident response.
security:
  - apiKeyAuth: []
    appKeyAuth: []
tags:
  - description: 'Manage configuration of [APM retention filters](https://app.datadoghq.com/apm/traces/retention-filters) for your organization. You need an API and application key with Admin rights to interact with this endpoint.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/'
    name: APM Retention Filters
  - description: Search your Audit Logs events over HTTP.
    name: Audit
  - description: |-
      [AuthN Mappings API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)
      is used to automatically map group of users to roles in Datadog using attributes
      sent from Identity Providers.
    name: AuthN Mappings
  - description: Search or aggregate your CI Visibility pipeline events and send them to your Datadog site over HTTP.
    name: CI Visibility Pipelines
  - description: Search or aggregate your CI Visibility test events over HTTP.
    name: CI Visibility Tests
  - description: Workload activity security rules for generating events using the Datadog security Agent.
    name: Cloud Workload Security
  - description: Configure your Datadog Cloudflare integration directly through the Datadog API.
    name: Cloudflare Integration
  - description: Configure your Datadog Confluent Cloud integration directly through the Datadog API.
    name: Confluent Cloud
  - description: The Container Images API allows you to query Container Image data for your organization.
    name: Container Images
  - description: The Containers API allows you to query container data for your organization.
    name: Containers
  - description: Send events for DORA Metrics to measure and improve software delivery.
    name: DORA Metrics
  - description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    name: Dashboard Lists
  - description: |-
      **Note**: Downtime V2 is currently in private beta. To request access, contact [Datadog support](https://docs.datadoghq.com/help/).

      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives
      you greater control over monitor notifications by allowing you to globally exclude
      scopes from alerting. Downtime settings, which can be scheduled with start and
      end times, prevent all alerting related to specified Datadog tags.
    name: Downtimes
  - description: |-
      The events service allows you to programmatically post events to the event stream
      and fetch events from the event stream. Events are limited to 4000 characters.
      If an event is sent out with a message containing more than 4000 characters, only the
      first 4000 characters are displayed.
    name: Events
  - description: Configure your Datadog Fastly integration directly through the Datadog API.
    name: Fastly Integration
  - description: |-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly
      through the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
    externalDocs:
      url: 'https://docs.datadoghq.com/integrations/google_cloud_platform'
    name: GCP Integration
  - description: |-
      The IP allowlist API is used to manage the IP addresses that
      can access the Datadog API and web UI. It does not block
      access to intake APIs or public dashboards.

      This is an enterprise-only feature. Request access by
      contacting Datadog support.
    name: IP Allowlist
  - description: 'Create, update, delete, and retrieve services which can be associated with incidents.'
    name: Incident Services
  - description: 'The Incident Teams endpoints are deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/) to create, update, delete, and retrieve teams which can be associated with incidents.'
    name: Incident Teams
  - description: Manage incident response.
    name: Incidents
  - description: |-
      Manage your Datadog API and application keys. You need an API key and
      an application key for a user with the required permissions to interact
      with these endpoints. The full list of API and application keys can be
      seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/api-app-keys/'
    name: Key Management
  - description: Search your logs and send them to your Datadog platform over HTTP.
    name: Logs
  - description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in web UI.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/archives/'
    name: Logs Archives
  - description: 'Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/logs_to_metrics/'
    name: Logs Metrics
  - description: |-
      The metrics endpoint allows you to:

      - Post metrics data so it can be graphed on Datadogâ€™s dashboards
      - Query metrics from any time period (timeseries and scalar)
      - Modify tag configurations for metrics
      - View tags and volumes for metrics

      **Note**: A graph can only contain a set number of points
      and as the timeframe over which a metric is viewed increases,
      aggregation between points occurs to stay below that set number.

      The Post, Patch, and Delete `manage_tags` API methods can only be performed by
      a user who has the `Manage Tags for Metrics` permission.
    name: Metrics
  - description: |-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a metric or check that you care about and
      notifies your team when a defined threshold has exceeded.

      For more information, see [Creating Monitors](https://docs.datadoghq.com/monitors/create/types/) and
      [Tag Policies](https://docs.datadoghq.com/monitors/settings/).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/monitors/create/types/'
    name: Monitors
  - description: Configure your Datadog Okta integration directly through the Datadog API.
    name: Okta Integration
  - description: |-
      Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)
      directly through the Datadog API.
    externalDocs:
      url: 'https://docs.datadoghq.com/api/latest/opsgenie-integration'
    name: Opsgenie Integration
  - description: 'Create, edit, and manage your organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization).'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/multi_organization'
    name: Organizations
  - description: |-
      The powerpack endpoints allow you to:

      - Get a powerpack
      - Create a powerpack
      - Delete a powerpack
      - Get a list of all powerpacks

      The Patch and Delete API methods can only be performed on a powerpack by
      a user who has the powerpack create permission for that specific powerpack.
    name: Powerpack
  - description: The processes API allows you to query processes data for your organization.
    name: Processes
  - description: Search or aggregate your RUM events over HTTP.
    name: RUM
  - description: |-
      A restriction policy defines the access control rules for a resource, mapping a set of relations
      (such as editor and viewer) to a set of allowed principals (such as roles, teams, or users).
      The restriction policy determines who is authorized to perform what actions on the resource.
    name: Restriction Policies
  - description: |-
      The Roles API is used to create and manage Datadog roles, what
      [global permissions](https://docs.datadoghq.com/account_management/rbac/)
      they grant, and which users belong to them.

      Permissions related to specific account assets can be granted to roles
      in the Datadog application without using this API. For example, granting
      read access on a specific log index to a role can be done in Datadog from the
      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
    name: Roles
  - description: |-
      Detection rules for generating signals and listing of generated
      signals.
    name: Security Monitoring
  - description: 'Create, update, delete, and retrieve sensitive data scanner groups and rules.'
    name: Sensitive Data Scanner
  - description: 'Create, edit, and disable service accounts.'
    name: Service Accounts
  - description: 'API to create, update, retrieve and delete service definitions.'
    externalDocs:
      url: 'https://docs.datadoghq.com/tracing/service_catalog/'
    name: Service Definition
  - description: |-
      API to create, update scorecard rules and outcomes.

      This feature is currently in BETA. If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    name: Service Scorecards
  - description: Search and aggregate your spans from your Datadog platform over HTTP.
    name: Spans
  - description: 'Manage configuration of [span-based metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/metrics/metrics_namespace/'
    name: Spans Metrics
  - description: |-
      Datadog Synthetics uses simulated user requests and browser rendering to help you ensure uptime,
      identify regional issues, and track your application performance. Datadog Synthetics tests come in
      two different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/)
      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can use Datadogâ€™s API to
      manage both test types programmatically.

      For more information about Synthetics, see the [Synthetics overview](https://docs.datadoghq.com/synthetics/).
    name: Synthetics
  - description: View and manage teams within Datadog.
    name: Teams
  - description: |-
      The usage metering API allows you to get hourly, daily, and
      monthly usage across multiple facets of Datadog.
      This API is available to all Pro and Enterprise customers.
      Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).

      **Note**: Usage data is delayed by up to 72 hours from when it was incurred.
      It is retained for 15 months.

      You can retrieve up to 24 hours of hourly usage data for multiple organizations,
      and up to two months of hourly usage data for a single organization in one request.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/billing/usage_details/'
    name: Usage Metering
  - description: 'Create, edit, and disable users.'
    externalDocs:
      url: 'https://docs.datadoghq.com/account_management/users'
    name: Users
components:
  schemas:
    IncidentsResponse:
      description: Response with a list of incidents.
      properties:
        data:
          description: An array of incidents.
          example:
            - attributes:
                created: '2020-04-21T15:34:08.627205+00:00'
                creation_idempotency_key: null
                customer_impact_duration: 0
                customer_impact_end: null
                customer_impact_scope: null
                customer_impact_start: null
                customer_impacted: false
                detected: '2020-04-14T00:00:00+00:00'
                modified: '2020-09-17T14:16:58.696424+00:00'
                public_id: 1
                resolved: null
                severity: SEV-1
                time_to_detect: 0
                time_to_internal_response: 0
                time_to_repair: 0
                time_to_resolve: 0
                title: Example Incident
              id: 00000000-aaaa-0000-0000-000000000000
              relationships:
                attachments:
                  data:
                    - id: 00000000-9999-0000-0000-000000000000
                      type: incident_attachments
                    - id: 00000000-1234-0000-0000-000000000000
                      type: incident_attachments
                commander_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
                created_by_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
                integrations:
                  data:
                    - id: 00000000-0000-0000-4444-000000000000
                      type: incident_integrations
                    - id: 00000000-0000-0000-5555-000000000000
                      type: incident_integrations
                last_modified_by_user:
                  data:
                    id: 00000000-0000-0000-cccc-000000000000
                    type: users
              type: incidents
            - attributes:
                created: '2020-04-21T15:34:08.627205+00:00'
                creation_idempotency_key: null
                customer_impact_duration: 0
                customer_impact_end: null
                customer_impact_scope: null
                customer_impact_start: null
                customer_impacted: false
                detected: '2020-04-14T00:00:00+00:00'
                modified: '2020-09-17T14:16:58.696424+00:00'
                public_id: 2
                resolved: null
                severity: SEV-5
                time_to_detect: 0
                time_to_internal_response: 0
                time_to_repair: 0
                time_to_resolve: 0
                title: Example Incident 2
              id: 00000000-1111-0000-0000-000000000000
              relationships:
                attachments:
                  data:
                    - id: 00000000-9999-0000-0000-000000000000
                      type: incident_attachments
                commander_user:
                  data:
                    id: 00000000-aaaa-0000-0000-000000000000
                    type: users
                created_by_user:
                  data:
                    id: 00000000-aaaa-0000-0000-000000000000
                    type: users
                integrations:
                  data:
                    - id: 00000000-0000-0000-0001-000000000000
                      type: incident_integrations
                    - id: 00000000-0000-0000-0002-000000000000
                      type: incident_integrations
                last_modified_by_user:
                  data:
                    id: 00000000-aaaa-0000-0000-000000000000
                    type: users
              type: incidents
          items:
            $ref: '#/components/schemas/IncidentResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentResponseData:
      description: Incident data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentResponseAttributes'
        id:
          description: The incident's ID.
          example: 00000000-0000-0000-1234-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentResponseRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - id
        - type
      type: object
    IncidentResponseIncludedItem:
      description: An object related to an incident that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
        - $ref: '#/components/schemas/IncidentAttachmentData'
    IncidentResponseMeta:
      description: The metadata object containing pagination metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/IncidentResponseMetaPagination'
      readOnly: true
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - modified_at
        - '-modified_at'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    IncidentAttachmentAttachmentType:
      description: The type of the incident attachment attributes.
      enum:
        - link
        - postmortem
      example: link
      type: string
      x-enum-varnames:
        - LINK
        - POSTMORTEM
    IncidentAttachmentRelatedObject:
      description: The object related to an incident attachment.
      enum:
        - users
      type: string
      x-enum-varnames:
        - USERS
    IncidentRelatedObject:
      description: Object related to an incident.
      enum:
        - users
        - attachments
      type: string
      x-enum-varnames:
        - USERS
        - ATTACHMENTS
    IncidentSearchSortOrder:
      description: The ways searched incidents can be sorted.
      enum:
        - created
        - '-created'
      type: string
      x-enum-varnames:
        - CREATED_ASCENDING
        - CREATED_DESCENDING
    ServiceDefinitionSchemaVersions:
      description: Schema versions
      enum:
        - v1
        - v2
        - v2.1
        - v2.2
      type: string
      x-enum-varnames:
        - V1
        - V2
        - V2_1
        - V2_2
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    IncidentResponseAttributes:
      description: The incident's attributes from a response.
      properties:
        archived:
          description: Timestamp of when the incident was archived.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        case_id:
          description: The incident case id.
          format: int64
          nullable: true
          type: integer
        created:
          description: Timestamp when the incident was created.
          format: date-time
          readOnly: true
          type: string
        customer_impact_duration:
          description: |-
            Length of the incident's customer impact in seconds.
            Equals the difference between `customer_impact_start` and `customer_impact_end`.
          format: int64
          readOnly: true
          type: integer
        customer_impact_end:
          description: Timestamp when customers were no longer impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impact_scope:
          description: A summary of the impact customers experienced during the incident.
          example: An example customer impact scope
          nullable: true
          type: string
        customer_impact_start:
          description: Timestamp when customers began being impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        detected:
          description: Timestamp when the incident was detected.
          format: date-time
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields attached to incidents.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        modified:
          description: Timestamp when the incident was last modified.
          format: date-time
          readOnly: true
          type: string
        non_datadog_creator:
          $ref: '#/components/schemas/IncidentNonDatadogCreator'
        notification_handles:
          description: Notification handles that will be notified of the incident during update.
          items:
            $ref: '#/components/schemas/IncidentNotificationHandle'
          nullable: true
          type: array
        public_id:
          description: The monotonically increasing integer ID for the incident.
          example: 1
          format: int64
          type: integer
        resolved:
          description: Timestamp when the incident's state was last changed from active or stable to resolved or completed.
          format: date-time
          nullable: true
          type: string
        severity:
          $ref: '#/components/schemas/IncidentSeverity'
        state:
          description: The state incident.
          nullable: true
          type: string
        time_to_detect:
          description: |-
            The amount of time in seconds to detect the incident.
            Equals the difference between `customer_impact_start` and `detected`.
          format: int64
          readOnly: true
          type: integer
        time_to_internal_response:
          description: The amount of time in seconds to call incident after detection. Equals the difference of `detected` and `created`.
          format: int64
          readOnly: true
          type: integer
        time_to_repair:
          description: The amount of time in seconds to resolve customer impact after detecting the issue. Equals the difference between `customer_impact_end` and `detected`.
          format: int64
          readOnly: true
          type: integer
        time_to_resolve:
          description: The amount of time in seconds to resolve the incident after it was created. Equals the difference between `created` and `resolved`.
          format: int64
          readOnly: true
          type: integer
        title:
          description: 'The title of the incident, which summarizes what happened.'
          example: A test incident title
          type: string
        visibility:
          description: The incident visibility status.
          nullable: true
          type: string
      required:
        - title
      type: object
    IncidentResponseRelationships:
      description: The incident's relationships from a response.
      properties:
        attachments:
          $ref: '#/components/schemas/RelationshipToIncidentAttachment'
        commander_user:
          $ref: '#/components/schemas/NullableRelationshipToUser'
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        impacts:
          $ref: '#/components/schemas/RelationshipToIncidentImpacts'
        integrations:
          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        responders:
          $ref: '#/components/schemas/RelationshipToIncidentResponders'
        user_defined_fields:
          $ref: '#/components/schemas/RelationshipToIncidentUserDefinedFields'
      type: object
    IncidentType:
      default: incidents
      description: Incident resource type.
      enum:
        - incidents
      example: incidents
      type: string
      x-enum-varnames:
        - INCIDENTS
    User:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    IncidentAttachmentData:
      description: A single incident attachment.
      example:
        attributes:
          attachment:
            documentUrl: ''
            title: Postmortem IR-123
          attachment_type: postmortem
        id: 00000000-abcd-0002-0000-000000000000
        relationships:
          last_modified_by_user:
            data:
              id: 00000000-0000-0000-cccc-000000000000
              type: users
        type: incident_attachments
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentAttachmentAttributes'
        id:
          description: A unique identifier that represents the incident attachment.
          example: 00000000-abcd-0001-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentAttachmentRelationships'
        type:
          $ref: '#/components/schemas/IncidentAttachmentType'
      required:
        - type
        - attributes
        - id
        - relationships
      type: object
    IncidentResponseMetaPagination:
      description: Pagination properties.
      properties:
        next_offset:
          description: The index of the first element in the next page of results. Equal to page size added to the current offset.
          example: 1000
          format: int64
          type: integer
        offset:
          description: The index of the first element in the results.
          example: 10
          format: int64
          type: integer
        size:
          description: Maximum size of pages to return.
          example: 1000
          format: int64
          type: integer
      type: object
    IncidentFieldAttributes:
      description: 'Dynamic fields for which selections can be made, with field names as keys.'
      oneOf:
        - $ref: '#/components/schemas/IncidentFieldAttributesSingleValue'
        - $ref: '#/components/schemas/IncidentFieldAttributesMultipleValue'
      required:
        - type
    IncidentNonDatadogCreator:
      description: Incident's non Datadog creator.
      nullable: true
      properties:
        image_48_px:
          description: Non Datadog creator `48px` image.
          type: string
        name:
          description: Non Datadog creator name.
          type: string
      type: object
    IncidentNotificationHandle:
      description: A notification handle that will be notified at incident creation.
      properties:
        display_name:
          description: The name of the notified handle.
          example: Jane Doe
          type: string
        handle:
          description: The email address used for the notification.
          example: '@test.user@test.com'
          type: string
      type: object
    IncidentSeverity:
      description: The incident severity.
      enum:
        - UNKNOWN
        - SEV-1
        - SEV-2
        - SEV-3
        - SEV-4
        - SEV-5
      example: UNKNOWN
      type: string
      x-enum-varnames:
        - UNKNOWN
        - SEV_1
        - SEV_2
        - SEV_3
        - SEV_4
        - SEV_5
    RelationshipToIncidentAttachment:
      description: A relationship reference for attachments.
      properties:
        data:
          description: An array of incident attachments.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentAttachmentData'
          type: array
      required:
        - data
      type: object
    NullableRelationshipToUser:
      description: Relationship to user.
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/NullableRelationshipToUserData'
      required:
        - data
      type: object
    RelationshipToUser:
      description: Relationship to user.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToUserData'
      required:
        - data
      type: object
    RelationshipToIncidentImpacts:
      description: Relationship to impacts.
      properties:
        data:
          description: An array of incident impacts.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentImpactData'
          type: array
      required:
        - data
      type: object
    RelationshipToIncidentIntegrationMetadatas:
      description: A relationship reference for multiple integration metadata objects.
      example:
        data:
          - id: 00000000-abcd-0005-0000-000000000000
            type: incident_integrations
          - id: 00000000-abcd-0006-0000-000000000000
            type: incident_integrations
      properties:
        data:
          description: Integration metadata relationship array
          example:
            - id: 00000000-abcd-0003-0000-000000000000
              type: incident_integrations
            - id: 00000000-abcd-0004-0000-000000000000
              type: incident_integrations
          items:
            $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadataData'
          type: array
      required:
        - data
      type: object
    RelationshipToIncidentResponders:
      description: Relationship to incident responders.
      properties:
        data:
          description: An array of incident responders.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentResponderData'
          type: array
      required:
        - data
      type: object
    RelationshipToIncidentUserDefinedFields:
      description: Relationship to incident user defined fields.
      properties:
        data:
          description: An array of user defined fields.
          items:
            $ref: '#/components/schemas/RelationshipToIncidentUserDefinedFieldData'
          type: array
      required:
        - data
      type: object
    UserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        service_account:
          description: Whether the user is a service account.
          type: boolean
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    IncidentAttachmentAttributes:
      description: The attributes object for an attachment.
      oneOf:
        - $ref: '#/components/schemas/IncidentAttachmentPostmortemAttributes'
        - $ref: '#/components/schemas/IncidentAttachmentLinkAttributes'
    IncidentAttachmentRelationships:
      description: The incident attachment's relationships.
      properties:
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    IncidentAttachmentType:
      default: incident_attachments
      description: The incident attachment resource type.
      enum:
        - incident_attachments
      example: incident_attachments
      type: string
      x-enum-varnames:
        - INCIDENT_ATTACHMENTS
    IncidentFieldAttributesSingleValue:
      description: A field with a single value selected.
      properties:
        type:
          $ref: '#/components/schemas/IncidentFieldAttributesSingleValueType'
        value:
          description: The single value selected for this field.
          example: SEV-1
          nullable: true
          type: string
      type: object
    IncidentFieldAttributesMultipleValue:
      description: A field with potentially multiple values selected.
      properties:
        type:
          $ref: '#/components/schemas/IncidentFieldAttributesValueType'
        value:
          description: The multiple values selected for this field.
          example:
            - '1.0'
            - '1.1'
          items:
            description: A value which has been selected for the parent field.
            example: '1.1'
            type: string
          nullable: true
          type: array
      type: object
    RelationshipToIncidentAttachmentData:
      description: The attachment relationship data.
      properties:
        id:
          description: A unique identifier that represents the attachment.
          example: 00000000-0000-abcd-1000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentAttachmentType'
      required:
        - id
        - type
      type: object
    NullableRelationshipToUserData:
      description: Relationship to user object.
      nullable: true
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToUserData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentImpactData:
      description: Relationship to impact object.
      properties:
        id:
          description: A unique identifier that represents the impact.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentImpactsType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentIntegrationMetadataData:
      description: A relationship reference for an integration metadata object.
      example:
        id: 00000000-abcd-0002-0000-000000000000
        type: incident_integrations
      properties:
        id:
          description: A unique identifier that represents the integration metadata.
          example: 00000000-abcd-0001-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentResponderData:
      description: Relationship to impact object.
      properties:
        id:
          description: A unique identifier that represents the responder.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentRespondersType'
      required:
        - id
        - type
      type: object
    RelationshipToIncidentUserDefinedFieldData:
      description: Relationship to impact object.
      properties:
        id:
          description: A unique identifier that represents the responder.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentUserDefinedFieldType'
      required:
        - id
        - type
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      properties:
        data:
          description: An array containing type and the unique identifier of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    IncidentAttachmentPostmortemAttributes:
      description: The attributes object for a postmortem attachment.
      properties:
        attachment:
          $ref: '#/components/schemas/IncidentAttachmentsPostmortemAttributesAttachmentObject'
        attachment_type:
          $ref: '#/components/schemas/IncidentAttachmentPostmortemAttachmentType'
      required:
        - attachment_type
        - attachment
      type: object
    IncidentAttachmentLinkAttributes:
      description: The attributes object for a link attachment.
      properties:
        attachment:
          $ref: '#/components/schemas/IncidentAttachmentLinkAttributesAttachmentObject'
        attachment_type:
          $ref: '#/components/schemas/IncidentAttachmentLinkAttachmentType'
        modified:
          description: Timestamp when the incident attachment link was last modified.
          format: date-time
          readOnly: true
          type: string
      required:
        - attachment_type
        - attachment
      type: object
    IncidentFieldAttributesSingleValueType:
      default: dropdown
      description: Type of the single value field definitions.
      enum:
        - dropdown
        - textbox
      example: dropdown
      type: string
      x-enum-varnames:
        - DROPDOWN
        - TEXTBOX
    IncidentFieldAttributesValueType:
      default: multiselect
      description: Type of the multiple value field definitions.
      enum:
        - multiselect
        - textarray
        - metrictag
        - autocomplete
      example: multiselect
      type: string
      x-enum-varnames:
        - MULTISELECT
        - TEXTARRAY
        - METRICTAG
        - AUTOCOMPLETE
    IncidentImpactsType:
      description: The incident impacts type.
      enum:
        - incident_impacts
      example: incident_impacts
      type: string
      x-enum-varnames:
        - INCIDENT_IMPACTS
    IncidentIntegrationMetadataType:
      default: incident_integrations
      description: Integration metadata resource type.
      enum:
        - incident_integrations
      example: incident_integrations
      type: string
      x-enum-varnames:
        - INCIDENT_INTEGRATIONS
    IncidentRespondersType:
      description: The incident responders type.
      enum:
        - incident_responders
      example: incident_responders
      type: string
      x-enum-varnames:
        - INCIDENT_RESPONDERS
    IncidentUserDefinedFieldType:
      description: The incident user defined fields type.
      enum:
        - user_defined_field
      example: user_defined_field
      type: string
      x-enum-varnames:
        - USER_DEFINED_FIELD
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    IncidentAttachmentsPostmortemAttributesAttachmentObject:
      description: The postmortem attachment.
      properties:
        documentUrl:
          description: The URL of this notebook attachment.
          example: 'https://app.datadoghq.com/notebook/123'
          type: string
        title:
          description: The title of this postmortem attachment.
          example: Postmortem IR-123
          type: string
      required:
        - documentUrl
        - title
      type: object
    IncidentAttachmentPostmortemAttachmentType:
      default: postmortem
      description: The type of postmortem attachment attributes.
      enum:
        - postmortem
      example: postmortem
      type: string
      x-enum-varnames:
        - POSTMORTEM
    IncidentAttachmentLinkAttributesAttachmentObject:
      description: The link attachment.
      properties:
        documentUrl:
          description: The URL of this link attachment.
          example: 'https://www.example.com/webstore-failure-runbook'
          type: string
        title:
          description: The title of this link attachment.
          example: Runbook for webstore service failures
          type: string
      required:
        - documentUrl
        - title
      type: object
    IncidentAttachmentLinkAttachmentType:
      default: link
      description: The type of link attachment attributes.
      enum:
        - link
      example: link
      type: string
      x-enum-varnames:
        - LINK
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    IncidentCreateRequest:
      description: Create request for an incident.
      properties:
        data:
          $ref: '#/components/schemas/IncidentCreateData'
      required:
        - data
      type: object
    IncidentResponse:
      description: Response with an incident.
      properties:
        data:
          $ref: '#/components/schemas/IncidentResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentCreateData:
      description: Incident data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentCreateRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - type
        - attributes
      type: object
    IncidentCreateAttributes:
      description: The incident's attributes for a create request.
      properties:
        customer_impact_scope:
          description: 'Required if `customer_impacted:"true"`. A summary of the impact customers experienced during the incident.'
          example: Example customer impact scope
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields for which to create initial selections.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        initial_cells:
          description: An array of initial timeline cells to be placed at the beginning of the incident timeline.
          items:
            $ref: '#/components/schemas/IncidentTimelineCellCreateAttributes'
          type: array
        notification_handles:
          description: Notification handles that will be notified of the incident at creation.
          items:
            $ref: '#/components/schemas/IncidentNotificationHandle'
          type: array
        title:
          description: 'The title of the incident, which summarizes what happened.'
          example: A test incident title
          type: string
      required:
        - title
        - customer_impacted
      type: object
    IncidentCreateRelationships:
      description: The relationships the incident will have with other resources once created.
      properties:
        commander_user:
          $ref: '#/components/schemas/NullableRelationshipToUser'
      required:
        - commander_user
      type: object
    IncidentTimelineCellCreateAttributes:
      description: The timeline cell's attributes for a create request.
      oneOf:
        - $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributes'
    IncidentTimelineCellMarkdownCreateAttributes:
      description: Timeline cell data for Markdown timeline cells for a create request.
      properties:
        cell_type:
          $ref: '#/components/schemas/IncidentTimelineCellMarkdownContentType'
        content:
          $ref: '#/components/schemas/IncidentTimelineCellMarkdownCreateAttributesContent'
        important:
          default: false
          description: A flag indicating whether the timeline cell is important and should be highlighted.
          example: false
          type: boolean
      required:
        - content
        - cell_type
      type: object
    IncidentTimelineCellMarkdownContentType:
      default: markdown
      description: Type of the Markdown timeline cell.
      enum:
        - markdown
      example: markdown
      type: string
      x-enum-varnames:
        - MARKDOWN
    IncidentTimelineCellMarkdownCreateAttributesContent:
      description: The Markdown timeline cell contents.
      properties:
        content:
          description: The Markdown content of the cell.
          example: An example timeline cell message.
          nullable: false
          type: string
      type: object
    IncidentSearchResponse:
      description: Response with incidents and facets.
      properties:
        data:
          $ref: '#/components/schemas/IncidentSearchResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentSearchResponseMeta'
      required:
        - data
      type: object
    IncidentSearchResponseData:
      description: Data returned by an incident search.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentSearchResponseAttributes'
        type:
          $ref: '#/components/schemas/IncidentSearchResultsType'
      type: object
    IncidentSearchResponseMeta:
      description: The metadata object containing pagination metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/IncidentResponseMetaPagination'
      readOnly: true
      type: object
    IncidentSearchResponseAttributes:
      description: Attributes returned by an incident search.
      properties:
        facets:
          $ref: '#/components/schemas/IncidentSearchResponseFacetsData'
        incidents:
          description: Incidents returned by the search.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseIncidentsData'
          type: array
        total:
          description: Number of incidents returned by the search.
          example: 10
          format: int32
          maximum: 2147483647
          type: integer
      required:
        - facets
        - incidents
        - total
      type: object
    IncidentSearchResultsType:
      default: incidents_search_results
      description: Incident search result type.
      enum:
        - incidents_search_results
      example: incidents_search_results
      type: string
      x-enum-varnames:
        - INCIDENTS_SEARCH_RESULTS
    IncidentSearchResponseFacetsData:
      description: Facet data for incidents returned by a search query.
      properties:
        commander:
          description: Facet data for incident commander users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        created_by:
          description: Facet data for incident creator users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        fields:
          description: Facet data for incident property fields.
          items:
            $ref: '#/components/schemas/IncidentSearchResponsePropertyFieldFacetData'
          type: array
        impact:
          description: Facet data for incident impact attributes.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        last_modified_by:
          description: Facet data for incident last modified by users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        postmortem:
          description: Facet data for incident postmortem existence.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        responder:
          description: Facet data for incident responder users.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseUserFacetData'
          type: array
        severity:
          description: Facet data for incident severity attributes.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        state:
          description: Facet data for incident state attributes.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        time_to_repair:
          description: Facet data for incident time to repair metrics.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseNumericFacetData'
          type: array
        time_to_resolve:
          description: Facet data for incident time to resolve metrics.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseNumericFacetData'
          type: array
      type: object
    IncidentSearchResponseIncidentsData:
      description: Incident returned by the search.
      properties:
        data:
          $ref: '#/components/schemas/IncidentResponseData'
      required:
        - data
      type: object
    IncidentSearchResponseUserFacetData:
      description: Facet data for user attributes of an incident.
      properties:
        count:
          $ref: '#/components/schemas/IncidentSearchResponseFacetCount'
        email:
          description: Email of the user.
          example: datadog.user@example.com
          type: string
        handle:
          description: Handle of the user.
          example: '@datadog.user@example.com'
          type: string
        name:
          description: Name of the user.
          example: Datadog User
          type: string
        uuid:
          description: ID of the user.
          example: 773b045d-ccf8-4808-bd3b-955ef6a8c940
          type: string
      type: object
    IncidentSearchResponsePropertyFieldFacetData:
      description: Facet data for the incident property fields.
      properties:
        aggregates:
          $ref: '#/components/schemas/IncidentSearchResponseNumericFacetDataAggregates'
        facets:
          description: Facet data for the property field of an incident.
          items:
            $ref: '#/components/schemas/IncidentSearchResponseFieldFacetData'
          type: array
        name:
          description: Name of the incident property field.
          example: Severity
          type: string
      required:
        - facets
        - name
      type: object
    IncidentSearchResponseFieldFacetData:
      description: Facet value and number of occurrences for a property field of an incident.
      properties:
        count:
          $ref: '#/components/schemas/IncidentSearchResponseFacetCount'
        name:
          description: The facet value appearing in search results.
          example: SEV-2
          type: string
      type: object
    IncidentSearchResponseNumericFacetData:
      description: Facet data numeric attributes of an incident.
      properties:
        aggregates:
          $ref: '#/components/schemas/IncidentSearchResponseNumericFacetDataAggregates'
        name:
          description: Name of the incident property field.
          example: time_to_repair
          type: string
      required:
        - name
        - aggregates
      type: object
    IncidentSearchResponseFacetCount:
      description: Count of the facet value appearing in search results.
      example: 5
      format: int32
      maximum: 2147483647
      type: integer
    IncidentSearchResponseNumericFacetDataAggregates:
      description: Aggregate information for numeric incident data.
      properties:
        max:
          description: Maximum value of the numeric aggregates.
          example: 1234
          format: double
          nullable: true
          type: number
        min:
          description: Minimum value of the numeric aggregates.
          example: 20
          format: double
          nullable: true
          type: number
      type: object
    IncidentUpdateRequest:
      description: Update request for an incident.
      properties:
        data:
          $ref: '#/components/schemas/IncidentUpdateData'
      required:
        - data
      type: object
    IncidentUpdateData:
      description: Incident data for an update request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentUpdateAttributes'
        id:
          description: The incident's ID.
          example: 00000000-0000-0000-4567-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentUpdateRelationships'
        type:
          $ref: '#/components/schemas/IncidentType'
      required:
        - id
        - type
      type: object
    IncidentUpdateAttributes:
      description: The incident's attributes for an update request.
      properties:
        customer_impact_end:
          description: Timestamp when customers were no longer impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impact_scope:
          description: A summary of the impact customers experienced during the incident.
          example: Example customer impact scope
          type: string
        customer_impact_start:
          description: Timestamp when customers began being impacted by the incident.
          format: date-time
          nullable: true
          type: string
        customer_impacted:
          description: A flag indicating whether the incident caused customer impact.
          example: false
          type: boolean
        detected:
          description: Timestamp when the incident was detected.
          format: date-time
          nullable: true
          type: string
        fields:
          additionalProperties:
            $ref: '#/components/schemas/IncidentFieldAttributes'
          description: A condensed view of the user-defined fields for which to update selections.
          example:
            severity:
              type: dropdown
              value: SEV-5
          type: object
        notification_handles:
          description: Notification handles that will be notified of the incident during update.
          items:
            $ref: '#/components/schemas/IncidentNotificationHandle'
          type: array
        title:
          description: 'The title of the incident, which summarizes what happened.'
          example: A test incident title
          type: string
      type: object
    IncidentUpdateRelationships:
      description: The incident's relationships for an update request.
      properties:
        commander_user:
          $ref: '#/components/schemas/NullableRelationshipToUser'
        integrations:
          $ref: '#/components/schemas/RelationshipToIncidentIntegrationMetadatas'
        postmortem:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortem'
      type: object
    RelationshipToIncidentPostmortem:
      description: A relationship reference for postmortems.
      example:
        data:
          id: 00000000-0000-abcd-3000-000000000000
          type: incident_postmortems
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToIncidentPostmortemData'
      required:
        - data
      type: object
    RelationshipToIncidentPostmortemData:
      description: The postmortem relationship data.
      example:
        id: 00000000-0000-abcd-2000-000000000000
        type: incident_postmortems
      properties:
        id:
          description: A unique identifier that represents the postmortem.
          example: 00000000-0000-abcd-1000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentPostmortemType'
      required:
        - id
        - type
      type: object
    IncidentPostmortemType:
      default: incident_postmortems
      description: Incident postmortem resource type.
      enum:
        - incident_postmortems
      example: incident_postmortems
      type: string
      x-enum-varnames:
        - INCIDENT_POSTMORTEMS
    IncidentAttachmentsResponse:
      description: The response object containing an incident's attachments.
      properties:
        data:
          description: An array of incident attachments.
          items:
            $ref: '#/components/schemas/IncidentAttachmentData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentAttachmentsResponseIncludedItem'
          type: array
      required:
        - data
      type: object
    IncidentAttachmentsResponseIncludedItem:
      description: An object related to an attachment that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentAttachmentUpdateRequest:
      description: The update request for an incident's attachments.
      properties:
        data:
          description: |-
            An array of incident attachments. An attachment object without an "id" key indicates that you want to
            create that attachment. An attachment object without an "attributes" key indicates that you want to
            delete that attachment. An attachment object with both the "id" key and a populated "attributes" object
            indicates that you want to update that attachment.
          example:
            - attributes:
                attachment:
                  documentUrl: 'https://app.datadoghq.com/notebook/123'
                  title: Postmortem IR-123
                attachment_type: postmortem
              id: 00000000-abcd-0002-0000-000000000000
              type: incident_attachments
            - attributes:
                attachment:
                  documentUrl: 'https://www.example.com/webstore-failure-runbook'
                  title: Runbook for webstore service failures
                attachment_type: link
              type: incident_attachments
            - id: 00000000-abcd-0003-0000-000000000000
              type: incident_attachments
          items:
            $ref: '#/components/schemas/IncidentAttachmentUpdateData'
          type: array
      required:
        - data
      type: object
    IncidentAttachmentUpdateResponse:
      description: The response object containing the created or updated incident attachments.
      properties:
        data:
          description: |-
            An array of incident attachments. Only the attachments that were created or updated by the request are
            returned.
          items:
            $ref: '#/components/schemas/IncidentAttachmentData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentAttachmentsResponseIncludedItem'
          type: array
      required:
        - data
      type: object
    IncidentAttachmentUpdateData:
      description: A single incident attachment.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentAttachmentUpdateAttributes'
        id:
          description: A unique identifier that represents the incident attachment.
          example: 00000000-abcd-0001-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/IncidentAttachmentType'
      required:
        - type
      type: object
    IncidentAttachmentUpdateAttributes:
      description: Incident attachment attributes.
      oneOf:
        - $ref: '#/components/schemas/IncidentAttachmentPostmortemAttributes'
        - $ref: '#/components/schemas/IncidentAttachmentLinkAttributes'
    IncidentIntegrationMetadataListResponse:
      description: Response with a list of incident integration metadata.
      properties:
        data:
          description: An array of incident integration metadata.
          items:
            $ref: '#/components/schemas/IncidentIntegrationMetadataResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentIntegrationMetadataResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentIntegrationMetadataResponseData:
      description: Incident integration metadata from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentIntegrationMetadataAttributes'
        id:
          description: The incident integration metadata's ID.
          example: 00000000-0000-0000-1234-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentIntegrationRelationships'
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - id
        - type
      type: object
    IncidentIntegrationMetadataResponseIncludedItem:
      description: An object related to an incident integration metadata that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentIntegrationMetadataAttributes:
      description: Incident integration metadata's attributes for a create request.
      properties:
        created:
          description: Timestamp when the incident todo was created.
          format: date-time
          readOnly: true
          type: string
        incident_id:
          description: UUID of the incident this integration metadata is connected to.
          example: 00000000-aaaa-0000-0000-000000000000
          type: string
        integration_type:
          description: |-
            A number indicating the type of integration this metadata is for. 1 indicates Slack;
            8 indicates Jira.
          example: 1
          format: int32
          maximum: 9
          type: integer
        metadata:
          $ref: '#/components/schemas/IncidentIntegrationMetadataMetadata'
        modified:
          description: Timestamp when the incident todo was last modified.
          format: date-time
          readOnly: true
          type: string
        status:
          description: |-
            A number indicating the status of this integration metadata. 0 indicates unknown;
            1 indicates pending; 2 indicates complete; 3 indicates manually created;
            4 indicates manually updated; 5 indicates failed.
          format: int32
          maximum: 5
          type: integer
      required:
        - integration_type
        - metadata
      type: object
    IncidentIntegrationRelationships:
      description: The incident's integration relationships from a response.
      properties:
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    IncidentIntegrationMetadataMetadata:
      description: Incident integration metadata's metadata attribute.
      oneOf:
        - $ref: '#/components/schemas/SlackIntegrationMetadata'
        - $ref: '#/components/schemas/JiraIntegrationMetadata'
    SlackIntegrationMetadata:
      description: Incident integration metadata for the Slack integration.
      properties:
        channels:
          description: Array of Slack channels in this integration metadata.
          example: []
          items:
            $ref: '#/components/schemas/SlackIntegrationMetadataChannelItem'
          type: array
      required:
        - channels
      type: object
    JiraIntegrationMetadata:
      description: Incident integration metadata for the Jira integration.
      properties:
        issues:
          description: Array of Jira issues in this integration metadata.
          example: []
          items:
            $ref: '#/components/schemas/JiraIntegrationMetadataIssuesItem'
          type: array
      required:
        - issues
      type: object
    SlackIntegrationMetadataChannelItem:
      description: Item in the Slack integration metadata channel array.
      properties:
        channel_id:
          description: Slack channel ID.
          example: C0123456789
          type: string
        channel_name:
          description: Name of the Slack channel.
          example: '#example-channel-name'
          type: string
        redirect_url:
          description: URL redirecting to the Slack channel.
          example: 'https://slack.com/app_redirect?channel=C0123456789&team=T01234567'
          type: string
        team_id:
          description: Slack team ID.
          example: T01234567
          type: string
      required:
        - channel_id
        - channel_name
        - redirect_url
      type: object
    JiraIntegrationMetadataIssuesItem:
      description: Item in the Jira integration metadata issue array.
      properties:
        account:
          description: URL of issue's Jira account.
          example: 'https://example.atlassian.net'
          type: string
        issue_key:
          description: Jira issue's issue key.
          example: PROJ-123
          type: string
        issuetype_id:
          description: Jira issue's issue type.
          example: '1000'
          type: string
        project_key:
          description: Jira issue's project keys.
          example: PROJ
          type: string
        redirect_url:
          description: URL redirecting to the Jira issue.
          example: 'https://example.atlassian.net/browse/PROJ-123'
          type: string
      required:
        - project_key
        - account
      type: object
    IncidentIntegrationMetadataCreateRequest:
      description: Create request for an incident integration metadata.
      properties:
        data:
          $ref: '#/components/schemas/IncidentIntegrationMetadataCreateData'
      required:
        - data
      type: object
    IncidentIntegrationMetadataResponse:
      description: Response with an incident integration metadata.
      properties:
        data:
          $ref: '#/components/schemas/IncidentIntegrationMetadataResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentIntegrationMetadataResponseIncludedItem'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentIntegrationMetadataCreateData:
      description: Incident integration metadata data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentIntegrationMetadataAttributes'
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - type
        - attributes
      type: object
    IncidentIntegrationMetadataPatchRequest:
      description: Patch request for an incident integration metadata.
      properties:
        data:
          $ref: '#/components/schemas/IncidentIntegrationMetadataPatchData'
      required:
        - data
      type: object
    IncidentIntegrationMetadataPatchData:
      description: Incident integration metadata data for a patch request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentIntegrationMetadataAttributes'
        type:
          $ref: '#/components/schemas/IncidentIntegrationMetadataType'
      required:
        - type
        - attributes
      type: object
    IncidentTodoListResponse:
      description: Response with a list of incident todos.
      properties:
        data:
          description: An array of incident todos.
          items:
            $ref: '#/components/schemas/IncidentTodoResponseData'
          type: array
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentTodoResponseIncludedItem'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentTodoResponseData:
      description: Incident todo response data.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTodoAttributes'
        id:
          description: The incident todo's ID.
          example: 00000000-0000-0000-1234-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTodoRelationships'
        type:
          $ref: '#/components/schemas/IncidentTodoType'
      required:
        - id
        - type
      type: object
    IncidentTodoResponseIncludedItem:
      description: An object related to an incident todo that is included in the response.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentTodoAttributes:
      description: Incident todo's attributes.
      properties:
        assignees:
          $ref: '#/components/schemas/IncidentTodoAssigneeArray'
        completed:
          description: Timestamp when the todo was completed.
          example: '2023-03-06T22:00:00.000000+00:00'
          nullable: true
          type: string
        content:
          description: The follow-up task's content.
          example: Restore lost data.
          type: string
        created:
          description: Timestamp when the incident todo was created.
          format: date-time
          readOnly: true
          type: string
        due_date:
          description: Timestamp when the todo should be completed by.
          example: '2023-07-10T05:00:00.000000+00:00'
          nullable: true
          type: string
        incident_id:
          description: UUID of the incident this todo is connected to.
          example: 00000000-aaaa-0000-0000-000000000000
          type: string
        modified:
          description: Timestamp when the incident todo was last modified.
          format: date-time
          readOnly: true
          type: string
      required:
        - content
        - assignees
      type: object
    IncidentTodoRelationships:
      description: The incident's relationships from a response.
      properties:
        created_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by_user:
          $ref: '#/components/schemas/RelationshipToUser'
      type: object
    IncidentTodoType:
      default: incident_todos
      description: Todo resource type.
      enum:
        - incident_todos
      example: incident_todos
      type: string
      x-enum-varnames:
        - INCIDENT_TODOS
    IncidentTodoAssigneeArray:
      description: Array of todo assignees.
      items:
        $ref: '#/components/schemas/IncidentTodoAssignee'
      type: array
    IncidentTodoAssignee:
      description: A todo assignee.
      example: '@test.user@test.com'
      oneOf:
        - $ref: '#/components/schemas/IncidentTodoAssigneeHandle'
        - $ref: '#/components/schemas/IncidentTodoAnonymousAssignee'
    IncidentTodoAssigneeHandle:
      description: Assignee's @-handle.
      example: '@test.user@test.com'
      type: string
    IncidentTodoAnonymousAssignee:
      description: Anonymous assignee entity.
      properties:
        icon:
          description: URL for assignee's icon.
          example: 'https://a.slack-edge.com/80588/img/slackbot_48.png'
          type: string
        id:
          description: Anonymous assignee's ID.
          example: USLACKBOT
          type: string
        name:
          description: Assignee's name.
          example: Slackbot
          type: string
        source:
          $ref: '#/components/schemas/IncidentTodoAnonymousAssigneeSource'
      required:
        - id
        - icon
        - name
        - source
      type: object
    IncidentTodoAnonymousAssigneeSource:
      default: slack
      description: The source of the anonymous assignee.
      enum:
        - slack
        - microsoft_teams
      example: slack
      type: string
      x-enum-varnames:
        - SLACK
        - MICROSOFT_TEAMS
    IncidentTodoCreateRequest:
      description: Create request for an incident todo.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTodoCreateData'
      required:
        - data
      type: object
    IncidentTodoResponse:
      description: Response with an incident todo.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTodoResponseData'
        included:
          description: Included related resources that the user requested.
          items:
            $ref: '#/components/schemas/IncidentTodoResponseIncludedItem'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentTodoCreateData:
      description: Incident todo data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTodoAttributes'
        type:
          $ref: '#/components/schemas/IncidentTodoType'
      required:
        - type
        - attributes
      type: object
    IncidentTodoPatchRequest:
      description: Patch request for an incident todo.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTodoPatchData'
      required:
        - data
      type: object
    IncidentTodoPatchData:
      description: Incident todo data for a patch request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTodoAttributes'
        type:
          $ref: '#/components/schemas/IncidentTodoType'
      required:
        - type
        - attributes
      type: object
    IncidentServicesResponse:
      description: Response with a list of incident service payloads.
      properties:
        data:
          description: An array of incident services.
          example:
            - id: 00000000-0000-0000-0000-000000000000
              type: services
          items:
            $ref: '#/components/schemas/IncidentServiceResponseData'
          type: array
        included:
          description: Included related resources which the user requested.
          items:
            $ref: '#/components/schemas/IncidentServiceIncludedItems'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentServiceResponseData:
      description: Incident Service data from responses.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceResponseAttributes'
        id:
          description: The incident service's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - id
        - type
      type: object
    IncidentServiceIncludedItems:
      description: An object related to an incident service which is present in the included payload.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentServiceResponseAttributes:
      description: The incident service's attributes from a response.
      properties:
        created:
          description: Timestamp of when the incident service was created.
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Timestamp of when the incident service was modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the incident service.
          example: service name
          type: string
      type: object
    IncidentServiceRelationships:
      description: The incident service's relationships.
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      readOnly: true
      type: object
    IncidentServiceType:
      default: services
      description: Incident service resource type.
      enum:
        - services
      example: services
      type: string
      x-enum-varnames:
        - SERVICES
    IncidentServiceCreateRequest:
      description: Create request with an incident service payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceCreateData'
      required:
        - data
      type: object
    IncidentServiceResponse:
      description: Response with an incident service payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceResponseData'
        included:
          description: Included objects from relationships.
          items:
            $ref: '#/components/schemas/IncidentServiceIncludedItems'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentServiceCreateData:
      description: Incident Service payload for create requests.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - type
      type: object
    IncidentServiceCreateAttributes:
      description: The incident service's attributes for a create request.
      properties:
        name:
          description: Name of the incident service.
          example: an example service name
          type: string
      required:
        - name
      type: object
    IncidentServiceUpdateRequest:
      description: Update request with an incident service payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentServiceUpdateData'
      required:
        - data
      type: object
    IncidentServiceUpdateData:
      description: Incident Service payload for update requests.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentServiceUpdateAttributes'
        id:
          description: The incident service's ID.
          example: 00000000-0000-0000-0000-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentServiceRelationships'
        type:
          $ref: '#/components/schemas/IncidentServiceType'
      required:
        - type
      type: object
    IncidentServiceUpdateAttributes:
      description: The incident service's attributes for an update request.
      properties:
        name:
          description: Name of the incident service.
          example: an example service name
          type: string
      required:
        - name
      type: object
    IncidentTeamsResponse:
      description: Response with a list of incident team payloads.
      properties:
        data:
          description: An array of incident teams.
          example:
            - attributes:
                name: team name
              id: 00000000-7ea3-0000-0000-000000000000
              type: teams
          items:
            $ref: '#/components/schemas/IncidentTeamResponseData'
          type: array
        included:
          description: Included related resources which the user requested.
          items:
            $ref: '#/components/schemas/IncidentTeamIncludedItems'
          readOnly: true
          type: array
        meta:
          $ref: '#/components/schemas/IncidentResponseMeta'
      required:
        - data
      type: object
    IncidentTeamResponseData:
      description: Incident Team data from a response.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamResponseAttributes'
        id:
          description: The incident team's ID.
          example: 00000000-7ea3-0000-000a-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      type: object
    IncidentTeamIncludedItems:
      description: An object related to an incident team which is present in the included payload.
      oneOf:
        - $ref: '#/components/schemas/User'
    IncidentTeamResponseAttributes:
      description: The incident team's attributes from a response.
      properties:
        created:
          description: Timestamp of when the incident team was created.
          format: date-time
          readOnly: true
          type: string
        modified:
          description: Timestamp of when the incident team was modified.
          format: date-time
          readOnly: true
          type: string
        name:
          description: Name of the incident team.
          example: team name
          type: string
      type: object
    IncidentTeamRelationships:
      description: The incident team's relationships.
      properties:
        created_by:
          $ref: '#/components/schemas/RelationshipToUser'
        last_modified_by:
          $ref: '#/components/schemas/RelationshipToUser'
      readOnly: true
      type: object
    IncidentTeamType:
      default: teams
      description: Incident Team resource type.
      enum:
        - teams
      example: teams
      type: string
      x-enum-varnames:
        - TEAMS
    IncidentTeamCreateRequest:
      description: Create request with an incident team payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamCreateData'
      required:
        - data
      type: object
    IncidentTeamResponse:
      description: Response with an incident team payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamResponseData'
        included:
          description: Included objects from relationships.
          items:
            $ref: '#/components/schemas/IncidentTeamIncludedItems'
          readOnly: true
          type: array
      required:
        - data
      type: object
    IncidentTeamCreateData:
      description: Incident Team data for a create request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamCreateAttributes'
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      required:
        - type
      type: object
    IncidentTeamCreateAttributes:
      description: The incident team's attributes for a create request.
      properties:
        name:
          description: Name of the incident team.
          example: team name
          type: string
      required:
        - name
      type: object
    IncidentTeamUpdateRequest:
      description: Update request with an incident team payload.
      properties:
        data:
          $ref: '#/components/schemas/IncidentTeamUpdateData'
      required:
        - data
      type: object
    IncidentTeamUpdateData:
      description: Incident Team data for an update request.
      properties:
        attributes:
          $ref: '#/components/schemas/IncidentTeamUpdateAttributes'
        id:
          description: The incident team's ID.
          example: 00000000-7ea3-0000-0001-000000000000
          type: string
        relationships:
          $ref: '#/components/schemas/IncidentTeamRelationships'
        type:
          $ref: '#/components/schemas/IncidentTeamType'
      required:
        - type
      type: object
    IncidentTeamUpdateAttributes:
      description: The incident team's attributes for an update request.
      properties:
        name:
          description: Name of the incident team.
          example: team name
          type: string
      required:
        - name
      type: object
  parameters:
    APIKeyCategoryParameter:
      description: Filter API keys by category.
      in: query
      name: 'filter[category]'
      required: false
      schema:
        type: string
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      in: query
      name: 'filter[modified_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      in: query
      name: 'filter[modified_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    APIKeyId:
      description: The ID of the API key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    APIKeyIncludeParameter:
      description: Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`.
      in: query
      name: include
      required: false
      schema:
        example: 'created_by,modified_by'
        type: string
    APIKeyReadConfigReadEnabledParameter:
      description: Filter API keys by remote config read enabled status.
      in: query
      name: 'filter[remote_config_read_enabled]'
      required: false
      schema:
        type: boolean
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    ApplicationKeyID:
      description: The ID of the application key.
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    ApplicationKeyIncludeParameter:
      description: Resource path for related resources to include in the response. Only `owned_by` is supported.
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
    ArchiveID:
      description: The ID of the archive.
      in: path
      name: archive_id
      required: true
      schema:
        type: string
    AuthNMappingID:
      description: The UUID of the AuthN Mapping.
      in: path
      name: authn_mapping_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule.
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    ConfluentAccountID:
      description: Confluent Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    ConfluentResourceID:
      description: Confluent Account Resource ID.
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    FastlyAccountID:
      description: Fastly Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    FastlyServiceID:
      description: Fastly Service ID.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    GCPSTSServiceAccountID:
      description: Your GCP STS enabled service account's unique ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    IncidentAttachmentFilterQueryParameter:
      description: Specifies which types of attachments are included in the response.
      explode: false
      in: query
      name: 'filter[attachment_type]'
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentAttachmentType'
        type: array
    IncidentAttachmentIncludeQueryParameter:
      description: Specifies which types of related objects are included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentRelatedObject'
        type: array
    IncidentIDPathParameter:
      description: The UUID of the incident.
      in: path
      name: incident_id
      required: true
      schema:
        type: string
    IncidentIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentRelatedObject'
        type: array
    IncidentIntegrationMetadataIDPathParameter:
      description: The UUID of the incident integration metadata.
      in: path
      name: integration_metadata_id
      required: true
      schema:
        type: string
    IncidentSearchIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentSearchQueryQueryParameter:
      description: |-
        Specifies which incidents should be returned. The query can contain any number of incident facets
        joined by `ANDs`, along with multiple values for each of those facets joined by `OR`s. For
        example: `state:active AND severity:(SEV-2 OR SEV-1)`.
      explode: false
      in: query
      name: query
      required: true
      schema:
        type: string
    IncidentSearchSortQueryParameter:
      description: Specifies the order of returned incidents.
      explode: false
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/IncidentSearchSortOrder'
    IncidentServiceIDPathParameter:
      description: The ID of the incident service.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    IncidentServiceIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentServiceSearchQueryParameter:
      description: A search query that filters services by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleServiceName
        type: string
    IncidentTeamIDPathParameter:
      description: The ID of the incident team.
      in: path
      name: team_id
      required: true
      schema:
        type: string
    IncidentTeamIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentTeamSearchQueryParameter:
      description: A search query that filters teams by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleTeamName
        type: string
    IncidentTodoIDPathParameter:
      description: The UUID of the incident todo.
      in: path
      name: todo_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    MetricName:
      description: The name of the metric.
      example: dist.http.endpoint.request
      in: path
      name: metric_name
      required: true
      schema:
        type: string
    OpsgenieServiceIDPathParameter:
      description: The UUID of the service.
      in: path
      name: integration_service_id
      required: true
      schema:
        type: string
    PageNumber:
      description: Specific page number to return.
      in: query
      name: 'page[number]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: 'page[offset]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: 'page[size]'
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    ResourceID:
      description: 'Identifier, formatted as `type:id`. Supported types: `connection`, `dashboard`, `notebook`, `security-rule`, `slo`.'
      example: 'dashboard:abc-def-ghi'
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    RoleID:
      description: The unique identifier of the role.
      in: path
      name: role_id
      required: true
      schema:
        type: string
    RuleId:
      description: The ID of the rule/scorecard.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SchemaVersion:
      description: The schema version desired in the response.
      in: query
      name: schema_version
      required: false
      schema:
        $ref: '#/components/schemas/ServiceDefinitionSchemaVersions'
    SecurityFilterID:
      description: The ID of the security filter.
      in: path
      name: security_filter_id
      required: true
      schema:
        type: string
    SecurityMonitoringRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SensitiveDataScannerGroupID:
      description: The ID of a group of rules.
      in: path
      name: group_id
      required: true
      schema:
        type: string
    SensitiveDataScannerRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    ServiceAccountID:
      description: The ID of the service account.
      in: path
      name: service_account_id
      required: true
      schema:
        example: 00000000-0000-1234-0000-000000000000
        type: string
    ServiceName:
      description: The name of the service.
      in: path
      name: service_name
      required: true
      schema:
        example: my-service
        type: string
    SignalID:
      description: The ID of the signal.
      in: path
      name: signal_id
      required: true
      schema:
        type: string
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    UserID:
      description: The ID of the user.
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-9999-0000-000000000000
        type: string
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    UnauthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Unauthorized
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
  securitySchemes:
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: 'Add, modify, and delete service catalog definitions when those definitions are maintained by Datadog.'
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using the API.
            ci_visibility_read: View CI Visibility.
            create_webhooks: Create webhooks integrations.
            dashboards_public_share: Generate public and authenticated links to share dashboards or embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            events_read: Read Events data.
            incident_notification_settings_write: Configure Incidents Notification settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: 'Create, view, and manage incidents in Datadog.'
            metrics_read: View custom metrics.
            monitors_downtime: Set downtimes to suppress alerts from any monitor in an organization. Mute and unmute hosts. The ability to write monitors is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit and delete individual monitors.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: 'Create, edit, and delete Security Filters.'
            security_monitoring_findings_read: View CSPM Findings.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            slos_corrections: 'Apply, edit, and delete SLO status corrections. A user with this permission can make status corrections, even if they do not have permission to edit those SLOs.'
            slos_read: View SLOs and status corrections.
            slos_write: 'Create, edit, and delete SLOs.'
            synthetics_global_variable_read: 'View, search, and use Synthetics global variables.'
            synthetics_global_variable_write: 'Create, edit, and delete global variables for Synthetics.'
            synthetics_private_location_read: 'View, search, and use Synthetics private locations.'
            synthetics_private_location_write: Create and delete private locations in addition to having access to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: 'Create, edit, and delete Synthetic tests.'
            teams_manage: 'Manage Teams. Create, delete, rename, and edit metadata of all Teams. To control Team membership across all Teams, use the User Access Manage permission.'
            teams_read: 'Read Teams data. A User with this permission can view Team names, metadata, and which Users are on each Team.'
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: 'Disable users, manage user roles, manage SAML-to-role mappings, and configure logs restriction queries.'
            user_access_read: View users and their roles and settings.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    incidents:
      id: datadog.incidents.incidents
      name: incidents
      title: Incidents
      methods:
        list_incidents:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_incidents:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        search_incidents:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _search_incidents:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1search/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_incident:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_incident:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_incident:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incidents/methods/get_incident'
          - $ref: '#/components/x-stackQL-resources/incidents/methods/list_incidents'
          - $ref: '#/components/x-stackQL-resources/incidents/methods/search_incidents'
        insert:
          - $ref: '#/components/x-stackQL-resources/incidents/methods/create_incident'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/incidents/methods/delete_incident'
    incident_attachments:
      id: datadog.incidents.incident_attachments
      name: incident_attachments
      title: Incident Attachments
      methods:
        list_incident_attachments:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_incident_attachments:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1attachments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_attachments:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1attachments/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incident_attachments/methods/list_incident_attachments'
        insert: []
        update: []
        delete: []
    incident_integrations:
      id: datadog.incidents.incident_integrations
      name: incident_integrations
      title: Incident Integrations
      methods:
        list_incident_integrations:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_incident_integrations:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident_integration:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_incident_integration:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations~1{integration_metadata_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_incident_integration:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations~1{integration_metadata_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_incident_integration:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations~1{integration_metadata_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_integration:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1integrations~1{integration_metadata_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incident_integrations/methods/get_incident_integration'
          - $ref: '#/components/x-stackQL-resources/incident_integrations/methods/list_incident_integrations'
        insert:
          - $ref: '#/components/x-stackQL-resources/incident_integrations/methods/create_incident_integration'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/incident_integrations/methods/delete_incident_integration'
    incident_todos:
      id: datadog.incidents.incident_todos
      name: incident_todos
      title: Incident Todos
      methods:
        list_incident_todos:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_incident_todos:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident_todo:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_incident_todo:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos~1{todo_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_incident_todo:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos~1{todo_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_incident_todo:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos~1{todo_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_todo:
          operation:
            $ref: '#/paths/~1api~1v2~1incidents~1{incident_id}~1relationships~1todos~1{todo_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incident_todos/methods/get_incident_todo'
          - $ref: '#/components/x-stackQL-resources/incident_todos/methods/list_incident_todos'
        insert:
          - $ref: '#/components/x-stackQL-resources/incident_todos/methods/create_incident_todo'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/incident_todos/methods/delete_incident_todo'
    incident_services:
      id: datadog.incidents.incident_services
      name: incident_services
      title: Incident Services
      methods:
        list_incident_services:
          operation:
            $ref: '#/paths/~1api~1v2~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_incident_services:
          operation:
            $ref: '#/paths/~1api~1v2~1services/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident_service:
          operation:
            $ref: '#/paths/~1api~1v2~1services/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_incident_service:
          operation:
            $ref: '#/paths/~1api~1v2~1services~1{service_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_incident_service:
          operation:
            $ref: '#/paths/~1api~1v2~1services~1{service_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_incident_service:
          operation:
            $ref: '#/paths/~1api~1v2~1services~1{service_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_service:
          operation:
            $ref: '#/paths/~1api~1v2~1services~1{service_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incident_services/methods/get_incident_service'
          - $ref: '#/components/x-stackQL-resources/incident_services/methods/list_incident_services'
        insert:
          - $ref: '#/components/x-stackQL-resources/incident_services/methods/create_incident_service'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/incident_services/methods/delete_incident_service'
    incident_teams:
      id: datadog.incidents.incident_teams
      name: incident_teams
      title: Incident Teams
      methods:
        list_incident_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _list_incident_teams:
          operation:
            $ref: '#/paths/~1api~1v2~1teams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_incident_team:
          operation:
            $ref: '#/paths/~1api~1v2~1teams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_incident_team:
          operation:
            $ref: '#/paths/~1api~1v2~1teams~1{team_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_incident_team:
          operation:
            $ref: '#/paths/~1api~1v2~1teams~1{team_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        _get_incident_team:
          operation:
            $ref: '#/paths/~1api~1v2~1teams~1{team_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_incident_team:
          operation:
            $ref: '#/paths/~1api~1v2~1teams~1{team_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/incident_teams/methods/get_incident_team'
          - $ref: '#/components/x-stackQL-resources/incident_teams/methods/list_incident_teams'
        insert:
          - $ref: '#/components/x-stackQL-resources/incident_teams/methods/create_incident_team'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/incident_teams/methods/delete_incident_team'
paths:
  /api/v2/incidents:
    get:
      description: Get all incidents for the user's organization.
      operationId: ListIncidents
      parameters:
        - $ref: '#/components/parameters/IncidentIncludeQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of incidents
      tags:
        - Incidents
      x-pagination:
        limitParam: 'page[size]'
        pageOffsetParam: 'page[offset]'
        resultsPath: data
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident.
      operationId: CreateIncident
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentCreateRequest'
        description: Incident payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Create an incident
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/incidents/search:
    get:
      description: Search for incidents matching a certain query.
      operationId: SearchIncidents
      parameters:
        - $ref: '#/components/parameters/IncidentSearchIncludeQueryParameter'
        - $ref: '#/components/parameters/IncidentSearchQueryQueryParameter'
        - $ref: '#/components/parameters/IncidentSearchSortQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentSearchResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Search for incidents
      tags:
        - Incidents
      x-pagination:
        limitParam: 'page[size]'
        pageOffsetParam: 'page[offset]'
        resultsPath: data.attributes.incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/incidents/{incident_id}':
    delete:
      description: Deletes an existing incident from the users organization.
      operationId: DeleteIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Delete an existing incident
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: Get the details of an incident by `incident_id`.
      operationId: GetIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIncludeQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get the details of an incident
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Updates an incident. Provide only the attributes that should be updated as this request is a partial update.
      operationId: UpdateIncident
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIncludeQueryParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentUpdateRequest'
        description: Incident Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Update an existing incident
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/incidents/{incident_id}/attachments':
    get:
      description: Get all attachments for a given incident.
      operationId: ListIncidentAttachments
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentAttachmentIncludeQueryParameter'
        - $ref: '#/components/parameters/IncidentAttachmentFilterQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentAttachmentsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of attachments
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: 'The bulk update endpoint for creating, updating, and deleting attachments for a given incident.'
      operationId: UpdateIncidentAttachments
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentAttachmentIncludeQueryParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentAttachmentUpdateRequest'
        description: Incident Attachment Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentAttachmentUpdateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: 'Create, update, and delete incident attachments'
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/incidents/{incident_id}/relationships/integrations':
    get:
      description: Get all integration metadata for an incident.
      operationId: ListIncidentIntegrations
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of an incident's integration metadata
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident integration metadata.
      operationId: CreateIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentIntegrationMetadataCreateRequest'
        description: Incident integration metadata payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Create an incident integration metadata
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/incidents/{incident_id}/relationships/integrations/{integration_metadata_id}':
    delete:
      description: Delete an incident integration metadata.
      operationId: DeleteIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIntegrationMetadataIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Delete an incident integration metadata
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: Get incident integration metadata details.
      operationId: GetIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIntegrationMetadataIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get incident integration metadata details
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Update an existing incident integration metadata.
      operationId: UpdateIncidentIntegration
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentIntegrationMetadataIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentIntegrationMetadataPatchRequest'
        description: Incident integration metadata payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentIntegrationMetadataResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Update an existing incident integration metadata
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/incidents/{incident_id}/relationships/todos':
    get:
      description: Get all todos for an incident.
      operationId: ListIncidentTodos
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of an incident's todos
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Create an incident todo.
      operationId: CreateIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTodoCreateRequest'
        description: Incident todo payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Create an incident todo
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/incidents/{incident_id}/relationships/todos/{todo_id}':
    delete:
      description: Delete an incident todo.
      operationId: DeleteIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentTodoIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Delete an incident todo
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: Get incident todo details.
      operationId: GetIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentTodoIDPathParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get incident todo details
      tags:
        - Incidents
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Update an incident todo.
      operationId: UpdateIncidentTodo
      parameters:
        - $ref: '#/components/parameters/IncidentIDPathParameter'
        - $ref: '#/components/parameters/IncidentTodoIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTodoPatchRequest'
        description: Incident todo payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTodoResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_write
      summary: Update an incident todo
      tags:
        - Incidents
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/services:
    get:
      description: 'Get all incident services uploaded for the requesting user''s organization. If the `include[users]` query parameter is provided, the included attribute will contain the users related to these incident services.'
      operationId: ListIncidentServices
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIncludeQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/IncidentServiceSearchQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServicesResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of all incident services
      tags:
        - Incident Services
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Creates a new incident service.
      operationId: CreateIncidentService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentServiceCreateRequest'
        description: Incident Service Payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Create a new incident service
      tags:
        - Incident Services
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  '/api/v2/services/{service_id}':
    delete:
      description: Deletes an existing incident service.
      operationId: DeleteIncidentService
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Delete an existing incident service
      tags:
        - Incident Services
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: |-
        Get details of an incident service. If the `include[users]` query parameter is provided,
        the included attribute will contain the users related to these incident services.
      operationId: GetIncidentService
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIDPathParameter'
        - $ref: '#/components/parameters/IncidentServiceIncludeQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get details of an incident service
      tags:
        - Incident Services
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    patch:
      description: Updates an existing incident service. Only provide the attributes which should be updated as this request is a partial update.
      operationId: UpdateIncidentService
      parameters:
        - $ref: '#/components/parameters/IncidentServiceIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentServiceUpdateRequest'
        description: Incident Service Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentServiceResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Update an existing incident service
      tags:
        - Incident Services
      x-codegen-request-body-name: body
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/teams:
    get:
      deprecated: true
      description: 'Get all incident teams for the requesting user''s organization. If the `include[users]` query parameter is provided, the included attribute will contain the users related to these incident teams.'
      operationId: ListIncidentTeams
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIncludeQueryParameter'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/IncidentTeamSearchQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamsResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get a list of all incident teams
      tags:
        - Incident Teams
      x-unstable: '**Note**: This endpoint is deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/).'
    post:
      deprecated: true
      description: Creates a new incident team.
      operationId: CreateIncidentTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTeamCreateRequest'
        description: Incident Team Payload.
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: CREATED
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Create a new incident team
      tags:
        - Incident Teams
      x-codegen-request-body-name: body
      x-unstable: '**Note**: This endpoint is deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/).'
  '/api/v2/teams/{team_id}':
    delete:
      deprecated: true
      description: Deletes an existing incident team.
      operationId: DeleteIncidentTeam
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIDPathParameter'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Delete an existing incident team
      tags:
        - Incident Teams
      x-unstable: '**Note**: This endpoint is deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/).'
    get:
      deprecated: true
      description: |-
        Get details of an incident team. If the `include[users]` query parameter is provided,
        the included attribute will contain the users related to these incident teams.
      operationId: GetIncidentTeam
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIDPathParameter'
        - $ref: '#/components/parameters/IncidentTeamIncludeQueryParameter'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_read
      summary: Get details of an incident team
      tags:
        - Incident Teams
      x-unstable: '**Note**: This endpoint is deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/).'
    patch:
      deprecated: true
      description: Updates an existing incident team. Only provide the attributes which should be updated as this request is a partial update.
      operationId: UpdateIncidentTeam
      parameters:
        - $ref: '#/components/parameters/IncidentTeamIDPathParameter'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentTeamUpdateRequest'
        description: Incident Team Payload.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTeamResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - incident_settings_write
      summary: Update an existing incident team
      tags:
        - Incident Teams
      x-codegen-request-body-name: body
      x-unstable: '**Note**: This endpoint is deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/).'
