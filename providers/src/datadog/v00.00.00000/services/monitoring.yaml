openapi: 3.0.0
info:
  title: monitoring API
  description: datadog monitoring API
  version: '1.0'
paths:
  /api/v2/monitor/notification_rule:
    get:
      description: Returns a list of all monitor notification rules.
      operationId: GetMonitorNotificationRules
      parameters:
        - description: >-
            The page to start paginating from. If `page` is not specified, the
            argument defaults to the first page.
          in: query
          name: page
          required: false
          schema:
            format: int32
            maximum: 1000000
            minimum: 0
            type: integer
        - description: >-
            The number of rules to return per page. If `per_page` is not
            specified, the argument defaults to 100.
          in: query
          name: per_page
          required: false
          schema:
            format: int32
            maximum: 1000
            minimum: 1
            type: integer
        - description: >-
            String for sort order, composed of field and sort order separated by
            a colon, for example `name:asc`. Supported sort directions: `asc`,
            `desc`. Supported fields: `name`, `created_at`.
          in: query
          name: sort
          required: false
          schema:
            type: string
        - description: >-
            JSON-encoded filter object. Supported keys:

            * `text`: Free-text query matched against rule name, tags, and
            recipients.

            * `tags`: Array of strings. Return rules that have any of these
            tags.

            * `recipients`: Array of strings. Return rules that have any of
            these recipients.
          example: >-
            {"text":"error","tags":["env:prod","team:my-team"],"recipients":["slack-monitor-app","email@example.com"]}
          in: query
          name: filters
          required: false
          schema:
            type: string
        - description: >-
            Comma-separated list of resource paths for related resources to
            include in the response. Supported resource

            path is `created_by`.
          in: query
          name: include
          required: false
          schema:
            example: created_by
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get all monitor notification rules
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    post:
      description: Creates a monitor notification rule.
      operationId: CreateMonitorNotificationRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorNotificationRuleCreateRequest'
        description: Request body to create a monitor notification rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a monitor notification rule
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
  /api/v2/monitor/notification_rule/{rule_id}:
    delete:
      description: Deletes a monitor notification rule by `rule_id`.
      operationId: DeleteMonitorNotificationRule
      parameters:
        - description: ID of the monitor notification rule to delete.
          in: path
          name: rule_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a monitor notification rule
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
    get:
      description: Returns a monitor notification rule by `rule_id`.
      operationId: GetMonitorNotificationRule
      parameters:
        - description: ID of the monitor notification rule to fetch.
          in: path
          name: rule_id
          required: true
          schema:
            type: string
        - description: >-
            Comma-separated list of resource paths for related resources to
            include in the response. Supported resource

            path is `created_by`.
          in: query
          name: include
          required: false
          schema:
            example: created_by
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get a monitor notification rule
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    patch:
      description: Updates a monitor notification rule by `rule_id`.
      operationId: UpdateMonitorNotificationRule
      parameters:
        - description: ID of the monitor notification rule to update.
          in: path
          name: rule_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorNotificationRuleUpdateRequest'
        description: Request body to update the monitor notification rule.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorNotificationRuleResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a monitor notification rule
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
  /api/v2/monitor/policy:
    get:
      description: Get all monitor configuration policies.
      operationId: ListMonitorConfigPolicies
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyListResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get all monitor configuration policies
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    post:
      description: Create a monitor configuration policy.
      operationId: CreateMonitorConfigPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorConfigPolicyCreateRequest'
        description: Create a monitor configuration policy request body.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a monitor configuration policy
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
  /api/v2/monitor/policy/{policy_id}:
    delete:
      description: Delete a monitor configuration policy.
      operationId: DeleteMonitorConfigPolicy
      parameters:
        - description: ID of the monitor configuration policy.
          in: path
          name: policy_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a monitor configuration policy
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
    get:
      description: Get a monitor configuration policy by `policy_id`.
      operationId: GetMonitorConfigPolicy
      parameters:
        - description: ID of the monitor configuration policy.
          in: path
          name: policy_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get a monitor configuration policy
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
    patch:
      description: Edit a monitor configuration policy.
      operationId: UpdateMonitorConfigPolicy
      parameters:
        - description: ID of the monitor configuration policy.
          in: path
          name: policy_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorConfigPolicyEditRequest'
        description: Description of the update.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorConfigPolicyResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Edit a monitor configuration policy
      tags:
        - Monitors
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
  /api/v2/monitor/template:
    get:
      description: Retrieve all monitor user templates.
      operationId: ListMonitorUserTemplates
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorUserTemplateListResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get all monitor user templates
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    post:
      description: Create a new monitor user template.
      operationId: CreateMonitorUserTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorUserTemplateCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorUserTemplateCreateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a monitor user template
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/monitor/template/validate:
    post:
      description: Validate the structure and content of a monitor user template.
      operationId: ValidateMonitorUserTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorUserTemplateCreateRequest'
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Validate a monitor user template
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/monitor/template/{template_id}:
    delete:
      description: Delete an existing monitor user template by its ID.
      operationId: DeleteMonitorUserTemplate
      parameters:
        - description: ID of the monitor user template.
          in: path
          name: template_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a monitor user template
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    get:
      description: Retrieve a monitor user template by its ID.
      operationId: GetMonitorUserTemplate
      parameters:
        - description: ID of the monitor user template.
          in: path
          name: template_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
        - description: >-
            Whether to include all versions of the template in the response in
            the versions field.
          example: false
          in: query
          name: with_all_versions
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorUserTemplateResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_read
      summary: Get a monitor user template
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitors_read
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
    put:
      description: Creates a new version of an existing monitor user template.
      operationId: UpdateMonitorUserTemplate
      parameters:
        - description: ID of the monitor user template.
          in: path
          name: template_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorUserTemplateUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorUserTemplateResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a monitor user template to a new version
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/monitor/template/{template_id}/validate:
    post:
      description: >-
        Validate the structure and content of an existing monitor user template
        being updated to a new version.
      operationId: ValidateExistingMonitorUserTemplate
      parameters:
        - description: ID of the monitor user template.
          in: path
          name: template_id
          required: true
          schema:
            example: 00000000-0000-1234-0000-000000000000
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorUserTemplateUpdateRequest'
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not Found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Validate an existing monitor user template
      tags:
        - Monitors
      x-permission:
        operator: OR
        permissions:
          - monitor_config_policy_write
      x-unstable: |-
        **Note**: This endpoint is in Preview. If you have any feedback,
        contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/monitor/{monitor_id}/downtime_matches:
    get:
      description: Get all active downtimes for the specified monitor.
      operationId: ListMonitorDowntimes
      parameters:
        - description: The id of the monitor.
          in: path
          name: monitor_id
          required: true
          schema:
            format: int64
            type: integer
        - $ref: '#/components/parameters/PageOffset'
        - description: Maximum number of downtimes in the response.
          example: 100
          in: query
          name: page[limit]
          required: false
          schema:
            default: 30
            format: int64
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorDowntimeMatchResponse'
          description: OK
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Monitor Not Found error
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - monitors_downtime
      summary: Get active downtimes for a monitor
      tags:
        - Downtimes
      x-codegen-request-body-name: body
      x-pagination:
        limitParam: page[limit]
        pageOffsetParam: page[offset]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - monitors_downtime
  /api/v2/synthetics/settings/on_demand_concurrency_cap:
    get:
      description: Get the on-demand concurrency cap.
      operationId: GetOnDemandConcurrencyCap
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnDemandConcurrencyCapResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get the on-demand concurrency cap
      tags:
        - Synthetics
      x-permission:
        operator: OR
        permissions:
          - billing_read
    post:
      description: Save new value for on-demand concurrency cap.
      operationId: SetOnDemandConcurrencyCap
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnDemandConcurrencyCapAttributes'
        description: .
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnDemandConcurrencyCapResponse'
          description: OK
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Save new value for on-demand concurrency cap
      tags:
        - Synthetics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - billing_edit
components:
  schemas:
    MonitorNotificationRuleListResponse:
      description: Response for retrieving all monitor notification rules.
      properties:
        data:
          description: A list of monitor notification rules.
          items:
            $ref: '#/components/schemas/MonitorNotificationRuleData'
          type: array
        included:
          description: Array of objects related to the monitor notification rules.
          items:
            $ref: '#/components/schemas/MonitorNotificationRuleResponseIncludedItem'
          type: array
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    MonitorNotificationRuleCreateRequest:
      description: Request for creating a monitor notification rule.
      properties:
        data:
          $ref: '#/components/schemas/MonitorNotificationRuleCreateRequestData'
      required:
        - data
      type: object
    MonitorNotificationRuleResponse:
      description: A monitor notification rule.
      properties:
        data:
          $ref: '#/components/schemas/MonitorNotificationRuleData'
        included:
          description: >-
            Array of objects related to the monitor notification rule that the
            user requested.
          items:
            $ref: '#/components/schemas/MonitorNotificationRuleResponseIncludedItem'
          type: array
      type: object
    MonitorNotificationRuleUpdateRequest:
      description: Request for updating a monitor notification rule.
      properties:
        data:
          $ref: '#/components/schemas/MonitorNotificationRuleUpdateRequestData'
      required:
        - data
      type: object
    MonitorConfigPolicyListResponse:
      description: Response for retrieving all monitor configuration policies.
      properties:
        data:
          description: An array of monitor configuration policies.
          items:
            $ref: '#/components/schemas/MonitorConfigPolicyResponseData'
          type: array
      type: object
    MonitorConfigPolicyCreateRequest:
      description: Request for creating a monitor configuration policy.
      properties:
        data:
          $ref: '#/components/schemas/MonitorConfigPolicyCreateData'
      required:
        - data
      type: object
    MonitorConfigPolicyResponse:
      description: Response for retrieving a monitor configuration policy.
      properties:
        data:
          $ref: '#/components/schemas/MonitorConfigPolicyResponseData'
      type: object
    MonitorConfigPolicyEditRequest:
      description: Request for editing a monitor configuration policy.
      properties:
        data:
          $ref: '#/components/schemas/MonitorConfigPolicyEditData'
      required:
        - data
      type: object
    MonitorUserTemplateListResponse:
      description: Response for retrieving all monitor user templates.
      properties:
        data:
          description: An array of monitor user templates.
          items:
            $ref: '#/components/schemas/MonitorUserTemplateResponseData'
          type: array
      type: object
    MonitorUserTemplateCreateRequest:
      description: Request for creating a monitor user template.
      properties:
        data:
          $ref: '#/components/schemas/MonitorUserTemplateCreateData'
      required:
        - data
      type: object
    MonitorUserTemplateCreateResponse:
      description: Response for creating a monitor user template.
      properties:
        data:
          $ref: '#/components/schemas/MonitorUserTemplateResponseData'
      type: object
    MonitorUserTemplateResponse:
      description: Response for retrieving a monitor user template.
      properties:
        data:
          $ref: '#/components/schemas/MonitorUserTemplateResponseDataWithVersions'
      type: object
    MonitorUserTemplateUpdateRequest:
      description: Request for creating a new monitor user template version.
      properties:
        data:
          $ref: '#/components/schemas/MonitorUserTemplateUpdateData'
      required:
        - data
      type: object
    MonitorDowntimeMatchResponse:
      description: Response for retrieving all downtime matches for a monitor.
      properties:
        data:
          description: An array of downtime matches.
          items:
            $ref: '#/components/schemas/MonitorDowntimeMatchResponseData'
          type: array
        meta:
          $ref: '#/components/schemas/DowntimeMeta'
      type: object
    OnDemandConcurrencyCapResponse:
      description: On-demand concurrency cap response.
      properties:
        data:
          $ref: '#/components/schemas/OnDemandConcurrencyCap'
      type: object
    OnDemandConcurrencyCapAttributes:
      description: On-demand concurrency cap attributes.
      properties:
        on_demand_concurrency_cap:
          description: Value of the on-demand concurrency cap.
          format: double
          type: number
      type: object
    MonitorNotificationRuleData:
      description: Monitor notification rule data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorNotificationRuleResponseAttributes'
        id:
          $ref: '#/components/schemas/MonitorNotificationRuleId'
        relationships:
          $ref: '#/components/schemas/MonitorNotificationRuleRelationships'
        type:
          $ref: '#/components/schemas/MonitorNotificationRuleResourceType'
      type: object
    MonitorNotificationRuleResponseIncludedItem:
      description: An object related to a monitor notification rule.
      oneOf:
        - $ref: '#/components/schemas/User'
    MonitorNotificationRuleCreateRequestData:
      description: Object to create a monitor notification rule.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorNotificationRuleAttributes'
        type:
          $ref: '#/components/schemas/MonitorNotificationRuleResourceType'
      required:
        - attributes
      type: object
    MonitorNotificationRuleUpdateRequestData:
      description: Object to update a monitor notification rule.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorNotificationRuleAttributes'
        id:
          $ref: '#/components/schemas/MonitorNotificationRuleId'
        type:
          $ref: '#/components/schemas/MonitorNotificationRuleResourceType'
      required:
        - id
        - attributes
      type: object
    MonitorConfigPolicyResponseData:
      description: A monitor configuration policy data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorConfigPolicyAttributeResponse'
        id:
          description: ID of this monitor configuration policy.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/MonitorConfigPolicyResourceType'
      type: object
    MonitorConfigPolicyCreateData:
      description: A monitor configuration policy data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorConfigPolicyAttributeCreateRequest'
        type:
          $ref: '#/components/schemas/MonitorConfigPolicyResourceType'
      required:
        - type
        - attributes
      type: object
    MonitorConfigPolicyEditData:
      description: A monitor configuration policy data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorConfigPolicyAttributeEditRequest'
        id:
          description: ID of this monitor configuration policy.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/MonitorConfigPolicyResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    MonitorUserTemplateResponseData:
      description: Monitor user template list response data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorUserTemplateResponseAttributes'
        id:
          $ref: '#/components/schemas/MonitorUserTemplateId'
        type:
          $ref: '#/components/schemas/MonitorUserTemplateResourceType'
      type: object
    MonitorUserTemplateCreateData:
      description: Monitor user template data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorUserTemplateRequestAttributes'
        type:
          $ref: '#/components/schemas/MonitorUserTemplateResourceType'
      required:
        - type
        - attributes
      type: object
    MonitorUserTemplateResponseDataWithVersions:
      description: Monitor user template data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorUserTemplate'
        id:
          $ref: '#/components/schemas/MonitorUserTemplateId'
        type:
          $ref: '#/components/schemas/MonitorUserTemplateResourceType'
      type: object
    MonitorUserTemplateUpdateData:
      description: Monitor user template data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorUserTemplateRequestAttributes'
        id:
          $ref: '#/components/schemas/MonitorUserTemplateId'
        type:
          $ref: '#/components/schemas/MonitorUserTemplateResourceType'
      required:
        - id
        - type
        - attributes
      type: object
    MonitorDowntimeMatchResponseData:
      description: A downtime match.
      properties:
        attributes:
          $ref: '#/components/schemas/MonitorDowntimeMatchResponseAttributes'
        id:
          description: The downtime ID.
          example: 00000000-0000-1234-0000-000000000000
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/MonitorDowntimeMatchResourceType'
      type: object
    DowntimeMeta:
      description: Pagination metadata returned by the API.
      properties:
        page:
          $ref: '#/components/schemas/DowntimeMetaPage'
      type: object
    OnDemandConcurrencyCap:
      description: On-demand concurrency cap.
      properties:
        attributes:
          $ref: '#/components/schemas/OnDemandConcurrencyCapAttributes'
        type:
          $ref: '#/components/schemas/OnDemandConcurrencyCapType'
      type: object
    MonitorNotificationRuleResponseAttributes:
      additionalProperties: {}
      description: Attributes of the monitor notification rule.
      properties:
        created:
          description: Creation time of the monitor notification rule.
          example: '2020-01-02T03:04:00.000Z'
          format: date-time
          type: string
        filter:
          $ref: '#/components/schemas/MonitorNotificationRuleFilter'
        modified:
          description: Time the monitor notification rule was last modified.
          example: '2020-01-02T03:04:00.000Z'
          format: date-time
          type: string
        name:
          $ref: '#/components/schemas/MonitorNotificationRuleName'
        recipients:
          $ref: '#/components/schemas/MonitorNotificationRuleRecipients'
      type: object
    MonitorNotificationRuleId:
      description: The ID of the monitor notification rule.
      example: 00000000-0000-1234-0000-000000000000
      type: string
    MonitorNotificationRuleRelationships:
      description: All relationships associated with monitor notification rule.
      properties:
        created_by:
          $ref: '#/components/schemas/MonitorNotificationRuleRelationshipsCreatedBy'
      type: object
    MonitorNotificationRuleResourceType:
      default: monitor-notification-rule
      description: Monitor notification rule resource type.
      enum:
        - monitor-notification-rule
      example: monitor-notification-rule
      type: string
      x-enum-varnames:
        - MONITOR_NOTIFICATION_RULE
    User:
      description: User object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        id:
          description: ID of the user.
          type: string
        relationships:
          $ref: '#/components/schemas/UserResponseRelationships'
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    MonitorNotificationRuleAttributes:
      additionalProperties: false
      description: Attributes of the monitor notification rule.
      properties:
        filter:
          $ref: '#/components/schemas/MonitorNotificationRuleFilter'
        name:
          $ref: '#/components/schemas/MonitorNotificationRuleName'
        recipients:
          $ref: '#/components/schemas/MonitorNotificationRuleRecipients'
      required:
        - name
        - recipients
      type: object
    MonitorConfigPolicyAttributeResponse:
      description: Policy and policy type for a monitor configuration policy.
      properties:
        policy:
          $ref: '#/components/schemas/MonitorConfigPolicyPolicy'
        policy_type:
          $ref: '#/components/schemas/MonitorConfigPolicyType'
      type: object
    MonitorConfigPolicyResourceType:
      default: monitor-config-policy
      description: Monitor configuration policy resource type.
      enum:
        - monitor-config-policy
      example: monitor-config-policy
      type: string
      x-enum-varnames:
        - MONITOR_CONFIG_POLICY
    MonitorConfigPolicyAttributeCreateRequest:
      description: Policy and policy type for a monitor configuration policy.
      properties:
        policy:
          $ref: '#/components/schemas/MonitorConfigPolicyPolicyCreateRequest'
        policy_type:
          $ref: '#/components/schemas/MonitorConfigPolicyType'
      required:
        - policy_type
        - policy
      type: object
    MonitorConfigPolicyAttributeEditRequest:
      description: Policy and policy type for a monitor configuration policy.
      properties:
        policy:
          $ref: '#/components/schemas/MonitorConfigPolicyPolicy'
        policy_type:
          $ref: '#/components/schemas/MonitorConfigPolicyType'
      required:
        - policy_type
        - policy
      type: object
    MonitorUserTemplateResponseAttributes:
      additionalProperties: {}
      description: Attributes for a monitor user template.
      properties:
        created:
          $ref: '#/components/schemas/MonitorUserTemplateCreated'
        description:
          $ref: '#/components/schemas/MonitorUserTemplateDescription'
        modified:
          $ref: '#/components/schemas/MonitorUserTemplateModified'
        monitor_definition:
          additionalProperties: {}
          description: >-
            A valid monitor definition in the same format as the [V1 Monitor
            API](https://docs.datadoghq.com/api/latest/monitors/#create-a-monitor).
          example:
            message: You may need to add web hosts if this is consistently high.
            name: Bytes received on host0
            query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
            type: query alert
          type: object
        tags:
          $ref: '#/components/schemas/MonitorUserTemplateTags'
        template_variables:
          $ref: '#/components/schemas/MonitorUserTemplateTemplateVariables'
        title:
          $ref: '#/components/schemas/MonitorUserTemplateTitle'
        version:
          $ref: '#/components/schemas/MonitorUserTemplateVersion'
      type: object
    MonitorUserTemplateId:
      description: The unique identifier.
      example: 00000000-0000-1234-0000-000000000000
      type: string
    MonitorUserTemplateResourceType:
      default: monitor-user-template
      description: Monitor user template resource type.
      enum:
        - monitor-user-template
      example: monitor-user-template
      type: string
      x-enum-varnames:
        - MONITOR_USER_TEMPLATE
    MonitorUserTemplateRequestAttributes:
      additionalProperties: false
      description: Attributes for a monitor user template.
      properties:
        description:
          $ref: '#/components/schemas/MonitorUserTemplateDescription'
        monitor_definition:
          additionalProperties: {}
          description: >-
            A valid monitor definition in the same format as the [V1 Monitor
            API](https://docs.datadoghq.com/api/latest/monitors/#create-a-monitor).
          example:
            message: You may need to add web hosts if this is consistently high.
            name: Bytes received on host0
            query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
            type: query alert
          type: object
        tags:
          $ref: '#/components/schemas/MonitorUserTemplateTags'
        template_variables:
          $ref: '#/components/schemas/MonitorUserTemplateTemplateVariables'
        title:
          $ref: '#/components/schemas/MonitorUserTemplateTitle'
      required:
        - title
        - monitor_definition
        - tags
      type: object
    MonitorUserTemplate:
      additionalProperties: {}
      description: A monitor user template object.
      properties:
        created:
          $ref: '#/components/schemas/MonitorUserTemplateCreated'
        description:
          $ref: '#/components/schemas/MonitorUserTemplateDescription'
        modified:
          $ref: '#/components/schemas/MonitorUserTemplateModified'
        monitor_definition:
          additionalProperties: {}
          description: >-
            A valid monitor definition in the same format as the [V1 Monitor
            API](https://docs.datadoghq.com/api/latest/monitors/#create-a-monitor).
          example:
            message: You may need to add web hosts if this is consistently high.
            name: Bytes received on host0
            query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
            type: query alert
          type: object
        tags:
          $ref: '#/components/schemas/MonitorUserTemplateTags'
        template_variables:
          $ref: '#/components/schemas/MonitorUserTemplateTemplateVariables'
        title:
          $ref: '#/components/schemas/MonitorUserTemplateTitle'
        version:
          $ref: '#/components/schemas/MonitorUserTemplateVersion'
        versions:
          description: All versions of the monitor user template.
          items:
            $ref: '#/components/schemas/SimpleMonitorUserTemplate'
          type: array
      type: object
    MonitorDowntimeMatchResponseAttributes:
      description: Downtime match details.
      properties:
        end:
          description: The end of the downtime.
          example: '2020-01-02T03:04:00.000Z'
          format: date-time
          nullable: true
          type: string
        groups:
          description: An array of groups associated with the downtime.
          example:
            - service:postgres
            - team:frontend
          items:
            description: An array of groups.
            example: service:postgres
            type: string
          type: array
        scope:
          $ref: '#/components/schemas/DowntimeScope'
        start:
          description: The start of the downtime.
          example: '2020-01-02T03:04:00.000Z'
          format: date-time
          type: string
      type: object
    MonitorDowntimeMatchResourceType:
      default: downtime_match
      description: Monitor Downtime Match resource type.
      enum:
        - downtime_match
      example: downtime_match
      type: string
      x-enum-varnames:
        - DOWNTIME_MATCH
    DowntimeMetaPage:
      description: Object containing the total filtered count.
      properties:
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    OnDemandConcurrencyCapType:
      description: On-demand concurrency cap type.
      enum:
        - on_demand_concurrency_cap
      type: string
      x-enum-varnames:
        - ON_DEMAND_CONCURRENCY_CAP
    MonitorNotificationRuleFilter:
      description: Filter used to associate the notification rule with monitors.
      oneOf:
        - $ref: '#/components/schemas/MonitorNotificationRuleFilterTags'
    MonitorNotificationRuleName:
      description: The name of the monitor notification rule.
      example: A notification rule name
      maxLength: 1000
      minLength: 1
      type: string
    MonitorNotificationRuleRecipients:
      description: >-
        A list of recipients to notify. Uses the same format as the monitor
        `message` field. Must not start with an '@'.
      example:
        - slack-test-channel
        - jira-test
      items:
        description: individual recipient.
        maxLength: 255
        type: string
      maxItems: 20
      minItems: 1
      type: array
      uniqueItems: true
    MonitorNotificationRuleRelationshipsCreatedBy:
      description: The user who created the monitor notification rule.
      properties:
        data:
          $ref: >-
            #/components/schemas/MonitorNotificationRuleRelationshipsCreatedByData
      type: object
    UserAttributes:
      description: Attributes of user object returned by the API.
      properties:
        created_at:
          description: Creation time of the user.
          format: date-time
          type: string
        disabled:
          description: Whether the user is disabled.
          type: boolean
        email:
          description: Email of the user.
          type: string
        handle:
          description: Handle of the user.
          type: string
        icon:
          description: URL of the user's icon.
          type: string
        mfa_enabled:
          description: If user has MFA enabled.
          readOnly: true
          type: boolean
        modified_at:
          description: Time that the user was last modified.
          format: date-time
          type: string
        name:
          description: Name of the user.
          nullable: true
          type: string
        service_account:
          description: Whether the user is a service account.
          type: boolean
        status:
          description: Status of the user.
          type: string
        title:
          description: Title of the user.
          nullable: true
          type: string
        verified:
          description: Whether the user is verified.
          type: boolean
      type: object
    UserResponseRelationships:
      description: Relationships of the user object returned by the API.
      properties:
        org:
          $ref: '#/components/schemas/RelationshipToOrganization'
        other_orgs:
          $ref: '#/components/schemas/RelationshipToOrganizations'
        other_users:
          $ref: '#/components/schemas/RelationshipToUsers'
        roles:
          $ref: '#/components/schemas/RelationshipToRoles'
      type: object
    UsersType:
      default: users
      description: Users resource type.
      enum:
        - users
      example: users
      type: string
      x-enum-varnames:
        - USERS
    MonitorConfigPolicyPolicy:
      description: Configuration for the policy.
      oneOf:
        - $ref: '#/components/schemas/MonitorConfigPolicyTagPolicy'
    MonitorConfigPolicyType:
      default: tag
      description: The monitor configuration policy type.
      enum:
        - tag
      example: tag
      type: string
      x-enum-varnames:
        - TAG
    MonitorConfigPolicyPolicyCreateRequest:
      description: Configuration for the policy.
      oneOf:
        - $ref: '#/components/schemas/MonitorConfigPolicyTagPolicyCreateRequest'
    MonitorUserTemplateCreated:
      description: The created timestamp of the template.
      example: '2024-01-02T03:04:23.274966+00:00'
      format: date-time
      readOnly: true
      type: string
    MonitorUserTemplateDescription:
      description: A brief description of the monitor user template.
      example: This is a template for monitoring user activity.
      nullable: true
      type: string
    MonitorUserTemplateModified:
      description: The last modified timestamp. When the template version was created.
      example: '2024-02-02T03:04:23.274966+00:00'
      format: date-time
      readOnly: true
      type: string
    MonitorUserTemplateTags:
      description: The definition of `MonitorUserTemplateTags` object.
      example:
        - product:Our Custom App
        - integration:Azure
      items:
        description: >-
          Tags associated with the monitor user template. Must be key value.
          Only 'product' and 'integration' keys are

          allowed. The value is the name of the category to display the template
          under. Integrations can be filtered out in the UI.

          (Review note: This modeling of 'categories' is subject to change.)
        example: us-east1
        minLength: 1
        type: string
        uniqueItems: true
      type: array
    MonitorUserTemplateTemplateVariables:
      description: The definition of `MonitorUserTemplateTemplateVariables` object.
      items:
        $ref: '#/components/schemas/MonitorUserTemplateTemplateVariablesItems'
      type: array
    MonitorUserTemplateTitle:
      description: The title of the monitor user template.
      example: Postgres CPU Monitor
      type: string
    MonitorUserTemplateVersion:
      description: The version of the monitor user template.
      example: 0
      format: int64
      nullable: true
      readOnly: true
      type: integer
    SimpleMonitorUserTemplate:
      description: A simplified version of a monitor user template.
      properties:
        created:
          $ref: '#/components/schemas/MonitorUserTemplateCreated'
        description:
          $ref: '#/components/schemas/MonitorUserTemplateDescription'
        id:
          description: >-
            The unique identifier. The initial version will match the template
            ID.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        monitor_definition:
          additionalProperties: {}
          description: >-
            A valid monitor definition in the same format as the [V1 Monitor
            API](https://docs.datadoghq.com/api/latest/monitors/#create-a-monitor).
          example:
            message: You may need to add web hosts if this is consistently high.
            name: Bytes received on host0
            query: avg(last_5m):sum:system.net.bytes_rcvd{host:host0} > 100
            type: query alert
          type: object
        tags:
          $ref: '#/components/schemas/MonitorUserTemplateTags'
        template_variables:
          $ref: '#/components/schemas/MonitorUserTemplateTemplateVariables'
        title:
          $ref: '#/components/schemas/MonitorUserTemplateTitle'
        version:
          $ref: '#/components/schemas/MonitorUserTemplateVersion'
      type: object
    DowntimeScope:
      description: >-
        The scope to which the downtime applies. Must follow the [common search
        syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).
      example: env:(staging OR prod) AND datacenter:us-east-1
      type: string
    MonitorNotificationRuleFilterTags:
      additionalProperties: false
      description: Filter monitors by tags. Monitors must match all tags.
      properties:
        tags:
          description: A list of monitor tags.
          example:
            - team:product
            - host:abc
          items:
            maxLength: 255
            type: string
          maxItems: 20
          minItems: 1
          type: array
          uniqueItems: true
      required:
        - tags
      type: object
    MonitorNotificationRuleRelationshipsCreatedByData:
      description: Data for the user who created the monitor notification rule.
      nullable: true
      properties:
        id:
          description: User ID of the monitor notification rule creator.
          example: 00000000-0000-1234-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      type: object
    RelationshipToOrganization:
      description: Relationship to an organization.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToOrganizationData'
      required:
        - data
      type: object
    RelationshipToOrganizations:
      description: Relationship to organizations.
      properties:
        data:
          description: Relationships to organization objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToOrganizationData'
          type: array
      required:
        - data
      type: object
    RelationshipToUsers:
      description: Relationship to users.
      properties:
        data:
          description: Relationships to user objects.
          example: []
          items:
            $ref: '#/components/schemas/RelationshipToUserData'
          type: array
      required:
        - data
      type: object
    RelationshipToRoles:
      description: Relationship to roles.
      properties:
        data:
          description: An array containing type and the unique identifier of a role.
          items:
            $ref: '#/components/schemas/RelationshipToRoleData'
          type: array
      type: object
    MonitorConfigPolicyTagPolicy:
      description: Tag attributes of a monitor configuration policy.
      properties:
        tag_key:
          description: The key of the tag.
          example: datacenter
          maxLength: 255
          type: string
        tag_key_required:
          description: If a tag key is required for monitor creation.
          example: true
          type: boolean
        valid_tag_values:
          description: Valid values for the tag.
          example:
            - prod
            - staging
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    MonitorConfigPolicyTagPolicyCreateRequest:
      description: Tag attributes of a monitor configuration policy.
      properties:
        tag_key:
          description: The key of the tag.
          example: datacenter
          maxLength: 255
          type: string
        tag_key_required:
          description: If a tag key is required for monitor creation.
          example: true
          type: boolean
        valid_tag_values:
          description: Valid values for the tag.
          example:
            - prod
            - staging
          items:
            maxLength: 255
            type: string
          type: array
      required:
        - tag_key
        - tag_key_required
        - valid_tag_values
      type: object
    MonitorUserTemplateTemplateVariablesItems:
      additionalProperties: false
      description: >-
        List of objects representing template variables on the monitor which can
        have selectable values.
      properties:
        available_values:
          description: Available values for the variable.
          example:
            - value1
            - value2
          items:
            minLength: 1
            type: string
            uniqueItems: true
          type: array
        defaults:
          description: Default values of the template variable.
          example:
            - defaultValue
          items:
            minLength: 0
            type: string
            uniqueItems: true
          type: array
        name:
          description: The name of the template variable.
          example: regionName
          type: string
        tag_key:
          description: >-
            The tag key associated with the variable. This works the same as
            dashboard template variables.
          example: datacenter
          type: string
      required:
        - name
      type: object
    RelationshipToOrganizationData:
      description: Relationship to organization object.
      properties:
        id:
          description: ID of the organization.
          example: 00000000-0000-beef-0000-000000000000
          type: string
        type:
          $ref: '#/components/schemas/OrganizationsType'
      required:
        - id
        - type
      type: object
    RelationshipToUserData:
      description: Relationship to user object.
      properties:
        id:
          description: A unique identifier that represents the user.
          example: 00000000-0000-0000-2345-000000000000
          type: string
        type:
          $ref: '#/components/schemas/UsersType'
      required:
        - id
        - type
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    OrganizationsType:
      default: orgs
      description: Organizations resource type.
      enum:
        - orgs
      example: orgs
      type: string
      x-enum-varnames:
        - ORGS
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
  responses:
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
  parameters:
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: page[offset]
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
  x-stackQL-resources:
    notification_rules:
      id: datadog.monitoring.notification_rules
      name: notification_rules
      title: Notification Rules
      methods:
        get_monitor_notification_rules:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1notification_rule/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_monitor_notification_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1notification_rule/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_monitor_notification_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1notification_rule~1{rule_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_monitor_notification_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1notification_rule~1{rule_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_monitor_notification_rule:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1notification_rule~1{rule_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/notification_rules/methods/get_monitor_notification_rule
          - $ref: >-
              #/components/x-stackQL-resources/notification_rules/methods/get_monitor_notification_rules
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/notification_rules/methods/create_monitor_notification_rule
        update:
          - $ref: >-
              #/components/x-stackQL-resources/notification_rules/methods/update_monitor_notification_rule
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/notification_rules/methods/delete_monitor_notification_rule
        replace: []
    config_policies:
      id: datadog.monitoring.config_policies
      name: config_policies
      title: Config Policies
      methods:
        list_monitor_config_policies:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1policy/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_monitor_config_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1policy/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_monitor_config_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1policy~1{policy_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_monitor_config_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1policy~1{policy_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_monitor_config_policy:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1policy~1{policy_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/config_policies/methods/get_monitor_config_policy
          - $ref: >-
              #/components/x-stackQL-resources/config_policies/methods/list_monitor_config_policies
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/config_policies/methods/create_monitor_config_policy
        update:
          - $ref: >-
              #/components/x-stackQL-resources/config_policies/methods/update_monitor_config_policy
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/config_policies/methods/delete_monitor_config_policy
        replace: []
    user_templates:
      id: datadog.monitoring.user_templates
      name: user_templates
      title: User Templates
      methods:
        list_monitor_user_templates:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_monitor_user_template:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_monitor_user_template:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template~1validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        delete_monitor_user_template:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template~1{template_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_monitor_user_template:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template~1{template_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_monitor_user_template:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template~1{template_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        validate_existing_monitor_user_template:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1template~1{template_id}~1validate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_templates/methods/get_monitor_user_template
          - $ref: >-
              #/components/x-stackQL-resources/user_templates/methods/list_monitor_user_templates
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/user_templates/methods/create_monitor_user_template
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/user_templates/methods/delete_monitor_user_template
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/user_templates/methods/update_monitor_user_template
    downtimes:
      id: datadog.monitoring.downtimes
      name: downtimes
      title: Downtimes
      methods:
        list_monitor_downtimes:
          operation:
            $ref: '#/paths/~1api~1v2~1monitor~1{monitor_id}~1downtime_matches/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/downtimes/methods/list_monitor_downtimes
        insert: []
        update: []
        delete: []
        replace: []
    on_demand_concurrency_cap:
      id: datadog.monitoring.on_demand_concurrency_cap
      name: on_demand_concurrency_cap
      title: On Demand Concurrency Cap
      methods:
        get_on_demand_concurrency_cap:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1synthetics~1settings~1on_demand_concurrency_cap/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        set_on_demand_concurrency_cap:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1synthetics~1settings~1on_demand_concurrency_cap/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/on_demand_concurrency_cap/methods/get_on_demand_concurrency_cap
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/on_demand_concurrency_cap/methods/set_on_demand_concurrency_cap
        update: []
        delete: []
        replace: []
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
