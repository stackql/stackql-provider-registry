openapi: 3.0.0
servers:
  - url: 'https://api.datadoghq.com'
    description: Datadog API
info:
  contact:
    email: support@datadoghq.com
    name: Datadog Support
    url: 'https://www.datadoghq.com/support/'
  version: '1.0'
  title: Datadog API V2 Collection - usage_metering
  description: Usage_Metering
security:
  - apiKeyAuth: []
    appKeyAuth: []
tags:
  - description: 'Manage configuration of [APM retention filters](https://app.datadoghq.com/apm/traces/retention-filters) for your organization. You need an API and application key with Admin rights to interact with this endpoint.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/trace_pipeline/trace_retention/'
    name: APM Retention Filters
  - description: Search your Audit Logs events over HTTP.
    name: Audit
  - description: |-
      [AuthN Mappings API](https://docs.datadoghq.com/account_management/authn_mapping/?tab=example)
      is used to automatically map group of users to roles in Datadog using attributes
      sent from Identity Providers.
    name: AuthN Mappings
  - description: Search or aggregate your CI Visibility pipeline events and send them to your Datadog site over HTTP.
    name: CI Visibility Pipelines
  - description: Search or aggregate your CI Visibility test events over HTTP.
    name: CI Visibility Tests
  - description: Workload activity security rules for generating events using the Datadog security Agent.
    name: Cloud Workload Security
  - description: Configure your Datadog Cloudflare integration directly through the Datadog API.
    name: Cloudflare Integration
  - description: Configure your Datadog Confluent Cloud integration directly through the Datadog API.
    name: Confluent Cloud
  - description: The Container Images API allows you to query Container Image data for your organization.
    name: Container Images
  - description: The Containers API allows you to query container data for your organization.
    name: Containers
  - description: Send events for DORA Metrics to measure and improve software delivery.
    name: DORA Metrics
  - description: |-
      Interact with your dashboard lists through the API to
      organize, find, and share all of your dashboards with your team and
      organization.
    name: Dashboard Lists
  - description: |-
      **Note**: Downtime V2 is currently in private beta. To request access, contact [Datadog support](https://docs.datadoghq.com/help/).

      [Downtiming](https://docs.datadoghq.com/monitors/notify/downtimes) gives
      you greater control over monitor notifications by allowing you to globally exclude
      scopes from alerting. Downtime settings, which can be scheduled with start and
      end times, prevent all alerting related to specified Datadog tags.
    name: Downtimes
  - description: |-
      The events service allows you to programmatically post events to the event stream
      and fetch events from the event stream. Events are limited to 4000 characters.
      If an event is sent out with a message containing more than 4000 characters, only the
      first 4000 characters are displayed.
    name: Events
  - description: Configure your Datadog Fastly integration directly through the Datadog API.
    name: Fastly Integration
  - description: |-
      Configure your Datadog-Google Cloud Platform (GCP) integration directly
      through the Datadog API. Read more about the [Datadog-Google Cloud Platform integration](https://docs.datadoghq.com/integrations/google_cloud_platform).
    externalDocs:
      url: 'https://docs.datadoghq.com/integrations/google_cloud_platform'
    name: GCP Integration
  - description: |-
      The IP allowlist API is used to manage the IP addresses that
      can access the Datadog API and web UI. It does not block
      access to intake APIs or public dashboards.

      This is an enterprise-only feature. Request access by
      contacting Datadog support.
    name: IP Allowlist
  - description: 'Create, update, delete, and retrieve services which can be associated with incidents.'
    name: Incident Services
  - description: 'The Incident Teams endpoints are deprecated. See the [Teams API endpoints](https://docs.datadoghq.com/api/latest/teams/) to create, update, delete, and retrieve teams which can be associated with incidents.'
    name: Incident Teams
  - description: Manage incident response.
    name: Incidents
  - description: |-
      Manage your Datadog API and application keys. You need an API key and
      an application key for a user with the required permissions to interact
      with these endpoints. The full list of API and application keys can be
      seen on your [Datadog API page](https://app.datadoghq.com/account/settings#api).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/api-app-keys/'
    name: Key Management
  - description: Search your logs and send them to your Datadog platform over HTTP.
    name: Logs
  - description: |-
      Archives forward all the logs ingested to a cloud storage system.

      See the [Archives Page](https://app.datadoghq.com/logs/pipelines/archives)
      for a list of the archives currently configured in web UI.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/archives/'
    name: Logs Archives
  - description: 'Manage configuration of [log-based metrics](https://app.datadoghq.com/logs/pipelines/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/logs/logs_to_metrics/'
    name: Logs Metrics
  - description: |-
      The metrics endpoint allows you to:

      - Post metrics data so it can be graphed on Datadogâ€™s dashboards
      - Query metrics from any time period (timeseries and scalar)
      - Modify tag configurations for metrics
      - View tags and volumes for metrics

      **Note**: A graph can only contain a set number of points
      and as the timeframe over which a metric is viewed increases,
      aggregation between points occurs to stay below that set number.

      The Post, Patch, and Delete `manage_tags` API methods can only be performed by
      a user who has the `Manage Tags for Metrics` permission.
    name: Metrics
  - description: |-
      [Monitors](https://docs.datadoghq.com/monitors) allow you to watch a metric or check that you care about and
      notifies your team when a defined threshold has exceeded.

      For more information, see [Creating Monitors](https://docs.datadoghq.com/monitors/create/types/) and
      [Tag Policies](https://docs.datadoghq.com/monitors/settings/).
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/monitors/create/types/'
    name: Monitors
  - description: Configure your Datadog Okta integration directly through the Datadog API.
    name: Okta Integration
  - description: |-
      Configure your [Datadog Opsgenie integration](https://docs.datadoghq.com/integrations/opsgenie/)
      directly through the Datadog API.
    externalDocs:
      url: 'https://docs.datadoghq.com/api/latest/opsgenie-integration'
    name: Opsgenie Integration
  - description: 'Create, edit, and manage your organizations. Read more about [multi-org accounts](https://docs.datadoghq.com/account_management/multi_organization).'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/multi_organization'
    name: Organizations
  - description: |-
      The powerpack endpoints allow you to:

      - Get a powerpack
      - Create a powerpack
      - Delete a powerpack
      - Get a list of all powerpacks

      The Patch and Delete API methods can only be performed on a powerpack by
      a user who has the powerpack create permission for that specific powerpack.
    name: Powerpack
  - description: The processes API allows you to query processes data for your organization.
    name: Processes
  - description: Search or aggregate your RUM events over HTTP.
    name: RUM
  - description: |-
      A restriction policy defines the access control rules for a resource, mapping a set of relations
      (such as editor and viewer) to a set of allowed principals (such as roles, teams, or users).
      The restriction policy determines who is authorized to perform what actions on the resource.
    name: Restriction Policies
  - description: |-
      The Roles API is used to create and manage Datadog roles, what
      [global permissions](https://docs.datadoghq.com/account_management/rbac/)
      they grant, and which users belong to them.

      Permissions related to specific account assets can be granted to roles
      in the Datadog application without using this API. For example, granting
      read access on a specific log index to a role can be done in Datadog from the
      [Pipelines page](https://app.datadoghq.com/logs/pipelines).
    name: Roles
  - description: |-
      Detection rules for generating signals and listing of generated
      signals.
    name: Security Monitoring
  - description: 'Create, update, delete, and retrieve sensitive data scanner groups and rules.'
    name: Sensitive Data Scanner
  - description: 'Create, edit, and disable service accounts.'
    name: Service Accounts
  - description: 'API to create, update, retrieve and delete service definitions.'
    externalDocs:
      url: 'https://docs.datadoghq.com/tracing/service_catalog/'
    name: Service Definition
  - description: |-
      API to create, update scorecard rules and outcomes.

      This feature is currently in BETA. If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
    name: Service Scorecards
  - description: Search and aggregate your spans from your Datadog platform over HTTP.
    name: Spans
  - description: 'Manage configuration of [span-based metrics](https://app.datadoghq.com/apm/traces/generate-metrics) for your organization.'
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/tracing/metrics/metrics_namespace/'
    name: Spans Metrics
  - description: |-
      Datadog Synthetics uses simulated user requests and browser rendering to help you ensure uptime,
      identify regional issues, and track your application performance. Datadog Synthetics tests come in
      two different flavors, [API tests](https://docs.datadoghq.com/synthetics/api_tests/)
      and [browser tests](https://docs.datadoghq.com/synthetics/browser_tests). You can use Datadogâ€™s API to
      manage both test types programmatically.

      For more information about Synthetics, see the [Synthetics overview](https://docs.datadoghq.com/synthetics/).
    name: Synthetics
  - description: View and manage teams within Datadog.
    name: Teams
  - description: |-
      The usage metering API allows you to get hourly, daily, and
      monthly usage across multiple facets of Datadog.
      This API is available to all Pro and Enterprise customers.
      Usage is only accessible for [parent-level organizations](https://docs.datadoghq.com/account_management/multi_organization/).

      **Note**: Usage data is delayed by up to 72 hours from when it was incurred.
      It is retained for 15 months.

      You can retrieve up to 24 hours of hourly usage data for multiple organizations,
      and up to two months of hourly usage data for a single organization in one request.
    externalDocs:
      description: Find out more at
      url: 'https://docs.datadoghq.com/account_management/billing/usage_details/'
    name: Usage Metering
  - description: 'Create, edit, and disable users.'
    externalDocs:
      url: 'https://docs.datadoghq.com/account_management/users'
    name: Users
components:
  schemas:
    ActiveBillingDimensionsResponse:
      description: Active billing dimensions response.
      properties:
        data:
          $ref: '#/components/schemas/ActiveBillingDimensionsBody'
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    ActiveBillingDimensionsBody:
      description: Active billing dimensions data.
      properties:
        attributes:
          $ref: '#/components/schemas/ActiveBillingDimensionsAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/ActiveBillingDimensionsType'
      type: object
    APIKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - modified_at
        - '-modified_at'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - MODIFIED_AT_ASCENDING
        - MODIFIED_AT_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    ApplicationKeysSort:
      default: name
      description: Sorting options
      enum:
        - created_at
        - '-created_at'
        - last4
        - '-last4'
        - name
        - '-name'
      type: string
      x-enum-varnames:
        - CREATED_AT_ASCENDING
        - CREATED_AT_DESCENDING
        - LAST4_ASCENDING
        - LAST4_DESCENDING
        - NAME_ASCENDING
        - NAME_DESCENDING
    IncidentAttachmentAttachmentType:
      description: The type of the incident attachment attributes.
      enum:
        - link
        - postmortem
      example: link
      type: string
      x-enum-varnames:
        - LINK
        - POSTMORTEM
    IncidentAttachmentRelatedObject:
      description: The object related to an incident attachment.
      enum:
        - users
      type: string
      x-enum-varnames:
        - USERS
    IncidentRelatedObject:
      description: Object related to an incident.
      enum:
        - users
        - attachments
      type: string
      x-enum-varnames:
        - USERS
        - ATTACHMENTS
    IncidentSearchSortOrder:
      description: The ways searched incidents can be sorted.
      enum:
        - created
        - '-created'
      type: string
      x-enum-varnames:
        - CREATED_ASCENDING
        - CREATED_DESCENDING
    ServiceDefinitionSchemaVersions:
      description: Schema versions
      enum:
        - v1
        - v2
        - v2.1
        - v2.2
      type: string
      x-enum-varnames:
        - V1
        - V2
        - V2_1
        - V2_2
    ActiveBillingDimensionsAttributes:
      description: List of active billing dimensions.
      properties:
        month:
          description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`.'
          format: date-time
          type: string
        values:
          description: 'List of active billing dimensions. Example: `[infra_host, apm_host, serverless_infra]`.'
          items:
            description: A given billing dimension in a list.
            example: infra_host
            type: string
          type: array
      type: object
    ActiveBillingDimensionsType:
      default: billing_dimensions
      description: Type of active billing dimensions data.
      enum:
        - billing_dimensions
      type: string
      x-enum-varnames:
        - BILLING_DIMENSIONS
    SortDirection:
      default: desc
      description: The direction to sort by.
      enum:
        - desc
        - asc
      type: string
      x-enum-varnames:
        - DESC
        - ASC
    MonthlyCostAttributionResponse:
      description: Response containing the monthly cost attribution by tag(s).
      properties:
        data:
          description: Response containing cost attribution.
          items:
            $ref: '#/components/schemas/MonthlyCostAttributionBody'
          type: array
        meta:
          $ref: '#/components/schemas/MonthlyCostAttributionMeta'
      type: object
    MonthlyCostAttributionBody:
      description: Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/MonthlyCostAttributionAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/CostAttributionType'
      type: object
    MonthlyCostAttributionMeta:
      description: The object containing document metadata.
      properties:
        aggregates:
          $ref: '#/components/schemas/CostAttributionAggregates'
        pagination:
          $ref: '#/components/schemas/MonthlyCostAttributionPagination'
      type: object
    MonthlyCostAttributionAttributes:
      description: Cost Attribution by Tag for a given organization.
      properties:
        month:
          description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]`.'
          format: date-time
          type: string
        org_name:
          description: The name of the organization.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        tag_config_source:
          description: 'The source of the cost attribution tag configuration and the selected tags in the format `<source_org_name>:::<selected tag 1>///<selected tag 2>///<selected tag 3>`.'
          type: string
        tags:
          $ref: '#/components/schemas/CostAttributionTagNames'
        updated_at:
          description: Shows the most recent hour in the current months for all organizations for which all costs were calculated.
          type: string
        values:
          description: 'Fields in Cost Attribution by tag(s). Example: `infra_host_on_demand_cost`, `infra_host_committed_cost`, `infra_host_total_cost`, `infra_host_percentage_in_org`, `infra_host_percentage_in_account`.'
          type: object
      type: object
    CostAttributionType:
      default: cost_by_tag
      description: Type of cost attribution data.
      enum:
        - cost_by_tag
      example: cost_by_tag
      type: string
      x-enum-varnames:
        - COST_BY_TAG
    CostAttributionAggregates:
      description: An array of available aggregates.
      items:
        $ref: '#/components/schemas/CostAttributionAggregatesBody'
      type: array
    MonthlyCostAttributionPagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: 'The cursor to use to get the next results, if any. To make the next request, use the same parameters with the addition of the `next_record_id`.'
          nullable: true
          type: string
      type: object
    CostAttributionTagNames:
      additionalProperties:
        description: |-
          A list of values that are associated with each tag key.
          - An empty list means the resource use wasn't tagged with the respective tag.
          - Multiple values means the respective tag was applied multiple times on the resource.
          - An `<empty>` value means the resource was tagged with the respective tag but did not have a value.
        items:
          description: A given tag in a list.
          example: datadog-integrations-lab
          type: string
        type: array
      description: |-
        Tag keys and values.
        A `null` value here means that the requested tag breakdown cannot be applied because it does not match the [tags
        configured for usage attribution](https://docs.datadoghq.com/account_management/billing/usage_attribution/#getting-started).
        In this scenario the API returns the total cost, not broken down by tags.
      nullable: true
      type: object
    CostAttributionAggregatesBody:
      description: The object containing the aggregates.
      properties:
        agg_type:
          description: The aggregate type.
          example: sum
          type: string
        field:
          description: The field.
          example: infra_host_committed_cost
          type: string
        value:
          description: The value for a given field.
          format: double
          type: number
      type: object
    UsageApplicationSecurityMonitoringResponse:
      description: Application Security Monitoring usage response.
      properties:
        data:
          description: Response containing Application Security Monitoring usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageDataObject:
      description: Usage data.
      properties:
        attributes:
          $ref: '#/components/schemas/UsageAttributesObject'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    UsageAttributesObject:
      description: Usage attributes data.
      properties:
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        timeseries:
          description: List of usage data reported for each requested hour.
          items:
            $ref: '#/components/schemas/UsageTimeSeriesObject'
          type: array
        usage_type:
          $ref: '#/components/schemas/HourlyUsageType'
      type: object
    UsageTimeSeriesType:
      default: usage_timeseries
      description: Type of usage data.
      enum:
        - usage_timeseries
      example: usage_timeseries
      type: string
      x-enum-varnames:
        - USAGE_TIMESERIES
    UsageTimeSeriesObject:
      description: Usage timeseries data.
      properties:
        timestamp:
          description: 'Datetime in ISO-8601 format, UTC. The hour for the usage.'
          format: date-time
          type: string
        value:
          description: Contains the number measured for the given usage_type during the hour.
          format: int64
          nullable: true
          type: integer
      type: object
    HourlyUsageType:
      description: Usage type that is being measured.
      enum:
        - app_sec_host_count
        - observability_pipelines_bytes_processed
        - lambda_traced_invocations_count
      example: observability_pipelines_bytes_processed
      type: string
      x-enum-varnames:
        - APP_SEC_HOST_COUNT
        - OBSERVABILITY_PIPELINES_BYTES_PROCESSSED
        - LAMBDA_TRACED_INVOCATIONS_COUNT
    CostByOrgResponse:
      description: Chargeback Summary response.
      properties:
        data:
          description: Response containing Chargeback Summary.
          items:
            $ref: '#/components/schemas/CostByOrg'
          type: array
      type: object
    CostByOrg:
      description: Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/CostByOrgAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/CostByOrgType'
      type: object
    CostByOrgAttributes:
      description: Cost attributes data.
      properties:
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        total_cost:
          description: The total cost of products for the month.
          format: double
          type: number
      type: object
    CostByOrgType:
      default: cost_by_org
      description: Type of cost data.
      enum:
        - cost_by_org
      example: cost_by_org
      type: string
      x-enum-varnames:
        - COST_BY_ORG
    ChargebackBreakdown:
      description: Charges breakdown.
      properties:
        charge_type:
          description: The type of charge for a particular product.
          example: on_demand
          type: string
        cost:
          description: The cost for a particular product and charge type during a given month.
          format: double
          type: number
        product_name:
          description: The product for which cost is being reported.
          example: infra_host
          type: string
      type: object
    HourlyUsageResponse:
      description: Hourly usage response.
      properties:
        data:
          description: Response containing hourly usage.
          items:
            $ref: '#/components/schemas/HourlyUsage'
          type: array
        meta:
          $ref: '#/components/schemas/HourlyUsageMetadata'
      type: object
    HourlyUsage:
      description: Hourly usage for a product family for an org.
      properties:
        attributes:
          $ref: '#/components/schemas/HourlyUsageAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/UsageTimeSeriesType'
      type: object
    HourlyUsageMetadata:
      description: The object containing document metadata.
      properties:
        pagination:
          $ref: '#/components/schemas/HourlyUsagePagination'
      type: object
    HourlyUsageAttributes:
      description: Attributes of hourly usage for a product family for an org for a time period.
      properties:
        measurements:
          description: List of the measured usage values for the product family for the org for the time period.
          items:
            $ref: '#/components/schemas/HourlyUsageMeasurement'
          type: array
        org_name:
          description: The organization name.
          type: string
        product_family:
          description: The product for which usage is being reported.
          type: string
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
        timestamp:
          description: 'Datetime in ISO-8601 format, UTC. The hour for the usage.'
          format: date-time
          type: string
      type: object
    HourlyUsagePagination:
      description: The metadata for the current pagination.
      properties:
        next_record_id:
          description: 'The cursor to get the next results (if any). To make the next request, use the same parameters and add `next_record_id`.'
          nullable: true
          type: string
      type: object
    HourlyUsageMeasurement:
      description: Usage amount for a given usage type.
      properties:
        usage_type:
          description: Type of usage.
          type: string
        value:
          description: Contains the number measured for the given usage_type during the hour.
          format: int64
          nullable: true
          type: integer
      type: object
    UsageLambdaTracedInvocationsResponse:
      description: Lambda Traced Invocations usage response.
      properties:
        data:
          description: Response containing Lambda Traced Invocations usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    UsageObservabilityPipelinesResponse:
      description: Observability Pipelines usage response.
      properties:
        data:
          description: Response containing Observability Pipelines usage.
          items:
            $ref: '#/components/schemas/UsageDataObject'
          type: array
      type: object
    ProjectedCostResponse:
      description: Projected Cost response.
      properties:
        data:
          description: Response containing Projected Cost.
          items:
            $ref: '#/components/schemas/ProjectedCost'
          type: array
      type: object
    ProjectedCost:
      description: Projected Cost data.
      properties:
        attributes:
          $ref: '#/components/schemas/ProjectedCostAttributes'
        id:
          description: Unique ID of the response.
          type: string
        type:
          $ref: '#/components/schemas/ProjectedCostType'
      type: object
    ProjectedCostAttributes:
      description: Projected Cost attributes data.
      properties:
        charges:
          description: List of charges data reported for the requested month.
          items:
            $ref: '#/components/schemas/ChargebackBreakdown'
          type: array
        date:
          description: The month requested.
          format: date-time
          type: string
        org_name:
          description: The organization name.
          type: string
        projected_total_cost:
          description: The total projected cost of products for the month.
          format: double
          type: number
        public_id:
          description: The organization public ID.
          type: string
        region:
          description: The region of the Datadog instance that the organization belongs to.
          type: string
      type: object
    ProjectedCostType:
      default: projected_cost
      description: Type of cost data.
      enum:
        - projected_cost
      example: projected_cost
      type: string
      x-enum-varnames:
        - PROJECt_COST
  parameters:
    APIKeyCategoryParameter:
      description: Filter API keys by category.
      in: query
      name: 'filter[category]'
      required: false
      schema:
        type: string
    APIKeyFilterCreatedAtEndParameter:
      description: Only include API keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterCreatedAtStartParameter:
      description: Only include API keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtEndParameter:
      description: Only include API keys modified on or before the specified date.
      in: query
      name: 'filter[modified_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterModifiedAtStartParameter:
      description: Only include API keys modified on or after the specified date.
      in: query
      name: 'filter[modified_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    APIKeyFilterParameter:
      description: Filter API keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    APIKeyId:
      description: The ID of the API key.
      in: path
      name: api_key_id
      required: true
      schema:
        type: string
    APIKeyIncludeParameter:
      description: Comma separated list of resource paths for related resources to include in the response. Supported resource paths are `created_by` and `modified_by`.
      in: query
      name: include
      required: false
      schema:
        example: 'created_by,modified_by'
        type: string
    APIKeyReadConfigReadEnabledParameter:
      description: Filter API keys by remote config read enabled status.
      in: query
      name: 'filter[remote_config_read_enabled]'
      required: false
      schema:
        type: boolean
    APIKeysSortParameter:
      description: |-
        API key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/APIKeysSort'
    ApplicationKeyFilterCreatedAtEndParameter:
      description: Only include application keys created on or before the specified date.
      in: query
      name: 'filter[created_at][end]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterCreatedAtStartParameter:
      description: Only include application keys created on or after the specified date.
      in: query
      name: 'filter[created_at][start]'
      required: false
      schema:
        example: '2020-11-24T18:46:21+00:00'
        type: string
    ApplicationKeyFilterParameter:
      description: Filter application keys by the specified string.
      in: query
      name: filter
      required: false
      schema:
        type: string
    ApplicationKeyID:
      description: The ID of the application key.
      in: path
      name: app_key_id
      required: true
      schema:
        type: string
    ApplicationKeyIncludeParameter:
      description: Resource path for related resources to include in the response. Only `owned_by` is supported.
      in: query
      name: include
      required: false
      schema:
        example: owned_by
        type: string
    ApplicationKeysSortParameter:
      description: |-
        Application key attribute used to sort results. Sort order is ascending
        by default. In order to specify a descending sort, prefix the
        attribute with a minus sign.
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/ApplicationKeysSort'
    ArchiveID:
      description: The ID of the archive.
      in: path
      name: archive_id
      required: true
      schema:
        type: string
    AuthNMappingID:
      description: The UUID of the AuthN Mapping.
      in: path
      name: authn_mapping_id
      required: true
      schema:
        type: string
    CloudWorkloadSecurityAgentRuleID:
      description: The ID of the Agent rule.
      example: 3b5-v82-ns6
      in: path
      name: agent_rule_id
      required: true
      schema:
        type: string
    ConfluentAccountID:
      description: Confluent Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    ConfluentResourceID:
      description: Confluent Account Resource ID.
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    FastlyAccountID:
      description: Fastly Account id.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    FastlyServiceID:
      description: Fastly Service ID.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    GCPSTSServiceAccountID:
      description: Your GCP STS enabled service account's unique ID.
      in: path
      name: account_id
      required: true
      schema:
        type: string
    IncidentAttachmentFilterQueryParameter:
      description: Specifies which types of attachments are included in the response.
      explode: false
      in: query
      name: 'filter[attachment_type]'
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentAttachmentType'
        type: array
    IncidentAttachmentIncludeQueryParameter:
      description: Specifies which types of related objects are included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentAttachmentRelatedObject'
        type: array
    IncidentIDPathParameter:
      description: The UUID of the incident.
      in: path
      name: incident_id
      required: true
      schema:
        type: string
    IncidentIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      explode: false
      in: query
      name: include
      required: false
      schema:
        items:
          $ref: '#/components/schemas/IncidentRelatedObject'
        type: array
    IncidentIntegrationMetadataIDPathParameter:
      description: The UUID of the incident integration metadata.
      in: path
      name: integration_metadata_id
      required: true
      schema:
        type: string
    IncidentSearchIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentSearchQueryQueryParameter:
      description: |-
        Specifies which incidents should be returned. The query can contain any number of incident facets
        joined by `ANDs`, along with multiple values for each of those facets joined by `OR`s. For
        example: `state:active AND severity:(SEV-2 OR SEV-1)`.
      explode: false
      in: query
      name: query
      required: true
      schema:
        type: string
    IncidentSearchSortQueryParameter:
      description: Specifies the order of returned incidents.
      explode: false
      in: query
      name: sort
      required: false
      schema:
        $ref: '#/components/schemas/IncidentSearchSortOrder'
    IncidentServiceIDPathParameter:
      description: The ID of the incident service.
      in: path
      name: service_id
      required: true
      schema:
        type: string
    IncidentServiceIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentServiceSearchQueryParameter:
      description: A search query that filters services by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleServiceName
        type: string
    IncidentTeamIDPathParameter:
      description: The ID of the incident team.
      in: path
      name: team_id
      required: true
      schema:
        type: string
    IncidentTeamIncludeQueryParameter:
      description: Specifies which types of related objects should be included in the response.
      in: query
      name: include
      required: false
      schema:
        $ref: '#/components/schemas/IncidentRelatedObject'
    IncidentTeamSearchQueryParameter:
      description: A search query that filters teams by name.
      in: query
      name: filter
      required: false
      schema:
        example: ExampleTeamName
        type: string
    IncidentTodoIDPathParameter:
      description: The UUID of the incident todo.
      in: path
      name: todo_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    MetricName:
      description: The name of the metric.
      example: dist.http.endpoint.request
      in: path
      name: metric_name
      required: true
      schema:
        type: string
    OpsgenieServiceIDPathParameter:
      description: The UUID of the service.
      in: path
      name: integration_service_id
      required: true
      schema:
        type: string
    PageNumber:
      description: Specific page number to return.
      in: query
      name: 'page[number]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageOffset:
      description: Specific offset to use as the beginning of the returned page.
      in: query
      name: 'page[offset]'
      required: false
      schema:
        default: 0
        example: 0
        format: int64
        type: integer
    PageSize:
      description: Size for a given page. The maximum allowed value is 100.
      in: query
      name: 'page[size]'
      required: false
      schema:
        default: 10
        example: 10
        format: int64
        type: integer
    ResourceID:
      description: 'Identifier, formatted as `type:id`. Supported types: `connection`, `dashboard`, `notebook`, `security-rule`, `slo`.'
      example: 'dashboard:abc-def-ghi'
      in: path
      name: resource_id
      required: true
      schema:
        type: string
    RetentionFilterIdParam:
      description: The ID of the retention filter.
      in: path
      name: filter_id
      required: true
      schema:
        type: string
    RoleID:
      description: The unique identifier of the role.
      in: path
      name: role_id
      required: true
      schema:
        type: string
    RuleId:
      description: The ID of the rule/scorecard.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SchemaVersion:
      description: The schema version desired in the response.
      in: query
      name: schema_version
      required: false
      schema:
        $ref: '#/components/schemas/ServiceDefinitionSchemaVersions'
    SecurityFilterID:
      description: The ID of the security filter.
      in: path
      name: security_filter_id
      required: true
      schema:
        type: string
    SecurityMonitoringRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    SensitiveDataScannerGroupID:
      description: The ID of a group of rules.
      in: path
      name: group_id
      required: true
      schema:
        type: string
    SensitiveDataScannerRuleID:
      description: The ID of the rule.
      in: path
      name: rule_id
      required: true
      schema:
        type: string
    ServiceAccountID:
      description: The ID of the service account.
      in: path
      name: service_account_id
      required: true
      schema:
        example: 00000000-0000-1234-0000-000000000000
        type: string
    ServiceName:
      description: The name of the service.
      in: path
      name: service_name
      required: true
      schema:
        example: my-service
        type: string
    SignalID:
      description: The ID of the signal.
      in: path
      name: signal_id
      required: true
      schema:
        type: string
    SpansMetricIDParameter:
      description: The name of the span-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
    UserID:
      description: The ID of the user.
      in: path
      name: user_id
      required: true
      schema:
        example: 00000000-0000-9999-0000-000000000000
        type: string
  responses: {}
  securitySchemes:
    AuthZ:
      description: This API uses OAuth 2 with the implicit grant flow.
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/v1/authorize
          scopes:
            apm_service_catalog_read: View service catalog and service definitions.
            apm_service_catalog_write: 'Add, modify, and delete service catalog definitions when those definitions are maintained by Datadog.'
            ci_visibility_pipelines_write: Create CI Visibility pipeline spans using the API.
            ci_visibility_read: View CI Visibility.
            create_webhooks: Create webhooks integrations.
            dashboards_public_share: Generate public and authenticated links to share dashboards or embeddable graphs externally.
            dashboards_read: View dashboards.
            dashboards_write: Create and change dashboards.
            events_read: Read Events data.
            incident_notification_settings_write: Configure Incidents Notification settings.
            incident_read: View incidents in Datadog.
            incident_settings_write: Configure Incident Settings.
            incident_write: 'Create, view, and manage incidents in Datadog.'
            metrics_read: View custom metrics.
            monitors_downtime: Set downtimes to suppress alerts from any monitor in an organization. Mute and unmute hosts. The ability to write monitors is not required to set downtimes.
            monitors_read: View monitors.
            monitors_write: Edit and delete individual monitors.
            security_monitoring_filters_read: Read Security Filters.
            security_monitoring_filters_write: 'Create, edit, and delete Security Filters.'
            security_monitoring_findings_read: View CSPM Findings.
            security_monitoring_rules_read: Read Detection Rules.
            security_monitoring_rules_write: Create and edit Detection Rules.
            security_monitoring_signals_read: View Security Signals.
            security_monitoring_suppressions_read: Read Rule Suppressions.
            security_monitoring_suppressions_write: Write Rule Suppressions.
            slos_corrections: 'Apply, edit, and delete SLO status corrections. A user with this permission can make status corrections, even if they do not have permission to edit those SLOs.'
            slos_read: View SLOs and status corrections.
            slos_write: 'Create, edit, and delete SLOs.'
            synthetics_global_variable_read: 'View, search, and use Synthetics global variables.'
            synthetics_global_variable_write: 'Create, edit, and delete global variables for Synthetics.'
            synthetics_private_location_read: 'View, search, and use Synthetics private locations.'
            synthetics_private_location_write: Create and delete private locations in addition to having access to the associated installation guidelines.
            synthetics_read: List and view configured Synthetic tests and test results.
            synthetics_write: 'Create, edit, and delete Synthetic tests.'
            teams_manage: 'Manage Teams. Create, delete, rename, and edit metadata of all Teams. To control Team membership across all Teams, use the User Access Manage permission.'
            teams_read: 'Read Teams data. A User with this permission can view Team names, metadata, and which Users are on each Team.'
            timeseries_query: Query Timeseries data.
            usage_read: View your organization's usage and usage attribution.
            user_access_invite: Invite other users to your organization.
            user_access_manage: 'Disable users, manage user roles, manage SAML-to-role mappings, and configure logs restriction queries.'
            user_access_read: View users and their roles and settings.
          tokenUrl: /oauth2/v1/token
      type: oauth2
    apiKeyAuth:
      description: Your Datadog API Key.
      in: header
      name: DD-API-KEY
      type: apiKey
      x-env-name: DD_API_KEY
    appKeyAuth:
      description: Your Datadog APP Key.
      in: header
      name: DD-APPLICATION-KEY
      type: apiKey
      x-env-name: DD_APP_KEY
  callbacks: {}
  examples: {}
  requestBodies: {}
  headers: {}
  links: {}
  x-stackQL-resources:
    active_billing_dimensions:
      id: datadog.usage_metering.active_billing_dimensions
      name: active_billing_dimensions
      title: Active Billing Dimensions
      methods:
        get_active_billing_dimensions:
          operation:
            $ref: '#/paths/~1api~1v2~1cost_by_tag~1active_billing_dimensions/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_active_billing_dimensions:
          operation:
            $ref: '#/paths/~1api~1v2~1cost_by_tag~1active_billing_dimensions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/active_billing_dimensions/methods/get_active_billing_dimensions'
        insert: []
        update: []
        delete: []
    monthly_cost_attributions:
      id: datadog.usage_metering.monthly_cost_attributions
      name: monthly_cost_attributions
      title: Monthly Cost Attributions
      methods:
        get_monthly_cost_attribution:
          operation:
            $ref: '#/paths/~1api~1v2~1cost_by_tag~1monthly_cost_attribution/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_monthly_cost_attribution:
          operation:
            $ref: '#/paths/~1api~1v2~1cost_by_tag~1monthly_cost_attribution/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/monthly_cost_attributions/methods/get_monthly_cost_attribution'
        insert: []
        update: []
        delete: []
    usage_application_security_monitorings:
      id: datadog.usage_metering.usage_application_security_monitorings
      name: usage_application_security_monitorings
      title: Usage Application Security Monitorings
      methods:
        get_usage_application_security_monitoring:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1application_security/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_usage_application_security_monitoring:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1application_security/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usage_application_security_monitorings/methods/get_usage_application_security_monitoring'
        insert: []
        update: []
        delete: []
    cost_by_orgs:
      id: datadog.usage_metering.cost_by_orgs
      name: cost_by_orgs
      title: Cost By Orgs
      methods:
        get_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1cost_by_org/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1cost_by_org/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/cost_by_orgs/methods/get_cost_by_org'
        insert: []
        update: []
        delete: []
    estimated_cost_by_orgs:
      id: datadog.usage_metering.estimated_cost_by_orgs
      name: estimated_cost_by_orgs
      title: Estimated Cost By Orgs
      methods:
        get_estimated_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1estimated_cost/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_estimated_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1estimated_cost/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/estimated_cost_by_orgs/methods/get_estimated_cost_by_org'
        insert: []
        update: []
        delete: []
    historical_cost_by_orgs:
      id: datadog.usage_metering.historical_cost_by_orgs
      name: historical_cost_by_orgs
      title: Historical Cost By Orgs
      methods:
        get_historical_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1historical_cost/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_historical_cost_by_org:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1historical_cost/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/historical_cost_by_orgs/methods/get_historical_cost_by_org'
        insert: []
        update: []
        delete: []
    hourly_usages:
      id: datadog.usage_metering.hourly_usages
      name: hourly_usages
      title: Hourly Usages
      methods:
        get_hourly_usage:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1hourly_usage/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_hourly_usage:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1hourly_usage/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hourly_usages/methods/get_hourly_usage'
        insert: []
        update: []
        delete: []
    usage_lambda_traced_invocations:
      id: datadog.usage_metering.usage_lambda_traced_invocations
      name: usage_lambda_traced_invocations
      title: Usage Lambda Traced Invocations
      methods:
        get_usage_lambda_traced_invocations:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1lambda_traced_invocations/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_usage_lambda_traced_invocations:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1lambda_traced_invocations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usage_lambda_traced_invocations/methods/get_usage_lambda_traced_invocations'
        insert: []
        update: []
        delete: []
    usage_observability_pipelines:
      id: datadog.usage_metering.usage_observability_pipelines
      name: usage_observability_pipelines
      title: Usage Observability Pipelines
      methods:
        get_usage_observability_pipelines:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1observability_pipelines/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_usage_observability_pipelines:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1observability_pipelines/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/usage_observability_pipelines/methods/get_usage_observability_pipelines'
        insert: []
        update: []
        delete: []
    projected_costs:
      id: datadog.usage_metering.projected_costs
      name: projected_costs
      title: Projected Costs
      methods:
        get_projected_cost:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1projected_cost/get'
          response:
            mediaType: application/json;datetime-format=rfc3339
            openAPIDocKey: '200'
            objectKey: $.data
        _get_projected_cost:
          operation:
            $ref: '#/paths/~1api~1v2~1usage~1projected_cost/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/projected_costs/methods/get_projected_cost'
        insert: []
        update: []
        delete: []
paths:
  /api/v2/cost_by_tag/active_billing_dimensions:
    get:
      description: Get active billing dimensions for cost attribution. Cost data for a given month becomes available no later than the 17th of the following month.
      operationId: GetActiveBillingDimensions
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/ActiveBillingDimensionsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get active billing dimensions for cost attribution
      tags:
        - Usage Metering
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/cost_by_tag/monthly_cost_attribution:
    get:
      description: |-
        Get monthly cost attribution by tag across multi-org and single root-org accounts.
        Cost Attribution data for a given month becomes available no later than the 17th of the following month.
        This API endpoint is paginated. To make sure you receive all records, check if the value of `next_record_id` is
        set in the response. If it is, make another request and pass `next_record_id` as a parameter.
        Pseudo code example:
        ```
        response := GetMonthlyCostAttribution(start_month, end_month)
        cursor := response.metadata.pagination.next_record_id
        WHILE cursor != null BEGIN
          sleep(5 seconds)  # Avoid running into rate limit
          response := GetMonthlyCostAttribution(start_month, end_month, next_record_id=cursor)
          cursor := response.metadata.pagination.next_record_id
        END
        ```
      operationId: GetMonthlyCostAttribution
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning in this month.'
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month.'
          in: query
          name: end_month
          required: true
          schema:
            format: date-time
            type: string
        - description: |-
            Comma-separated list specifying cost types (e.g., `<billing_dimension>_on_demand_cost`, `<billing_dimension>_committed_cost`, `<billing_dimension>_total_cost`) and the
            proportions (`<billing_dimension>_percentage_in_org`, `<billing_dimension>_percentage_in_account`). Use `*` to retrieve all fields.
            Example: `infra_host_on_demand_cost,infra_host_percentage_in_account`
            To obtain the complete list of active billing dimensions that can be used to replace
            `<billing_dimension>` in the field names, make a request to the [Get active billing dimensions API](https://docs.datadoghq.com/api/latest/usage-metering/#get-active-billing-dimensions-for-cost-attribution).
          in: query
          name: fields
          required: true
          schema:
            type: string
        - description: 'The direction to sort by: `[desc, asc]`.'
          in: query
          name: sort_direction
          required: false
          schema:
            $ref: '#/components/schemas/SortDirection'
        - description: 'The billing dimension to sort by. Always sorted by total cost. Example: `infra_host`.'
          in: query
          name: sort_name
          required: false
          schema:
            type: string
        - description: |-
            Comma separated list of tag keys used to group cost. If no value is provided the cost will not be broken down by tags.
            To see which tags are available, look for the value of `tag_config_source` in the API response.
          in: query
          name: tag_breakdown_keys
          required: false
          schema:
            type: string
        - description: List following results with a next_record_id provided in the previous query.
          in: query
          name: next_record_id
          required: false
          schema:
            type: string
        - description: Include child org cost in the response. Defaults to `true`.
          in: query
          name: include_descendants
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/MonthlyCostAttributionResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ: []
      summary: Get Monthly Cost Attribution
      tags:
        - Usage Metering
      x-unstable: |-
        **Note**: This endpoint is in public beta.
        If you have any feedback, contact [Datadog support](https://docs.datadoghq.com/help/).
  /api/v2/usage/application_security:
    get:
      description: |-
        Get hourly usage for application security .
        **Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageApplicationSecurityMonitoring
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour.'
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageApplicationSecurityMonitoringResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for application security
      tags:
        - Usage Metering
  /api/v2/usage/cost_by_org:
    get:
      deprecated: true
      description: |-
        Get cost across multi-org account.
        Cost by org data for a given month becomes available no later than the 16th of the following month.
        **Note:** This endpoint has been deprecated. Please use the new endpoint
        [`/historical_cost`](https://docs.datadoghq.com/api/latest/usage-metering/#get-historical-cost-across-your-account)
        instead.
      operationId: GetCostByOrg
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month.'
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month.'
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get cost across multi-org account
      tags:
        - Usage Metering
  /api/v2/usage/estimated_cost:
    get:
      description: |-
        Get estimated cost across multi-org and single root-org accounts.
        Estimated cost data is only available for the current month and previous month
        and is delayed by up to 72 hours from when it was incurred.
        To access historical costs prior to this, use the `/historical_cost` endpoint.
      operationId: GetEstimatedCostByOrg
      parameters:
        - description: String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month. Either start_month or start_date should be specified, but not both. (start_month cannot go beyond two months in the past). Provide an `end_month` to view month-over-month cost.'
          in: query
          name: start_month
          required: false
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month.'
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost beginning this day. Either start_month or start_date should be specified, but not both. (start_date cannot go beyond two months in the past). Provide an `end_date` to view day-over-day cumulative cost.'
          in: query
          name: start_date
          required: false
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to day: `[YYYY-MM-DD]` for cost ending this day.'
          in: query
          name: end_date
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get estimated cost across your account
      tags:
        - Usage Metering
  /api/v2/usage/historical_cost:
    get:
      description: |-
        Get historical cost across multi-org and single root-org accounts.
        Cost data for a given month becomes available no later than the 16th of the following month.
      operationId: GetHistoricalCostByOrg
      parameters:
        - description: String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`.  Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost beginning this month.'
          in: query
          name: start_month
          required: true
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to month: `[YYYY-MM]` for cost ending this month.'
          in: query
          name: end_month
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/CostByOrgResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get historical cost across your account
      tags:
        - Usage Metering
  /api/v2/usage/hourly_usage:
    get:
      description: Get hourly usage by product family.
      operationId: GetHourlyUsage
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage beginning at this hour.'
          in: query
          name: 'filter[timestamp][start]'
          required: true
          schema:
            format: date-time
            type: string
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: [YYYY-MM-DDThh] for usage ending **before** this hour.'
          in: query
          name: 'filter[timestamp][end]'
          required: false
          schema:
            format: date-time
            type: string
        - description: |-
            Comma separated list of product families to retrieve. Available families are `all`, `analyzed_logs`,
            `application_security`, `audit_trail`, `serverless`, `ci_app`, `cloud_cost_management`,
            `csm_container_enterprise`, `csm_host_enterprise`, `cspm`, `custom_events`, `cws`, `dbm`, `fargate`,
            `infra_hosts`, `incident_management`, `indexed_logs`, `indexed_spans`, `ingested_spans`, `iot`,
            `lambda_traced_invocations`, `logs`, `network_flows`, `network_hosts`, `netflow_monitoring`, `observability_pipelines`,
            `online_archive`, `profiling`, `rum`, `rum_browser_sessions`, `rum_mobile_sessions`, `sds`, `snmp`,
            `synthetics_api`, `synthetics_browser`, `synthetics_mobile`, `synthetics_parallel_testing`, and `timeseries`.
            The following product family has been **deprecated**: `audit_logs`.
          in: query
          name: 'filter[product_families]'
          required: true
          schema:
            type: string
        - description: Include child org usage in the response. Defaults to false.
          in: query
          name: 'filter[include_descendants]'
          required: false
          schema:
            default: false
            type: boolean
        - description: Include breakdown of usage by subcategories where applicable (for product family logs only). Defaults to false.
          in: query
          name: 'filter[include_breakdown]'
          required: false
          schema:
            default: false
            type: boolean
        - description: |-
            Comma separated list of product family versions to use in the format `product_family:version`. For example,
            `infra_hosts:1.0.0`. If this parameter is not used, the API will use the latest version of each requested
            product family. Currently all families have one version `1.0.0`.
          in: query
          name: 'filter[versions]'
          required: false
          schema:
            type: string
        - description: Maximum number of results to return (between 1 and 500) - defaults to 500 if limit not specified.
          in: query
          name: 'page[limit]'
          required: false
          schema:
            default: 500
            format: int32
            maximum: 500
            minimum: 1
            type: integer
        - description: List following results with a next_record_id provided in the previous query.
          in: query
          name: 'page[next_record_id]'
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/HourlyUsageResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage by product family
      tags:
        - Usage Metering
  /api/v2/usage/lambda_traced_invocations:
    get:
      description: |-
        Get hourly usage for lambda traced invocations.
        **Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageLambdaTracedInvocations
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour.'
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageLambdaTracedInvocationsResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for lambda traced invocations
      tags:
        - Usage Metering
  /api/v2/usage/observability_pipelines:
    get:
      description: |-
        Get hourly usage for observability pipelines.
        **Note:** hourly usage data for all products is now available in the [Get hourly usage by product family API](https://docs.datadoghq.com/api/latest/usage-metering/#get-hourly-usage-by-product-family)
      operationId: GetUsageObservabilityPipelines
      parameters:
        - description: 'Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage beginning at this hour.'
          in: query
          name: start_hr
          required: true
          schema:
            format: date-time
            type: string
        - description: |-
            Datetime in ISO-8601 format, UTC, precise to hour: `[YYYY-MM-DDThh]` for usage ending
            **before** this hour.
          in: query
          name: end_hr
          required: false
          schema:
            format: date-time
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/UsageObservabilityPipelinesResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get hourly usage for observability pipelines
      tags:
        - Usage Metering
  /api/v2/usage/projected_cost:
    get:
      description: |-
        Get projected cost across multi-org and single root-org accounts.
        Projected cost data is only available for the current month and becomes available around the 12th of the month.
        This endpoint requires the usage_read authorization scope.
      operationId: GetProjectedCost
      parameters:
        - description: String to specify whether cost is broken down at a parent-org level or at the sub-org level. Available views are `summary` and `sub-org`. Defaults to `summary`.
          in: query
          name: view
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/ProjectedCostResponse'
          description: OK
        '400':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden - User is not authorized
        '429':
          content:
            application/json;datetime-format=rfc3339:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Too many requests
      security:
        - apiKeyAuth: []
          appKeyAuth: []
        - AuthZ:
            - usage_read
      summary: Get projected cost across your account
      tags:
        - Usage Metering
