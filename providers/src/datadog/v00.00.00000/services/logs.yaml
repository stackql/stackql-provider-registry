openapi: 3.0.0
info:
  title: logs API
  description: datadog logs API
  version: '1.0'
paths:
  /api/v2/logs:
    post:
      description: >-
        Send your logs to your Datadog platform over HTTP. Limits per HTTP
        request are:


        - Maximum content size per payload (uncompressed): 5MB

        - Maximum size for a single log: 1MB

        - Maximum array size if sending multiple logs in an array: 1000 entries


        Any log exceeding 1MB is accepted and truncated by Datadog:

        - For a single log request, the API truncates the log at 1MB and returns
        a 2xx.

        - For a multi-logs request, the API processes all logs, truncates only
        logs larger than 1MB, and returns a 2xx.


        Datadog recommends sending your logs compressed.

        Add the `Content-Encoding: gzip` header to the request when sending
        compressed logs.

        Log events can be submitted with a timestamp that is up to 18 hours in
        the past.


        The status codes answered by the HTTP API are:

        - 202: Accepted: the request has been accepted for processing

        - 400: Bad request (likely an issue in the payload formatting)

        - 401: Unauthorized (likely a missing API Key)

        - 403: Permission issue (likely using an invalid API Key)

        - 408: Request Timeout, request should be retried after some time

        - 413: Payload too large (batch is above 5MB uncompressed)

        - 429: Too Many Requests, request should be retried after some time

        - 500: Internal Server Error, the server encountered an unexpected
        condition that prevented it from fulfilling the request, request should
        be retried after some time

        - 503: Service Unavailable, the server is not ready to handle the
        request probably because it is overloaded, request should be retried
        after some time
      operationId: SubmitLog
      parameters:
        - description: HTTP header used to compress the media-type.
          in: header
          name: Content-Encoding
          required: false
          schema:
            $ref: '#/components/schemas/ContentEncoding'
        - description: >-
            Log tags can be passed as query parameters with `text/plain` content
            type.
          example: env:prod,user:my-user
          in: query
          name: ddtags
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              multi-json-messages:
                description: Pass multiple log objects at once.
                summary: Multi JSON Messages
                value:
                  - ddsource: nginx
                    ddtags: env:staging,version:5.1
                    hostname: i-012345678
                    message: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                    service: payment
                  - ddsource: nginx
                    ddtags: env:staging,version:5.1
                    hostname: i-012345679
                    message: 2019-11-19T14:37:58,995 INFO [process.name][20081] World
                    service: payment
              simple-json-message:
                description: >-
                  Log attributes can be passed as `key:value` pairs in valid
                  JSON messages.
                summary: Simple JSON Message
                value:
                  ddsource: nginx
                  ddtags: env:staging,version:5.1
                  hostname: i-012345678
                  message: >-
                    2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                    World
                  service: payment
            schema:
              $ref: '#/components/schemas/HTTPLog'
          application/logplex-1:
            examples:
              multi-raw-message:
                description: Submit log messages.
                summary: Multi Logplex Messages
                value: |-
                  2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                  2019-11-19T14:37:58,995 INFO [process.name][20081] World
              simple-logplex-message:
                description: Submit log string.
                summary: Simple Logplex Message
                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
            schema:
              type: string
          text/plain:
            examples:
              multi-raw-message:
                description: Submit log string.
                summary: Multi Raw Messages
                value: |
                  2019-11-19T14:37:58,995 INFO [process.name][20081] Hello
                  2019-11-19T14:37:58,995 INFO [process.name][20081] World
              simple-raw-message:
                description: >-
                  Submit log string. Log attributes can be passed as query
                  parameters in the URL. This enables the addition of tags or
                  the source by using the `ddtags` and `ddsource` parameters:
                  `?host=my-hostname&service=my-service&ddsource=my-source&ddtags=env:prod,user:my-user`.
                summary: Simple Raw Message
                value: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
            schema:
              type: string
        description: Log to send (JSON format).
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                type: object
          description: Request accepted for processing (always 202 empty JSON).
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Bad Request
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Unauthorized
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Forbidden
        '408':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Request Timeout
        '413':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Payload Too Large
        '429':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Too Many Requests
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Internal Server Error
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPLogErrors'
          description: Service Unavailable
      security:
        - apiKeyAuth: []
      servers:
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: The regional site for customers.
              enum:
                - datadoghq.com
                - us3.datadoghq.com
                - us5.datadoghq.com
                - ap1.datadoghq.com
                - ap2.datadoghq.com
                - datadoghq.eu
                - ddog-gov.com
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
        - url: '{protocol}://{name}'
          variables:
            name:
              default: http-intake.logs.datadoghq.com
              description: Full site DNS name.
            protocol:
              default: https
              description: The protocol for accessing the API.
        - url: https://{subdomain}.{site}
          variables:
            site:
              default: datadoghq.com
              description: Any Datadog deployment.
            subdomain:
              default: http-intake.logs
              description: The subdomain where the API is deployed.
      summary: Send logs
      tags:
        - Logs
      x-codegen-request-body-name: body
  /api/v2/logs/analytics/aggregate:
    post:
      description: >-
        The API endpoint to aggregate events into buckets and compute metrics
        and timeseries.
      operationId: AggregateLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsAggregateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsAggregateResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Aggregate events
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
  /api/v2/logs/config/archive-order:
    get:
      description: |-
        Get the current order of your archives.
        This endpoint takes no JSON arguments.
      operationId: GetLogsArchiveOrder
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchiveOrder'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get archive order
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
    put:
      description: >-
        Update the order of your archives. Since logs are processed
        sequentially, reordering an archive may change

        the structure and content of the data processed by other archives.


        **Note**: Using the `PUT` method updates your archive's order by
        replacing the current order

        with the new one.
      operationId: UpdateLogsArchiveOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveOrder'
        description: An object containing the new ordered list of archive IDs.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchiveOrder'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Unprocessable Entity
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update archive order
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
  /api/v2/logs/config/archives:
    get:
      description: Get the list of configured logs archives with their definitions.
      operationId: ListLogsArchives
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchives'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all archives
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_read_archives
    post:
      description: Create an archive in your organization.
      operationId: CreateLogsArchive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveCreateRequest'
        description: The definition of the new archive.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
  /api/v2/logs/config/archives/{archive_id}:
    delete:
      description: Delete a given archive from your organization.
      operationId: DeleteLogsArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete an archive
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
    get:
      description: Get a specific archive from your organization.
      operationId: GetLogsArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get an archive
      tags:
        - Logs Archives
      x-permission:
        operator: OR
        permissions:
          - logs_read_archives
    put:
      description: >-
        Update a given archive configuration.


        **Note**: Using this method updates your archive configuration by
        **replacing**

        your current configuration with the new one sent to your Datadog
        organization.
      operationId: UpdateLogsArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsArchiveCreateRequest'
        description: New definition of the archive.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsArchive'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
  /api/v2/logs/config/archives/{archive_id}/readers:
    delete:
      description: >-
        Removes a role from an archive. ([Roles
        API](https://docs.datadoghq.com/api/v2/roles/))
      operationId: RemoveRoleFromArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToRole'
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Revoke role from an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
    get:
      description: Returns all read roles a given archive is restricted to.
      operationId: ListArchiveReadRoles
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesResponse'
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: List read roles for an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
    post:
      description: >-
        Adds a read role to an archive. ([Roles
        API](https://docs.datadoghq.com/api/v2/roles/))
      operationId: AddReadRoleToArchive
      parameters:
        - $ref: '#/components/parameters/ArchiveID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelationshipToRole'
        required: true
      responses:
        '204':
          description: OK
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Bad Request
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Not found
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Grant role to an archive
      tags:
        - Logs Archives
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_archives
  /api/v2/logs/config/custom-destinations:
    get:
      description: >-
        Get the list of configured custom destinations in your organization with
        their definitions.
      operationId: ListLogsCustomDestinations
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationsResponse'
          description: OK
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIErrorResponse'
          description: Forbidden
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all custom destinations
      tags:
        - Logs Custom Destinations
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
          - logs_read_data
    post:
      description: Create a custom destination in your organization.
      operationId: CreateLogsCustomDestination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationCreateRequest'
        description: The definition of the new custom destination.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a custom destination
      tags:
        - Logs Custom Destinations
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_forwarding_rules
  /api/v2/logs/config/custom-destinations/{custom_destination_id}:
    delete:
      description: Delete a specific custom destination in your organization.
      operationId: DeleteLogsCustomDestination
      parameters:
        - $ref: '#/components/parameters/CustomDestinationId'
      responses:
        '204':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a custom destination
      tags:
        - Logs Custom Destinations
      x-permission:
        operator: OR
        permissions:
          - logs_write_forwarding_rules
    get:
      description: Get a specific custom destination in your organization.
      operationId: GetLogsCustomDestination
      parameters:
        - $ref: '#/components/parameters/CustomDestinationId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a custom destination
      tags:
        - Logs Custom Destinations
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
          - logs_read_data
    patch:
      description: >-
        Update the given fields of a specific custom destination in your
        organization.
      operationId: UpdateLogsCustomDestination
      parameters:
        - $ref: '#/components/parameters/CustomDestinationId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDestinationUpdateRequest'
        description: New definition of the custom destination's fields.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDestinationResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a custom destination
      tags:
        - Logs Custom Destinations
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_write_forwarding_rules
  /api/v2/logs/config/metrics:
    get:
      description: Get the list of configured log-based metrics with their definitions.
      operationId: ListLogsMetrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricsResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get all log-based metrics
      tags:
        - Logs Metrics
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
    post:
      description: >-
        Create a metric based on your ingested logs in your organization.

        Returns the log-based metric object from the request body when the
        request is successful.
      operationId: CreateLogsMetric
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricCreateRequest'
        description: The definition of the new log-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '409':
          $ref: '#/components/responses/ConflictResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Create a log-based metric
      tags:
        - Logs Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_generate_metrics
  /api/v2/logs/config/metrics/{metric_id}:
    delete:
      description: Delete a specific log-based metric from your organization.
      operationId: DeleteLogsMetric
      parameters:
        - $ref: '#/components/parameters/MetricID'
      responses:
        '204':
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Delete a log-based metric
      tags:
        - Logs Metrics
      x-permission:
        operator: OR
        permissions:
          - logs_generate_metrics
    get:
      description: Get a specific log-based metric from your organization.
      operationId: GetLogsMetric
      parameters:
        - $ref: '#/components/parameters/MetricID'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Get a log-based metric
      tags:
        - Logs Metrics
      x-permission:
        operator: OR
        permissions:
          - logs_read_config
    patch:
      description: >-
        Update a specific log-based metric from your organization.

        Returns the log-based metric object from the request body when the
        request is successful.
      operationId: UpdateLogsMetric
      parameters:
        - $ref: '#/components/parameters/MetricID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsMetricUpdateRequest'
        description: New definition of the log-based metric.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsMetricResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Update a log-based metric
      tags:
        - Logs Metrics
      x-codegen-request-body-name: body
      x-permission:
        operator: OR
        permissions:
          - logs_generate_metrics
  /api/v2/logs/events:
    get:
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        Use this endpoint to search and filter your logs.


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogsGet
      parameters:
        - description: Search query following logs syntax.
          example: '@datacenter:us @role:db'
          in: query
          name: filter[query]
          required: false
          schema:
            type: string
        - description: |-
            For customers with multiple indexes, the indexes to search.
            Defaults to '*' which means all indexes
          example:
            - main
            - web
          explode: false
          in: query
          name: filter[indexes]
          required: false
          schema:
            items:
              description: The name of a log index.
              type: string
            type: array
        - description: Minimum timestamp for requested logs.
          example: '2019-01-02T09:42:36.320Z'
          in: query
          name: filter[from]
          required: false
          schema:
            format: date-time
            type: string
        - description: Maximum timestamp for requested logs.
          example: '2019-01-03T09:42:36.320Z'
          in: query
          name: filter[to]
          required: false
          schema:
            format: date-time
            type: string
        - description: Specifies the storage type to be used
          example: indexes
          in: query
          name: filter[storage_tier]
          required: false
          schema:
            $ref: '#/components/schemas/LogsStorageTier'
        - description: Order of logs in results.
          in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/LogsSort'
        - description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          in: query
          name: page[cursor]
          required: false
          schema:
            type: string
        - description: Maximum number of logs in the response.
          example: 25
          in: query
          name: page[limit]
          required: false
          schema:
            default: 10
            format: int32
            maximum: 1000
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search logs (GET)
      tags:
        - Logs
      x-pagination:
        cursorParam: page[cursor]
        cursorPath: meta.page.after
        limitParam: page[limit]
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
  /api/v2/logs/events/search:
    post:
      description: >-
        List endpoint returns logs that match a log search query.

        [Results are paginated][1].


        Use this endpoint to search and filter your logs.


        **If you are considering archiving logs for your organization,

        consider use of the Datadog archive capabilities instead of the log list
        API.

        See [Datadog Logs Archive documentation][2].**


        [1]: /logs/guide/collect-multiple-logs-with-pagination

        [2]: https://docs.datadoghq.com/logs/archives
      operationId: ListLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogsListRequest'
        required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsListResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/NotAuthorizedResponse'
        '429':
          $ref: '#/components/responses/TooManyRequestsResponse'
      summary: Search logs (POST)
      tags:
        - Logs
      x-codegen-request-body-name: body
      x-pagination:
        cursorParam: body.page.cursor
        cursorPath: meta.page.after
        limitParam: body.page.limit
        resultsPath: data
      x-permission:
        operator: OR
        permissions:
          - logs_read_data
components:
  schemas:
    ContentEncoding:
      description: HTTP header used to compress the media-type.
      enum:
        - identity
        - gzip
        - deflate
      type: string
      x-enum-varnames:
        - IDENTITY
        - GZIP
        - DEFLATE
    HTTPLog:
      description: Structured log message.
      items:
        $ref: '#/components/schemas/HTTPLogItem'
      type: array
    HTTPLogErrors:
      description: Invalid query performed.
      properties:
        errors:
          description: Structured errors.
          items:
            $ref: '#/components/schemas/HTTPLogError'
          type: array
      type: object
    LogsAggregateRequest:
      description: >-
        The object sent with the request to retrieve a list of logs from your
        organization.
      properties:
        compute:
          description: >-
            The list of metrics or timeseries to compute for the retrieved
            buckets.
          items:
            $ref: '#/components/schemas/LogsCompute'
          type: array
        filter:
          $ref: '#/components/schemas/LogsQueryFilter'
        group_by:
          description: The rules for the group by
          items:
            $ref: '#/components/schemas/LogsGroupBy'
          type: array
        options:
          $ref: '#/components/schemas/LogsQueryOptions'
        page:
          $ref: '#/components/schemas/LogsAggregateRequestPage'
      type: object
    LogsAggregateResponse:
      description: The response object for the logs aggregate API endpoint
      properties:
        data:
          $ref: '#/components/schemas/LogsAggregateResponseData'
        meta:
          $ref: '#/components/schemas/LogsResponseMetadata'
      type: object
    LogsArchiveOrder:
      description: A ordered list of archive IDs.
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveOrderDefinition'
      type: object
    APIErrorResponse:
      description: API error response.
      properties:
        errors:
          description: A list of errors.
          example:
            - Bad Request
          items:
            description: A list of items.
            example: Bad Request
            type: string
          type: array
      required:
        - errors
      type: object
    LogsArchives:
      description: The available archives.
      properties:
        data:
          description: A list of archives.
          items:
            $ref: '#/components/schemas/LogsArchiveDefinition'
          type: array
      type: object
    LogsArchiveCreateRequest:
      description: The logs archive.
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveCreateRequestDefinition'
      type: object
    LogsArchive:
      description: The logs archive.
      properties:
        data:
          $ref: '#/components/schemas/LogsArchiveDefinition'
      type: object
    RelationshipToRole:
      description: Relationship to role.
      properties:
        data:
          $ref: '#/components/schemas/RelationshipToRoleData'
      type: object
    RolesResponse:
      description: Response containing information about multiple roles.
      properties:
        data:
          description: Array of returned roles.
          items:
            $ref: '#/components/schemas/Role'
          type: array
        meta:
          $ref: '#/components/schemas/ResponseMetaAttributes'
      type: object
    CustomDestinationsResponse:
      description: The available custom destinations.
      properties:
        data:
          description: A list of custom destinations.
          items:
            $ref: '#/components/schemas/CustomDestinationResponseDefinition'
          type: array
      type: object
    CustomDestinationCreateRequest:
      description: The custom destination.
      properties:
        data:
          $ref: '#/components/schemas/CustomDestinationCreateRequestDefinition'
      type: object
    CustomDestinationResponse:
      description: The custom destination.
      properties:
        data:
          $ref: '#/components/schemas/CustomDestinationResponseDefinition'
      type: object
    CustomDestinationUpdateRequest:
      description: The custom destination.
      properties:
        data:
          $ref: '#/components/schemas/CustomDestinationUpdateRequestDefinition'
      type: object
    LogsMetricsResponse:
      description: All the available log-based metric objects.
      properties:
        data:
          description: A list of log-based metric objects.
          items:
            $ref: '#/components/schemas/LogsMetricResponseData'
          type: array
      type: object
    LogsMetricCreateRequest:
      description: The new log-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricCreateData'
      required:
        - data
      type: object
    LogsMetricResponse:
      description: The log-based metric object.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricResponseData'
      type: object
    LogsMetricUpdateRequest:
      description: The new log-based metric body.
      properties:
        data:
          $ref: '#/components/schemas/LogsMetricUpdateData'
      required:
        - data
      type: object
    LogsStorageTier:
      default: indexes
      description: Specifies storage type as indexes, online-archives or flex
      enum:
        - indexes
        - online-archives
        - flex
      example: indexes
      type: string
      x-enum-varnames:
        - INDEXES
        - ONLINE_ARCHIVES
        - FLEX
    LogsSort:
      description: Sort parameters when querying logs.
      enum:
        - timestamp
        - '-timestamp'
      type: string
      x-enum-varnames:
        - TIMESTAMP_ASCENDING
        - TIMESTAMP_DESCENDING
    LogsListResponse:
      description: >-
        Response object with all logs matching the request and pagination
        information.
      properties:
        data:
          description: Array of logs matching the request.
          items:
            $ref: '#/components/schemas/Log'
          type: array
        links:
          $ref: '#/components/schemas/LogsListResponseLinks'
        meta:
          $ref: '#/components/schemas/LogsResponseMetadata'
      type: object
    LogsListRequest:
      description: The request for a logs list.
      properties:
        filter:
          $ref: '#/components/schemas/LogsQueryFilter'
        options:
          $ref: '#/components/schemas/LogsQueryOptions'
        page:
          $ref: '#/components/schemas/LogsListRequestPage'
        sort:
          $ref: '#/components/schemas/LogsSort'
      type: object
    HTTPLogItem:
      additionalProperties:
        description: Additional log attributes.
      description: Logs that are sent over HTTP.
      properties:
        ddsource:
          description: >-
            The integration name associated with your log: the technology from
            which the log originated.

            When it matches an integration name, Datadog automatically installs
            the corresponding parsers and facets.

            See [reserved
            attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).
          example: nginx
          type: string
        ddtags:
          description: Tags associated with your logs.
          example: env:staging,version:5.1
          type: string
        hostname:
          description: The name of the originating host of the log.
          example: i-012345678
          type: string
        message:
          description: >-
            The message [reserved
            attribute](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message
            attribute as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where
            it is indexed for full text search.
          example: 2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World
          type: string
        service:
          description: >-
            The name of the application or service generating the log events.

            It is used to switch from Logs to APM, so make sure you define the
            same value when you use both products.

            See [reserved
            attributes](https://docs.datadoghq.com/logs/log_configuration/attributes_naming_convention/#reserved-attributes).
          example: payment
          type: string
      required:
        - message
      type: object
    HTTPLogError:
      description: List of errors.
      properties:
        detail:
          description: Error message.
          example: Malformed payload
          type: string
        status:
          description: Error code.
          example: '400'
          type: string
        title:
          description: Error title.
          example: Bad Request
          type: string
      type: object
    LogsCompute:
      description: A compute rule to compute metrics or timeseries
      properties:
        aggregation:
          $ref: '#/components/schemas/LogsAggregationFunction'
        interval:
          description: |-
            The time buckets' size (only used for type=timeseries)
            Defaults to a resolution of 150 points
          example: 5m
          type: string
        metric:
          description: The metric to use
          example: '@duration'
          type: string
        type:
          $ref: '#/components/schemas/LogsComputeType'
      required:
        - aggregation
      type: object
    LogsQueryFilter:
      description: The search and filter query settings
      properties:
        from:
          default: now-15m
          description: >-
            The minimum time for the requested logs, supports date math and
            regular timestamps (milliseconds).
          example: now-15m
          type: string
        indexes:
          default:
            - '*'
          description: >-
            For customers with multiple indexes, the indexes to search. Defaults
            to ['*'] which means all indexes.
          example:
            - main
            - web
          items:
            description: The name of a log index.
            type: string
          type: array
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
        storage_tier:
          $ref: '#/components/schemas/LogsStorageTier'
        to:
          default: now
          description: >-
            The maximum time for the requested logs, supports date math and
            regular timestamps (milliseconds).
          example: now
          type: string
      type: object
    LogsGroupBy:
      description: A group by rule
      properties:
        facet:
          description: The name of the facet to use (required)
          example: host
          type: string
        histogram:
          $ref: '#/components/schemas/LogsGroupByHistogram'
        limit:
          default: 10
          description: >-
            The maximum buckets to return for this group by. Note: at most 10000
            buckets are allowed.

            If grouping by multiple facets, the product of limits must not
            exceed 10000.
          format: int64
          type: integer
        missing:
          $ref: '#/components/schemas/LogsGroupByMissing'
        sort:
          $ref: '#/components/schemas/LogsAggregateSort'
        total:
          $ref: '#/components/schemas/LogsGroupByTotal'
      required:
        - facet
      type: object
    LogsQueryOptions:
      deprecated: true
      description: >-
        Global query options that are used during the query.

        Note: These fields are currently deprecated and do not affect the query
        results.
      properties:
        timeOffset:
          description: The time offset (in seconds) to apply to the query.
          format: int64
          type: integer
        timezone:
          default: UTC
          description: >-
            The timezone can be specified as GMT, UTC, an offset from UTC (like
            UTC+1), or as a Timezone Database identifier (like
            America/New_York).
          example: GMT
          type: string
      type: object
    LogsAggregateRequestPage:
      description: Paging settings
      properties:
        cursor:
          description: >-
            The returned paging point to use to get the next results. Note: at
            most 1000 results can be paged.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsAggregateResponseData:
      description: The query results
      properties:
        buckets:
          description: The list of matching buckets, one item per bucket
          items:
            $ref: '#/components/schemas/LogsAggregateBucket'
          type: array
      type: object
    LogsResponseMetadata:
      description: The metadata associated with a request
      properties:
        elapsed:
          description: The time elapsed in milliseconds
          example: 132
          format: int64
          type: integer
        page:
          $ref: '#/components/schemas/LogsResponseMetadataPage'
        request_id:
          description: The identifier of the request
          example: MWlFUjVaWGZTTTZPYzM0VXp1OXU2d3xLSVpEMjZKQ0VKUTI0dEYtM3RSOFVR
          type: string
        status:
          $ref: '#/components/schemas/LogsAggregateResponseStatus'
        warnings:
          description: >-
            A list of warnings (non fatal errors) encountered, partial results
            might be returned if

            warnings are present in the response.
          items:
            $ref: '#/components/schemas/LogsWarning'
          type: array
      type: object
    LogsArchiveOrderDefinition:
      description: The definition of an archive order.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveOrderAttributes'
        type:
          $ref: '#/components/schemas/LogsArchiveOrderDefinitionType'
      required:
        - type
        - attributes
      type: object
    LogsArchiveDefinition:
      description: The definition of an archive.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveAttributes'
        id:
          description: The archive ID.
          example: a2zcMylnM4OCHpYusxIi3g
          readOnly: true
          type: string
        type:
          default: archives
          description: The type of the resource. The value should always be archives.
          example: archives
          readOnly: true
          type: string
      required:
        - type
      type: object
    LogsArchiveCreateRequestDefinition:
      description: The definition of an archive.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsArchiveCreateRequestAttributes'
        type:
          default: archives
          description: The type of the resource. The value should always be archives.
          example: archives
          type: string
      required:
        - type
      type: object
    RelationshipToRoleData:
      description: Relationship to role object.
      properties:
        id:
          description: The unique identifier of the role.
          example: 3653d3c6-0c75-11ea-ad28-fb5701eabc7d
          type: string
        type:
          $ref: '#/components/schemas/RolesType'
      type: object
    Role:
      description: Role object returned by the API.
      properties:
        attributes:
          $ref: '#/components/schemas/RoleAttributes'
        id:
          description: The unique identifier of the role.
          type: string
        relationships:
          $ref: '#/components/schemas/RoleResponseRelationships'
        type:
          $ref: '#/components/schemas/RolesType'
      required:
        - type
      type: object
    ResponseMetaAttributes:
      description: Object describing meta attributes of response.
      properties:
        page:
          $ref: '#/components/schemas/Pagination'
      type: object
    CustomDestinationResponseDefinition:
      description: The definition of a custom destination.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomDestinationResponseAttributes'
        id:
          description: The custom destination ID.
          example: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationType'
      type: object
    CustomDestinationCreateRequestDefinition:
      description: The definition of a custom destination.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomDestinationCreateRequestAttributes'
        type:
          $ref: '#/components/schemas/CustomDestinationType'
      required:
        - type
        - attributes
      type: object
    CustomDestinationUpdateRequestDefinition:
      description: The definition of a custom destination.
      properties:
        attributes:
          $ref: '#/components/schemas/CustomDestinationUpdateRequestAttributes'
        id:
          description: The custom destination ID.
          example: be5d7a69-d0c8-4d4d-8ee8-bba292d98139
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationType'
      required:
        - type
        - id
      type: object
    LogsMetricResponseData:
      description: The log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricResponseAttributes'
        id:
          $ref: '#/components/schemas/LogsMetricID'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      type: object
    LogsMetricCreateData:
      description: The new log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricCreateAttributes'
        id:
          $ref: '#/components/schemas/LogsMetricID'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
        - id
        - type
        - attributes
      type: object
    LogsMetricUpdateData:
      description: The new log-based metric properties.
      properties:
        attributes:
          $ref: '#/components/schemas/LogsMetricUpdateAttributes'
        type:
          $ref: '#/components/schemas/LogsMetricType'
      required:
        - type
        - attributes
      type: object
    Log:
      description: Object description of a log after being processed and stored by Datadog.
      properties:
        attributes:
          $ref: '#/components/schemas/LogAttributes'
        id:
          description: Unique ID of the Log.
          example: AAAAAWgN8Xwgr1vKDQAAAABBV2dOOFh3ZzZobm1mWXJFYTR0OA
          type: string
        type:
          $ref: '#/components/schemas/LogType'
      type: object
    LogsListResponseLinks:
      description: Links attributes.
      properties:
        next:
          description: >-
            Link for the next set of results. Note that the request can also be
            made using the

            POST endpoint.
          example: >-
            https://app.datadoghq.com/api/v2/logs/event?filter[query]=foo&page[cursor]=eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsListRequestPage:
      description: Paging attributes for listing logs.
      properties:
        cursor:
          description: List following results with a cursor provided in the previous query.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
        limit:
          default: 10
          description: Maximum number of logs in the response.
          example: 25
          format: int32
          maximum: 1000
          type: integer
      type: object
    LogsAggregationFunction:
      description: An aggregation function
      enum:
        - count
        - cardinality
        - pc75
        - pc90
        - pc95
        - pc98
        - pc99
        - sum
        - min
        - max
        - avg
        - median
      example: pc90
      type: string
      x-enum-varnames:
        - COUNT
        - CARDINALITY
        - PERCENTILE_75
        - PERCENTILE_90
        - PERCENTILE_95
        - PERCENTILE_98
        - PERCENTILE_99
        - SUM
        - MIN
        - MAX
        - AVG
        - MEDIAN
    LogsComputeType:
      default: total
      description: The type of compute
      enum:
        - timeseries
        - total
      type: string
      x-enum-varnames:
        - TIMESERIES
        - TOTAL
    LogsGroupByHistogram:
      description: >-
        Used to perform a histogram computation (only for measure facets).

        Note: at most 100 buckets are allowed, the number of buckets is (max -
        min)/interval.
      properties:
        interval:
          description: The bin size of the histogram buckets
          example: 10
          format: double
          type: number
        max:
          description: |-
            The maximum value for the measure used in the histogram
            (values greater than this one are filtered out)
          example: 100
          format: double
          type: number
        min:
          description: |-
            The minimum value for the measure used in the histogram
            (values smaller than this one are filtered out)
          example: 50
          format: double
          type: number
      required:
        - interval
        - min
        - max
      type: object
    LogsGroupByMissing:
      description: The value to use for logs that don't have the facet used to group by
      oneOf:
        - $ref: '#/components/schemas/LogsGroupByMissingString'
        - $ref: '#/components/schemas/LogsGroupByMissingNumber'
    LogsAggregateSort:
      description: A sort rule
      example:
        aggregation: count
        order: asc
      properties:
        aggregation:
          $ref: '#/components/schemas/LogsAggregationFunction'
        metric:
          description: The metric to sort by (only used for `type=measure`)
          example: '@duration'
          type: string
        order:
          $ref: '#/components/schemas/LogsSortOrder'
        type:
          $ref: '#/components/schemas/LogsAggregateSortType'
      type: object
    LogsGroupByTotal:
      default: false
      description: >-
        A resulting object to put the given computes in over all the matching
        records.
      oneOf:
        - $ref: '#/components/schemas/LogsGroupByTotalBoolean'
        - $ref: '#/components/schemas/LogsGroupByTotalString'
        - $ref: '#/components/schemas/LogsGroupByTotalNumber'
    LogsAggregateBucket:
      description: A bucket values
      properties:
        by:
          additionalProperties:
            description: The values for each group by
          description: The key, value pairs for each group by
          example:
            '@state': success
            '@version': abc
          type: object
        computes:
          additionalProperties:
            $ref: '#/components/schemas/LogsAggregateBucketValue'
          description: >-
            A map of the metric name -> value for regular compute or list of
            values for a timeseries
          type: object
      type: object
    LogsResponseMetadataPage:
      description: Paging attributes.
      properties:
        after:
          description: >-
            The cursor to use to get the next results, if any. To make the next
            request, use the same

            parameters with the addition of the `page[cursor]`.
          example: >-
            eyJzdGFydEF0IjoiQVFBQUFYS2tMS3pPbm40NGV3QUFBQUJCV0V0clRFdDZVbG8zY3pCRmNsbHJiVmxDWlEifQ==
          type: string
      type: object
    LogsAggregateResponseStatus:
      description: The status of the response
      enum:
        - done
        - timeout
      example: done
      type: string
      x-enum-varnames:
        - DONE
        - TIMEOUT
    LogsWarning:
      description: A warning message indicating something that went wrong with the query
      properties:
        code:
          description: A unique code for this type of warning
          example: unknown_index
          type: string
        detail:
          description: A detailed explanation of this specific warning
          example: 'indexes: foo, bar'
          type: string
        title:
          description: A short human-readable summary of the warning
          example: >-
            One or several indexes are missing or invalid, results hold data
            from the other indexes
          type: string
      type: object
    LogsArchiveOrderAttributes:
      description: The attributes associated with the archive order.
      properties:
        archive_ids:
          description: >-
            An ordered array of `<ARCHIVE_ID>` strings, the order of archive IDs
            in the array

            define the overall archives order for Datadog.
          example:
            - a2zcMylnM4OCHpYusxIi1g
            - a2zcMylnM4OCHpYusxIi2g
            - a2zcMylnM4OCHpYusxIi3g
          items:
            description: A given archive ID.
            type: string
          type: array
      required:
        - archive_ids
      type: object
    LogsArchiveOrderDefinitionType:
      default: archive_order
      description: Type of the archive order definition.
      enum:
        - archive_order
      example: archive_order
      type: string
      x-enum-varnames:
        - ARCHIVE_ORDER
    LogsArchiveAttributes:
      description: The attributes associated with the archive.
      properties:
        destination:
          $ref: '#/components/schemas/LogsArchiveDestination'
        include_tags:
          default: false
          description: >-
            To store the tags in the archive, set the value "true".

            If it is set to "false", the tags will be deleted when the logs are
            sent to the archive.
          example: false
          type: boolean
        name:
          description: The archive name.
          example: Nginx Archive
          type: string
        query:
          description: >-
            The archive query/filter. Logs matching this query are included in
            the archive.
          example: source:nginx
          type: string
        rehydration_max_scan_size_in_gb:
          description: Maximum scan size for rehydration from this archive.
          example: 100
          format: int64
          nullable: true
          type: integer
        rehydration_tags:
          description: An array of tags to add to rehydrated logs from an archive.
          example:
            - team:intake
            - team:app
          items:
            description: A given tag in the `<KEY>:<VALUE>` format.
            type: string
          type: array
        state:
          $ref: '#/components/schemas/LogsArchiveState'
      required:
        - name
        - query
        - destination
      type: object
    LogsArchiveCreateRequestAttributes:
      description: The attributes associated with the archive.
      properties:
        destination:
          $ref: '#/components/schemas/LogsArchiveCreateRequestDestination'
        include_tags:
          default: false
          description: >-
            To store the tags in the archive, set the value "true".

            If it is set to "false", the tags will be deleted when the logs are
            sent to the archive.
          example: false
          type: boolean
        name:
          description: The archive name.
          example: Nginx Archive
          type: string
        query:
          description: >-
            The archive query/filter. Logs matching this query are included in
            the archive.
          example: source:nginx
          type: string
        rehydration_max_scan_size_in_gb:
          description: Maximum scan size for rehydration from this archive.
          example: 100
          format: int64
          nullable: true
          type: integer
        rehydration_tags:
          description: An array of tags to add to rehydrated logs from an archive.
          example:
            - team:intake
            - team:app
          items:
            description: A given tag in the `<KEY>:<VALUE>` format.
            type: string
          type: array
      required:
        - name
        - query
        - destination
      type: object
    RolesType:
      default: roles
      description: Roles type.
      enum:
        - roles
      example: roles
      type: string
      x-enum-varnames:
        - ROLES
    RoleAttributes:
      description: Attributes of the role.
      properties:
        created_at:
          description: Creation time of the role.
          format: date-time
          readOnly: true
          type: string
        modified_at:
          description: Time of last role modification.
          format: date-time
          readOnly: true
          type: string
        name:
          description: >-
            The name of the role. The name is neither unique nor a stable
            identifier of the role.
          type: string
        user_count:
          description: Number of users with that role.
          format: int64
          readOnly: true
          type: integer
      type: object
    RoleResponseRelationships:
      description: Relationships of the role object returned by the API.
      properties:
        permissions:
          $ref: '#/components/schemas/RelationshipToPermissions'
      type: object
    Pagination:
      description: Pagination object.
      properties:
        total_count:
          description: Total count.
          format: int64
          type: integer
        total_filtered_count:
          description: Total count of elements matched by the filter.
          format: int64
          type: integer
      type: object
    CustomDestinationResponseAttributes:
      description: The attributes associated with the custom destination.
      properties:
        enabled:
          default: true
          description: >-
            Whether logs matching this custom destination should be forwarded or
            not.
          example: true
          type: boolean
        forward_tags:
          default: true
          description: Whether tags from the forwarded logs should be forwarded or not.
          example: true
          type: boolean
        forward_tags_restriction_list:
          default: []
          description: >-
            List of [keys of
            tags](https://docs.datadoghq.com/getting_started/tagging/#define-tags)
            to be filtered.


            An empty list represents no restriction is in place and either all
            or no tags will be

            forwarded depending on `forward_tags_restriction_list_type`
            parameter.
          example:
            - datacenter
            - host
          items:
            description: >-
              The [key part of a
              tag](https://docs.datadoghq.com/getting_started/tagging/#define-tags).
            type: string
          maxItems: 10
          minItems: 0
          type: array
        forward_tags_restriction_list_type:
          $ref: >-
            #/components/schemas/CustomDestinationAttributeTagsRestrictionListType
        forwarder_destination:
          $ref: '#/components/schemas/CustomDestinationResponseForwardDestination'
        name:
          description: The custom destination name.
          example: Nginx logs
          type: string
        query:
          default: ''
          description: >-
            The custom destination query filter. Logs matching this query are
            forwarded to the destination.
          example: source:nginx
          type: string
      type: object
    CustomDestinationType:
      default: custom_destination
      description: >-
        The type of the resource. The value should always be
        `custom_destination`.
      enum:
        - custom_destination
      example: custom_destination
      type: string
      x-enum-varnames:
        - CUSTOM_DESTINATION
    CustomDestinationCreateRequestAttributes:
      description: The attributes associated with the custom destination.
      properties:
        enabled:
          default: true
          description: >-
            Whether logs matching this custom destination should be forwarded or
            not.
          example: true
          type: boolean
        forward_tags:
          default: true
          description: Whether tags from the forwarded logs should be forwarded or not.
          example: true
          type: boolean
        forward_tags_restriction_list:
          default: []
          description: >-
            List of [keys of
            tags](https://docs.datadoghq.com/getting_started/tagging/#define-tags)
            to be filtered.


            An empty list represents no restriction is in place and either all
            or no tags will be

            forwarded depending on `forward_tags_restriction_list_type`
            parameter.
          example:
            - datacenter
            - host
          items:
            description: >-
              The [key part of a
              tag](https://docs.datadoghq.com/getting_started/tagging/#define-tags).
            type: string
          maxItems: 10
          minItems: 0
          type: array
        forward_tags_restriction_list_type:
          $ref: >-
            #/components/schemas/CustomDestinationAttributeTagsRestrictionListType
        forwarder_destination:
          $ref: '#/components/schemas/CustomDestinationForwardDestination'
        name:
          description: The custom destination name.
          example: Nginx logs
          type: string
        query:
          default: ''
          description: >-
            The custom destination query and filter. Logs matching this query
            are forwarded to the destination.
          example: source:nginx
          type: string
      required:
        - name
        - forwarder_destination
      type: object
    CustomDestinationUpdateRequestAttributes:
      description: The attributes associated with the custom destination.
      properties:
        enabled:
          default: true
          description: >-
            Whether logs matching this custom destination should be forwarded or
            not.
          example: true
          type: boolean
        forward_tags:
          default: true
          description: Whether tags from the forwarded logs should be forwarded or not.
          example: true
          type: boolean
        forward_tags_restriction_list:
          default: []
          description: >-
            List of [keys of
            tags](https://docs.datadoghq.com/getting_started/tagging/#define-tags)
            to be restricted from being forwarded.

            An empty list represents no restriction is in place and either all
            or no tags will be forwarded depending on
            `forward_tags_restriction_list_type` parameter.
          example:
            - datacenter
            - host
          items:
            description: >-
              The [key part of a
              tag](https://docs.datadoghq.com/getting_started/tagging/#define-tags).
            type: string
          maxItems: 10
          minItems: 0
          type: array
        forward_tags_restriction_list_type:
          $ref: >-
            #/components/schemas/CustomDestinationAttributeTagsRestrictionListType
        forwarder_destination:
          $ref: '#/components/schemas/CustomDestinationForwardDestination'
        name:
          description: The custom destination name.
          example: Nginx logs
          type: string
        query:
          default: ''
          description: >-
            The custom destination query and filter. Logs matching this query
            are forwarded to the destination.
          example: source:nginx
          type: string
      type: object
    LogsMetricResponseAttributes:
      description: The object describing a Datadog log-based metric.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricResponseCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricResponseFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricResponseGroupBy'
          type: array
      type: object
    LogsMetricID:
      description: The name of the log-based metric.
      example: logs.page.load.count
      type: string
    LogsMetricType:
      default: logs_metrics
      description: The type of the resource. The value should always be logs_metrics.
      enum:
        - logs_metrics
      example: logs_metrics
      type: string
      x-enum-varnames:
        - LOGS_METRICS
    LogsMetricCreateAttributes:
      description: The object describing the Datadog log-based metric to create.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      required:
        - compute
      type: object
    LogsMetricUpdateAttributes:
      description: The log-based metric properties that will be updated.
      properties:
        compute:
          $ref: '#/components/schemas/LogsMetricUpdateCompute'
        filter:
          $ref: '#/components/schemas/LogsMetricFilter'
        group_by:
          description: The rules for the group by.
          items:
            $ref: '#/components/schemas/LogsMetricGroupBy'
          type: array
      type: object
    LogAttributes:
      description: JSON object containing all log attributes and their associated values.
      properties:
        attributes:
          additionalProperties: {}
          description: JSON object of attributes from your log.
          example:
            customAttribute: 123
            duration: 2345
          type: object
        host:
          description: Name of the machine from where the logs are being sent.
          example: i-0123
          type: string
        message:
          description: >-
            The message [reserved
            attribute](https://docs.datadoghq.com/logs/log_collection/#reserved-attributes)

            of your log. By default, Datadog ingests the value of the message
            attribute as the body of the log entry.

            That value is then highlighted and displayed in the Logstream, where
            it is indexed for full text search.
          example: Host connected to remote
          type: string
        service:
          description: >-
            The name of the application or service generating the log events.

            It is used to switch from Logs to APM, so make sure you define the
            same

            value when you use both products.
          example: agent
          type: string
        status:
          description: Status of the message associated with your log.
          example: INFO
          type: string
        tags:
          description: Array of tags associated with your log.
          example:
            - team:A
          items:
            description: Tag associated with your log.
            type: string
          type: array
        timestamp:
          description: Timestamp of your log.
          example: '2019-01-02T09:42:36.320Z'
          format: date-time
          type: string
      type: object
    LogType:
      default: log
      description: Type of the event.
      enum:
        - log
      example: log
      type: string
      x-enum-varnames:
        - LOG
    LogsGroupByMissingString:
      description: The missing value to use if there is string valued facet.
      type: string
    LogsGroupByMissingNumber:
      description: The missing value to use if there is a number valued facet.
      format: double
      type: number
    LogsSortOrder:
      description: The order to use, ascending or descending
      enum:
        - asc
        - desc
      example: asc
      type: string
      x-enum-varnames:
        - ASCENDING
        - DESCENDING
    LogsAggregateSortType:
      default: alphabetical
      description: The type of sorting algorithm
      enum:
        - alphabetical
        - measure
      type: string
      x-enum-varnames:
        - ALPHABETICAL
        - MEASURE
    LogsGroupByTotalBoolean:
      description: If set to true, creates an additional bucket labeled "$facet_total"
      type: boolean
    LogsGroupByTotalString:
      description: A string to use as the key value for the total bucket
      type: string
    LogsGroupByTotalNumber:
      description: A number to use as the key value for the total bucket
      format: double
      type: number
    LogsAggregateBucketValue:
      description: A bucket value, can be either a timeseries or a single value
      oneOf:
        - $ref: '#/components/schemas/LogsAggregateBucketValueSingleString'
        - $ref: '#/components/schemas/LogsAggregateBucketValueSingleNumber'
        - $ref: '#/components/schemas/LogsAggregateBucketValueTimeseries'
    LogsArchiveDestination:
      description: An archive's destination.
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/LogsArchiveDestinationAzure'
        - $ref: '#/components/schemas/LogsArchiveDestinationGCS'
        - $ref: '#/components/schemas/LogsArchiveDestinationS3'
      type: object
    LogsArchiveState:
      description: The state of the archive.
      enum:
        - UNKNOWN
        - WORKING
        - FAILING
        - WORKING_AUTH_LEGACY
      example: WORKING
      type: string
      x-enum-varnames:
        - UNKNOWN
        - WORKING
        - FAILING
        - WORKING_AUTH_LEGACY
    LogsArchiveCreateRequestDestination:
      description: An archive's destination.
      oneOf:
        - $ref: '#/components/schemas/LogsArchiveDestinationAzure'
        - $ref: '#/components/schemas/LogsArchiveDestinationGCS'
        - $ref: '#/components/schemas/LogsArchiveDestinationS3'
    RelationshipToPermissions:
      description: Relationship to multiple permissions objects.
      properties:
        data:
          description: Relationships to permission objects.
          items:
            $ref: '#/components/schemas/RelationshipToPermissionData'
          type: array
      type: object
    CustomDestinationAttributeTagsRestrictionListType:
      default: ALLOW_LIST
      description: >-
        How `forward_tags_restriction_list` parameter should be interpreted.

        If `ALLOW_LIST`, then only tags whose keys on the forwarded logs match
        the ones on the restriction list

        are forwarded.


        `BLOCK_LIST` works the opposite way. It does not forward the tags
        matching the ones on the list.
      enum:
        - ALLOW_LIST
        - BLOCK_LIST
      example: ALLOW_LIST
      type: string
      x-enum-varnames:
        - ALLOW_LIST
        - BLOCK_LIST
    CustomDestinationResponseForwardDestination:
      description: A custom destination's location to forward logs.
      oneOf:
        - $ref: '#/components/schemas/CustomDestinationResponseForwardDestinationHttp'
        - $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationSplunk
        - $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationElasticsearch
        - $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationMicrosoftSentinel
    CustomDestinationForwardDestination:
      description: A custom destination's location to forward logs.
      oneOf:
        - $ref: '#/components/schemas/CustomDestinationForwardDestinationHttp'
        - $ref: '#/components/schemas/CustomDestinationForwardDestinationSplunk'
        - $ref: >-
            #/components/schemas/CustomDestinationForwardDestinationElasticsearch
        - $ref: >-
            #/components/schemas/CustomDestinationForwardDestinationMicrosoftSentinel
    LogsMetricResponseCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricResponseComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the log-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      type: object
    LogsMetricResponseFilter:
      description: >-
        The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      properties:
        query:
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricResponseGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: status_code
          type: string
      type: object
    LogsMetricCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        aggregation_type:
          $ref: '#/components/schemas/LogsMetricComputeAggregationType'
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
        path:
          description: >-
            The path to the value the log-based metric will aggregate on (only
            used if the aggregation type is a "distribution").
          example: '@duration'
          type: string
      required:
        - aggregation_type
      type: object
    LogsMetricFilter:
      description: >-
        The log-based metric filter. Logs matching this filter will be
        aggregated in this metric.
      properties:
        query:
          default: '*'
          description: The search query - following the log search syntax.
          example: service:web* AND @http.status_code:[200 TO 299]
          type: string
      type: object
    LogsMetricGroupBy:
      description: A group by rule.
      properties:
        path:
          description: The path to the value the log-based metric will be aggregated over.
          example: '@http.status_code'
          type: string
        tag_name:
          description: >-
            Eventual name of the tag that gets created. By default, the path
            attribute is used as the tag name.
          example: status_code
          type: string
      required:
        - path
      type: object
    LogsMetricUpdateCompute:
      description: The compute rule to compute the log-based metric.
      properties:
        include_percentiles:
          $ref: '#/components/schemas/LogsMetricComputeIncludePercentiles'
      type: object
    LogsAggregateBucketValueSingleString:
      description: A single string value
      type: string
    LogsAggregateBucketValueSingleNumber:
      description: A single number value
      format: double
      type: number
    LogsAggregateBucketValueTimeseries:
      description: A timeseries array
      items:
        $ref: '#/components/schemas/LogsAggregateBucketValueTimeseriesPoint'
      type: array
      x-generate-alias-as-model: true
    LogsArchiveDestinationAzure:
      description: The Azure archive destination.
      properties:
        container:
          description: The container where the archive will be stored.
          example: container-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationAzure'
        path:
          description: The archive path.
          type: string
        region:
          description: The region where the archive will be stored.
          type: string
        storage_account:
          description: The associated storage account.
          example: account-name
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationAzureType'
      required:
        - storage_account
        - container
        - integration
        - type
      type: object
    LogsArchiveDestinationGCS:
      description: The GCS archive destination.
      properties:
        bucket:
          description: The bucket where the archive will be stored.
          example: bucket-name
          type: string
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationGCS'
        path:
          description: The archive path.
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationGCSType'
      required:
        - bucket
        - integration
        - type
      type: object
    LogsArchiveDestinationS3:
      description: The S3 archive destination.
      properties:
        bucket:
          description: The bucket where the archive will be stored.
          example: bucket-name
          type: string
        encryption:
          $ref: '#/components/schemas/LogsArchiveEncryptionS3'
        integration:
          $ref: '#/components/schemas/LogsArchiveIntegrationS3'
        path:
          description: The archive path.
          type: string
        storage_class:
          $ref: '#/components/schemas/LogsArchiveStorageClassS3Type'
        type:
          $ref: '#/components/schemas/LogsArchiveDestinationS3Type'
      required:
        - bucket
        - integration
        - type
      type: object
    RelationshipToPermissionData:
      description: Relationship to permission object.
      properties:
        id:
          description: ID of the permission.
          type: string
        type:
          $ref: '#/components/schemas/PermissionsType'
      type: object
    CustomDestinationResponseForwardDestinationHttp:
      description: The HTTP destination.
      properties:
        auth:
          $ref: '#/components/schemas/CustomDestinationResponseHttpDestinationAuth'
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationHttpType
      required:
        - type
        - endpoint
        - auth
      type: object
    CustomDestinationResponseForwardDestinationSplunk:
      description: The Splunk HTTP Event Collector (HEC) destination.
      properties:
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationSplunkType
      required:
        - type
        - endpoint
      type: object
    CustomDestinationResponseForwardDestinationElasticsearch:
      description: The Elasticsearch destination.
      properties:
        auth:
          $ref: >-
            #/components/schemas/CustomDestinationResponseElasticsearchDestinationAuth
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        index_name:
          description: >-
            Name of the Elasticsearch index (must follow [Elasticsearch's
            criteria](https://www.elastic.co/guide/en/elasticsearch/reference/8.11/indices-create-index.html#indices-create-api-path-params)).
          example: nginx-logs
          type: string
        index_rotation:
          description: >-
            Date pattern with US locale and UTC timezone to be appended to the
            index name after adding `-`

            (that is, `${index_name}-${indexPattern}`).

            You can customize the index rotation naming pattern by choosing one
            of these options:

            - Hourly: `yyyy-MM-dd-HH` (as an example, it would render:
            `2022-10-19-09`)

            - Daily: `yyyy-MM-dd` (as an example, it would render: `2022-10-19`)

            - Weekly: `yyyy-'W'ww` (as an example, it would render: `2022-W42`)

            - Monthly: `yyyy-MM` (as an example, it would render: `2022-10`)


            If this field is missing or is blank, it means that the index name
            will always be the same

            (that is, no rotation).
          example: yyyy-MM-dd
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationElasticsearchType
      required:
        - type
        - endpoint
        - auth
        - index_name
      type: object
    CustomDestinationResponseForwardDestinationMicrosoftSentinel:
      description: The Microsoft Sentinel destination.
      properties:
        client_id:
          description: Client ID from the Datadog Azure integration.
          example: 9a2f4d83-2b5e-429e-a35a-2b3c4182db71
          type: string
        data_collection_endpoint:
          description: Azure data collection endpoint.
          example: https://my-dce-5kyl.eastus-1.ingest.monitor.azure.com
          type: string
        data_collection_rule_id:
          description: Azure data collection rule ID.
          example: dcr-000a00a000a00000a000000aa000a0aa
          type: string
        stream_name:
          description: Azure stream name.
          example: Custom-MyTable
          type: string
          writeOnly: true
        tenant_id:
          description: Tenant ID from the Datadog Azure integration.
          example: f3c9a8a1-4c2e-4d2e-b911-9f3c28c3c8b2
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseForwardDestinationMicrosoftSentinelType
      required:
        - type
        - tenant_id
        - client_id
        - data_collection_endpoint
        - data_collection_rule_id
        - stream_name
      type: object
    CustomDestinationForwardDestinationHttp:
      description: The HTTP destination.
      properties:
        auth:
          $ref: '#/components/schemas/CustomDestinationHttpDestinationAuth'
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationForwardDestinationHttpType'
      required:
        - type
        - endpoint
        - auth
      type: object
    CustomDestinationForwardDestinationSplunk:
      description: The Splunk HTTP Event Collector (HEC) destination.
      properties:
        access_token:
          description: >-
            Access token of the Splunk HTTP Event Collector. This field is not
            returned by the API.
          example: splunk_access_token
          type: string
          writeOnly: true
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        type:
          $ref: '#/components/schemas/CustomDestinationForwardDestinationSplunkType'
      required:
        - type
        - endpoint
        - access_token
      type: object
    CustomDestinationForwardDestinationElasticsearch:
      description: The Elasticsearch destination.
      properties:
        auth:
          $ref: '#/components/schemas/CustomDestinationElasticsearchDestinationAuth'
        endpoint:
          description: >-
            The destination for which logs will be forwarded to.

            Must have HTTPS scheme and forwarding back to Datadog is not
            allowed.
          example: https://example.com
          type: string
        index_name:
          description: >-
            Name of the Elasticsearch index (must follow [Elasticsearch's
            criteria](https://www.elastic.co/guide/en/elasticsearch/reference/8.11/indices-create-index.html#indices-create-api-path-params)).
          example: nginx-logs
          type: string
        index_rotation:
          description: >-
            Date pattern with US locale and UTC timezone to be appended to the
            index name after adding `-`

            (that is, `${index_name}-${indexPattern}`).

            You can customize the index rotation naming pattern by choosing one
            of these options:

            - Hourly: `yyyy-MM-dd-HH` (as an example, it would render:
            `2022-10-19-09`)

            - Daily: `yyyy-MM-dd` (as an example, it would render: `2022-10-19`)

            - Weekly: `yyyy-'W'ww` (as an example, it would render: `2022-W42`)

            - Monthly: `yyyy-MM` (as an example, it would render: `2022-10`)


            If this field is missing or is blank, it means that the index name
            will always be the same

            (that is, no rotation).
          example: yyyy-MM-dd
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationForwardDestinationElasticsearchType
      required:
        - type
        - endpoint
        - auth
        - index_name
      type: object
    CustomDestinationForwardDestinationMicrosoftSentinel:
      description: The Microsoft Sentinel destination.
      properties:
        client_id:
          description: Client ID from the Datadog Azure integration.
          example: 9a2f4d83-2b5e-429e-a35a-2b3c4182db71
          type: string
        data_collection_endpoint:
          description: Azure data collection endpoint.
          example: https://my-dce-5kyl.eastus-1.ingest.monitor.azure.com
          type: string
        data_collection_rule_id:
          description: Azure data collection rule ID.
          example: dcr-000a00a000a00000a000000aa000a0aa
          type: string
        stream_name:
          description: Azure stream name.
          example: Custom-MyTable
          type: string
          writeOnly: true
        tenant_id:
          description: Tenant ID from the Datadog Azure integration.
          example: f3c9a8a1-4c2e-4d2e-b911-9f3c28c3c8b2
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationForwardDestinationMicrosoftSentinelType
      required:
        - type
        - tenant_id
        - client_id
        - data_collection_endpoint
        - data_collection_rule_id
        - stream_name
      type: object
    LogsMetricResponseComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    LogsMetricComputeIncludePercentiles:
      description: >-
        Toggle to include or exclude percentile aggregations for distribution
        metrics.

        Only present when the `aggregation_type` is `distribution`.
      example: true
      type: boolean
    LogsMetricComputeAggregationType:
      description: The type of aggregation to use.
      enum:
        - count
        - distribution
      example: distribution
      type: string
      x-enum-varnames:
        - COUNT
        - DISTRIBUTION
    LogsAggregateBucketValueTimeseriesPoint:
      description: A timeseries point
      properties:
        time:
          description: The time value for this point
          example: '2020-06-08T11:55:00Z'
          type: string
        value:
          description: The value for this point
          example: 19
          format: double
          type: number
      type: object
    LogsArchiveIntegrationAzure:
      description: The Azure archive's integration destination.
      properties:
        client_id:
          description: A client ID.
          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
          type: string
        tenant_id:
          description: A tenant ID.
          example: aaaaaaaa-1a1a-1a1a-1a1a-aaaaaaaaaaaa
          type: string
      required:
        - tenant_id
        - client_id
      type: object
    LogsArchiveDestinationAzureType:
      default: azure
      description: Type of the Azure archive destination.
      enum:
        - azure
      example: azure
      type: string
      x-enum-varnames:
        - AZURE
    LogsArchiveIntegrationGCS:
      description: The GCS archive's integration destination.
      properties:
        client_email:
          description: A client email.
          example: youremail@example.com
          type: string
        project_id:
          description: A project ID.
          example: project-id
          type: string
      required:
        - client_email
      type: object
    LogsArchiveDestinationGCSType:
      default: gcs
      description: Type of the GCS archive destination.
      enum:
        - gcs
      example: gcs
      type: string
      x-enum-varnames:
        - GCS
    LogsArchiveEncryptionS3:
      description: The S3 encryption settings.
      properties:
        key:
          description: An Amazon Resource Name (ARN) used to identify an AWS KMS key.
          example: arn:aws:kms:us-east-1:012345678901:key/DatadogIntegrationRoleKms
          type: string
        type:
          $ref: '#/components/schemas/LogsArchiveEncryptionS3Type'
      required:
        - type
      type: object
    LogsArchiveIntegrationS3:
      description: The S3 Archive's integration destination.
      properties:
        account_id:
          description: The account ID for the integration.
          example: '123456789012'
          type: string
        role_name:
          description: The path of the integration.
          example: role-name
          type: string
      required:
        - role_name
        - account_id
      type: object
    LogsArchiveStorageClassS3Type:
      default: STANDARD
      description: The storage class where the archive will be stored.
      enum:
        - STANDARD
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER_IR
      example: STANDARD
      type: string
      x-enum-varnames:
        - STANDARD
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER_IR
    LogsArchiveDestinationS3Type:
      default: s3
      description: Type of the S3 archive destination.
      enum:
        - s3
      example: s3
      type: string
      x-enum-varnames:
        - S3
    PermissionsType:
      default: permissions
      description: Permissions resource type.
      enum:
        - permissions
      example: permissions
      type: string
      x-enum-varnames:
        - PERMISSIONS
    CustomDestinationResponseHttpDestinationAuth:
      description: Authentication method of the HTTP requests.
      oneOf:
        - $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthBasic
        - $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthCustomHeader
    CustomDestinationResponseForwardDestinationHttpType:
      default: http
      description: Type of the HTTP destination.
      enum:
        - http
      example: http
      type: string
      x-enum-varnames:
        - HTTP
    CustomDestinationResponseForwardDestinationSplunkType:
      default: splunk_hec
      description: Type of the Splunk HTTP Event Collector (HEC) destination.
      enum:
        - splunk_hec
      example: splunk_hec
      type: string
      x-enum-varnames:
        - SPLUNK_HEC
    CustomDestinationResponseElasticsearchDestinationAuth:
      additionalProperties:
        description: Basic access authentication.
      description: Basic access authentication.
      type: object
    CustomDestinationResponseForwardDestinationElasticsearchType:
      default: elasticsearch
      description: Type of the Elasticsearch destination.
      enum:
        - elasticsearch
      example: elasticsearch
      type: string
      x-enum-varnames:
        - ELASTICSEARCH
    CustomDestinationResponseForwardDestinationMicrosoftSentinelType:
      default: microsoft_sentinel
      description: Type of the Microsoft Sentinel destination.
      enum:
        - microsoft_sentinel
      example: microsoft_sentinel
      type: string
      x-enum-varnames:
        - MICROSOFT_SENTINEL
    CustomDestinationHttpDestinationAuth:
      description: Authentication method of the HTTP requests.
      oneOf:
        - $ref: '#/components/schemas/CustomDestinationHttpDestinationAuthBasic'
        - $ref: >-
            #/components/schemas/CustomDestinationHttpDestinationAuthCustomHeader
    CustomDestinationForwardDestinationHttpType:
      default: http
      description: Type of the HTTP destination.
      enum:
        - http
      example: http
      type: string
      x-enum-varnames:
        - HTTP
    CustomDestinationForwardDestinationSplunkType:
      default: splunk_hec
      description: Type of the Splunk HTTP Event Collector (HEC) destination.
      enum:
        - splunk_hec
      example: splunk_hec
      type: string
      x-enum-varnames:
        - SPLUNK_HEC
    CustomDestinationElasticsearchDestinationAuth:
      description: Basic access authentication.
      properties:
        password:
          description: >-
            The password of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-password
          type: string
          writeOnly: true
        username:
          description: >-
            The username of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-username
          type: string
          writeOnly: true
      required:
        - username
        - password
      type: object
    CustomDestinationForwardDestinationElasticsearchType:
      default: elasticsearch
      description: Type of the Elasticsearch destination.
      enum:
        - elasticsearch
      example: elasticsearch
      type: string
      x-enum-varnames:
        - ELASTICSEARCH
    CustomDestinationForwardDestinationMicrosoftSentinelType:
      default: microsoft_sentinel
      description: Type of the Microsoft Sentinel destination.
      enum:
        - microsoft_sentinel
      example: microsoft_sentinel
      type: string
      x-enum-varnames:
        - MICROSOFT_SENTINEL
    LogsArchiveEncryptionS3Type:
      description: Type of S3 encryption for a destination.
      enum:
        - NO_OVERRIDE
        - SSE_S3
        - SSE_KMS
      example: SSE_S3
      type: string
      x-enum-varnames:
        - NO_OVERRIDE
        - SSE_S3
        - SSE_KMS
    CustomDestinationResponseHttpDestinationAuthBasic:
      description: Basic access authentication.
      properties:
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthBasicType
      required:
        - type
      type: object
    CustomDestinationResponseHttpDestinationAuthCustomHeader:
      description: Custom header access authentication.
      properties:
        header_name:
          description: The header name of the authentication.
          example: CUSTOM-HEADER-NAME
          type: string
        type:
          $ref: >-
            #/components/schemas/CustomDestinationResponseHttpDestinationAuthCustomHeaderType
      required:
        - type
        - header_name
      type: object
    CustomDestinationHttpDestinationAuthBasic:
      description: Basic access authentication.
      properties:
        password:
          description: >-
            The password of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-password
          type: string
          writeOnly: true
        type:
          $ref: '#/components/schemas/CustomDestinationHttpDestinationAuthBasicType'
        username:
          description: >-
            The username of the authentication. This field is not returned by
            the API.
          example: datadog-custom-destination-username
          type: string
          writeOnly: true
      required:
        - type
        - username
        - password
      type: object
    CustomDestinationHttpDestinationAuthCustomHeader:
      description: Custom header access authentication.
      properties:
        header_name:
          description: The header name of the authentication.
          example: CUSTOM-HEADER-NAME
          type: string
        header_value:
          description: >-
            The header value of the authentication. This field is not returned
            by the API.
          example: CUSTOM-HEADER-AUTHENTICATION-VALUE
          type: string
          writeOnly: true
        type:
          $ref: >-
            #/components/schemas/CustomDestinationHttpDestinationAuthCustomHeaderType
      required:
        - type
        - header_name
        - header_value
      type: object
    CustomDestinationResponseHttpDestinationAuthBasicType:
      default: basic
      description: Type of the basic access authentication.
      enum:
        - basic
      example: basic
      type: string
      x-enum-varnames:
        - BASIC
    CustomDestinationResponseHttpDestinationAuthCustomHeaderType:
      default: custom_header
      description: Type of the custom header access authentication.
      enum:
        - custom_header
      example: custom_header
      type: string
      x-enum-varnames:
        - CUSTOM_HEADER
    CustomDestinationHttpDestinationAuthBasicType:
      default: basic
      description: Type of the basic access authentication.
      enum:
        - basic
      example: basic
      type: string
      x-enum-varnames:
        - BASIC
    CustomDestinationHttpDestinationAuthCustomHeaderType:
      default: custom_header
      description: Type of the custom header access authentication.
      enum:
        - custom_header
      example: custom_header
      type: string
      x-enum-varnames:
        - CUSTOM_HEADER
  responses:
    BadRequestResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Bad Request
    NotAuthorizedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Authorized
    TooManyRequestsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Too many requests
    ForbiddenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Forbidden
    ConflictResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Conflict
    NotFoundResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIErrorResponse'
      description: Not Found
  parameters:
    ArchiveID:
      description: The ID of the archive.
      in: path
      name: archive_id
      required: true
      schema:
        type: string
    CustomDestinationId:
      description: The ID of the custom destination.
      in: path
      name: custom_destination_id
      required: true
      schema:
        type: string
    MetricID:
      description: The name of the log-based metric.
      in: path
      name: metric_id
      required: true
      schema:
        type: string
  x-stackQL-resources:
    logs:
      id: datadog.logs.logs
      name: logs
      title: Logs
      methods:
        submit_log:
          operation:
            $ref: '#/paths/~1api~1v2~1logs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '202'
        aggregate_logs:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1analytics~1aggregate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list_logs_get:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1events/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        list_logs:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1events~1search/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/logs/methods/list_logs_get'
        insert:
          - $ref: '#/components/x-stackQL-resources/logs/methods/submit_log'
          - $ref: '#/components/x-stackQL-resources/logs/methods/list_logs'
        update: []
        delete: []
        replace: []
    archive_order:
      id: datadog.logs.archive_order
      name: archive_order
      title: Archive Order
      methods:
        get_logs_archive_order:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archive-order/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_logs_archive_order:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archive-order/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/archive_order/methods/get_logs_archive_order
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/archive_order/methods/update_logs_archive_order
    archives:
      id: datadog.logs.archives
      name: archives
      title: Archives
      methods:
        list_logs_archives:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archives/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_logs_archive:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archives/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_logs_archive:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archives~1{archive_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_logs_archive:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archives~1{archive_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_logs_archive:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1archives~1{archive_id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/archives/methods/get_logs_archive'
          - $ref: >-
              #/components/x-stackQL-resources/archives/methods/list_logs_archives
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/archives/methods/create_logs_archive
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/archives/methods/delete_logs_archive
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/archives/methods/update_logs_archive
    archive_read_roles:
      id: datadog.logs.archive_read_roles
      name: archive_read_roles
      title: Archive Read Roles
      methods:
        remove_role_from_archive:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1logs~1config~1archives~1{archive_id}~1readers/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        list_archive_read_roles:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1logs~1config~1archives~1{archive_id}~1readers/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        add_read_role_to_archive:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1logs~1config~1archives~1{archive_id}~1readers/post
          response:
            mediaType: application/json
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/archive_read_roles/methods/list_archive_read_roles
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/archive_read_roles/methods/add_read_role_to_archive
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/archive_read_roles/methods/remove_role_from_archive
        replace: []
    custom_destinations:
      id: datadog.logs.custom_destinations
      name: custom_destinations
      title: Custom Destinations
      methods:
        list_logs_custom_destinations:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1custom-destinations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_logs_custom_destination:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1custom-destinations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_logs_custom_destination:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1logs~1config~1custom-destinations~1{custom_destination_id}/delete
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_logs_custom_destination:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1logs~1config~1custom-destinations~1{custom_destination_id}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_logs_custom_destination:
          operation:
            $ref: >-
              #/paths/~1api~1v2~1logs~1config~1custom-destinations~1{custom_destination_id}/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/custom_destinations/methods/get_logs_custom_destination
          - $ref: >-
              #/components/x-stackQL-resources/custom_destinations/methods/list_logs_custom_destinations
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/custom_destinations/methods/create_logs_custom_destination
        update:
          - $ref: >-
              #/components/x-stackQL-resources/custom_destinations/methods/update_logs_custom_destination
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/custom_destinations/methods/delete_logs_custom_destination
        replace: []
    metrics:
      id: datadog.logs.metrics
      name: metrics
      title: Metrics
      methods:
        list_logs_metrics:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1metrics/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        create_logs_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1metrics/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_logs_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1metrics~1{metric_id}/delete'
          response:
            mediaType: application/json
            openAPIDocKey: '204'
        get_logs_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1metrics~1{metric_id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
            objectKey: $.data
        update_logs_metric:
          operation:
            $ref: '#/paths/~1api~1v2~1logs~1config~1metrics~1{metric_id}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/metrics/methods/get_logs_metric'
          - $ref: '#/components/x-stackQL-resources/metrics/methods/list_logs_metrics'
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/metrics/methods/create_logs_metric
        update:
          - $ref: >-
              #/components/x-stackQL-resources/metrics/methods/update_logs_metric
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/metrics/methods/delete_logs_metric
        replace: []
servers:
  - url: >-
      https://{region:^(?:[^\:/]+(?:\:[0-9]+)?|[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+(?:\:[0-9]+)?)$}/
    variables:
      region:
        default: datadoghq.com
