openapi: 3.0.3
info:
  title: eventhooks API
  description: okta eventhooks API
  version: 5.1.0
paths:
  /api/v1/eventHooks:
    get:
      summary: List all event hooks
      description: Lists all event hooks
      operationId: listEventHooks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventHook'
              examples:
                RetrieveAllEventHooks:
                  $ref: '#/components/examples/RetrieveAllEventHooks'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.read
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an event hook
      description: >-
        Creates a new event hook for your organization in `ACTIVE` status. You
        pass an event hook object in the JSON payload

        of your request. That object represents the set of required information
        about the event hook you're registering, including:
          * The URI of your external service
          * The [events](https://developer.okta.com/docs/reference/api/event-types/) in Okta you want to subscribe to
          * An optional event hook filter that can reduce the number of event hook calls. This is a self-service Early Access (EA) feature.
            See [Create an event hook filter](https://developer.okta.com/docs/concepts/event-hooks/#create-an-event-hook-filter).

            Additionally, you can specify a secret API key for Okta to pass to your external service endpoint for security verification. Note that the API key you set here is unrelated to the Okta API token
        you must supply when making calls to Okta APIs. Optionally, you can
        specify extra headers that Okta passes to your external

        service with each call.

        Your external service must use a valid HTTPS endpoint.
      operationId: createEventHook
      x-codegen-request-body-name: eventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
            examples:
              CreateAnEventHook:
                $ref: '#/components/examples/CreateAnEventHook'
              CreateAnEventHookWithFilter:
                $ref: '#/components/examples/CreateAnEventHookWithFilter'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
              examples:
                CreateAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
                CreateAnEventHookWithFilter:
                  $ref: '#/components/examples/RetrieveAnEventHookWithFilter'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/eventHooks/{eventHookId}:
    get:
      summary: Retrieve an event hook
      description: Retrieves an event hook
      operationId: getEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
              examples:
                RetrieveAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.read
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace an event hook
      description: >-
        Replaces an event hook. Okta validates the new properties before
        replacing the existing values.

        Some event hook properties are immutable and can't be updated. Refer to
        the parameter description in the request body schema.


        >**Note:** Updating the `channel` property requires you to verify the
        hook again.
      operationId: replaceEventHook
      x-codegen-request-body-name: eventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
            examples:
              ReplaceAnEventHook:
                $ref: '#/components/examples/ReplaceAnEventHookWithFilter'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
              examples:
                ReplaceAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHookWithFilter'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an event hook
      description: >-
        Deletes the event hook that matches the provided `id`. After deletion,
        the event hook is unrecoverable.

        As a safety precaution, you can only delete event hooks with a status of
        `INACTIVE`.
      operationId: deleteEventHook
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      summary: Activate an event hook
      description: Activates the event hook that matches the provided `id`
      operationId: activateEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
              examples:
                ActivateAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      summary: Deactivate an event hook
      description: Deactivates the event hook that matches the provided `id`
      operationId: deactivateEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
              examples:
                DeactivateAnEventHook:
                  $ref: '#/components/examples/RetrieveADeactivatedEventHook'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      summary: Verify an event hook
      description: >-
        Verifies that the event hook matches the provided `eventHookId`. To
        verify ownership, your endpoint must send information back to Okta in
        JSON format. See [Event
        hooks](https://developer.okta.com/docs/concepts/event-hooks/#one-time-verification-request).


        Only `ACTIVE` and `VERIFIED` event hooks can receive events from Okta.


        If a response is not received within 3 seconds, the outbound request
        times out. One retry is attempted after a timeout or error response.

        If a successful response still isn't received, this operation returns a
        400 error with more information about the failure.
      operationId: verifyEventHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
              examples:
                VerifyAnEventHook:
                  $ref: '#/components/examples/RetrieveAnEventHook'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.eventHooks.manage
      tags:
        - EventHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathEventHookId'
components:
  schemas:
    EventHook:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          description: Timestamp of the event hook creation
          type: string
          format: date-time
          readOnly: true
        createdBy:
          description: The ID of the user who created the event hook
          type: string
          readOnly: true
        description:
          description: Description of the event hook
          type: string
          nullable: true
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          type: string
          description: Unique key for the event hook
          readOnly: true
        lastUpdated:
          description: Date of the last event hook update
          type: string
          format: date-time
          readOnly: true
        name:
          description: Display name for the event hook
          type: string
        status:
          description: Status of the event hook
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          readOnly: true
        verificationStatus:
          $ref: '#/components/schemas/EventHookVerificationStatus'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                deactivate:
                  $ref: '#/components/schemas/HrefObject'
                verify:
                  $ref: '#/components/schemas/HrefObject'
              type: object
      required:
        - name
        - events
        - channel
    EventHookChannel:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          $ref: '#/components/schemas/EventHookChannelType'
        version:
          description: >-
            Version of the channel. Currently the only supported version is
            `1.0.0``.
          type: string
      required:
        - type
        - config
        - version
    EventSubscriptions:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/EventHookFilters'
        items:
          $ref: '#/components/schemas/EventHookSubscribedEventTypes'
        type:
          $ref: '#/components/schemas/EventSubscriptionType'
      required:
        - type
        - items
    EventHookVerificationStatus:
      description: >-
        Verification status of the event hook. `UNVERIFIED` event hooks won't
        receive any events.
      type: string
      enum:
        - UNVERIFIED
        - VERIFIED
      readOnly: true
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    EventHookChannelConfig:
      type: object
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          description: >-
            Optional list of key/value pairs for headers that can be sent with
            the request to the external service. For example,

            `X-Other-Header` is an example of an optional header, with a value
            of `my-header-value`, that you want Okta to pass to your

            external service.
          type: array
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
        method:
          description: The method of the Okta event hook request
          type: string
          readOnly: true
        uri:
          description: >-
            The external service endpoint called to execute the event hook
            handler
          type: string
      required:
        - uri
    EventHookChannelType:
      description: The channel type. Currently supports `HTTP`.
      type: string
      enum:
        - HTTP
    EventHookFilters:
      nullable: true
      description: >-
        The optional filter defined on a specific event type


        > **Note:** Event hook filters is a [self-service Early Access
        (EA)](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/release-lifecycle/#early-access-ea)
        to enable.

        If you want to disable this feature, it's recommended to first remove
        all event filters.
      type: object
      properties:
        eventFilterMap:
          $ref: '#/components/schemas/EventHookFilterMap'
        type:
          type: string
          description: The type of filter. Currently only supports `EXPRESSION_LANGUAGE`
          readOnly: true
    EventHookSubscribedEventTypes:
      description: >-
        The subscribed event types that trigger the event hook. When you
        register an event hook

        you need to specify which events you want to subscribe to. To see the
        list of event types

        currently eligible for use in event hooks, use the [Event Types
        catalog](https://developer.okta.com/docs/reference/api/event-types/#catalog)

        and search with the parameter `event-hook-eligible`.
      items:
        type: string
      type: array
    EventSubscriptionType:
      description: The events object type. Currently supports `EVENT_TYPE`.
      type: string
      enum:
        - EVENT_TYPE
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    EventHookChannelConfigAuthScheme:
      description: >-
        The authentication scheme used for this request.


        To use Basic Auth for authentication, set `type` to `HEADER`,

        `key` to `Authorization`, and `value` to the Base64-encoded string of
        "username:password". Ensure that you include

        the scheme (including space) as part of the `value` parameter. For
        example, `Basic YWRtaW46c3VwZXJzZWNyZXQ=`.
      type: object
      properties:
        key:
          description: The name for the authorization header
          type: string
        type:
          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
        value:
          description: >-
            The header value. This secret key is passed to your external service
            endpoint for security verification.

            This property is not returned in the response.
          type: string
          writeOnly: true
    EventHookChannelConfigHeader:
      nullable: true
      type: object
      properties:
        key:
          description: The optional field or header name
          type: string
        value:
          description: The value for the key
          type: string
    EventHookFilterMap:
      description: The object that maps the filter to the event type
      items:
        $ref: '#/components/schemas/EventHookFilterMapObject'
      type: array
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    EventHookChannelConfigAuthSchemeType:
      description: The authentication scheme type. Currently only supports `HEADER`.
      type: string
      enum:
        - HEADER
    EventHookFilterMapObject:
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/EventHookFilterMapObjectCondition'
        event:
          type: string
          description: The filtered event type
    EventHookFilterMapObjectCondition:
      type: object
      properties:
        expression:
          type: string
          description: The Okta Expression language statement that filters the event type
        version:
          type: string
          nullable: true
          description: Internal field
          readOnly: true
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathEventHookId:
      name: eventHookId
      description: '`id` of the Event Hook'
      in: path
      required: true
      schema:
        type: string
        example: who8vt36qfNpCGz9H1e6
  examples:
    RetrieveAllEventHooks:
      summary: Retrieves all event hooks
      value:
        - id: who8tsqyrhCdmetzx135
          status: ACTIVE
          verificationStatus: VERIFIED
          name: Event Hook Test
          description: null
          created: '2023-07-07T17:41:56.000Z'
          createdBy: 00u7xut94qEWYx5ss1e5
          lastUpdated: '2023-07-07T17:43:03.000Z'
          events:
            type: EVENT_TYPE
            items:
              - user.lifecycle.deactivate
              - user.lifecycle.activate
            filter: null
          channel:
            type: HTTP
            version: 1.0.0
            config:
              uri: https://example_external_service/userDeactivate
              headers: []
              method: POST
              authScheme:
                type: HEADER
                key: authorization
          _links:
            self:
              href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx135
            verify:
              href: >-
                https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx135/lifecycle/verify
              hints:
                allow:
                  - POST
            deactivate:
              href: >-
                https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx135/lifecycle/deactivate
              hints:
                allow:
                  - POST
        - id: who8vt36qfNpCGz9H1e6
          status: ACTIVE
          verificationStatus: VERIFIED
          name: Event Hook with Filter
          description: An event hook using an Okta Expression Language filter
          created: '2023-07-07T13:41:56.000Z'
          createdBy: 00u7xut94qEWYx5ss1e5
          lastUpdated: '2023-07-07T13:43:03.000Z'
          events:
            type: EVENT_TYPE
            items:
              - group.user_membership.add
            filter:
              type: EXPRESSION_LANGUAGE
              eventFilterMap:
                - event: group.user_membership.add
                  condition:
                    version: null
                    expression: >-
                      event.target.?[type eq 'UserGroup'].size()>0 &&
                      event.target.?[displayName eq 'Sales'].size()>0
          channel:
            type: HTTP
            version: 1.0.0
            config:
              uri: https://example_external_service/userAdded
              headers: []
              method: POST
              authScheme:
                type: HEADER
                key: authorization
          _links:
            self:
              href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
            verify:
              href: >-
                https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
              hints:
                allow:
                  - POST
            deactivate:
              href: >-
                https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
              hints:
                allow:
                  - POST
    CreateAnEventHook:
      summary: Create an event hook
      value:
        name: Event Hook Test
        events:
          type: EVENT_TYPE
          items:
            - group.user_membership.add
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers:
              - key: X-Other-Header
                value: my-header-value
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    CreateAnEventHookWithFilter:
      summary: Create an event hook with a filter
      value:
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        events:
          type: EVENT_TYPE
          items:
            - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
              - event: group.user_membership.add
                condition:
                  expression: >-
                    event.target.?[type eq 'UserGroup'].size()>0 &&
                    event.target.?[displayName eq 'Sales'].size()>0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    RetrieveAnEventHook:
      summary: Retrieve an event hook
      value:
        id: who8vt36qfNpCGz9H1e6
        status: ACTIVE
        verificationStatus: VERIFIED
        name: Event Hook Test
        description: null
        created: '2023-07-07T13:41:56.000Z'
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: '2023-07-07T13:43:03.000Z'
        events:
          type: EVENT_TYPE
          items:
            - group.user_membership.add
          filter: null
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers:
              - key: X-Other-Header
                value: my-header-value
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: >-
              https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
                - POST
    RetrieveAnEventHookWithFilter:
      summary: Retrieve an event hook
      value:
        id: who8vt36qfNpCGz9H1e6
        status: ACTIVE
        verificationStatus: VERIFIED
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        created: '2023-07-07T13:41:56.000Z'
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: '2023-07-07T13:43:03.000Z'
        events:
          type: EVENT_TYPE
          items:
            - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
              - event: group.user_membership.add
                condition:
                  version: null
                  expression: >-
                    event.target.?[type eq 'UserGroup'].size()>0 &&
                    event.target.?[displayName eq 'Sales'].size()>0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: >-
              https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
          hints:
            allow:
              - POST
          deactivate:
            href: >-
              https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
                - POST
    ReplaceAnEventHookWithFilter:
      summary: Replace an event hook
      value:
        name: Event Hook with Filter
        description: An event hook using an Okta Expression Language filter
        events:
          type: EVENT_TYPE
          items:
            - group.user_membership.add
          filter:
            type: EXPRESSION_LANGUAGE
            eventFilterMap:
              - event: group.user_membership.add
                condition:
                  expression: >-
                    event.target.?[type eq 'UserGroup'].size()>0 &&
                    event.target.?[displayName eq 'Sales'].size()>0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    RetrieveADeactivatedEventHook:
      summary: Deactivated event hook
      value:
        id: who8vt36qfNpCGz9H1e6
        status: INACTIVE
        verificationStatus: VERIFIED
        name: Event Hook Test
        description: null
        created: '2023-07-07T13:41:56.000Z'
        createdBy: 00u7xut94qEWYx5ss1e5
        lastUpdated: '2023-07-07T13:43:03.000Z'
        events:
          type: EVENT_TYPE
          items:
            - group.user_membership.add
          filter: null
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example_external_service/userAdded
            headers:
              - key: X-Other-Header
                value: my-header-value
            method: POST
            authScheme:
              type: HEADER
              key: authorization
        _links:
          self:
            href: https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6
          verify:
            href: >-
              https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/verify
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://example.com/api/v1/eventHooks/who8tsqyrhCdmetzx1e6/lifecycle/deactivate
            hints:
              allow:
                - POST
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    event_hooks:
      id: okta.eventhooks.event_hooks
      name: event_hooks
      title: Event Hooks
      methods:
        list_event_hooks:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_event_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_event_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_event_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_event_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_event_hook:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1eventHooks~1{eventHookId}~1lifecycle~1activate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_event_hook:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1eventHooks~1{eventHookId}~1lifecycle~1deactivate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_event_hook:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1eventHooks~1{eventHookId}~1lifecycle~1verify/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/event_hooks/methods/list_event_hooks
          - $ref: >-
              #/components/x-stackQL-resources/event_hooks/methods/get_event_hook
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/event_hooks/methods/create_event_hook
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/event_hooks/methods/delete_event_hook
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/event_hooks/methods/replace_event_hook
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
