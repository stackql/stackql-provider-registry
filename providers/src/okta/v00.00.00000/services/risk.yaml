openapi: 3.0.3
info:
  title: risk API
  description: okta risk API
  version: 5.1.0
paths:
  /api/v1/risk/events/ip:
    post:
      deprecated: true
      summary: Send multiple risk events
      description: >-
        Sends multiple IP risk events to Okta.

        This request is used by a third-party risk provider to send IP risk
        events to Okta. The third-party risk provider needs to be registered
        with Okta before they can send events to Okta. See [Risk
        Providers](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/RiskProvider/).

        This API has a rate limit of 30 requests per minute. You can include
        multiple risk events (up to a maximum of 20 events) in a single payload
        to reduce the number of API calls. Prioritize sending high risk signals
        if you have a burst of signals to send that would exceed the maximum
        request limits.
      operationId: sendRiskEvents
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RiskEvent'
            examples:
              RiskEventsRequestExample:
                $ref: '#/components/examples/RiskEventsRequestExample'
        required: true
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskEvents.manage
      tags:
        - RiskEvent
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/risk/providers:
    get:
      deprecated: true
      summary: List all risk providers
      description: Lists all risk provider objects
      operationId: listRiskProviders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderList:
                  $ref: '#/components/examples/ListRiskProviderResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.read
      tags:
        - RiskProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      deprecated: true
      summary: Create a risk provider
      description: >-
        Creates a risk provider object. You can create a maximum of three risk
        provider objects.
      operationId: createRiskProvider
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskProvider'
            examples:
              RiskProviderRequestExample:
                $ref: '#/components/examples/RiskProviderRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderPostResponseExample:
                  $ref: '#/components/examples/RiskProviderResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.manage
      tags:
        - RiskProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/risk/providers/{riskProviderId}:
    get:
      deprecated: true
      summary: Retrieve a risk provider
      description: Retrieves a risk provider object by ID
      operationId: getRiskProvider
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderGetResponseExample:
                  $ref: '#/components/examples/RiskProviderResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.read
      tags:
        - RiskProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      deprecated: true
      summary: Replace a risk provider
      description: Replaces the properties for a given risk provider object ID
      operationId: replaceRiskProvider
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskProvider'
            examples:
              RiskProviderPutRequestExample:
                $ref: '#/components/examples/RiskProviderPutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskProvider'
              examples:
                RiskProviderPutResponseExample:
                  $ref: '#/components/examples/RiskProviderPutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.manage
      tags:
        - RiskProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      deprecated: true
      summary: Delete a risk provider
      description: Deletes a risk provider object by its ID
      operationId: deleteRiskProvider
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.riskProviders.manage
      tags:
        - RiskProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRiskProviderId'
components:
  schemas:
    RiskEvent:
      type: object
      properties:
        expiresAt:
          type: string
          format: date-time
          description: >-
            Timestamp at which the event expires (expressed as a UTC time zone
            using ISO 8601 format: yyyy-MM-dd`T`HH:mm:ss.SSS`Z`). If this
            optional field isn't included, Okta automatically expires the event
            24 hours after the event is consumed.
        subjects:
          type: array
          description: List of risk event subjects
          items:
            $ref: '#/components/schemas/RiskEventSubject'
        timestamp:
          type: string
          format: date-time
          description: >-
            Timestamp of when the event is produced (expressed as a UTC time
            zone using ISO 8601 format: yyyy-MM-dd`T`HH:mm:ss.SSS`Z`)
      required:
        - subjects
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    RiskProvider:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/RiskProviderAction'
        clientId:
          type: string
          description: >-
            The ID of the [OAuth 2.0 service
            app](https://developer.okta.com/docs/guides/implement-oauth-for-okta-serviceapp/main/#create-a-service-app-and-grant-scopes)
            that's used to send risk events to Okta
          example: 00cjkjjkkgjkdkjdkkljjsd
        created:
          type: string
          format: date-time
          description: Timestamp when the risk provider object was created
          readOnly: true
          example: '2021-01-05 22:18:30'
        id:
          type: string
          description: The ID of the risk provider object
          readOnly: true
          example: 00rp12r4skkjkjgsn
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the risk provider object was last updated
          readOnly: true
          example: '2021-01-05 22:18:30'
        name:
          type: string
          description: Name of the risk provider
          maxLength: 50
          example: Risk-Partner-X
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - name
        - clientId
        - action
        - id
        - _links
    RiskEventSubject:
      type: object
      properties:
        ip:
          type: string
          description: The risk event subject IP address (either an IPv4 or IPv6 address)
        message:
          type: string
          description: Additional reasons for the risk level of the IP
          maxLength: 512
          pattern: ^[a-zA-Z0-9 .\-_]*$
        riskLevel:
          $ref: '#/components/schemas/RiskEventSubjectRiskLevel'
      required:
        - ip
        - riskLevel
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    RiskProviderAction:
      description: >-
        Action taken by Okta during authentication attempts based on the risk
        events sent by this provider
      default: log_only
      type: string
      enum:
        - enforce_and_log
        - log_only
        - none
      x-enumDescriptions:
        log_only: Include risk event information in the System Log
        none: No action
        enforce_and_log: >-
          Use risk event information to evaluate risks during authentication
          attempts and include risk event information in the System Log
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    RiskEventSubjectRiskLevel:
      description: The risk level associated with the IP
      type: string
      enum:
        - HIGH
        - LOW
        - MEDIUM
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathRiskProviderId:
      name: riskProviderId
      in: path
      schema:
        type: string
        example: 00rp12r4skkjkjgsn
      required: true
      description: '`id` of the risk provider object'
  examples:
    RiskEventsRequestExample:
      summary: Risk events payload example
      value:
        - timestamp: '2021-01-20T00:00:00.001Z'
          subjects:
            - ip: 6.7.6.7
              riskLevel: MEDIUM
            - ip: 1.1.1.1
              riskLevel: HIGH
              message: Detected Attack tooling and suspicious activity
        - timestamp: '2021-01-20T01:00:00.001Z'
          subjects:
            - ip: 6.7.6.7
              riskLevel: LOW
            - ip: 2.2.2.2
              riskLevel: HIGH
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ListRiskProviderResponse:
      summary: List risk provider response example
      value:
        - id: 00rp12r4skkjkjgsn
          action: log_only
          name: Risk-Partner-X
          clientId: 00ckjsfgjkdkjdkkljjsd
          created: '2021-01-05 22:18:30'
          lastUpdated: '2021-01-05 22:18:30'
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn
              hints:
                allow:
                  - GET
                  - PUT
    RiskProviderRequest:
      summary: Risk provider payload example
      value:
        name: Risk-Partner-X
        action: log_only
        clientId: 00ckjsfgjkdkjdkkljjsd
    RiskProviderResponse:
      summary: Risk provider response example
      value:
        id: 00rp12r4skkjkjgsn
        action: log_only
        name: Risk-Partner-X
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: '2021-01-05 22:18:30'
        lastUpdated: '2021-01-05 22:18:30'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn
            hints:
              allow:
                - GET
                - PUT
    RiskProviderPutRequest:
      summary: Replace risk provider request example
      value:
        name: Risk-Partner-Y
        action: enforce_and_log
        clientId: 00ckjsfgjkdkjdkkljjsd
    RiskProviderPutResponse:
      summary: Replace risk provider response example
      value:
        id: 00rp12r4skkjkjgsn
        action: enforce_and_log
        name: Risk-Partner-Y
        clientId: 00ckjsfgjkdkjdkkljjsd
        created: '2021-01-05 22:18:30'
        lastUpdated: '2021-01-05 23:18:30'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/risk/providers/00rp12r4skkjkjgsn
            hints:
              allow:
                - GET
                - PUT
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    risk_events:
      id: okta.risk.risk_events
      name: risk_events
      title: Risk Events
      methods:
        send_risk_events:
          operation:
            $ref: '#/paths/~1api~1v1~1risk~1events~1ip/post'
          response:
            mediaType: ''
            openAPIDocKey: '202'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
        replace: []
    risk_providers:
      id: okta.risk.risk_providers
      name: risk_providers
      title: Risk Providers
      methods:
        list_risk_providers:
          operation:
            $ref: '#/paths/~1api~1v1~1risk~1providers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_risk_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1risk~1providers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_risk_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1risk~1providers~1{riskProviderId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_risk_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1risk~1providers~1{riskProviderId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_risk_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1risk~1providers~1{riskProviderId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/risk_providers/methods/list_risk_providers
          - $ref: >-
              #/components/x-stackQL-resources/risk_providers/methods/get_risk_provider
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/risk_providers/methods/create_risk_provider
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/risk_providers/methods/delete_risk_provider
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/risk_providers/methods/replace_risk_provider
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
