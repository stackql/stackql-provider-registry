openapi: 3.0.3
info:
  title: idps API
  description: okta idps API
  version: 5.1.0
paths:
  /api/v1/idps:
    get:
      summary: List all IdPs
      description: >-
        Lists all identity provider (IdP) integrations with pagination. A subset
        of IdPs can be returned that match a supported filter expression or
        query.
      operationId: listIdentityProviders
      parameters:
        - name: q
          in: query
          description: Searches the `name` property of IdPs for matching value
          schema:
            type: string
          example: Example SAML
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - name: type
          in: query
          description: Filters IdPs by `type`
          schema:
            $ref: '#/components/schemas/IdentityProviderType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
              examples:
                MultipleIdPsResponse:
                  $ref: '#/components/examples/MultipleIdPsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an IdP
      description: >-
        Creates a new identity provider (IdP) integration.


        #### SAML 2.0 IdP


        You must first add the IdP's signature certificate to the IdP key store
        before you can add a SAML 2.0 IdP with a `kid` credential reference. 


        Don't use `fromURI` to automatically redirect a user to a particular app
        after successfully authenticating with a third-party IdP. Instead, use
        SAML deep links. Using `fromURI` isn't tested or supported. For more
        information about using deep links when signing users in using an
        SP-initiated flow, see [Understanding SP-Initiated Login
        flow](https://developer.okta.com/docs/concepts/saml/#understanding-sp-initiated-login-flow).


        Use SAML deep links to automatically redirect the user to an app after
        successfully authenticating with a third-party IdP. To use deep links,
        assemble these three parts into a URL:


        * SP ACS URL<br>

        For example: `https://${yourOktaDomain}/sso/saml2/:idpId`

        * The app to which the user is automatically redirected after
        successfully authenticating with the IdP <br>

        For example: `/app/:app-location/:appId/sso/saml`

        * Optionally, if the app is an outbound SAML app, you can specify the
        `relayState` passed to it.<br>

        For example: `?RelayState=:anyUrlEncodedValue`


        The deep link for the above three parts is:<br>

        `https://${yourOktaDomain}/sso/saml2/:idpId/app/:app-location/:appId/sso/saml?RelayState=:anyUrlEncodedValue`


        #### Smart Card X509 IdP


        You must first add the IdP's server certificate to the IdP key store
        before you can add a Smart Card `X509` IdP with a `kid` credential
        reference.

        You need to upload the whole trust chain as a single key using the [Key
        Store
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProviderKeys/#tag/IdentityProviderKeys/operation/createIdentityProviderKey).

        Depending on the information stored in the smart card, select the proper
        [template](https://developer.okta.com/docs/reference/okta-expression-language/#idp-user-profile)
        `idpuser.subjectAltNameEmail` or `idpuser.subjectAltNameUpn`.


        #### Identity verification vendors as identity providers


        Identity verification vendors (IDVs) work like IdPs, with a few key
        differences. IDVs verify your user's identities by requiring them to
        submit a proof of identity. There are many ways to verify user
        identities. For example, a proof of identity can be a selfie to
        determine liveliness or it can be requiring users to submit a photo of
        their driver's license and matching that information with a database.


        There are three IDVs that you can configure as IdPs in your org by
        creating an account with the vendor, and then creating an IdP
        integration. Control how the IDVs verify your users by using [Okta
        account management policy
        rules](https://developer.okta.com/docs/guides/okta-account-management-policy/main/).


        * [Persona](https://withpersona.com/)


        * [CLEAR Verified](https://www.clearme.com/)


        * [Incode](https://incode.com/)
      operationId: createIdentityProvider
      x-codegen-request-body-name: identityProvider
      requestBody:
        description: IdP settings
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
            examples:
              CreateGenericOidcIdPRequest:
                $ref: '#/components/examples/CreateGenericOidcIdPRequest'
              CreateSamlIdPRequest:
                $ref: '#/components/examples/CreateSamlIdPRequest'
              CreateAppleIdPRequest:
                $ref: '#/components/examples/CreateAppleIdPRequest'
              CreateFacebookIdPRequest:
                $ref: '#/components/examples/CreateFacebookIdPRequest'
              CreateGoogleIdPRequest:
                $ref: '#/components/examples/CreateGoogleIdPRequest'
              CreateMicrosoftIdPRequest:
                $ref: '#/components/examples/CreateMicrosoftIdPRequest'
              CreateSmartCardIdPRequest:
                $ref: '#/components/examples/CreateSmartCardIdPRequest'
              CreatePersonaIDVRequest:
                $ref: '#/components/examples/CreatePersonaIDVRequest'
              CreateCLEARIDVRequest:
                $ref: '#/components/examples/CreateCLEARIDVRequest'
              CreateIncodeIDVRequest:
                $ref: '#/components/examples/CreateIncodeIDVRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                CreateGenericOidcIdpResponse:
                  $ref: '#/components/examples/GenericOidcIdpResponse'
                CreateSamlIdPResponse:
                  $ref: '#/components/examples/SamlIdPResponse'
                CreateAppleIdPResponse:
                  $ref: '#/components/examples/AppleIdPResponse'
                CreateFacebookIdPResponse:
                  $ref: '#/components/examples/FacebookIdPResponse'
                CreateGoogleIdPResponse:
                  $ref: '#/components/examples/GoogleIdPResponse'
                CreateMicrosoftIdPResponse:
                  $ref: '#/components/examples/MicrosoftIdPResponse'
                CreateSmartCardIdPResponse:
                  $ref: '#/components/examples/SmartCardIdPResponse'
                CreatePersonaIDVResponse:
                  $ref: '#/components/examples/PersonaIDVResponse'
                CreateCLEARIDVResponse:
                  $ref: '#/components/examples/CLEARIDVResponse'
                CreateIncodeIDVResponse:
                  $ref: '#/components/examples/IncodeIDVResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/credentials/keys:
    get:
      summary: List all IdP key credentials
      description: Lists all identity provider (IdP) key credentials
      operationId: listIdentityProviderKeys
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                ListIdPKeyCredentialsResponse:
                  $ref: '#/components/examples/MultipleIdPKeyCredentialsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an IdP key credential
      description: >-
        Creates a new X.509 certificate credential in the identity provider
        (IdP) key store

        > **Note:** RSA-based certificates are supported for all IdP types. Okta
        currently supports EC-based certificates only for the `X509` IdP type.
        For EC-based certificates we support only P-256, P-384, and P-521
        curves.
      operationId: createIdentityProviderKey
      x-codegen-request-body-name: jsonWebKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdPCertificateCredential'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                IdPKeyCredentialResponse:
                  $ref: '#/components/examples/IdPKeyCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/idps/credentials/keys/{kid}:
    get:
      summary: Retrieve an IdP key credential
      description: Retrieves a specific identity provider (IdP) key credential by `kid`
      operationId: getIdentityProviderKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                IdPKeyCredentialResponse:
                  $ref: '#/components/examples/IdPKeyCredentialResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace an IdP key credential
      description: Replaces an identity provider (IdP) key credential by `kid`
      operationId: replaceIdentityProviderKey
      requestBody:
        description: Updated IdP key credential
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdPKeyCredential'
            examples:
              IdPKeyCredentialRequest:
                $ref: '#/components/examples/IdPKeyCredentialRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                IdPKeyCredentialResponse:
                  $ref: '#/components/examples/IdPKeyCredentialResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an IdP key credential
      description: >-
        Deletes a specific identity provider (IdP) key credential by `kid` if it
        isn't currently being used by an active or inactive IdP
      operationId: deleteIdentityProviderKey
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathKid'
  /api/v1/idps/{idpId}:
    get:
      summary: Retrieve an IdP
      description: Retrieves an identity provider (IdP) integration by `idpId`
      operationId: getIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                GenericOidcIdpResponse:
                  $ref: '#/components/examples/GenericOidcIdpResponse'
                SamlIdPResponse:
                  $ref: '#/components/examples/SamlIdPResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace an IdP
      description: Replaces an identity provider (IdP) integration by `idpId`
      operationId: replaceIdentityProvider
      x-codegen-request-body-name: identityProvider
      requestBody:
        description: Updated configuration for the IdP
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
            examples:
              ReplaceIdPRequest:
                $ref: '#/components/examples/ReplaceIdPRequestResponse'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                ReplaceIdPResponse:
                  $ref: '#/components/examples/ReplaceIdPRequestResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an IdP
      description: >-
        Deletes an identity provider (IdP) integration by `idpId`

        * All existing IdP users are unlinked with the highest order profile
        source taking precedence for each IdP user.

        * Unlinked users keep their existing authentication provider such as
        `FEDERATION` or `SOCIAL`.
      operationId: deleteIdentityProvider
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      summary: List all certificate signing requests
      description: >-
        Lists all certificate signing requests (CSRs) for an identity provider
        (IdP)
      operationId: listCsrsForIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdPCsr'
              examples:
                MultipleIdPCsrsResponse:
                  $ref: '#/components/examples/MultipleIdPCsrsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Generate a certificate signing request
      description: >-
        Generates a new key pair and returns a certificate signing request (CSR)
        for it

        > **Note:** The private key isn't listed in the [signing key credentials
        for the identity provider
        (IdP)](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProviderSigningKeys/#tag/IdentityProviderSigningKeys/operation/listIdentityProviderSigningKeys)
        until it's published.
      operationId: generateCsrForIdentityProvider
      x-codegen-request-body-name: metadata
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPCsr'
              examples:
                CsrJsonResponse:
                  $ref: '#/components/examples/CsrJsonResponse'
            application/pkcs10:
              schema:
                $ref: '#/components/schemas/IdPCsrPkcs10'
              examples:
                CsrPkcs10Response:
                  $ref: '#/components/examples/CsrPkcs10Response'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/credentials/csrs/{idpCsrId}:
    get:
      summary: Retrieve a certificate signing request
      description: Retrieves a specific certificate signing request (CSR) by `id`
      operationId: getCsrForIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPCsr'
              examples:
                CsrJsonResponse:
                  $ref: '#/components/examples/CsrJsonResponse'
            application/pkcs10:
              schema:
                $ref: '#/components/schemas/IdPCsrPkcs10'
              examples:
                CsrPkcs10Response:
                  $ref: '#/components/examples/CsrPkcs10Response'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Revoke a certificate signing request
      description: >-
        Revokes a certificate signing request (CSR) and deletes the key pair
        from the identity provider (IdP)
      operationId: revokeCsrForIdentityProvider
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathIdpCsrId'
  /api/v1/idps/{idpId}/credentials/csrs/{idpCsrId}/lifecycle/publish:
    post:
      summary: Publish a certificate signing request
      description: >-
        Publishes the certificate signing request (CSR) with a signed X.509
        certificate and adds it into the signing key credentials for the
        identity provider (IdP)

        > **Notes:**

        > * Publishing a certificate completes the lifecycle of the CSR, and
        it's no longer accessible.

        > * If the validity period of the certificate is less than 90 days, a
        400 error response is returned.
      operationId: publishCsrForIdentityProvider
      requestBody:
        required: true
        content:
          application/pkix-cert:
            schema:
              type: string
              format: binary
              description: >-
                X.509 certificate in `DER` format. 

                The client can either post in binary or Base64URL-encoded. If
                the post is Base64URL-encoded, set the
                `Content-Transfer-Encoding` header to `base64`.
              example: >-
                MIIFgjCCA2qgAwIBAgICEAcwDQYJKoZIhvcNAQELBQAwXjELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQKDARPa3RhMQwwCgYDVQQLDANFbmcxDTALBgNVBAMMBFJvb3QwHhcNMTcwMzI3MjEyMDQ3WhcNMTgwNDA2MjEyMDQ3WjB4MQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzETMBEGA1UECgwKT2t0YSwgSW5jLjEQMA4GA1UECwwHSmFua3lDbzEVMBMGA1UEAwwMSWRQIElzc3VlciA3MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmkC6yAJVvFwUlmM9gKjb2d+YK5qHFt+mXSsbjWKKs4EfNm+BoQeeovBZtSACyaqLc8IYFTPEURFcbDQ9DkAL04uUIRD2gaHYY7uK0jsluEaXGq2RAIsmzAwNTzkiDw4q9pDL/q7n0f/SDt1TsMaMQayB6bU5jWsmqcWJ8MCRJ1aJMjZ16un5UVx51IIeCbe4QRDxEXGAvYNczsBoZxspDt28esSpq5W0dBFxcyGVudyl54Er3FzAguhgfMVjH+bUec9j2Tl40qDTktrYgYfxz9pfjm01Hl4WYP1YQxeETpSL7cQ5Ihz4jGDtHUEOcZ4GfJrPzrGpUrak8Qp5xcwCqQIDAQABo4IBLjCCASowCQYDVR0TBAIwADARBglghkgBhvhCAQEEBAMCBkAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIFNlcnZlciBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUVqJukDmyENw/2pTApbxc/HRKbngwgZAGA1UdIwSBiDCBhYAUFx245ZZXqWTTbARfMlFWN77L9EahYqRgMF4xCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJDQTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEMMAoGA1UECwwDRW5nMQ0wCwYDVQQDDARSb290ggkAlIfpwZjO5o8wDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA0GCSqGSIb3DQEBCwUAA4ICAQCcoBSRtY+9cJY00hLvq6AloYZcdn/kUQupfmyz4n3lKE3wV2FB0swKnK0QDi8iNuQJFdag/19vDHC4/LhoSuv1Q+KXM61pPZVRXXPyC1+e7Y6hj93tEI5HcqLPcDRH1AIG2l8tE7LBn+MQB5Vh6oxjG2IdoWxg6abMfISU+MauPWql4vMDUWo9iNShAo44Z5fd+nuz+hlAinU9Xn9Jf2QsfKvcbMRq7iuqgkabgdmObmWb9KK0Vm7TDkxCH0pB0onPr6epVUP8Obg/pT1Oj/1hOLbfR8CHHWdAWzUBGGvp2TIy2A8LUaEoFnwkxZfdL7Bnd0RH/ClBtAjzLOxmUo7NbZmEnYCcD5pZz7BdZI0db/eBXFqfOlA88rEe+9Sv+NndIq0/WNIIsJi2RgjJnxsxvB5MjhhzmItpFIUl5yqoO3C9jcCp6HDBJxtCGbvAr5ALPn5RCJeBIr67WpAiTd7L3Ebu9SQZlXnoHX8kP04EA6ylR3W0EFbh7KUtq8M2H2vo0wjMj7ysl/3tT7cEZ97s1ygO5iJx3GfMDyrDhtLXSBJ20uSxTJeptRw8SDiwTqunIh1WyKlcQz1WGauSbW4eXdj/r9KYMJ3qMMkdP/9THQUtTcOYx51r8RV9pdzqF2HPnZZNziBa+wXJZHEWp70NyoakNthgYwtypqiDHs2f3Q==
              x-okta-operationId: publishBinaryDerCertForIdentityProvider
          application/x-x509-ca-cert:
            schema:
              type: string
              format: binary
              description: >-
                X.509 certificate in `CER` format.

                The client can either post in binary or Base64URL-encoded. If
                the post is Base64URL-encoded, set the
                `Content-Transfer-Encoding` header to `base64`.
              example: '@certificate.cer'
              x-okta-operationId: publishBinaryCerCertForIdentityProvider
          application/x-pem-file:
            schema:
              type: string
              format: binary
              description: X.509 certificate in `PEM` format
              example: '@certificate.pem'
              x-okta-operationId: publishBinaryPemCertForIdentityProvider
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathIdpCsrId'
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      summary: List all signing key credentials for IdP
      description: Lists all signing key credentials for an identity provider (IdP)
      operationId: listIdentityProviderSigningKeys
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                MultipleIdPSigningKeyCredentialsResponse:
                  $ref: >-
                    #/components/examples/MultipleIdPSigningKeyCredentialsResponse
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/credentials/keys/active:
    get:
      summary: List the active signing key credential for IdP
      description: Lists the active signing key credential for an identity provider (IdP)
      operationId: listActiveIdentityProviderSigningKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                ActiveIdPSigningKeyCredentialResponse:
                  $ref: '#/components/examples/ActiveIdPSigningKeyCredentialResponse'
        '204':
          description: No Content
          content: {}
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      summary: Generate a new signing key credential for IdP
      description: >-
        Generates a new X.509 certificate for an identity provider (IdP) signing
        key credential to be used for signing assertions sent to the IdP. IdP
        signing keys are read-only.

        > **Note:** To update an IdP with the newly generated key credential,
        [update your
        IdP](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/replaceIdentityProvider)
        using the returned key's `kid` in the [signing
        credential](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/replaceIdentityProvider!path=protocol/0/credentials/signing/kid&t=request).
      operationId: generateIdentityProviderSigningKey
      parameters:
        - name: validityYears
          in: query
          description: expiry of the IdP key credential
          required: true
          schema:
            type: integer
            format: int32
            minimum: 2
            maximum: 10
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                IdPSigningKeyCredentialResponse:
                  $ref: '#/components/examples/IdPSigningKeyCredentialResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/credentials/keys/{kid}:
    get:
      summary: Retrieve a signing key credential for IdP
      description: Retrieves a specific identity provider (IdP) key credential by `kid`
      operationId: getIdentityProviderSigningKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                IdPSigningKeyCredentialResponse:
                  $ref: '#/components/examples/IdPSigningKeyCredentialResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathKid'
  /api/v1/idps/{idpId}/credentials/keys/{kid}/clone:
    post:
      summary: Clone a signing key credential for IdP
      description: >-
        Clones an X.509 certificate for an identity provider (IdP) signing key
        credential from a source IdP to target IdP

        > **Caution:** Sharing certificates isn't a recommended security
        practice.


        > **Note:** If the key is already present in the list of key credentials
        for the target IdP, you receive a 400 error response.
      operationId: cloneIdentityProviderKey
      parameters:
        - name: targetIdpId
          in: query
          required: true
          description: '`id` of the target IdP'
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdPKeyCredential'
              examples:
                IdPSigningKeyCredentialResponse:
                  $ref: '#/components/examples/IdPSigningKeyCredentialResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderSigningKeys
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathKid'
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      summary: Activate an IdP
      description: Activates an inactive identity provider (IdP)
      operationId: activateIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                ActivateIdPResponse:
                  $ref: '#/components/examples/ActivateIdPResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      summary: Deactivate an IdP
      description: Deactivates an active identity provider (IdP)
      operationId: deactivateIdentityProvider
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
              examples:
                DeactivateIdPResponse:
                  $ref: '#/components/examples/DeactivateIdPResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProvider
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/users:
    get:
      summary: List all users for IdP
      description: Lists all the users linked to an identity provider (IdP)
      operationId: listIdentityProviderApplicationUsers
      parameters:
        - $ref: '#/components/parameters/queryFilter'
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - name: expand
          in: query
          description: Expand user data
          schema:
            type: string
            example: user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
              examples:
                ListIdPUsersResponse:
                  $ref: '#/components/examples/ListIdPUsersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
  /api/v1/idps/{idpId}/users/{userId}:
    get:
      summary: Retrieve a user for IdP
      description: Retrieves a linked identity provider (IdP) user by ID
      operationId: getIdentityProviderApplicationUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
              examples:
                IdPAppUserResponse:
                  $ref: '#/components/examples/IdPAppUserResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Link a user to IdP
      description: >-
        Links an Okta user to an existing SAML or social identity provider
        (IdP).


        The SAML IdP must have `honorPersistentNameId` set to `true` to use this
        API.

        The [Name Identifier
        Format](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/replaceIdentityProvider!path=protocol/0/settings&t=request)
        of the incoming assertion must be
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
      operationId: linkUserToIdentityProvider
      x-codegen-request-body-name: userIdentityProviderLinkRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
              examples:
                LinkIdPAppUserResponse:
                  $ref: '#/components/examples/LinkIdPAppUserResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - IdentityProviderUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unlink a user from IdP
      description: >-
        Unlinks the Okta user and the identity provider (IdP) user. The next
        time the user federates into Okta through this IdP, they have to re-link
        their account according to the account link policy.
      operationId: unlinkUserFromIdentityProvider
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.manage
      tags:
        - IdentityProviderUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      summary: List all tokens from OIDC IdP
      description: >-
        Lists the tokens minted by the social authentication provider when the
        user authenticates with Okta via Social Auth.


        Okta doesn't import all the user information from a social provider. If
        the app needs information that isn't imported, it can get the user token
        from this endpoint. Then the app can make an API call to the social
        provider with the token to request the additional information.
      operationId: listSocialAuthTokens
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
              examples:
                SocialAuthTokensResponse:
                  $ref: '#/components/examples/SocialAuthTokensResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.idps.read
      tags:
        - IdentityProviderUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathIdpId'
      - $ref: '#/components/parameters/pathUserId'
components:
  schemas:
    IdentityProviderType:
      description: >-
        The IdP object's `type` property identifies the social or enterprise IdP
        used for authentication. 

        Each IdP uses a specific protocol, therefore the `protocol` object must
        correspond with the IdP `type`. 

        If the protocol is OAuth 2.0-based, the `protocol` object's `scopes`
        property must also correspond with the scopes supported by the IdP
        `type`. 

        For policy actions supported by each IdP type, see [IdP type policy
        actions](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=policy&t=request).


        | Type               |
        Description                                                                                                                                          
        | Corresponding protocol | Corresponding protocol
        scopes                                         |

        | ------------------ |
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        | ---------------------- |
        --------------------------------------------------------------------  |

        | `AMAZON`           |
        [Amazon](https://developer.amazon.com/settings/console/registration?return_to=/)&nbsp;as
        the IdP                                        | OpenID Connect        
        | `profile`, `profile:user_id`                                         
        |

        | `APPLE`            |
        [Apple](https://developer.apple.com/sign-in-with-apple/)&nbsp;as the
        IdP                                                                |
        OpenID Connect         | `names`, `email`,
        `openid`                                            |

        | `DISCORD`          | [Discord](https://discord.com/login)&nbsp;as the
        IdP                                                                                   
        | OAuth 2.0              | `identify`,
        `email`                                                   |

        | `FACEBOOK`         |
        [Facebook](https://developers.facebook.com)&nbsp;as the
        IdP                                                                            
        | OAuth 2.0              | `public_profile`,
        `email`                                             |

        | `GITHUB`           | [GitHub](https://github.com/join)&nbsp;as the
        IdP                                                                                      
        | OAuth 2.0              |
        `user`                                                                |

        | `GITLAB`           |
        [GitLab](https://gitlab.com/users/sign_in)&nbsp;as the
        IdP                                                                             
        | OpenID Connect         | `openid`, `read_user`, `profile`,
        `email`                             |

        | `GOOGLE`           |
        [Google](https://accounts.google.com/signup)&nbsp;as the
        IdP                                                                           
        | OpenID Connect         | `openid`, `email`,
        `profile`                                          |

        | `IDV_PERSONA`      |
        [Persona](https://app.withpersona.com/dashboard/login)&nbsp;as the IDV
        IdP                                                              | ID
        verification       
        |                                                                      
        |

        | `IDV_CLEAR`        | [CLEAR
        Verified](https://www.clearme.com/)&nbsp;as the IDV
        IdP                                                                         
        | ID verification        | `openid`, `profile`,
        `identity_assurance`                             |

        | `IDV_INCODE`       | [Incode](https://incode.com/)&nbsp;as the IDV
        IdP                                                                                      
        | ID verification        | `openid`, `profile`,
        `identity_assurance`                             |

        | `LINKEDIN`         |
        [LinkedIn](https://developer.linkedin.com/)&nbsp;as the
        IdP                                                                            
        | OAuth 2.0              | `r_emailaddress`,
        `r_liteprofile`                                     |

        | `LOGINGOV`         |
        [Login.gov](https://developers.login.gov/)&nbsp;as the
        IdP                                                                             
        | OpenID Connect         | `email`, `profile`,
        `profile:name`                                    |

        | `LOGINGOV_SANDBOX` | [Login.gov's identity
        sandbox](https://developers.login.gov/testing/)&nbsp;as the
        IdP                                                   | OpenID
        Connect         | `email`, `profile`,
        `profile:name`                                    |

        | `MICROSOFT`        | [Microsoft Enterprise
        SSO](https://azure.microsoft.com/)&nbsp;as the
        IdP                                                                |
        OpenID Connect         | `openid`, `email`, `profile`,
        `https://graph.microsoft.com/User.Read` |

        | `OIDC`             | IdP that supports [OpenID
        Connect](https://openid.net/specs/openid-connect-core-1_0.html)                                              
        | OpenID Connect         | `openid`, `email`,
        `profile`                                          |

        | `PAYPAL`           | [Paypal](https://www.paypal.com/signin)&nbsp;as
        the
        IdP                                                                                
        | OpenID Connect         | `openid`, `email`,
        `profile`                                          |

        | `PAYPAL_SANDBOX`   | [Paypal
        Sandbox](https://developer.paypal.com/tools/sandbox/)&nbsp;as the
        IdP                                                           | OpenID
        Connect         | `openid`, `email`,
        `profile`                                          |

        | `SALESFORCE`       |
        [SalesForce](https://login.salesforce.com/)&nbsp;as the
        IdP                                                                            
        | OAuth 2.0              | `id`, `email`,
        `profile`                                              |

        | `SAML2`            | Enterprise IdP that supports the [SAML 2.0 Web
        Browser SSO
        Profile](https://docs.oasis-open.org/security/saml/v2.0/saml-profiles-2.0-os.pdf)|
        SAML 2.0 
        |                                                                               
        |

        | `SPOTIFY`          | [Spotify](https://developer.spotify.com/)&nbsp;as
        the
        IdP                                                                              
        | OpenID Connect         | `user-read-email`,
        `user-read-private`                                |

        | `X509`             | [Smart Card
        IdP](https://tools.ietf.org/html/rfc5280)                                                                                  
        | Mutual TLS            
        |                                                                      
        |

        | `XERO`             |
        [Xero](https://www.xero.com/us/signup/api/)&nbsp;as the
        IdP                                                                            
        | OpenID Connect         | `openid`, `profile`,
        `email`                                          |

        | `YAHOO`            | [Yahoo](https://login.yahoo.com/)&nbsp;as the
        IdP                                                                                      
        | OpenID Connect         | `openid`, `profile`,
        `email`                                          |

        | `YAHOOJP`          | [Yahoo
        Japan](https://login.yahoo.co.jp/config/login)&nbsp;as the
        IdP                                                                   |
        OpenID Connect         | `openid`, `profile`,
        `email`                                          |

        | `OKTA_INTEGRATION`             | IdP that supports the [OpenID
        Connect](https://openid.net/specs/openid-connect-core-1_0.html) Org2Org
        IdP                                               | OpenID
        Connect         | `openid`, `email`,
        `profile`                                          |
      type: string
      enum:
        - AMAZON
        - APPLE
        - DISCORD
        - FACEBOOK
        - GITHUB
        - GITLAB
        - GOOGLE
        - IDV_CLEAR
        - IDV_INCODE
        - IDV_PERSONA
        - LINKEDIN
        - LOGINGOV
        - LOGINGOV_SANDBOX
        - MICROSOFT
        - OIDC
        - OKTA_INTEGRATION
        - PAYPAL
        - PAYPAL_SANDBOX
        - SALESFORCE
        - SAML2
        - SPOTIFY
        - X509
        - XERO
        - YAHOO
        - YAHOOJP
    IdentityProvider:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/Created'
        id:
          type: string
          readOnly: true
          description: Unique key for the IdP
          example: 0oaWma58liwx40w6boYD
        issuerMode:
          $ref: '#/components/schemas/IdentityProviderIssuerMode'
        lastUpdated:
          $ref: '#/components/schemas/LastUpdated'
        name:
          type: string
          maxLength: 100
          description: Unique name for the IdP
          example: Sample IdP
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        properties:
          $ref: '#/components/schemas/IdentityProviderProperties'
        protocol:
          description: >-
            IdP-specific protocol settings for endpoints, bindings, and
            algorithms used to connect with the IdP and validate messages
          oneOf:
            - $ref: '#/components/schemas/ProtocolSaml'
            - $ref: '#/components/schemas/ProtocolOAuth'
            - $ref: '#/components/schemas/ProtocolOidc'
            - $ref: '#/components/schemas/ProtocolMtls'
            - $ref: '#/components/schemas/ProtocolIdVerification'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/IdentityProviderType'
        _links:
          type: object
          additionalProperties: true
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                acs:
                  description: SAML 2.0 Assertion Consumer Service URL for the Okta SP
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                authorize:
                  description: >-
                    OAuth 2.0 authorization endpoint for the IdP OAuth 2.0
                    Authorization Code flow
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                clientRedirectUri:
                  description: Redirect URI for the OAuth 2.0 Authorization Code flow
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                metadata:
                  description: >-
                    Federation metadata document for the IdP (for example: SAML
                    2.0 Metadata)
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                users:
                  description: IdP users
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                deactivate:
                  description: Deactivate IdP
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                activate:
                  description: Activate IdP
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                keys:
                  description: IdP keys
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
              type: object
    IdPKeyCredential:
      description: >-
        A [JSON Web Key](https://tools.ietf.org/html/rfc7517) for a signature or
        encryption credential for an IdP
      additionalProperties: true
      type: object
      properties:
        created:
          $ref: '#/components/schemas/Created'
        e:
          description: The exponent value for the RSA public key
          type: string
          example: AQAB
        expiresAt:
          $ref: '#/components/schemas/ExpiresAt'
        kid:
          description: Unique identifier for the key
          type: string
          example: your-key-id
        kty:
          description: Identifies the cryptographic algorithm family used with the key
          type: string
          example: RSA
        lastUpdated:
          $ref: '#/components/schemas/LastUpdated'
        'n':
          description: The modulus value for the RSA public key
          type: string
          example: >-
            101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747
        use:
          description: Intended use of the public key
          type: string
          example: sig
        x5c:
          $ref: '#/components/schemas/X5c'
        x5t#S256:
          description: >-
            Base64url-encoded SHA-256 thumbprint of the DER encoding of an X.509
            certificate
          type: string
          example: wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE
    IdPCertificateCredential:
      type: object
      properties:
        x5c:
          $ref: '#/components/schemas/X5c'
      required:
        - x5c
    IdPCsr:
      description: Defines a CSR for a signature or decryption credential for an IdP
      type: object
      properties:
        created:
          $ref: '#/components/schemas/Created'
        csr:
          description: Base64-encoded CSR in DER format
          type: string
          readOnly: true
          example: >-
            MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=
        id:
          description: Unique identifier for the CSR
          type: string
          readOnly: true
          example: h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50
        kty:
          description: Cryptographic algorithm family for the CSR's keypair
          type: string
          example: RSA
        _links:
          type: object
          additionalProperties: true
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                publish:
                  description: Publish the CSR
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
              type: object
    CsrMetadata:
      type: object
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
    IdPCsrPkcs10:
      description: Base64URL-encoded CSR in DER format
      format: base64
      type: string
    IdentityProviderApplicationUser:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/Created'
        externalId:
          type: string
          description: Unique IdP-specific identifier for the user
          readOnly: true
          maxLength: 512
          example: saml.jackson@example.com
        id:
          type: string
          description: Unique key of the user
          readOnly: true
        lastUpdated:
          $ref: '#/components/schemas/LastUpdated'
        profile:
          type: object
          description: >-
            IdP-specific profile for the user. 


            IdP user profiles are IdP-specific but may be customized by the
            Profile Editor in the Admin Console.


            > **Note:** Okta variable names have reserved characters that may
            conflict with the name of an IdP assertion attribute. You can use
            the **External name** to define the attribute name as defined in an
            IdP assertion such as a SAML attribute name.
          additionalProperties:
            type: object
            properties: {}
          example:
            lastName: Jackson
            subjectNameQualifier: example.com
            subjectSpNameQualifier: urn:federation:example
            authnContextClassRef: null
            subjectNameId: saml.jackson@example.com
            subjectConfirmationAddress: null
            displayName: Saml Jackson
            mobilePhone: +1-415-555-5141
            email: saml.jackson@example.com
            subjectNameFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
            firstName: Saml
            subjectSpProvidedId: null
            subjectConfirmationMethod: null
        _embedded:
          type: object
          description: Embedded resources related to the IdP user
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          type: object
          additionalProperties: true
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksNext'
            - properties:
                idp:
                  description: The IdP instance
                  example:
                    href: https://{yourOktaDomain}/api/v1/idps/0oa1k5d68qR2954hb0g4
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                user:
                  description: The linked Okta user
                  example:
                    href: https://{yourOktaDomain}/api/v1/users/00ulwodIu7wCfdiVR0g3
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
              type: object
    UserIdentityProviderLinkRequest:
      type: object
      properties:
        externalId:
          type: string
          description: Unique IdP-specific identifier for a user
          example: '121749775026145'
    SocialAuthToken:
      description: >-
        The social authentication token object provides the tokens and
        associated metadata provided by social providers during social
        authentication.
      type: object
      properties:
        expiresAt:
          $ref: '#/components/schemas/ExpiresAt'
        id:
          type: string
          description: Unique identifier for the token
          readOnly: true
          example: NXp9GaX1eOA-XVF_H9fn2Q
        scopes:
          type: array
          description: The scopes that the token is good for
          readOnly: true
          items:
            type: string
          example:
            - openid
            - foo
        token:
          type: string
          description: The raw token
          readOnly: true
          example: JBTWGV22G4ZGKV3N
        tokenAuthScheme:
          type: string
          readOnly: true
          description: The token authentication scheme as defined by the social provider
          example: Bearer
        tokenType:
          type: string
          readOnly: true
          description: >-
            The type of token defined by the [OAuth Token Exchange
            Spec](https://tools.ietf.org/html/draft-ietf-oauth-token-exchange-07#section-3)
          example: urn:ietf:params:oauth:token-type:access_token
    Created:
      format: date-time
      description: Timestamp when the object was created
      example: '2016-01-03T18:15:47.000Z'
      type: string
      readOnly: true
    IdentityProviderIssuerMode:
      description: >-
        Indicates whether Okta uses the original Okta org domain URL or a custom
        domain URL in the request to the social IdP
      default: DYNAMIC
      type: string
      enum:
        - CUSTOM_URL
        - DYNAMIC
        - ORG_URL
      x-enumDescriptions:
        ORG_URL: >-
          In the authorize request to the social IdP, Okta uses the Okta org's
          original domain URL (`https://${yourOktaDomain}`) as the domain in the
          `redirect_uri`.
        CUSTOM_URL: >-
          In the authorize request to the social IdP, Okta uses the custom
          domain URL as the domain in the `redirect_uri`. You can set
          `issuerMode` to `CUSTOM_URL` only if you have a custom URL domain
          configured.
        DYNAMIC: >-
          In the authorize request to the social IdP, Okta uses the custom
          domain URL as the domain in the `redirect_uri` if the request was made
          from the custom domain URL. Otherwise, Okta uses the Okta org's
          original domain URL if the request was made from the Okta org domain.
    LastUpdated:
      format: date-time
      description: Timestamp when the object was last updated
      example: '2016-01-03T18:15:47.000Z'
      type: string
      readOnly: true
    IdentityProviderPolicy:
      description: >-
        Policy settings for the IdP.

        The following provisioning and account linking actions are supported by
        each IdP provider:

        | IdP type                                                          |
        User provisioning actions | Group provisioning actions            |
        Account link actions | Account link filters |

        | ----------------------------------------------------------------- |
        ------------------------- | ------------------------------------- |
        -------------------- | -------------------- |

        | `SAML2`                                                           |
        `AUTO` or `DISABLED`      | `NONE`, `ASSIGN`, `APPEND`, or `SYNC` |
        `AUTO`, `DISABLED`   | `groups`, `users`    |

        | `X509`, `IDV_PERSONA`, `IDV_INCODE`, and `IDV_CLEAR`              |
        `DISABLED`                | No support for JIT provisioning      
        |                      |                      |

        | All other IdP types                                               |
        `AUTO`, `DISABLED`        | `NONE` or `ASSIGN`                    |
        `AUTO`, `DISABLED`   | `groups`, `users`    |
      allOf:
        - type: object
          properties:
            accountLink:
              $ref: '#/components/schemas/PolicyAccountLink'
            maxClockSkew:
              type: integer
              description: >-
                Maximum allowable clock skew when processing messages from the
                IdP
              example: 120000
            provisioning:
              $ref: '#/components/schemas/Provisioning'
            subject:
              $ref: '#/components/schemas/PolicySubject'
    IdentityProviderProperties:
      nullable: true
      description: >-
        The properties in the IdP `properties` object vary depending on the IdP
        type
      type: object
      properties:
        aalValue:
          type: string
          nullable: true
          description: >-
            The [authentication assurance
            level](https://developers.login.gov/oidc/#aal-values) (AAL) value
            for the Login.gov IdP. 

            See [Add a Login.gov
            IdP](https://developer.okta.com/docs/guides/add-logingov-idp/).
            Applies to `LOGINGOV` and `LOGINGOV_SANDBOX` IdP types.
        additionalAmr:
          type: array
          description: >-
            The additional Assurance Methods References (AMR) values for Smart
            Card IdPs. Applies to `X509` IdP type.
          nullable: true
          items:
            type: string
            enum:
              - sc
              - hwk
              - pin
              - mfa
            x-enumDescriptions:
              sc: Smart card
              hwk: Hardware-secured key
              pin: Personal identification number
              mfa: Multifactor authentication
        ialValue:
          type: string
          nullable: true
          description: >-
            The [type of identity
            verification](https://developers.login.gov/oidc/#ial-values) (IAL)
            value for the Login.gov IdP. 

            See [Add a Login.gov
            IdP](https://developer.okta.com/docs/guides/add-logingov-idp/).
            Applies to `LOGINGOV` and `LOGINGOV_SANDBOX` IdP types.
        inquiryTemplateId:
          type: string
          description: >-
            The ID of the inquiry template from your Persona dashboard. The
            inquiry template always starts with `itmpl`. Applies to the
            `IDV_PERSONA` IdP type.
          example: itmpl_HSctx8fNvXoHtrQfz2hxUVH8RBjG
      required:
        - inquiryTemplateId
    ProtocolSaml:
      title: SAML 2.0 Protocol
      description: >-
        Protocol settings for the [SAML 2.0 Authentication Request
        Protocol](http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf)
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/SamlAlgorithms'
        credentials:
          $ref: '#/components/schemas/SamlCredentials'
        endpoints:
          $ref: '#/components/schemas/SamlEndpoints'
        relayState:
          $ref: '#/components/schemas/SamlRelayState'
        settings:
          $ref: '#/components/schemas/SamlSettings'
        type:
          type: string
          description: SAML 2.0 protocol
          enum:
            - SAML2
    ProtocolOAuth:
      title: OAuth 2.0 Protocol
      description: >-
        Protocol settings for authentication using the [OAuth 2.0 Authorization
        Code flow](https://tools.ietf.org/html/rfc6749#section-4.1)
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/OAuthCredentials'
        endpoints:
          $ref: '#/components/schemas/OAuthEndpoints'
        scopes:
          $ref: '#/components/schemas/OAuthScopes'
        type:
          type: string
          description: OAuth 2.0 Authorization Code flow
          enum:
            - OAUTH2
    ProtocolOidc:
      title: OpenID Connect Protocol
      description: >-
        Protocol settings for authentication using the [OpenID Connect
        Protocol](http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth)
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/OidcAlgorithms'
        credentials:
          $ref: '#/components/schemas/OAuthCredentials'
        endpoints:
          $ref: '#/components/schemas/OAuthEndpoints'
        oktaIdpOrgUrl:
          type: string
          description: URL of the IdP org
          example: https://idp.example.com
        scopes:
          type: array
          description: >-
            OpenID Connect and IdP-defined permission bundles to request
            delegated access from the user

            > **Note:** The [IdP
            type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=type&t=request)
            table lists the scopes that are supported for each IdP.
          items:
            type: string
            example: openid
        settings:
          $ref: '#/components/schemas/OidcSettings'
        type:
          type: string
          description: OpenID Connect Authorization Code flow
          enum:
            - OIDC
    ProtocolMtls:
      title: Mutual TLS Protocol
      description: >-
        Protocol settings for the [MTLS
        Protocol](https://tools.ietf.org/html/rfc5246#section-7.4.4)
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/MtlsCredentials'
        endpoints:
          $ref: '#/components/schemas/MtlsEndpoints'
        type:
          type: string
          description: Mutual TLS
          enum:
            - MTLS
    ProtocolIdVerification:
      title: ID Verification
      description: Protocol settings for the IDV
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/IDVCredentials'
        endpoints:
          $ref: '#/components/schemas/IDVEndpoints'
        scopes:
          $ref: '#/components/schemas/OAuthScopes'
        type:
          type: string
          description: ID verification protocol
          enum:
            - ID_PROOFING
    LifecycleStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    ExpiresAt:
      format: date-time
      description: Timestamp when the object expires
      example: '2016-01-03T18:15:47.000Z'
      type: string
      readOnly: true
    X5c:
      description: Base64-encoded X.509 certificate chain with DER encoding
      items:
        type: string
        example: >-
          MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9
      type: array
    CsrMetadataSubject:
      type: object
      properties:
        commonName:
          type: string
          description: Common name of the subject
          example: SP Issuer
        countryName:
          type: string
          description: Country name or code
          example: US
        localityName:
          type: string
          description: Locality (city) name
          example: San Francisco
        organizationalUnitName:
          type: string
          description: >-
            Name of the smaller organization, for example, the department or the
            division
          example: Dev
        organizationName:
          type: string
          description: Large organization name
          example: Okta, Inc.
        stateOrProvinceName:
          type: string
          description: State or province name
          example: California
    CsrMetadataSubjectAltNames:
      type: object
      properties:
        dnsNames:
          type: array
          description: DNS names of the subject
          items:
            type: string
            example: dev.okta.com
    LinksNext:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
        current status of an application using the [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. Use the `LinksNext` object for dynamic discovery of
        related resources and lifecycle operations.
      type: object
      properties:
        next:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
    PolicyAccountLink:
      description: Specifies the behavior for linking an IdP user to an existing Okta user
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PolicyAccountLinkAction'
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
    Provisioning:
      description: >-
        Specifies the behavior for just-in-time (JIT) provisioning of an IdP
        user as a new Okta user and their group memberships
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningAction'
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
          description: >-
            Determines if the IdP should act as a source of truth for user
            profile attributes
    PolicySubject:
      description: >-
        Specifies the behavior for establishing, validating, and matching a
        username for an IdP user
      type: object
      properties:
        filter:
          type: string
          description: >-
            Optional [regular expression
            pattern](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions)
            used to filter untrusted IdP usernames.

            * As a best security practice, you should define a regular
            expression pattern to filter untrusted IdP usernames. This is
            especially important if multiple IdPs are connected to your org. The
            filter prevents an IdP from issuing an assertion for any user,
            including partners or directory users in your Okta org.

            * For example, the filter pattern `(\S+@example\.com)` allows only
            Users that have an `@example.com` username suffix. It rejects
            assertions that have any other suffix such as `@corp.example.com` or
            `@partner.com`.

            * Only `SAML2` and `OIDC` IdP providers support the `filter`
            property.
          maxLength: 1024
          example: (\S+@example\.com)
        matchAttribute:
          type: string
          description: >-
            Okta user profile attribute for matching a transformed IdP username.
            Only for matchType `CUSTOM_ATTRIBUTE`.

            The `matchAttribute` must be a valid Okta user profile attribute of
            one of the following types:

            * String (with no format or 'email' format only)

            * Integer

            * Number
          example: login
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
    SamlAlgorithms:
      description: Settings for signing and verifying SAML messages
      type: object
      properties:
        request:
          $ref: '#/components/schemas/SamlRequestAlgorithm'
        response:
          $ref: '#/components/schemas/SamlResponseAlgorithm'
    SamlCredentials:
      description: >-
        Federation Trust Credentials for verifying assertions from the IdP and
        signing requests to the IdP
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/SamlSigningCredentials'
        trust:
          $ref: '#/components/schemas/SamlTrustCredentials'
    SamlEndpoints:
      description: SAML 2.0 HTTP binding settings for IdP and SP (Okta)
      type: object
      properties:
        acs:
          $ref: '#/components/schemas/SamlAcsEndpoint'
        slo:
          $ref: '#/components/schemas/SamlSloEndpoint'
        sso:
          $ref: '#/components/schemas/SamlSsoEndpoint'
    SamlRelayState:
      description: Relay state settings for IdP
      type: object
      properties:
        format:
          $ref: '#/components/schemas/SamlRelayStateFormat'
    SamlSettings:
      description: Advanced settings for the SAML 2.0 protocol
      type: object
      properties:
        honorPersistentNameId:
          type: boolean
          description: >-
            Determines if the IdP should persist account linking when the
            incoming assertion NameID format is
            `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`
          default: true
        nameFormat:
          $ref: '#/components/schemas/SamlNameIdFormat'
        participateSlo:
          type: boolean
          description: >-
            Set to `true` to have Okta send a logout request to the upstream IdP
            when a user signs out of Okta or a downstream app.
        sendApplicationContext:
          type: boolean
          description: >-
            Determines if the IdP should send the application context as
            `<OktaAppInstanceId>` and `<OktaAppName>` in the
            `<saml2p:Extensions>` element of the `<AuthnRequest>` message
          default: false
    OAuthCredentials:
      description: >-
        Client authentication credentials for an [OAuth 2.0 Authorization
        Server](https://tools.ietf.org/html/rfc6749#section-2.3)
      type: object
      properties:
        client:
          $ref: '#/components/schemas/OAuthCredentialsClient'
        signing:
          $ref: '#/components/schemas/AppleClientSigning'
    OAuthEndpoints:
      description: >-
        The `OAUTH2` and `OIDC` protocols support the `authorization` and
        `token` endpoints. Also, the `OIDC` protocol supports the `userInfo` and
        `jwks` endpoints.


        The IdP Authorization Server (AS) endpoints are currently defined as
        part of the [IdP
        provider]((https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=type&t=request))
        and are read-only.
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/OAuthAuthorizationEndpoint'
        jwks:
          $ref: '#/components/schemas/OidcJwksEndpoint'
        slo:
          $ref: '#/components/schemas/OidcSloEndpoint'
        token:
          $ref: '#/components/schemas/OAuthTokenEndpoint'
        userInfo:
          $ref: '#/components/schemas/OidcUserInfoEndpoint'
    OAuthScopes:
      description: >-
        IdP-defined permission bundles to request delegated access from the
        user.

        > **Note:** The [identity provider
        type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=type&t=request)
        table lists the scopes that are supported for each IdP.
      items:
        type: string
        example: public_profile
      type: array
    OidcAlgorithms:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/OidcRequestAlgorithm'
    OidcSettings:
      description: Advanced settings for the OpenID Connect protocol
      type: object
      properties:
        participateSlo:
          type: boolean
          description: >-
            Set to `true` to have Okta send a logout request to the upstream IdP
            when a user signs out of Okta or a downstream app.
        sendApplicationContext:
          type: boolean
          description: >-
            Determines if the IdP should send the application context as
            `OktaAppInstanceId` and `OktaAppName` params in the request
          default: false
    MtlsCredentials:
      description: >-
        Certificate chain description for verifying assertions from the Smart
        Card
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/MtlsTrustCredentials'
    MtlsEndpoints:
      type: object
      properties:
        sso:
          $ref: '#/components/schemas/MtlsSsoEndpoint'
    IDVCredentials:
      description: Credentials for verifying requests to the IDV
      type: object
      properties:
        bearer:
          type: object
          description: Client credential for `IDV_PERSONA` IdP type
          properties:
            apiKey:
              type: string
              description: The API key that you generate in your Persona dashboard
          required:
            - apiKey
        client:
          type: object
          description: >-
            <x-lifecycle-container><x-lifecycle
            class="oie"></x-lifecycle></x-lifecycle-container>Client credentials
            for `IDV_CLEAR` and `IDV_INCODE` IdP types
          properties:
            client_id:
              type: string
              description: The client ID that you generate in your IDV
            client_secret:
              type: string
              description: The client secret that you generate in your IDV
          required:
            - client_id
            - client_secret
          x-okta-lifecycle:
            lifecycle: LIMITED_GA
            isGenerallyAvailable: false
            SKUs: []
    IDVEndpoints:
      description: Contains the endpoints for the IDV
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/IDVAuthorizationEndpoint'
        par:
          $ref: '#/components/schemas/IDVParEndpoint'
        token:
          $ref: '#/components/schemas/IDVTokenEndpoint'
      readOnly: true
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    PolicyAccountLinkAction:
      description: Specifies the account linking action for an IdP user
      type: string
      enum:
        - AUTO
        - DISABLED
      x-enumDescriptions:
        AUTO: >-
          The IdP user is automatically linked to an Okta user when the
          transformed IdP user matches an existing Okta user according to
          [subject match
          rules](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=policy/subject&t=request).
        DISABLED: >-
          Okta never attempts to link the IdP user to an existing Okta user, but
          may still attempt to provision a new Okta user according to the
          [provisioning action
          type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=policy/provisioning/action&t=request).
    PolicyAccountLinkFilter:
      description: >-
        Specifies filters on which users are available for account linking by an
        IdP
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
        users:
          $ref: '#/components/schemas/PolicyAccountLinkFilterUsers'
    ProvisioningAction:
      description: >-
        Specifies the user provisioning action during authentication when an IdP
        user isn't linked to an existing Okta user.

        * To successfully provision a new Okta user, you must enable
        just-in-time (JIT) provisioning in your org security settings.

        * If the target username isn't unique or the resulting Okta user profile
        is missing a required profile attribute, JIT provisioning may fail.

        * New Okta users are provisioned with either a `FEDERATION` or `SOCIAL`
        authentication provider depending on the IdP type.
      type: string
      enum:
        - AUTO
        - DISABLED
      x-enumDescriptions:
        AUTO: >-
          The IdP user profile is transformed through defined universal
          directory profile mappings to an Okta user profile and automatically
          provisioned as an Okta user.
        DISABLED: >-
          Okta rejects the authentication request and skips provisioning of a
          new Okta user if the IdP user isn't linked to an existing Okta user.
    ProvisioningConditions:
      description: Conditional behaviors for an IdP user during authentication
      type: object
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
    ProvisioningGroups:
      description: Provisioning settings for a user's group memberships
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningGroupsAction'
        assignments:
          type: array
          description: >-
            List of `OKTA_GROUP` group identifiers to add an IdP user as a
            member with the `ASSIGN` action
          items:
            type: string
            example: 00gak46y5hydV6NdM0g4
        filter:
          type: array
          description: >-
            Allowlist of `OKTA_GROUP` group identifiers for the `APPEND` or
            `SYNC` provisioning action
          items:
            type: string
            example: 00gak46y5hydV6NdM0g4
        sourceAttributeName:
          type: string
          description: >-
            IdP user profile attribute name (case-insensitive) for an array
            value that contains group memberships
          maxLength: 1024
          example: Groups
    PolicySubjectMatchType:
      description: >-
        Determines the Okta user profile attribute match conditions for account
        linking and authentication of the transformed IdP username
      type: string
      enum:
        - CUSTOM_ATTRIBUTE
        - EMAIL
        - USERNAME
        - USERNAME_OR_EMAIL
    PolicyUserNameTemplate:
      description: >-
        [Okta Expression Language (EL)
        expression](https://developer.okta.com/docs/reference/okta-expression-language/)
        to generate or transform a unique username for the IdP user.

        * IdP user profile attributes can be referenced with the `idpuser`
        prefix such as `idpuser.subjectNameId`.

        * You must define an IdP user profile attribute before it can be
        referenced in an Okta EL expression. To define an IdP user attribute
        policy, you may need to create a new IdP instance without a base profile
        property. Then edit the IdP user profile to update the IdP instance with
        an expression that references the IdP user profile attribute that you
        just created.
      type: object
      properties:
        template:
          type: string
          minLength: 9
          maxLength: 1024
          example: idpuser.subjectNameId
    SamlRequestAlgorithm:
      description: Algorithm settings used to secure an `<AuthnRequest>` message
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/SamlRequestSignatureAlgorithm'
    SamlResponseAlgorithm:
      description: >-
        Algorithm settings for verifying `<SAMLResponse>` messages and
        `<Assertion>` elements from the IdP
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/SamlResponseSignatureAlgorithm'
    SamlSigningCredentials:
      description: Key used for signing requests to the IdP
      type: object
      properties:
        kid:
          $ref: '#/components/schemas/ProtocolCredentialsKeyId'
    SamlTrustCredentials:
      description: Federation Trust Credentials for verifying assertions from the IdP
      type: object
      properties:
        additionalKids:
          description: >-
            Additional IdP key credential reference to the Okta X.509 signature
            certificate
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ProtocolCredentialsKeyId'
        audience:
          type: string
          description: >-
            URI that identifies the target Okta IdP instance (SP) for an
            `<Assertion>`
          maxLength: 1024
          example: https://www.okta.com/saml2/service-provider/spgv32vOnpdyeGSaiUpL
        issuer:
          type: string
          description: >-
            URI that identifies the issuer (IdP) of a `<SAMLResponse>` message
            `<Assertion>` element
          maxLength: 1024
          example: urn:example:idp
        kid:
          $ref: '#/components/schemas/ProtocolCredentialsKeyId'
    SamlAcsEndpoint:
      description: >-
        Okta's `SPSSODescriptor` endpoint where the IdP sends a `<SAMLResponse>`
        message
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        type:
          $ref: '#/components/schemas/SamlEndpointType'
    SamlSloEndpoint:
      description: >-
        IdP's `SingleLogoutService` endpoint where Okta sends a
        `<LogoutRequest>` message
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: >-
            URL of the binding-specific IdP endpoint where Okta sends a
            `<LogoutRequest>`
          maxLength: 1014
          example: https://idp.example.com/saml2/slo
    SamlSsoEndpoint:
      description: >-
        IdP's `SingleSignOnService` endpoint where Okta sends an
        `<AuthnRequest>` message
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        destination:
          type: string
          description: >-
            URI reference that indicates the address to which the
            `<AuthnRequest>` message is sent.

            The `destination` property is required if request signatures are
            specified. See [SAML 2.0 Request Algorithm
            object](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=protocol/0/algorithms/request&t=request).
          maxLength: 512
          example: https://idp.example.com/saml2/sso
        url:
          type: string
          description: >-
            URL of the binding-specific endpoint to send an `<AuthnRequest>`
            message to the IdP.

            The value of `url` defaults to the same value as the `sso` endpoint
            if omitted during creation of a new IdP instance.

            The `url` should be the same value as the `Location` attribute for a
            published binding in the IdP's SAML Metadata `IDPSSODescriptor`.
          maxLength: 1014
          example: https://idp.example.com/saml2/sso
    SamlRelayStateFormat:
      description: >-
        The format used to generate the `relayState` in the SAML request. The
        `FROM_URL` format is used if this value is null.
      type: string
      enum:
        - FROM_URL
        - OPAQUE
    SamlNameIdFormat:
      description: SAML 2.0 Name Identifier formats
      default: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
      type: string
      enum:
        - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
        - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
    OAuthCredentialsClient:
      description: >-
        OAuth 2.0 and OpenID Connect Client object

        > **Note:** You must complete client registration with the IdP
        Authorization Server for your Okta IdP instance to obtain client
        credentials.
      type: object
      properties:
        client_id:
          type: string
          description: >-
            The [Unique
            identifier](https://tools.ietf.org/html/rfc6749#section-2.2) issued
            by the AS for the Okta IdP instance
          maxLength: 1024
          example: your-client-id
        client_secret:
          type: string
          description: >-
            The [Client
            secret](https://tools.ietf.org/html/rfc6749#section-2.3.1) issued by
            the AS for the Okta IdP instance
          maxLength: 1024
          example: your-client-secret
        pkce_required:
          type: boolean
          description: >-
            Require Proof Key for Code Exchange (PKCE) for additional
            verification
        token_endpoint_auth_method:
          type: string
          description: Client authentication methods supported by the token endpoint
          enum:
            - private_key_jwt
    AppleClientSigning:
      description: >-
        Information used to generate the secret JSON Web Token for the token
        requests to Apple IdP

        > **Note:** The `privateKey` property is required for a CREATE request.
        For an UPDATE request, it can be null and keeps the existing value if
        it's null. The `privateKey` property isn't returned for LIST and GET
        requests or UPDATE requests if it's null.
      type: object
      properties:
        kid:
          type: string
          description: >-
            The key ID that you obtained from Apple when you created the private
            key for the client
          maxLength: 1024
          example: test key id
        privateKey:
          type: string
          description: >-
            The PKCS \#8 encoded private key that you created for the client and
            downloaded from Apple
          maxLength: 1024
          example: MIGTAgEAMBM........Cb9PnybCnzDv+3cWSGWqpAIsQQZ
        teamId:
          type: string
          description: The Team ID associated with your Apple developer account
          maxLength: 1024
          example: test team id
    OAuthAuthorizationEndpoint:
      description: >-
        Endpoint for an [OAuth 2.0 Authorization Server
        (AS)](https://tools.ietf.org/html/rfc6749#page-18)
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the IdP Authorization Server (AS) authorization endpoint
          example: https://idp.example.com/authorize
    OidcJwksEndpoint:
      description: >-
        Endpoint for the JSON Web Key Set (JWKS) document. This document
        contains signing keys that are used to validate the signatures from the
        provider. For more information on JWKS, see [JSON Web
        Key](https://tools.ietf.org/html/rfc7517).
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the endpoint to the JWK Set
          example: https://idp.example.com/keys
    OidcSloEndpoint:
      description: OIDC IdP logout endpoint
      type: object
      properties:
        url:
          type: string
          description: IdP logout endpoint URL
          maxLength: 1014
          example: https://idp.example.com/saml2/slo
    OAuthTokenEndpoint:
      description: >-
        Endpoint for an [OAuth 2.0 Authorization Server
        (AS)](https://tools.ietf.org/html/rfc6749#page-18)
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the IdP Authorization Server (AS) token endpoint
          example: https://idp.example.com/token
    OidcUserInfoEndpoint:
      description: >-
        Endpoint for getting identity information about the user. For more
        information on the `/userinfo` endpoint, see [OpenID
        Connect](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the resource server's `/userinfo` endpoint
          example: https://idp.example.com/userinfo
    OidcRequestAlgorithm:
      description: Algorithm settings used to sign an authorization request
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/OidcRequestSignatureAlgorithm'
    MtlsTrustCredentials:
      type: object
      properties:
        audience:
          type: string
          description: Not used
          example: null
        issuer:
          type: string
          description: Description of the certificate issuer
          maxLength: 1024
          example: CN=Test Smart Card, OU=Test OU, O=Test O, C=US
        kid:
          $ref: '#/components/schemas/ProtocolCredentialsKeyId'
        revocation:
          $ref: '#/components/schemas/MtlsTrustCredentialsRevocation'
        revocationCacheLifetime:
          type: number
          description: Time in minutes to cache the certificate revocation information
          maximum: 4320
          example: 2880
    MtlsSsoEndpoint:
      description: >-
        The Single Sign-On (SSO) endpoint is the IdP's `SingleSignOnService`
        endpoint
      type: object
      properties:
        url:
          type: string
          maxLength: 1014
          example: https://{yourOktaDomain}.okta.com/login/cert
    IDVAuthorizationEndpoint:
      description: IDV authorization endpoint
      type: object
      properties:
        binding:
          type: string
          enum:
            - HTTP-REDIRECT
        url:
          type: string
          description: URL of the IDV `authorization` endpoint
      readOnly: true
    IDVParEndpoint:
      description: IDV [PAR](https://datatracker.ietf.org/doc/html/rfc9126) endpoint
      type: object
      properties:
        binding:
          type: string
          enum:
            - HTTP-POST
        url:
          type: string
          description: URL of the IDV `par` endpoint
      readOnly: true
    IDVTokenEndpoint:
      description: IDV token endpoint
      type: object
      properties:
        binding:
          type: string
          enum:
            - HTTP-POST
        url:
          type: string
          description: URL of the IDV `token` endpoint
      readOnly: true
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    PolicyAccountLinkFilterGroups:
      description: Group memberships used to determine link candidates
      type: object
      properties:
        include:
          type: array
          description: >-
            Specifies the allowlist of Group identifiers to match against. Group
            memberships are restricted to type `OKTA_GROUP`.
          items:
            type: string
            example: 00gjg5lzfBpn62wuF0g3
    PolicyAccountLinkFilterUsers:
      description: Filters on which users are available for account linking
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      type: object
      properties:
        exclude:
          type: array
          description: >-
            Specifies the blocklist of user identifiers to exclude from account
            linking
          items:
            type: string
            example: 00u2c0nz7wj4UBs8V0g5
        excludeAdmins:
          type: boolean
          description: >-
            Specifies whether admin users should be excluded from account
            linking
          default: false
    ProvisioningDeprovisionedCondition:
      description: >-
        Behavior for a previously deprovisioned IdP user during authentication.
        Not supported with OIDC IdPs.
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningDeprovisionedAction'
    ProvisioningSuspendedCondition:
      description: >-
        Behavior for a previously suspended IdP user during authentication. Not
        supported with OIDC IdPs.
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningSuspendedAction'
    ProvisioningGroupsAction:
      description: >-
        Provisioning action for the IdP user's group memberships


        | Enum     |
        Description                                                                                                                                                      
        | Existing OKTA_GROUP
        Memberships                                                                      
        | Existing APP_GROUP Memberships | Existing BUILT_IN Memberships |

        | -------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        |
        -----------------------------------------------------------------------------------------------------
        | ------------------------------ | ----------------------------- |

        | `APPEND` | Adds a user to any group defined by the IdP as a value of
        the `sourceAttributeName` array that matches the name of the allow
        listed group defined in the `filter` |
        Unchanged                                                                                            
        | Unchanged                      | Unchanged                     |

        | `ASSIGN` | Assigns a user to groups defined in the `assignments`
        array                                                                                                      
        |
        Unchanged                                                                                            
        | Unchanged                      | Unchanged                     |

        | `NONE`   | Skips processing of group
        memberships                                                                                                                            
        |
        Unchanged                                                                                            
        | Unchanged                      | Unchanged                     |

        | `SYNC`   | Group memberships are sourced by the IdP as a value of the
        `sourceAttributeName` array that matches the name of the group defined
        in the `filter`                 | Removed if not defined by the IdP in
        `sourceAttributeName` and matching name of the group in `filter` |
        Unchanged                      | Unchanged                     |


        > **Note:** Group provisioning action is processed independently from
        profile sourcing. You can sync group memberships through SAML with
        profile sourcing disabled.
      type: string
      enum:
        - APPEND
        - ASSIGN
        - NONE
        - SYNC
    SamlRequestSignatureAlgorithm:
      description: >-
        XML digital Signature Algorithm settings for signing `<AuthnRequest>`
        messages sent to the IdP

        > **Note:**  The `algorithm` property is ignored when you disable
        request signatures (`scope` set as `NONE`).
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/SamlSigningAlgorithm'
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmRequestScope'
    SamlResponseSignatureAlgorithm:
      description: >-
        XML digital Signature Algorithm settings for verifying `<SAMLResponse>`
        messages and `<Assertion>` elements from the IdP
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/SamlSigningAlgorithm'
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmResponseScope'
    ProtocolCredentialsKeyId:
      description: IdP key credential reference to the Okta X.509 signature certificate
      example: your-key-id
      type: string
    ProtocolEndpointBinding:
      type: string
      enum:
        - HTTP-POST
        - HTTP-REDIRECT
    SamlEndpointType:
      description: >-
        Determines whether to publish an instance-specific (trust) or
        organization (shared) ACS endpoint in the SAML metadata
      default: INSTANCE
      type: string
      enum:
        - INSTANCE
        - ORG
    OidcRequestSignatureAlgorithm:
      description: >-
        Signature Algorithm settings for signing authorization requests sent to
        the IdP

        > **Note:**  The `algorithm` property is ignored when you disable
        request signatures (`scope` set as `NONE`).
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/OidcSigningAlgorithm'
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmRequestScope'
    MtlsTrustCredentialsRevocation:
      description: Mechanism to validate the certificate
      example: CRL
      type: string
      enum:
        - CRL
        - DELTA_CRL
        - OCSP
    ProvisioningDeprovisionedAction:
      description: >-
        Specifies the action during authentication when an IdP user is linked to
        a previously deprovisioned Okta user
      type: string
      enum:
        - NONE
        - REACTIVATE
      x-enumDescriptions:
        NONE: >-
          Take no action. If an IdP user that matches a previously deprovisioned
          Okta user attempts to authenticate, authentication fails.
        REACTIVATE: >-
          If an IdP user that matches a previously deprovisioned Okta user
          attempts to authenticate, reactivate the matching user in Okta and
          allow the authentication attempt to proceed.
    ProvisioningSuspendedAction:
      description: >-
        Specifies the action during authentication when an IdP user is linked to
        a previously suspended Okta user
      type: string
      enum:
        - NONE
        - UNSUSPEND
      x-enumDescriptions:
        NONE: >-
          Take no action. If an IdP user that matches a previously suspended
          Okta user attempts to authenticate, authentication fails.
        UNSUSPEND: >-
          If an IdP user that matches a previously suspended Okta user attempts
          to authenticate, unsuspend the matching user in Okta and allow the
          authentication attempt to proceed.
    SamlSigningAlgorithm:
      example: SHA-256
      type: string
      enum:
        - SHA-1
        - SHA-256
    ProtocolAlgorithmRequestScope:
      description: Specifies whether to digitally sign authorization requests to the IdP
      example: REQUEST
      type: string
      enum:
        - NONE
        - REQUEST
    ProtocolAlgorithmResponseScope:
      description: Specifies whether to verify responses from the IdP
      example: ANY
      type: string
      enum:
        - ANY
        - RESPONSE
        - TOKEN
    OidcSigningAlgorithm:
      type: string
      enum:
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    pathKid:
      name: kid
      description: Unique `id` of the IdP key credential
      in: path
      required: true
      schema:
        type: string
        example: KmMo85SSsU7TZzOShcGb
    pathIdpId:
      name: idpId
      description: '`id` of IdP'
      in: path
      required: true
      schema:
        type: string
        example: 0oa62bfdjnK55Z5x80h7
    pathIdpCsrId:
      name: idpCsrId
      description: '`id` of the IdP CSR'
      in: path
      required: true
      schema:
        type: string
        example: 1uEhyE65oV3H6KM9gYcN
    queryFilter:
      name: q
      in: query
      description: Searches the records for matching value
      schema:
        type: string
    pathUserId:
      name: userId
      description: ID of an existing Okta user
      in: path
      required: true
      schema:
        type: string
        example: 00ub0oNGTSWTBKOLGLNR
  examples:
    MultipleIdPsResponse:
      summary: Multiple IdPs
      value:
        - id: 0oa62b57p7c8PaGpU0h7
          type: FACEBOOK
          name: Facebook
          status: ACTIVE
          created: '2016-03-24T23:18:27.000Z'
          lastUpdated: '2016-03-24T23:18:27.000Z'
          protocol:
            type: OAUTH2
            endpoints:
              authorization:
                url: https://www.facebook.com/dialog/oauth
                binding: HTTP-REDIRECT
              token:
                url: https://graph.facebook.com/v2.5/oauth/access_token
                binding: HTTP-POST
            scopes:
              - public_profile
              - email
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62b57p7c8PaGpU0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oa62bc8wppPw0UGr0h7
          type: SAML2
          name: Example SAML IdP
          status: ACTIVE
          created: '2016-03-24T23:14:54.000Z'
          lastUpdated: '2016-03-24T23:14:54.000Z'
          protocol:
            type: SAML2
            endpoints:
              sso:
                url: https://idp.example.com
                binding: HTTP-POST
                destination: https://idp.example.com
              acs:
                binding: HTTP-POST
                type: INSTANCE
            algorithms:
              request:
                signature:
                  algorithm: SHA-256
                  scope: REQUEST
              response:
                signature:
                  algorithm: SHA-256
                  scope: ANY
            settings:
              nameFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
            credentials:
              trust:
                issuer: https://idp.example.com
                audience: http://www.okta.com/123
                kid: your-key-id
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: saml.subjectNameId
              filter: (\S+@example\.com)
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            metadata:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml
              type: application/xml
              hints:
                allow:
                  - GET
            acs:
              href: https://{yourOktaDomain}/sso/saml2/0oa62bc8wppPw0UGr0h7
              type: application/xml
              hints:
                allow:
                  - POST
            users:
              href: https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/users
              hints:
                allow:
                  - GET
            deactivate:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/deactivate
              hints:
                allow:
                  - POST
        - id: 0oa62bfdiumsUndnZ0h7
          type: GOOGLE
          name: Google
          status: ACTIVE
          created: '2016-03-24T23:21:49.000Z'
          lastUpdated: '2016-03-24T23:21:49.000Z'
          protocol:
            type: OIDC
            endpoints:
              authorization:
                url: https://accounts.google.com/o/oauth2/auth
                binding: HTTP-REDIRECT
              token:
                url: https://www.googleapis.com/oauth2/v3/token
                binding: HTTP-POST
            scopes:
              - profile
              - email
              - openid
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oa62bfdjnK55Z5x80h7
          type: LINKEDIN
          name: LinkedIn
          status: ACTIVE
          created: '2016-03-24T23:23:59.000Z'
          lastUpdated: '2016-03-24T23:23:59.000Z'
          protocol:
            type: OAUTH2
            endpoints:
              authorization:
                url: https://www.linkedin.com/uas/oauth2/authorization
                binding: HTTP-REDIRECT
              token:
                url: https://www.linkedin.com/uas/oauth2/accessToken
                binding: HTTP-POST
            scopes:
              - r_basicprofile
              - r_emailaddress
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdjnK55Z5x80h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oajmvdFawBih4gey0g3
          type: MICROSOFT
          name: Microsoft
          status: ACTIVE
          created: '2016-03-29T16:47:36.000Z'
          lastUpdated: '2016-03-29T16:47:36.000Z'
          protocol:
            type: OIDC
            endpoints:
              authorization:
                url: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
                binding: HTTP-REDIRECT
              token:
                url: https://login.microsoftonline.com/common/oauth2/v2.0/token
                binding: HTTP-POST
            scopes:
              - openid
              - email
              - profile
              - https://graph.microsoft.com/User.Read
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oajmvdFawBih4gey0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oaulob4BFVa4zQvt0g3
          type: OIDC
          name: Example OpenID Connect IdP
          status: ACTIVE
          created: '2019-02-07T20:07:47.000Z'
          lastUpdated: '2019-02-07T20:07:47.000Z'
          protocol:
            type: OIDC
            endpoints:
              authorization:
                url: https://idp.example.com/authorize
                binding: HTTP-REDIRECT
              token:
                url: https://idp.example.com/token
                binding: HTTP-POST
              userInfo:
                url: https://idp.example.com/userinfo
                binding: HTTP-REDIRECT
              jwks:
                url: https://idp.example.com/keys
                binding: HTTP-REDIRECT
            scopes:
              - openid
            issuer:
              url: https://idp.example.com
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: false
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.email
              filter: null
              matchType: USERNAME
              matchAttribute: null
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oaulob4BFVa4zQvt0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}&nonce={nonce}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oa6jxasyhwM2ZHJh0g4
          type: X509
          name: Smart Card IDP Name
          status: ACTIVE
          created: '2020-01-07T00:19:27.000Z'
          lastUpdated: '2020-01-07T00:19:27.000Z'
          properties:
            additionalAmr:
              - sc
              - hwk
              - pin
              - mfa
          protocol:
            type: MTLS
            endpoints:
              sso:
                url: https://{yourOktaDomain}.okta.com/login/cert
            credentials:
              trust:
                issuer: CN=Test Smart Card, OU=Test OU, O=Test O, C=US
                audience: null
                kid: 45dec5ff-8cdc-48c0-85fe-a4869f1753dc
                revocation: CRL
                revocationCacheLifetime: 2880
          policy:
            provisioning:
              action: DISABLED
              profileMaster: false
              groups: null
            subject:
              userNameTemplate:
                template: idpuser.subjectAltNameEmail
              filter: null
              matchType: EMAIL
              matchAttribute: null
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            deactivate:
              href: >-
                https://{yourOktaDomain}.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/lifecycle/deactivate
              hints:
                allow:
                  - POST
            users:
              href: >-
                https://{yourOktaDomain}.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/users
              hints:
                allow:
                  - GET
            keys:
              href: >-
                https://{yourOktaDomain}.okta.com/api/v1/idps/credentials/keys/45dec5ff-8cdc-48c0-85fe-a4869f1753dc
              hints:
                allow:
                  - GET
    CreateGenericOidcIdPRequest:
      summary: Create generic OpenID Connect IdP
      value:
        type: OIDC
        name: Example OpenID Connect IdP
        protocol:
          algorithms:
            request:
              signature:
                algorithm: HS256
                scope: REQUEST
          endpoints:
            acs:
              binding: HTTP-POST
              type: INSTANCE
            authorization:
              binding: HTTP-REDIRECT
              url: https://idp.example.com/authorize
            token:
              binding: HTTP-POST
              url: https://idp.example.com/token
            userInfo:
              binding: HTTP-REDIRECT
              url: https://idp.example.com/userinfo
            jwks:
              binding: HTTP-REDIRECT
              url: https://idp.example.com/keys
            slo:
              url: https://idp.example.com/slo
          scopes:
            - openid
            - profile
            - email
          settings:
            participateSlo: true
          type: OIDC
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
              pkce_required: 'true'
          issuer:
            url: https://idp.example.com
        policy:
          accountLink:
            action: AUTO
            filter: null
          provisioning:
            action: AUTO
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
            groups:
              action: NONE
          mapAMRClaims: false
          maxClockSkew: 120000
          subject:
            userNameTemplate:
              template: idpuser.email
            matchType: USERNAME
    CreateSamlIdPRequest:
      summary: Create SAML 2.0 IdP
      value:
        type: SAML2
        name: Example SAML IdP
        protocol:
          type: SAML2
          endpoints:
            sso:
              url: https://idp.example.com
              binding: HTTP-POST
              destination: https://idp.example.com
            slo:
              url: https://idp.example.com/slo
              binding: HTTP-POST
            acs:
              binding: HTTP-POST
              type: INSTANCE
          settings:
            participateSlo: true
          algorithms:
            request:
              signature:
                algorithm: SHA-256
                scope: REQUEST
            response:
              signature:
                algorithm: SHA-256
                scope: ANY
          credentials:
            trust:
              issuer: https://idp.example.com
              audience: http://www.okta.com/123
              kid: your-key-id
              additionalKids:
                - additional-key-id
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: saml.subjectNameId
            format:
              - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
            filter: (\S+@example\.com)
            matchType: USERNAME
    CreateAppleIdPRequest:
      summary: Create Apple IdP
      value:
        type: APPLE
        name: Apple IdP
        protocol:
          type: OIDC
          scopes:
            - openid
            - email
            - name
          credentials:
            client:
              client_id: your-client-id
            signing:
              privateKey: MIGTAgEAMBM........Cb9PnybCnzDv+3cWSGWqpAIsQQZ
              kid: test key ID
              teamId: test team ID
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.email
            matchType: USERNAME
    CreateFacebookIdPRequest:
      summary: Create Facebook IdP
      value:
        type: FACEBOOK
        name: Facebook
        protocol:
          type: OAUTH2
          scopes:
            - public_profile
            - email
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
    CreateGoogleIdPRequest:
      summary: Create Google IdP
      value:
        type: GOOGLE
        name: Google
        protocol:
          type: OAUTH2
          scopes:
            - profile
            - email
            - openid
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
    CreateMicrosoftIdPRequest:
      summary: Create Microsoft IdP
      value:
        type: MICROSOFT
        name: Microsoft
        protocol:
          type: OIDC
          scopes:
            - openid
            - email
            - profile
            - https://graph.microsoft.com/User.Read
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
    CreateSmartCardIdPRequest:
      summary: Create SmartCard IdP
      value:
        type: X509
        status: ACTIVE
        name: Smart Card IDP Name
        properties:
          additionalAmr:
            - sc
            - hwk
            - pin
            - mfa
        protocol:
          type: MTLS
          credentials:
            trust:
              revocation: CRL
              revocationCacheLifetime: 2880
              issuer: your-issuer
              kid: your-kid
        policy:
          provisioning:
            action: DISABLED
          mapAMRClaims: false
          maxClockSkew: 120000
          subject:
            matchType: EMAIL
            matchAttribute: ''
            userNameTemplate:
              template: idpuser.subjectAltNameEmail
    CreatePersonaIDVRequest:
      summary: Create Persona as IdP
      value:
        type: IDV_PERSONA
        name: Persona IDV
        protocol:
          type: ID_PROOFING
          credentials:
            bearer:
              apiKey: your-api-key
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          subject:
            userNameTemplate:
              template: source.userName
            filter: null
            matchType: USERNAME
            matchAttribute: null
          maxClockSkew: 0
        properties:
          inquiryTemplateId: itmpl_HSctx8fNvXoHtrQfz2hxUVH8RBjG
    CreateCLEARIDVRequest:
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs: []
      summary: Create CLEAR Verified as IdP
      value:
        type: IDV_CLEAR
        name: CLEAR Verified IDV
        protocol:
          type: ID_PROOFING
          scopes:
            - profile
            - identity_assurance
            - openid
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: source.userName
            filter: null
            matchType: USERNAME
            matchAttribute: null
          maxClockSkew: 0
    CreateIncodeIDVRequest:
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs: []
      summary: Create Incode as IdP
      value:
        type: IDV_INCODE
        name: Incode IDV
        protocol:
          type: ID_PROOFING
          scopes:
            - profile
            - identity_assurance
            - openid
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: source.userName
            filter: null
            matchType: USERNAME
            matchAttribute: null
          maxClockSkew: 0
    GenericOidcIdpResponse:
      summary: Generic OpenID Connect IdP
      value:
        id: 0oaulob4BFVa4zQvt0g3
        type: OIDC
        name: Example OpenID Connect IdP
        status: ACTIVE
        created: '2019-02-07T20:07:47.000Z'
        lastUpdated: '2019-02-07T20:07:47.000Z'
        protocol:
          type: OIDC
          endpoints:
            authorization:
              url: https://idp.example.com/authorize
              binding: HTTP-REDIRECT
            token:
              url: https://idp.example.com/token
              binding: HTTP-POST
            userInfo:
              url: https://idp.example.com/userinfo
              binding: HTTP-REDIRECT
            jwks:
              url: https://idp.example.com/keys
              binding: HTTP-REDIRECT
            slo:
              url: https://idp.example.com/slo
              binding: HTTP-REDIRECT
          algorithms:
            request:
              signature:
                algorithm: HS256
                scope: REQUEST
          scopes:
            - openid
          settings:
            participateSlo: true
          issuer:
            url: https://idp.example.com
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
              pkce_required: 'true'
        policy:
          provisioning:
            action: AUTO
            profileMaster: false
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.email
            filter: null
            matchType: USERNAME
            matchAttribute: null
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oaulob4BFVa4zQvt0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}&nonce={nonce}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    SamlIdPResponse:
      summary: SAML 2.0 IdP
      value:
        id: 0oa62bc8wppPw0UGr0h7
        type: SAML2
        name: Example SAML IdP
        status: ACTIVE
        created: '2016-03-24T23:14:54.000Z'
        lastUpdated: '2016-03-24T23:14:54.000Z'
        protocol:
          type: SAML2
          endpoints:
            sso:
              url: https://idp.example.com
              binding: HTTP-POST
              destination: https://idp.example.com
            slo:
              url: https://idp.example.com/slo
              binding: HTTP-POST
            acs:
              binding: HTTP-POST
              type: INSTANCE
          algorithms:
            request:
              signature:
                algorithm: SHA-256
                scope: REQUEST
            response:
              signature:
                algorithm: SHA-256
                scope: ANY
          settings:
            nameFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
            participateSlo: true
          credentials:
            trust:
              issuer: https://idp.example.com
              audience: http://www.okta.com/123
              kid: your-key-id
              additionalKids:
                - additional-key-id
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: saml.subjectNameId
            filter: (\S+@example\.com)
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          metadata:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml
            type: application/xml
            hints:
              allow:
                - GET
          acs:
            href: https://{yourOktaDomain}/sso/saml2/0oa62bc8wppPw0UGr0h7
            type: application/xml
            hints:
              allow:
                - POST
          users:
            href: https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/users
            hints:
              allow:
                - GET
          deactivate:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/deactivate
            hints:
              allow:
                - POST
    AppleIdPResponse:
      summary: Apple IdP
      value:
        id: 0oa18hsHsG3boVejU0g4
        type: APPLE
        issuerMode: ORG_URL
        name: Apple IdP
        status: ACTIVE
        created: '2020-06-05T20:57:51.000Z'
        lastUpdated: '2020-06-05T20:57:51.000Z'
        protocol:
          type: OIDC
          endpoints:
            authorization:
              url: https://appleid.apple.com/auth/authorize
              binding: HTTP-REDIRECT
            token:
              url: https://appleid.apple.com/auth/token
              binding: HTTP-POST
          scopes:
            - openid
            - email
            - name
          credentials:
            client:
              client_id: your-client-id
            signing:
              teamId: test team ID
              privateKey: MIGTAgEAMBM........Cb9PnybCnzDv+3cWSGWqpAIsQQZ
              kid: test key ID
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.email
            filter: null
            matchType: USERNAME
            matchAttribute: null
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa18hsHsG3boVejU0g4&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri=${redirectUri}&state={state}&nonce={nonce}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    FacebookIdPResponse:
      summary: Facebook IdP
      value:
        id: 0oa62b57p7c8PaGpU0h7
        type: FACEBOOK
        name: Facebook
        status: ACTIVE
        created: '2016-03-24T23:18:27.000Z'
        lastUpdated: '2016-03-24T23:18:27.000Z'
        protocol:
          type: OAUTH2
          endpoints:
            authorization:
              url: https://www.facebook.com/dialog/oauth
              binding: HTTP-REDIRECT
            token:
              url: https://graph.facebook.com/v2.5/oauth/access_token
              binding: HTTP-POST
          scopes:
            - public_profile
            - email
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62b57p7c8PaGpU0h7&
                        client_id={clientId}&response_type={responseType}&response_mode={responseMode}&
                        scope={scopes}&redirect_uri={redirectUri}&state={state}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    GoogleIdPResponse:
      summary: Google IdP
      value:
        id: 0oa62bfdiumsUndnZ0h7
        type: GOOGLE
        name: Google
        status: ACTIVE
        created: '2016-03-24T23:21:49.000Z'
        lastUpdated: '2016-03-24T23:21:49.000Z'
        protocol:
          type: OIDC
          endpoints:
            authorization:
              url: https://accounts.google.com/o/oauth2/auth
              binding: HTTP-REDIRECT
            token:
              url: https://www.googleapis.com/oauth2/v3/token
              binding: HTTP-POST
          scopes:
            - profile
            - email
            - openid
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&
                        client_id={clientId}&response_type={responseType}&response_mode={responseMode}&
                        scope={scopes}&redirect_uri={redirectUri}&state={state}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    MicrosoftIdPResponse:
      summary: Microsoft IdP
      value:
        id: 0oajmvdFawBih4gey0g3
        type: MICROSOFT
        name: Microsoft
        status: ACTIVE
        created: '2016-03-29T16:47:36.000Z'
        lastUpdated: '2016-03-29T16:47:36.000Z'
        protocol:
          type: OIDC
          endpoints:
            authorization:
              url: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
              binding: HTTP-REDIRECT
            token:
              url: https://login.microsoftonline.com/common/oauth2/v2.0/token
              binding: HTTP-POST
          scopes:
            - openid
            - email
            - profile
            - https://graph.microsoft.com/User.Read
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oajmvdFawBih4gey0g3&
                        client_id={clientId}&response_type={responseType}&response_mode={responseMode}&
                        scope={scopes}&redirect_uri={redirectUri}&state={state}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    SmartCardIdPResponse:
      summary: SmartCard IdP
      value:
        id: 0oa6jxasyhwM2ZHJh0g4
        type: X509
        name: Smart Card IDP Name
        status: ACTIVE
        created: '2020-01-07T00:19:27.000Z'
        lastUpdated: '2020-01-07T00:19:27.000Z'
        properties:
          additionalAmr:
            - sc
            - hwk
            - pin
            - mfa
        protocol:
          type: MTLS
          endpoints:
            sso:
              url: https://{yourOktaDomain}.okta.com/login/cert
          credentials:
            trust:
              issuer: CN=Test Smart Card, OU=Test OU, O=Test O, C=US
              audience: null
              kid: 45dec5ff-8cdc-48c0-85fe-a4869f1753dc
              revocation: CRL
              revocationCacheLifetime: 2880
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          subject:
            userNameTemplate:
              template: idpuser.subjectAltNameEmail
            filter: null
            matchType: EMAIL
            matchAttribute: null
          mapAMRClaims: false
          maxClockSkew: 120000
        _links:
          deactivate:
            href: >-
              https://{yourOktaDomain}.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/lifecycle/deactivate
            hints:
              allow:
                - POST
          users:
            href: >-
              https://{yourOktaDomain}.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/users
            hints:
              allow:
                - GET
          keys:
            href: >-
              https://{yourOktaDomain}.okta.com/api/v1/idps/credentials/keys/45dec5ff-8cdc-48c0-85fe-a4869f1753dc
            hints:
              allow:
                - GET
    PersonaIDVResponse:
      summary: Persona as IdP
      value:
        id: 0oa62bfdjnK55Z5x80h7
        name: Persona IDV
        status: ACTIVE
        created: '2023-10-01T12:00:00.000Z'
        lastUpdated: '2023-10-01T12:00:00.000Z'
        protocol:
          type: ID_PROOFING
          endpoints:
            authorization:
              url: https://withpersona.com/verify
              binding: HTTP-REDIRECT
          credentials:
            bearer:
              apiKey: your-api-key
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          subject:
            userNameTemplate:
              template: source.userName
            filter: null
            matchType: USERNAME
            matchAttribute: null
          maxClockSkew: 0
        properties:
          inquiryTemplateId: itmpl_HSctx8fNvXoHtrQfz2hxUVH8RBjG
        type: IDV_PERSONA
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/idps/0oa62bfdjnK55Z5x80h7
            hints:
              allow:
                - GET
                - DELETE
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bfdjnK55Z5x80h7/lifecycle/activate
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bfdjnK55Z5x80h7/lifecycle/deactivate
            hints:
              allow:
                - POST
    CLEARIDVResponse:
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs: []
      summary: CLEAR Verified as IdP
      value:
        id: 0oab50jh0UPiB6xde0w6
        name: CLEAR Verified IDV
        status: ACTIVE
        created: '2025-01-14T19:59:41.000Z'
        lastUpdated: '2025-01-14T19:59:41.000Z'
        protocol:
          type: ID_PROOFING
          endpoints:
            authorization:
              url: https://verified.clearme.com/oauth/idv_authorize
              binding: HTTP-REDIRECT
            token:
              url: https://verified.clearme.com/hydra/oauth2/token
              binding: HTTP-POST
            par:
              url: https://verified.clearme.com/oauth/par
              binding: HTTP-POST
          scopes:
            - openid
            - profile
            - identity_assurance
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          subject:
            userNameTemplate:
              template: source.userName
            filter: null
            matchType: USERNAME
            matchAttribute: null
          maxClockSkew: 0
        type: IDV_CLEAR
        _links:
          users:
            href: https://{yourOktaDomain}/api/v1/idps/0oab50jh0UPiB6xde0w6/users
            hints:
              allow:
                - GET
          deactivate:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oab50jh0UPiB6xde0w6/lifecycle/deactivate
            hints:
              allow:
                - POST
    IncodeIDVResponse:
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs: []
      summary: Incode as IdP
      value:
        id: 0oaf35tu47hnH9mlZ0w6
        name: Incode IdP
        status: ACTIVE
        created: '2025-01-15T20:54:04.000Z'
        lastUpdated: '2025-01-15T20:54:05.000Z'
        protocol:
          type: ID_PROOFING
          endpoints:
            authorization:
              url: https://auth.incode.com/oauth2/authorize
              binding: HTTP-REDIRECT
            token:
              url: https://auth.incode.com/oauth2/token
              binding: HTTP-POST
            par:
              url: https://auth.incode.com/oauth2/par
              binding: HTTP-POST
          scopes:
            - openid
            - profile
            - identity_assurance
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: DISABLED
            profileMaster: false
            groups: null
          subject:
            userNameTemplate:
              template: source.userName
            filter: null
            matchType: USERNAME
            matchAttribute: null
          maxClockSkew: 0
        type: IDV_INCODE
        _links:
          users:
            href: https://{yourOktaDomain}/api/v1/idps/0oaf35tu47hnH9mlZ0w6/users
            hints:
              allow:
                - GET
        deactivate:
          href: >-
            https://{yourOktaDomain}/api/v1/idps/0oaf35tu47hnH9mlZ0w6/lifecycle/deactivate
          hints:
            allow:
              - POST
    MultipleIdPKeyCredentialsResponse:
      summary: IdP key credentials
      value:
        - kid: your-key-id
          created: '2016-01-03T18:15:47.000Z'
          lastUpdated: '2016-01-03T18:15:47.000Z'
          e: '65537'
          'n': >-
            101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747
          kty: RSA
          use: sig
          x5c:
            - >-
              MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9
          x5t#S256: wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE
        - kty: EC
          created: '2020-04-24T20:51:20.000Z'
          lastUpdated: '2020-04-24T20:51:20.000Z'
          expiresAt: '2040-03-01T20:22:29.000Z'
          alg: EC
          x5c:
            - >-
              MIICqDCCAgqgAwIBAgIJAOkmCa/S8dHiMAoGCCqGSM49BAMCMG0xCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMRAwDgYDVQQKDAdKYW5reUNvMR8wHQYDVQQDDBZUZXN0IElkZW50aXR5IFByb3ZpZGVyMB4XDTIwMDMwNjIwMjIyOVoXDTQwMDMwMTIwMjIyOVowbTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEDAOBgNVBAoMB0phbmt5Q28xHzAdBgNVBAMMFlRlc3QgSWRlbnRpdHkgUHJvdmlkZXIwgZswEAYHKoZIzj0CAQYFK4EEACMDgYYABABW/lGHl17mKDtCD4D7gcMYYOWgyWTGno8MTefDOABA8PddessTsbfrguF49Gli6lCzrZaAKhhvgINc3R6t/dYleAE3lY6LAocOoLe9xDkeggXNcSuP5fDc1x5R9GHTXl44vLoJOLSLsMbOXVMXIXoqbPDzTSYUy24aFdv4W4LZxW6ak6NQME4wHQYDVR0OBBYEFChTXNWvs4z1qjRVemPDD/hqlDQ4MB8GA1UdIwQYMBaAFChTXNWvs4z1qjRVemPDD/hqlDQ4MAwGA1UdEwQFMAMBAf8wCgYIKoZIzj0EAwIDgYsAMIGHAkIBuDhHMNLbBIsorbKtjxJzHJ2ItCSD2wAwqYv/6JBtA2ulKN5gRTSqdNCnqFsZ1/nYY7FFVXHEuQ2N3pPq7Ri8h84CQSgCq1UQyd0lFtb7+57JbiGb6LVaRqRm7vwx8zLRA+tVjIM1DlQ2Gbxkj3nlkzmM93j9wchiqGdQidyKnF6EBnfd
          x: >-
            Vv5Rh5de5ig7Qg-A-4HDGGDloMlkxp6PDE3nwzgAQPD3XXrLE7G364LhePRpYupQs62WgCoYb4CDXN0erf3WJXg
          'y': >-
            ATeVjosChw6gt73EOR6CBc1xK4_l8NzXHlH0YdNeXji8ugk4tIuwxs5dUxcheips8PNNJhTLbhoV2_hbgtnFbpqT
          crv: P-521
          kid: your-kid
          use: sig
          x5t#S256: TUx-AIwypm2pZURHNqafk7ZDxqQP_ypzIyUwDDnPOlw
    IdPKeyCredentialResponse:
      summary: IdP key credential
      value:
        kid: your-key-id
        created: '2016-01-03T18:15:47.000Z'
        lastUpdated: '2016-01-03T18:15:47.000Z'
        e: '65537'
        'n': >-
          101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747
        kty: RSA
        use: sig
        x5c:
          - >-
            MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9
        x5t#S256: wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE
    IdPKeyCredentialRequest:
      summary: IdP key credential
      value:
        e: '65537'
        'n': >-
          101438407598598116085679865987760095721749307901605456708912786847324207000576780508113360584555007890315805735307890113536927352312915634368993759211767770602174860126854831344273970871509573365292777620005537635317282520456901584213746937262823585533063042033441296629204165064680610660631365266976782082747
        x5c:
          - >-
            MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9
        x5t#S256: wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE
    ReplaceIdPRequestResponse:
      summary: Replace an IdP
      value:
        id: 0oa62bc8wppPw0UGr0h7
        type: SAML2
        name: Example SAML IdP
        status: INACTIVE
        created: null
        lastUpdated: '2016-03-29T21:23:45.000Z'
        protocol:
          type: SAML2
          endpoints:
            sso:
              url: https://idp.example.com/saml2/sso
              binding: HTTP-REDIRECT
              destination: https://idp.example.com/saml2/sso
            slo:
              url: https://idp.example.com/slo
              binding: HTTP-POST
            acs:
              binding: HTTP-POST
              type: INSTANCE
          algorithms:
            request:
              signature:
                algorithm: SHA-256
                scope: REQUEST
            response:
              signature:
                algorithm: SHA-256
                scope: ANY
          settings:
            nameFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
            participateSlo: true
          credentials:
            trust:
              issuer: https://idp.example.com
              audience: https://www.okta.com/saml2/service-provider/spCQJRNaaxs7ANqKBO7M
              kid: your-key-id
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.subjectNameId
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 120000
        _links:
          metadata:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml
            type: application/xml
            hints:
              allow:
                - GET
          acs:
            href: https://{yourOktaDomain}/sso/saml2/0oa62bc8wppPw0UGr0h7
            type: application/xml
            hints:
              allow:
                - POST
          users:
            href: https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/users
            hints:
              allow:
                - GET
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/activate
            hints:
              allow:
                - POST
    MultipleIdPCsrsResponse:
      summary: IdP CSRs
      value:
        - id: h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50
          created: '2017-03-28T01:11:10.000Z'
          csr: >-
            MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=
          kty: RSA
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50
              hints:
                allow:
                  - GET
                  - DELETE
            publish:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50/lifecycle/publish
              hints:
                allow:
                  - POST
        - id: '-_-BFwAGoUYN-DDvsSKQFdx7OXaPZqrEPpFDO1hu-rg'
          created: '2017-03-28T01:21:10.000Z'
          csr: >-
            MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=
          kty: RSA
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/-_-BFwAGoUYN-DDvsSKQFdx7OXaPZqrEPpFDO1hu-rg
              hints:
                allow:
                  - GET
                  - DELETE
            publish:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/-_-BFwAGoUYN-DDvsSKQFdx7OXaPZqrEPpFDO1hu-rg/lifecycle/publish
              hints:
                allow:
                  - POST
    CsrJsonResponse:
      summary: CSR object in JSON format
      value:
        id: h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50
        created: '2017-03-28T01:11:10.000Z'
        csr: >-
          MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9/tKvvbFN59T4raoCs/78KRm4fSefHQOv1TKLXo4wTLbsqYWRWc5u0sd5orUMQgPQOyj3i6qh13mALY4BzrT057EG1BUNjGg29QgYlnOk2iX890e5BIDMQQEIKFrvOi2V8cLUkLvE2ydRn0VO1Q1frbUkYeStJYC5Api2JQsYRwa+1ZeDH1ITnIzUaugWhW2WB2lSnwZkenne5KtffxMPYVu+IhNRHoKaRA6Z51YNhMJIx17JM2hs/H4Ka3drk6kzDf7ofk/yBpb9yBWyU7CTSQhdoHidxqFprMDaT66W928t3AeOENHBuwn8c2K9WeGG+bELNyQRJVmawIDAQABoCowKAYJKoZIhvcNAQkOMRswGTAXBgNVHREEEDAOggxkZXYub2t0YS5jb20wDQYJKoZIhvcNAQELBQADggEBAA2hsVJRVM+A83X9MekjTnIbt19UNT8wX7wlE9jUKirWsxceLiZBpVGn9qfKhhVIpvdaIRSeoFYS2Kg/m1G6bCvjmZLcrQ5FcEBjZH2NKfNppGVnfC2ugtUkBtCB+UUzOhKhRKJtGugenKbP33zRWWIqnd2waF6Cy8TIuqQVPbwEDN9bCbAs7ND6CFYNguY7KYjWzQOeAR716eqpEEXuPYAS4nx/ty4ylonR8cv+gpq51rvq80A4k/36aoeM0Y6I4w64vhTfuvWW2UYFUD+/+y2FA2CSP4JfctySrf1s525v6fzTFZ3qZbB5OZQtP2b8xYWktMzywsxGKDoVDB4wkH4=
        kty: RSA
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50
            hints:
              allow:
                - GET
                - DELETE
          publish:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oad5lTSBOMUBOBVVQSC/credentials/csrs/h9zkutaSe7fZX0SwN1GqDApofgD1OW8g2B5l2azha50/lifecycle/publish
            hints:
              allow:
                - POST
    CsrPkcs10Response:
      summary: CSR in DER format
      value: >-
        MIIC4DCCAcgCAQAwcTELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xEzARBgNVBAoMCk9rdGEsIEluYy4xDDAKBgNVBAsMA0RldjESMBAGA1UEAwwJU1AgSXNzdWVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6m8jHVCr9
    MultipleIdPSigningKeyCredentialsResponse:
      summary: IdP signing key credentials
      value:
        - created: '2015-12-10T18:56:23.000Z'
          expiresAt: '2017-12-10T18:56:22.000Z'
          x5c:
            - >-
              MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw==
          kid: akm5hvbbevE341ovl0h7
          kty: RSA
          use: sig
          x5t#S256: 5GOpy9CQVtfvBmu2T8BHvpKE4OGtC3BuS046t7p9pps
        - created: '2015-12-10T18:55:35.000Z'
          expiresAt: '2045-01-23T02:15:23.000Z'
          x5c:
            - >-
              MIIDqDCCApCgAwIBAgIGAVGNQFX5MA0GCSqGSIb3DQEBBQUAMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTAeFw0xNTEyMTAxODU1MjJaFw0xNzEyMTAxODU2MjJaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxFTATBgNVBAMMDGJhbGFjb21wdGVzdDEcMBoGCSqGSIb3DQEJARYNaW5mb0Bva3RhLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJJjrcnI6cXBiXNq9YDgfYrQe2O5qEHG4MXP8Ue0sMeefFkFEHYHnHUeZCq6WTAGqR+1LFgOl+Eq9We5V+qNlGIfkFkQ3iHGBrIALKqLCd0Et76HicDiegz7j9DtN+lo0hG/gfcw5783L5g5xeQ7zVmCQMkFwoUA0uA3bsfUSrmfORHJL+EMNQT8XIXD8NkG4g6u7ylHVRTLgXbe+W/p04m3EP6l41xl+MhIpBaPxDsyUvcKCNwkZN3aZIin1O9Y4YJuDHxrM64/VtLLp0sC05iawAmfsLunF7rdJAkWUpPn+xkviyNQ3UpvwAYuDr+jKLUdh2reRnm1PezxMIXzBVMCAwEAATANBgkqhkiG9w0BAQUFAAOCAQEARnFIjyitrCGbleFr3KeAwdOyeHiRmgeKupX5ZopgXtcseJoToUIinX5DVw2fVZPahqs0Q7/a0wcVnTRpw6946qZCwKd/PvZ1feVuVEA5Ui3+XvHuSH5xLp7NvYG1snNEvlbN3+NDUMlWj2NEbihowUBt9+UxTpQO3+N08q3aZk3hOZ+tHt+1Te7KEEL/4CM28GZ9MY7fSrS7MAgp1+ZXtn+kRlMrXnQ49qBda37brwDRqmSY9PwNMbev3r+9ZHwxr9W5wXW4Ev4C4xngA7RkVoyDbItSUho0I0M0u/LHuppclnXrw97xyO5Z883eIBvPVjfRcxsJxXJ8jx70ATDskw==
          kid: akm5hvbn1vojA9Fsa0h7
          kty: RSA
          use: sig
          x5t#S256: 7CCyXWwKzH4P6PoBP91B1S_iIZVzuGffVnUXu-BTYQQ
    ActiveIdPSigningKeyCredentialResponse:
      summary: IdP active signing key credential
      value:
        - kty: RSA
          created: '2025-04-14T16:29:59.000Z'
          lastUpdated: '2025-04-14T16:29:59.000Z'
          expiresAt: '2035-04-14T16:29:59.000Z'
          kid: your-key-id
          use: sig
          x5c:
            - >-
              MIIDmDCCAoCgAwIBAgIGAZY1ItxEMA0GCSqGSIb3DQEBCwUAMIGMMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxDTALBgNVBAMMBHJhaW4xHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMjUwNDE0MTYyODU5WhcNMzUwNDE0MTYyOTU5WjCBjDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMQ0wCwYDVQQDDARyYWluMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwdmW7pNqxzmlrsWbHq6rQJDiMu4T344AKEzQ1jGffyCLCU+HKk5WqIVtQ4EJ5FU3Rk6kNeoTdkQbxn7t2QFj37ScHZkxXDbNEhFbZpvGh7+rYBG7TCnk8jO9ct/bpT+PCLCgC9L/67H2eCXXN+/gFVZAx7KEibb4NgUET2p34b5scGI2LwEefS+z8UBGlNkg9+SmI9PvjMXplFKazb6qlb27fp0PSfC4S5g8kOCqEGC9oNOCBHO5jyzlzcFq04AIaAX9N1X13UULrj+262O1+RCnQNTadbdrO6FXwfQ6lsLmvWCFBVzLTqxYxCGNY85lhAH1zjoEvXnInKYgnvmcuwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCXAU2SAJeWoQKz32ShqIwt2ESJS+IoIc+daB/e8mEPUoOgYscjdoUaWBsqXG7RizxrYNub0PXMb90f6Xdk5R4QjB/WqkR/+iupLfIxS1CbTNIzxudY2sfkSC0w8NOq77v4nE786NWDOlOaOOTn/aGLc57rBqwz6spQzNkabtAPw7umm7MpJBJ1K7yNAlwkoRTCM7rsxCvzjGf4OFe+1MaV0MlEr76wkIs6SqGodzPFFnbl2GzKf7NlL0FAdjWsJP9560b8MybAhHpXiQx8AsNW2Ggjvo2ejQKB3Yw/BaHLfcjgij/lcumfQD/P8Pox4trjSuQoRkKXxfdQvlnS9pB7
          x5t#S256: pX0kpGWPotMaEqqtIoOH9L-sFBa-htNFu0MZiJz1Hi4
          e: AQAB
          'n': >-
            wdmW7pNqxzmlrsWbHq6rQJDiMu4T344AKEzQ1jGffyCLCU-HKk5WqIVtQ4EJ5FU3Rk6kNeoTdkQbxn7t2QFj37ScHZkxXDbNEhFbZpvGh7-rYBG7TCnk8jO9ct_bpT-PCLCgC9L_67H2eCXXN-_gFVZAx7KEibb4NgUET2p34b5scGI2LwEefS-z8UBGlNkg9+SmI9PvjMXplFKazb6qlb27fp0PSfC4S5g8kOCqEGC9oNOCBHO5jyzlzcFq04AIaAX9N1X13UULrj-262O1-RCnQNTadbdrO6FXwfQ6lsLmvWCFBVzLTqxYxCGNY85lhAH1zjoEvXnInKYgnvmcuw
    IdPSigningKeyCredentialResponse:
      summary: IdP signing key credential
      value:
        created: '2015-12-10T18:56:23.000Z'
        expiresAt: '2017-12-10T18:56:22.000Z'
        kid: akm5hvbbevE341ovl0h7
        kty: RSA
        use: sig
        x5c:
          - >-
            MIIDnjCCAoagAwIBAgIGAVG3MN+PMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB2V4YW1wbGUxHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wHhcNMTUxMjE4MjIyMjMyWhcNMjUxMjE4MjIyMzMyWjCBjzELMAkGA1UEBhMCVVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoMBE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdleGFtcGxlMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtcnyvuVCrsFEKCwHDenS3Ocjed8eWDv3zLtD2K/iZfE8BMj2wpTfn6Ry8zCYey3mWlKdxIybnV9amrujGRnE0ab6Q16v9D6RlFQLOG6dwqoRKuZy33Uyg8PGdEudZjGbWuKCqqXEp+UKALJHV+k4wWeVH8g5d1n3KyR2TVajVJpCrPhLFmq1Il4G/IUnPe4MvjXqB6CpKkog1+ThWsItPRJPAM+RweFHXq7KfChXsYE7Mmfuly8sDQlvBmQyxZnFHVuiPfCvGHJjpvHy11YlHdOjfgqHRvZbmo30+y0X/oY/yV4YEJ00LL6eJWU4wi7ViY3HP6/VCdRjHoRdr5L/DwIDAQABMA0GCSqGSIb3DQEBBQUAA4IBAQCzzhOFkvyYLNFj2WDcq1YqD4sBy1iCia9QpRH3rjQvMKDwQDYWbi6EdOX0TQ/IYR7UWGj+2pXd6v0t33lYtoKocp/4lUvT3tfBnWZ5KnObi+J2uY2teUqoYkASN7F+GRPVOuMVoVgm05ss8tuMb2dLc9vsx93sDt+XlMTv/2qi5VPwaDtqduKkzwW9lUfn4xIMkTiVvCpe0X2HneD2Bpuao3/U8Rk0uiPfq6TooWaoW3kjsmErhEAs9bA7xuqo1KKY9CdHcFhkSsMhoeaZylZHtzbnoipUlQKSLMdJQiiYZQ0bYL83/Ta9fulr1EERICMFt3GUmtYaZZKHpWSfdJp9
        x5t#S256: wzPVobIrveR1x-PCbjsFGNV-6zn7Rm9KuOWOG4Rk6jE
    ActivateIdPResponse:
      summary: Activate an IdP
      value:
        id: 0oa62bfdiumsUndnZ0h7
        type: GOOGLE
        name: Google
        status: ACTIVE
        created: '2016-03-24T23:21:49.000Z'
        lastUpdated: '2016-03-25T19:14:23.000Z'
        protocol:
          type: OIDC
          endpoints:
            authorization:
              url: https://accounts.google.com/o/oauth2/auth
              binding: HTTP-REDIRECT
            token:
              url: https://www.googleapis.com/oauth2/v3/token
              binding: HTTP-POST
          scopes:
            - profile
            - email
            - openid
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.email
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&
                        client_id={clientId}&response_type={responseType}&response_mode={responseMode}&
                        scope={scopes}&redirect_uri={redirectUri}&state={state}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    DeactivateIdPResponse:
      summary: Deactivate an IdP
      value:
        id: 0oa62bfdiumsUndnZ0h7
        type: GOOGLE
        name: Google
        status: INACTIVE
        created: '2016-03-24T23:21:49.000Z'
        lastUpdated: '2016-03-25T19:16:53.000Z'
        protocol:
          type: OIDC
          endpoints:
            authorization:
              url: https://accounts.google.com/o/oauth2/auth
              binding: HTTP-REDIRECT
            token:
              url: https://www.googleapis.com/oauth2/v3/token
              binding: HTTP-POST
          scopes:
            - profile
            - email
            - openid
          credentials:
            client:
              client_id: your-client-id
              client_secret: your-client-secret
        policy:
          provisioning:
            action: AUTO
            profileMaster: true
            groups:
              action: NONE
            conditions:
              deprovisioned:
                action: NONE
              suspended:
                action: NONE
          accountLink:
            filter: null
            action: AUTO
          subject:
            userNameTemplate:
              template: idpuser.userPrincipalName
            filter: null
            matchType: USERNAME
          mapAMRClaims: false
          maxClockSkew: 0
        _links:
          authorize:
            href: >-
              https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&
                    client_id={clientId}&response_type={responseType}&response_mode={responseMode}&
                    scope={scopes}&redirect_uri={redirectUri}&state={state}
            templated: true
            hints:
              allow:
                - GET
          clientRedirectUri:
            href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
            hints:
              allow:
                - POST
    ListIdPUsersResponse:
      summary: List of linked IdP users
      value:
        - id: 00u5cl9lo7nMjHjPr0h7
          externalId: '109912936038778'
          created: '2015-11-03T19:10:11.000Z'
          lastUpdated: '2015-11-03T19:11:49.000Z'
          profile:
            firstName: Carol
            middleName: Lee
            lastName: Johnson
            email: carol_johnson@tfbnw.net
            displayName: Carol Johnson
            profile: https://www.facebook.com/app_scoped_user_id/109912936038778/
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oa4lb6lbtmH355Hx0h7/users/00u5cl9lo7nMjHjPr0h7
              hints:
                allow:
                  - GET
                  - DELETE
            idp:
              href: https://{yourOktaDomain}/api/v1/idps/0oa4lb6lbtmH355Hx0h7
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u5cl9lo7nMjHjPr0h7
    IdPAppUserResponse:
      summary: IdP user
      value:
        id: 00u5t60iloOHN9pBi0h7
        externalId: externalId
        created: '2017-12-19T17:30:16.000Z'
        lastUpdated: '2017-12-19T17:30:16.000Z'
        profile:
          profileUrl: null
          firstName: null
          lastName: null
          honorificSuffix: null
          displayName: null
          honorificPrefix: null
          middleName: null
          email: null
        _links:
          idp:
            href: https://{yourOktaDomain}/api/v1/idps/0oa62bfdiumsUndnZ0h7
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62bfdiumsUndnZ0h7/users/00u5t60iloOHN9pBi0h7
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7
    LinkIdPAppUserResponse:
      summary: Linked IdP user
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        externalId: '121749775026145'
        created: '2017-03-30T02:19:51.000Z'
        lastUpdated: '2017-03-30T02:19:51.000Z'
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/idps/0oa62b57p7c8PaGpU0h7/users/00ub0oNGTSWTBKOLGLNR
            hints:
              allow:
                - GET
                - DELETE
          idp:
            href: https://{yourOktaDomain}/api/v1/idps/0oa62b57p7c8PaGpU0h7
          user:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    SocialAuthTokensResponse:
      summary: Social authentication tokens
      value:
        - id: <unique token identifier>
          token: JBTWGV22G4ZGKV3N
          tokenType: urn:ietf:params:oauth:token-type:access_token
          tokenAuthScheme: Bearer
          expiresAt: '2014-08-06T16:56:31.000Z'
          scopes:
            - openid
            - foo
        - id: <unique token identifier>
          token: JBTWGV22G4ZJBRXJ
          tokenType: urn:ietf:params:oauth:token-type:id_token
          tokenAuthScheme: null
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    identity_providers:
      id: okta.idps.identity_providers
      name: identity_providers
      title: Identity Providers
      methods:
        list_identity_providers:
          operation:
            $ref: '#/paths/~1api~1v1~1idps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1lifecycle~1activate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1lifecycle~1deactivate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/identity_providers/methods/list_identity_providers
          - $ref: >-
              #/components/x-stackQL-resources/identity_providers/methods/get_identity_provider
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/identity_providers/methods/create_identity_provider
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/identity_providers/methods/delete_identity_provider
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/identity_providers/methods/replace_identity_provider
    keys:
      id: okta.idps.keys
      name: keys
      title: Keys
      methods:
        list_identity_provider_keys:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_identity_provider_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_identity_provider_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys~1{kid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_identity_provider_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys~1{kid}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_identity_provider_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1credentials~1keys~1{kid}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/keys/methods/list_identity_provider_keys
          - $ref: >-
              #/components/x-stackQL-resources/keys/methods/get_identity_provider_key
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/keys/methods/create_identity_provider_key
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/keys/methods/delete_identity_provider_key
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/keys/methods/replace_identity_provider_key
    csrs:
      id: okta.idps.csrs
      name: csrs
      title: Csrs
      methods:
        list_csrs_for_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_csr_for_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_csr_for_identity_provider:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs~1{idpCsrId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_csr_for_identity_provider:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs~1{idpCsrId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        publish_csr_for_identity_provider:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1idps~1{idpId}~1credentials~1csrs~1{idpCsrId}~1lifecycle~1publish/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/csrs/methods/list_csrs_for_identity_provider
          - $ref: >-
              #/components/x-stackQL-resources/csrs/methods/get_csr_for_identity_provider
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/csrs/methods/generate_csr_for_identity_provider
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/csrs/methods/revoke_csr_for_identity_provider
        replace: []
    signing_keys:
      id: okta.idps.signing_keys
      name: signing_keys
      title: Signing Keys
      methods:
        list_identity_provider_signing_keys:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        generate_identity_provider_signing_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1generate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_identity_provider_signing_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1{kid}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        clone_identity_provider_key:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1{kid}~1clone/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/signing_keys/methods/list_identity_provider_signing_keys
          - $ref: >-
              #/components/x-stackQL-resources/signing_keys/methods/get_identity_provider_signing_key
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/signing_keys/methods/generate_identity_provider_signing_key
        update: []
        delete: []
        replace: []
    active_idp_signing_keys:
      id: okta.idps.active_idp_signing_keys
      name: active_idp_signing_keys
      title: Active Idp Signing Keys
      methods:
        list_active_identity_provider_signing_key:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1credentials~1keys~1active/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/active_idp_signing_keys/methods/list_active_identity_provider_signing_key
        insert: []
        update: []
        delete: []
        replace: []
    idp_users:
      id: okta.idps.idp_users
      name: idp_users
      title: Idp Users
      methods:
        list_identity_provider_application_users:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_identity_provider_application_user:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        link_user_to_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unlink_user_from_identity_provider:
          operation:
            $ref: '#/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/idp_users/methods/list_identity_provider_application_users
          - $ref: >-
              #/components/x-stackQL-resources/idp_users/methods/get_identity_provider_application_user
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/idp_users/methods/unlink_user_from_identity_provider
        replace: []
    social_auth_tokens:
      id: okta.idps.social_auth_tokens
      name: social_auth_tokens
      title: Social Auth Tokens
      methods:
        list_social_auth_tokens:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1idps~1{idpId}~1users~1{userId}~1credentials~1tokens/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/social_auth_tokens/methods/list_social_auth_tokens
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
