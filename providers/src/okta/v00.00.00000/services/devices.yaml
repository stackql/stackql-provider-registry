openapi: 3.0.3
info:
  title: devices API
  description: okta devices API
  version: 5.1.0
paths:
  /api/v1/devices:
    get:
      summary: List all devices
      description: >-
        Lists all devices with pagination support.


        >**Note:** To list all devices enrolled by a user, use the [List all
        devices endpoint in the User Resources
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserResources/#tag/UserResources/operation/listUserDevices).


        You can return a subset of devices that match a supported search
        criteria using the `search` query parameter.

        Searches for devices based on the properties specified in the `search`
        parameter conforming SCIM filter specifications (case-insensitive). This
        data is eventually consistent. The API returns different results
        depending on specified queries in the request. Empty list is returned if
        no objects match `search` request.

        > **Note:** Listing devices with `search` should not be used as a part
        of any critical flow, such as authentication or updates, to prevent
        potential data loss. `search` results may not reflect the latest
        information, as this endpoint uses a search index which may not be
        up-to-date with recent updates to the object.


        Don't use search results directly for record updates, as the data might
        be stale and therefore overwrite newer data, resulting in data loss. 


        Use an `id` lookup for records that you update to ensure your results
        contain the latest data.


        This operation requires [URL
        encoding](https://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1).
        For example, `search=profile.displayName eq "Bob"` is encoded as
        `search=profile.displayName%20eq%20%22Bob%22`.
      operationId: listDevices
      parameters:
        - name: after
          in: query
          schema:
            type: string
            description: >-
              The cursor to use for pagination. It is an opaque string that
              specifies your current location in the list and is obtained from
              the `Link` response header. See [Pagination]https://developer.okta.com/docs/api#pagination for
              more information.
            example: 200u3des4afA47rYJu1d7
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 200
            example: 20
          description: A limit on the number of objects to return (recommend `20`)
        - name: search
          in: query
          description: >-
            A SCIM filter expression that filters the results. Searches include
            all device `profile` properties and the device `id`, `status`, and
            `lastUpdated` properties.


            Searches for devices can be filtered by the contains (`co`)
            operator. You can only use `co` with these select device profile
            attributes: `profile.displayName`, `profile.serialNumber`,
            `profile.imei`, `profile.meid`, `profile.udid`, and `profile.sid`.
            See [Operators](https://developer.okta.com/docs/api/#operators).
          schema:
            type: string
            example: lastUpdated gt "2019-06-01T09:00:00.000Z"
          examples:
            FilterByDeviceStatus:
              summary: Filter by device status
              value: status%20eq%20%22ACTIVE%22
            FilterByLastUpdatedTime:
              summary: Filter by last updated time
              value: lastUpdated%20gt%20%222024-12-23'T'00%3A00%3A00.000Z%22
            FilterByDeviceId:
              summary: Filter by device ID
              value: id%20eq%20%22guo4a5u7JHHhjXrMK0g4%22
            FilterByDeviceDisplayName:
              summary: Filter by device display name
              value: profile.displayName%20eq%20%22Bob%22
            FilterByDevicePlatform:
              summary: Filter by device platform
              value: profile.platform%20eq%20%22WINDOWS%22
            FilterBySID:
              summary: Filter by device security identifier (SID)
              value: profile.sid%20sw%20%22S-1%22
        - name: expand
          in: query
          description: >-
            Includes associated user details and management status for the
            device in the `_embedded` attribute
          schema:
            type: string
            example: userSummary
            enum:
              - user
              - userSummary
            x-enumDescriptions:
              user: Lists full details for associated users
              userSummary: Lists summaries for associated users
          examples:
            UserFullDetails:
              summary: Get a detailed list of associated users
              value: user
            UserSummaries:
              summary: Get the list of associated user summaries
              value: userSummary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceList'
              examples:
                APIDevicesResponseUserSummaryExample:
                  type: array
                  $ref: '#/components/examples/APIDevicesListAllUserSummaryResponse'
                APIDevicesResponseExample:
                  type: array
                  $ref: '#/components/examples/APIDevicesListAllResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.read
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
  /api/v1/devices/{deviceId}:
    get:
      summary: Retrieve a device
      description: Retrieves a device by `deviceId`
      operationId: getDevice
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
              examples:
                APIDevicesResponseExample:
                  $ref: '#/components/examples/DeviceResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.read
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    delete:
      summary: Delete a device
      description: >-
        Deletes (permanently) a device by `deviceId` if it has a status of
        `DEACTIVATED`. You can transition the device to `DEACTIVATED` status
        using the [Deactivate a
        Device](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Device/#tag/Device/operation/deactivateDevice)
        endpoint.

        This request is destructive and deletes all of the profile data related
        to the device. Once deleted, device data can't be recovered. However,
        reenrollment creates a new device record.

        > **Note:** Attempts to delete a device that isn't in a `DEACTIVATED`
        state raise an error.
      operationId: deleteDevice
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
  /api/v1/devices/{deviceId}/lifecycle/activate:
    post:
      summary: Activate a device
      description: |-
        Activates a device by setting its status to `ACTIVE` by `deviceId`.
        Activated devices are used to create and delete device user links.
      operationId: activateDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
  /api/v1/devices/{deviceId}/lifecycle/deactivate:
    post:
      summary: Deactivate a device
      description: >-
        Deactivates a device by setting its status to `DEACTIVATED` by
        `deviceId`.

        Deactivation causes a device to lose all device user links. Set the
        device status to `DEACTIVATED` before deleting it.

        > **Note:** When deactivating a Device, keep in mind the following:
          - Device deactivation is a destructive operation for device factors and client certificates. Device reenrollment using Okta Verify allows end users to set up new factors on the device.
          - Device deletion removes the device record from Okta. Reenrollment creates a new device record.
      operationId: deactivateDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
  /api/v1/devices/{deviceId}/lifecycle/suspend:
    post:
      summary: Suspend a Device
      description: >-
        Suspends a device by setting its status to `SUSPENDED`.

        Use suspended devices to create and delete device user links. You can
        only unsuspend or deactivate suspended devices.

        > **Note:** `SUSPENDED` status is meant to be temporary, so it isn't
        destructive.
      operationId: suspendDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
  /api/v1/devices/{deviceId}/lifecycle/unsuspend:
    post:
      summary: Unsuspend a Device
      description: |-
        Unsuspends a device by returning its `status` to `ACTIVE`.
        >**Note:** Only devices with a `SUSPENDED` status can be unsuspended.
      operationId: unsuspendDevice
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.manage
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
  /api/v1/devices/{deviceId}/users:
    get:
      summary: List all users for a device
      description: Lists all Users for a device by `deviceId`
      operationId: listDeviceUsers
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeviceUser'
              examples:
                APIDevicesListAllUsersResponseExample:
                  summary: List all users for a specific device
                  $ref: '#/components/examples/APIDevicesListAllUsersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.devices.read
      tags:
        - Device
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathDeviceId'
components:
  schemas:
    DeviceList:
      allOf:
        - $ref: '#/components/schemas/Device'
        - properties:
            _embedded:
              type: object
              description: >-
                List of associated users for the device if the `expand=user`
                query parameter is specified in the request. Use
                `expand=userSummary` to get only a summary of each associated
                user for the device.
              properties:
                users:
                  description: Users for the device
                  type: array
                  items:
                    $ref: '#/components/schemas/DeviceUser'
              readOnly: true
          type: object
    Device:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the device was created
          readOnly: true
        id:
          type: string
          description: Unique key for the device
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: >-
            Timestamp when the device record was last updated. Updates occur
            when Okta collects and saves device signals during authentication,
            and when the lifecycle state of the device changes.
          readOnly: true
        profile:
          $ref: '#/components/schemas/DeviceProfile'
        resourceAlternateId:
          type: string
          readOnly: true
        resourceDisplayName:
          $ref: '#/components/schemas/DeviceDisplayName'
        resourceId:
          type: string
          description: Alternate key for the `id`
          readOnly: true
        resourceType:
          type: string
          default: UDDevice
          readOnly: true
        status:
          $ref: '#/components/schemas/DeviceStatus'
        _links:
          $ref: '#/components/schemas/LinksSelfAndFullUsersLifecycle'
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    DeviceUser:
      type: object
      properties:
        created:
          type: string
          description: Timestamp when device was created
        managementStatus:
          type: string
          description: The management status of the device
          enum:
            - MANAGED
            - NOT_MANAGED
          x-enumDescriptions:
            MANAGED: The device has management software installed
            NOT_MANAGED: The device doesn't have management software installed
        screenLockType:
          type: string
          description: Screen lock type of the device
          enum:
            - NONE
            - PASSCODE
            - BIOMETRIC
        user:
          $ref: '#/components/schemas/User'
    DeviceProfile:
      type: object
      properties:
        diskEncryptionType:
          $ref: '#/components/schemas/DiskEncryptionTypeDef'
        displayName:
          type: string
          description: Display name of the device
          minLength: 1
          maxLength: 255
        imei:
          type: string
          description: International Mobile Equipment Identity (IMEI) of the device
          minLength: 14
          maxLength: 17
        integrityJailbreak:
          type: boolean
          description: >-
            Indicates if the device is jailbroken or rooted. Only applicable to
            `IOS` and `ANDROID` platforms
        managed:
          type: boolean
          description: >-
            Indicates if the device is managed by mobile device management (MDM)
            software
        manufacturer:
          type: string
          description: Name of the manufacturer of the device
          maxLength: 127
        meid:
          type: string
          description: Mobile equipment identifier of the device
          maxLength: 14
        model:
          type: string
          description: Model of the device
          maxLength: 127
        osVersion:
          type: string
          description: Version of the device OS
          maxLength: 127
        platform:
          $ref: '#/components/schemas/DevicePlatform'
        registered:
          type: boolean
          description: Indicates if the device is registered at Okta
        secureHardwarePresent:
          type: boolean
          description: Indicates if the device contains a secure hardware functionality
        serialNumber:
          type: string
          description: Serial number of the device
          maxLength: 127
        sid:
          type: string
          description: Windows Security identifier of the device
          maxLength: 256
        tpmPublicKeyHash:
          type: string
          description: Windows Trusted Platform Module hash value
        udid:
          type: string
          description: macOS Unique device identifier of the device
          maxLength: 47
      required:
        - displayName
        - platform
        - registered
    DeviceDisplayName:
      description: Display name of the device
      type: object
      properties:
        sensitive:
          type: boolean
          description: >-
            Indicates whether the associated value is Personal Identifiable
            Information (PII) and requires masking
          default: false
        value:
          type: string
          description: Display name of the device
    DeviceStatus:
      description: The state object of the device
      type: string
      enum:
        - ACTIVE
        - DEACTIVATED
        - SUSPENDED
        - UNSUSPENDED
      x-enumDescriptions:
        ACTIVE: Use activated devices to create and delete device user links
        DEACTIVATED: >-
          Deactivation causes a device to lose all device user links. Set the
          device status to `DEACTIVATED` before deleting it.
        SUSPENDED: >-
          Use suspended devices to create and delete device user links. You can
          only unsuspend or deactivate suspended devices.
        UNSUSPENDED: Returns a suspended device to `ACTIVE`.
    LinksSelfAndFullUsersLifecycle:
      allOf:
        - $ref: '#/components/schemas/LinksSelfAndLifecycle'
        - type: object
          properties:
            suspend:
              $ref: '#/components/schemas/HrefObjectSuspendLink'
            unsuspend:
              $ref: '#/components/schemas/HrefObjectUnsuspendLink'
            users:
              description: Link to device users
              allOf:
                - $ref: '#/components/schemas/HrefObject'
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    User:
      type: object
      properties:
        activated:
          type: string
          description: The timestamp when the user status transitioned to `ACTIVE`
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          description: The timestamp when the user was created
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          type: string
          description: The unique key for the user
          readOnly: true
        lastLogin:
          type: string
          description: The timestamp of the last login
          format: date-time
          readOnly: true
          nullable: true
        lastUpdated:
          type: string
          description: The timestamp when the user was last updated
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          description: The timestamp when the user's password was last updated
          format: date-time
          readOnly: true
          nullable: true
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: >-
            The ID of the realm in which the user is residing. See
            [Realms](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Realm/).
          example: guo1bfiNtSnZYILxO0g4
          readOnly: true
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          type: string
          description: The timestamp when the status of the user last changed
          format: date-time
          readOnly: true
          nullable: true
        transitioningToStatus:
          type: string
          description: >-
            The target status of an in-progress asynchronous status transition.
            This property is only returned if the user's state is transitioning.
          readOnly: true
          nullable: true
          enum:
            - ACTIVE
            - DEPROVISIONED
            - PROVISIONED
        type:
          type: object
          description: >-
            The user type that determines the schema for the user's profile. The
            `type` property is a map that identifies the [User
            Types](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/#tag/UserType).


            Currently it contains a single element, `id`. It can be specified
            when creating a new user, and ca be updated by an admin on a full
            replace of an existing user (but not a partial update).
          properties:
            id:
              type: string
              description: The ID of the user type
        _embedded:
          type: object
          description: >-
            Embedded resources related to the user using the [JSON Hypertext
            Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          description: >-
            Specifies link relations (see [Web
            Linking](https://datatracker.ietf.org/doc/html/rfc8288) available
            for the current status of a user.

            The links object is used for dynamic discovery of related resources,
            lifecycle operations, and credential operations. The links object is
            read-only.


            For an individual user result, the links object contains a full set
            of link relations available for that user as determined by your
            policies.

            For a collection of users, the links object contains only the `self`
            link. Operations that return a collection of users include [List all
            users](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers)
            and [List all group member
            users](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroupUsers).
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - type: object
              properties:
                self:
                  description: URL to the individual user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                activate:
                  description: URL to activate the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                resetPassword:
                  description: URL to reset the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                resetFactors:
                  description: URL to reset the user's factors
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                expirePassword:
                  description: URL to expire the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                forgotPassword:
                  description: URL to initiate a forgot password operation
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                changeRecoveryQuestion:
                  description: URL to change the user's recovery question
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                deactivate:
                  description: URL to deactivate a user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                reactivate:
                  description: URL to reactivate the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                changePassword:
                  description: URL to change the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                schema:
                  description: URL to the user's profile schema
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                suspend:
                  description: URL to suspend the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                unsuspend:
                  description: URL to unsuspend the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                unlock:
                  description: URL to unlock the locked-out user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                type:
                  description: URL to the user type
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
            - readOnly: true
    DiskEncryptionTypeDef:
      description: >-
        Type of encryption used on the device

        > **Note:** The following values map to Disk Encryption ON: `FULL`,
        `USER`, `ALL_INTERNAL_VOLUMES`. All other values map to Disk Encryption
        OFF.
      type: string
      enum:
        - ALL_INTERNAL_VOLUMES
        - FULL
        - NONE
        - SYSTEM_VOLUME
        - USER
      x-enumDescriptions:
        NONE: No encryption has been set.
        FULL: >-
          Disk is fully encrypted. Only applicable to `IOS` and `ANDROID`
          platforms.
        USER: >-
          Encryption key is tied to the user or profile. Only applicable to
          `ANDROID` platform.
        ALL_INTERNAL_VOLUMES: >-
          All internal disks are encrypted. Only applicable to `WINDOWS` and
          `MACOS` platforms.
        SYSTEM_VOLUME: >-
          Only the system volume is encrypted. Only applicable to `WINDOWS` and
          `MACOS` platforms.
    DevicePlatform:
      description: OS platform of the device
      type: string
      enum:
        - ANDROID
        - IOS
        - MACOS
        - WINDOWS
    LinksSelfAndLifecycle:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            activate:
              $ref: '#/components/schemas/HrefObjectActivateLink'
            deactivate:
              $ref: '#/components/schemas/HrefObjectDeactivateLink'
    HrefObjectSuspendLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to suspend the resource
    HrefObjectUnsuspendLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to unsuspend the resource
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    UserCredentials:
      description: >-
        Specifies primary authentication and recovery credentials for a user.
        Credential types and requirements vary depending on the provider and
        security policy of the org.
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
    UserProfile:
      additionalProperties: true
      description: >-
        Specifies the default and custom profile properties for a user.


        The default user profile is based on the [System for Cross-domain
        Identity Management: Core
        Schema](https://datatracker.ietf.org/doc/html/rfc7643).


        The only permitted customizations of the default profile are to update
        permissions, change whether the `firstName` and `lastName` properties
        are nullable, and specify a
        [pattern](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation)
        for `login`. You can use the Profile Editor in the Admin Console or the
        [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)
        to make schema modifications.


        You can extend user profiles with custom properties. You must first add
        the custom property to the user profile schema before you reference it.

        You can use the Profile Editor in the Admin Console or the [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)
        to manage schema extensions.


        Custom attributes can contain HTML tags. It's the client's
        responsibility to escape or encode this data before displaying it. Use
        [best-practices](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
        to prevent cross-site scripting.
      type: object
      properties:
        city:
          type: string
          description: The city or locality of the user's address (`locality`)
          maxLength: 128
          nullable: true
        costCenter:
          type: string
          description: Name of the cost center assigned to a user
          nullable: true
        countryCode:
          description: >-
            The country name component of the user's address (`country`). For
            validation, see [ISO 3166-1 alpha 2 "short" code
            format](https://datatracker.ietf.org/doc/html/draft-ietf-scim-core-schema-22#ref-ISO3166).
          type: string
          maxLength: 2
          nullable: true
        department:
          type: string
          description: Name of the user's department
        displayName:
          type: string
          description: Name of the user suitable for display to end users
          nullable: true
        division:
          type: string
          description: Name of the user's division
          nullable: true
        email:
          type: string
          description: >-
            The primary email address of the user. For validation, see [RFC 5322
            Section
            3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
          format: email
          minLength: 5
          maxLength: 100
        employeeNumber:
          description: The organization or company assigned unique identifier for the user
          type: string
        firstName:
          type: string
          description: Given name of the user (`givenName`)
          minLength: 1
          maxLength: 50
          nullable: true
        honorificPrefix:
          type: string
          description: Honorific prefix(es) of the user, or title in most Western languages
          nullable: true
        honorificSuffix:
          type: string
          description: Honorific suffix(es) of the user
          nullable: true
        lastName:
          type: string
          description: The family name of the user (`familyName`)
          minLength: 1
          maxLength: 50
          nullable: true
        locale:
          type: string
          description: >-
            The user's default location for purposes of localizing items such as
            currency, date time format, numerical representations, and so on.

            A locale value is a concatenation of the ISO 639-1 two-letter
            language code, an underscore, and the ISO 3166-1 two-letter country
            code. For example, en_US specifies the language English and country
            US. This value is `en_US` by default.
        login:
          type: string
          description: >-
            The unique identifier for the user (`username`). For validation, see
            [Login pattern
            validation](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation).


            Every user within your Okta org must have a unique identifier for a
            login. This constraint applies to all users you import from other
            systems or applications such as Active Directory. Your organization
            is the top-level namespace to mix and match logins from all your
            connected applications or directories. Careful consideration of
            naming conventions for your login identifier will make it easier to
            onboard new applications in the future.


            Logins are not considered unique if they differ only in case and/or
            diacritical marks. If one of your users has a login of
            Isaac.Brock@example.com, there cannot be another user whose login is
            isaac.brock@example.com, nor isáàc.bröck@example.com.


            Okta has a default ambiguous name resolution policy for usernames
            that include @-signs. (By default, usernames must be formatted as
            email addresses and thus always include @-signs. You can remove that
            restriction using either the Admin Console or the [Schemas
            API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/).
            Users can sign in with their non-qualified short name (for example:
            isaac.brock with username isaac.brock@example.com) as long as the
            short name is still unique within the organization.

            maxLength: 100
          minLength: 5
        manager:
          type: string
          description: The `displayName` of the user's manager
          nullable: true
        managerId:
          type: string
          description: The `id` of the user's manager
          nullable: true
        middleName:
          type: string
          description: The middle name of the user
          nullable: true
        mobilePhone:
          type: string
          description: The mobile phone number of the user
          maxLength: 100
          minLength: 0
          nullable: true
        nickName:
          type: string
          description: The casual way to address the user in real life
          nullable: true
        organization:
          type: string
          description: Name of the the user's organization
          nullable: true
        postalAddress:
          type: string
          description: Mailing address component of the user's address
          maxLength: 4096
          nullable: true
        preferredLanguage:
          type: string
          description: >-
            The user's preferred written or spoken language. For validation, see
            [RFC 7231 Section
            5.3.5](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5).
          nullable: true
        primaryPhone:
          type: string
          description: The primary phone number of the user such as a home number
          maxLength: 100
          minLength: 0
          nullable: true
        profileUrl:
          type: string
          description: >-
            The URL of the user's online profile. For example, a web page. See
            [URL](https://datatracker.ietf.org/doc/html/rfc1808).
          nullable: true
        secondEmail:
          type: string
          format: email
          description: >-
            The secondary email address of the user typically used for account
            recovery. For validation, see [RFC 5322 Section
            3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
          minLength: 5
          maxLength: 100
          nullable: true
        state:
          type: string
          description: The state or region component of the user's address (`region`)
          maxLength: 128
          nullable: true
        streetAddress:
          type: string
          description: The full street address component of the user's address
          maxLength: 1024
          nullable: true
        timezone:
          type: string
          description: The user's time zone
          nullable: true
        title:
          type: string
          description: The user's title, such as Vice President
          nullable: true
        userType:
          type: string
          description: >-
            The property used to describe the organization-to-user relationship,
            such as employee or contractor
          nullable: true
        zipCode:
          type: string
          description: >-
            The ZIP code or postal code component of the user's address
            (`postalCode`)
          maxLength: 50
          nullable: true
    UserStatus:
      description: >-
        The current status of the user.


        The status of a user changes in response to explicit events, such as
        admin-driven lifecycle changes, user login, or self-service password
        recovery. Okta doesn't asynchronously sweep through users and update
        their password expiry state, for example. Instead, Okta evaluates
        password policy at login time, notices the password has expired, and
        moves the user to the expired state. When running reports, remember that
        the data is valid as of the last login or lifecycle event for that user.
      type: string
      enum:
        - ACTIVE
        - DEPROVISIONED
        - LOCKED_OUT
        - PASSWORD_EXPIRED
        - PROVISIONED
        - RECOVERY
        - STAGED
        - SUSPENDED
      readOnly: true
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObjectActivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to activate the resource
    HrefObjectDeactivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to deactivate the resource
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    PasswordCredential:
      description: >-
        Specifies a password for a user.


        When a user has a valid password, imported hashed password, or password
        hook, and a response object contains

        a password credential, then the password object is a bare object without
        the value property defined (for example, `password: {}`). This indicates
        that a password value exists. You can modify password policy
        requirements in the Admin Console by editing the Password
        authenticator:  **Security** > **Authenticators** > **Password** (or for
        Okta Classic orgs, use **Security** > **Authentication** >
        **Password**).


        For information on defaults and configuring your password policies, see
        [Configure the password
        authenticator](https://help.okta.com/okta_help.htm?type=oie&id=ext-configure-password)
        in the help documentation.
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          type: string
          writeOnly: true
          description: >-
            Specifies the password for a user. The password policy validates
            this password.
          format: password
          example: pa$$word
    AuthenticationProvider:
      description: >-
        Specifies the authentication provider that validates the user's password
        credential. The user's current provider is managed by the **Delegated
        Authentication** settings for your org. The provider object is
        **read-only**.
      type: object
      properties:
        name:
          type: string
          description: The name of the authentication provider
          readOnly: true
          example: OKTA
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      readOnly: true
    RecoveryQuestionCredential:
      description: >-
        Specifies a secret question and answer that's validated (case
        insensitive) when a user forgets their

        password or unlocks their account. The answer property is write-only.
      type: object
      properties:
        answer:
          type: string
          description: The answer to the recovery question
          minimum: 1
          maximum: 100
          writeOnly: true
          example: se7en
        question:
          type: string
          description: The recovery question
          minimum: 1
          maximum: 100
          example: what is your favourite movie?
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    PasswordCredentialHash:
      description: >-
        Specifies a hashed password to import into Okta. This allows an existing
        password to be imported into Okta directly

        from some other store. Okta supports the BCRYPT, SHA-512, SHA-256,
        SHA-1, MD5, and PBKDF2 hash functions for password import.
         A hashed password may be specified in a password object when creating or updating a user, but not for other operations.
         See the [Create user with imported hashed password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-imported-hashed-password) description. When you update a user with a hashed password, the user must be in the `STAGED` status.
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        digestAlgorithm:
          $ref: '#/components/schemas/DigestAlgorithm'
        iterationCount:
          type: integer
          description: >-
            The number of iterations used when hashing passwords using PBKDF2.
            Must be >= 4096. Only required for PBKDF2 algorithm.
        keySize:
          type: integer
          description: >-
            Size of the derived key in bytes. Only required for PBKDF2
            algorithm.
        salt:
          description: >-
            Only required for salted hashes. For BCRYPT, this specifies Radix-64
            as the encoded salt used to generate the hash,

            which must be 22 characters long. For other salted hashes, this
            specifies the Base64-encoded salt used to

            generate the hash.
          type: string
        saltOrder:
          type: string
          description: >-
            Specifies whether salt was pre- or postfixed to the password before
            hashing. Only required for salted algorithms.
        value:
          description: >-
            For SHA-512, SHA-256, SHA-1, MD5, and PBKDF2, this is the actual
            base64-encoded hash of the password (and salt, if used).

            This is the Base64-encoded `value` of the
            SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest that was computed by either
            pre-fixing or post-fixing

            the `salt` to the `password`, depending on the `saltOrder`. If a
            `salt` was not used in the `source` system, then this should just be

            the Base64-encoded `value` of the password's
            SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest. For BCRYPT, this is the
            actual Radix-64 encoded hashed password.
          type: string
        workFactor:
          type: integer
          description: >-
            Governs the strength of the hash and the time required to compute
            it. Only required for BCRYPT algorithm.
          minimum: 1
          maximum: 20
    PasswordCredentialHook:
      description: >-
        Specify a [password import inline
        hook](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createPasswordImportInlineHook)
        to trigger verification of the user's password the first time the user
        signs in. This allows an existing password to be imported into Okta
        directly from some other store.
      type: object
      properties:
        type:
          type: string
          description: The type of password inline hook. Currently, must be set to default.
    AuthenticationProviderType:
      description: The type of authentication provider
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - IMPORT
        - LDAP
        - OKTA
        - SOCIAL
      x-enumDescriptions:
        ACTIVE_DIRECTORY: >-
          Specifies the Microsoft Active Directory instance name as the `name`
          property
        FEDERATION: >-
          Specifies a federated identity provider (such as an SAML IdP) that
          validates the user's password credentials. Doesn't support a
          `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
        IMPORT: Specifies a hashed password that was imported from an external source
        LDAP: Specifies the LDAP directory instance name as the `name` property
        OKTA: Specifies the Okta identity provider
        SOCIAL: >-
          Specifies an OIDC or third-party social identity provider. Doesn't
          support a `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
      readOnly: true
    PasswordCredentialHashAlgorithm:
      description: >-
        The algorithm used to generate the hash using the password (and salt,
        when applicable).
      type: string
      enum:
        - BCRYPT
        - MD5
        - PBKDF2
        - SHA-1
        - SHA-256
        - SHA-512
    DigestAlgorithm:
      description: >-
        Algorithm used to generate the key. Only required for the PBKDF2
        algorithm.
      type: string
      enum:
        - SHA256_HMAC
        - SHA512_HMAC
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathDeviceId:
      name: deviceId
      in: path
      schema:
        type: string
        example: guo4a5u7JHHhjXrMK0g4
      required: true
      description: '`id` of the device'
  examples:
    APIDevicesListAllUserSummaryResponse:
      summary: List all devices with embedded user summaries
      value:
        - id: guo4a5u7YAHhjXrMK0g4
          status: CREATED
          created: '2019-10-02T18:03:07.000Z'
          lastUpdated: '2019-10-02T18:03:07.000Z'
          profile:
            displayName: Example device name 1
            platform: WINDOWS
            serialNumber: XXDDRFCFRGF3M8MD6D
            sid: S-1-11-111
            registered: true
            secureHardwarePresent: false
            diskEncryptionType: ALL_INTERNAL_VOLUMES
          resourceType: UDDevice
          resourceDisplayName:
            value: Example device name 1
            sensitive: false
          resourceAlternateId: null
          resourceId: guo4a5u7YAHhjXrMK0g4
          _links:
            activate:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4
              hints:
                allow:
                  - GET
                  - PATCH
                  - PUT
            users:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/users
              hints:
                allow:
                  - GET
          _embedded:
            users: []
        - id: guo4a5u7YAHhjXrMK0g5
          status: ACTIVE
          created: '2023-06-21T23:24:02.000Z'
          lastUpdated: '2023-06-21T23:24:02.000Z'
          profile:
            displayName: Example device name 2
            platform: ANDROID
            manufacturer: Google
            model: Pixel 6
            osVersion: 13:2023-05-05
            registered: true
            secureHardwarePresent: true
            diskEncryptionType: USER
          resourceType: UDDevice
          resourceDisplayName:
            value: Example device name 2
            sensitive: false
          resourceAlternateId: null
          resourceId: guo4a5u7YAHhjXrMK0g5
          _links:
            activate:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5
              hints:
                allow:
                  - GET
                  - PATCH
                  - PUT
            users:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/users
              hints:
                allow:
                  - GET
          _embedded:
            users:
              - managementStatus: MANAGED
                created: '2021-10-01T16:52:41.000Z'
                screenLockType: BIOMETRIC
                user:
                  id: 00u17vh0q8ov8IU881d7
                  realmId: 00u17vh0q8ov8IU8T0g5
                  profile:
                    firstName: fname
                    lastName: lname
                    login: email@email.com
                    email: email@email.com
                  _links:
                    self:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7
    APIDevicesListAllResponse:
      summary: List all devices with embedded users
      value:
        - id: guo4a5u7YAHhjXrMK0g4
          status: CREATED
          created: '2019-10-02T18:03:07.000Z'
          lastUpdated: '2019-10-02T18:03:07.000Z'
          profile:
            displayName: Example device name 1
            platform: WINDOWS
            serialNumber: XXDDRFCFRGF3M8MD6D
            sid: S-1-11-111
            registered: true
            secureHardwarePresent: false
            diskEncryptionType: ALL_INTERNAL_VOLUMES
          resourceType: UDDevice
          resourceDisplayName:
            value: Example device name 1
            sensitive: false
          resourceAlternateId: null
          resourceId: guo4a5u7YAHhjXrMK0g4
          _links:
            activate:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4
              hints:
                allow:
                  - GET
                  - PATCH
                  - PUT
            users:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g4/users
              hints:
                allow:
                  - GET
          _embedded:
            users: []
        - id: guo4a5u7YAHhjXrMK0g5
          status: ACTIVE
          created: '2023-06-21T23:24:02.000Z'
          lastUpdated: '2023-06-21T23:24:02.000Z'
          profile:
            displayName: Example device name 2
            platform: ANDROID
            manufacturer: Google
            model: Pixel 6
            osVersion: 13:2023-05-05
            registered: true
            secureHardwarePresent: true
            diskEncryptionType: USER
          resourceType: UDDevice
          resourceDisplayName:
            value: Example device name 2
            sensitive: false
          resourceAlternateId: null
          resourceId: guo4a5u7YAHhjXrMK0g5
          _links:
            activate:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5
              hints:
                allow:
                  - GET
                  - PATCH
                  - PUT
            users:
              href: >-
                https://{yourOktaDomain}/api/v1/devices/guo4a5u7YAHhjXrMK0g5/users
              hints:
                allow:
                  - GET
          _embedded:
            users:
              - managementStatus: MANAGED
                created: '2021-10-01T16:52:41.000Z'
                screenLockType: BIOMETRIC
                user:
                  id: 00u17vh0q8ov8IU881d7
                  status: ACTIVE
                  created: '2020-08-12T06:46:50.000Z'
                  activated: '2020-08-12T06:46:50.000Z'
                  statusChanged: '2021-01-27T21:05:32.000Z'
                  lastLogin: '2021-10-14T09:04:48.000Z'
                  lastUpdated: '2021-01-27T21:05:32.000Z'
                  passwordChanged: '2020-08-12T06:46:50.000Z'
                  type:
                    id: oty7ut9Uu76oHVUZc0w4
                  profile:
                    firstName: fname
                    lastName: lname
                    mobilePhone: null
                    secondEmail: null
                    login: email@email.com
                    email: email@email.com
                  credentials:
                    password: {}
                    recovery_question:
                      question: What is the food you least liked as a child?
                    provider:
                      type: OKTA
                      name: OKTA
                  _links:
                    suspend:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/suspend
                      method: POST
                    schema:
                      href: >-
                        https://{yourOktaDomain}/api/v1/meta/schemas/user/osc7ut9Uu76oHVUZc0w4
                    resetPassword:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_password
                      method: POST
                    forgotPassword:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/forgot_password
                      method: POST
                    expirePassword:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/expire_password
                      method: POST
                    changeRecoveryQuestion:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_recovery_question
                      method: POST
                    self:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7
                    type:
                      href: >-
                        https://{yourOktaDomain}/api/v1/meta/types/user/oty7ut9Uu76oHVUZc0w4
                    changePassword:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_password
                    deactivate:
                      href: >-
                        https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/deactivate
    DeviceResponse:
      value:
        id: guo8jx5vVoxfvJeLb0w4
        status: ACTIVE
        created: '2020-11-03T21:47:01.000Z'
        lastUpdated: '2020-11-03T23:46:27.000Z'
        profile:
          displayName: DESKTOP-EHAD3IE
          platform: WINDOWS
          manufacturer: International Corp
          model: VMware7,1
          osVersion: 10.0.18362
          serialNumber: 56 4d 4f 95 74 c5 d3 e7-fc 3a 57 9c c2 f8 5d ce
          udid: 954F4D56-C574-E7D3-FC3A-579CC2F85DCE
          sid: S-1-5-21-3992267483-1860856704-2413701314-500
          registered: true
          secureHardwarePresent: false
          diskEncryptionType: NONE
        resourceId: guo8jx5vVoxfvJeLb0w4
        resourceDisplayName:
          value: DESKTOP-EHAD3IE
          sensitive: false
        resourceType: UDDevice
        resourceAlternateId: null
        _links:
          suspend:
            href: >-
              https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/suspend
            hints:
              allow:
                - POST
          self:
            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4
            hints:
              allow:
                - GET
                - PATCH
                - PUT
          users:
            href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/users
            hints:
              allow:
                - GET
          deactivate:
            href: >-
              https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/deactivate
            hints:
              allow:
                - POST
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    APIDevicesListAllUsersResponse:
      summary: Response example
      value:
        - created: '2021-08-20T17:13:35.000Z'
          managementStatus: NOT_MANAGED
          screenLockType: BIOMETRIC
          user:
            id: 00u17vh0q8ov8IU881d7
            status: ACTIVE
            created: '2021-08-20T16:08:25.000Z'
            activated: null
            statusChanged: '2021-08-20T16:39:41.000Z'
            lastLogin: '2023-04-18T17:54:12.000Z'
            lastUpdated: '2021-12-20T18:27:30.000Z'
            passwordChanged: '2021-12-20T18:27:30.000Z'
            type:
              id: oty17vh0n2EHVnbYF1d7
            profile:
              firstName: Bunk
              lastName: Moreland
              mobilePhone: null
              secondEmail: null
              login: bunk.moreland@example.com
              email: bunk.moreland@example.com
            credentials:
              password: null
              provider:
                type: OKTA
                name: OKTA
            _links:
              suspend:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/suspend
                method: POST
              schema:
                href: >-
                  https://{yourOktaDomain}/api/v1/meta/schemas/user/osc17vh0n2EHVnbYF1d7
              resetPassword:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_password
                method: POST
              forgotPassword:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/forgot_password
                method: POST
              expirePassword:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/expire_password
                method: POST
              changeRecoveryQuestion:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_recovery_question
                method: POST
              self:
                href: https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7
              resetFactors:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/reset_factors
                method: POST
              type:
                href: >-
                  https://{yourOktaDomain}/api/v1/meta/types/user/oty17vh0n2EHVnbYF1d7
              changePassword:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/credentials/change_password
                method: POST
              deactivate:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u17vh0q8ov8IU881d7/lifecycle/deactivate
                method: POST
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    devices:
      id: okta.devices.devices
      name: devices
      title: Devices
      methods:
        list_devices:
          operation:
            $ref: '#/paths/~1api~1v1~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_device:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_device:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_device:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}~1lifecycle~1activate/post'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        deactivate_device:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}~1lifecycle~1deactivate/post'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        suspend_device:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}~1lifecycle~1suspend/post'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        unsuspend_device:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}~1lifecycle~1unsuspend/post'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/devices/methods/list_devices'
          - $ref: '#/components/x-stackQL-resources/devices/methods/get_device'
        insert: []
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/devices/methods/delete_device'
        replace: []
    device_users:
      id: okta.devices.device_users
      name: device_users
      title: Device Users
      methods:
        list_device_users:
          operation:
            $ref: '#/paths/~1api~1v1~1devices~1{deviceId}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/device_users/methods/list_device_users
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
