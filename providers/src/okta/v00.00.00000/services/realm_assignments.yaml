openapi: 3.0.3
info:
  title: realm_assignments API
  description: okta realm_assignments API
  version: 5.1.0
paths:
  /api/v1/realm-assignments:
    get:
      x-okta-lifecycle:
        lifecycle: GA
      summary: List all realm assignments
      description: Lists all realm assignments
      operationId: listRealmAssignments
      parameters:
        - $ref: '#/components/parameters/queryLimit'
        - name: after
          in: query
          description: >-
            The cursor used for pagination. It represents the priority of the
            last realm assignment returned in the previous fetch operation.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RealmAssignment'
              examples:
                AssignmentLists:
                  $ref: '#/components/examples/ListRealmAssignmentsResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.read
      tags:
        - RealmAssignment
    post:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Create a realm assignment
      description: Creates a new realm assignment
      operationId: createRealmAssignment
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRealmAssignmentRequest'
            examples:
              Create Realm Assignments:
                $ref: '#/components/examples/CreateRealmAssignmentRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmAssignment'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.manage
      tags:
        - RealmAssignment
  /api/v1/realm-assignments/operations:
    get:
      x-okta-lifecycle:
        lifecycle: GA
      summary: List all realm assignment operations
      description: >-
        Lists all realm assignment operations. The upper limit is 200 and
        operations are sorted in descending order from most recent to oldest by
        ID.
      operationId: listRealmAssignmentOperations
      parameters:
        - $ref: '#/components/parameters/queryLimit'
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationResponse'
              examples:
                Executions:
                  value:
                    - id: rre4mje4ez6B2a7B60g7
                      type: realm:assignment
                      status: COMPLETED
                      created: '2023-10-25T21:02:54.000Z'
                      started: '2023-10-25T21:02:54.000Z'
                      completed: '2023-10-25T21:02:54.000Z'
                      realmId: 00g1b7rvh0xPLKXFf0g5
                      realmName: Realm Name
                      assignmentOperation:
                        configuration:
                          id: 0pr1b7rxZj2ibQzfP0g5
                          name: Realm Assignment 1
                          conditions:
                            profileSourceId: 0oa4enoRyjwSCy5hx0g4
                            expression:
                              value: string
                          actions:
                            assignUserToRealm:
                              realmId: 00g1b7rvh0xPLKXFf0g5
                      numUserMoved: 50
                      _links:
                        self:
                          rel: self
                          href: >-
                            http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez6B2a7B60g7
                          method: GET
                    - id: rre4mje4ez7B2a7B60g7
                      type: realm:assignment
                      status: COMPLETED
                      created: '2023-10-25T21:02:54.000Z'
                      started: '2023-10-25T21:02:54.000Z'
                      completed: '2023-10-25T21:02:54.000Z'
                      assignmentOperation:
                        configuration:
                          id: ALL
                          name: All Assignments
                      numUserMoved: 50
                      _links:
                        self:
                          rel: self
                          href: >-
                            http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez7B2a7B60g7
                          method: GET
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.read
      tags:
        - RealmAssignment
    post:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Execute a realm assignment
      description: Executes a realm assignment
      operationId: executeRealmAssignment
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRequest'
            examples:
              ExecuteSpecificAssignment:
                value:
                  assignmentId: 0pr1b7rxZj2ibQzfP0g5
              ExecuteAllAssignments:
                value:
                  assignmentId: ALL
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
              examples:
                Execution:
                  $ref: '#/components/examples/OperationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.manage
      tags:
        - RealmAssignment
  /api/v1/realm-assignments/{assignmentId}:
    get:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Retrieve a realm assignment
      description: Retrieves a realm assignment
      operationId: getRealmAssignment
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmAssignment'
              examples:
                RealmAssignment:
                  $ref: '#/components/examples/GetRealmAssignmentResponse'
                CatchAllRealmAssignment:
                  $ref: '#/components/examples/DefaultRealmAssignment'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.read
      tags:
        - RealmAssignment
    put:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Replace a realm assignment
      description: Replaces a realm assignment
      operationId: replaceRealmAssignment
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRealmAssignmentRequest'
            examples:
              Replace Realm Assignment:
                $ref: '#/components/examples/CreateRealmAssignmentRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmAssignment'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.manage
      tags:
        - RealmAssignment
    delete:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Delete a realm assignment
      description: Deletes a realm assignment
      operationId: deleteRealmAssignment
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.manage
      tags:
        - RealmAssignment
    parameters:
      - $ref: '#/components/parameters/assignmentId'
  /api/v1/realm-assignments/{assignmentId}/lifecycle/activate:
    post:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Activate a realm assignment
      description: Activates a realm assignment
      operationId: activateRealmAssignment
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.manage
      tags:
        - RealmAssignment
    parameters:
      - $ref: '#/components/parameters/assignmentId'
  /api/v1/realm-assignments/{assignmentId}/lifecycle/deactivate:
    post:
      x-okta-lifecycle:
        lifecycle: GA
      summary: Deactivate a realm assignment
      description: Deactivates a realm assignment
      operationId: deactivateRealmAssignment
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.realmAssignments.manage
      tags:
        - RealmAssignment
    parameters:
      - $ref: '#/components/parameters/assignmentId'
components:
  schemas:
    RealmAssignment:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/Actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        created:
          description: Timestamp when the realm assignment was created
          type: string
          format: date-time
          readOnly: true
        domains:
          type: array
          description: >-
            Array of allowed domains. No user in this realm can be created or
            updated unless they have a username and email from one of these
            domains.


            The following characters aren't allowed in the domain name:
            `!$%^&()=*+,:;<>'[]|/?\`
        id:
          description: Unique ID of the realm assignment
          type: string
          readOnly: true
        isDefault:
          description: >-
            Indicates the default realm. Existing users will start out in the
            default realm and can be moved individually to other realms.
          type: boolean
          readOnly: true
        lastUpdated:
          description: Timestamp of when the realm assignment was updated
          type: string
          format: date-time
          readOnly: true
        name:
          description: Name of the realm
          type: string
        priority:
          type: integer
          description: >-
            The priority of the realm assignment. The lower the number, the
            higher the priority. This helps resolve conflicts between realm
            assignments. 

            > **Note:** When you create realm assignments in bulk, realm
            assignment priorities must be unique.
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    CreateRealmAssignmentRequest:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/Actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        name:
          type: string
          description: Name of the realm
        priority:
          type: integer
          description: >-
            The priority of the realm assignment. The lower the number, the
            higher the priority. This helps resolve conflicts between realm
            assignments. 

            > **Note:** When you create realm assignments in bulk, realm
            assignment priorities must be unique.
    OperationResponse:
      type: object
      properties:
        assignmentOperation:
          type: object
          description: Definition of the realm assignment operation
          properties:
            configuration:
              description: Configuration defintion of the realm
              type: object
              properties:
                actions:
                  type: object
                  description: Realm assignment action
                  properties:
                    assignUserToRealm:
                      type: object
                      description: Action that assigns a user to a realm
                      properties:
                        realmId:
                          description: ID of the realm
                          type: string
                conditions:
                  $ref: '#/components/schemas/Conditions'
                id:
                  type: string
                  description: ID of the realm assignment operation
                name:
                  type: string
                  description: Name of the realm assignment operation
        completed:
          description: Timestamp when the realm assignment operation completed
          type: string
          format: date-time
          readOnly: true
        created:
          description: Timestamp when the realm assignment operation was created
          type: string
          format: date-time
          readOnly: true
        id:
          description: ID of the realm
          type: string
          readOnly: true
        numUserMoved:
          description: Number of users moved
          type: number
          readOnly: true
        realmId:
          description: ID of the realm
          type: string
          readOnly: true
        realmName:
          description: Name of the realm
          type: string
          readOnly: true
        started:
          description: Timestamp when the realm assignment operation started
          type: string
          format: date-time
          readOnly: true
        status:
          description: Current status of the operation
          type: string
          readOnly: true
          enum:
            - COMPLETED
            - SCHEDULED
            - IN_PROGRESS
            - FAILED
        type:
          description: Realm type
          type: string
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OperationRequest:
      type: object
      properties:
        assignmentId:
          type: string
          description: ID of the realm
    UpdateRealmAssignmentRequest:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/Actions'
        conditions:
          $ref: '#/components/schemas/Conditions'
        name:
          type: string
        priority:
          type: integer
          description: >-
            The priority of the realm assignment. The lower the number, the
            higher the priority. This helps resolve conflicts between realm
            assignments. 

            > **Note:** When you create realm assignments in bulk, realm
            assignment priorities must be unique.
    Actions:
      description: Action to apply to a user
      type: object
      properties:
        assignUserToRealm:
          $ref: '#/components/schemas/AssignUserToRealm'
    Conditions:
      description: Conditions of applying realm assignment
      type: object
      properties:
        expression:
          $ref: '#/components/schemas/Expression'
        profileSourceId:
          description: ID of the profile source
          type: string
    LifecycleStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    AssignUserToRealm:
      description: Action that assigns a user to a realm
      type: object
      properties:
        realmId:
          description: ID of the realm
          type: string
    Expression:
      description: Conditional expression
      type: object
      properties:
        value:
          description: Value of the condition expression
          type: string
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    assignmentId:
      name: assignmentId
      description: ID of the realm assignment
      in: path
      required: true
      schema:
        type: string
        example: rul2jy7jLUlnO3ng00g4
  examples:
    ListRealmAssignmentsResponse:
      value:
        - id: rul2jy7jLUlnO3ng00g4
          status: ACTIVE
          name: Realm Assignment 1
          created: '2022-04-04T15:56:05.000Z'
          lastUpdated: '2022-05-05T18:15:44.000Z'
          isDefault: false
          domains:
            - atko.com
            - user.com
          conditions:
            profileSourceId: 0oa4enoRyjwSCy5hx0g4
            expression:
              value: user.profile.role ==\"Manager\"
          actions:
            assignUserToRealm:
              realmId: 00g1b7rvh0xPLKXFf0g5
          priority: 0
          _links:
            self:
              rel: self
              href: >-
                http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO3ng00g4
              method: GET
        - id: rul2jy7jLUlnO5ng00g4
          status: ACTIVE
          name: Catch-all
          created: '2022-04-04T15:56:05.000Z'
          lastUpdated: '2022-05-05T18:15:44.000Z'
          isDefault: true
          domains:
            - atko.com
            - user.com
          conditions:
            profileSourceId: 0oa4enoRyjwSCy6hx0g4,
            expression:
              value: string
          actions:
            assignUserToRealm:
              realmId: 00g1b7rvh0xPLKXFf2g5
          priority: 499
          _links:
            self:
              rel: self
              href: >-
                http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO5ng00g4
              method: GET
    CreateRealmAssignmentRequest:
      value:
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf0g5
        conditions:
          profileSourceId: 0oa4enoRyjwSCy5hx0g4
          expression:
            value: user.profile.role ==\"Manager\"
        name: Realm Assignment 1
        priority: 0
    OperationResponse:
      value:
        id: rre4mje4ez6B2a7B60g7
        type: realm:assignment
        status: COMPLETED
        created: '2023-10-25T21:02:54.000Z'
        started: '2023-10-25T21:02:54.000Z'
        completed: '2023-10-25T21:02:54.000Z'
        realmId: 00g1b7rvh0xPLKXFf0g5
        realmName: Realm Name
        assignmentOperation:
          configuration:
            id: 0pr1b7rxZj2ibQzfP0g5
            name: Realm Assignment 1
            conditions:
              profileSourceId: 0oa4enoRyjwSCy5hx0g4
              expression:
                value: string
            actions:
              assignUserToRealm:
                realmId: 00g1b7rvh0xPLKXFf0g5
        numUserMoved: 50
        _links:
          self:
            rel: self
            href: >-
              http://your-subdomain.okta.com/api/v1/operations/rre4mje4ez6B2a7B60g7
            method: GET
    GetRealmAssignmentResponse:
      value:
        id: rul2jy7jLUlnO3ng00g4
        status: ACTIVE
        name: Realm Assignment 1
        created: '2022-04-04T15:56:05.000Z'
        lastUpdated: '2022-05-05T18:15:44.000Z'
        isDefault: false
        domains:
          - atko.com
          - user.com
        conditions:
          profileSourceId: 0oa4enoRyjwSCy5hx0g4
          expression:
            value: string
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf0g5
        priority: 0
        _links:
          self:
            rel: self
            href: >-
              http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO3ng00g4
            method: GET
    DefaultRealmAssignment:
      value:
        id: rul2jy7jLUlnO5ng00g4
        status: ACTIVE
        name: Catch-all
        created: '2022-04-04T15:56:05.000Z'
        lastUpdated: '2022-05-05T18:15:44.000Z'
        isDefault: true
        conditions:
          profileSourceId: 0oa4enoRyjwSCy6hx0g4,
          expression:
            value: string
        actions:
          assignUserToRealm:
            realmId: 00g1b7rvh0xPLKXFf2g5
        priority: 499
        _links:
          self:
            rel: self
            href: >-
              http://your-subdomain.okta.com/api/v1/realm-assignments/rul2jy7jLUlnO5ng00g4
            method: GET
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    realm_assignments:
      id: okta.realm_assignments.realm_assignments
      name: realm_assignments
      title: Realm Assignments
      methods:
        list_realm_assignments:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_realm_assignment:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        execute_realm_assignment:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments~1operations/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_realm_assignment:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments~1{assignmentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_realm_assignment:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments~1{assignmentId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_realm_assignment:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments~1{assignmentId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_realm_assignment:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1realm-assignments~1{assignmentId}~1lifecycle~1activate/post
          response:
            mediaType: ''
            openAPIDocKey: '204'
        deactivate_realm_assignment:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1realm-assignments~1{assignmentId}~1lifecycle~1deactivate/post
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/realm_assignments/methods/list_realm_assignments
          - $ref: >-
              #/components/x-stackQL-resources/realm_assignments/methods/get_realm_assignment
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/realm_assignments/methods/create_realm_assignment
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/realm_assignments/methods/delete_realm_assignment
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/realm_assignments/methods/replace_realm_assignment
    realm_assignment_operations:
      id: okta.realm_assignments.realm_assignment_operations
      name: realm_assignment_operations
      title: Realm Assignment Operations
      methods:
        list_realm_assignment_operations:
          operation:
            $ref: '#/paths/~1api~1v1~1realm-assignments~1operations/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/realm_assignment_operations/methods/list_realm_assignment_operations
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
