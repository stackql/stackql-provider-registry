openapi: 3.0.3
info:
  title: groups API
  description: okta groups API
  version: 5.1.0
paths:
  /api/v1/groups:
    get:
      summary: List all groups
      description: >-
        Lists all groups with pagination support.


        > **Note:** To list all groups belonging to a member, use the [List all
        groups endpoint in the User Resources
        API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserResources/#tag/UserResources/operation/listUserGroups).


        The number of groups returned depends on the specified
        [`limit`](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups!in=query&path=limit&t=request),
        if you have a search, filter, and/or query parameter set, and if that
        parameter is not null. We recommend using a limit less than or equal to
        200.


        A subset of groups can be returned that match a supported filter
        expression, query, or search criteria.


        > **Note:** Results from the filter or query parameter are driven from
        an eventually consistent datasource. The synchronization lag is
        typically less than one second.
      operationId: listGroups
      parameters:
        - name: search
          in: query
          description: >-
            Searches for groups with a supported
            [filtering](https://developer.okta.com/docs/api/#filter) expression
            for all properties except for `_embedded`, `_links`, and
            `objectClass`. This operation supports
            [pagination](https://developer.okta.com/docs/api/#pagination).


            Using search requires [URL
            encoding](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding),
            for example, `search=type eq "OKTA_GROUP"` is encoded as
            `search=type+eq+%22OKTA_GROUP%22`.


            This operation searches many properties:


            * Any group profile attribute, including imported app group profile
            attributes.

            * The top-level properties: `id`, `created`,
            `lastMembershipUpdated`, `lastUpdated`, and `type`.

            * The
            [source](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups!c=200&path=_links/source&t=response)
            of groups with type of `APP_GROUP`, accessed as `source.id`.


            You can also use the `sortBy` and `sortOrder` parameters.


            Searches for groups can be filtered by the following operators:
            `sw`, `eq`, and `co`. You can only use `co` with these select
            profile attributes: `profile.name` and `profile.description`. See
            [Operators](https://developer.okta.com/docs/api/#operators).             
          schema:
            type: string
          examples:
            searchByType:
              value: type%20eq%20%22APP_GROUP%22
              summary: Search by type
              description: Search for groups that have a type of APP_GROUP
            searchByLastMembershipUpdatedAfterDate:
              value: lastMembershipUpdated%20gt%20%222014-01-01T00%3A00%3A00.000Z%22
              summary: Search by last updated membership timestamp
              description: >-
                Search for groups whose memberships were last updated after
                01/01/2024
            searchById:
              value: id%20eq%20%2200gak46y5hydV6NdM0g4%22
              summary: Search by ID
              description: Search for groups with the specified ID (00gak46y5hydV6NdM0g4)
            searchByProfileName:
              value: profile.name%20eq%20%22West%20Coast%20users%22
              summary: Search by name
              description: >-
                Search for groups that have a group profile name of West Coast
                users
            searchBySamAccountName:
              value: profile.samAccountName%20sw%20%22West%20Coast%22
              summary: Search using an operator
              description: >-
                Search for groups whose samAccountName profile attribute starts
                with "West Coast"
            searchBySourceId:
              value: source.id%20eq%20%220oa2v0el0gP90aqjJ0g7%22
              summary: Search by source ID
              description: >-
                Search for groups that have the source app with the specified
                source ID (0oa2v0el0gP90aqjJ0g7)
            searchByIdTypeAndCreationDate:
              value: >-
                type%20eq%20%22APP_GROUP%22%20and%20%28created%20lt%20%222014-01-01T00%3A00%3A00.000Z%22%20and%20source.id%20eq%20%220oa2v0el0gP90aqjJ0g7%22%29
              summary: Search with multiple criteria
              description: >-
                List groups of type APP_GROUP that were created before
                01/01/2014 and whose source app has the ID 0oa2v0el0gP90aqjJ0g7
        - name: filter
          in: query
          description: >-
            Filter expression for groups. See
            [Filter](https://developer.okta.com/docs/api/#filter).


            > **Note:** All filters must be [URL
            encoded](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding).
            For example, `filter=lastUpdated gt "2013-06-01T00:00:00.000Z"` is
            encoded as
            `filter=lastUpdated%20gt%20%222013-06-01T00:00:00.000Z%22`.
          schema:
            type: string
          examples:
            filterById:
              value: id%20eq%20%2200g1emaKYZTWRYYRRTSK%22
              summary: Filter by ID
              description: Filter group with a specific ID (00g1emaKYZTWRYYRRTSK)
            filterByType:
              value: type%20eq%20%22OKTA_GROUP%22
              summary: Filter by type
              description: Filter groups that are of the type OKTA_GROUP
            filterByTypeAndProfileLastUpdatedAfterDate:
              value: >-
                type%20eq%20%22OKTA_GROUP%22%20and%20lastUpdated%20gt%20%222016-11-11T00%3A00%3A00.000Z%22
              summary: Filter by type and last updated date
              description: >-
                Filter groups that are OKTA_GROUP type with profile updated
                after 11/11/2016
            filterByTypeAndProfileOrMembershipUpdatedBeforeDate:
              value: >-
                type%20eq%20%22OKTA_GROUP%22%20and%20%28lastUpdated%20lt%20%222015-11-11T00%3A00%3A00.000Z%22%20or%20lastMembershipUpdated%20lt%20%222015-11-11T00%3A00%3A00.000Z%22%29
              summary: Filter by multiple criteria
              description: >-
                Filter groups that are OKTA_GROUP type, with profiles or
                memberships updated before 11/11/2015
        - name: q
          in: query
          description: >-
            Finds a group that matches the `name` property.

            > **Note:** Paging and searching are currently mutually exclusive.
            You can't page a query. The default limit for a query is 300
            results. Query is intended for an auto-complete picker use case
            where users refine their search string to constrain the results.
          schema:
            type: string
            example: West&limit=10
        - name: after
          in: query
          description: >-
            Specifies the pagination cursor for the next page of groups. The
            `after` cursor should be treated as an opaque value and obtained
            through the next link relation. See
            [Pagination](https://developer.okta.com/docs/api/#pagination).
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            Specifies the number of group results in a page.


            Okta recommends using a specific value other than the default or
            maximum. If your request times out, retry your request with a
            smaller `limit` and [page the
            results](https://developer.okta.com/docs/api/#pagination).


            The Okta default `Everyone` group isn't returned for users with a
            group admin role.
          schema:
            type: integer
            format: int32
            maximum: 10000
        - name: expand
          in: query
          description: >-
            If specified, additional metadata is included in the response.
            Possible values are `stats` and `app`. This additional metadata is
            listed in the
            [`_embedded`](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/addGroup!c=200&path=_embedded&t=response)
            property of the response.


            > **Note:** You can use the `stats` value to return the number of
            users within a group. This is listed as the
            `_embedded.stats.usersCount` value in the response. See this
            [Knowledge Base
            article](https://support.okta.com/help/s/article/Is-there-an-API-that-returns-the-number-of-users-in-a-group?language=en_US)
            for more information and an example.
          schema:
            type: string
        - name: sortBy
          in: query
          description: >-
            Specifies field to sort by **(for search queries only)**. `sortBy`
            can be any single property, for example `sortBy=profile.name`.
          schema:
            type: string
            example: lastUpdated
        - name: sortOrder
          in: query
          description: >-
            Specifies sort order: `asc` or `desc` (for search queries only).
            This parameter is ignored if `sortBy` isn't present. Groups with the
            same value for the `sortBy` property are ordered by `id`'.
          schema:
            type: string
            default: asc
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
              examples:
                ListGroupExample:
                  $ref: '#/components/examples/list-groups-examples'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Add a group
      description: >-
        Adds a new group with the `OKTA_GROUP` type to your org.

        > **Note:** App import operations are responsible for syncing groups
        with `APP_GROUP` type such as Active Directory groups. See

        [About groups](https://help.okta.com/okta_help.htm?id=Directory_Groups)
        in the help documentation.
      operationId: addGroup
      x-codegen-request-body-name: group
      requestBody:
        content:
          application/json:
            schema:
              properties:
                profile:
                  $ref: '#/components/schemas/OktaUserGroupProfile'
              type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                GroupExample:
                  $ref: '#/components/examples/group-example'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/rules:
    get:
      summary: List all group rules
      description: Lists all group rules for your org
      operationId: listGroupRules
      parameters:
        - name: limit
          in: query
          description: Specifies the number of rule results in a page
          schema:
            type: integer
            format: int32
            default: 50
            minimum: 1
            maximum: 200
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of rules
          schema:
            type: string
        - name: search
          in: query
          description: Specifies the keyword to search rules for
          schema:
            type: string
        - name: expand
          in: query
          description: If specified as `groupIdToGroupNameMap`, then displays group names
          schema:
            type: string
          x-okta-added-version: 1.3.0
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupRule'
              examples:
                ListGroupRulesExample:
                  $ref: '#/components/examples/list-group-rules-example'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a group rule
      description: >-
        Creates a group rule to dynamically add users to the specified group if
        they match the condition

        > **Note:** Group rules are created with the status set to `'INACTIVE'`.
      operationId: createGroupRule
      x-codegen-request-body-name: groupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRuleRequest'
            examples:
              GroupRuleExample:
                $ref: '#/components/examples/create-group-rule-request-example'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
              examples:
                GroupRuleExample:
                  $ref: '#/components/examples/group-rule-example'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/groups/rules/{groupRuleId}:
    get:
      summary: Retrieve a group rule
      description: Retrieves a specific group rule by ID from your org
      operationId: getGroupRule
      parameters:
        - name: expand
          in: query
          description: If specified as `groupIdToGroupNameMap`, then show group names
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
              examples:
                GroupRuleExample:
                  $ref: '#/components/examples/group-rule-example'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a group rule
      description: >-
        Replaces a group rule

        > **Notes:** You can only update rules with a group whose status is set
        to `'INACTIVE'`.

        >

        > You currently can't update the `action` section.
      operationId: replaceGroupRule
      x-codegen-request-body-name: groupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
            examples:
              GroupRuleExample:
                $ref: '#/components/examples/group-rule-example'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a group rule
      description: Deletes a specific group rule by `groupRuleId`
      operationId: deleteGroupRule
      parameters:
        - name: removeUsers
          in: query
          description: If set to `true`, removes users from groups assigned by this rule
          schema:
            type: boolean
            default: false
      responses:
        '202':
          description: Accepted
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupRuleId'
  /api/v1/groups/rules/{groupRuleId}/lifecycle/activate:
    post:
      summary: Activate a group rule
      description: Activates a specific group rule by ID from your org
      operationId: activateGroupRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupRuleId'
  /api/v1/groups/rules/{groupRuleId}/lifecycle/deactivate:
    post:
      summary: Deactivate a group rule
      description: Deactivates a specific group rule by ID from your org
      operationId: deactivateGroupRule
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupRule
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupRuleId'
  /api/v1/groups/{groupId}:
    get:
      summary: Retrieve a group
      description: Retrieves a specific group by `id` from your org
      operationId: getGroup
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                GroupExample:
                  $ref: '#/components/examples/group-example'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a group
      description: >-
        Replaces the profile for a group of `OKTA_GROUP` type from your org.

        > **Note :** You only can modify profiles for groups of the `OKTA_GROUP`
        type.

        >

        > App imports are responsible for updating profiles for groups of the
        `APP_GROUP` type, such as Active Directory groups.
      operationId: replaceGroup
      x-codegen-request-body-name: group
      requestBody:
        content:
          application/json:
            schema:
              properties:
                profile:
                  $ref: '#/components/schemas/OktaUserGroupProfile'
              type: object
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
              examples:
                GroupExample:
                  $ref: '#/components/examples/group-example'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a group
      description: >-
        Deletes a group of the `OKTA_GROUP` or `APP_GROUP` type from your org.

        > **Note:** You can't remove groups of type `APP_GROUP` if they are used
        in a group push mapping.
      operationId: deleteGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
  /api/v1/groups/{groupId}/apps:
    get:
      summary: List all assigned apps
      description: >-
        Lists all apps that are assigned to a group. See [Application Groups
        API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationGroups/).
      operationId: listAssignedApplicationsForGroup
      parameters:
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of apps
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of app results for a page
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
              examples:
                ListAppsExample:
                  $ref: '#/components/examples/list-apps-example'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
  /api/v1/groups/{groupId}/owners:
    get:
      summary: List all group owners
      description: Lists all owners for a specific group
      operationId: listGroupOwners
      parameters:
        - name: search
          in: query
          description: >-
            SCIM filter expression for group owners. Allows you to filter owners
            by type.
          schema:
            type: string
        - name: after
          in: query
          description: Specifies the pagination cursor for the next page of owners
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of owner results in a page
          schema:
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupOwner'
              examples:
                ListsOneOwnerOfaGroup:
                  $ref: '#/components/examples/ListsOwnerOneResponse'
                ListsMultipleOwnersOfaGroup:
                  $ref: '#/components/examples/ListsOwnersMultipleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - GroupOwner
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Assign a group owner
      description: Assigns a group owner
      operationId: assignGroupOwner
      parameters:
        - $ref: '#/components/parameters/pathGroupId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignGroupOwnerRequestBody'
            examples:
              AssignAGroupOwner:
                $ref: '#/components/examples/AssignGroupOwnerRequest'
        required: true
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOwner'
              examples:
                AssignAGroupOwner:
                  $ref: '#/components/examples/AssignGroupOwnerResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupOwner
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
  /api/v1/groups/{groupId}/owners/{ownerId}:
    delete:
      summary: Delete a group owner
      description: Deletes a group owner from a specific group
      operationId: deleteGroupOwner
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - GroupOwner
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathOwnerId'
  /api/v1/groups/{groupId}/roles:
    get:
      summary: List all group role assignments
      description: Lists all assigned roles of a group by `groupId`
      operationId: listGroupAssignedRoles
      parameters:
        - $ref: '#/components/parameters/pathQueryRoleExpand'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/StandardRole'
                    - $ref: '#/components/schemas/CustomRole'
              examples:
                Standard Roles:
                  $ref: '#/components/examples/StandardRolesListResponseGroup'
                Custom Roles:
                  $ref: '#/components/examples/CustomRolesListResponseGroup'
                IAM-Based Standard Roles:
                  $ref: '#/components/examples/IAMStandardRolesListResponseGroup'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Assign a role to a group
      description: >-
        Assigns a [standard
        role](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles) to a group.


        You can also assign a custom role to a group, but the preferred method
        to assign a custom role to a group is to create a binding between the
        custom role, the resource set, and the group. See [Create a role
        resource set
        binding](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/RoleDResourceSetBinding/#tag/RoleDResourceSetBinding/operation/createResourceSetBinding).


        > **Notes:**

        > * The request payload is different for standard and custom role
        assignments.

        > * For IAM-based standard role assignments, use the request payload for
        standard roles. However, the response payload for IAM-based role
        assignments is similar to the custom role's assignment response.
      operationId: assignRoleToGroup
      parameters:
        - name: disableNotifications
          in: query
          description: Grants the group third-party admin status when set to `true`
          schema:
            type: boolean
            default: false
      x-codegen-request-body-name: assignRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/StandardRoleAssignmentSchema'
                - $ref: '#/components/schemas/CustomRoleAssignmentSchema'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StandardRole'
                  - $ref: '#/components/schemas/CustomRole'
              examples:
                Standard Roles:
                  $ref: >-
                    #/components/examples/CreateStandardRoleAssignmentResponseGroup
                Custom Roles:
                  $ref: '#/components/examples/CreateCustomRoleResponseGroup'
                IAM-based Standard Roles:
                  $ref: '#/components/examples/CreateIAMStandardRoleResponseGroup'
        '201':
          description: Success
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignmentBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
  /api/v1/groups/{groupId}/roles/{roleAssignmentId}:
    get:
      summary: Retrieve a group role assignment
      description: >-
        Retrieves a role assigned to a group (identified by the `groupId`). The
        `roleAssignmentId` is the unique identifier for either a standard role
        group assignment object or a custom role resource set binding object.
      operationId: getGroupAssignedRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StandardRole'
                  - $ref: '#/components/schemas/CustomRole'
              examples:
                Standard Roles:
                  $ref: >-
                    #/components/examples/CreateStandardRoleAssignmentResponseGroup
                Custom Roles:
                  $ref: '#/components/examples/CreateCustomRoleResponseGroup'
                IAM-based Standard Roles:
                  $ref: '#/components/examples/CreateIAMStandardRoleResponseGroup'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a group role
      description: >-
        Unassigns a role assignment (identified by `roleAssignmentId`) from a
        group (identified by the `groupId`)
      operationId: unassignRoleFromGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignmentBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/groups/{groupId}/roles/{roleAssignmentId}/targets/catalog/apps:
    get:
      summary: List all group role app targets
      description: >-
        Lists all app targets for an `APP_ADMIN` role assignment to a group. The
        response includes a list of OIN-cataloged apps or app instances. The
        response payload for an app instance contains the `id` property, but an
        OIN-cataloged app doesn't.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/groups/{groupId}/roles/{roleAssignmentId}/targets/catalog/apps/{appName}:
    put:
      summary: Assign a group role app target
      description: >-
        Assigns an OIN app target to an `APP_ADMIN` role assignment to a group.
        When you assign the first OIN app target, you reduce the scope of the
        role assignment. The role no longer applies to all app targets, but
        applies only to the specified target. An OIN app target that's assigned
        to the role overrides any existing instance targets of the OIN app. For
        example, if a user is assigned to administer a specific Facebook
        instance, a successful request to add an OIN app with `facebook` for
        `appName` makes that user the administrator for all Facebook instances.
      operationId: assignAppTargetToAdminRoleForGroup
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a group role app target
      description: >
        Unassigns an OIN app target from an `APP_ADMIN` role assignment to a
        group


        > **Note:** You can't remove the last app target from a role assignment.

        > If you need a role assignment that applies to all apps, delete the
        `APP_ADMIN` role assignment with the target and create another one. See
        [Unassign a group
        role](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/RoleAssignmentBGroup/#tag/RoleAssignmentBGroup/operation/unassignRoleFromGroup).
      operationId: unassignAppTargetToAdminRoleForGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathAppName'
  /api/v1/groups/{groupId}/roles/{roleAssignmentId}/targets/catalog/apps/{appName}/{appId}:
    put:
      summary: Assign a group role app instance target
      description: >-
        Assigns an app instance target to an `APP_ADMIN` role assignment to a
        group. When you assign the first OIN app or app instance target, you
        reduce the scope of the role assignment.

        The role no longer applies to all app targets, but applies only to the
        specified target.


        > **Note:** You can target a mixture of both OIN app and app instance
        targets, but you can't assign permissions to manage all instances of an
        OIN app and then assign a subset of permissions to the same app.

        > For example, you can't specify that an admin has access to manage all
        instances of the Salesforce app and then also manage specific
        configurations of the Salesforce app.
      operationId: assignAppInstanceTargetToAppAdminRoleForGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a group role app instance target
      description: >-
        Unassigns an app instance target from an `APP_ADMIN` role assignment to
        a group


        > **Note:** You can't remove the last app instance target from a role
        assignment.

        > If you need a role assignment that applies to all apps, delete the
        `APP_ADMIN` role assignment with the target and create another one. See
        [Unassign a group
        role](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/RoleAssignmentBGroup/#tag/RoleAssignmentBGroup/operation/unassignRoleFromGroup).
      operationId: unassignAppInstanceTargetToAppAdminRoleForGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathAppName'
      - $ref: '#/components/parameters/pathAppId'
  /api/v1/groups/{groupId}/roles/{roleAssignmentId}/targets/groups:
    get:
      summary: List all group role group targets
      description: >-
        Lists all group targets for a
        [`USER_ADMIN`](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles),
        `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a
        group.

        If the role isn't scoped to specific group targets, Okta returns an
        empty array `[]`.
      operationId: listGroupTargetsForGroupRole
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/groups/{groupId}/roles/{roleAssignmentId}/targets/groups/{targetGroupId}:
    put:
      summary: Assign a group role group target
      description: >-
        Assigns a group target to a
        [`USER_ADMIN`](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles),
        `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a
        group.

        When you assign the first group target, you reduce the scope of the role
        assignment. The role no longer applies to all targets but applies only
        to the specified target.
      operationId: assignGroupTargetToGroupAdminRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a group role group target
      description: >-
        Unassigns a group target from a
        [`USER_ADMIN`](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles),
        `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to a
        group.
      operationId: unassignGroupTargetFromGroupAdminRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetBGroup
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathTargetGroupId'
  /api/v1/groups/{groupId}/users:
    get:
      summary: List all member users
      description: >-
        Lists all users that are a member of a group.

        The default user limit is set to a very high number due to historical
        reasons that are no longer valid for most orgs. This will change in a
        future version of this API. The recommended page limit is now
        `limit=200`.
      operationId: listGroupUsers
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - name: limit
          in: query
          description: Specifies the number of user results in a page
          schema:
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                ListMemberUserResponse:
                  $ref: '#/components/examples/ListUsersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.read
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
  /api/v1/groups/{groupId}/users/{userId}:
    put:
      summary: Assign a user to a group
      description: >-
        Assigns a user to a group with the `OKTA_GROUP` type.

        > **Note:** You only can modify memberships for groups of the
        `OKTA_GROUP` type. App imports are responsible for managing group
        memberships for groups of the `APP_GROUP` type, such as Active Directory
        groups.
      operationId: assignUserToGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a user from a group
      description: >-
        Unassigns a user from a group with the `OKTA_GROUP` type.

        > **Note:** You only can modify memberships for groups of the
        `OKTA_GROUP` type.

        >

        > App imports are responsible for managing group memberships for groups
        of the `APP_GROUP` type, such as Active Directory groups.
      operationId: unassignUserFromGroup
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.groups.manage
      tags:
        - Group
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathGroupId'
      - $ref: '#/components/parameters/pathUserId'
components:
  schemas:
    Group:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the group was created
        id:
          type: string
          readOnly: true
          example: 0gabcd1234
          description: Unique ID for the group
        lastMembershipUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the groups memberships were last updated
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the group's profile was last updated
        objectClass:
          type: array
          readOnly: true
          description: Determines the group's `profile`
          items:
            type: string
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
        _embedded:
          type: object
          description: Embedded resources related to the group
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          description: >-
            [Discoverable
            resources](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups!c=200&path=_links&t=response)
            related to the group
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                apps:
                  $ref: '#/components/schemas/HrefObject'
                logo:
                  type: array
                  items:
                    $ref: '#/components/schemas/HrefObject'
                source:
                  $ref: '#/components/schemas/HrefObject'
                users:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    OktaUserGroupProfile:
      description: >-
        Profile for any group that is not imported from Active Directory.
        Specifies the standard

        and custom profile properties for a group.


        The `objectClass` for these groups is `okta:user_group`.
      type: object
      properties:
        description:
          type: string
          example: All users West of The Rockies
          description: Description of the group
        name:
          type: string
          example: West Coast users
          description: Name of the group
      x-okta-extensible: true
    GroupRule:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          type: string
          format: date-time
          readOnly: true
          description: Creation date for group rule
        id:
          type: string
          readOnly: true
          description: ID of the group rule
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Date group rule was last updated
        name:
          type: string
          description: Name of the group rule
          minLength: 1
          maxLength: 50
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
          description: >-
            Type to indicate a group rule operation. Only `group_rule` is
            allowed.
    CreateGroupRuleRequest:
      type: object
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        name:
          type: string
          description: Name of the group rule
          minLength: 1
          maxLength: 50
        type:
          type: string
          enum:
            - group_rule
    Application:
      type: object
      properties:
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the application object was created
        features:
          type: array
          description: >
            Enabled app features

            > **Note:** See [Application
            Features](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationFeatures/)
            for app provisioning features.
          readOnly: true
          items:
            type: string
            enum:
              - GROUP_PUSH
              - IMPORT_NEW_USERS
              - IMPORT_PROFILE_UPDATES
              - IMPORT_USER_SCHEMA
              - PROFILE_MASTERING
              - PUSH_NEW_USERS
              - PUSH_PASSWORD_UPDATES
              - PUSH_PROFILE_UPDATES
              - PUSH_USER_DEACTIVATION
              - REACTIVATE_USERS
              - OUTBOUND_DEL_AUTH
              - DESKTOP_SSO
              - FEDERATED_PROFILE
              - SUPPRESS_ACTIVATION_EMAIL
              - PUSH_PENDING_USERS
              - MFA
              - UPDATE_EXISTING_USERNAME
              - EXCLUDE_USERNAME_UPDATE_ON_PROFILE_PUSH
              - EXCHANGE_ACTIVE_SYNC
              - IMPORT_SYNC
              - IMPORT_SYNC_CONTACTS
              - DEVICE_COMPLIANCE
              - VPN_CONFIG
              - IMPORT_SCHEMA_ENUM_VALUES
              - SCIM_PROVISIONING
              - DEVICE_FILTER_IN_SIGN_ON_RULES
              - PROFILE_TEMPLATE_UPGRADE
              - DEFAULT_PUSH_STATUS_TO_PUSH
              - REAL_TIME_SYNC
              - SSO
              - AUTHN_CONTEXT
              - JIT_PROVISIONING
              - GROUP_SYNC
              - OPP_SCIM_INCREMENTAL_IMPORTS
              - IN_MEMORY_APP_USER
              - LOG_STREAMING
              - OAUTH_INTEGRATION
              - IDP
              - PUSH_NEW_USERS_WITHOUT_PASSWORD
              - SKYHOOK_SERVICE
              - ENTITLEMENT_MANAGEMENT
              - PUSH_NEW_USERS_WITH_HASHED_PASSWORD
            x-enumDescriptions:
              GROUP_PUSH: >-
                Creates or links a group in the app when a mapping is defined
                for a group in Okta. Okta is the source for group memberships
                and all group members in Okta who are also assigned to the app
                are synced as group members to the app.
              IMPORT_NEW_USERS: Creates or links a user in Okta to a user from the app
              IMPORT_PROFILE_UPDATES: >-
                Updates a linked user's app profile during manual or scheduled
                imports
              IMPORT_USER_SCHEMA: >-
                Discovers the profile schema for a user from the app
                automatically
              PROFILE_MASTERING: >-
                Designates the app as the identity lifecycle and profile
                attribute authority for linked users. The user's profile in Okta
                is read-only.
              PUSH_NEW_USERS: >-
                Creates or links a user account in the app when assigning the
                app to a user in Okta
              PUSH_PASSWORD_UPDATES: >-
                Updates the user's app password when their password changes in
                Okta
              PUSH_PROFILE_UPDATES: >-
                Updates a user's profile in the app when the user's profile
                changes in Okta (the profile source)
              PUSH_USER_DEACTIVATION: >-
                Deactivates a user's account in the app when unassigned from the
                app in Okta or deactivated
              REACTIVATE_USERS: >-
                Reactivates an existing inactive user when provisioning a user
                to the app
              OUTBOUND_DEL_AUTH: >-
                Okta user authentication requests are delegated to a third-party
                app
              DESKTOP_SSO: >-
                Okta user authentication requests are handled by desktop SSO
                negotiation (if possible)
              FEDERATED_PROFILE: >-
                App user profiles are synchronized at sign-in and profile-view
                instances instead of during bulk imports
              SUPPRESS_ACTIVATION_EMAIL: >-
                Activation emails aren't sent to users sourced by AD and orgs
                with DelAuth enabled
              PUSH_PENDING_USERS: >-
                Users are in PENDING state in Okta and are created but not
                active in the sourced app user
              MFA: App can verify credentials as a second factor
              UPDATE_EXISTING_USERNAME: App can update the user name for existing users
              EXCLUDE_USERNAME_UPDATE_ON_PROFILE_PUSH: Exclude username update during profile push
              EXCHANGE_ACTIVE_SYNC: App supports synchronizing credentials with OMM enrolled devices
              IMPORT_SYNC: Synchronize import events
              IMPORT_SYNC_CONTACTS: Synchronize contacts
              DEVICE_COMPLIANCE: Apps support device compliance rules
              VPN_CONFIG: App supports pushing VPN configuration to OMM enrolled devices
              IMPORT_SCHEMA_ENUM_VALUES: >-
                App supports downloading schema enum values. You can download
                custom objects and integrating them with UD without being tied
                to the type metadata system.
              SCIM_PROVISIONING: >-
                App supports generic SCIM client provisioning and can leverage
                SCIM standard for provisioning and push custom attributes to a
                third-party app
              DEVICE_FILTER_IN_SIGN_ON_RULES: App supports filtering by client type in app sign-on rules
              PROFILE_TEMPLATE_UPGRADE: >-
                App supports profile template upgrades. This is primarily to
                help roll out the profile template upgrade feature for
                individual apps
              DEFAULT_PUSH_STATUS_TO_PUSH: >-
                App defaults Push status to `PUSH`. This feature is for apps,
                such as SharePoint, that want to receive App User profile
                updates even though they didn't implement traditional
                PUSH_PROFILE_UPDATES in the client API.
              REAL_TIME_SYNC: Apps support real-time synchronization
              SSO: Apps support establishing a subject based on claims from an IdP
              AUTHN_CONTEXT: >-
                Apps support establishing an authentication context based on
                claims from an IdP
              JIT_PROVISIONING: Apps support provisioning a user based on claims from an IdP
              GROUP_SYNC: >-
                Apps support syncing group information based on claims from an
                IdP
              OPP_SCIM_INCREMENTAL_IMPORTS: Apps support incremental imports. Used for SCIM app instances
              IN_MEMORY_APP_USER: >-
                Apps support in-memory app users. This feature is used as an
                alternative to Implicit App Assignment for a non-persisted app
                user.
              LOG_STREAMING: Apps support log streaming
              OAUTH_INTEGRATION: App is an OAuth 2.0 integration
              IDP: Apps support IdP functionalities
              PUSH_NEW_USERS_WITHOUT_PASSWORD: Don't send generated password for new users
              SKYHOOK_SERVICE: Use the Skyhook microservice for LCM operations
              ENTITLEMENT_MANAGEMENT: Marker to showcase which OIN apps are entitlement enabled
              PUSH_NEW_USERS_WITH_HASHED_PASSWORD: >-
                Send hashed password for new users. This feature is only used
                for CIS to CIC migration.
        id:
          type: string
          readOnly: true
          description: Unique ID for the app instance
        label:
          $ref: '#/components/schemas/ApplicationLabel'
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the application object was last updated
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        orn:
          type: string
          readOnly: true
          description: The Okta resource name (ORN) for the current app instance
        profile:
          type: object
          description: >-
            Contains any valid JSON schema for specifying properties that can be
            referenced from a request (only available to OAuth 2.0 client apps).

            For example, add an app manager contact email address or define an
            allowlist of groups that you can then reference using the Okta
            Expression Language `getFilteredGroups` function.


            > **Notes:**

            > * `profile` isn't encrypted, so don't store sensitive data in it.

            > * `profile` doesn't limit the level of nesting in the JSON schema
            you created, but there is a practical size limit. Okta recommends a
            JSON schema size of 1 MB or less for best performance.
          additionalProperties: true
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          $ref: '#/components/schemas/ApplicationLifecycleStatus'
        universalLogout:
          $ref: '#/components/schemas/ApplicationUniversalLogout'
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
        _embedded:
          type: object
          description: >-
            Embedded resources related to the app using the [JSON Hypertext
            Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification. If the `expand=user/{userId}` query parameter is
            specified, then the assigned [Application
            User](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/) is
            embedded.
          properties:
            user:
              type: object
              description: >-
                The specified [Application
                User](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/)
                assigned to the app
              additionalProperties:
                type: object
                properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/ApplicationLinks'
      required:
        - signOnMode
        - label
      discriminator:
        propertyName: signOnMode
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/Saml11Application'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
    GroupOwner:
      type: object
      properties:
        displayName:
          description: The display name of the group owner
          type: string
          readOnly: true
        id:
          description: The `id` of the group owner
          type: string
        lastUpdated:
          description: Timestamp when the group owner was last updated
          type: string
          format: date-time
          readOnly: true
        originId:
          description: >-
            The ID of the app instance if the `originType` is `APPLICATION`.
            This value is `NULL` if `originType` is `OKTA_DIRECTORY`.
          type: string
        originType:
          $ref: '#/components/schemas/GroupOwnerOriginType'
        resolved:
          description: >-
            If `originType`is APPLICATION, this parameter is set to `FALSE`
            until the owner's `originId` is reconciled with an associated Okta
            ID.
          type: boolean
        type:
          $ref: '#/components/schemas/GroupOwnerType'
    AssignGroupOwnerRequestBody:
      type: object
      properties:
        id:
          description: The `id` of the group owner
          type: string
        type:
          $ref: '#/components/schemas/GroupOwnerType'
    StandardRole:
      title: Standard Role Assignment
      type: object
      properties:
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
        id:
          type: string
          description: Role assignment ID
          readOnly: true
        label:
          type: string
          description: Label for the role assignment
          readOnly: true
        lastUpdated:
          type: string
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/LifecycleStatus'
            - description: Status of the role assignment
        type:
          $ref: '#/components/schemas/RoleType'
        _embedded:
          type: object
          description: Optional embedded resources for the role assignment
          properties:
            targets:
              type: object
              description: Targets configured for the role assignment
              properties:
                groups:
                  type: array
                  description: Group targets
                  items:
                    $ref: '#/components/schemas/Group'
                catalog:
                  description: App targets
                  properties:
                    apps:
                      type: array
                      items:
                        $ref: '#/components/schemas/CatalogApplication'
                  type: object
        _links:
          $ref: '#/components/schemas/LinksAssignee'
    CustomRole:
      title: Custom role assignment
      type: object
      properties:
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
        id:
          type: string
          description: Binding object ID
          readOnly: true
        label:
          type: string
          description: Label for the custom role assignment
          readOnly: true
        lastUpdated:
          type: string
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
        resource-set:
          type: string
          description: Resource set ID
          readOnly: true
        role:
          type: string
          description: Custom role ID
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/LifecycleStatus'
            - description: Status of the custom role assignment
        type:
          type: string
          description: CUSTOM for a custom role
          enum:
            - CUSTOM
        _links:
          $ref: '#/components/schemas/LinksCustomRoleResponse'
    StandardRoleAssignmentSchema:
      title: Standard Role
      type: object
      properties:
        type:
          type: string
          description: >-
            Specify the standard or IAM-based role type. See [standard
            roles](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles).
    CustomRoleAssignmentSchema:
      title: Custom Role
      type: object
      properties:
        resource-set:
          type: string
          description: Resource set ID
        role:
          type: string
          description: Custom role ID
        type:
          type: string
          description: The type of role. Specify `CUSTOM` for a custom role.
          enum:
            - CUSTOM
    CatalogApplication:
      description: An app in the OIN catalog
      type: object
      properties:
        category:
          type: string
          description: Category for the app in the OIN catalog
          example: SOCIAL
          readOnly: true
        description:
          type: string
          description: Description of the app in the OIN catalog
          readOnly: true
        displayName:
          type: string
          description: OIN catalog app display name
          readOnly: true
        features:
          type: array
          readOnly: true
          description: >-
            Features supported by the app. See app
            [features](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Application/#tag/Application/operation/listApplications!c=200&path=0/features&t=response).
          items:
            type: string
        id:
          type: string
          readOnly: true
          description: >-
            ID of the app instance. Okta returns this property only for apps not
            in the OIN catalog.
        lastUpdated:
          type: string
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          example: '2024-09-19T23:37:37.000Z'
        name:
          type: string
          description: >-
            App key name. For OIN catalog apps, this is a unique key for the app
            definition.
        signOnModes:
          type: array
          description: >-
            Authentication mode for the app. See app
            [signOnMode](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Application/#tag/Application/operation/listApplications!c=200&path=0/signOnMode&t=response).
          items:
            type: string
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        verificationStatus:
          type: string
          description: OIN verification status of the catalog app
          example: OKTA_VERIFIED
        website:
          type: string
          description: Website of the OIN catalog app
        _links:
          type: object
          description: >-
            Specifies link relations (see [Web
            Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using
            the [JSON Hypertext Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          readOnly: true
          properties:
            logo:
              type: array
              description: List of app logo resources
              items:
                $ref: '#/components/schemas/HrefObjectLogoLink'
            self:
              $ref: '#/components/schemas/HrefObjectSelfLink'
    User:
      type: object
      properties:
        activated:
          type: string
          description: The timestamp when the user status transitioned to `ACTIVE`
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          description: The timestamp when the user was created
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          type: string
          description: The unique key for the user
          readOnly: true
        lastLogin:
          type: string
          description: The timestamp of the last login
          format: date-time
          readOnly: true
          nullable: true
        lastUpdated:
          type: string
          description: The timestamp when the user was last updated
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          description: The timestamp when the user's password was last updated
          format: date-time
          readOnly: true
          nullable: true
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: >-
            The ID of the realm in which the user is residing. See
            [Realms](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Realm/).
          example: guo1bfiNtSnZYILxO0g4
          readOnly: true
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          type: string
          description: The timestamp when the status of the user last changed
          format: date-time
          readOnly: true
          nullable: true
        transitioningToStatus:
          type: string
          description: >-
            The target status of an in-progress asynchronous status transition.
            This property is only returned if the user's state is transitioning.
          readOnly: true
          nullable: true
          enum:
            - ACTIVE
            - DEPROVISIONED
            - PROVISIONED
        type:
          type: object
          description: >-
            The user type that determines the schema for the user's profile. The
            `type` property is a map that identifies the [User
            Types](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/#tag/UserType).


            Currently it contains a single element, `id`. It can be specified
            when creating a new user, and ca be updated by an admin on a full
            replace of an existing user (but not a partial update).
          properties:
            id:
              type: string
              description: The ID of the user type
        _embedded:
          type: object
          description: >-
            Embedded resources related to the user using the [JSON Hypertext
            Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          description: >-
            Specifies link relations (see [Web
            Linking](https://datatracker.ietf.org/doc/html/rfc8288) available
            for the current status of a user.

            The links object is used for dynamic discovery of related resources,
            lifecycle operations, and credential operations. The links object is
            read-only.


            For an individual user result, the links object contains a full set
            of link relations available for that user as determined by your
            policies.

            For a collection of users, the links object contains only the `self`
            link. Operations that return a collection of users include [List all
            users](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers)
            and [List all group member
            users](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroupUsers).
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - type: object
              properties:
                self:
                  description: URL to the individual user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                activate:
                  description: URL to activate the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                resetPassword:
                  description: URL to reset the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                resetFactors:
                  description: URL to reset the user's factors
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                expirePassword:
                  description: URL to expire the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                forgotPassword:
                  description: URL to initiate a forgot password operation
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                changeRecoveryQuestion:
                  description: URL to change the user's recovery question
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                deactivate:
                  description: URL to deactivate a user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                reactivate:
                  description: URL to reactivate the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                changePassword:
                  description: URL to change the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                schema:
                  description: URL to the user's profile schema
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                suspend:
                  description: URL to suspend the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                unsuspend:
                  description: URL to unsuspend the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                unlock:
                  description: URL to unlock the locked-out user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                type:
                  description: URL to the user type
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
            - readOnly: true
    GroupProfile:
      description: >-
        Specifies required and optional properties for a group. The
        `objectClass` of a group determines which additional properties are
        available.


        You can extend group profiles with custom properties, but you must first
        add the properties to the group profile schema before you can reference
        them. Use the Profile Editor in the Admin Console or the [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/)to
        manage schema extensions.


        Custom properties can contain HTML tags. It is the client's
        responsibility to escape or encode this data before displaying it. Use
        [best-practices](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
        to prevent cross-site scripting.
      anyOf:
        - $ref: '#/components/schemas/OktaUserGroupProfile'
        - $ref: '#/components/schemas/OktaActiveDirectoryGroupProfile'
    GroupType:
      description: Determines how a group's profile and memberships are managed
      type: string
      enum:
        - APP_GROUP
        - BUILT_IN
        - OKTA_GROUP
      x-enumDescriptions:
        APP_GROUP: >-
          Group profile and memberships are imported and must be managed within
          the app (such as Active Directory or LDAP) that imported the group
        BUILT_IN: >-
          Group profile and memberships are managed by Okta and can't be
          modified
        OKTA_GROUP: >-
          Group profile and memberships are directly managed in Okta via static
          assignments or indirectly through group rules
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    GroupRuleAction:
      description: Defines which users and groups to assign
      type: object
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
    GroupRuleConditions:
      description: Defines group rule conditions
      type: object
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
    GroupRuleStatus:
      description: Status of group rule
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - INVALID
    ApplicationAccessibility:
      description: Specifies access settings for the app
      type: object
      properties:
        errorRedirectUrl:
          type: string
          description: Custom error page URL for the app
        loginRedirectUrl:
          type: string
          description: >-
            Custom login page URL for the app

            > **Note:** The `loginRedirectUrl` property is deprecated in
            Identity Engine. This property is used with the custom app login
            feature. Orgs that actively use this feature can continue to do so.
            See [Okta-hosted sign-in (redirect
            authentication)](https://developer.okta.com/docs/guides/redirect-authentication/)
            or [configure IdP routing
            rules](https://help.okta.com/okta_help.htm?type=oie&id=ext-cfg-routing-rules)
            to redirect users to the appropriate sign-in app for orgs that don't
            use the custom app login feature.
        selfService:
          type: boolean
          description: Represents whether the app can be self-assignable by users
    ApplicationLabel:
      description: User-defined display name for app
      type: string
    ApplicationLicensing:
      description: Licenses for the app
      type: object
      properties:
        seatCount:
          type: integer
          description: Number of licenses purchased for the app
    ApplicationSignOnMode:
      description: >
        Authentication mode for the app


        | signOnMode | Description |

        | ---------- | ----------- |

        | AUTO_LOGIN | Secure Web Authentication (SWA) |

        | BASIC_AUTH | HTTP Basic Authentication with Okta Browser Plugin |

        | BOOKMARK | Just a bookmark (no-authentication) |

        | BROWSER_PLUGIN | Secure Web Authentication (SWA) with Okta Browser
        Plugin |

        | OPENID_CONNECT | Federated Authentication with OpenID Connect (OIDC) |

        | SAML_1_1 | Federated Authentication with SAML 1.1 WebSSO (not
        supported for custom apps) |

        | SAML_2_0 | Federated Authentication with SAML 2.0 WebSSO |

        | SECURE_PASSWORD_STORE | Secure Web Authentication (SWA) with POST
        (plugin not required) |

        | WS_FEDERATION | Federated Authentication with WS-Federation Passive
        Requestor Profile |


        Select the `signOnMode` for your custom app:
      type: string
      enum:
        - AUTO_LOGIN
        - BASIC_AUTH
        - BOOKMARK
        - BROWSER_PLUGIN
        - OPENID_CONNECT
        - SAML_1_1
        - SAML_2_0
        - SECURE_PASSWORD_STORE
        - WS_FEDERATION
    ApplicationLifecycleStatus:
      description: App instance status
      type: string
      enum:
        - ACTIVE
        - DELETED
        - INACTIVE
      readOnly: true
    ApplicationUniversalLogout:
      description: >-
        <div class="x-lifecycle-container"><x-lifecycle
        class="oie"></x-lifecycle></div>

        Universal Logout properties for the app. These properties are only
        returned and can't be updated.
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
      example: ACTIVE
      type: object
      properties:
        identityStack:
          type: string
          description: >-
            Indicates whether the app uses a shared identity stack that may
            cause the user to sign out of other apps by the same company
          enum:
            - SHARED
            - NOT_SHARED
          example: SHARED
        protocol:
          type: string
          description: The protocol used for Universal Logout
          enum:
            - PROPRIETARY
            - GLOBAL_TOKEN_REVOCATION
          x-enumDescriptions:
            PROPRIETARY: Universal Logout is implemented with a proprietary method.
            GLOBAL_TOKEN_REVOCATION: >-
              Universal Logout is implemented with the [Global Token
              Revocation](https://datatracker.ietf.org/doc/draft-parecki-oauth-global-token-revocation/)
              protocol. See the [Global Token Revocation
              API](https://developer.okta.com/docs/api/openapi/okta-oauth/oauth/tag/GlobalTokenRevocation/).
          example: PROPRIETARY
        status:
          type: string
          description: Universal Logout status for the app instance
          enum:
            - ENABLED
            - DISABLED
            - UNSUPPORTED
          example: ENABLED
          x-enumDescriptions:
            ENABLED: >-
              Universal Logout is enabled. Users are signed out of the app
              instance when the Okta system or an admin initiates logout.
            DISABLED: Universal Logout is disabled
            UNSUPPORTED: The app doesn't support Universal Logout
        supportType:
          type: string
          description: >-
            Indicates whether the app supports full or partial Universal Logout
            (UL).
          enum:
            - FULL
            - PARTIAL
          x-enumDescriptions:
            FULL: >-
              Full UL support (users are signed out of an app when the Okta
              system or an admin initiates logout)
            PARTIAL: >-
              This app's sign-out behavior can be different from other supported
              UL apps.
          example: FULL
      readOnly: true
    ApplicationVisibility:
      description: Specifies visibility settings for the app
      type: object
      properties:
        appLinks:
          type: object
          description: >-
            Links or icons that appear on the End-User Dashboard if they're set
            to `true`.
          additionalProperties:
            type: boolean
        autoLaunch:
          type: boolean
          description: Automatically signs in to the app when user signs into Okta
        autoSubmitToolbar:
          type: boolean
          description: Automatically sign in when user lands on the sign-in page
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
    ApplicationLinks:
      description: Discoverable resources related to the app
      properties:
        accessPolicy:
          $ref: '#/components/schemas/AccessPolicyLink'
        activate:
          $ref: '#/components/schemas/HrefObjectActivateLink'
        appLinks:
          type: array
          description: List of app link resources
          items:
            $ref: '#/components/schemas/HrefObject'
        deactivate:
          $ref: '#/components/schemas/HrefObjectDeactivateLink'
        groups:
          $ref: '#/components/schemas/GroupsLink'
        help:
          $ref: '#/components/schemas/HelpLink'
        logo:
          type: array
          description: List of app logo resources
          items:
            $ref: '#/components/schemas/HrefObject'
        metadata:
          $ref: '#/components/schemas/MetadataLink'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
        users:
          $ref: '#/components/schemas/UsersLink'
      readOnly: true
      type: object
    GroupOwnerOriginType:
      description: The source where group ownership is managed
      type: string
      enum:
        - APPLICATION
        - OKTA_DIRECTORY
    GroupOwnerType:
      description: The entity type of the owner
      type: string
      enum:
        - GROUP
        - USER
    RoleAssignmentType:
      description: Role assignment type
      type: string
      enum:
        - CLIENT
        - GROUP
        - USER
      x-enumDescriptions:
        USER: The role is assigned to a user
        GROUP: The role is assigned to a group
        CLIENT: The role is assigned to a client app
    LifecycleStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    RoleType:
      description: Standard role type
      type: string
      enum:
        - ACCESS_CERTIFICATIONS_ADMIN
        - ACCESS_REQUESTS_ADMIN
        - API_ACCESS_MANAGEMENT_ADMIN
        - API_ADMIN
        - APP_ADMIN
        - CUSTOM
        - GROUP_MEMBERSHIP_ADMIN
        - HELP_DESK_ADMIN
        - MOBILE_ADMIN
        - ORG_ADMIN
        - READ_ONLY_ADMIN
        - REPORT_ADMIN
        - SUPER_ADMIN
        - USER_ADMIN
        - WORKFLOWS_ADMIN
      x-enumDescriptions:
        API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
        API_ADMIN: Access Management Administrator
        APP_ADMIN: Application Administrator
        CUSTOM: Custom label specified by the client
        GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
        HELP_DESK_ADMIN: Help Desk Administrator
        MOBILE_ADMIN: Mobile Administrator
        ORG_ADMIN: Organizational Administrator
        READ_ONLY_ADMIN: Read-Only Administrator
        REPORT_ADMIN: Report Administrator
        SUPER_ADMIN: Super Administrator
        USER_ADMIN: Group Administrator
        WORKFLOWS_ADMIN: Workflows Administrator
        ACCESS_CERTIFICATIONS_ADMIN: Access Certifications Administrator (predefined resource sets)
        ACCESS_REQUESTS_ADMIN: Access Requests Administrator (predefined resource sets)
    LinksAssignee:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification.
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/HrefObjectAssigneeLink'
    LinksCustomRoleResponse:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources.
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/HrefObjectAssigneeLink'
        member:
          $ref: '#/components/schemas/HrefObjectMemberLink'
        permissions:
          $ref: '#/components/schemas/HrefObjectPermissionsLink'
        resource-set:
          $ref: '#/components/schemas/HrefObjectResourceSetLink'
        role:
          $ref: '#/components/schemas/HrefObjectRoleLink'
    CatalogApplicationStatus:
      description: App status
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    HrefObjectLogoLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the logo resource
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    UserCredentials:
      description: >-
        Specifies primary authentication and recovery credentials for a user.
        Credential types and requirements vary depending on the provider and
        security policy of the org.
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
    UserProfile:
      additionalProperties: true
      description: >-
        Specifies the default and custom profile properties for a user.


        The default user profile is based on the [System for Cross-domain
        Identity Management: Core
        Schema](https://datatracker.ietf.org/doc/html/rfc7643).


        The only permitted customizations of the default profile are to update
        permissions, change whether the `firstName` and `lastName` properties
        are nullable, and specify a
        [pattern](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation)
        for `login`. You can use the Profile Editor in the Admin Console or the
        [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)
        to make schema modifications.


        You can extend user profiles with custom properties. You must first add
        the custom property to the user profile schema before you reference it.

        You can use the Profile Editor in the Admin Console or the [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)
        to manage schema extensions.


        Custom attributes can contain HTML tags. It's the client's
        responsibility to escape or encode this data before displaying it. Use
        [best-practices](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
        to prevent cross-site scripting.
      type: object
      properties:
        city:
          type: string
          description: The city or locality of the user's address (`locality`)
          maxLength: 128
          nullable: true
        costCenter:
          type: string
          description: Name of the cost center assigned to a user
          nullable: true
        countryCode:
          description: >-
            The country name component of the user's address (`country`). For
            validation, see [ISO 3166-1 alpha 2 "short" code
            format](https://datatracker.ietf.org/doc/html/draft-ietf-scim-core-schema-22#ref-ISO3166).
          type: string
          maxLength: 2
          nullable: true
        department:
          type: string
          description: Name of the user's department
        displayName:
          type: string
          description: Name of the user suitable for display to end users
          nullable: true
        division:
          type: string
          description: Name of the user's division
          nullable: true
        email:
          type: string
          description: >-
            The primary email address of the user. For validation, see [RFC 5322
            Section
            3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
          format: email
          minLength: 5
          maxLength: 100
        employeeNumber:
          description: The organization or company assigned unique identifier for the user
          type: string
        firstName:
          type: string
          description: Given name of the user (`givenName`)
          minLength: 1
          maxLength: 50
          nullable: true
        honorificPrefix:
          type: string
          description: Honorific prefix(es) of the user, or title in most Western languages
          nullable: true
        honorificSuffix:
          type: string
          description: Honorific suffix(es) of the user
          nullable: true
        lastName:
          type: string
          description: The family name of the user (`familyName`)
          minLength: 1
          maxLength: 50
          nullable: true
        locale:
          type: string
          description: >-
            The user's default location for purposes of localizing items such as
            currency, date time format, numerical representations, and so on.

            A locale value is a concatenation of the ISO 639-1 two-letter
            language code, an underscore, and the ISO 3166-1 two-letter country
            code. For example, en_US specifies the language English and country
            US. This value is `en_US` by default.
        login:
          type: string
          description: >-
            The unique identifier for the user (`username`). For validation, see
            [Login pattern
            validation](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation).


            Every user within your Okta org must have a unique identifier for a
            login. This constraint applies to all users you import from other
            systems or applications such as Active Directory. Your organization
            is the top-level namespace to mix and match logins from all your
            connected applications or directories. Careful consideration of
            naming conventions for your login identifier will make it easier to
            onboard new applications in the future.


            Logins are not considered unique if they differ only in case and/or
            diacritical marks. If one of your users has a login of
            Isaac.Brock@example.com, there cannot be another user whose login is
            isaac.brock@example.com, nor isáàc.bröck@example.com.


            Okta has a default ambiguous name resolution policy for usernames
            that include @-signs. (By default, usernames must be formatted as
            email addresses and thus always include @-signs. You can remove that
            restriction using either the Admin Console or the [Schemas
            API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/).
            Users can sign in with their non-qualified short name (for example:
            isaac.brock with username isaac.brock@example.com) as long as the
            short name is still unique within the organization.

            maxLength: 100
          minLength: 5
        manager:
          type: string
          description: The `displayName` of the user's manager
          nullable: true
        managerId:
          type: string
          description: The `id` of the user's manager
          nullable: true
        middleName:
          type: string
          description: The middle name of the user
          nullable: true
        mobilePhone:
          type: string
          description: The mobile phone number of the user
          maxLength: 100
          minLength: 0
          nullable: true
        nickName:
          type: string
          description: The casual way to address the user in real life
          nullable: true
        organization:
          type: string
          description: Name of the the user's organization
          nullable: true
        postalAddress:
          type: string
          description: Mailing address component of the user's address
          maxLength: 4096
          nullable: true
        preferredLanguage:
          type: string
          description: >-
            The user's preferred written or spoken language. For validation, see
            [RFC 7231 Section
            5.3.5](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5).
          nullable: true
        primaryPhone:
          type: string
          description: The primary phone number of the user such as a home number
          maxLength: 100
          minLength: 0
          nullable: true
        profileUrl:
          type: string
          description: >-
            The URL of the user's online profile. For example, a web page. See
            [URL](https://datatracker.ietf.org/doc/html/rfc1808).
          nullable: true
        secondEmail:
          type: string
          format: email
          description: >-
            The secondary email address of the user typically used for account
            recovery. For validation, see [RFC 5322 Section
            3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
          minLength: 5
          maxLength: 100
          nullable: true
        state:
          type: string
          description: The state or region component of the user's address (`region`)
          maxLength: 128
          nullable: true
        streetAddress:
          type: string
          description: The full street address component of the user's address
          maxLength: 1024
          nullable: true
        timezone:
          type: string
          description: The user's time zone
          nullable: true
        title:
          type: string
          description: The user's title, such as Vice President
          nullable: true
        userType:
          type: string
          description: >-
            The property used to describe the organization-to-user relationship,
            such as employee or contractor
          nullable: true
        zipCode:
          type: string
          description: >-
            The ZIP code or postal code component of the user's address
            (`postalCode`)
          maxLength: 50
          nullable: true
    UserStatus:
      description: >-
        The current status of the user.


        The status of a user changes in response to explicit events, such as
        admin-driven lifecycle changes, user login, or self-service password
        recovery. Okta doesn't asynchronously sweep through users and update
        their password expiry state, for example. Instead, Okta evaluates
        password policy at login time, notices the password has expired, and
        moves the user to the expired state. When running reports, remember that
        the data is valid as of the last login or lifecycle event for that user.
      type: string
      enum:
        - ACTIVE
        - DEPROVISIONED
        - LOCKED_OUT
        - PASSWORD_EXPIRED
        - PROVISIONED
        - RECOVERY
        - STAGED
        - SUSPENDED
      readOnly: true
    OktaActiveDirectoryGroupProfile:
      description: |-
        Profile for a group that is imported from Active Directory.

        The `objectClass` for such groups is `okta:windows_security_principal`.
      type: object
      properties:
        description:
          type: string
          example: All users in the engineering department
          description: Description of the Windows group
        dn:
          type: string
          example: CN=West Coast users,OU=West Coast,DC=example,DC=com
          description: The distinguished name of the Windows group
        externalId:
          type: string
          example: VKzYZ1C+IkSZxIWlrW5ITg==
          description: Base-64 encoded GUID (`objectGUID`) of the Windows group
        name:
          type: string
          example: West Coast users
          description: Name of the Windows group
        samAccountName:
          type: string
          example: West Coast users
          description: Pre-Windows 2000 name of the Windows group
        windowsDomainQualifiedName:
          type: string
          example: EXAMPLE\\West Coast users
          description: Fully qualified name of the Windows group
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    GroupRuleGroupAssignment:
      description: Contains the `groupIds` array
      type: object
      properties:
        groupIds:
          description: Array of `groupIds` to which users are added
          type: array
          items:
            type: string
    GroupRuleExpression:
      description: >-
        Defines Okta specific [group-rules
        expression](https://developer.okta.com/docs/reference/okta-expression-language/#expressions-in-group-rules)
      type: object
      properties:
        type:
          type: string
          description: Expression type. Only valid value is '`urn:okta:expression:1.0`'.
        value:
          type: string
          description: Okta expression that would result in a Boolean value
          example: user.role==\"Engineer\"
    GroupRulePeopleCondition:
      description: Defines conditions for `people` in a group rule
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
    ApplicationVisibilityHide:
      description: Hides the app for specific end-user apps
      type: object
      properties:
        iOS:
          type: boolean
          description: Okta Mobile for iOS or Android (pre-dates Android)
          default: false
          example: false
        web:
          type: boolean
          description: Okta End-User Dashboard on a web browser
          default: false
          example: true
    AccessPolicyLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the app access policy resource
    HrefObjectActivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to activate the resource
    HrefObjectDeactivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to deactivate the resource
    GroupsLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: >-
            Link to the [Application
            Groups](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationGroups/#tag/ApplicationGroups/operation/listApplicationGroupAssignments)
            resource
    HelpLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the app help resource
    MetadataLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: >-
            Link to the [SAML
            metadata](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationSSO/#tag/ApplicationSSO/operation/previewSAMLmetadataForApplication)
            for SSO
    UsersLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: >-
            Link to the [Application
            Users](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/ApplicationUsers/#tag/ApplicationUsers/operation/listApplicationUsers)
            resource
    HrefObjectAssigneeLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the assignee resource
    HrefObjectMemberLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the member resource
    HrefObjectPermissionsLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the permissions resource
    HrefObjectResourceSetLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource set resource
    HrefObjectRoleLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the role resource
    PasswordCredential:
      description: >-
        Specifies a password for a user.


        When a user has a valid password, imported hashed password, or password
        hook, and a response object contains

        a password credential, then the password object is a bare object without
        the value property defined (for example, `password: {}`). This indicates
        that a password value exists. You can modify password policy
        requirements in the Admin Console by editing the Password
        authenticator:  **Security** > **Authenticators** > **Password** (or for
        Okta Classic orgs, use **Security** > **Authentication** >
        **Password**).


        For information on defaults and configuring your password policies, see
        [Configure the password
        authenticator](https://help.okta.com/okta_help.htm?type=oie&id=ext-configure-password)
        in the help documentation.
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          type: string
          writeOnly: true
          description: >-
            Specifies the password for a user. The password policy validates
            this password.
          format: password
          example: pa$$word
    AuthenticationProvider:
      description: >-
        Specifies the authentication provider that validates the user's password
        credential. The user's current provider is managed by the **Delegated
        Authentication** settings for your org. The provider object is
        **read-only**.
      type: object
      properties:
        name:
          type: string
          description: The name of the authentication provider
          readOnly: true
          example: OKTA
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      readOnly: true
    RecoveryQuestionCredential:
      description: >-
        Specifies a secret question and answer that's validated (case
        insensitive) when a user forgets their

        password or unlocks their account. The answer property is write-only.
      type: object
      properties:
        answer:
          type: string
          description: The answer to the recovery question
          minimum: 1
          maximum: 100
          writeOnly: true
          example: se7en
        question:
          type: string
          description: The recovery question
          minimum: 1
          maximum: 100
          example: what is your favourite movie?
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    GroupRuleGroupCondition:
      description: Currently not supported
      type: object
      properties:
        exclude:
          type: array
          description: Currently not supported
          items:
            type: string
    GroupRuleUserCondition:
      description: Defines conditions specific to user exclusion
      type: object
      properties:
        exclude:
          type: array
          description: Excluded `userIds` when processing rules
          items:
            type: string
    PasswordCredentialHash:
      description: >-
        Specifies a hashed password to import into Okta. This allows an existing
        password to be imported into Okta directly

        from some other store. Okta supports the BCRYPT, SHA-512, SHA-256,
        SHA-1, MD5, and PBKDF2 hash functions for password import.
         A hashed password may be specified in a password object when creating or updating a user, but not for other operations.
         See the [Create user with imported hashed password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-imported-hashed-password) description. When you update a user with a hashed password, the user must be in the `STAGED` status.
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        digestAlgorithm:
          $ref: '#/components/schemas/DigestAlgorithm'
        iterationCount:
          type: integer
          description: >-
            The number of iterations used when hashing passwords using PBKDF2.
            Must be >= 4096. Only required for PBKDF2 algorithm.
        keySize:
          type: integer
          description: >-
            Size of the derived key in bytes. Only required for PBKDF2
            algorithm.
        salt:
          description: >-
            Only required for salted hashes. For BCRYPT, this specifies Radix-64
            as the encoded salt used to generate the hash,

            which must be 22 characters long. For other salted hashes, this
            specifies the Base64-encoded salt used to

            generate the hash.
          type: string
        saltOrder:
          type: string
          description: >-
            Specifies whether salt was pre- or postfixed to the password before
            hashing. Only required for salted algorithms.
        value:
          description: >-
            For SHA-512, SHA-256, SHA-1, MD5, and PBKDF2, this is the actual
            base64-encoded hash of the password (and salt, if used).

            This is the Base64-encoded `value` of the
            SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest that was computed by either
            pre-fixing or post-fixing

            the `salt` to the `password`, depending on the `saltOrder`. If a
            `salt` was not used in the `source` system, then this should just be

            the Base64-encoded `value` of the password's
            SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest. For BCRYPT, this is the
            actual Radix-64 encoded hashed password.
          type: string
        workFactor:
          type: integer
          description: >-
            Governs the strength of the hash and the time required to compute
            it. Only required for BCRYPT algorithm.
          minimum: 1
          maximum: 20
    PasswordCredentialHook:
      description: >-
        Specify a [password import inline
        hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createPasswordImportInlineHook)
        to trigger verification of the user's password the first time the user
        signs in. This allows an existing password to be imported into Okta
        directly from some other store.
      type: object
      properties:
        type:
          type: string
          description: The type of password inline hook. Currently, must be set to default.
    AuthenticationProviderType:
      description: The type of authentication provider
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - IMPORT
        - LDAP
        - OKTA
        - SOCIAL
      x-enumDescriptions:
        ACTIVE_DIRECTORY: >-
          Specifies the Microsoft Active Directory instance name as the `name`
          property
        FEDERATION: >-
          Specifies a federated identity provider (such as an SAML IdP) that
          validates the user's password credentials. Doesn't support a
          `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
        IMPORT: Specifies a hashed password that was imported from an external source
        LDAP: Specifies the LDAP directory instance name as the `name` property
        OKTA: Specifies the Okta identity provider
        SOCIAL: >-
          Specifies an OIDC or third-party social identity provider. Doesn't
          support a `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
      readOnly: true
    PasswordCredentialHashAlgorithm:
      description: >-
        The algorithm used to generate the hash using the password (and salt,
        when applicable).
      type: string
      enum:
        - BCRYPT
        - MD5
        - PBKDF2
        - SHA-1
        - SHA-256
        - SHA-512
    DigestAlgorithm:
      description: >-
        Algorithm used to generate the key. Only required for the PBKDF2
        algorithm.
      type: string
      enum:
        - SHA256_HMAC
        - SHA512_HMAC
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathGroupRuleId:
      name: groupRuleId
      description: The `id` of the group rule
      in: path
      required: true
      schema:
        type: string
        example: 0pr3f7zMZZHPgUoWO0g4
    pathGroupId:
      name: groupId
      description: The `id` of the group
      in: path
      required: true
      schema:
        type: string
        example: 00g1emaKYZTWRYYRRTSK
    pathOwnerId:
      description: The `id` of the group owner
      name: ownerId
      in: path
      required: true
      schema:
        type: string
        example: 00u1emaK22TWRYd3TtG
    pathQueryRoleExpand:
      name: expand
      description: >-
        An optional parameter used to return targets configured for the standard
        role assignment in the `embedded` property. Supported values:
        `targets/groups` or `targets/catalog/apps`
      in: query
      required: false
      schema:
        type: string
      examples:
        groupTarget:
          value: targets/groups
          summary: Return group targets
        appTarget:
          value: targets/catalog/apps
          summary: Return app targets
    pathRoleAssignmentId:
      name: roleAssignmentId
      description: The `id` of the role assignment
      in: path
      required: true
      schema:
        type: string
        example: JBCUYUC7IRCVGS27IFCE2SKO
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    pathAppName:
      name: appName
      description: Name of the app definition (the OIN catalog app key name)
      in: path
      required: true
      schema:
        type: string
        example: google
    pathAppId:
      name: appId
      description: Application ID
      in: path
      required: true
      schema:
        type: string
        example: 0oafxqCAJWWGELFTYASJ
    pathTargetGroupId:
      name: targetGroupId
      in: path
      required: true
      schema:
        type: string
        example: 00g1e9dfjHeLAsdX983d
    pathUserId:
      name: userId
      description: ID of an existing Okta user
      in: path
      required: true
      schema:
        type: string
        example: 00ub0oNGTSWTBKOLGLNR
  examples:
    list-groups-examples:
      summary: List all groups example
      description: Lists an example of an OKTA_GROUP and an APP_GROUP
      value:
        - id: 00g1emaKYZTWRYYRRTSK
          created: '2015-02-06T10:11:28.000Z'
          lastUpdated: '2015-10-05T19:16:43.000Z'
          lastMembershipUpdated: '2015-11-28T19:15:32.000Z'
          objectClass:
            - okta:user_group
          type: OKTA_GROUP
          profile:
            name: West Coast users
            description: All users West of The Rockies
          _links:
            logo:
              - name: medium
                href: https://{yourOktaDomain}/img/logos/groups/okta-medium.png
                type: image/png
              - name: large
                href: https://{yourOktaDomain}/img/logos/groups/okta-large.png
                type: image/png
            users:
              href: >-
                https://{yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK/users
            apps:
              href: https://{yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps
        - id: 00garwpuyxHaWOkdV0g4
          created: '2015-08-15T19:15:17.000Z'
          lastUpdated: '2015-11-18T04:02:19.000Z'
          lastMembershipUpdated: '2015-08-15T19:15:17.000Z'
          objectClass:
            - okta:windows_security_principal
          type: APP_GROUP
          profile:
            name: Engineering users
            description: All users in the engineering department
            groupType: Security
            samAccountName: Engineering users
            objectSid: S-1-5-21-717838489-685202119-709183397-1177
            groupScope: Global
            dn: CN=Engineering users,OU=Engineering,DC=corp,DC=example,DC=com
            windowsDomainQualifiedName: CORP\Engineering users
            externalId: OZJdWdONCU6h7WjQKp+LPA==
          source:
            id: 0oa2v0el0gP90aqjJ0g7
          _links:
            logo:
              - name: medium
                href: >-
                  https://{yourOktaDomain}/img/logos/groups/active_directory-medium.png
                type: image/png
              - name: large
                href: >-
                  https://{yourOktaDomain}/img/logos/groups/active_directory-large.png
                type: image/png
            source:
              href: https://{yourOktaDomain}/api/v1/apps/0oa2v0el0gP90aqjJ0g7
            users:
              href: >-
                https://{yourOktaDomain}/api/v1/groups/00garwpuyxHaWOkdV0g4/users
            apps:
              href: https://{yourOktaDomain}/api/v1/groups/00garwpuyxHaWOkdV0g4/apps
    group-example:
      summary: Group example
      description: Example of a group
      value:
        id: 00g1emaKYZTWRYYRRTSK
        created: '2015-02-06T10:11:28.000Z'
        lastUpdated: '2015-10-05T19:16:43.000Z'
        lastMembershipUpdated: '2015-11-28T19:15:32.000Z'
        objectClass:
          - okta:user_group
        type: OKTA_GROUP
        profile:
          name: West Coast users
          description: All users West of The Rockies
        _links:
          logo:
            - name: medium
              href: https://{yourOktaDomain}/img/logos/groups/okta-medium.png
              type: image/png
            - name: large
              href: https://{yourOktaDomain}/img/logos/groups/okta-large.png
              type: image/png
          users:
            href: https://{yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK/users
          apps:
            href: https://{yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK/apps
    list-group-rules-example:
      summary: List group rules example
      description: List all group rules example
      value:
        - type: group_rule
          id: 0pr3f7zMZZHPgUoWO0g4
          status: INACTIVE
          name: Engineering group rule
          created: '2016-12-01T14:40:04.000Z'
          lastUpdated: '2016-12-01T14:40:04.000Z'
          conditions:
            people:
              users:
                exclude:
                  - 00u22w79JPMEeeuLr0g4
              groups:
                exclude: []
            expression:
              value: user.role=="Engineer"
              type: urn:okta:expression:1.0
          actions:
            assignUserToGroups:
              groupIds:
                - 00gjitX9HqABSoqTB0g3
    create-group-rule-request-example:
      summary: Create group rule request example
      value:
        type: group_rule
        name: Engineering group rule
        conditions:
          people:
            users:
              exclude:
                - 00u22w79JPMEeeuLr0g4
            groups:
              exclude: []
          expression:
            value: user.role=="Engineer"
            type: urn:okta:expression:1.0
        actions:
          assignUserToGroups:
            groupIds:
              - 00gjitX9HqABSoqTB0g3
    group-rule-example:
      summary: Group rule example
      description: Example of a group rule
      value:
        type: group_rule
        id: 0pr3f7zMZZHPgUoWO0g4
        status: INACTIVE
        name: Engineering group rule
        created: '2016-12-01T14:40:04.000Z'
        lastUpdated: '2016-12-01T14:40:04.000Z'
        conditions:
          people:
            users:
              exclude:
                - 00u22w79JPMEeeuLr0g4
            groups:
              exclude: []
          expression:
            value: user.role=="Engineer"
            type: urn:okta:expression:1.0
        actions:
          assignUserToGroups:
            groupIds:
              - 00gjitX9HqABSoqTB0g3
    list-apps-example:
      summary: List apps example
      description: List all apps example
      value:
        - id: 0oafwvZDWJKVLDCUWUAC
          name: template_basic_auth
          label: Sample Basic Auth App
          status: ACTIVE
          lastUpdated: '2013-09-30T00:56:52.000Z'
          created: '2013-09-30T00:56:52.000Z'
          accessibility:
            selfService: false
            errorRedirectUrl: null
          visibility:
            autoSubmitToolbar: false
            hide:
              iOS: false
              web: false
            appLinks:
              login: true
          features: []
          signOnMode: BASIC_AUTH
          credentials:
            scheme: EDIT_USERNAME_AND_PASSWORD
            userNameTemplate:
              template: ${source.login}
              type: BUILT_IN
          settings:
            app:
              url: https://example.com/login.html
              authURL: https://example.com/auth.html
          _links:
            appLinks:
              - href: >-
                  https://{yourOktaDomain}/home/template_basic_auth/0oafwvZDWJKVLDCUWUAC/1438
                name: login
                type: text/html
            users:
              href: https://{yourOktaDomain}/api/v1/apps/0oafwvZDWJKVLDCUWUAC/users
            deactivate:
              href: >-
                https://{yourOktaDomain}/api/v1/apps/0oafwvZDWJKVLDCUWUAC/lifecycle/deactivate
            groups:
              href: https://{yourOktaDomain}/api/v1/apps/0oafwvZDWJKVLDCUWUAC/groups
    ListsOwnerOneResponse:
      summary: Lists a response with one owner
      value:
        - id: 00g1gae1k0znUcLuU0h8
          type: GROUP
          resolved: true
          originId: 'null'
          originType: OKTA_DIRECTORY
          displayName: Product & Engineering
          lastUpdated: '2023-03-29 18:18:37.0'
    ListsOwnersMultipleResponse:
      summary: Lists a response with multiple owners
      value:
        - id: 00u1cmbqjkkmFXeqb0h8
          type: USER
          resolved: true
          originId: 'null'
          originType: OKTA_DIRECTORY
          displayName: Mabel Mora
          lastUpdated: '2023-03-29T18:30:58.000Z'
        - id: 00u1cmc52x5B86cnZ0h8
          type: USER
          resolved: true
          originId: 'null'
          originType: OKTA_DIRECTORY
          displayName: Cinda Canning
          lastUpdated: '2023-03-29T18:30:55.000Z'
    AssignGroupOwnerRequest:
      summary: Assign a group owner request example
      value:
        id: 00u1cmc03xjzePoWD0h8
        type: USER
    AssignGroupOwnerResponse:
      summary: Assign a group owner response example
      value:
        id: 00u1cmc03xjzePoWD0h8
        type: USER
        resolved: true
        originId: null
        originType: OKTA_DIRECTORY
        displayName: Oliver Putnam
        lastUpdated: Wed Mar 29 18:34:31 UTC 2023
    StandardRolesListResponseGroup:
      value:
        - id: IFIFAX2BIRGUSTQ
          label: Application Administrator
          type: APP_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: GROUP
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
    CustomRolesListResponseGroup:
      value:
        - id: irb1q92TFAHzySt3x0g4
          role: cr0Yq6IJxGIr0ouum0g3
          label: UserCreatorRole
          type: CUSTOM
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: GROUP
          resource-set: iamoJDFKaJxGIr0oamd9g
          _links:
            assignee:
              href": https://{yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK
            resource-set:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
            member:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members/irb1qe6PGuMc7Oh8N0g4
            role:
              href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
            permissions:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/permission-sets/cr0Yq6IJxGIr0ouum0g3/permissions
    IAMStandardRolesListResponseGroup:
      value:
        - id: irb5e92YgBazyyQ3x1q5
          role: ACCESS_CERTIFICATIONS_ADMIN
          label: Access Certifications Administrator
          type: ACCESS_CERTIFICATIONS_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: Group
          resource-set: ACCESS_CERTIFICATIONS_IAM_POLICY
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/groups/00g1emaKYZTWRYYRRTSK
            resource-set:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY
            member:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY/bindings/ACCESS_CERTIFICATIONS_ADMIN/members/irb1qe6PGuMc7Oh8N0g4
            role:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/roles/ACCESS_CERTIFICATIONS_ADMIN
            permissions:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/permission-sets/OKTA_IAM_TEST_DELIVERED_ROLE/permissions
    CreateStandardRoleAssignmentResponseGroup:
      value:
        id: grasraHPx7i79ajaJ0g3
        label: Organization Administrator
        type: ORG_ADMIN
        status: ACTIVE
        created: '2019-02-27T14:56:55.000Z'
        lastUpdated: '2019-02-27T14:56:55.000Z'
        assignmentType: GROUP
        _links:
          assignee:
            href: https://{yourOktaDomain}/api/v1/groups/00gsr2IepS8YhHRFf0g3
    CreateCustomRoleResponseGroup:
      value:
        id: irb1q92TFAHzySt3x0g4
        role: cr0Yq6IJxGIr0ouum0g3
        label: UserCreatorRole
        type: CUSTOM
        status: ACTIVE
        created: '2019-02-06T16:20:57.000Z'
        lastUpdated: '2019-02-06T16:20:57.000Z'
        assignmentType: GROUP
        resource-set: iamoJDFKaJxGIr0oamd9g
        _links:
          assignee:
            href": https://{yourOktaDomain}/api/v1/groups/00gsr2IepS8YhHRFf0g3
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          permissions:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions
    CreateIAMStandardRoleResponseGroup:
      value:
        id: irb1q92TFAHzySt3x0g4
        role: ACCESS_REQUESTS_ADMIN
        label: Access Requests Administrator
        type: ACCESS_REQUESTS_ADMIN
        status: ACTIVE
        created: '2019-02-06T16:20:57.000Z'
        lastUpdated: '2019-02-06T16:20:57.000Z'
        assignmentType: GROUP
        resource-set: ACCESS_CERTIFICATIONS_IAM_POLICY
        _links:
          assignee:
            href: https://{yourOktaDomain}/api/v1/groups/00gsr2IepS8YhHRFf0g3
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/ACCESS_REQUESTS_ADMIN
          permissions:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/ACCESS_REQUESTS_ADMIN/permissions
          member:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY/bindings/ACCESS_REQUESTS_ADMIN/members/irb4jlomnnDBuBDyJ0g7
    ListUsersResponse:
      summary: List all users
      value:
        - id: 00u118oQYT4TBTemp0g4
          status: ACTIVE
          created: '2022-04-04T15:56:05.000Z'
          activated: null
          statusChanged: null
          lastLogin: '2022-05-04T19:50:52.000Z'
          lastUpdated: '2022-05-05T18:15:44.000Z'
          passwordChanged: '2022-04-04T16:00:22.000Z'
          type:
            id: oty1162QAr8hJjTaq0g4
          profile:
            firstName: Alice
            lastName: Smith
            mobilePhone: null
            secondEmail: null
            login: alice.smith@example.com
            email: alice.smith@example.com
          credentials:
            password: {}
            provider:
              type: OKTA
              name: OKTA
          _links:
            self:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    groups:
      id: okta.groups.groups
      name: groups
      title: Groups
      methods:
        list_groups:
          operation:
            $ref: '#/paths/~1api~1v1~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/groups/methods/list_groups'
          - $ref: '#/components/x-stackQL-resources/groups/methods/get_group'
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/add_group'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete_group'
        replace:
          - $ref: '#/components/x-stackQL-resources/groups/methods/replace_group'
    rules:
      id: okta.groups.rules
      name: rules
      title: Rules
      methods:
        list_group_rules:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1rules/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_group_rule:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1rules/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_group_rule:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1rules~1{groupRuleId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_group_rule:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1rules~1{groupRuleId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_group_rule:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1rules~1{groupRuleId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '202'
        activate_group_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1rules~1{groupRuleId}~1lifecycle~1activate/post
          response:
            mediaType: ''
            openAPIDocKey: '204'
        deactivate_group_rule:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1rules~1{groupRuleId}~1lifecycle~1deactivate/post
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/rules/methods/list_group_rules'
          - $ref: '#/components/x-stackQL-resources/rules/methods/get_group_rule'
        insert:
          - $ref: '#/components/x-stackQL-resources/rules/methods/create_group_rule'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/rules/methods/delete_group_rule'
        replace:
          - $ref: '#/components/x-stackQL-resources/rules/methods/replace_group_rule'
    assigned_apps:
      id: okta.groups.assigned_apps
      name: assigned_apps
      title: Assigned Apps
      methods:
        list_assigned_applications_for_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1apps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/assigned_apps/methods/list_assigned_applications_for_group
        insert: []
        update: []
        delete: []
        replace: []
    owners:
      id: okta.groups.owners
      name: owners
      title: Owners
      methods:
        list_group_owners:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1owners/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_group_owner:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1owners/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_group_owner:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1owners~1{ownerId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/owners/methods/list_group_owners'
        insert:
          - $ref: '#/components/x-stackQL-resources/owners/methods/assign_group_owner'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/owners/methods/delete_group_owner'
        replace: []
    assigned_roles:
      id: okta.groups.assigned_roles
      name: assigned_roles
      title: Assigned Roles
      methods:
        list_group_assigned_roles:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_role_to_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1roles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_group_assigned_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unassign_role_from_group:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/assigned_roles/methods/list_group_assigned_roles
          - $ref: >-
              #/components/x-stackQL-resources/assigned_roles/methods/get_group_assigned_role
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/assigned_roles/methods/assign_role_to_group
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/assigned_roles/methods/unassign_role_from_group
        replace: []
    app_targets:
      id: okta.groups.app_targets
      name: app_targets
      title: App Targets
      methods:
        list_application_targets_for_application_administrator_role_for_group:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_app_target_to_admin_role_for_group:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}/put
          response:
            mediaType: ''
            openAPIDocKey: '200'
        unassign_app_target_to_admin_role_for_group:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/app_targets/methods/list_application_targets_for_application_administrator_role_for_group
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/app_targets/methods/unassign_app_target_to_admin_role_for_group
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/app_targets/methods/assign_app_target_to_admin_role_for_group
    app_instance_targets:
      id: okta.groups.app_instance_targets
      name: app_instance_targets
      title: App Instance Targets
      methods:
        assign_app_instance_target_to_app_admin_role_for_group:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}~1{appId}/put
          response:
            mediaType: ''
            openAPIDocKey: '204'
        unassign_app_instance_target_to_app_admin_role_for_group:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}~1{appId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/app_instance_targets/methods/unassign_app_instance_target_to_app_admin_role_for_group
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/app_instance_targets/methods/assign_app_instance_target_to_app_admin_role_for_group
    group_targets:
      id: okta.groups.group_targets
      name: group_targets
      title: Group Targets
      methods:
        list_group_targets_for_group_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1groups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_group_target_to_group_admin_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1groups~1{targetGroupId}/put
          response:
            mediaType: ''
            openAPIDocKey: '204'
        unassign_group_target_from_group_admin_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1groups~1{groupId}~1roles~1{roleAssignmentId}~1targets~1groups~1{targetGroupId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/group_targets/methods/list_group_targets_for_group_role
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/group_targets/methods/unassign_group_target_from_group_admin_role
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/group_targets/methods/assign_group_target_to_group_admin_role
    users:
      id: okta.groups.users
      name: users
      title: Users
      methods:
        list_group_users:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_user_to_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1users~1{userId}/put'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        unassign_user_from_group:
          operation:
            $ref: '#/paths/~1api~1v1~1groups~1{groupId}~1users~1{userId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/list_group_users'
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/users/methods/unassign_user_from_group
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/users/methods/assign_user_to_group
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
