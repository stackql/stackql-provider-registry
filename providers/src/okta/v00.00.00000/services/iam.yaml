openapi: 3.0.3
info:
  title: iam API
  description: okta iam API
  version: 5.1.0
paths:
  /api/v1/iam/assignees/users:
    get:
      summary: List all users with role assignments
      description: Lists all users with role assignments
      operationId: listUsersWithRoleAssignments
      parameters:
        - name: after
          description: Specifies the pagination cursor for the next page of targets
          in: query
          schema:
            type: string
          required: false
        - name: limit
          in: query
          description: Specifies the number of results returned. Defaults to `100`.
          schema:
            type: integer
            format: int32
            default: 100
          required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleAssignedUsers'
              examples:
                User List:
                  $ref: '#/components/examples/RoleAssignedUsersResponseExample'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/governance/bundles:
    get:
      summary: List all governance bundles for the Admin Console
      description: Lists all Governance Bundles for the Admin Console in your org
      operationId: listGovernanceBundles
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovernanceBundlesResponse'
              examples:
                GovernanceBundlesResponse:
                  $ref: '#/components/examples/GovernanceBundlesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - GovernanceBundle
    post:
      summary: Create a governance bundle for the Admin Console in RAMP
      description: Creates a Governance Bundle for the Admin Console in RAMP
      operationId: createGovernanceBundle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GovernanceBundleCreateRequest'
            examples:
              GovernanceBundleCreateRequestStandardRole:
                $ref: >-
                  #/components/examples/GovernanceBundleCreateRequestStandardRole
              GovernanceBundleCreateRequestScopedStandardRole:
                $ref: >-
                  #/components/examples/GovernanceBundleCreateRequestScopedStandardRole
              GovernanceBundleCreateRequestCustomRole:
                $ref: '#/components/examples/GovernanceBundleCreateRequestCustomRole'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovernanceBundle'
              examples:
                createGovernanceBundleResponse:
                  $ref: '#/components/examples/GovernanceBundle'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - GovernanceBundle
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: false
      SKUs: []
  /api/v1/iam/governance/bundles/{bundleId}:
    get:
      summary: Retrieve a governance bundle from RAMP
      description: Retrieves a Governance Bundle from RAMP
      operationId: getGovernanceBundle
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovernanceBundle'
              examples:
                GovernanceBundle:
                  $ref: '#/components/examples/GovernanceBundle'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - GovernanceBundle
    put:
      summary: Replace a governance bundle in RAMP
      description: Replaces a Governance Bundle in RAMP
      operationId: replaceGovernanceBundle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GovernanceBundleUpdateRequest'
            examples:
              GovernanceBundleUpdateRequestStandardRole:
                $ref: >-
                  #/components/examples/GovernanceBundleUpdateRequestStandardRole
              GovernanceBundleUpdateRequestScopedStandardRole:
                $ref: >-
                  #/components/examples/GovernanceBundleUpdateRequestScopedStandardRole
              GovernanceBundleUpdateRequestCustomRole:
                $ref: '#/components/examples/GovernanceBundleUpdateRequestCustomRole'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovernanceBundle'
              examples:
                GovernanceBundle:
                  $ref: '#/components/examples/GovernanceBundle'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - GovernanceBundle
    delete:
      summary: Delete a governance bundle from RAMP
      description: Deletes a Governance Bundle from RAMP
      operationId: deleteGovernanceBundle
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - GovernanceBundle
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: false
      SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathBundleId'
  /api/v1/iam/governance/bundles/{bundleId}/entitlements:
    get:
      summary: List all entitlements for a governance bundle
      description: Lists all Entitlements specific to a Governance Bundle
      operationId: listBundleEntitlements
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleEntitlementsResponse'
              examples:
                BundleEntitlementsResponse:
                  $ref: '#/components/examples/BundleEntitlementsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - GovernanceBundle
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: false
      SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathBundleId'
  /api/v1/iam/governance/bundles/{bundleId}/entitlements/{entitlementId}/values:
    get:
      summary: List all entitlement values for a bundle entitlement
      description: Lists all Entitlement Values specific to a Bundle Entitlement
      operationId: listBundleEntitlementValues
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementValuesResponse'
              examples:
                EntitlementValuesResponse:
                  $ref: '#/components/examples/EntitlementValuesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - GovernanceBundle
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: false
      SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathBundleId'
      - $ref: '#/components/parameters/pathEntitlementId'
  /api/v1/iam/governance/optIn:
    get:
      summary: Retrieve the opt-in status from RAMP
      description: Retrieves the opt-in status of the Admin Console from RAMP
      operationId: getOptInStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptInStatusResponse'
              examples:
                OptInStatusResponse:
                  $ref: '#/components/examples/OptInStatusResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - GovernanceBundle
    post:
      summary: Opt in the Admin Console to RAMP
      description: Opts in the Admin Console to RAMP
      operationId: optIn
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptInStatusResponse'
              examples:
                OptInStatusResponse:
                  $ref: '#/components/examples/OptInStatusResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - GovernanceBundle
    x-okta-lifecycle:
      lifecycle: GA
      isGenerallyAvailable: false
      SKUs: []
  /api/v1/iam/governance/optOut:
    post:
      summary: Opt out the Admin Console from RAMP
      description: Opts out the Admin Console from RAMP
      operationId: optOut
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptInStatusResponse'
              examples:
                OptOutStatusResponse:
                  $ref: '#/components/examples/OptOutStatusResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - GovernanceBundle
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/iam/resource-sets:
    get:
      summary: List all resource sets
      description: Lists all resource sets with pagination support
      operationId: listResourceSets
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSets'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleCResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a resource set
      description: >-
        Creates a new resource set. See [Supported
        resources](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#supported-resources).


        > **Note:** The maximum number of `resources` allowed in a resource set
        object is 1000. Resources are identified by either an Okta Resource Name
        (ORN) or by a REST URL format. See [Okta Resource
        Name](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#okta-resource-name-orn).
      operationId: createResourceSet
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceSetRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}:
    get:
      summary: Retrieve a resource set
      description: Retrieves a resource set by `resourceSetIdOrLabel`
      operationId: getResourceSet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleCResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a resource set
      description: Replaces the label and description of a resource set
      operationId: replaceResourceSet
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSet'
            examples:
              Example Request:
                $ref: '#/components/examples/ReplaceResourceSetRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a resource set
      description: Deletes a resource set by `resourceSetIdOrLabel`
      operationId: deleteResourceSet
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSet
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}/bindings:
    get:
      summary: List all role resource set bindings
      description: >-
        Lists all bindings for a resource set with pagination support.


        The returned `roles` array contains the roles for each binding
        associated with the specified resource set. If there are more than 100
        bindings for the specified resource set, `links.next` provides the
        resource with pagination for the next list of bindings.
      operationId: listBindings
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindings'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleDResourceSetBinding
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a role resource set binding
      description: >-
        Creates a binding for the resource set, custom role, and members (users
        or groups)


        > **Note:** If you use a custom role with permissions that don't apply
        to the resources in the resource set, it doesn't affect the admin role.
        For example,
         the `okta.users.userprofile.manage` permission gives the admin no privileges if it's granted to a resource set that only includes `https://{yourOktaDomain}/api/v1/groups/{targetGroupId}`
         resources. If you want the admin to be able to manage the users within the group, the resource set must include the corresponding `https://{yourOktaDomain}/api/v1/groups/{targetGroupId}/users` resource.
      operationId: createResourceSetBinding
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetBindingCreateRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetBindingCreateRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingEditResponse'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleDResourceSetBinding
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}/bindings/{roleIdOrLabel}:
    get:
      summary: Retrieve a role resource set binding
      description: >-
        Retrieves the binding of a role (identified by `roleIdOrLabel`) for a
        resource set (identified by `resourceSetIdOrLabel`)
      operationId: getBinding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingResponse'
              examples:
                Example Response:
                  $ref: >-
                    #/components/examples/ResourceSetBindingResponseWithIdExample
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleDResourceSetBinding
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a role resource set binding
      description: >-
        Deletes a binding of a role (identified by `roleIdOrLabel`) and a
        resource set (identified by `resourceSetIdOrLabel`)
      operationId: deleteBinding
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleDResourceSetBinding
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}/bindings/{roleIdOrLabel}/members:
    get:
      summary: List all role resource set binding members
      description: Lists all members of a role resource set binding with pagination support
      operationId: listMembersOfBinding
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingMembers'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingMembersResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleDResourceSetBindingMember
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    patch:
      summary: Add more role resource set binding members
      description: Adds more members to a role resource set binding
      operationId: addMembersToBinding
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetBindingAddMembersRequest'
            examples:
              Example Request:
                $ref: >-
                  #/components/examples/ResourceSetBindingAddMembersRequestExample
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingEditResponse'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingResponseExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleDResourceSetBindingMember
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}/bindings/{roleIdOrLabel}/members/{memberId}:
    get:
      summary: Retrieve a role resource set binding member
      description: >-
        Retrieves a member (identified by `memberId`) that belongs to a role
        resource set binding
      operationId: getMemberOfBinding
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetBindingMember'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetBindingMemberResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleDResourceSetBindingMember
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a role resource set binding member
      description: >-
        Unassigns a member (identified by `memberId`) from a role resource set
        binding
      operationId: unassignMemberFromBinding
      x-codegen-request-body-name: instance
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleDResourceSetBindingMember
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
      - $ref: '#/components/parameters/pathMemberId'
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}/resources:
    get:
      summary: List all resource set resources
      description: Lists all resources for the resource set
      operationId: listResourceSetResources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetResources'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResourcesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleCResourceSetResource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      summary: Add a resource set resource with conditions
      description: Adds a resource with conditions for a resource set
      operationId: addResourceSetResource
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetResourcePostRequest'
            examples:
              ConditionExample:
                $ref: '#/components/examples/ResourceSetResourcePostRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetResource'
              examples:
                ConditionExample:
                  $ref: '#/components/examples/ResourceSetResourceResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSetResource
    patch:
      summary: Add more resources to a resource set
      description: Adds more resources to a resource set
      operationId: addResourceSetResources
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetResourcePatchRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetResourcePatchRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSet'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSetResource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
  /api/v1/iam/resource-sets/{resourceSetIdOrLabel}/resources/{resourceId}:
    get:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      summary: Retrieve a resource set resource
      description: Retrieves a resource identified by `resourceId` in a resource set
      operationId: getResourceSetResource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetResource'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResourceResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleCResourceSetResource
    put:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      summary: Replace the resource set resource conditions
      description: >-
        Replaces the conditions of a resource identified by `resourceId` in a
        resource set
      operationId: replaceResourceSetResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceSetResourcePutRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ResourceSetResourcePutRequestExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSetResource'
              examples:
                Example Response:
                  $ref: '#/components/examples/ResourceSetResourceResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSetResource
    delete:
      summary: Delete a resource set resource
      description: Deletes a resource (identified by `resourceId`) from a resource set
      operationId: deleteResourceSetResource
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleCResourceSetResource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathResourceSetIdOrLabel'
      - $ref: '#/components/parameters/pathResourceId'
  /api/v1/iam/roles:
    get:
      summary: List all custom roles
      description: Lists all custom roles with pagination support
      operationId: listRoles
      parameters:
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRoles'
              examples:
                Example Response:
                  $ref: '#/components/examples/RolesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleECustom
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a custom role
      description: Creates a custom role
      operationId: createRole
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIamRoleRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/RoleRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRole'
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleECustom
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/iam/roles/{roleIdOrLabel}:
    get:
      summary: Retrieve a role
      description: Retrieves a role by `roleIdOrLabel`
      operationId: getRole
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRole'
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleECustom
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a custom role
      description: Replaces the label and description for a custom role by `roleIdOrLabel`
      operationId: replaceRole
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIamRoleRequest'
            examples:
              Example Request:
                $ref: '#/components/examples/ReplaceRoleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IamRole'
              examples:
                Example Response:
                  $ref: '#/components/examples/RoleResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleECustom
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a custom role
      description: Deletes a custom role by `roleIdOrLabel`
      operationId: deleteRole
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleECustom
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
  /api/v1/iam/roles/{roleIdOrLabel}/permissions:
    get:
      summary: List all custom role permissions
      description: Lists all permissions for a custom role by `roleIdOrLabel`
      operationId: listRolePermissions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permissions'
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleECustomPermission
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
  /api/v1/iam/roles/{roleIdOrLabel}/permissions/{permissionType}:
    get:
      summary: Retrieve a custom role permission
      description: >-
        Retrieves a permission (identified by `permissionType`) for a custom
        role
      operationId: getRolePermission
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
              examples:
                Example Response without conditions:
                  $ref: '#/components/examples/PermissionResponse'
                Example Response with conditions:
                  $ref: '#/components/examples/PermissionResponseWithConditions'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleECustomPermission
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a custom role permission
      description: Creates a permission (specified by `permissionType`) for a custom role
      operationId: createRolePermission
      x-codegen-request-body-name: instance
      requestBody:
        x-okta-lifecycle:
          lifecycle: GA
          isGenerallyAvailable: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateIamRolePermissionRequest'
            examples:
              Example Request with include:
                $ref: >-
                  #/components/examples/CreateUpdateIamRolePermissionRequestExampleWithInclude
              Example Request with exclude:
                $ref: >-
                  #/components/examples/CreateUpdateIamRolePermissionRequestExampleWithExclude
        required: false
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleECustomPermission
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      summary: Replace a custom role permission
      description: Replaces a permission (specified by `permissionType`) for a custom role
      operationId: replaceRolePermission
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateIamRolePermissionRequest'
            examples:
              Example Request with include:
                $ref: >-
                  #/components/examples/CreateUpdateIamRolePermissionRequestExampleWithInclude
              Example Request with exclude:
                $ref: >-
                  #/components/examples/CreateUpdateIamRolePermissionRequestExampleWithExclude
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
              examples:
                Example Response:
                  $ref: '#/components/examples/PermissionResponseWithConditions'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleECustomPermission
    delete:
      summary: Delete a custom role permission
      description: Deletes a permission (identified by `permissionType`) from a custom role
      operationId: deleteRolePermission
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleECustomPermission
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleIdOrLabel'
      - $ref: '#/components/parameters/pathPermissionType'
components:
  schemas:
    RoleAssignedUsers:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/RoleAssignedUser'
        _links:
          $ref: '#/components/schemas/LinksNextForRoleAssignments'
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    GovernanceBundlesResponse:
      type: object
      properties:
        bundles:
          type: array
          items:
            $ref: '#/components/schemas/GovernanceBundle'
        _links:
          anyOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksNext'
    GovernanceBundleCreateRequest:
      type: object
      properties:
        description:
          type: string
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/IAMBundleEntitlement'
        name:
          type: string
    GovernanceBundle:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        orn:
          type: string
        status:
          type: string
        _links:
          allOf:
            - properties:
                entitlements:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    GovernanceBundleUpdateRequest:
      type: object
      properties:
        description:
          type: string
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/IAMBundleEntitlement'
        name:
          type: string
    BundleEntitlementsResponse:
      type: object
      properties:
        entitlements:
          type: array
          items:
            $ref: '#/components/schemas/BundleEntitlement'
        _links:
          type: object
          description: >-
            Specifies link relations (see [Web
            Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using
            the [JSON Hypertext Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          readOnly: true
          properties:
            next:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: Link to the next resource
            self:
              $ref: '#/components/schemas/HrefObjectSelfLink'
            bundle:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: Link to the bundle resource
    EntitlementValuesResponse:
      type: object
      properties:
        entitlementValues:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementValue'
        _links:
          anyOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksNext'
            - properties:
                bundle:
                  $ref: '#/components/schemas/HrefObject'
                entitlements:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    OptInStatusResponse:
      type: object
      properties:
        optInStatus:
          type: string
          enum:
            - OPTING_IN
            - OPTED_IN
            - OPTING_OUT
            - OPTED_OUT
        _links:
          allOf:
            - properties:
                optInStatus:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    ResourceSets:
      type: object
      properties:
        resource-sets:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSet'
        _links:
          $ref: '#/components/schemas/LinksNext'
    CreateResourceSetRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the resource set
        label:
          type: string
          description: Unique name for the resource set
        resources:
          type: array
          description: >-
            The endpoint (URL) that references all resource objects included in
            the resource set. Resources are identified by either an Okta
            Resource Name (ORN) or by a REST URL format. See [Okta Resource
            Name](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#okta-resource-name-orn).
          maximum: 1000
          items:
            type: string
      required:
        - description
        - label
        - resources
    ResourceSet:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        description:
          type: string
          description: Description of the resource set
        id:
          type: string
          description: Unique ID for the resource set object
          readOnly: true
        label:
          type: string
          description: Unique label for the resource set
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                resources:
                  $ref: '#/components/schemas/HrefObjectResourceSetResourcesLink'
                bindings:
                  $ref: '#/components/schemas/HrefObjectBindingsLink'
              type: object
    ResourceSetBindings:
      type: object
      properties:
        roles:
          type: array
          description: >-
            Roles associated with the resource set binding. If there are more
            than 100 bindings for the specified resource set, then the
            `_links.next` resource is returned with the next list of bindings.
          items:
            $ref: '#/components/schemas/ResourceSetBindingRole'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                next:
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                    - description: >-
                        Link to the next list of bindings for the specified
                        resource set
                resource-set:
                  $ref: '#/components/schemas/HrefObjectResourceSetLink'
              type: object
    ResourceSetBindingCreateRequest:
      type: object
      properties:
        members:
          type: array
          description: URLs to user and/or group instances that are assigned to the role
          items:
            type: string
        role:
          type: string
          description: Unique key for the role
    ResourceSetBindingEditResponse:
      type: object
      properties:
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                resource-set:
                  $ref: '#/components/schemas/HrefObjectResourceSetLink'
                bindings:
                  $ref: '#/components/schemas/HrefObjectBindingsLink'
              type: object
    ResourceSetBindingResponse:
      type: object
      properties:
        id:
          type: string
          description: '`id` of the role resource set binding'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                resource-set:
                  $ref: '#/components/schemas/HrefObjectResourceSetLink'
                members:
                  $ref: '#/components/schemas/HrefObjectMembersLink'
              type: object
    ResourceSetBindingMembers:
      type: object
      properties:
        members:
          type: array
          description: >-
            The members of the role resource set binding. If there are more than
            100 members for the binding, then the `_links.next` resource is
            returned with the next list of members.
          items:
            $ref: '#/components/schemas/ResourceSetBindingMember'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                next:
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                    - description: >-
                        Link to the next list of binding members for the
                        specified role and resource set
                binding:
                  $ref: '#/components/schemas/HrefObjectBindingLink'
              type: object
    ResourceSetBindingAddMembersRequest:
      type: object
      properties:
        additions:
          type: array
          description: A list of member resources to add to the role resource set binding
          items:
            type: string
            description: User or group resources
            example: https://{yourOktaDomain}/api/v1/groups/{groupId}
    ResourceSetBindingMember:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the member was created
          readOnly: true
        id:
          type: string
          description: Role resource set binding member ID
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the member was last updated
          readOnly: true
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ResourceSetResources:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceSetResource'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksNext'
            - properties:
                resource-set:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    ResourceSetResourcePostRequest:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/ResourceConditions'
        resourceOrnOrUrl:
          type: string
          description: Resource in ORN or REST API URL format
      required:
        - resourceOrnOrUrl
        - conditions
    ResourceSetResource:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/ResourceConditions'
        created:
          type: string
          format: date-time
          description: Timestamp when the resource set resource object was created
          readOnly: true
        id:
          type: string
          description: Unique ID of the resource set resource object
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when this object was last updated
          readOnly: true
        orn:
          type: string
          description: The Okta Resource Name (ORN) of the resource
        _links:
          description: Related discoverable resources
          readOnly: true
          properties:
            self:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The REST API URL of the related resource
            resource:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: Link to this resource set resource object (self)
            groups:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: >-
                    If applicable, the REST API URL of the related groups
                    resource
            users:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: >-
                    If applicable, the REST API URL of the related users
                    resource
          type: object
    ResourceSetResourcePatchRequest:
      type: object
      properties:
        additions:
          type: array
          description: A list of resources to add to the resource set
          items:
            type: string
            description: Resource in ORN or REST API URL format
    ResourceSetResourcePutRequest:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/ResourceConditions'
    IamRoles:
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/IamRole'
        _links:
          $ref: '#/components/schemas/LinksNext'
    CreateIamRoleRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the role
        label:
          type: string
          description: Unique label for the role
        permissions:
          type: array
          description: >-
            Array of permissions that the role grants. See
            [Permissions](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/permissions).
      required:
        - label
        - description
        - permissions
    IamRole:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the role was created
          readOnly: true
        description:
          type: string
          description: Description of the role
        id:
          type: string
          description: Unique key for the role
          readOnly: true
        label:
          type: string
          description: Unique label for the role
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                permissions:
                  $ref: '#/components/schemas/HrefObject'
              type: object
      required:
        - label
        - description
    UpdateIamRoleRequest:
      type: object
      properties:
        description:
          type: string
          description: Description of the role
        label:
          type: string
          description: Unique label for the role
      required:
        - label
        - description
    Permissions:
      description: Permissions assigned to the role
      type: object
      properties:
        permissions:
          type: array
          description: >-
            Array of permissions assigned to the role. See
            [Permissions](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/permissions).
          items:
            $ref: '#/components/schemas/Permission'
    Permission:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/PermissionConditions'
        created:
          type: string
          format: date-time
          description: Timestamp when the permission was assigned
          readOnly: true
        label:
          type: string
          description: >-
            The assigned Okta
            [permission](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/permissions)
          readOnly: true
          example: okta.users.read
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the permission was last updated
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                role:
                  $ref: '#/components/schemas/HrefObjectRoleLink'
              type: object
    CreateUpdateIamRolePermissionRequest:
      type: object
      properties:
        conditions:
          $ref: '#/components/schemas/PermissionConditions'
    RoleAssignedUser:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: The ID of the user
        orn:
          type: string
          readOnly: true
          description: ORN representing the assignee
        _links:
          $ref: '#/components/schemas/LinksSelfAndRoles'
    LinksNextForRoleAssignments:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification.
      type: object
      properties:
        next:
          allOf:
            - $ref: '#/components/schemas/HrefObject'
            - description: >-
                The next page of results if [pagination](#pagination) is
                required
      readOnly: true
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    LinksNext:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
        current status of an application using the [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. Use the `LinksNext` object for dynamic discovery of
        related resources and lifecycle operations.
      type: object
      properties:
        next:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
    IAMBundleEntitlement:
      type: object
      properties:
        resourceSets:
          type: array
          items:
            type: string
        role:
          type: string
        targets:
          type: array
          items:
            type: string
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    BundleEntitlement:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
        role:
          type: string
        _links:
          allOf:
            - properties:
                values:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    EntitlementValue:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
        _links:
          type: object
          description: >-
            Specifies link relations (see [Web
            Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using
            the [JSON Hypertext Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          readOnly: true
          properties:
            group:
              $ref: '#/components/schemas/HrefObjectGroupLink'
            app:
              $ref: '#/components/schemas/HrefObjectAppLink'
            resource-set:
              $ref: '#/components/schemas/HrefObjectResourceSetLink'
    HrefObjectResourceSetResourcesLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to resource set resources
    HrefObjectBindingsLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the bindings resource
    ResourceSetBindingRole:
      type: object
      properties:
        id:
          type: string
          description: '`id` of the role'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                members:
                  $ref: '#/components/schemas/HrefObjectMembersLink'
              type: object
    HrefObjectResourceSetLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource set resource
    HrefObjectMembersLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the members resource
    HrefObjectBindingLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the binding resource
    ResourceConditions:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      description: Conditions for further restricting a resource.
      nullable: false
      type: object
      properties:
        Exclude:
          type: object
          description: Specific resources to exclude
          properties:
            okta:ORN:
              type: array
              description: List of specific resources to exclude in ORN format
              items:
                type: string
    PermissionConditions:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      description: >-
        Conditions for further restricting a permission. See [Permission
        conditions](https://help.okta.com/okta_help.htm?type=oie&id=ext-permission-conditions).
      nullable: true
      type: object
      properties:
        exclude:
          type: object
          description: Exclude attributes with specific values for the permission
          additionalProperties:
            type: object
            properties: {}
          nullable: true
        include:
          type: object
          description: Include attributes with specific values for the permission
          additionalProperties:
            type: object
            properties: {}
          nullable: true
    HrefObjectRoleLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the role resource
    LinksSelfAndRoles:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            roles:
              $ref: '#/components/schemas/HrefObjectRoleLink'
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    HrefObjectGroupLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the group resource
    HrefObjectAppLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the app resource
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    pathBundleId:
      name: bundleId
      in: path
      schema:
        type: string
        example: enbllojq9J9J105DL1d6
      required: true
      description: The `id` of a bundle
    pathEntitlementId:
      name: entitlementId
      in: path
      schema:
        type: string
        example: ent4rg7fltWSgrlDT8g6
      required: true
      description: The `id` of a bundle entitlement
    pathResourceSetIdOrLabel:
      name: resourceSetIdOrLabel
      in: path
      schema:
        type: string
        example: iamoJDFKaJxGIr0oamd9g
      required: true
      description: '`id` or `label` of the resource set'
    pathRoleIdOrLabel:
      name: roleIdOrLabel
      in: path
      schema:
        type: string
        example: cr0Yq6IJxGIr0ouum0g3
      required: true
      description: '`id` or `label` of the role'
    pathMemberId:
      name: memberId
      in: path
      schema:
        type: string
        example: irb1qe6PGuMc7Oh8N0g4
      required: true
      description: '`id` of the member'
    pathResourceId:
      name: resourceId
      in: path
      schema:
        type: string
        example: ire106sQKoHoXXsAe0g4
      required: true
      description: '`id` of the resource'
    pathPermissionType:
      name: permissionType
      in: path
      schema:
        type: string
        example: okta.users.manage
      required: true
      description: An Okta [permission](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/permissions)
  examples:
    RoleAssignedUsersResponseExample:
      value:
        value:
          - id: 00u118oQYT4TBGuay0g4
            orn: orn:okta:00o5rb5mt2H3d1TJd0h7:users:00u118oQYT4TBGuay0g4
            _links:
              self:
                href: >-
                  http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
              roles:
                href: >-
                  http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4/roles
        _links:
          next:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/assignees/users?after=00u118oQYT4TBGuay0g4&limit=1
    GovernanceBundlesResponse:
      summary: List of governance bundles
      value:
        bundles:
          - id: 0bbfxqCAJWWGELFTYAAA
            name: Group admin bundle
            description: Group bundle for administrative access
            status: ACTIVE
            orn: >-
              orn:okta:governance:00o5rb5mt2H3d1TJd0h7:bundles:0bbfxqCAJWWGELFTYAAA
            _links:
              entitlements: >-
                http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements
        _links:
          self:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles?limit=2&after=10
          next:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles?after=bundleId12
    GovernanceBundleCreateRequestStandardRole:
      summary: Create governance bundle with non-scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
    GovernanceBundleCreateRequestScopedStandardRole:
      summary: Create governance bundle with scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
          targets:
            - 00guaxWZ0AOa5NFAj0g3
    GovernanceBundleCreateRequestCustomRole:
      summary: Create governance bundle with custom role
      value:
        name: Custom admin bundle
        description: Custom bundle for administrative access
        entitlements:
          role: cr0WxyzJxGIr0ouum0g4
          resourceSets:
            - iamoJDFKaJxGIr0oamd9g
    GovernanceBundle:
      summary: Governance bundle
      value:
        id: 0bbfxqCAJWWGELFTYAAA
        name: Group admin bundle
        description: Group bundle for administrative access
        status: ACTIVE
        orn: orn:okta:governance:00o5rb5mt2H3d1TJd0h7:bundles:0bbfxqCAJWWGELFTYAAA
        _links:
          self: >-
            http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA
          entitlements: >-
            http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements
    GovernanceBundleUpdateRequestStandardRole:
      summary: Update governance bundle with non-scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
    GovernanceBundleUpdateRequestScopedStandardRole:
      summary: Update governance bundle with scoped standard role
      value:
        name: Group admin bundle
        description: Group bundle for administrative access
        entitlements:
          role: GROUP_MEMBERSHIP_ADMIN
          targets:
            - 00guaxWZ0AOa5NFAj0g3
    GovernanceBundleUpdateRequestCustomRole:
      summary: Update governance bundle with custom role
      value:
        name: Custom admin bundle
        description: Custom bundle for administrative access
        entitlements:
          role: cr0WxyzJxGIr0ouum0g4
          resourceSets:
            - iamoJDFKaJxGIr0oamd9g
    BundleEntitlementsResponse:
      summary: List of governance bundle entitlements
      value:
        entitlements:
          - id: espfxqCAJWWGELFTYASJ
            role: GROUP_MEMBERSHIP_ADMIN
            name: Group Membership Admin
            description: Perform all admin activities for groups in the org
            _links:
              values: >-
                http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements/espfxqCAJWWGELFTYASJ/values
        _links:
          self:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles?limit=2&after=10
          next:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles?after=bundleId12
          bundle:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA
    EntitlementValuesResponse:
      summary: List of bundle entitlement values
      value:
        entitlementValues:
          - id: entfxqCAJWWGELFTYAAA
            value: orn:okta:00o5rb5mt2H3d1TJd0h7:groups:00guaxWZ0AOa5NFAj0g3
            name: Restricted users group
            _links:
              group: >-
                http://your-subdomain.okta.com/api/v1/groups/00guaxWZ0AOa5NFAj0g3
        _links:
          self:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles?limit=2&after=10
          bundle:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA
          entitlements:
            href: >-
              http://your-subdomain.okta.com/api/v1/iam/governance/bundles/0bbfxqCAJWWGELFTYAAA/entitlements
    OptInStatusResponse:
      summary: Opt in response
      value:
        optInStatus: OPTING_IN
        _links:
          optInStatus:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/optIn
    OptOutStatusResponse:
      summary: Opt out response
      value:
        optInStatus: OPTING_OUT
        _links:
          optInStatus:
            href: http://your-subdomain.okta.com/api/v1/iam/governance/optIn
    ResourceSetsResponse:
      value:
        resource-sets:
          - id: iamoJDFKaJxGIr0oamd9g
            label: SF-IT-1
            description: First San Francisco IT Resource Set
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
              resources:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources
              bindings:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          - id: iamoJDFKaJxGIr0oamd0q
            label: SF-IT-2
            description: Second San Francisco IT Resource Set
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q
              resources:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/resources
              bindings:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd0q/bindings
        _links:
          next:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets?after=iamoJDFKaJxGIr0oamd0q
    ResourceSetRequest:
      value:
        label: SF-IT-People
        description: People in the IT department of San Francisco
        resources:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users
          - https://{yourOktaDomain}/api/v1/users
          - https://{yourOktaDomain}/api/v1/realms/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/realms
    ResourceSetResponse:
      value:
        id: iamoJDFKaJxGIr0oamd9g
        label: SF-IT-People
        description: People in the IT department of San Francisco
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
          resources:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources
          bindings:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ReplaceResourceSetRequest:
      value:
        label: SF-IT-People
        description: People in the IT department of San Francisco
    ResourceSetBindingsResponse:
      value:
        roles:
          - id: cr0WxyzJxGIr0ouum0g4
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0WxyzJxGIr0ouum0g4
              members:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0WxyzJxGIr0ouum0g4/members
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
          next:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings?after=cr0WxyzJxGIr0ouum0g4
    ResourceSetBindingCreateRequestExample:
      value:
        role: cr0Yq6IJxGIr0ouum0g3
        members:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
    ResourceSetBindingResponseExample:
      value:
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3
          bindings:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
    ResourceSetBindingResponseWithIdExample:
      value:
        id: cr0Yq6IJxGIr0ouum0g3
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3
          members:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
    ResourceSetBindingMembersResponse:
      value:
        members:
          - id: irb1qe6PGuMc7Oh8N0g4
            created: '2024-12-19T00:00:00.000Z'
            lastUpdated: '2024-12-19T00:00:00.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3
          - id: irb1q92TFAHzySt3x0g4
            created: '2024-12-19T00:00:00.000Z'
            lastUpdated: '2024-12-19T00:00:00.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members
          binding:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3
    ResourceSetBindingAddMembersRequestExample:
      value:
        additions:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/users/00u67DU2qNCjNZYO0g3
    ResourceSetBindingMemberResponse:
      value:
        id: irb1qe6PGuMc7Oh8N0g4
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/users/00uuk41Hjga5qGfQ30g3
    ResourceSetResourcesResponse:
      value:
        resources:
          - id: ire106sQKoHoXXsAe0g4
            orn: orn:{partition}:directory:{yourOrgId}:groups:00guaxWZ0AOa5NFAj0g3
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
              resource:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources/ire2snv2xSY7a4iSe0g1
          - id: ire106riDrTYl4qA70g4
            orn: >-
              orn:{partition}:directory:{yourOrgId}:groups:00gu67DU2qNCjNZYO0g3:contained_resources
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users
              resource:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources/ire2snv2xSY7a4iSe0g2
          - id: irezvo4AwE2ngpMw40g3
            orn: orn:{partition}:directory:{yourOrgId}:users
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/users
              users:
                href: https://{yourOktaDomain}/api/v1/users
          - id: ire2j4iDnxHhUFaZN0g4
            orn: orn:{partition}:directory:{yourOrgId}:groups
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/groups
              groups:
                href: https://{yourOktaDomain}/api/v1/groups
              resource:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources/ire2snv2xSY7a4iSe0g3
        _links:
          next:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources?after=irezvn1ZZxLSIBM2J0g3
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
    ResourceSetResourcePostRequestExample:
      summary: Resource set with conditions request
      value:
        resourceOrnOrUrl: https://{yourOktaDomain}/api/v1/apps
        conditions:
          Exclude:
            okta:ORN:
              - orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps:0oa1014FmyZ2H0oRY0g4
              - orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps:slack
    ResourceSetResourceResponse:
      summary: Resource set response
      value:
        id: ire106sQKoHoXXsAe0g4
        orn: orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps
        conditions:
          Exclude:
            okta:ORN:
              - orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps:0oa1014FmyZ2H0oRY0g4
              - orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps:slack
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/apps
          resource:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/resources/ire2snv2xSY7a4iSe0g1
    ResourceSetResourcePatchRequestExample:
      value:
        additions:
          - https://{yourOktaDomain}/api/v1/groups/00guaxWZ0AOa5NFAj0g3
          - https://{yourOktaDomain}/api/v1/groups/00gu67DU2qNCjNZYO0g3/users
    ResourceSetResourcePutRequestExample:
      value:
        conditions:
          Exclude:
            okta:ORN:
              - orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps:0oa1014FmyZ2H0oRY0g4
              - orn:okta:idp:00o5rb5mt2H3d1TJd0h7:apps:slack
    RolesResponse:
      value:
        roles:
          - id: cr0Yq6IJxGIr0ouum0g3
            label: UserCreator
            description: Create users
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              permissions:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          - id: cr0Fw7HKcWIroo88m3r1
            label: GroupMembershipManager
            description: Manage group membership
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              permissions:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1/permissions
              self:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Fw7HKcWIroo88m3r1
        _links:
          next:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles?after=cr0Fw7HKcWIroo88m3r1
    RoleRequest:
      value:
        label: UserCreator
        description: Create users
        permissions:
          - okta.users.create
          - okta.users.read
          - okta.groups.read
          - okta.users.userprofile.manage
    RoleResponse:
      value:
        id: cr0Yq6IJxGIr0ouum0g3
        label: UserCreator
        description: Create users
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          permissions:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions
          self:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
    ReplaceRoleRequest:
      value:
        label: UserCreator
        description: Create users
    PermissionsResponse:
      value:
        permissions:
          - label: okta.users.create
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.create
          - label: okta.users.read
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            conditions:
              include:
                okta:ResourceAttribute/User/Profile:
                  - city
                  - state
                  - zipCode
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read
          - label: okta.groups.read
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.groups.read
          - label: okta.users.userprofile.manage
            created: '2021-02-06T16:20:57.000Z'
            lastUpdated: '2021-02-06T16:20:57.000Z'
            _links:
              role:
                href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.userprofile.manage
    PermissionResponse:
      value:
        label: okta.users.manage
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.manage
    PermissionResponseWithConditions:
      value:
        label: okta.users.read
        conditions:
          include:
            okta:ResourceAttribute/User/Profile:
              - city
              - state
              - zipCode
        created: '2021-02-06T16:20:57.000Z'
        lastUpdated: '2021-02-06T16:20:57.000Z'
        _links:
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions/okta.users.read
    CreateUpdateIamRolePermissionRequestExampleWithInclude:
      value:
        conditions:
          include:
            okta:ResourceAttribute/User/Profile:
              - city
              - state
    CreateUpdateIamRolePermissionRequestExampleWithExclude:
      value:
        conditions:
          exclude:
            okta:ResourceAttribute/User/Profile:
              - zipCode
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    users_with_role_assignments:
      id: okta.iam.users_with_role_assignments
      name: users_with_role_assignments
      title: Users With Role Assignments
      methods:
        list_users_with_role_assignments:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1assignees~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/users_with_role_assignments/methods/list_users_with_role_assignments
        insert: []
        update: []
        delete: []
        replace: []
    governance_bundles:
      id: okta.iam.governance_bundles
      name: governance_bundles
      title: Governance Bundles
      methods:
        list_governance_bundles:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1bundles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_governance_bundle:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1bundles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_governance_bundle:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1bundles~1{bundleId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_governance_bundle:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1bundles~1{bundleId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_governance_bundle:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1bundles~1{bundleId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/governance_bundles/methods/list_governance_bundles
          - $ref: >-
              #/components/x-stackQL-resources/governance_bundles/methods/get_governance_bundle
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/governance_bundles/methods/create_governance_bundle
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/governance_bundles/methods/delete_governance_bundle
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/governance_bundles/methods/replace_governance_bundle
    bundle_entitlements:
      id: okta.iam.bundle_entitlements
      name: bundle_entitlements
      title: Bundle Entitlements
      methods:
        list_bundle_entitlements:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1governance~1bundles~1{bundleId}~1entitlements/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bundle_entitlements/methods/list_bundle_entitlements
        insert: []
        update: []
        delete: []
        replace: []
    bundle_entitlement_values:
      id: okta.iam.bundle_entitlement_values
      name: bundle_entitlement_values
      title: Bundle Entitlement Values
      methods:
        list_bundle_entitlement_values:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1governance~1bundles~1{bundleId}~1entitlements~1{entitlementId}~1values/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/bundle_entitlement_values/methods/list_bundle_entitlement_values
        insert: []
        update: []
        delete: []
        replace: []
    opt_in_status:
      id: okta.iam.opt_in_status
      name: opt_in_status
      title: Opt In Status
      methods:
        get_opt_in_status:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1optIn/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        opt_in:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1optIn/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        opt_out:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1governance~1optOut/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/opt_in_status/methods/get_opt_in_status
        insert: []
        update: []
        delete: []
        replace: []
    role_resource_sets:
      id: okta.iam.role_resource_sets
      name: role_resource_sets
      title: Role Resource Sets
      methods:
        list_resource_sets:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1resource-sets/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_resource_set:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1resource-sets/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_resource_set:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_resource_set:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource_set:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_sets/methods/list_resource_sets
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_sets/methods/get_resource_set
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_sets/methods/create_resource_set
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_sets/methods/delete_resource_set
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_sets/methods/replace_resource_set
    role_resource_set_bindings:
      id: okta.iam.role_resource_set_bindings
      name: role_resource_set_bindings
      title: Role Resource Set Bindings
      methods:
        list_bindings:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_resource_set_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings~1{roleIdOrLabel}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings~1{roleIdOrLabel}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_bindings/methods/list_bindings
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_bindings/methods/get_binding
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_bindings/methods/create_resource_set_binding
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_bindings/methods/delete_binding
        replace: []
    role_resource_set_binding_members:
      id: okta.iam.role_resource_set_binding_members
      name: role_resource_set_binding_members
      title: Role Resource Set Binding Members
      methods:
        list_members_of_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings~1{roleIdOrLabel}~1members/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_members_to_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings~1{roleIdOrLabel}~1members/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_member_of_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings~1{roleIdOrLabel}~1members~1{memberId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unassign_member_from_binding:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1bindings~1{roleIdOrLabel}~1members~1{memberId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_binding_members/methods/list_members_of_binding
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_binding_members/methods/get_member_of_binding
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_binding_members/methods/add_members_to_binding
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_binding_members/methods/unassign_member_from_binding
        replace: []
    role_resource_set_resources:
      id: okta.iam.role_resource_set_resources
      name: role_resource_set_resources
      title: Role Resource Set Resources
      methods:
        list_resource_set_resources:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1resources/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_resource_set_resource:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1resources/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        add_resource_set_resources:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1resources/patch
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_resource_set_resource:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1resources~1{resourceId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_resource_set_resource:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1resources~1{resourceId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource_set_resource:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1resource-sets~1{resourceSetIdOrLabel}~1resources~1{resourceId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_resources/methods/list_resource_set_resources
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_resources/methods/get_resource_set_resource
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_resources/methods/add_resource_set_resources
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_resources/methods/delete_resource_set_resource
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/role_resource_set_resources/methods/replace_resource_set_resource
    roles:
      id: okta.iam.roles
      name: roles
      title: Roles
      methods:
        list_roles:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_role:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1roles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_role:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_role:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_role:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/roles/methods/list_roles'
          - $ref: '#/components/x-stackQL-resources/roles/methods/get_role'
        insert:
          - $ref: '#/components/x-stackQL-resources/roles/methods/create_role'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/roles/methods/delete_role'
        replace:
          - $ref: '#/components/x-stackQL-resources/roles/methods/replace_role'
    role_permissions:
      id: okta.iam.role_permissions
      name: role_permissions
      title: Role Permissions
      methods:
        list_role_permissions:
          operation:
            $ref: '#/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}~1permissions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_role_permission:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}~1permissions~1{permissionType}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_role_permission:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}~1permissions~1{permissionType}/post
          response:
            mediaType: ''
            openAPIDocKey: '204'
        replace_role_permission:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}~1permissions~1{permissionType}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_role_permission:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1iam~1roles~1{roleIdOrLabel}~1permissions~1{permissionType}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/list_role_permissions
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/get_role_permission
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/create_role_permission
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/delete_role_permission
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/role_permissions/methods/replace_role_permission
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
