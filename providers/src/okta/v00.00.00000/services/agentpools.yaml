openapi: 3.0.3
info:
  title: agentpools API
  description: okta agentpools API
  version: 5.1.0
paths:
  /api/v1/agentPools:
    get:
      summary: List all agent pools
      description: Lists all agent pools with pagination support
      operationId: listAgentPools
      parameters:
        - $ref: '#/components/parameters/queryLimitPerPoolType'
        - $ref: '#/components/parameters/queryPoolType'
        - $ref: '#/components/parameters/queryAfter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentPool'
              examples:
                ListAllAgentPoolsResponse:
                  $ref: '#/components/examples/ListAllAgentPoolsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/agentPools/{poolId}/updates:
    get:
      summary: List all agent pool updates
      description: Lists all agent pool updates
      operationId: listAgentPoolsUpdates
      parameters:
        - $ref: '#/components/parameters/queryScheduled'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgentPoolUpdate'
              examples:
                ListAllAgentPoolUpdatesResponse:
                  $ref: '#/components/examples/ListAllAgentPoolUpdatesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an agent pool update
      description: Creates an agent pool update
      operationId: createAgentPoolsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
  /api/v1/agentPools/{poolId}/updates/settings:
    get:
      summary: Retrieve an agent pool update's settings
      description: Retrieves the current state of the agent pool update instance settings
      operationId: getAgentPoolsUpdateSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Update an agent pool update settings
      description: Updates an agent pool update instance settings
      operationId: updateAgentPoolsUpdateSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdateSetting'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdateSetting'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
  /api/v1/agentPools/{poolId}/updates/{updateId}:
    get:
      summary: Retrieve an agent pool update by ID
      description: Retrieves an agent pool update by its `updateId`
      operationId: getAgentPoolsUpdateInstance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.read
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Update an agent pool update by ID
      description: >-
        Updates an agent pool update instance and returns the latest agent pool
        update
      operationId: updateAgentPoolsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentPoolUpdate'
        required: true
      responses:
        '201':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an agent pool update
      description: Deletes agent pool update
      operationId: deleteAgentPoolsUpdate
      responses:
        '204':
          description: Deleted
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
  /api/v1/agentPools/{poolId}/updates/{updateId}/activate:
    post:
      summary: Activate an agent pool update
      description: Activates a scheduled agent pool update
      operationId: activateAgentPoolsUpdate
      responses:
        '201':
          description: Activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
  /api/v1/agentPools/{poolId}/updates/{updateId}/deactivate:
    post:
      summary: Deactivate an agent pool update
      description: Deactivates scheduled agent pool update
      operationId: deactivateAgentPoolsUpdate
      responses:
        '201':
          description: Deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
  /api/v1/agentPools/{poolId}/updates/{updateId}/pause:
    post:
      summary: Pause an agent pool update
      description: Pauses a running or queued agent pool update
      operationId: pauseAgentPoolsUpdate
      responses:
        '201':
          description: Paused
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
  /api/v1/agentPools/{poolId}/updates/{updateId}/resume:
    post:
      summary: Resume an agent pool update
      description: Resumes a running or queued agent pool update
      operationId: resumeAgentPoolsUpdate
      responses:
        '201':
          description: Resumed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
  /api/v1/agentPools/{poolId}/updates/{updateId}/retry:
    post:
      summary: Retry an agent pool update
      description: >-
        Retries an agent pool update if the update is unsuccessful or
        communication with Okta was interrupted during an agent auto-update
      operationId: retryAgentPoolsUpdate
      responses:
        '201':
          description: Retried
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
  /api/v1/agentPools/{poolId}/updates/{updateId}/stop:
    post:
      summary: Stop an agent pool update
      description: Stops an agent pool update
      operationId: stopAgentPoolsUpdate
      responses:
        '201':
          description: Stopped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPoolUpdate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.agentPools.manage
      tags:
        - AgentPools
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPoolId'
      - $ref: '#/components/parameters/pathUpdateId'
components:
  schemas:
    AgentPool:
      description: >-
        An agent pool is a collection of agents that serve a common purpose. An
        agent pool has a unique ID within an org, and contains a collection of
        agents disjoint to every other agent pool, meaning that no two agent
        pools share an agent.
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        disruptedAgents:
          description: Number of agents in the pool that are in a disrupted state
          type: integer
        id:
          type: string
          readOnly: true
          description: Agent pool ID
        inactiveAgents:
          description: Number of agents in the pool that are in an inactive state
          type: integer
        name:
          type: string
          description: Agent pool name
        operationalStatus:
          $ref: '#/components/schemas/OperationalStatus'
        type:
          $ref: '#/components/schemas/AgentType'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    AgentPoolUpdate:
      description: Various information about agent auto-update configuration
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        agentType:
          $ref: '#/components/schemas/AgentType'
        enabled:
          type: boolean
          description: Indicates if auto-update is enabled for the agent pool
        id:
          type: string
          readOnly: true
          description: ID of the agent pool update
        name:
          type: string
          description: Name of the agent pool update
          example: region1A.dc
        notifyAdmin:
          type: boolean
          description: Indicates if the admin is notified about the update
        reason:
          description: Reason for the update
          type: string
          example: Update failed.
        schedule:
          $ref: '#/components/schemas/AutoUpdateSchedule'
        sortOrder:
          description: Specifies the sort order
          type: integer
        status:
          $ref: '#/components/schemas/AgentUpdateJobStatus'
        targetVersion:
          type: string
          description: The agent version to update to
          example: 3.20.0
        _links:
          $ref: '#/components/schemas/LinksSelf'
    AgentPoolUpdateSetting:
      description: Setting for auto-update
      type: object
      properties:
        agentType:
          $ref: '#/components/schemas/AgentType'
        continueOnError:
          type: boolean
          description: Continues the update even if some agents fail to update
        latestVersion:
          type: string
          description: Latest version of the agent
          example: 3.20.0
        minimalSupportedVersion:
          type: string
          description: Minimal version of the agent
          example: 3.19.0
        poolId:
          type: string
          readOnly: true
          description: ID of the agent pool that the settings apply to
          example: 0oa3eu7ekG8tjbD9J5s6
        poolName:
          type: string
          description: Pool name
          example: iwa.dc
        releaseChannel:
          $ref: '#/components/schemas/ReleaseChannel'
    AgentType:
      description: Agent types that are being monitored
      type: string
      enum:
        - AD
        - IWA
        - LDAP
        - MFA
        - OPP
        - RUM
        - Radius
    Agent:
      description: Agent details
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: Unique identifier for the agent that's generated during installation
          example: ajd3fxzltQKQ2VeLu5s6
        isHidden:
          type: boolean
          description: Determines if an agent is hidden from the Admin Console
        isLatestGAedVersion:
          type: boolean
          description: Determines if the agent is on the latest generally available version
        lastConnection:
          type: string
          format: date-time
          description: Timestamp when the agent last connected to Okta
        name:
          type: string
          description: Agent name
          example: WIN-region1A-dc
        operationalStatus:
          $ref: '#/components/schemas/OperationalStatus'
        poolId:
          type: string
          description: Pool ID
          example: 0oa3eu7ekG8tjbD9J5s6
        type:
          $ref: '#/components/schemas/AgentType'
        updateMessage:
          type: string
          description: Status message of the agent
          example: Queued for update.
        updateStatus:
          $ref: '#/components/schemas/AgentUpdateInstanceStatus'
        version:
          type: string
          description: Agent version number
          example: 3.19.0
        _links:
          $ref: '#/components/schemas/LinksSelf'
    OperationalStatus:
      description: Operational status of a given agent
      type: string
      enum:
        - DEGRADED
        - DISRUPTED
        - INACTIVE
        - OPERATIONAL
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    AutoUpdateSchedule:
      description: The schedule of auto-update configured by the admin
      type: object
      properties:
        cron:
          type: string
          description: >-
            The schedule of the update in cron format. The cron settings are
            limited to only the day of the month or the nth-day-of-the-week
            configurations. For example, `0 8 ? * 6#3` indicates every third
            Saturday at 8:00 AM.
          example: 0 8 ? * 6#3
        delay:
          description: Delay in days
          type: integer
        duration:
          description: Duration in minutes
          type: integer
          example: 120
        lastUpdated:
          description: >-
            Timestamp when the update finished (only for a successful or failed
            update, not for a cancelled update). Null is returned if the job
            hasn't finished once yet.
          type: string
          format: date-time
        timezone:
          type: string
          description: Timezone of where the scheduled job takes place
          example: America/New_York
    AgentUpdateJobStatus:
      description: Overall state for the auto-update job from the admin perspective
      type: string
      enum:
        - Cancelled
        - Failed
        - InProgress
        - Paused
        - Scheduled
        - Success
    ReleaseChannel:
      description: Release channel for auto-update
      type: string
      enum:
        - BETA
        - EA
        - GA
        - TEST
    AgentUpdateInstanceStatus:
      description: Status for one agent regarding the status to auto-update that agent
      type: string
      enum:
        - Cancelled
        - Failed
        - InProgress
        - PendingCompletion
        - Scheduled
        - Success
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
  parameters:
    queryLimitPerPoolType:
      name: limitPerPoolType
      in: query
      schema:
        type: integer
        default: 5
      required: false
      description: Maximum number of agent pools returned
    queryPoolType:
      name: poolType
      in: query
      schema:
        $ref: '#/components/schemas/AgentType'
      required: false
      description: Agent type to search for
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    pathPoolId:
      name: poolId
      in: path
      description: ID of the agent pool for which the settings apply to
      schema:
        type: string
      required: true
    queryScheduled:
      name: scheduled
      in: query
      description: >-
        Return only scheduled or ad-hoc updates. If this parameter isn't
        provided, Okta returns the entire list of updates.
      schema:
        type: boolean
      required: false
    pathUpdateId:
      name: updateId
      in: path
      description: ID of the update
      schema:
        type: string
      required: true
  examples:
    ListAllAgentPoolsResponse:
      summary: List all agent pools
      value:
        - disruptedAgents: 0
          inactiveAgents: 1
          operationalStatus: OPERATIONAL
          id: poolId1
          name: region1A.dc
          type: AD
          agents:
            id: agentId1
            state: ACTIVE
            message: Agent connection is live
            indicator: green
            name: WIN-region1A-dc
            version: 3.18.0
            upgradeRequired: false
            active: true
            supportAutoUpdate: true
            errorState: true
            isHidden: false
            isLatestGAedVersion: false
            lastConnection: 1628263766000
            operationalStatus: OPERATIONAL
            poolId: poolId1
            updateMessage: Queued for update.
          _links:
            self:
              href: /api/v1/agentPools/poolId1
    ListAllAgentPoolUpdatesResponse:
      summary: List all agent pool updates
      value:
        - id: poolId1
          name: testSchedule
          agentType: AD
          agents:
            latestGAedVersion: true
            id: a533eu8npxdZ60Mvf5s6
            type: AD
            operationalStatus: OPERATIONAL
            updateStatus: Scheduled
            updateMessage: Queued for update.
            version: 3.20.0
            lastConnection: 1750462090000
            isLatestGAedVersion: true
            poolId: 0oa3eu7ekG8tjbD9J5s6
            name: N079-H069
            isHidden: false
          enabled: true
          schedule:
            cron: 0 1 * * THU
            timezone: America/Los_Angeles
            duration: 420
          notifyAdmin: true
          status: Scheduled
          targetVersion: 3.20.0
          _links:
            self:
              href: /api/v1/agentPools/poolId1/updates
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
  x-stackQL-resources:
    agent_pools:
      id: okta.agentpools.agent_pools
      name: agent_pools
      title: Agent Pools
      methods:
        list_agent_pools:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pools/methods/list_agent_pools
        insert: []
        update: []
        delete: []
        replace: []
    agent_pool_updates:
      id: okta.agentpools.agent_pool_updates
      name: agent_pool_updates
      title: Agent Pool Updates
      methods:
        list_agent_pools_updates:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools~1{poolId}~1updates/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_agent_pools_update:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools~1{poolId}~1updates/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_agent_pools_update_instance:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_agent_pools_update:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}~1activate/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        deactivate_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}~1deactivate/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        pause_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}~1pause/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        resume_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}~1resume/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        retry_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}~1retry/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        stop_agent_pools_update:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1{updateId}~1stop/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_updates/methods/list_agent_pools_updates
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_updates/methods/get_agent_pools_update_instance
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_updates/methods/create_agent_pools_update
        update:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_updates/methods/update_agent_pools_update
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_updates/methods/delete_agent_pools_update
        replace: []
    agent_pool_update_settings:
      id: okta.agentpools.agent_pool_update_settings
      name: agent_pool_update_settings
      title: Agent Pool Update Settings
      methods:
        get_agent_pools_update_settings:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_agent_pools_update_settings:
          operation:
            $ref: '#/paths/~1api~1v1~1agentPools~1{poolId}~1updates~1settings/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_update_settings/methods/get_agent_pools_update_settings
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/agent_pool_update_settings/methods/update_agent_pools_update_settings
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
