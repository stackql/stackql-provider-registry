openapi: 3.0.3
info:
  title: email_domains API
  description: okta email_domains API
  version: 5.1.0
paths:
  /api/v1/email-domains:
    get:
      summary: List all email domains
      description: Lists all the Email Domains in your org
      operationId: listEmailDomains
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailDomainResponseWithEmbedded'
              examples:
                List email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.read
      tags:
        - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an email domain
      description: Creates an Email Domain in your org
      operationId: createEmailDomain
      x-codegen-request-body-name: emailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailDomain'
            examples:
              Create email domain request:
                $ref: '#/components/examples/CreateEmailDomainRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
              examples:
                Create email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Email domain already exists:
                  $ref: '#/components/examples/ErrorEmailDomainAlreadyExists'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/queryExpandEmailDomain'
  /api/v1/email-domains/{emailDomainId}:
    get:
      summary: Retrieve an email domain
      description: Retrieves an Email Domain by `emailDomainId`
      operationId: getEmailDomain
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponseWithEmbedded'
              examples:
                Retrieve email domain response:
                  $ref: '#/components/examples/EmailDomainResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.read
      tags:
        - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace an email domain
      description: Replaces associated username and sender display name by `emailDomainId`
      operationId: replaceEmailDomain
      x-codegen-request-body-name: updateEmailDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailDomain'
            examples:
              Update email domain request:
                $ref: '#/components/examples/UpdateEmailDomainRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
              examples:
                Update email domain response:
                  $ref: '#/components/examples/UpdatedEmailDomainResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an email domain
      description: Deletes an Email Domain by `emailDomainId`
      operationId: deleteEmailDomain
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: >-
            Unable to delete custom email domain due to mail provider specific
            restrictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Email domain in use:
                  $ref: '#/components/examples/ErrorEmailDomainInUse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathEmailDomainId'
      - $ref: '#/components/parameters/queryExpandEmailDomain'
  /api/v1/email-domains/{emailDomainId}/verify:
    post:
      summary: Verify an email domain
      description: Verifies an Email Domain by `emailDomainId`
      operationId: verifyEmailDomain
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDomainResponse'
              examples:
                Verified email domain response:
                  $ref: '#/components/examples/VerifiedEmailDomainResponse'
        '400':
          description: Email domain could not be verified by mail provider
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Email domain could not be verified:
                  $ref: '#/components/examples/ErrorEmailDomainNotVerified'
                Email domain invalid status:
                  $ref: '#/components/examples/ErrorEmailDomainInvalidStatus'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailDomains.manage
      tags:
        - EmailDomain
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathEmailDomainId'
components:
  schemas:
    EmailDomainResponseWithEmbedded:
      allOf:
        - $ref: '#/components/schemas/EmailDomainResponse'
      type: object
      properties:
        _embedded:
          type: object
          properties:
            brands:
              type: array
              items:
                $ref: '#/components/schemas/Brand'
          readOnly: true
    EmailDomain:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        brandId:
          type: string
        domain:
          type: string
        validationSubdomain:
          type: string
          description: >-
            Subdomain for the email sender's custom mail domain. Specify your
            subdomain when you configure a custom mail domain.
          default: mail
      required:
        - domain
        - brandId
    EmailDomainResponse:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        dnsValidationRecords:
          type: array
          items:
            $ref: '#/components/schemas/EmailDomainDNSRecord'
        domain:
          type: string
        id:
          type: string
        validationStatus:
          $ref: '#/components/schemas/EmailDomainStatus'
        validationSubdomain:
          type: string
          description: The subdomain for the email sender's custom mail domain
          default: mail
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    UpdateEmailDomain:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
    Brand:
      type: object
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
          description: >-
            Consent for updating the custom privacy URL. Not required when
            resetting the URL.
        customPrivacyPolicyUrl:
          type: string
          description: Custom privacy policy URL
          default: null
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          type: string
          description: The ID of the email domain
        id:
          readOnly: true
          type: string
          description: The Brand ID
        isDefault:
          readOnly: true
          type: boolean
          description: If `true`, the Brand is used for the Okta subdomain
        locale:
          $ref: '#/components/schemas/Language'
        name:
          type: string
          description: The name of the Brand
        removePoweredByOkta:
          type: boolean
          default: false
          description: >-
            Removes "Powered by Okta" from the sign-in page in redirect
            authentication deployments, and "© [current year] Okta, Inc." from
            the Okta End-User Dashboard
    BaseEmailDomain:
      type: object
      properties:
        displayName:
          type: string
        userName:
          type: string
      required:
        - displayName
        - userName
    EmailDomainDNSRecord:
      type: object
      properties:
        fqdn:
          type: string
        recordType:
          $ref: '#/components/schemas/EmailDomainDNSRecordType'
        verificationValue:
          type: string
    EmailDomainStatus:
      type: string
      enum:
        - DELETED
        - ERROR
        - NOT_STARTED
        - POLLING
        - VERIFIED
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    DefaultApp:
      type: object
      properties:
        appInstanceId:
          type: string
          description: ID for the App instance
        appLinkName:
          type: string
          description: Name for the app instance
        classicApplicationUri:
          type: string
          description: Application URI for classic Orgs
    Language:
      description: >-
        The language specified as an [IETF BCP 47 language
        tag](https://datatracker.ietf.org/doc/html/rfc5646)
      type: string
    EmailDomainDNSRecordType:
      type: string
      enum:
        - CNAME
        - TXT
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    queryExpandEmailDomain:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - brands
      description: Specifies additional metadata to be included in the response
    pathEmailDomainId:
      name: emailDomainId
      in: path
      required: true
      schema:
        type: string
        description: The ID of the email domain.
  examples:
    EmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: NOT_STARTED
        displayName: Admin
        userName: admin
        domain: example.com
        validationSubdomain: mail
        dnsValidationRecords:
          - recordType: TXT
            fqdn: _oktaverification.example.com
            verificationValue: 759080212bda43e3bc825a7d73b4bb64
          - recordType: CNAME
            fqdn: mail.example.com
            verificationValue: u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t02._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t022._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    CreateEmailDomainRequest:
      value:
        displayName: Admin
        userName: admin
        domain: example.com
        brandId: bnd100iSrkcN6aR680g1
        validationSubdomain: mail
    ErrorEmailDomainAlreadyExists:
      value:
        errorCode: E0000197
        errorSummary: Email domain already exists.
        errorLink: E0000197
        errorId: oaeEdRqprFuTyKokyYPbURJkA
        errorCauses: []
    UpdateEmailDomainRequest:
      value:
        displayName: IT Admin
        userName: noreply
    UpdatedEmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: NOT_STARTED
        displayName: IT Admin
        userName: noreply
        domain: example.com
        validationSubdomain: mail
        dnsValidationRecords:
          - recordType: TXT
            fqdn: _oktaverification.example.com
            verificationValue: 759080212bda43e3bc825a7d73b4bb64
          - recordType: CNAME
            fqdn: mail.example.com
            verificationValue: u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t02._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t022._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    ErrorEmailDomainInUse:
      value:
        errorCode: E0000216
        errorSummary: Email domain can't be deleted due to mail provider restrictions.
        errorLink: E0000216
        errorId: oaeEdRqprFuTyKokyYPbURJkB
        errorCauses: []
    VerifiedEmailDomainResponse:
      value:
        id: OeD114iNkrcN6aR680g4
        validationStatus: VERIFIED
        displayName: IT Admin
        userName: noreply
        domain: example.com
        validationSubdomain: mail
        dnsValidationRecords:
          - recordType: TXT
            fqdn: _oktaverification.example.com
            verificationValue: 759080212bda43e3bc825a7d73b4bb64
          - recordType: CNAME
            fqdn: mail.example.com
            verificationValue: u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t02._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
          - recordType: CNAME
            fqdn: t022._domainkey.example.com
            verificationValue: t02.domainkey.u22224444.wl024.sendgrid.net
    ErrorEmailDomainNotVerified:
      value:
        errorCode: E0000218
        errorSummary: Email domain couldn't be verified by mail provider.
        errorLink: E0000218
        errorId: oaeEdRqprFuTyKokyYPbURJkC
        errorCauses: []
    ErrorEmailDomainInvalidStatus:
      value:
        errorCode: E0000217
        errorSummary: Invalid status. Can't validate email domain with current status.
        errorLink: E0000217
        errorId: oaeEdRqprFuTyKokyYPbURJkD
        errorCauses: []
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    email_domains:
      id: okta.email_domains.email_domains
      name: email_domains
      title: Email Domains
      methods:
        list_email_domains:
          operation:
            $ref: '#/paths/~1api~1v1~1email-domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_email_domain:
          operation:
            $ref: '#/paths/~1api~1v1~1email-domains/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_email_domain:
          operation:
            $ref: '#/paths/~1api~1v1~1email-domains~1{emailDomainId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_email_domain:
          operation:
            $ref: '#/paths/~1api~1v1~1email-domains~1{emailDomainId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_email_domain:
          operation:
            $ref: '#/paths/~1api~1v1~1email-domains~1{emailDomainId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        verify_email_domain:
          operation:
            $ref: '#/paths/~1api~1v1~1email-domains~1{emailDomainId}~1verify/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_domains/methods/list_email_domains
          - $ref: >-
              #/components/x-stackQL-resources/email_domains/methods/get_email_domain
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/email_domains/methods/create_email_domain
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/email_domains/methods/delete_email_domain
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/email_domains/methods/replace_email_domain
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
