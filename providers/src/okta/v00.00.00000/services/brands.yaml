openapi: 3.0.3
info:
  title: brands API
  description: okta brands API
  version: 5.1.0
paths:
  /api/v1/brands:
    get:
      summary: List all brands
      description: Lists all the brands in your org
      operationId: listBrands
      parameters:
        - $ref: '#/components/parameters/queryExpandBrand'
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - $ref: '#/components/parameters/queryFilter'
      responses:
        '200':
          description: Successfully returned the list of brands
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BrandWithEmbedded'
              examples:
                Get brands response:
                  $ref: '#/components/examples/ListBrandsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a brand
      description: Creates a new brand in your org
      operationId: createBrand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrandRequest'
            examples:
              Create brand request:
                $ref: '#/components/examples/CreateBrandRequest'
      responses:
        '201':
          description: Successfully created the brand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
              examples:
                Create brand response:
                  $ref: '#/components/examples/CreateBrandResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '409':
          description: Could not create the new brand because same name already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot create brand with the same name:
                  $ref: '#/components/examples/ErrorCreateBrandExists'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/brands/{brandId}:
    get:
      summary: Retrieve a brand
      description: Retrieves a brand by `brandId`
      operationId: getBrand
      parameters:
        - $ref: '#/components/parameters/queryExpandBrand'
      responses:
        '200':
          description: Successfully retrieved the brand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandWithEmbedded'
              examples:
                Get brand response:
                  $ref: '#/components/examples/GetBrandResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a brand
      description: >+
        Replaces a brand by `brandId`


        Passing an invalid `brandId` returns a `404 Not Found` status code with
        the error code `E0000007`.


        Not providing `agreeToCustomPrivacyPolicy` with `customPrivacyPolicyUrl`
        returns a `400 Bad Request` status code with the error code `E0000001`.

      operationId: replaceBrand
      x-codegen-request-body-name: brand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrandRequest'
            examples:
              Update brand request:
                $ref: '#/components/examples/UpdateBrandRequest'
        required: true
      responses:
        '200':
          description: Successfully replaced the brand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
              examples:
                Update brand response:
                  $ref: '#/components/examples/UpdateBrandResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a brand
      description: Deletes a brand by `brandId`
      operationId: deleteBrand
      responses:
        '204':
          description: Successfully deleted the brand.
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot delete default brand:
                  $ref: '#/components/examples/ErrorDeleteDefaultBrand'
                Cannot delete brand associated with a domain:
                  $ref: '#/components/examples/ErrorDeleteBrandAssociatedWithDomain'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/domains:
    get:
      summary: List all domains associated with a brand
      description: Lists all domains associated with a brand by `brandId`
      operationId: listBrandDomains
      responses:
        '200':
          description: Successfully returned the list of domains for the brand
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandDomains'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Brands
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/error:
    get:
      summary: Retrieve the error page sub-resources
      description: >-
        Retrieves the error page sub-resources. The `expand` query parameter
        specifies which sub-resources to include in the response.
      operationId: getErrorPage
      responses:
        '200':
          description: Successfully retrieved the error page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRoot'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/queryExpandPageRoot'
  /api/v1/brands/{brandId}/pages/error/customized:
    get:
      summary: Retrieve the customized error page
      description: >-
        Retrieves the customized error page. The customized error page appears
        in your live environment.
      operationId: getCustomizedErrorPage
      responses:
        '200':
          description: Successfully retrieved the customized error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the customized error page
      description: >-
        Replaces the customized error page. The customized error page appears in
        your live environment.
      operationId: replaceCustomizedErrorPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the customized error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the customized error page
      description: >-
        Deletes the customized error page. As a result, the default error page
        appears in your live environment.
      operationId: deleteCustomizedErrorPage
      responses:
        '204':
          description: Successfully deleted the customized error page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/error/default:
    get:
      summary: Retrieve the default error page
      description: >-
        Retrieves the default error page. The default error page appears when no
        customized error page exists.
      operationId: getDefaultErrorPage
      responses:
        '200':
          description: Successfully retrieved the default error page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/error/preview:
    get:
      summary: Retrieve the preview error page preview
      description: >-
        Retrieves the preview error page. The preview error page contains
        unpublished changes and isn't shown in your live environment. Preview it
        at `${yourOktaDomain}/error/preview`.
      operationId: getPreviewErrorPage
      responses:
        '200':
          description: Successfully retrieved the preview error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the preview error page
      description: >-
        Replaces the preview error page. The preview error page contains
        unpublished changes and isn't shown in your live environment. Preview it
        at `${yourOktaDomain}/error/preview`.
      operationId: replacePreviewErrorPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the preview error page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the preview error page
      description: >-
        Deletes the preview error page. The preview error page contains
        unpublished changes and isn't shown in your live environment. Preview it
        at `${yourOktaDomain}/error/preview`.
      operationId: deletePreviewErrorPage
      responses:
        '204':
          description: Successfully deleted the preview error page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/sign-in:
    get:
      summary: Retrieve the sign-in page sub-resources
      description: >-
        Retrieves the sign-in page sub-resources. The `expand` query parameter
        specifies which sub-resources to include in the response.
      operationId: getSignInPage
      responses:
        '200':
          description: Successfully retrieved the sign-in page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageRoot'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/queryExpandPageRoot'
  /api/v1/brands/{brandId}/pages/sign-in/customized:
    get:
      summary: Retrieve the customized sign-in page
      description: >-
        Retrieves the customized sign-in page. The customized sign-in page
        appears in your live environment.
      operationId: getCustomizedSignInPage
      responses:
        '200':
          description: Successfully retrieved the customized sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the customized sign-in page
      description: >-
        Replaces the customized sign-in page. The customized sign-in page
        appears in your live environment.
      operationId: replaceCustomizedSignInPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the customized sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the customized sign-in page
      description: >-
        Deletes the customized sign-in page. As a result, the default sign-in
        page appears in your live environment.
      operationId: deleteCustomizedSignInPage
      responses:
        '204':
          description: Successfully deleted the sign-in page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/sign-in/default:
    get:
      summary: Retrieve the default sign-in page
      description: >-
        Retrieves the default sign-in page. The default sign-in page appears
        when no customized sign-in page exists.
      operationId: getDefaultSignInPage
      responses:
        '200':
          description: Successfully retrieved the default sign-in page.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/sign-in/preview:
    get:
      summary: Retrieve the preview sign-in page preview
      description: >-
        Retrieves the preview sign-in page. The preview sign-in page contains
        unpublished changes and isn't shown in your live environment. Preview it
        at `${yourOktaDomain}/login/preview`.
      operationId: getPreviewSignInPage
      responses:
        '200':
          description: Successfully retrieved the preview sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the preview sign-in page
      description: >-
        Replaces the preview sign-in page. The preview sign-in page contains
        unpublished changes and isn't shown in your live environment. Preview it
        at `${yourOktaDomain}/login/preview`.
      operationId: replacePreviewSignInPage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the preview sign-in page.
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the preview sign-in page
      description: >-
        Deletes the preview sign-in page. The preview sign-in page contains
        unpublished changes and isn't shown in your live environment. Preview it
        at `${yourOktaDomain}/login/preview`.
      operationId: deletePreviewSignInPage
      responses:
        '204':
          description: Successfully deleted the preview sign-in page.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/sign-in/widget-versions:
    get:
      summary: List all Sign-In Widget versions
      description: Lists all sign-in widget versions supported by the current org
      operationId: listAllSignInWidgetVersions
      responses:
        '200':
          description: Successfully listed the sign-in widget versions.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  pattern: ^\d+\.\d+$
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/pages/sign-out/customized:
    get:
      summary: Retrieve the sign-out page settings
      description: Retrieves the sign-out page settings
      operationId: getSignOutPageSettings
      responses:
        '200':
          description: Successfully retrieved the sign-out page settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the sign-out page settings
      description: Replaces the sign-out page settings
      operationId: replaceSignOutPageSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostedPage'
        required: true
      responses:
        '200':
          description: Successfully replaced the sign-out page settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostedPage'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - CustomPages
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/templates/email:
    get:
      summary: List all email templates
      description: Lists all supported email templates
      operationId: listEmailTemplates
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - $ref: '#/components/parameters/queryExpandEmailTemplate'
      responses:
        '200':
          description: Successfully returned the list of email templates.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailTemplateResponse'
              examples:
                List email templates response:
                  $ref: '#/components/examples/ListEmailTemplateResponse'
          headers:
            Link:
              schema:
                type: string
              description: >-
                The pagination header containing links to the current and next
                page of results. See [Pagination]https://developer.okta.com/docs/api#pagination for more
                information.
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/templates/email/{templateName}:
    get:
      summary: Retrieve an email template
      description: Retrieves the details of an email template by name
      operationId: getEmailTemplate
      parameters:
        - $ref: '#/components/parameters/queryExpandEmailTemplate'
      responses:
        '200':
          description: Successfully retrieved the email template.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateResponse'
              examples:
                Get email template response:
                  $ref: '#/components/examples/GetEmailTemplateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations:
    get:
      summary: List all email customizations
      description: >
        Lists all customizations of an email template


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is enabled, all existing customizations are retrieved,
        including customizations for additional languages. If disabled, only
        customizations for Okta-supported languages are returned.
      operationId: listEmailCustomizations
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: >-
            Successfully retrieved all email customizations for the specified
            email template.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailCustomization'
              examples:
                List Email customizations response:
                  $ref: '#/components/examples/ListEmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an email customization
      description: >
        Creates a new Email Customization


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is enabled, you can create a customization for any BCP47
        language in addition to the Okta-supported languages.
      operationId: createEmailCustomization
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
            examples:
              Create email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
      responses:
        '201':
          description: Successfully created the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Create email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: >-
            Could not create the email customization because it conflicts with
            an existing email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Default email customization already exists:
                  $ref: >-
                    #/components/examples/ErrorEmailCustomizationDefaultAlreadyExists
                Email customization already exists for the specified language:
                  $ref: >-
                    #/components/examples/ErrorEmailCustomizationLanguageAlreadyExists
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete all email customizations
      description: >
        Deletes all customizations for an email template


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is enabled, all customizations are deleted, including
        customizations for additional languages. If disabled, only
        customizations in Okta-supported languages are deleted.
      operationId: deleteAllCustomizations
      responses:
        '204':
          description: Successfully deleted all customizations for the email template.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}:
    get:
      summary: Retrieve an email customization
      description: >
        Retrieves an email customization by its unique identifier


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is disabled, requests to retrieve an additional language
        customization by ID result in a `404 Not Found` error response.
      operationId: getEmailCustomization
      responses:
        '200':
          description: Successfully retrieved the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Get email customization response:
                  $ref: '#/components/examples/EmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace an email customization
      description: >
        Replaces an email customization using property values


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is disabled, requests to update a customization for an
        additional language return a `404 Not Found` error response.
      operationId: replaceEmailCustomization
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailCustomization'
            examples:
              Update email customization request:
                $ref: '#/components/examples/CreateUpdateEmailCustomizationRequest'
        description: Request
      responses:
        '200':
          description: Successfully updated the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailCustomization'
              examples:
                Update email customization response:
                  $ref: '#/components/examples/CreateUpdateEmailCustomizationResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: >-
            Could not update the email customization because the update would
            cause a conflict with an existing email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Default email customization already exists:
                  $ref: >-
                    #/components/examples/ErrorEmailCustomizationDefaultAlreadyExists
                Email customization already exists for the specified language:
                  $ref: >-
                    #/components/examples/ErrorEmailCustomizationLanguageAlreadyExists
                Cannot set the default email customization's isDefault to false:
                  $ref: >-
                    #/components/examples/ErrorEmailCustomizationCannotClearDefault
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an email customization
      description: >
        Deletes an Email Customization by its unique identifier


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is disabled, deletion of an existing additional language
        customization by ID doesn't register.
      operationId: deleteEmailCustomization
      responses:
        '204':
          description: Successfully deleted the email customization.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: >-
            Could not delete the email customization deleted because it is the
            default email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Cannot delete default email customization:
                  $ref: >-
                    #/components/examples/ErrorEmailCustomizationCannotDeleteDefault
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
      - $ref: '#/components/parameters/pathCustomizationId'
  /api/v1/brands/{brandId}/templates/email/{templateName}/customizations/{customizationId}/preview:
    get:
      summary: Retrieve a preview of an email customization
      description: >
        Retrieves a Preview of an Email Customization. All variable references
        are populated from the current user's context. For example,
        `${user.profile.firstName}`.


        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is disabled, requests for the preview of an additional
        language customization by ID return a `404 Not Found` error response.
      operationId: getCustomizationPreview
      responses:
        '200':
          description: Successfully generated a preview of the email customization.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
              examples:
                Preview email customization response:
                  $ref: '#/components/examples/PreviewEmailCustomizationResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
      - $ref: '#/components/parameters/pathCustomizationId'
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content:
    get:
      summary: Retrieve an email template default content
      description: >
        Retrieves an email template's default content


        <x-lifecycle class="ea"></x-lifecycle> Defaults to the current user's
        language given the following:

        - Custom languages for Okta Email Templates is enabled

        - An additional language is specified for the `language` parameter
      operationId: getEmailDefaultContent
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '200':
          description: Successfully retrieved the email template's default content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailDefaultContent'
              examples:
                Get email template default content response:
                  $ref: '#/components/examples/EmailTemplateDefaultContentResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
  /api/v1/brands/{brandId}/templates/email/{templateName}/default-content/preview:
    get:
      summary: Retrieve a preview of the email template default content
      description: >
        Retrieves a preview of an Email Template's default content. All variable
        references are populated using the current user's context. For example,
        `${user.profile.firstName}`.


        <x-lifecycle class="ea"></x-lifecycle> Defaults to the current user's
        language given the following:

        - Custom languages for Okta Email Templates is enabled

        - An additional language is specified for the `language` parameter
      operationId: getEmailDefaultPreview
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '200':
          description: >-
            Successfully generated a preview of the email template's default
            content.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPreview'
              examples:
                Preview email template default content response:
                  $ref: >-
                    #/components/examples/PreviewEmailTemplateDefaultContentResponse
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
  /api/v1/brands/{brandId}/templates/email/{templateName}/settings:
    get:
      summary: Retrieve the email template settings
      description: Retrieves an email template's settings
      operationId: getEmailSettings
      responses:
        '200':
          description: Successfully retrieved the email template's settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettingsResponse'
              examples:
                Get email template settings response:
                  $ref: '#/components/examples/EmailSettingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the email template settings
      description: Replaces an email template's settings
      operationId: replaceEmailSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSettings'
      responses:
        '200':
          description: Successfully updated the email template's settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettings'
              examples:
                Update email template settings:
                  $ref: '#/components/examples/EmailSettingsResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409'
              examples:
                Conflict:
                  $ref: '#/components/examples/ErrorEmailSettingsRaceCondition'
        '422':
          description: >-
            Could not update the email template's settings due to an invalid
            setting value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Invalid email template recipients:
                  $ref: '#/components/examples/ErrorInvalidEmailTemplateRecipients'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.manage
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
  /api/v1/brands/{brandId}/templates/email/{templateName}/test:
    post:
      summary: Send a test email
      description: >-
        Sends a test email to the current user's primary and secondary email
        addresses. The email content is selected based on the following
        priority:

        1. The email customization for the language specified in the `language`
        query parameter

        <x-lifecycle class="ea"></x-lifecycle> If Custom languages for Okta
        Email Templates is enabled and the `language` parameter is an additional
        language, the test email uses the customization corresponding to the
        language.

        2. The email template's default customization

        3. The email template's default content, translated to the current
        user's language


        > **Note:** Super admins can view customized email templates with the
        **Send a test email** request. However, when custom email templates are
        sent to super admins as part of actual email notification flows, the
        customizations aren't applied. Instead, the default email template is
        used. This only applies to super admins.
      operationId: sendTestEmail
      parameters:
        - $ref: '#/components/parameters/queryLanguage'
      responses:
        '204':
          description: Successfully sent a test email.
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.templates.read
      tags:
        - CustomTemplates
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathTemplateName'
  /api/v1/brands/{brandId}/themes:
    get:
      summary: List all themes
      description: >-
        Lists all the themes in your brand.


        > **Important:** Currently each org supports only one theme, therefore
        this contains a single object only.
      operationId: listBrandThemes
      responses:
        '200':
          description: Successfully returned the list of themes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThemeResponse'
              examples:
                Get themes response:
                  $ref: '#/components/examples/ListThemesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
  /api/v1/brands/{brandId}/themes/{themeId}:
    get:
      summary: Retrieve a theme
      description: Retrieves a theme for a brand
      operationId: getBrandTheme
      responses:
        '200':
          description: Successfully retrieved the theme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
              examples:
                Get theme response:
                  $ref: '#/components/examples/GetThemeResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a theme
      description: Replaces a theme for a brand
      operationId: replaceBrandTheme
      x-codegen-request-body-name: theme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThemeRequest'
            examples:
              Update theme request:
                $ref: '#/components/examples/UpdateThemeRequest'
        required: true
      responses:
        '200':
          description: Successfully replaced the theme
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThemeResponse'
              examples:
                Update theme response:
                  $ref: '#/components/examples/UpdateThemeResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
  /api/v1/brands/{brandId}/themes/{themeId}/background-image:
    post:
      summary: Upload the background image
      description: >-
        Uploads and replaces the background image for the theme. The file must
        be in PNG, JPG, or GIF format and less than 2 MB in size.
      operationId: uploadBrandThemeBackgroundImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: >-
                The file must be in PNG, JPG, or GIF format and less than 2 MB
                in size.
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: background image file
      responses:
        '201':
          description: Content Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the background image
      description: Deletes a theme background image
      operationId: deleteBrandThemeBackgroundImage
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
  /api/v1/brands/{brandId}/themes/{themeId}/favicon:
    post:
      summary: Upload the favicon
      description: Uploads and replaces the favicon for the theme
      operationId: uploadBrandThemeFavicon
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              description: >-
                The file must be in PNG or ICO format and have a 1:1 ratio with
                a maximum dimension of 512 x 512
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: favicon file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the favicon
      description: Deletes a theme favicon. The theme will use the default Okta favicon.
      operationId: deleteBrandThemeFavicon
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
  /api/v1/brands/{brandId}/themes/{themeId}/logo:
    post:
      summary: Upload the logo
      description: >-
        Uploads and replaces the logo for the theme. The file must be in PNG,
        JPG, or GIF format and less than 100kB in size. For best results use
        landscape orientation, a transparent background, and a minimum size of
        300px by 50px to prevent upscaling.
      operationId: uploadBrandThemeLogo
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: >-
                The file must be in PNG, JPG, or GIF format and less than 100kB
                in size. For best results use landscape orientation, a
                transparent background, and a minimum size of 300px by 50px to
                prevent upscaling.
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
        description: logo file
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete the logo
      description: Deletes a Theme logo. The theme will use the default Okta logo.
      operationId: deleteBrandThemeLogo
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - Themes
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathThemeId'
  /api/v1/brands/{brandId}/well-known-uris:
    get:
      summary: Retrieve all the well-known URIs
      description: >-
        Retrieves the content from each of the well-known URIs for a specified
        brand
      operationId: getAllWellKnownURIs
      responses:
        '200':
          description: Successfully retrieved all the well-known URIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellKnownURIsRoot'
              examples:
                Retrieve all URIs response:
                  $ref: '#/components/examples/WellKnownURIsRootResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - AssociatedDomainCustomizations
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/queryExpandWellKnownUris'
  /api/v1/brands/{brandId}/well-known-uris/{path}:
    get:
      summary: Retrieve the well-known URI of a specific brand
      description: Retrieves the well-known URI of a specific brand and well-known URI path
      operationId: getRootBrandWellKnownURI
      responses:
        '200':
          description: Successfully retrieved the well-known URI
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellKnownURIObjectResponse'
              examples:
                Retrieve well-known URI of a specific brand:
                  $ref: '#/components/examples/WellKnownURIRootResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Invalid path:
                  $ref: '#/components/examples/ErrorInvalidWellKnownPath'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - AssociatedDomainCustomizations
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathWellKnownUriPath'
      - $ref: '#/components/parameters/queryExpandWellKnownUri'
  /api/v1/brands/{brandId}/well-known-uris/{path}/customized:
    get:
      summary: Retrieve the customized content of the specified well-known URI
      description: >-
        Retrieves the customized content of a well-known URI for a specific
        brand and well-known URI path
      operationId: getBrandWellKnownURI
      responses:
        '200':
          description: Successfully retrieved the customized well-known URI content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellKnownURIObjectResponse'
              examples:
                Retrieve the customized well-known URI:
                  $ref: '#/components/examples/WellKnownURIResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Invalid path:
                  $ref: '#/components/examples/ErrorInvalidWellKnownPath'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.read
      tags:
        - AssociatedDomainCustomizations
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    put:
      summary: Replace the customized well-known URI of the specific path
      description: >-
        Replaces the content of a customized well-known URI that you specify.


        There are endpoint-specific format requirements when you update the
        content of a customized well-known URI. See [Customize associated
        domains](https://developer.okta.com/docs/guides/custom-well-known-uri/main/).
      operationId: replaceBrandWellKnownURI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WellKnownURIRequest'
            examples:
              Update well-known URI request:
                $ref: '#/components/examples/UpdateWellKnownURIRequest'
      responses:
        '200':
          description: Successfully updated the well-known URI of the specified path
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WellKnownURIObjectResponse'
              examples:
                Update well-known URI response:
                  $ref: '#/components/examples/WellKnownURIResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Invalid path:
                  $ref: '#/components/examples/ErrorInvalidWellKnownPath'
                apple-app-site-association representation contains authsrv:
                  $ref: >-
                    #/components/examples/InvalidWellKnownAppleAppSiteRepresentationError
                webauthn representation doesn't contain origins:
                  $ref: >-
                    #/components/examples/InvalidWellKnownWebauthnRepresentationError
                webauthn representation origins is not string array:
                  $ref: >-
                    #/components/examples/InvalidWellKnownWebauthnRepresentationOriginStringError
                Invalid content type for apple-app-site-association and webauthn:
                  $ref: '#/components/examples/InvalidWellKnownJsonTypeError'
                Invalid content type for assetlinks.json:
                  $ref: '#/components/examples/InvalidWellKnownArrayTypeError'
                Cannot update well-known URI for default brand:
                  $ref: >-
                    #/components/examples/CannotUpdateWellKnownUriForDefaultBrandError
                size limit exceeded:
                  $ref: >-
                    #/components/examples/WellKnownRepresentationSizeLimitExceededError
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.brands.manage
      tags:
        - AssociatedDomainCustomizations
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathBrandId'
      - $ref: '#/components/parameters/pathWellKnownUriPath'
components:
  schemas:
    BrandWithEmbedded:
      allOf:
        - $ref: '#/components/schemas/Brand'
      type: object
      properties:
        _embedded:
          type: object
          properties:
            themes:
              type: array
              items:
                $ref: '#/components/schemas/ThemeResponse'
            domains:
              items:
                $ref: '#/components/schemas/DomainResponse'
              type: array
            emailDomain:
              $ref: '#/components/schemas/EmailDomainResponse'
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                themes:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    CreateBrandRequest:
      title: CreateBrandRequest
      type: object
      properties:
        name:
          type: string
          description: The name of the Brand
      required:
        - name
    Brand:
      type: object
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
          description: >-
            Consent for updating the custom privacy URL. Not required when
            resetting the URL.
        customPrivacyPolicyUrl:
          type: string
          description: Custom privacy policy URL
          default: null
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          type: string
          description: The ID of the email domain
        id:
          readOnly: true
          type: string
          description: The Brand ID
        isDefault:
          readOnly: true
          type: boolean
          description: If `true`, the Brand is used for the Okta subdomain
        locale:
          $ref: '#/components/schemas/Language'
        name:
          type: string
          description: The name of the Brand
        removePoweredByOkta:
          type: boolean
          default: false
          description: >-
            Removes "Powered by Okta" from the sign-in page in redirect
            authentication deployments, and "© [current year] Okta, Inc." from
            the Okta End-User Dashboard
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    BrandRequest:
      type: object
      properties:
        agreeToCustomPrivacyPolicy:
          type: boolean
          description: >-
            Consent for updating the custom privacy URL. Not required when
            resetting the URL.
        customPrivacyPolicyUrl:
          type: string
          description: Custom privacy policy URL
        defaultApp:
          $ref: '#/components/schemas/DefaultApp'
        emailDomainId:
          type: string
          description: The ID of the email domain
        locale:
          $ref: '#/components/schemas/Language'
        name:
          type: string
          description: The name of the Brand
        removePoweredByOkta:
          type: boolean
          default: false
          description: >-
            Removes "Powered by Okta" from the sign-in page in redirect
            authentication deployments, and "© [current year] Okta, Inc." from
            the Okta End-User Dashboard
      required:
        - name
    BrandDomains:
      title: BrandDomains
      items:
        $ref: '#/components/schemas/DomainResponse'
      type: array
    PageRoot:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            default:
              $ref: '#/components/schemas/CustomizablePage'
            customized:
              $ref: '#/components/schemas/CustomizablePage'
            customizedUrl:
              type: string
              format: uri
            preview:
              $ref: '#/components/schemas/CustomizablePage'
            previewUrl:
              type: string
              format: uri
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                default:
                  $ref: '#/components/schemas/HrefObject'
                customized:
                  $ref: '#/components/schemas/HrefObject'
                preview:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    ErrorPage:
      allOf:
        - $ref: '#/components/schemas/CustomizablePage'
        - type: object
          properties:
            contentSecurityPolicySetting:
              $ref: '#/components/schemas/ContentSecurityPolicySetting'
    SignInPage:
      allOf:
        - $ref: '#/components/schemas/CustomizablePage'
        - type: object
          properties:
            contentSecurityPolicySetting:
              $ref: '#/components/schemas/ContentSecurityPolicySetting'
            widgetCustomizations:
              type: object
              properties:
                signInLabel:
                  type: string
                  description: The label for the sign in widget
                usernameLabel:
                  type: string
                  description: The label for the username field
                usernameInfoTip:
                  type: string
                  description: The label for the username information tip
                passwordLabel:
                  type: string
                  description: The label for the password field
                passwordInfoTip:
                  type: string
                  description: The label for the password information tip
                showPasswordVisibilityToggle:
                  type: boolean
                  description: Allows users to see their passwords as they type
                showUserIdentifier:
                  type: boolean
                  description: >-
                    Allows the user's identifier to appear on authentication and
                    enrollment pages
                forgotPasswordLabel:
                  type: string
                  description: The label for the forgot password page
                forgotPasswordUrl:
                  type: string
                  description: The forgot password URL
                unlockAccountLabel:
                  type: string
                  description: The label for the unlock account link
                unlockAccountUrl:
                  type: string
                  description: The unlock account URL
                helpLabel:
                  type: string
                  description: The label for the help link
                helpUrl:
                  type: string
                  description: The help link URL
                customLink1Label:
                  type: string
                  description: The label for the first custom link
                customLink1Url:
                  type: string
                  description: The URL for the first custom link
                customLink2Label:
                  type: string
                  description: The label for the second custom link
                customLink2Url:
                  type: string
                  description: The URL for the second custom link
                authenticatorPageCustomLinkLabel:
                  type: string
                  description: The label for the authenticator page custom link
                authenticatorPageCustomLinkUrl:
                  type: string
                  description: The URL for the authenticator page custom link
                classicRecoveryFlowEmailOrUsernameLabel:
                  type: string
                  description: >-
                    The label for the username field in the classic recovery
                    flow
                widgetGeneration:
                  $ref: '#/components/schemas/WidgetGeneration'
                postAuthKeepMeSignedInPrompt:
                  $ref: '#/components/schemas/PostAuthKeepMeSignedInPrompt'
                classicFooterHelpTitle:
                  type: string
                  description: >-
                    The title of the footer link on the sign-in page. Only
                    applicable for Classic Engine orgs.
            widgetVersion:
              $ref: '#/components/schemas/Version'
    HostedPage:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/HostedPageType'
        url:
          type: string
      required:
        - type
    EmailTemplateResponse:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: The name of this email template
        _embedded:
          type: object
          properties:
            settings:
              $ref: '#/components/schemas/EmailSettingsResponse'
            customizationCount:
              type: integer
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                settings:
                  $ref: '#/components/schemas/HrefObject'
                defaultContent:
                  $ref: '#/components/schemas/HrefObject'
                customizations:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    EmailCustomization:
      allOf:
        - $ref: '#/components/schemas/EmailContent'
        - type: object
          properties:
            created:
              type: string
              format: date-time
              readOnly: true
              description: The UTC time at which this email customization was created.
            id:
              type: string
              readOnly: true
              description: A unique identifier for this email customization
            isDefault:
              type: boolean
              description: >-
                Whether this is the default customization for the email
                template. Each customized email template must have exactly one
                default customization. Defaults to `true` for the first
                customization and `false` thereafter.
            language:
              $ref: '#/components/schemas/Language'
            lastUpdated:
              type: string
              format: date-time
              readOnly: true
              description: The UTC time at which this email customization was last updated.
            _links:
              allOf:
                - $ref: '#/components/schemas/LinksSelf'
                - properties:
                    self:
                      $ref: '#/components/schemas/HrefObject'
                    template:
                      $ref: '#/components/schemas/HrefObject'
                    preview:
                      $ref: '#/components/schemas/HrefObject'
                    test:
                      $ref: '#/components/schemas/HrefObject'
                  type: object
          required:
            - language
    EmailPreview:
      type: object
      properties:
        body:
          type: string
          readOnly: true
          description: The email's HTML body
        subject:
          type: string
          readOnly: true
          description: The email's subject
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                contentSource:
                  $ref: '#/components/schemas/HrefObject'
                template:
                  $ref: '#/components/schemas/HrefObject'
                test:
                  $ref: '#/components/schemas/HrefObject'
                defaultContent:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    EmailDefaultContent:
      allOf:
        - $ref: '#/components/schemas/EmailContent'
        - type: object
          properties:
            _links:
              type: object
              allOf:
                - $ref: '#/components/schemas/LinksSelf'
                - properties:
                    template:
                      $ref: '#/components/schemas/HrefObject'
                    preview:
                      $ref: '#/components/schemas/HrefObject'
                    test:
                      $ref: '#/components/schemas/HrefObject'
                  type: object
    EmailSettingsResponse:
      type: object
      properties:
        recipients:
          type: string
          enum:
            - ALL_USERS
            - ADMINS_ONLY
            - NO_USERS
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                self:
                  $ref: '#/components/schemas/HrefObject'
                template:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    EmailSettings:
      type: object
      properties:
        recipients:
          type: string
          enum:
            - ALL_USERS
            - ADMINS_ONLY
            - NO_USERS
      required:
        - recipients
    Error409:
      description: Conflict error object
      type: object
      properties:
        errorCauses:
          type: array
          description: >-
            Another request has already been received for the settings for this
            email template
          readOnly: true
        errorCode:
          type: string
          description: E0000254
          readOnly: true
        errorId:
          type: string
          description: sampleH3iLB6bpBcbnV9E09Fy
          readOnly: true
        errorLink:
          type: string
          description: E0000254
          readOnly: true
        errorSummary:
          type: string
          description: >-
            Another request has already been received for the settings for this
            email template
          readOnly: true
    ThemeResponse:
      type: object
      properties:
        backgroundImage:
          readOnly: true
          type: string
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        favicon:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        loadingPageTouchPointVariant:
          $ref: '#/components/schemas/LoadingPageTouchPointVariant'
        logo:
          readOnly: true
          type: string
        primaryColorContrastHex:
          type: string
          description: Primary color contrast hex code
        primaryColorHex:
          type: string
          description: Primary color hex code
        secondaryColorContrastHex:
          type: string
          description: Secondary color contrast hex code
        secondaryColorHex:
          type: string
          description: Secondary color hex code
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    UpdateThemeRequest:
      type: object
      properties:
        emailTemplateTouchPointVariant:
          $ref: '#/components/schemas/EmailTemplateTouchPointVariant'
        endUserDashboardTouchPointVariant:
          $ref: '#/components/schemas/EndUserDashboardTouchPointVariant'
        errorPageTouchPointVariant:
          $ref: '#/components/schemas/ErrorPageTouchPointVariant'
        loadingPageTouchPointVariant:
          $ref: '#/components/schemas/LoadingPageTouchPointVariant'
        primaryColorContrastHex:
          type: string
          description: Primary color contrast hex code
          default: null
        primaryColorHex:
          type: string
          description: Primary color hex code
          default: null
        secondaryColorContrastHex:
          type: string
          description: Secondary color contrast hex code
          default: null
        secondaryColorHex:
          type: string
          description: Secondary color hex code
          default: null
        signInPageTouchPointVariant:
          $ref: '#/components/schemas/SignInPageTouchPointVariant'
        _links:
          $ref: '#/components/schemas/LinksSelf'
      required:
        - primaryColorHex
        - secondaryColorHex
        - signInPageTouchPointVariant
        - endUserDashboardTouchPointVariant
        - errorPageTouchPointVariant
        - emailTemplateTouchPointVariant
    ImageUploadResponse:
      type: object
      properties:
        url:
          readOnly: true
          type: string
    WellKnownURIsRoot:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            apple-app-site-association:
              type: object
              description: Contains the customized well-known URI content and links
              properties:
                customized:
                  $ref: '#/components/schemas/WellKnownURIObjectResponse'
            assetlinks.json:
              type: object
              description: Contains the customized well-known URI content and links
              properties:
                customized:
                  $ref: '#/components/schemas/WellKnownURIArrayResponse'
            webauthn:
              type: object
              description: Contains the customized well-known URI content and links
              properties:
                customized:
                  $ref: '#/components/schemas/WellKnownURIObjectResponse'
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                apple-app-site-association:
                  $ref: '#/components/schemas/HrefObject'
                assetlinks.json:
                  $ref: '#/components/schemas/HrefObject'
                webauthn:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    WellKnownURIObjectResponse:
      type: object
      properties:
        representation:
          type: object
          description: The well-known URI content in JSON format
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                self:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    WellKnownURIRequest:
      type: object
      properties:
        representation:
          type: object
          description: The well-known URI content in JSON object format
      required:
        - representation
    DomainResponse:
      description: The properties that define an individual domain.
      type: object
      properties:
        brandId:
          description: The ID number of the brand
          type: string
          example: bndul904tTZ6kWVhP0g3
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          type: array
          items:
            $ref: '#/components/schemas/DNSRecord'
        domain:
          description: Custom domain name
          type: string
          example: login.example.com
        id:
          description: Unique ID of the domain
          type: string
          example: OcDz6iRyjkaCTXkdo0g3
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
        _links:
          $ref: '#/components/schemas/DomainLinks'
    EmailDomainResponse:
      allOf:
        - $ref: '#/components/schemas/BaseEmailDomain'
      type: object
      properties:
        dnsValidationRecords:
          type: array
          items:
            $ref: '#/components/schemas/EmailDomainDNSRecord'
        domain:
          type: string
        id:
          type: string
        validationStatus:
          $ref: '#/components/schemas/EmailDomainStatus'
        validationSubdomain:
          type: string
          description: The subdomain for the email sender's custom mail domain
          default: mail
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    DefaultApp:
      type: object
      properties:
        appInstanceId:
          type: string
          description: ID for the App instance
        appLinkName:
          type: string
          description: Name for the app instance
        classicApplicationUri:
          type: string
          description: Application URI for classic Orgs
    Language:
      description: >-
        The language specified as an [IETF BCP 47 language
        tag](https://datatracker.ietf.org/doc/html/rfc5646)
      type: string
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    CustomizablePage:
      type: object
      properties:
        pageContent:
          type: string
          description: The HTML for the page
    ContentSecurityPolicySetting:
      type: object
      properties:
        mode:
          type: string
          enum:
            - enforced
            - report_only
        reportUri:
          type: string
        srcList:
          type: array
          items:
            type: string
    WidgetGeneration:
      description: The generation of the Sign-in Widget
      type: string
      enum:
        - G2
        - G3
    PostAuthKeepMeSignedInPrompt:
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
      type: object
      properties:
        acceptButtonText:
          type: string
          description: The label on the accept button when prompting for Stay signed in
        rejectButtonText:
          type: string
          description: The label on the reject button when prompting for Stay signed in
        subtitle:
          type: string
          description: The subtitle on the Sign-In Widget when prompting for Stay signed in
        title:
          type: string
          description: The title on the Sign-In Widget when prompting for Stay signed in
    Version:
      description: The version specified as a [Semantic Version](https://semver.org/).
      type: string
      pattern: >-
        ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
    HostedPageType:
      type: string
      enum:
        - EXTERNALLY_HOSTED
        - OKTA_DEFAULT
    EmailContent:
      type: object
      properties:
        body:
          type: string
          description: >
            The HTML body of the email. May contain [variable
            references](https://velocity.apache.org/engine/1.7/user-guide.html#references). 


            <x-lifecycle class="ea"></x-lifecycle> Not required if Custom
            languages for Okta Email Templates is enabled. A `null` body is
            replaced with a default value from one of the following in priority
            order:


            1. An existing default email customization, if one exists

            2. Okta-provided translated content for the specified language, if
            one exists

            3. Okta-provided translated content for the brand locale, if it's
            set 

            4. Okta-provided content in English
        subject:
          type: string
          description: >
            The email subject. May contain [variable
            references](https://velocity.apache.org/engine/1.7/user-guide.html#references).


            <x-lifecycle class="ea"></x-lifecycle> Not required if Custom
            languages for Okta Email Templates is enabled. A `null` subject is
            replaced with a default value from one of the following in priority
            order:


            1. An existing default email customization, if one exists

            2. Okta-provided translated content for the specified language, if
            one exists

            3. Okta-provided translated content for the brand locale, if it's
            set

            4. Okta-provided content in English
      required:
        - subject
        - body
    EmailTemplateTouchPointVariant:
      description: >
        Variant for email templates. You can publish a theme for email templates
        with different combinations of assets. Variants are preset combinations
        of those assets.
      default: OKTA_DEFAULT
      type: string
      enum:
        - FULL_THEME
        - OKTA_DEFAULT
      x-enumDescriptions:
        FULL_THEME: Uses the Okta logo and Okta colors in email templates
        OKTA_DEFAULT: >-
          Uses the logo from the theme. Uses `primaryColorHex` as the background
          color for buttons.
    EndUserDashboardTouchPointVariant:
      description: >
        Variant for the Okta End-User Dashboard. You can publish a theme for
        end-user dashboard with different combinations of assets. Variants are
        preset combinations of those assets.
      default: OKTA_DEFAULT
      type: string
      enum:
        - FULL_THEME
        - LOGO_ON_FULL_WHITE_BACKGROUND
        - OKTA_DEFAULT
        - WHITE_LOGO_BACKGROUND
      x-enumDescriptions:
        FULL_THEME: >-
          Uses the logo and favicon from the theme. Uses `primaryColorHex` for
          the logo and the side navigation bar background color.
        LOGO_ON_FULL_WHITE_BACKGROUND: >-
          Uses the logo and favicon from the theme. Uses white background color
          for the logo and the side navigation bar background color.
        OKTA_DEFAULT: >-
          Uses the Okta logo and favicon. Uses a white background color for the
          logo and the side navigation bar background color.
        WHITE_LOGO_BACKGROUND: >-
          Uses the logo and favicon from the theme, with a white background
          color for the logo. Uses `primaryColorHex` for the side navigation bar
          background color.
    ErrorPageTouchPointVariant:
      description: >
        Variant for the error page. You can publish a theme for error page with
        different combinations of assets. Variants are preset combinations of
        those assets.
      default: OKTA_DEFAULT
      type: string
      enum:
        - BACKGROUND_IMAGE
        - BACKGROUND_SECONDARY_COLOR
        - OKTA_DEFAULT
      x-enumDescriptions:
        BACKGROUND_IMAGE: Uses the logo, favicon, and background image from the theme
        BACKGROUND_SECONDARY_COLOR: >-
          Uses the logo and favicon from the theme. Uses `secondaryColorHex` as
          the background color for the error page.
        OKTA_DEFAULT: Uses the Okta logo, favicon, and background color
    LoadingPageTouchPointVariant:
      description: >
        Variant for the Okta loading page. You can publish a theme for Okta
        loading page with different combinations of assets. Variants are preset
        combinations of those assets.
      default: OKTA_DEFAULT
      type: string
      enum:
        - NONE
        - OKTA_DEFAULT
      x-enumDescriptions:
        NONE: Uses no loading page animation during the redirect
        OKTA_DEFAULT: Uses the default Okta loading page animation during the redirect
    SignInPageTouchPointVariant:
      description: >
        Variant for the Okta sign-in page. You can publish a theme for sign-in
        page with different combinations of assets. Variants are preset
        combinations of those assets.

        > **Note:**  For a non-`OKTA_DEFAULT` variant, `primaryColorHex` is used
        for button background color and `primaryColorContrastHex` is used to
        optimize the opacity for button text.
      type: string
      enum:
        - BACKGROUND_IMAGE
        - BACKGROUND_SECONDARY_COLOR
        - OKTA_DEFAULT
      x-enumDescriptions:
        BACKGROUND_IMAGE: Uses the logo, favicon, and background image from the theme
        BACKGROUND_SECONDARY_COLOR: >-
          Uses the logo and favicon from the theme. Uses `secondaryColorHex` as
          the background color for the Okta sign-in page.
        OKTA_DEFAULT: >-
          Uses the Okta logo and favicon with no background image. Uses the Okta
          colors on the Okta sign-in page.
    WellKnownURIArrayResponse:
      type: object
      properties:
        representation:
          type: array
          description: The well-known URI content in a JSON array of objects format
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                self:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    DomainCertificateSourceType:
      description: >-
        Certificate source type that indicates whether the certificate is
        provided by the user or Okta.
      type: string
      enum:
        - MANUAL
        - OKTA_MANAGED
    DNSRecord:
      description: DNS TXT and CNAME records to be registered for the Domain
      type: object
      properties:
        expiration:
          description: DNS TXT record expiration
          type: string
        fqdn:
          description: DNS record name
          type: string
          example: _oktaverification.login.example.com
        recordType:
          $ref: '#/components/schemas/DNSRecordType'
        values:
          description: DNS record value
          type: array
          items:
            type: string
          example:
            - 79496f234c814638b1cc44f51a782781
    DomainCertificateMetadata:
      description: Certificate metadata for the domain
      type: object
      properties:
        expiration:
          description: Certificate expiration
          type: string
          example: '2021-05-11T05:13:05.000Z'
        fingerprint:
          description: Certificate fingerprint
          type: string
          example: >-
            73:68:82:7B:83:2E:48:29:A5:5E:E8:40:41:80:B3:AA:03:C4:42:43:05:73:45:BC:AA:47:00:23:A3:70:E5:C4
        subject:
          description: Certificate subject
          type: string
          example: CN=login.example.com
    DomainValidationStatus:
      description: Status of the domain
      example: VERIFIED
      type: string
      enum:
        - COMPLETED
        - IN_PROGRESS
        - NOT_STARTED
        - VERIFIED
    DomainLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            brand:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The associated brand
            certificate:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The certificate link references the domain certificate
            verify:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: >-
                    The verify link verifies the domain and transitions the
                    domain status to `VERIFIED`
    BaseEmailDomain:
      type: object
      properties:
        displayName:
          type: string
        userName:
          type: string
      required:
        - displayName
        - userName
    EmailDomainDNSRecord:
      type: object
      properties:
        fqdn:
          type: string
        recordType:
          $ref: '#/components/schemas/EmailDomainDNSRecordType'
        verificationValue:
          type: string
    EmailDomainStatus:
      type: string
      enum:
        - DELETED
        - ERROR
        - NOT_STARTED
        - POLLING
        - VERIFIED
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    DNSRecordType:
      example: TXT
      type: string
      enum:
        - CNAME
        - TXT
    EmailDomainDNSRecordType:
      type: string
      enum:
        - CNAME
        - TXT
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    queryExpandBrand:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - themes
            - domains
            - emailDomain
      description: Specifies additional metadata to be included in the response
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    queryFilter:
      name: q
      in: query
      description: Searches the records for matching value
      schema:
        type: string
    pathBrandId:
      name: brandId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the brand
    queryExpandPageRoot:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - default
            - customized
            - customizedUrl
            - preview
            - previewUrl
      description: Specifies additional metadata to be included in the response
    queryExpandEmailTemplate:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - settings
            - customizationCount
      description: Specifies additional metadata to be included in the response
    pathTemplateName:
      name: templateName
      in: path
      required: true
      schema:
        type: string
      description: The name of the email template
    pathCustomizationId:
      name: customizationId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the email customization
    queryLanguage:
      name: language
      schema:
        $ref: '#/components/schemas/Language'
      in: query
      description: >-
        The language to use for the email. Defaults to the current user's
        language if unspecified.
    pathThemeId:
      name: themeId
      in: path
      required: true
      schema:
        type: string
      description: The ID of the theme
    queryExpandWellKnownUris:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - all
            - apple-app-site-association
            - assetlinks.json
            - webauthn
      description: Specifies additional metadata to include in the response
    pathWellKnownUriPath:
      name: path
      in: path
      required: true
      schema:
        type: string
        enum:
          - apple-app-site-association
          - assetlinks.json
          - webauthn
      description: The path of the well-known URI
    queryExpandWellKnownUri:
      name: expand
      in: query
      style: form
      explode: false
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
            - customized
      description: Specifies additional metadata to include in the response
  examples:
    ListBrandsResponse:
      value:
        - id: bnd114iNkrcN6aR680g4
          name: Okta Default
          isDefault: true
          agreeToCustomPrivacyPolicy: false
          removePoweredByOkta: false
          customPrivacyPolicyUrl: null
          locale: en
          emailDomainId: OeD114iNkrcN6aR680g4
          defaultApp:
            appInstanceId: 0oa114iNkrcN6aR680g4
            appLinkName: null
            classicApplicationUri: null
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            themes:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes
              hints:
                allow:
                  - GET
            emailDomain:
              href: >-
                https://{yourOktaDomain}/api/v1/email-domains/OeD114iNkrcN6aR680g4
              hints:
                allow:
                  - GET
                  - PUT
    CreateBrandRequest:
      value:
        name: My Awesome Brand
    CreateBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g5
        removePoweredByOkta: false
        customPrivacyPolicyUrl: null,
        agreeToCustomPrivacyPolicy: false,
        name: My Awesome Brand
        locale: en
        defaultApp:
          appInstanceId: null
          appLinkName: null
          classicApplicationUri: null
        isDefault: false
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          themes:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g5/themes
            hints:
              allow:
                - GET
    ErrorCreateBrandExists:
      value:
        errorCode: E0000202
        errorSummary: Brand name already exists.
        errorLink: E0000202
        errorId: oaeKABuesTdRvCXeCTpSpXAcQ
        errorCauses: []
    GetBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g4
        agreeToCustomPrivacyPolicy: false
        removePoweredByOkta: false
        customPrivacyPolicyUrl: null
        name: Okta Default
        isDefault: true
        locale: en
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          themes:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes
            hints:
              allow:
                - GET
          emailDomain:
            href: https://{yourOktaDomain}/api/v1/email-domains/OeD114iNkrcN6aR680g4
            hints:
              allow:
                - GET
                - PUT
    UpdateBrandRequest:
      value:
        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy
        agreeToCustomPrivacyPolicy: true
        removePoweredByOkta: true
        name: New Name For Brand
        emailDomainId: OeD114iNkrcN6aR680g4
        locale: en
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
    UpdateBrandResponse:
      value:
        id: bnd114iNkrcN6aR680g4
        removePoweredByOkta: true
        agreeToCustomPrivacyPolicy: true
        name: New Name For Brand
        isDefault: true
        customPrivacyPolicyUrl: https://www.someHost.com/privacy-policy
        emailDomainId: OeD114iNkrcN6aR680g4
        defaultApp:
          appInstanceId: 0oa114iNkrcN6aR680g4
          appLinkName: null
          classicApplicationUri: null
        locale: en
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          themes:
            href: https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/themes
            hints:
              allow:
                - GET
          emailDomain:
            href: https://{yourOktaDomain}/api/v1/email-domains/OeD114iNkrcN6aR680g4
            hints:
              allow:
                - GET
                - PUT
    ErrorDeleteDefaultBrand:
      value:
        errorCode: E0000200
        errorSummary: A default brand cannot be deleted
        errorLink: E0000200
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ErrorDeleteBrandAssociatedWithDomain:
      value:
        errorCode: E0000201
        errorSummary: A brand associated with a domain cannot be deleted
        errorLink: E0000201
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    ListEmailTemplateResponse:
      value:
        - name: UserActivation
          _embedded:
            customizationCount: 0
            settings:
              recipients: ALL_USERS
              _links:
                self:
                  href: >-
                    https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
                  hints:
                    allow:
                      - GET
                      - PUT
                template:
                  href: >-
                    https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
                  hints:
                    allow:
                      - GET
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
              hints:
                allow:
                  - GET
            settings:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
              hints:
                allow:
                  - GET
                  - PUT
            defaultContent:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content
              hints:
                allow:
                  - GET
            customizations:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations
              hints:
                allow:
                  - GET
                  - POST
                  - DELETE
            test:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
              hints:
                allow:
                  - POST
    GetEmailTemplateResponse:
      value:
        name: UserActivation
        _embedded:
          customizationCount: 0
          settings:
            recipients: ALL_USERS
            _links:
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
                hints:
                  allow:
                    - GET
                    - PUT
              template:
                href: >-
                  https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
                hints:
                  allow:
                    - GET
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          settings:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
            hints:
              allow:
                - GET
                - PUT
          defaultContent:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content
            hints:
              allow:
                - GET
          customizations:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations
            hints:
              allow:
                - GET
                - POST
                - DELETE
          test:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    ListEmailCustomizationResponse:
      value:
        - language: en
          isDefault: true
          subject: Welcome to ${org.name}!
          body: >-
            <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}.
            Click <a href="${activationLink}">here</a> to activate your
            account.</body></html>
          id: oel11u6DqUiMbQkpl0g4
          created: '2021-11-09T20:38:10.000Z'
          lastUpdated: '2021-11-11T20:38:10.000Z'
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
              hints:
                allow:
                  - GET
                  - PUT
                  - DELETE
            template:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
              hints:
                allow:
                  - GET
            preview:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
              hints:
                allow:
                  - GET
            test:
              href: >-
                https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
              hints:
                allow:
                  - POST
    CreateUpdateEmailCustomizationRequest:
      value:
        language: fr
        subject: Bienvenue dans ${org.name}!
        body: >-
          <!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a
          href="${activationLink}">Activer le compte</a></p></body></html>
        isDefault: false
    CreateUpdateEmailCustomizationResponse:
      value:
        language: fr
        subject: Bienvenue dans ${org.name}!
        body: >-
          <!DOCTYPE html><html><body><p>Bonjour ${user.profile.firstName}. <a
          href="${activationLink}">Activer le compte</a></p></body></html>
        isDefault: false
        id: oel11u6DqUiMbQkpl0g4
        created: '2021-11-09T20:38:10.000Z'
        lastUpdated: '2021-11-11T20:38:10.000Z'
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          template:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
                - GET
          test:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    ErrorEmailCustomizationDefaultAlreadyExists:
      value:
        errorCode: E0000182
        errorSummary: A default email template customization already exists.
        errorLink: E0000182
        errorId: oaeXYwTiMvASsC3O4HCzjFaCA
        errorCauses: []
    ErrorEmailCustomizationLanguageAlreadyExists:
      value:
        errorCode: E0000183
        errorSummary: An email template customization for that language already exists.
        errorLink: E0000183
        errorId: oaeUcGELffqRay0u1OPdnPypw
        errorCauses: []
    EmailCustomizationResponse:
      value:
        language: en
        isDefault: true
        subject: Welcome to ${org.name}!
        body: >-
          <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click
          <a href="${activationLink}">here</a> to activate your
          account.</body></html>
        id: oel11u6DqUiMbQkpl0g4
        created: '2021-11-09T20:38:10.000Z'
        lastUpdated: '2021-11-11T20:38:10.000Z'
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4
            hints:
              allow:
                - GET
                - PUT
                - DELETE
          template:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel11u6DqUiMbQkpl0g4/preview
            hints:
              allow:
                - GET
          test:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    ErrorEmailCustomizationCannotClearDefault:
      value:
        errorCode: E0000185
        errorSummary: >-
          The isDefault parameter of the default email template customization
          can't be set to false.
        errorLink: E0000185
        errorId: oaejrB1fWL1S7mc-2KcG-SOtw
        errorCauses: []
    ErrorEmailCustomizationCannotDeleteDefault:
      value:
        errorCode: E0000184
        errorSummary: A default email template customization can't be deleted.
        errorLink: E0000184
        errorId: oaeAdRqprFuTyKokyYPbURJkA
        errorCauses: []
    PreviewEmailCustomizationResponse:
      value:
        subject: Welcome to Okta!
        body: >-
          <!DOCTYPE html><html><body><p>Hello, John. Click <a
          href="https://{yourOktaDomain}/...">here</a> to activate your
          account.</body></html>
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/customizations/oel2kk1zYJBJbeaGo0g4/preview
            hints:
              allow:
                - GET
          template:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          test:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test
            hints:
              allow:
                - POST
    EmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to ${org.name}!
        body: >-
          <!DOCTYPE html><html><body><p>Hello, ${user.profile.firstName}. Click
          <a href="${activationLink}">here</a> to activate your
          account.</body></html>
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content
            hints:
              allow:
                - GET
          template:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          preview:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview
            hints:
              allow:
                - GET
    PreviewEmailTemplateDefaultContentResponse:
      value:
        subject: Welcome to Okta!
        body: >-
          <!DOCTYPE html><html><body><p>Hello, John. Click <a
          href="https://{yourOktaDomain}/...">here</a> to activate your
          account.</body></html>
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/default-content/preview
            hints:
              allow:
                - GET
          template:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
          defaultContent:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/test/default-content
            hints:
              allow:
                - POST
    EmailSettingsResponse:
      value:
        recipients: ALL_USERS
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation/settings
            hints:
              allow:
                - GET
                - PUT
          template:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/{brandId}/templates/email/UserActivation
            hints:
              allow:
                - GET
    ErrorEmailSettingsRaceCondition:
      value:
        errorCode: E0000254
        errorSummary: >-
          Another request has already been received for the settings for this
          email template. Please try again later.
        errorLink: E0000254
        errorId: oaeUcGELffqRay0u1OPdnPypw
        errorCauses: []
    ErrorInvalidEmailTemplateRecipients:
      value:
        errorCode: E0000189
        errorSummary: This template does not support the recipients value.
        errorLink: E0000189
        errorId: oae8L1-UkcNTeGi5xVQ28_lww
        errorCauses: []
    ListThemesResponse:
      value:
        - id: thdul904tTZ6kWVhP0g3
          logo: >-
            https://{yourOktaDomain}/assets/img/logos/okta-logo.47066819ac7db5c13f4c431b2687cef6.png
          favicon: https://{yourOktaDomain}/favicon.ico
          backgroundImage: null
          primaryColorHex: '#1662dd'
          primaryColorContrastHex: '#000000'
          secondaryColorHex: '#ebebed'
          secondaryColorContrastHex: '#000000'
          signInPageTouchPointVariant: OKTA_DEFAULT
          endUserDashboardTouchPointVariant: OKTA_DEFAULT
          errorPageTouchPointVariant: OKTA_DEFAULT
          emailTemplateTouchPointVariant: OKTA_DEFAULT
          loadingPageTouchPointVariant: OKTA_DEFAULT
    GetThemeResponse:
      value:
        id: thdul904tTZ6kWVhP0g3
        logo: >-
          https://{yourOktaDomain}/assets/img/logos/okta-logo.47066819ac7db5c13f4c431b2687cef6.png
        favicon: https://{yourOktaDomain}/favicon.ico
        backgroundImage: null
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    UpdateThemeRequest:
      value:
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    UpdateThemeResponse:
      value:
        id: thdul904tTZ6kWVhP0g3
        logo: >-
          https://{yourOktaDomain}/assets/img/logos/okta-logo.47066819ac7db5c13f4c431b2687cef6.png
        favicon: https://{yourOktaDomain}/favicon.ico
        backgroundImage: null
        primaryColorHex: '#1662dd'
        primaryColorContrastHex: '#000000'
        secondaryColorHex: '#ebebed'
        secondaryColorContrastHex: '#000000'
        signInPageTouchPointVariant: OKTA_DEFAULT
        endUserDashboardTouchPointVariant: OKTA_DEFAULT
        errorPageTouchPointVariant: OKTA_DEFAULT
        emailTemplateTouchPointVariant: OKTA_DEFAULT
        loadingPageTouchPointVariant: OKTA_DEFAULT
    WellKnownURIsRootResponse:
      value:
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris
            hints:
              allow:
                - GET
          apple-app-site-association:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/apple-app-site-association
            hints:
              allow:
                - GET
                - PUT
          assetlinks.json:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/assetlinks.json
            hints:
              allow:
                - GET
                - PUT
          webauthn:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/webauthn
            hints:
              allow:
                - GET
                - PUT
        _embedded:
          apple-app-site-association:
            customized:
              representation:
                authsrv:
                  apps:
                    - B7F62B65BN.com.okta.mobile
                    - B7F62B65BN.com.okta.mobile.auth-service-extension
                    - B7F62B65BN.com.okta.authenticator.beta
                    - >-
                      B7F62B65BN.com.okta.authenticator.beta.auth-service-extension
                    - 7WXXBW6Z2Y.com.okta.mobile.internalrelease
                    - >-
                      7WXXBW6Z2Y.com.okta.mobile.internalrelease.auth-service-extension
                  key1: value1
                  key2: value2
                  key3:
                    key3.1: value3.1
              _links:
                self:
                  href: >-
                    https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/apple-app-site-association/customized
                  hints:
                    allow:
                      - GET
                      - PUT
          assetlinks.json:
            customized:
              representation:
                - key1: value1
                  key2: value2
                  key3:
                    key3.1: value3.1
              _links:
                self:
                  href: >-
                    https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/assetlinks.json/customized
                  hints:
                    allow:
                      - GET
                      - PUT
          webauthn:
            customized:
              representation:
                origins:
                  - https://example1.com
              _links:
                self:
                  href: >-
                    https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/webauthn/customized
                  hints:
                    allow:
                      - GET
                      - PUT
    WellKnownURIRootResponse:
      value:
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/apple-app-site-association
            hints:
              allow:
                - GET
          customized:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/apple-app-site-association/customized
            hints:
              allow:
                - GET
                - PUT
    ErrorInvalidWellKnownPath:
      summary: Invalid path
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: request'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: >-
              The specified path is not supported. Valid values:
              [apple-app-site-association, assetlinks.json, webauthn].
    WellKnownURIResponse:
      value:
        representation:
          key1: value1
          key2: value2
          key3:
            key3.1: value3.1
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/brands/bnd114iNkrcN6aR680g4/well-known-uris/apple-app-site-association/customized
            hints:
              allow:
                - GET
                - PUT
    UpdateWellKnownURIRequest:
      value:
        representation:
          key1: value1
          key2: value2
          key3:
            key3.1: value3.1
    InvalidWellKnownAppleAppSiteRepresentationError:
      summary: apple-app-site-association representation contains authsrv
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: representation'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: Content must not include any `authsrv` customization.
    InvalidWellKnownWebauthnRepresentationError:
      summary: webauthn representation doesn't contain origins
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: representation'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: Content must only contain `origins`.
    InvalidWellKnownWebauthnRepresentationOriginStringError:
      summary: webauthn representation - `origins` must be array of strings
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: representation'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: The `origins` must be an array of strings.
    InvalidWellKnownJsonTypeError:
      summary: Invalid content type for apple-app-site-association and webauthn
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: representation'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: Content must be a JSON object.
    InvalidWellKnownArrayTypeError:
      summary: Invalid content type for assetlinks.json
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: representation'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: Content must be a JSON array of objects.
    CannotUpdateWellKnownUriForDefaultBrandError:
      summary: Cannot update well-known URI for default brand
      value:
        errorCode: E0000257
        errorSummary: 'Api validation failed: request'
        errorLink: E0000257
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: Cannot update the content for the default brand.
    WellKnownRepresentationSizeLimitExceededError:
      summary: Size limit exceeded
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: request'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses:
          - errorSummary: Content must be less than 100KB.
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    brands:
      id: okta.brands.brands
      name: brands
      title: Brands
      methods:
        list_brands:
          operation:
            $ref: '#/paths/~1api~1v1~1brands/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_brand:
          operation:
            $ref: '#/paths/~1api~1v1~1brands/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_brand:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_brand:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_brand:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/brands/methods/list_brands'
          - $ref: '#/components/x-stackQL-resources/brands/methods/get_brand'
        insert:
          - $ref: '#/components/x-stackQL-resources/brands/methods/create_brand'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/brands/methods/delete_brand'
        replace:
          - $ref: '#/components/x-stackQL-resources/brands/methods/replace_brand'
    domains:
      id: okta.brands.domains
      name: domains
      title: Domains
      methods:
        list_brand_domains:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1domains/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/domains/methods/list_brand_domains
        insert: []
        update: []
        delete: []
        replace: []
    error_page:
      id: okta.brands.error_page
      name: error_page
      title: Error Page
      methods:
        get_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/error_page/methods/get_error_page'
        insert: []
        update: []
        delete: []
        replace: []
    customized_error_page:
      id: okta.brands.customized_error_page
      name: customized_error_page
      title: Customized Error Page
      methods:
        get_customized_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1customized/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_customized_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1customized/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_customized_error_page:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1customized/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customized_error_page/methods/get_customized_error_page
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/customized_error_page/methods/delete_customized_error_page
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/customized_error_page/methods/replace_customized_error_page
    default_error_page:
      id: okta.brands.default_error_page
      name: default_error_page
      title: Default Error Page
      methods:
        get_default_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1default/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/default_error_page/methods/get_default_error_page
        insert: []
        update: []
        delete: []
        replace: []
    preview_error_page:
      id: okta.brands.preview_error_page
      name: preview_error_page
      title: Preview Error Page
      methods:
        get_preview_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_preview_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_preview_error_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1error~1preview/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/preview_error_page/methods/get_preview_error_page
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/preview_error_page/methods/delete_preview_error_page
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/preview_error_page/methods/replace_preview_error_page
    sign_in_page:
      id: okta.brands.sign_in_page
      name: sign_in_page
      title: Sign In Page
      methods:
        get_sign_in_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_customized_sign_in_page:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1customized/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/sign_in_page/methods/get_sign_in_page
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/sign_in_page/methods/delete_customized_sign_in_page
        replace: []
    customized_sign_in_page:
      id: okta.brands.customized_sign_in_page
      name: customized_sign_in_page
      title: Customized Sign In Page
      methods:
        get_customized_sign_in_page:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1customized/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_customized_sign_in_page:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1customized/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customized_sign_in_page/methods/get_customized_sign_in_page
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/customized_sign_in_page/methods/replace_customized_sign_in_page
    default_sign_in_page:
      id: okta.brands.default_sign_in_page
      name: default_sign_in_page
      title: Default Sign In Page
      methods:
        get_default_sign_in_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1default/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/default_sign_in_page/methods/get_default_sign_in_page
        insert: []
        update: []
        delete: []
        replace: []
    preview_sign_in_page:
      id: okta.brands.preview_sign_in_page
      name: preview_sign_in_page
      title: Preview Sign In Page
      methods:
        get_preview_sign_in_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1preview/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_preview_sign_in_page:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1preview/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_preview_sign_in_page:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1preview/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/preview_sign_in_page/methods/get_preview_sign_in_page
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/preview_sign_in_page/methods/delete_preview_sign_in_page
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/preview_sign_in_page/methods/replace_preview_sign_in_page
    sign_in_widget_versions:
      id: okta.brands.sign_in_widget_versions
      name: sign_in_widget_versions
      title: Sign In Widget Versions
      methods:
        list_all_sign_in_widget_versions:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-in~1widget-versions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/sign_in_widget_versions/methods/list_all_sign_in_widget_versions
        insert: []
        update: []
        delete: []
        replace: []
    sign_out_page_settings:
      id: okta.brands.sign_out_page_settings
      name: sign_out_page_settings
      title: Sign Out Page Settings
      methods:
        get_sign_out_page_settings:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-out~1customized/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_sign_out_page_settings:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1pages~1sign-out~1customized/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/sign_out_page_settings/methods/get_sign_out_page_settings
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/sign_out_page_settings/methods/replace_sign_out_page_settings
    email_templates:
      id: okta.brands.email_templates
      name: email_templates
      title: Email Templates
      methods:
        list_email_templates:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1templates~1email/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_email_template:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        send_test_email:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1test/post
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_templates/methods/list_email_templates
          - $ref: >-
              #/components/x-stackQL-resources/email_templates/methods/get_email_template
        insert: []
        update: []
        delete: []
        replace: []
    email_template_customizations:
      id: okta.brands.email_template_customizations
      name: email_template_customizations
      title: Email Template Customizations
      methods:
        list_email_customizations:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_email_customization:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_all_customizations:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        get_email_customization:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations~1{customizationId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_email_customization:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations~1{customizationId}/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_email_customization:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations~1{customizationId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_template_customizations/methods/list_email_customizations
          - $ref: >-
              #/components/x-stackQL-resources/email_template_customizations/methods/get_email_customization
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/email_template_customizations/methods/create_email_customization
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/email_template_customizations/methods/delete_all_customizations
          - $ref: >-
              #/components/x-stackQL-resources/email_template_customizations/methods/delete_email_customization
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/email_template_customizations/methods/replace_email_customization
    customization_preview:
      id: okta.brands.customization_preview
      name: customization_preview
      title: Customization Preview
      methods:
        get_customization_preview:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1customizations~1{customizationId}~1preview/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/customization_preview/methods/get_customization_preview
        insert: []
        update: []
        delete: []
        replace: []
    email_default_content:
      id: okta.brands.email_default_content
      name: email_default_content
      title: Email Default Content
      methods:
        get_email_default_content:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1default-content/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_default_content/methods/get_email_default_content
        insert: []
        update: []
        delete: []
        replace: []
    email_default_preview:
      id: okta.brands.email_default_preview
      name: email_default_preview
      title: Email Default Preview
      methods:
        get_email_default_preview:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1default-content~1preview/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_default_preview/methods/get_email_default_preview
        insert: []
        update: []
        delete: []
        replace: []
    email_settings:
      id: okta.brands.email_settings
      name: email_settings
      title: Email Settings
      methods:
        get_email_settings:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1settings/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_email_settings:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1templates~1email~1{templateName}~1settings/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_settings/methods/get_email_settings
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/email_settings/methods/replace_email_settings
    themes:
      id: okta.brands.themes
      name: themes
      title: Themes
      methods:
        list_brand_themes:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1themes/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_brand_theme:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_brand_theme:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upload_brand_theme_background_image:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}~1background-image/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_brand_theme_background_image:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}~1background-image/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        upload_brand_theme_favicon:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}~1favicon/post
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        delete_brand_theme_favicon:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}~1favicon/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        upload_brand_theme_logo:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}~1logo/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_brand_theme_logo:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1themes~1{themeId}~1logo/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/themes/methods/list_brand_themes'
          - $ref: '#/components/x-stackQL-resources/themes/methods/get_brand_theme'
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/themes/methods/replace_brand_theme
    well_known_uris:
      id: okta.brands.well_known_uris
      name: well_known_uris
      title: Well Known Uris
      methods:
        get_all_well_known_uris:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1well-known-uris/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_root_brand_well_known_uri:
          operation:
            $ref: '#/paths/~1api~1v1~1brands~1{brandId}~1well-known-uris~1{path}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/well_known_uris/methods/get_all_well_known_uris
          - $ref: >-
              #/components/x-stackQL-resources/well_known_uris/methods/get_root_brand_well_known_uri
        insert: []
        update: []
        delete: []
        replace: []
    brand_well_known_uris:
      id: okta.brands.brand_well_known_uris
      name: brand_well_known_uris
      title: Brand Well Known Uris
      methods:
        get_brand_well_known_uri:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1well-known-uris~1{path}~1customized/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_brand_well_known_uri:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1brands~1{brandId}~1well-known-uris~1{path}~1customized/put
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/brand_well_known_uris/methods/get_brand_well_known_uri
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/brand_well_known_uris/methods/replace_brand_well_known_uri
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
