openapi: 3.0.3
info:
  title: roles API
  description: okta roles API
  version: 5.1.0
paths:
  /api/v1/roles/{roleRef}/subscriptions:
    get:
      summary: List all subscriptions for a role
      description: Lists all subscriptions available to a specified Role
      operationId: listSubscriptionsRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}:
    get:
      summary: Retrieve a subscription for a role
      description: Retrieves a subscription by `notificationType` for a specified Role
      operationId: getSubscriptionsNotificationTypeRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
      - $ref: '#/components/parameters/pathNotificationType'
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}/subscribe:
    post:
      summary: Subscribe a role to a specific notification type
      description: >-
        Subscribes a Role to a specified notification type. Changes to Role
        subscriptions override the subscription status of any individual users
        with the Role.
      operationId: subscribeByNotificationTypeRole
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
      - $ref: '#/components/parameters/pathNotificationType'
  /api/v1/roles/{roleRef}/subscriptions/{notificationType}/unsubscribe:
    post:
      summary: Unsubscribe a role from a specific notification type
      description: >-
        Unsubscribes a Role from a specified notification type. Changes to Role
        subscriptions override the subscription status of any individual users
        with the Role.
      operationId: unsubscribeByNotificationTypeRole
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathRoleRef'
      - $ref: '#/components/parameters/pathNotificationType'
components:
  schemas:
    Subscription:
      type: object
      properties:
        channels:
          description: |-
            An array of sources send notifications to users.
            > **Note**: Currently, Okta only allows `email` channels.
          items:
            type: string
          type: array
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        _links:
          type: object
          description: Discoverable resources related to the subscription
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
    RoleType:
      description: Standard role type
      type: string
      enum:
        - ACCESS_CERTIFICATIONS_ADMIN
        - ACCESS_REQUESTS_ADMIN
        - API_ACCESS_MANAGEMENT_ADMIN
        - API_ADMIN
        - APP_ADMIN
        - CUSTOM
        - GROUP_MEMBERSHIP_ADMIN
        - HELP_DESK_ADMIN
        - MOBILE_ADMIN
        - ORG_ADMIN
        - READ_ONLY_ADMIN
        - REPORT_ADMIN
        - SUPER_ADMIN
        - USER_ADMIN
        - WORKFLOWS_ADMIN
      x-enumDescriptions:
        API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
        API_ADMIN: Access Management Administrator
        APP_ADMIN: Application Administrator
        CUSTOM: Custom label specified by the client
        GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
        HELP_DESK_ADMIN: Help Desk Administrator
        MOBILE_ADMIN: Mobile Administrator
        ORG_ADMIN: Organizational Administrator
        READ_ONLY_ADMIN: Read-Only Administrator
        REPORT_ADMIN: Report Administrator
        SUPER_ADMIN: Super Administrator
        USER_ADMIN: Group Administrator
        WORKFLOWS_ADMIN: Workflows Administrator
        ACCESS_CERTIFICATIONS_ADMIN: Access Certifications Administrator (predefined resource sets)
        ACCESS_REQUESTS_ADMIN: Access Requests Administrator (predefined resource sets)
    NotificationType:
      description: The type of notification
      type: string
      enum:
        - AD_AGENT
        - AGENT_AUTO_UPDATE_NOTIFICATION
        - AGENT_AUTO_UPDATE_NOTIFICATION_LDAP
        - APP_IMPORT
        - CONNECTOR_AGENT
        - IWA_AGENT
        - LDAP_AGENT
        - OKTA_ANNOUNCEMENT
        - OKTA_UPDATE
        - RATELIMIT_NOTIFICATION
        - REPORT_SUSPICIOUS_ACTIVITY
        - USER_DEPROVISION
        - USER_LOCKED_OUT
      x-enumDescriptions:
        AD_AGENT: System notification sent when an AD agent disconnects or reconnects
        AGENT_AUTO_UPDATE_NOTIFICATION: System notification sent when an agent automatically updates
        APP_IMPORT: System notification sent with the status of an app user import
        CONNECTOR_AGENT: >-
          System notification sent when an on-premises provisioning or Okta
          on-prem MFA agent disconnects or reconnects
        IWA_AGENT: System notification sent when an IGA agent disconnects or reconnects
        LDAP_AGENT: System notification sent when an LDAP agent disconnects or reconnects
        OKTA_ANNOUNCEMENT: Okta communication sent for announcements and release notes
        OKTA_UPDATE: Okta communication sent for scheduled system updates
        RATELIMIT_NOTIFICATION: >-
          System notification sent when an org reaches rate limit warning or
          violation thresholds
        REPORT_SUSPICIOUS_ACTIVITY: System notification sent when a user reports suspicious activity
        USER_DEPROVISION: System notification sent when a user is deprovisioned from apps
        USER_LOCKED_OUT: >-
          System notification sent when a user is locked out from logging in to
          Okta
    SubscriptionStatus:
      description: The status of the subscription
      type: string
      enum:
        - subscribed
        - unsubscribed
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
  parameters:
    pathRoleRef:
      name: roleRef
      in: path
      description: >-
        A reference to an existing role. Standard roles require a `roleType`,
        while Custom Roles require a `roleId`. See [Standard
        Roles](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles).
      required: true
      schema:
        oneOf:
          - title: roleType
            type: string
            $ref: '#/components/schemas/RoleType'
          - title: roleId
            type: string
    pathNotificationType:
      name: notificationType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/NotificationType'
  examples:
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
  x-stackQL-resources:
    subscriptions:
      id: okta.roles.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        list_subscriptions_role:
          operation:
            $ref: '#/paths/~1api~1v1~1roles~1{roleRef}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_subscriptions_notification_type_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1roles~1{roleRef}~1subscriptions~1{notificationType}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        subscribe_by_notification_type_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1roles~1{roleRef}~1subscriptions~1{notificationType}~1subscribe/post
          response:
            mediaType: ''
            openAPIDocKey: '200'
        unsubscribe_by_notification_type_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1roles~1{roleRef}~1subscriptions~1{notificationType}~1unsubscribe/post
          response:
            mediaType: ''
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/list_subscriptions_role
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/get_subscriptions_notification_type_role
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
