openapi: 3.0.3
info:
  title: hook_keys API
  description: okta hook_keys API
  version: 5.1.0
paths:
  /api/v1/hook-keys:
    get:
      summary: List all keys
      description: Lists all keys
      operationId: listHookKeys
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HookKey'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/ListAllKeysResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a key
      description: >-
        Creates a key for use with other parts of the application, such as
        inline hooks


        > **Note:**  Use the key name to access this key for inline hook
        operations.


        The total number of keys that you can create in an Okta org is limited
        to 50.

         The response is a [Key object](https://developer.okta.com/docs/reference/api/hook-keys/#key-object) that represents the 
         key that you create. The `id` property in the response serves as the unique ID for the key, which you can specify when 
         invoking other CRUD operations. The `keyId` provided in the response is the alias of the public key that you can use to get 
         details of the public key data in a separate call.

        > **Note:** The keyId is the alias of the public key that you can use to
        retrieve the public key.
      operationId: createHookKey
      x-codegen-request-body-name: keyRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHookKeyInstance'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/CreateHookKeyResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/hook-keys/public/{keyId}:
    get:
      summary: Retrieve a public key
      description: |-
        Retrieves a public key by `keyId`

        >**Note:** keyId is the alias of the public key.
      operationId: getPublicKey
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_embedded'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/RetrievePublicKeyResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathPublicKeyId'
  /api/v1/hook-keys/{id}:
    get:
      summary: Retrieve a key by ID
      description: >-
        Retrieves the public portion of the Key object using the `id` parameter


        >**Note:** The `?expand=publickey` query parameter optionally returns
        the full object including the details of the public key in the response
        body's `_embedded` property.
      operationId: getHookKey
      parameters:
        - name: id
          description: A valid key ID
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HookKey'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/RetrieveKeyResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a key
      description: >-
        Replaces a key by `id`


        This request replaces existing properties after passing validation.


        > **Note:** The only parameter that you can update is the name of the
        key, which must be unique at all times.
      operationId: replaceHookKey
      x-codegen-request-body-name: keyRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHookKeyInstance'
              examples:
                ResponseExample:
                  $ref: '#/components/examples/ReplaceKeyResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a key
      description: >
        Deletes a key by `id`. After being deleted, the key is unrecoverable.


        As a safety precaution, only keys that aren't being used are eligible
        for deletion.
      operationId: deleteHookKey
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - HookKey
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathHookKeyId'
components:
  schemas:
    HookKey:
      title: HookKeyInstance
      description: >-
        The `id` property in the response as `id` serves as the unique ID for
        the key, which you can specify when invoking other CRUD operations. 


        The `keyId` provided in the response is the alias of the public key that
        you can use to get details of the public key data in a separate call.
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the key was created
          readOnly: true
          nullable: true
        id:
          type: string
          description: The unique identifier for the key
          readOnly: true
          nullable: false
        isUsed:
          type: string
          format: boolean
          description: Whether this key is currently in use by other applications
          nullable: false
          readOnly: true
        keyId:
          type: string
          description: The alias of the public key
          nullable: false
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the key was updated
          readOnly: true
          nullable: true
        name:
          type: string
          description: Display name of the key
          readOnly: false
          nullable: false
          minLength: 1
          maxLength: 255
    KeyRequest:
      type: object
      properties:
        name:
          description: Display name for the key
          type: string
          uniqueItems: true
          readOnly: false
          minLength: 1
          maxLength: 255
          nullable: false
    DetailedHookKeyInstance:
      title: DetailedHookKeyInstance
      description: A key object with public key details
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the key was created
          readOnly: true
          nullable: true
        id:
          type: string
          description: The unique Okta ID of this key record
          readOnly: true
          nullable: false
        isUsed:
          type: string
          format: boolean
          description: Whether this key is currently in use by other applications
          nullable: false
          readOnly: true
        keyId:
          type: string
          description: The alias of the public key
          nullable: false
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the key was updated
          readOnly: true
          nullable: true
        name:
          type: string
          description: Display name of the key
          readOnly: false
          nullable: false
          minLength: 1
          maxLength: 255
        _embedded:
          $ref: '#/components/schemas/_embedded'
    _embedded:
      description: >-
        The Public Key Details are defined in the `_embedded` property of the
        Key object.
      type: object
      properties:
        alg:
          description: Algorithm used in the key
          type: string
          nullable: false
          readOnly: true
        e:
          description: RSA key value (exponent) for key binding
          type: string
          nullable: false
          readOnly: true
        kid:
          description: Unique identifier for the certificate
          type: string
          uniqueItems: true
          nullable: false
          readOnly: true
        kty:
          description: Cryptographic algorithm family for the certificate's keypair
          type: string
          nullable: false
          readOnly: true
        'n':
          description: RSA key value (modulus) for key binding
          type: string
          nullable: false
          readOnly: true
        use:
          description: Acceptable use of the certificate
          type: string
          nullable: true
          readOnly: true
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathPublicKeyId:
      name: keyId
      description: id" of the Public Key
      in: path
      required: true
      schema:
        type: string
        example: FcH2P9Eg7wr0o8N2FuV0
    pathHookKeyId:
      name: id
      description: ID of the Hook Key
      in: path
      required: true
      schema:
        type: string
        example: XreKU5laGwBkjOTehusG
  examples:
    ListAllKeysResponse:
      summary: List all keys response example
      value:
        - id: HKY1i2htmXF5UNQhL0g4
          keyId: bb5bed7d-6e4d-488f-9c86-59b93a2bb3fb
          name: My new key
          created: '2022-08-22T16:34:33.000Z'
          lastUpdated: '2022-08-22T16:34:33.000Z'
          isUsed: 'true'
        - id: HKY1p7jWLndGQV9M60g4
          keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
          name: Test key
          created: '2022-08-31T18:09:58.000Z'
          lastUpdated: '2022-08-31T18:09:58.000Z'
          isUsed: 'false'
    CreateHookKeyResponse:
      summary: Create a key response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My new key
        created: '2022-08-31T18:09:58.000Z'
        lastUpdated: '2022-08-31T18:09:58.000Z'
        isUsed: 'false'
        _embedded:
          kty: RSA
          alg: RSA
          kid: 7fbc27fd-e3df-4522-86bf-1930110256ad
          use: 'null'
          e: AQAB
          'n': >-
            2naqCnv6r4xNQs7207lRtKQvdtnlVND-8k5iYBIiqoKGY3CqUmRm1jleoOniiQoMkFX8Wj2DmVqr002efF3vOQ7_gjtTatBTVUNbNIQLybun4dkVoUtfP7pRc5SLpcP3eGPRVar734ZrpQXzmCEdpqBt3jrVjwYjNE5DqOjbYXFJtMsy8CWE9LRJ3kyHEoHPzo22dG_vMrXH0_sAQoCk_4TgNCbvyzVmGVYXI_BkUnp0hv2pR4bQVRYzGB9dKJdctOh8zULqc_EJ8tiYsS05YnF7whrWEyARK0rH-e4d4W-OmBTga_zhY4kJ4NsoQ4PyvcatZkxjPO92QHQOFDnf3w`
    RetrievePublicKeyResponse:
      summary: Retrieve public key response example
      value:
        _embedded:
          kty: RSA
          alg: RSA
          kid: 7fbc27fd-e3df-4522-86bf-1930110256ad
          use: null
          e: AQAB
          'n': >-
            2naqCnv6r4xNQs7207lRtKQvdtnlVND-8k5iYBIiqoKGY3CqUmRm1jleoOniiQoMkFX8Wj2DmVqr002efF3vOQ7_gjtTatBTVUNbNIQLybun4dkVoUtfP7pRc5SLpcP3eGPRVar734ZrpQXzmCEdpqBt3jrVjwYjNE5DqOjbYXFJtMsy8CWE9LRJ3kyHEoHPzo22dG_vMrXH0_sAQoCk_4TgNCbvyzVmGVYXI_BkUnp0hv2pR4bQVRYzGB9dKJdctOh8zULqc_EJ8tiYsS05YnF7whrWEyARK0rH-e4d4W-OmBTga_zhY4kJ4NsoQ4PyvcatZkxjPO92QHQOFDnf3w`
    RetrieveKeyResponse:
      summary: Retrieve a key by ID response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My new key
        created: '2022-08-31T18:09:58.000Z'
        lastUpdated: '2022-08-31T18:09:58.000Z'
        isUsed: 'false'
    ReplaceKeyResponse:
      summary: Replace a key response example
      value:
        id: HKY1p7jWLndGQV9M60g4
        keyId: 7fbc27fd-e3df-4522-86bf-1930110256ad
        name: My updated new key
        created: '2022-08-31T18:09:58.000Z'
        lastUpdated: '2022-08-31T18:16:59.000Z'
        isUsed: 'false'
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    hook_keys:
      id: okta.hook_keys.hook_keys
      name: hook_keys
      title: Hook Keys
      methods:
        list_hook_keys:
          operation:
            $ref: '#/paths/~1api~1v1~1hook-keys/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_hook_key:
          operation:
            $ref: '#/paths/~1api~1v1~1hook-keys/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_hook_key:
          operation:
            $ref: '#/paths/~1api~1v1~1hook-keys~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_hook_key:
          operation:
            $ref: '#/paths/~1api~1v1~1hook-keys~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_hook_key:
          operation:
            $ref: '#/paths/~1api~1v1~1hook-keys~1{id}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/hook_keys/methods/list_hook_keys'
          - $ref: '#/components/x-stackQL-resources/hook_keys/methods/get_hook_key'
        insert:
          - $ref: '#/components/x-stackQL-resources/hook_keys/methods/create_hook_key'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/hook_keys/methods/delete_hook_key'
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/hook_keys/methods/replace_hook_key
    public_keys:
      id: okta.hook_keys.public_keys
      name: public_keys
      title: Public Keys
      methods:
        get_public_key:
          operation:
            $ref: '#/paths/~1api~1v1~1hook-keys~1public~1{keyId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/public_keys/methods/get_public_key
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
