openapi: 3.0.3
info:
  title: attack_protection API
  description: okta attack_protection API
  version: 5.1.0
paths:
  /attack-protection/api/v1/authenticator-settings:
    get:
      summary: Retrieve the authenticator settings
      description: Retrieves the Authenticator Settings for an org
      operationId: getAuthenticatorSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttackProtectionAuthenticatorSettings'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - AttackProtection
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    put:
      summary: Replace the authenticator settings
      description: Replaces the Authenticator Settings for an org
      operationId: replaceAuthenticatorSettings
      x-codegen-request-body-name: authenticatorSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttackProtectionAuthenticatorSettings'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttackProtectionAuthenticatorSettings'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - AttackProtection
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
  /attack-protection/api/v1/user-lockout-settings:
    get:
      summary: Retrieve the user lockout settings
      description: Retrieves the User Lockout Settings for an org
      operationId: getUserLockoutSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLockoutSettings'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.read
      tags:
        - AttackProtection
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the user lockout settings
      description: Replaces the User Lockout Settings for an org
      operationId: replaceUserLockoutSettings
      x-codegen-request-body-name: lockoutSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLockoutSettings'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLockoutSettings'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.orgs.manage
      tags:
        - AttackProtection
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
components:
  schemas:
    AttackProtectionAuthenticatorSettings:
      type: object
      properties:
        verifyKnowledgeSecondWhen2faRequired:
          type: boolean
          description: >-
            If true, requires users to verify a possession factor before
            verifying a knowledge factor when the assurance requires two-factor
            authentication (2FA).
          default: false
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    UserLockoutSettings:
      type: object
      properties:
        preventBruteForceLockoutFromUnknownDevices:
          type: boolean
          description: >-
            Prevents brute-force lockout from unknown devices for the password
            authenticator.
          default: false
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
  examples:
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
  x-stackQL-resources:
    authenticator_settings:
      id: okta.attack_protection.authenticator_settings
      name: authenticator_settings
      title: Authenticator Settings
      methods:
        get_authenticator_settings:
          operation:
            $ref: '#/paths/~1attack-protection~1api~1v1~1authenticator-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_authenticator_settings:
          operation:
            $ref: '#/paths/~1attack-protection~1api~1v1~1authenticator-settings/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_settings/methods/get_authenticator_settings
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_settings/methods/replace_authenticator_settings
    lockout_settings:
      id: okta.attack_protection.lockout_settings
      name: lockout_settings
      title: Lockout Settings
      methods:
        get_user_lockout_settings:
          operation:
            $ref: '#/paths/~1attack-protection~1api~1v1~1user-lockout-settings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_user_lockout_settings:
          operation:
            $ref: '#/paths/~1attack-protection~1api~1v1~1user-lockout-settings/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/lockout_settings/methods/get_user_lockout_settings
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/lockout_settings/methods/replace_user_lockout_settings
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
