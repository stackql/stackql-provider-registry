openapi: 3.0.3
info:
  title: email_servers API
  description: okta email_servers API
  version: 5.1.0
paths:
  /api/v1/email-servers:
    get:
      summary: List all enrolled SMTP servers
      description: Lists all the enrolled custom SMTP server configurations
      operationId: listEmailServers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.read
      tags:
        - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    post:
      summary: Create a custom SMTP server
      description: Creates a custom email SMTP server configuration for your org
      operationId: createEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServerPost'
      responses:
        '201':
          description: Successfully enrolled server credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
  /api/v1/email-servers/{emailServerId}:
    get:
      summary: Retrieve an SMTP server configuration
      description: Retrieves the specified custom SMTP server configuration
      operationId: getEmailServer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.read
      tags:
        - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    patch:
      summary: Update an SMTP server configuration
      description: Updates the specified custom SMTP server configuration
      operationId: updateEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailServerRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailServerResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    delete:
      summary: Delete an SMTP server configuration
      description: Deletes the specified custom SMTP server configuration
      operationId: deleteEmailServer
      responses:
        '204':
          description: No content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathEmailServerId'
  /api/v1/email-servers/{emailServerId}/test:
    post:
      summary: Test an SMTP server configuration
      description: Tests the specified custom SMTP Server configuration
      operationId: testEmailServer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTestAddresses'
      responses:
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.emailServers.manage
      tags:
        - EmailServer
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathEmailServerId'
components:
  schemas:
    EmailServerListResponse:
      type: object
      properties:
        email-servers:
          type: array
          items:
            $ref: '#/components/schemas/EmailServerResponse'
    EmailServerPost:
      allOf:
        - $ref: '#/components/schemas/EmailServerRequest'
        - required:
            - host
            - port
            - username
            - password
            - alias
    EmailServerResponse:
      allOf:
        - $ref: '#/components/schemas/BaseEmailServer'
        - properties:
            id:
              type: string
              description: ID of your SMTP server
          type: object
    EmailServerRequest:
      allOf:
        - $ref: '#/components/schemas/BaseEmailServer'
        - properties:
            password:
              type: string
              description: Password used to access your SMTP server
          type: object
    EmailTestAddresses:
      type: object
      properties:
        from:
          type: string
          description: Email address that sends test emails
          example: sender@host.com
        to:
          type: string
          description: Email address that receives test emails
          example: receiver@host.com
      required:
        - from
        - to
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    BaseEmailServer:
      type: object
      properties:
        alias:
          type: string
          description: Human-readable name for your SMTP server
          example: CustomServer1
        enabled:
          type: boolean
          description: If `true`, routes all email traffic through your SMTP server
        host:
          type: string
          description: Hostname or IP address of your SMTP server
          example: 192.168.160.1
        port:
          type: integer
          description: Port number of your SMTP server
          example: 587
        username:
          type: string
          description: Username used to access your SMTP server
          example: aUser
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathEmailServerId:
      name: emailServerId
      in: path
      required: true
      schema:
        type: string
        description: ID of your SMTP Server configuration
  examples:
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    email_servers:
      id: okta.email_servers.email_servers
      name: email_servers
      title: Email Servers
      methods:
        list_email_servers:
          operation:
            $ref: '#/paths/~1api~1v1~1email-servers/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_email_server:
          operation:
            $ref: '#/paths/~1api~1v1~1email-servers/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_email_server:
          operation:
            $ref: '#/paths/~1api~1v1~1email-servers~1{emailServerId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_email_server:
          operation:
            $ref: '#/paths/~1api~1v1~1email-servers~1{emailServerId}/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_email_server:
          operation:
            $ref: '#/paths/~1api~1v1~1email-servers~1{emailServerId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        test_email_server:
          operation:
            $ref: '#/paths/~1api~1v1~1email-servers~1{emailServerId}~1test/post'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/email_servers/methods/list_email_servers
          - $ref: >-
              #/components/x-stackQL-resources/email_servers/methods/get_email_server
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/email_servers/methods/create_email_server
        update:
          - $ref: >-
              #/components/x-stackQL-resources/email_servers/methods/update_email_server
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/email_servers/methods/delete_email_server
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
