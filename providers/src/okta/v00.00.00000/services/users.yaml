openapi: 3.0.3
info:
  title: users API
  description: okta users API
  version: 5.1.0
paths:
  /api/v1/users:
    get:
      summary: List all users
      description: >-
        Lists users in your org, with pagination in most cases.


        A subset of users can be returned that match a supported filter
        expression or search criteria. Different results are returned depending
        on specified queries in the request.


        > **Note:** This operation omits users that have a status of
        `DEPROVISIONED` in the response. To return all users, use a filter or
        search query instead.
      operationId: listUsers
      parameters:
        - $ref: '#/components/parameters/OktaResponse'
        - name: search
          in: query
          description: >-
            Searches for users with a supported filtering expression for most
            properties. Okta recommends using this parameter for optimal search
            performance. 


            > **Note:** Using an overly complex or long search query can result
            in an error.


            This operation supports
            [pagination](https://developer.okta.com/docs/api/#pagination). Use
            an ID lookup for records that you update to ensure your results
            contain the latest data. Returned users include those with the
            `DEPROVISIONED` status.


            Property names in the search parameter are case sensitive, whereas
            operators (`eq`, `sw`, and so on) and string values are case
            insensitive. Unlike with user logins, diacritical marks are
            significant in search string values: a search for `isaac.brock`
            finds `Isaac.Brock`, but doesn't find a property whose value is
            `isáàc.bröck`. 


            This operation requires [URL
            encoding](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding).
            For example, `search=profile.department eq "Engineering"` is encoded
            as `search=profile.department%20eq%20%22Engineering%22`. If you use
            the special character `"` within a quoted string, it must also be
            escaped `\` and encoded. For example, `search=profile.lastName eq
            "bob"smith"` is encoded as
            `search=profile.lastName%20eq%20%22bob%5C%22smith%22`. See [Special
            Characters](https://developer.okta.com/docs/api/#special-characters).


            This operation searches many properties:
              * Any user profile attribute, including custom-defined attributes
              * The top-level properties: `id`, `status`, `created`, `activated`, `statusChanged`, and `lastUpdated`
              * The [user type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/#tag/UserType/operation/updateUserType) accessed as `type.id`

            > **Note:** <x-lifecycle class="ea"></x-lifecycle> The ability to
            search by user classification is available as an [Early
            Access](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/guides/release-lifecycle/#early-access-ea)
            feature. The `classification.type` property cannot be used in
            conjunction with other search terms. You can search using
            `classification.type eq "LITE"` or `classification.type eq
            "STANDARD"`.


            You can also use `sortBy` and `sortOrder` parameters. The `ne` (not
            equal) operator isn't supported, but you can obtain the same result
            by using `lt ... or ... gt`. For example, to see all users except
            those that have a status of `STAGED`, use `(status lt "STAGED" or
            status gt "STAGED")`.


            You can search properties that are arrays. If any element matches
            the search term, the entire array (object) is returned. Okta follows
            the [SCIM Protocol
            Specification](https://tools.ietf.org/html/rfc7644#section-3.4.2.2)
            for searching arrays. You can search multiple arrays, multiple
            values in an array, as well as using the standard logical and
            filtering operators. See
            [Filter](https://developer.okta.com/docs/reference/core-okta-api/#filter).


            Searches for users can be filtered by the following operators: `sw`,
            `eq`, and `co`. You can only use `co` with these select user profile
            attributes: `profile.firstName`, `profile.lastName`,
            `profile.email`, and `profile.login`. See
            [Operators](https://developer.okta.com/docs/api/#operators).
          schema:
            type: string
          examples:
            searchByStatus:
              value: status%20eq%20%22STAGED%22
              summary: Search for a specific status
              description: Search for users that have a status of STAGED
            searchByLastUpdatedAfterDate:
              value: lastUpdated%20gt%20%222014-01-01T00%3A00%3A00.000Z%22
              summary: Search after a specific time
              description: >-
                Search for users that were last updated after a specific
                timestamp
            searchById:
              value: id%20eq%20%2200u1ero7vZFVEIYLWPBN%22
              summary: Search for a specific ID
              description: Search for users with the specified ID (00gak46y5hydV6NdM0g4)
            searchByProfileDepartmentCreatedAndStatus:
              value: >-
                profile.department%20eq%20%22Engineering%22%20and%20%28created%20lt%20%222014-01-01T00%3A00%3A00.000Z%22%20or%20status%20eq%20%22ACTIVE%22%29
              summary: Search with multiple criteria
              description: >-
                Search for users in the department of Engineering who were
                created before 01/01/2014 or have a status of ACTIVE
            searchArrayAttributes:
              value: profile.arrayAttr%20eq%20%22arrayAttrVal1%22
              summary: Search for property arrays
              description: >-
                Searches for properties that are arrays. In this example, if a
                user has a custom user profile attribute "arrayAttr" that
                contains values ["arrayAttrVal1", "arrayAttrVal2"...], then this
                user is returned.
            searchArrayAttributesLiteUser:
              value: classification.type eq "LITE"
              summary: Search by classification
              description: >-
                Searches for users with the classification type LITE. Supported
                values: STANDARD or LITE.
        - name: filter
          in: query
          description: >-
            Filters users with a supported expression for a subset of
            properties. 


            > **Note:** Returned users include those with the `DEPROVISIONED`
            status.


            This requires [URL
            encoding](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding).
            For example, `filter=lastUpdated gt "2013-06-01T00:00:00.000Z"` is
            encoded as
            `filter=lastUpdated%20gt%20%222013-06-01T00:00:00.000Z%22`.
            Filtering is case-sensitive for property names and query values,
            while operators are case-insensitive.


            Filtering supports the following limited number of properties:
            `status`, `lastUpdated`, `id`, `profile.login`, `profile.email`,
            `profile.firstName`, and `profile.lastName`.


            Additionally, filtering supports only the equal `eq` operator from
            the standard Okta API filtering semantics, except in the case of the
            `lastUpdated` property. This property can also use the inequality
            operators (`gt`, `ge`, `lt`, and `le`). For logical operators, only
            the logical operators `and` and `or` are supported. The `not`
            operator isn't supported. See
            [Filter](https://developer.okta.com/docs/api/#filter) and
            [Operators](https://developer.okta.com/docs/api/#operators).
          schema:
            type: string
          examples:
            filterByStatus:
              value: status%20eq%20%22LOCKED_OUT%22
              summary: Filter by status
              description: Filter users with a status of LOCKED_OUT
            filterByLogin:
              value: profile.login%20eq%20%22login%40example.com%22
              summary: Filter by login
              description: Filter users with a specified login
            filterByDateRange:
              value: >-
                lastUpdated%20gt%20%222013-06-01T00%3A00%3A00.000Z%22%20and%20lastUpdated%20lt%20%222014-01-01T00%3A00%3A00.000Z%22
              summary: Filter by date range
              description: Filter users updated after 06/01/2013 but before 01/01/2014
            filterByTypeAndProfileLastUpdatedAfterDate:
              value: >-
                lastUpdated%20gt%20%222013-06-01T00%3A00%3A00.000Z%22%20and%20%28status%20eq%20%22LOCKED_OUT%22%20or%20status%20eq%20%22RECOVERY%22%29
              summary: Filter by multiple criteria
              description: >-
                Filter users updated after 06/01/2013 but with a status of
                LOCKED_OUT or RECOVERY
        - name: q
          in: query
          description: >-
            Finds users who match the specified query. This doesn't support
            pagination.


            > **Note:** For optimal performance, use the `search` parameter
            instead.


            Use the `q` parameter for simple queries, such as a lookup of users
            by name when creating a people picker.


            The value of `q` is matched against `firstName`, `lastName`, or
            `email`. This performs a `startsWith` match, but this is an
            implementation detail and can change without notice. You don't need
            to specify `firstName`, `lastName`, or `email`.


            > **Note:** Using the `q` parameter in a request omits users that
            have a status of `DEPROVISIONED`. To return all users, use a filter
            or search query instead.
          schema:
            type: string
        - $ref: '#/components/parameters/queryAfter'
        - name: limit
          in: query
          description: >-
            Specifies the number of results returned. Defaults to 10 if `q` is
            provided.
          schema:
            type: integer
            format: int32
            default: 200
        - name: sortBy
          in: query
          description: >-
            Specifies field to sort by (for search queries only). This can be
            any single property, for example `sortBy=profile.lastName`. Users
            with the same value for the `sortBy` property will be ordered by
            `id`.
          schema:
            type: string
        - name: sortOrder
          in: query
          description: >-
            Specifies the sort order: `asc` or `desc` (for search queries only).
            Sorting is done in ASCII sort order (that is, by ASCII character
            value), but isn't case sensitive. `sortOrder` is ignored if `sortBy`
            isn't present.
          schema:
            type: string
        - name: expand
          in: query
          description: >-
            <x-lifecycle-container><x-lifecycle
            class="ea"></x-lifecycle></x-lifecycle-container>A parameter to
            include metadata in the `_embedded` property. Supported value:
            `classification`.
          required: false
          schema:
            type: string
            example: classification
          x-okta-lifecycle:
            lifecycle: EA
            isGenerallyAvailable: false
            SKUs: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
              examples:
                UserList:
                  $ref: '#/components/examples/ListRealmAwareUsersResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create a user
      description: >-
        Creates a new user in your Okta org with or without credentials.<br>

        > **Legal Disclaimer**

        >

        > After a user is added to the Okta directory, they receive an
        activation email. As part of signing up for this service,

        > you agreed not to use Okta's service/product to spam and/or send
        unsolicited messages.

        > Please refrain from adding unrelated accounts to the directory as Okta
        is not responsible for, and disclaims any and all

        > liability associated with, the activation email's content. You, and
        you alone, bear responsibility for the emails sent to any recipients.


        All responses return the created user. Activation of a user is an
        asynchronous operation. The system performs group reconciliation during
        activation and assigns the user to all apps via direct or indirect
        relationships (group memberships).

        * The user's `transitioningToStatus` property is `ACTIVE` during
        activation to indicate that the user hasn't completed the asynchronous
        operation.

        * The user's `status` is `ACTIVE` when the activation process is
        complete.


        The user is emailed a one-time activation token if activated without a
        password.


        > **Note:** If the user is assigned to an app that is configured for
        provisioning, the activation process triggers downstream provisioning to
        the app.  It is possible for a user to sign in before these apps have
        been successfully provisioned for the user.


        > **Important:** Do not generate or send a one-time activation token
        when activating users with an assigned password. Users should sign in
        with their assigned password.


        For more information about the various scenarios of creating a user
        listed in the examples, see the [User creation
        scenarios](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#user-creation-scenarios)
        section.
      operationId: createUser
      parameters:
        - name: activate
          in: query
          description: >-
            Executes an [activation
            lifecycle](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserLifecycle/#tag/UserLifecycle/operation/activateUser)
            operation when creating the user
          schema:
            type: boolean
            default: true
        - name: provider
          in: query
          description: >-
            Indicates whether to create a user with a specified authentication
            provider
          schema:
            type: boolean
            default: false
        - name: nextLogin
          in: query
          description: >-
            With `activate=true`, if `nextLogin=changePassword`, a user is
            created, activated, and the password is set to `EXPIRED`. The user
            must change it the next time they sign in.
          schema:
            $ref: '#/components/schemas/UserNextLogin'
          x-okta-added-version: 0.14.0
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            examples:
              Create user without credentials:
                $ref: '#/components/examples/create-user-without-credentials-request'
              Create user with recovery question:
                $ref: >-
                  #/components/examples/create-user-with-recovery-question-request
              Create user with password:
                $ref: '#/components/examples/create-user-with-password-request'
              Create user with imported hashed password:
                $ref: >-
                  #/components/examples/create-user-with-imported-hashed-password-request
              Create user with password import inline hook:
                $ref: >-
                  #/components/examples/create-user-with-password-import-inline-hook-request
              Create user with password and recovery question:
                $ref: >-
                  #/components/examples/create-user-with-password-and-recovery-question-request
              Create user with authentication provider:
                $ref: >-
                  #/components/examples/create-user-with-authentication-provider-request
              Create user in group:
                $ref: '#/components/examples/create-user-in-group-request'
              Create user with non-default user type:
                $ref: >-
                  #/components/examples/create-user-with-non-default-user-type-request
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Create user without credentials:
                  $ref: >-
                    #/components/examples/create-user-without-credentials-response
                Create user with recovery question:
                  $ref: >-
                    #/components/examples/create-user-with-recovery-question-response
                Create user with password:
                  $ref: '#/components/examples/create-user-with-password-response'
                Create user with imported hashed password:
                  $ref: >-
                    #/components/examples/create-user-with-imported-hashed-password-response
                Create user with password import inline hook:
                  $ref: >-
                    #/components/examples/create-user-with-password-import-inline-hook-response
                Create user with password and recovery question:
                  $ref: >-
                    #/components/examples/create-user-with-password-and-recovery-question-response
                Create user with authentication provider:
                  $ref: >-
                    #/components/examples/create-user-with-authentication-provider-response
                Create user in group:
                  $ref: '#/components/examples/create-user-in-group-response'
                Create user with non-default user type:
                  $ref: >-
                    #/components/examples/create-user-with-non-default-user-type-response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Create user with too many groups specified:
                  $ref: >-
                    #/components/examples/ErrorCreateUserWithTooManyManyGroupsResponse
                Create user with expired password and activate set to `false`:
                  $ref: >-
                    #/components/examples/ErrorCreateUserWithExpiredPasswordWithoutActivation
                Create user with expired password and `null` password:
                  $ref: >-
                    #/components/examples/ErrorCreateUserWithExpiredPasswordWithNullPassword
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/me/lifecycle/delete_sessions:
    post:
      summary: End a current user session
      description: >-
        Ends Okta sessions for the currently signed in user. By default, the
        current session remains active. Use this method in a browser-based app.

        > **Note:** This operation requires a session cookie for the user. The
        API token isn't allowed for this operation.
      operationId: endUserSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeepCurrent'
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2: []
      tags:
        - UserSessions
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/users/{id}:
    get:
      summary: Retrieve a user
      description: >-
        Retrieves a user from your Okta org.


        You can substitute `me` for the `id` to fetch the current user linked to
        an API token or session cookie.
         * The request returns the user linked to the API token that is specified in the Authorization header, not the user linked to the active session. Details of the admin user who granted the API token is returned.
         * When the end user has an active Okta session, it is typically a CORS request from the browser. Therefore, it's possible to retrieve the current user without the Authorization header.

        When fetching a user by `login` or `login shortname`, [URL
        encode](https://developer.mozilla.org/en-US/docs/Glossary/Percent-encoding)
        the request parameter to ensure that special characters are escaped
        properly. Logins with a `/` character can only be fetched by `id` due to
        URL issues with escaping the `/` character. If you don't know a user's
        ID, you can use the [List all
        users](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers)
        endpoint to find it.


        > **Note:** Some browsers block third-party cookies by default, which
        disrupts Okta functionality in certain flows. See [Mitigate the impact
        of third-party cookie
        deprecation](https://help.okta.com/okta_help.htm?type=oie&id=ext-third-party-cookies).
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/OktaResponse'
        - $ref: '#/components/parameters/queryUserExpand'
      responses:
        '200':
          description: Success
          headers:
            Etag:
              description: >-
                An HTTP entity tag (`ETag`) is an identifier for a specific
                version of a resource. See [Conditional Requests and Entity
                Tags]https://developer.okta.com/docs/api#conditional-requests-and-entity-tags.
              schema:
                type: string
              example: W/"1234567890abcdef"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetSingleton'
              examples:
                GetUserExample:
                  $ref: '#/components/examples/user-example'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Update a user
      description: >-
        Updates a user's profile or credentials with partial update semantics.


        > **Important:** Use the `POST` method for partial updates. Unspecified
        properties are set to null with `PUT`.


        `profile` and `credentials` can be updated independently or together
        with a single request.

        > **Note**: Currently, the user type of a user can only be changed via a
        full replacement PUT operation. If the request parameters of a partial
        update include the type element from the user object,

        the value must match the existing type of the user. Only admins are
        permitted to change the user type of a user; end users are not allowed
        to change their own user type.


        > **Note**: To update a current user's profile with partial semantics,
        the `/api/v1/users/me` endpoint can be invoked.

        >

        > A user can only update profile properties for which the user has write
        access. Within the profile, if the user tries to update the primary or
        the secondary email IDs, verification emails are sent to those email
        IDs, and the fields are updated only upon verification.


        If you are using this endpoint to set a password, it sets a password
        without validating existing user credentials. This is an administrative
        operation. For operations that validate credentials, refer to the [Reset
        password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/resetPassword),
        [Start forgot password
        flow](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/forgotPassword),
        and [Update
        password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/changePassword)
        endpoints.
      operationId: updateUser
      parameters:
        - name: strict
          in: query
          schema:
            type: boolean
          description: If true, validates against minimum age and history password policy
        - name: If-Match
          in: header
          required: false
          description: >-
            The ETag value of the user's expected current state. This becomes a
            conditional request used for concurrency control. See [Conditional
            Requests and Entity Tags]https://developer.okta.com/docs/api#conditional-requests-and-entity-tags.
          schema:
            type: string
          example: W/"1234567890abcdef"
      x-codegen-request-body-name: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
            examples:
              Update user Profile:
                $ref: '#/components/examples/update-user-profile-request'
              Update user password:
                $ref: '#/components/examples/update-user-set-password-request'
              Set recovery question and answer:
                $ref: >-
                  #/components/examples/update-user-set-recovery-question-and-answer
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Update user Response:
                  $ref: '#/components/examples/user-example'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace a user
      description: >-
        Replaces a user's profile, credentials, or both using strict-update
        semantics.


        All profile properties must be specified when updating a user's profile
        with a `PUT` method. Any property not specified in the request is
        deleted.

        > **Important:** Don't use a `PUT` method for partial updates.
      operationId: replaceUser
      parameters:
        - name: strict
          in: query
          description: If `true`, validates against minimum age and history password policy
          schema:
            type: boolean
          x-okta-added-version: 1.10.0
        - name: If-Match
          in: header
          required: false
          description: >-
            The ETag value of the user's expected current state. This becomes a
            conditional request used for concurrency control. See [Conditional
            Requests and Entity Tags]https://developer.okta.com/docs/api#conditional-requests-and-entity-tags.
          schema:
            type: string
          example: W/"1234567890abcdef"
      x-codegen-request-body-name: user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
            examples:
              Replace user Request:
                $ref: '#/components/examples/replace-user-request'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Replace user Response:
                  $ref: '#/components/examples/user-example'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a user
      description: >-
        Deletes a user permanently. This operation can only be performed on
        users that have a `DEPROVISIONED` status.


        > **Warning:** This action can't be recovered!


        This operation on a user that hasn't been deactivated causes that user
        to be deactivated. A second delete operation is required to delete the
        user.


        > **Note:** You can also perform user deletion asynchronously. To invoke
        asynchronous user deletion, pass an HTTP header `Prefer: respond-async`
        with the request.


        This header is also supported by user deactivation, which is performed
        if the delete endpoint is invoked on a user that hasn't been
        deactivated.
      operationId: deleteUser
      parameters:
        - name: sendEmail
          in: query
          description: Sends a deactivation email to the admin if `true`
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
        - name: Prefer
          in: header
          required: false
          schema:
            type: string
            enum:
              - respond-async
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/appLinks:
    get:
      summary: List all assigned app links
      description: >-
        Lists all app links for all direct or indirect (through group
        membership) assigned apps.


        > **Note:** To list all apps in an org, use the [List all applications
        endpoint in the Applications
        API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Application/#tag/Application/operation/listApplications).
      operationId: listAppLinks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssignedAppLink'
              examples:
                List App Links:
                  $ref: '#/components/examples/ListAppLinks'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserResources
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/blocks:
    get:
      summary: List all user blocks
      description: >-
        Lists information about how the user is blocked from accessing their
        account
      operationId: listUserBlocks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserBlock'
              examples:
                BlocksUnknownDevices:
                  $ref: '#/components/examples/ListUserBlocksUnknownDevicesResponse'
                BlocksAnyDevices:
                  $ref: '#/components/examples/ListUserBlocksAnyDevicesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - User
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/groups:
    get:
      summary: List all groups
      description: >-
        Lists all groups of which the user is a member.

        > **Note:** To list all groups in your org, use the [List all groups
        endpoints in the Groups
        API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups).
      operationId: listUserGroups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
              examples:
                List user groups:
                  $ref: '#/components/examples/ListUserGroups'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserResources
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/idps:
    get:
      summary: List all IdPs for user
      description: Lists the identity providers (IdPs) associated with the user
      operationId: listUserIdentityProviders
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProvider'
              examples:
                MultipleIdPsResponse:
                  $ref: '#/components/examples/MultipleIdPsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - IdentityProviderUsers
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/activate:
    post:
      summary: Activate a user
      description: >-
        Activates a user.


        Perform this operation only on users with a `STAGED` or `DEPROVISIONED`
        status. Activation of a user is an asynchronous operation.

        * The user has the `transitioningToStatus` property with an `ACTIVE`
        value during activation. This indicates that the user hasn't completed
        the asynchronous operation.

        * The user has an `ACTIVE` status when the activation process completes.


        Users who don't have a password must complete the welcome flow by
        visiting the activation link to complete the transition to `ACTIVE`
        status.


        > **Note:** If you want to send a branded user activation email, change
        the subdomain of your request to the custom domain that's associated
        with the brand.

        > For example, change `subdomain.okta.com` to `custom.domain.one`. See
        [Multibrand and custom
        domains](https://developer.okta.com/docs/concepts/brands/#multibrand-and-custom-domains).


        > **Note:** If you have optional password enabled, visiting the
        activation link is optional for users who aren't required to enroll a
        password.

        > See [Create user with optional
        password](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-optional-password).


        > **Legal disclaimer**

        > After a user is added to the Okta directory, they receive an
        activation email. As part of signing up for this service,

        > you agreed not to use Okta's service/product to spam and/or send
        unsolicited messages.

        > Please refrain from adding unrelated accounts to the directory as Okta
        is not responsible for, and disclaims any and all

        > liability associated with, the activation email's content. You, and
        you alone, bear responsibility for the emails sent to any recipients.
      operationId: activateUser
      parameters:
        - name: sendEmail
          in: query
          description: Sends an activation email to the user if `true`
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/deactivate:
    post:
      summary: Deactivate a user
      description: >-
        Deactivates a user.


        Perform this operation only on users that do not have a `DEPROVISIONED`
        status.

        * The user's `transitioningToStatus` property is `DEPROVISIONED` during
        deactivation to indicate that the user hasn't completed the asynchronous
        operation.

        * The user's status is `DEPROVISIONED` when the deactivation process is
        complete.


        > **Important:** Deactivating a user is a **destructive** operation. The
        user is deprovisioned from all assigned apps, which might destroy their
        data such as email or files.

        **This action cannot be recovered!**


        You can also perform user deactivation asynchronously. To invoke
        asynchronous user deactivation, pass an HTTP header `Prefer:
        respond-async` with the request.
      operationId: deactivateUser
      parameters:
        - name: sendEmail
          in: query
          description: Sends a deactivation email to the admin if `true`
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.5.0
        - name: Prefer
          in: header
          required: false
          schema:
            type: string
            enum:
              - respond-async
          description: Request asynchronous processing
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/expire_password:
    post:
      summary: Expire the password
      description: >-
        Expires the password. This operation transitions the user status to
        `PASSWORD_EXPIRED` so that the user must change their password the next
        time that they sign in.

        <br>

        If you have integrated Okta with your on-premises Active Directory (AD),
        then setting a user's password as expired in Okta also expires the
        password in AD.

        When the user tries to sign in to Okta, delegated authentication finds
        the password-expired status in AD,

        and the user is presented with the password-expired page where they can
        change their password.


        > **Note:** The Okta account management policy doesn't support the
        `/users/{id}/lifecycle/expire_password` endpoint. See [Configure an Okta
        account management
        policy](https://developer.okta.com/docs/guides/okta-account-management-policy/main/).
      operationId: expirePassword
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Expire password response:
                  $ref: '#/components/examples/ExpirePwdResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/expire_password_with_temp_password:
    post:
      summary: Expire the password with a temporary password
      description: >-
        Expires the password and resets the user's password to a temporary
        password. This operation transitions the user status to
        `PASSWORD_EXPIRED` so that the user must change their password the next
        time that they sign in.

        The user's password is reset to a temporary password that's returned,
        and then the user's password is expired.

        If `revokeSessions` is included in the request with a value of `true`,
        the user's current outstanding sessions are revoked and require
        re-authentication.

        <br>

        If you have integrated Okta with your on-premises Active Directory (AD),
        then setting a user's password as expired in Okta also expires the
        password in AD.

        When the user tries to sign in to Okta, delegated authentication finds
        the password-expired status in AD,

        and the user is presented with the password-expired page where they can
        change their password.
      operationId: expirePasswordWithTempPassword
      parameters:
        - name: revokeSessions
          in: query
          description: Revokes the user's existing sessions if `true`
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Expire password with temp password response:
                  $ref: '#/components/examples/ExpirePwdWithTempPwdResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/reactivate:
    post:
      summary: Reactivate a user
      description: >-
        Reactivates a user.


        Perform this operation only on users with a `PROVISIONED` or `RECOVERY`
        [status](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers!c=200&path=status&t=response).

        This operation restarts the activation workflow if for some reason the
        user activation wasn't completed when using the `activationToken` from
        [Activate
        User](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserLifecycle/#tag/UserLifecycle/operation/activateUser).


        Users that don't have a password must complete the flow by completing
        the [Reset
        password](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserCred/#tag/UserCred/operation/resetPassword)
        flow and MFA enrollment steps to transition the user to `ACTIVE` status.


        If `sendEmail` is `false`, returns an activation link for the user to
        set up their account. The activation token can be used to create a
        custom activation link.
      operationId: reactivateUser
      parameters:
        - name: sendEmail
          in: query
          description: Sends an activation email to the user if `true`
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserActivationToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/reset_factors:
    post:
      summary: Reset the factors
      description: >-
        Resets all factors for the specified user. All MFA factor enrollments
        return to the unenrolled state. The user's status remains `ACTIVE`. This
        link is present only if the user is currently enrolled in one or more
        MFA factors.
      operationId: resetFactors
      responses:
        '200':
          description: OK
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/reset_password:
    post:
      summary: Reset a password
      description: >-
        Resets a password. Generates a one-time token (OTT) that you can use to
        reset a user's password. You can automatically email the OTT link to the
        user or return the OTT to the API caller and distribute using a custom
        flow.


        This operation transitions the user to the `RECOVERY` status. The user
        is then not able to sign in or initiate a forgot password flow until
        they complete the reset flow.


        This operation provides an option to delete all the user's sessions.
        However, if the request is made in the context of a session owned by the
        specified user, that session isn't cleared.

        > **Note:** You can also use this API to convert a user with the Okta
        credential provider to use a federated provider. After this conversion,
        the user can't directly sign in with a password.

        > To convert a federated user back to an Okta user, use the default API
        call.


        If an email address is associated with multiple users, keep in mind the
        following to ensure a successful password recovery lookup:
          * Okta no longer includes deactivated users in the lookup.
          * The lookup searches sign-in IDs first, then primary email addresses, and then secondary email addresses.
          If `sendEmail` is `false`, returns a link for the user to reset their password.
      operationId: resetPassword
      parameters:
        - name: sendEmail
          in: query
          required: true
          schema:
            type: boolean
        - name: revokeSessions
          description: >-
            Revokes all user sessions, except for the current session, if set to
            `true`
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordToken'
              examples:
                Reset password without sending email response:
                  $ref: '#/components/examples/ResetPwdWithoutSendingEmailResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/suspend:
    post:
      summary: Suspend a user
      description: >-
        Suspends a user. Perform this operation only on users with an `ACTIVE`
        status. The user has a `SUSPENDED` status when the process completes.


        Suspended users can't sign in to Okta. They can only be unsuspended or
        deactivated. Their group and app assignments are retained.
      operationId: suspendUser
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/ErrorMissingRequiredParameter400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/unlock:
    post:
      summary: Unlock a user
      description: >-
        Unlocks a user with a `LOCKED_OUT` status or unlocks a user with an
        `ACTIVE` status that's blocked from unknown devices. Unlocked users have
        an `ACTIVE` status and can sign in with their current password.

        > **Note:** This operation works with Okta-sourced users. It doesn't
        support directory-sourced accounts such as Active Directory.
      operationId: unlockUser
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{id}/lifecycle/unsuspend:
    post:
      summary: Unsuspend a user
      description: >-
        Unsuspends a user and returns them to the `ACTIVE` state. This operation
        can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      responses:
        '200':
          description: Success
          content: {}
        '400':
          $ref: '#/components/responses/ErrorMissingRequiredParameter400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLifecycle
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathId'
  /api/v1/users/{userIdOrLogin}/linkedObjects/{primaryRelationshipName}/{primaryUserId}:
    put:
      summary: Assign a linked object value for primary
      description: >-
        Assigns the first user as the `associated` and the second user as the
        `primary` for the specified relationship.


        If the first user is already associated with a different `primary` for
        this relationship, the previous link is removed. A linked object
        relationship can specify only one primary user for an associated user.
      operationId: assignLinkedObjectValueForPrimary
      responses:
        '204':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - okta.users.manage
      tags:
        - UserLinkedObject
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserIdOrLogin'
      - $ref: '#/components/parameters/pathPrimaryRelationshipName'
      - $ref: '#/components/parameters/pathPrimaryUserId'
  /api/v1/users/{userIdOrLogin}/linkedObjects/{relationshipName}:
    get:
      summary: List the primary or all of the associated linked object values
      description: >-
        Lists either the `self` link for the primary user or all associated
        users in the relationship specified by `relationshipName`. If the
        specified user isn't associated in any relationship, an empty array is
        returned.


        Use `me` instead of `id` to specify the current session user.
      operationId: listLinkedObjectsForUser
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseLinks'
              examples:
                GetPrimaryLinkedObjectResponse:
                  $ref: '#/components/examples/GetPrimaryLinkedObjectResponse'
                GetAssociatedLinkedObjectResponse:
                  $ref: '#/components/examples/GetAssociatedLinkedObjectsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserLinkedObject
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete a linked object value
      description: >-
        Deletes any existing relationship between the `associated` and `primary`
        user. For the `associated` user, this is specified by the ID. The
        `primary` name specifies the relationship.


        The operation is successful if the relationship is deleted. The
        operation is also successful if the specified user isn't in the
        `associated` relationship for any instance of the specified `primary`
        and thus, no relationship is found.
      operationId: deleteLinkedObjectForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserLinkedObject
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserIdOrLogin'
      - $ref: '#/components/parameters/pathRelationshipName'
  /api/v1/users/{userId}/authenticator-enrollments:
    get:
      summary: List all authenticator enrollments
      description: Lists all authenticator enrollments of the specified user
      operationId: listAuthenticatorEnrollments
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorEnrollment'
              examples:
                AuthenticatorEnrollmentsListAllEx:
                  $ref: '#/components/examples/AuthenticatorEnrollmentResponseListAll'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserAuthenticatorEnrollments
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/authenticator-enrollments/phone:
    post:
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
      summary: Create an auto-activated Phone authenticator enrollment
      description: Creates a Phone authenticator enrollment that's automatically activated
      operationId: createAuthenticatorEnrollment
      parameters:
        - $ref: '#/components/parameters/pathUserId'
      x-codegen-request-body-name: authenticator
      requestBody:
        $ref: '#/components/requestBodies/PhoneAuthenticatorEnrollmentRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PhoneAuthenticatorCreateEnrollmentResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserAuthenticatorEnrollments
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/authenticator-enrollments/tac:
    post:
      x-okta-lifecycle:
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
      x-okta-iam-permissions:
        - okta.users.credentials.manageTemporaryAccessCode
      summary: Create an auto-activated TAC authenticator enrollment
      description: >-
        Creates an auto-activated Temporary access code (TAC) authenticator
        enrollment
      operationId: createTacAuthenticatorEnrollment
      parameters:
        - $ref: '#/components/parameters/pathUserId'
      x-codegen-request-body-name: authenticator
      requestBody:
        $ref: '#/components/requestBodies/TacAuthenticatorEnrollmentRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/TacAuthenticatorCreateEnrollmentResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserAuthenticatorEnrollments
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/authenticator-enrollments/{enrollmentId}:
    get:
      summary: Retrieve an authenticator enrollment
      description: Retrieves a user's authenticator enrollment by `enrollmentId`
      operationId: getAuthenticatorEnrollment
      responses:
        '200':
          $ref: '#/components/responses/AuthenticatorEnrollmentResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserAuthenticatorEnrollments
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    delete:
      summary: Delete an authenticator enrollment
      description: >-
        Deletes an existing enrollment for the specified user. The user can
        enroll the authenticator again.
      operationId: deleteAuthenticatorEnrollment
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserAuthenticatorEnrollments
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathEnrollmentId'
  /api/v1/users/{userId}/classification:
    get:
      summary: Retrieve a user's classification
      description: Retrieves a user's classification
      operationId: getUserClassification
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserClassification'
              examples:
                Get classification of user:
                  $ref: '#/components/examples/Get-User-Classification-Example'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserClassification
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    put:
      summary: Replace the user's classification
      description: Replaces the user's classification
      operationId: replaceUserClassification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceUserClassification'
            examples:
              Set user to LITE:
                $ref: '#/components/examples/Set-User-Classification-Example'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserClassification'
              examples:
                Get classification of user:
                  $ref: '#/components/examples/Get-User-Classification-Example'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserClassification
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: EA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/clients:
    get:
      summary: List all clients
      description: >-
        Lists all client resources for which the specified user has grants or
        tokens.


        > **Note:** To list all client resources for which a specified
        authorization server has tokens, use the [List all client resources for
        an authorization server in the Authorization Servers
        API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/AuthorizationServerClients/#tag/AuthorizationServerClients/operation/listOAuth2ClientsForAuthorizationServer).
      operationId: listUserClients
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2Client'
              examples:
                List user clients:
                  $ref: '#/components/examples/ListUserClients'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserResources
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/clients/{clientId}/grants:
    get:
      summary: List all grants for a client
      description: Lists all grants for a specified user and client
      operationId: listGrantsForUserAndClient
      parameters:
        - name: expand
          in: query
          description: >-
            Valid value: `scope`. If specified, scope details are included in
            the `_embedded` attribute.
          schema:
            type: string
        - name: after
          in: query
          description: >-
            The cursor to use for pagination. It is an opaque string that
            specifies your current location in the list and is obtained from the
            `Link` response header. See
            [Pagination](https://developer.okta.com/docs/api/#pagination).
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of tokens to return
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserGrant
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Revoke all grants for a client
      description: Revokes all grants for the specified user and client
      operationId: revokeGrantsForUserAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserGrant
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathClientId'
  /api/v1/users/{userId}/clients/{clientId}/tokens:
    get:
      summary: List all refresh tokens for a client
      description: Lists all refresh tokens issued for the specified user and client
      operationId: listRefreshTokensForUserAndClient
      parameters:
        - name: expand
          in: query
          description: >-
            Valid value: `scope`. If specified, scope details are included in
            the `_embedded` attribute.
          schema:
            type: string
            example: scope
        - name: after
          in: query
          description: >-
            The cursor to use for pagination. It is an opaque string that
            specifies your current location in the list and is obtained from the
            `Link` response header. See
            [Pagination](https://developer.okta.com/docs/api/#pagination).
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of tokens to return
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserOAuth
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Revoke all refresh tokens for a client
      description: Revokes all refresh tokens issued for the specified user and client
      operationId: revokeTokensForUserAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserOAuth
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathClientId'
  /api/v1/users/{userId}/clients/{clientId}/tokens/{tokenId}:
    get:
      summary: Retrieve a refresh token for a client
      description: Retrieves a refresh token issued for the specified user and client
      operationId: getRefreshTokenForUserAndClient
      parameters:
        - name: expand
          in: query
          description: >-
            Valid value: `scope`. If specified, scope details are included in
            the `_embedded` attribute.
          schema:
            type: string
            example: scope
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2RefreshToken'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserOAuth
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Revoke a token for a client
      description: Revokes the specified refresh and access tokens
      operationId: revokeTokenForUserAndClient
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserOAuth
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathClientId'
      - $ref: '#/components/parameters/pathTokenId'
  /api/v1/users/{userId}/credentials/change_password:
    post:
      summary: Update password
      description: >-
        Updates a user's password by validating the user's current password.


        This operation provides an option to delete all the sessions of the
        specified user. However, if the request is made in the context of a
        session owned by the specified user, that session isn't cleared.


        You can only perform this operation on users in `STAGED`, `ACTIVE`,
        `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid [password
        credential](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/createUser!path=credentials/password&t=request).


        The user transitions to `ACTIVE` status when successfully invoked in
        `RECOVERY` status.


        > **Note:** The Okta account management policy doesn't support the
        `/users/{userId}/credentials/change_password` endpoint. See [Configure
        an Okta account management
        policy](https://developer.okta.com/docs/guides/okta-account-management-policy/main/).
      operationId: changePassword
      parameters:
        - name: strict
          in: query
          description: If true, validates against the password minimum age policy
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.10.0
      x-codegen-request-body-name: changePasswordRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
            examples:
              Change password request:
                $ref: '#/components/examples/ChangePwdRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
              examples:
                Change password response:
                  $ref: '#/components/examples/ChangePwdResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/credentials/change_recovery_question:
    post:
      summary: Update recovery question
      description: >-
        Updates a user's recovery question and answer credential by validating
        the user's current password.

        You can only perform this operation on users in `STAGED`, `ACTIVE`, or
        `RECOVERY` status that have a valid [password
        credential](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/createUser!path=credentials/password&t=request).
      operationId: changeRecoveryQuestion
      x-codegen-request-body-name: userCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
            examples:
              Update recovery question request:
                $ref: '#/components/examples/UpdateRecQuestionRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
              examples:
                Update recovery question response:
                  $ref: '#/components/examples/UpdateRecQuestionResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/credentials/forgot_password:
    post:
      summary: Start forgot password flow
      description: >-
        Starts the forgot password flow.


        Generates a one-time token (OTT) that you can use to reset a user's
        password.


        The user must validate their security question's answer when visiting
        the reset link. Perform this operation only on users with an `ACTIVE`
        status and

        a valid [recovery question
        credential](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/createUser!path=credentials/recovery_question&t=request).


        > **Note:** If you have migrated to Identity Engine, you can allow users
        to recover passwords with any enrolled MFA authenticator. See
        [Self-service account
        recovery](https://help.okta.com/oie/en-us/content/topics/identity-engine/authenticators/configure-sspr.htm?cshid=ext-config-sspr).


        If an email address is associated with multiple users, keep in mind the
        following to ensure a successful password recovery lookup:
          * Okta no longer includes deactivated users in the lookup.
          * The lookup searches sign-in IDs first, then primary email addresses, and then secondary email addresses.

        If `sendEmail` is `false`, returns a link for the user to reset their
        password. This operation doesn't affect the status of the user.
      operationId: forgotPassword
      parameters:
        - name: sendEmail
          in: query
          description: Sends a forgot password email to the user if `true`
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Reset URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgotPasswordResponse'
              examples:
                Forgot password response:
                  $ref: '#/components/examples/ForgotPwdResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/credentials/forgot_password_recovery_question:
    post:
      summary: Reset password with recovery question
      description: >-
        Resets the user's password to the specified password if the provided
        answer to the recovery question is correct.

        You must include the recovery question answer with the submission.
      operationId: forgotPasswordSetNewPassword
      parameters:
        - name: sendEmail
          in: query
          required: false
          schema:
            type: boolean
            default: true
      x-codegen-request-body-name: userCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
            examples:
              Forgot password recovery question request:
                $ref: '#/components/examples/ForgotPwdRecoveryQuestionRequest'
        required: true
      responses:
        '200':
          description: Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCredentials'
              examples:
                Forgot password recovery question response:
                  $ref: '#/components/examples/ForgotPwdRecoveryQuestionResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserCred
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/devices:
    get:
      summary: List all devices
      description: >-
        Lists all devices enrolled by a user.


        > **Note:** To list all devices registered to an org, use the [List all
        devices endpoint in the Devices
        API](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Device/#tag/Device/operation/listDevices).
      operationId: listUserDevices
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDevice'
              examples:
                APIUsersListDevicesResponseExample:
                  summary: List all devices for a specific user
                  $ref: '#/components/examples/APIUserListDevicesResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserResources
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/factors:
    get:
      summary: List all enrolled factors
      description: >-
        Lists all enrolled factors for the specified user that are included in
        the highest priority [authenticator enrollment
        policy](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/)
        that applies to the user.


        Only enrolled factors that are `REQUIRED` or `OPTIONAL` in the highest
        priority authenticator enrollment policy can be returned.


        > **Note:** When admins use this endpoint for other users, the
        authenticator enrollment policy that's evaluated can vary depending on
        how client-specific conditions are configured in the rules of an
        authenticator enrollment policy. The client-specific conditions of the
        admin's client are used during policy evaluation instead of the
        client-specific conditions of the user. This can affect which
        authenticator enrollment policy is evaluated and which factors are
        returned.

        >

        > For example, an admin in Europe lists all enrolled factors for a user
        in North America. The network zone of the admin's client (in Europe) is
        used during policy evaluation instead of the network zone of the user
        (in North America).
      operationId: listFactors
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactor'
              examples:
                ListFactorsResponse:
                  $ref: '#/components/examples/ListFactorsResults'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Enroll a factor
      description: >-
        Enrolls a supported factor for the specified user


        > **Notes:** 

        >   * All responses return the enrolled factor with a status of either
        `PENDING_ACTIVATION` or `ACTIVE`.

        >   * You can't use the Factors API to enroll Okta Fastpass
        (`signed_nonce`) for a user. See [Configure Okta
        Fastpass](https://help.okta.com/okta_help.htm?type=oie&id=ext-fp-configure).


        #### Additional SMS/Call factor information


        * **Rate limits**: Okta may return a `429 Too Many Requests` status code
        if you attempt to resend an SMS or a voice call challenge (OTP) within
        the same time window. The current [rate
        limit](https://developer.okta.com/docs/reference/rate-limits/) is one
        SMS/CALL challenge per phone number every 30 seconds.


        * **Existing phone numbers**: Okta may return a `400 Bad Request` status
        code if a user attempts to enroll with a different phone number when the
        user has an existing mobile phone or has an existing phone with voice
        call capability. A user can enroll only one mobile phone for `sms` and
        enroll only one voice call capable phone for `call` factor.


        #### Additional WebAuthn factor information


        * For detailed information on the WebAuthn standard, including an
        up-to-date list of supported browsers, see
        [webauthn.me](https://a0.to/webauthnme-okta-docs).


        * When you enroll a WebAuthn factor, the `activation` object in
        `_embedded` contains properties used to help the client to create a new
        WebAuthn credential for use with Okta. See the [WebAuthn spec for
        PublicKeyCredentialCreationOptions](https://www.w3.org/TR/webauthn/#dictionary-makecredentialoptions).


        #### Additional Custom TOTP factor information


        * The enrollment process involves passing both the `factorProfileId` and
        `sharedSecret` properties for a token.


        * A factor profile represents a particular configuration of the Custom
        TOTP factor. It includes certain properties that match the hardware
        token that end users possess, such as the HMAC algorithm, passcode
        length, and time interval. There can be multiple Custom TOTP factor
        profiles per org, but users can only enroll in one Custom TOTP factor.
        Admins can [create Custom TOTP factor
        profiles](https://help.okta.com/okta_help.htm?id=ext-mfa-totp) in the
        Admin Console. Then, copy the `factorProfileId` from the Admin Console
        into the API request.


        * <x-lifecycle class="oie"></x-lifecycle>

        For Custom TOTP enrollment, Okta automaticaly enrolls a user with a
        `token:software:totp` factor and the `push` factor if the user isn't
        currently enrolled with these factors.
      operationId: enrollFactor
      parameters:
        - name: updatePhone
          description: >-
            If `true`, indicates that you are replacing the currently registered
            phone number for the specified user. This parameter is ignored if
            the existing phone number is used by an activated factor.
          in: query
          schema:
            type: boolean
            default: false
        - name: templateId
          in: query
          description: >-
            ID of an existing custom SMS template. See the [SMS Templates
            API]https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Template/. This parameter is only used by `sms` factors. If
            the provided ID doesn't exist, the default template is used instead.
          schema:
            type: string
            example: cstk2flOtuCMDJK4b0g3
        - name: tokenLifetimeSeconds
          description: Defines how long the token remains valid
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 86400
            default: 300
          x-okta-added-version: 1.3.0
        - name: activate
          description: >-
            If `true`, the factor is immediately activated as part of the
            enrollment. An activation process isn't required. Currently
            auto-activation is supported by `sms`, `call`, `email` and
            `token:hotp` (Custom TOTP) factors.
          in: query
          schema:
            type: boolean
            default: false
          x-okta-added-version: 1.3.0
        - name: Accept-Language
          description: >-
            An ISO 639-1 two-letter language code that defines a localized
            message to send. This parameter is only used by `sms` factors. If a
            localized message doesn't exist or the `templateId` is incorrect,
            the default template is used instead.
          in: header
          schema:
            type: string
            example: fr
      x-codegen-request-body-name: body
      requestBody:
        description: Factor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactor'
            examples:
              question:
                $ref: '#/components/examples/EnrollFactorQuestionRequest'
              sms:
                $ref: '#/components/examples/EnrollFactorSmsRequest'
              call:
                $ref: '#/components/examples/EnrollFactorCallRequest'
              token:software:totp:
                $ref: '#/components/examples/EnrollFactorOVTotpRequest'
              push:
                $ref: '#/components/examples/EnrollFactorOVPushRequest'
              google:
                $ref: '#/components/examples/EnrollFactorGoogleRequest'
              rsa_securId:
                $ref: '#/components/examples/EnrollFactorRsaSecurIdRequest'
              symantec_vip:
                $ref: '#/components/examples/EnrollFactorSymantecVipRequest'
              yubikey:
                $ref: '#/components/examples/EnrollFactorYubikeyRequest'
              email:
                $ref: '#/components/examples/EnrollFactorEmailRequest'
              u2f:
                $ref: '#/components/examples/EnrollFactorU2fRequest'
              webAuthn:
                $ref: '#/components/examples/EnrollFactorWebauthnRequest'
              customTotp:
                $ref: '#/components/examples/EnrollFactorCustomTotpRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactor'
              examples:
                question:
                  $ref: '#/components/examples/EnrollFactorQuestionResponse'
                sms:
                  $ref: '#/components/examples/EnrollFactorSmsResponse'
                call:
                  $ref: '#/components/examples/EnrollFactorCallResponse'
                token:software:totp:
                  $ref: '#/components/examples/EnrollFactorOVTotpResponse'
                push:
                  $ref: '#/components/examples/EnrollFactorOVPushResponse'
                google:
                  $ref: '#/components/examples/EnrollFactorGoogleResponse'
                rsa_securId:
                  $ref: '#/components/examples/EnrollFactorRsaSecurIdResponse'
                symantec_vip:
                  $ref: '#/components/examples/EnrollFactorSymantecVipResponse'
                yubikey:
                  $ref: '#/components/examples/EnrollFactorYubikeyResponse'
                email:
                  $ref: '#/components/examples/EnrollFactorEmailResponse'
                u2f:
                  $ref: '#/components/examples/EnrollFactorU2fResponse'
                webAuthn:
                  $ref: '#/components/examples/EnrollFactorWebauthnResponse'
                customTotp:
                  $ref: '#/components/examples/EnrollFactorCustomTotpResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/factors/catalog:
    get:
      summary: List all supported factors
      description: >-
        Lists all the supported factors that can be enrolled for the specified
        user that are included in the highest priority [authenticator enrollment
        policy](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Policy/)
        that applies to the user.


        Only factors that are `REQUIRED` or `OPTIONAL` in the highest priority
        authenticator enrollment policy can be returned.


        > **Note:** When admins use this endpoint for other users, the
        authenticator enrollment policy that's evaluated can vary depending on
        how client-specific conditions are configured in the rules of an
        authenticator enrollment policy. The client-specific conditions of the
        admin's client are used during policy evaluation instead of the
        client-specific conditions of the user. This can affect which
        authenticator enrollment policy is evaluated and which factors are
        returned.

        >

        > For example, an admin in Europe lists all supported factors for a user
        in North America. The network zone of the admin's client (in Europe) is
        used during policy evaluation instead of the network zone of the user
        (in North America).
      operationId: listSupportedFactors
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactorSupported'
              examples:
                List of supported factors:
                  $ref: '#/components/examples/SupportedFactorResults'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/factors/questions:
    get:
      x-okta-no-scope-required: true
      summary: List all supported security questions
      description: Lists all available security questions for the specified user
      operationId: listSupportedSecurityQuestions
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                - question: disliked_food
                  questionText: What is the food you least liked as a child?
                - question: name_of_first_plush_toy
                  questionText: What is the name of your first stuffed animal?
                - question: first_award
                  questionText: What did you earn your first medal or award for?
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserFactorSecurityQuestionProfile'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
      tags:
        - UserFactor
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/factors/{factorId}:
    get:
      summary: Retrieve a factor
      description: Retrieves an existing factor for the specified user
      operationId: getFactor
      responses:
        '200':
          $ref: '#/components/responses/GetFactorResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unenroll a factor
      description: >-
        Unenrolls an existing factor for the specified user. You can't unenroll
        a factor from a deactivated user. Unenrolling a factor allows the user
        to enroll a new factor.


        > **Note:** If you unenroll the `push` or the `signed_nonce` factors,
        Okta also unenrolls any other `totp`, `signed_nonce`, or Okta Verify
        `push` factors associated with the user.
      operationId: unenrollFactor
      parameters:
        - name: removeRecoveryEnrollment
          description: >-
            If `true`, removes the phone number as both a recovery method and a
            factor. This parameter is only used for the `sms` and `call`
            factors.
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
  /api/v1/users/{userId}/factors/{factorId}/lifecycle/activate:
    post:
      summary: Activate a factor
      description: >-
        Activates a factor. Some factors (`call`, `email`, `push`, `sms`,
        `token:software:totp`, `u2f`, and `webauthn`) require activation to
        complete the enrollment process.


        Okta enforces a rate limit of five activation attempts within five
        minutes. After a user exceeds the rate limit, Okta returns an error
        message.


        > **Notes:** 

        > * If the user exceeds their SMS, call, or email factor activation rate
        limit, then an [OTP resend
        request]https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/ isn't allowed
        for the same factor.

        > * You can't use the Factors API to activate Okta Fastpass
        (`signed_nonce`) for a user. See [Configure Okta
        Fastpass](https://help.okta.com/okta_help.htm?type=oie&id=ext-fp-configure).
      operationId: activateFactor
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactorActivateRequest'
            examples:
              token:software:totp:
                $ref: '#/components/examples/FactorPasscodeRequest'
              sms:
                $ref: '#/components/examples/FactorPasscodeRequest'
              call:
                $ref: '#/components/examples/FactorPasscodeRequest'
              email:
                $ref: '#/components/examples/FactorPasscodeRequest'
              u2f:
                $ref: '#/components/examples/ActivateFactorU2fRequest'
              webauthn:
                $ref: '#/components/examples/ActivateFactorWebauthnRequest'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorActivateResponse'
              examples:
                token:software:totp:
                  $ref: '#/components/examples/ActivateFactorTotpResponse'
                sms:
                  $ref: '#/components/examples/ActivateFactorSmsResponse'
                call:
                  $ref: '#/components/examples/ActivateFactorCallResponse'
                push:
                  $ref: '#/components/examples/ActivateFactorPushResponse'
                email:
                  $ref: '#/components/examples/ActivateFactorEmailResponse'
                u2f:
                  $ref: '#/components/examples/ActivateFactorU2fResponse'
                webauthn:
                  $ref: '#/components/examples/ActivateFactorWebauthnResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
  /api/v1/users/{userId}/factors/{factorId}/resend:
    post:
      summary: Resend a factor enrollment
      description: >-
        Resends an `sms`, `call`, or `email` factor challenge as part of an
        enrollment flow.


        For `call` and `sms` factors, Okta enforces a rate limit of one OTP
        challenge per device every 30 seconds. You can configure your `sms` and
        `call` factors to use a third-party telephony provider. See the
        [Telephony inline hook
        reference](https://developer.okta.com/docs/reference/telephony-hook/).
        Okta alternates between SMS providers with every resend request to
        ensure delivery of SMS and Call OTPs across different carriers.


        > **Note:** Resend operations aren't allowed after a factor exceeds the
        activation rate limit. See [Activate a
        factor]https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/.
      operationId: resendEnrollFactor
      parameters:
        - name: templateId
          in: query
          description: >-
            ID of an existing custom SMS template. See the [SMS Templates
            API]https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Template/. This parameter is only used by `sms` factors.
          schema:
            example: cstk2flOtuCMDJK4b0g3
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendUserFactor'
            examples:
              sms:
                value:
                  factorType: sms
                  provider: OKTA
                  profile:
                    phoneNumber: +1-555-415-1337
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendUserFactor'
              examples:
                sms:
                  $ref: '#/components/examples/EnrollFactorSmsResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
  /api/v1/users/{userId}/factors/{factorId}/transactions/{transactionId}:
    get:
      summary: Retrieve a factor transaction status
      description: |-
        Retrieves the status of a `push` factor verification transaction

         > **Note:**
         > The response body for a number matching push challenge to an Okta Verify `push` factor enrollment is different from the response body of a standard push challenge. 
         > The number matching push challenge [response body](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/getFactorTransactionStatus!c=200&path=1/_embedded&t=response) contains the correct answer for the challenge.
         > Use [Verify a factor](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor) to configure which challenge is sent.
      operationId: getFactorTransactionStatus
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorPushTransaction'
              examples:
                WAITING (with number matching challenge):
                  $ref: >-
                    #/components/examples/UserFactorVerifyPushTransactionWaitingNMC
                WAITING:
                  $ref: '#/components/examples/UserFactorVerifyPushTransactionWaiting'
                SUCCESS:
                  $ref: >-
                    #/components/examples/UserFactorVerifyPushTransactionApproved
                REJECTED:
                  $ref: >-
                    #/components/examples/UserFactorVerifyPushTransactionRejected
                TIMEOUT:
                  $ref: '#/components/examples/UserFactorVerifyPushTransactionTimeout'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
      - $ref: '#/components/parameters/pathTransactionId'
  /api/v1/users/{userId}/factors/{factorId}/verify:
    post:
      summary: Verify a factor
      description: >-
        Verifies an OTP for a factor. Some factors (`call`, `email`, `push`,
        `sms`, `u2f`, and `webauthn`) must first issue a challenge before you
        can verify the factor. Do this by making a request without a body. After
        a challenge is issued, make another request to verify the factor.


        > **Notes:**

        > - You can send standard push challenges or number matching push
        challenges to Okta Verify `push` factor enrollments. Use a [request
        body](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor!path=2/useNumberMatchingChallenge&t=request)
        for number matching push challenges. 

        > - To verify a `push` factor, use the **poll** link returned when you
        issue the challenge. See [Retrieve a factor transaction
        status](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/getFactorTransactionStatus).
      operationId: verifyFactor
      parameters:
        - name: templateId
          description: >-
            ID of an existing custom SMS template. See the [SMS Templates
            API]https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Template/. This parameter is only used by `sms` factors.
          in: query
          schema:
            type: string
            example: cstk2flOtuCMDJK4b0g3
        - name: tokenLifetimeSeconds
          description: Defines how long the token remains valid
          in: query
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 86400
            default: 300
          x-okta-added-version: 1.3.0
        - name: X-Forwarded-For
          description: Public IP address for the user agent
          in: header
          schema:
            type: string
          x-okta-added-version: 1.11.0
        - name: User-Agent
          description: >-
            Type of user agent detected when the request is made. Required to
            verify `push` factors.
          in: header
          schema:
            type: string
          x-okta-added-version: 1.11.0
        - name: Accept-Language
          description: >-
            An ISO 639-1 two-letter language code that defines a localized
            message to send. This parameter is only used by `sms` factors. If a
            localized message doesn't exist or the `templateId` is incorrect,
            the default template is used instead.
          in: header
          schema:
            type: string
            example: fr
      x-codegen-request-body-name: body
      requestBody:
        description: >-
          Verifies an OTP for a factor. Some factors (`call`, `email`, `push`,
          `sms`, `u2f`, and `webauthn`) must first issue a challenge before you
          can verify the factor. Do this by making a request without a body.
          After a challenge is issued, make another request to verify the
          factor.


          > **Note:**

          > Unlike standard push challenges that don't require a request body, a
          number matching
          [`push`](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor!path=2/useNumberMatchingChallenge&t=request)
          challenge requires a request body. `useNumberMatchingChallenge` must
          be set to `true`.

          > When a number matching challenge is issued for an Okta Verify `push`
          factor enrollment, a `correctAnswer` challenge object is returned in
          the
          [`_embedded`](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor!c=200&path=_embedded&t=response)
          object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFactorVerifyRequest'
            examples:
              sms verify:
                $ref: '#/components/examples/FactorPasscodeRequest'
              call verify:
                $ref: '#/components/examples/FactorPasscodeRequest'
              push challenge with number matching:
                $ref: '#/components/examples/NumberMatchingChallengeRequest'
              email verify:
                $ref: '#/components/examples/FactorPasscodeRequest'
              u2f verify:
                $ref: '#/components/examples/UserFactorVerifyU2fRequest'
              webAuthn verify:
                $ref: '#/components/examples/UserFactorVerifyWebauthnRequest'
              security question verify:
                $ref: '#/components/examples/UserFactorVerifySecurityQuestionRequest'
              totp verify:
                $ref: '#/components/examples/FactorPasscodeRequest'
              token verify:
                $ref: '#/components/examples/FactorPasscodeRequest'
              yubikey verify:
                $ref: '#/components/examples/FactorPasscodeRequest'
        required: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorVerifyResponse'
              examples:
                sms challenge:
                  $ref: '#/components/examples/UserFactorChallengeSmsResponse'
                sms verify:
                  $ref: '#/components/examples/UserFactorVerifySuccessSmsResponse'
                call challenge:
                  $ref: '#/components/examples/UserFactorChallengeCallResponse'
                call verify:
                  $ref: '#/components/examples/UserFactorVerifyCallSuccessResponse'
                email challenge:
                  $ref: '#/components/examples/UserFactorChallengeEmailResponse'
                email verify:
                  $ref: '#/components/examples/UserFactorVerifyEmailSuccessResponse'
                u2f challenge:
                  $ref: '#/components/examples/UserFactorChallengeU2fResponse'
                u2f verify:
                  $ref: '#/components/examples/UserFactorVerifyU2fResponse'
                webAuthn challenge:
                  $ref: '#/components/examples/UserFactorChallengeWebauthnResponse'
                webAuthn verify:
                  $ref: '#/components/examples/UserFactorVerifyWebauthnResponse'
                security question verify:
                  $ref: '#/components/examples/UserFactorVerifySuccessSqResponse'
                totp verify:
                  $ref: '#/components/examples/UserFactorVerifySuccessTotpResponse'
                token verify:
                  $ref: '#/components/examples/UserFactorVerifySuccessTokenResponse'
                yubikey verify:
                  $ref: '#/components/examples/UserFactorVerifySuccessYubikeyResponse'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFactorVerifyResponseWaiting'
              examples:
                push challenge with number matching:
                  $ref: >-
                    #/components/examples/UserFactorChallengePushResponseWithNumberMatchingChallenge
                push challenge:
                  $ref: '#/components/examples/UserFactorChallengePushResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserFactor
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathFactorId'
  /api/v1/users/{userId}/grants:
    get:
      summary: List all user grants
      description: Lists all grants for the specified user
      operationId: listUserGrants
      parameters:
        - name: scopeId
          in: query
          description: The scope ID to filter on
          schema:
            type: string
        - name: expand
          in: query
          description: >-
            Valid value: `scope`. If specified, scope details are included in
            the `_embedded` attribute.
          schema:
            type: string
            example: scope
        - name: after
          in: query
          description: >-
            The cursor to use for pagination. It is an opaque string that
            specifies your current location in the list and is obtained from the
            `Link` response header. See
            [Pagination](https://developer.okta.com/docs/api/#pagination).
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of grants to return
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 200
            default: 20
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserGrant
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Revoke all user grants
      description: Revokes all grants for a specified user
      operationId: revokeUserGrants
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserGrant
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/grants/{grantId}:
    get:
      summary: Retrieve a user grant
      description: Retrieves a grant for the specified user
      operationId: getUserGrant
      parameters:
        - name: expand
          in: query
          description: >-
            Valid value: `scope`. If specified, scope details are included in
            the `_embedded` attribute.
          schema:
            type: string
            example: scope
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2ScopeConsentGrant'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - UserGrant
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Revoke a user grant
      description: Revokes one grant for a specified user
      operationId: revokeUserGrant
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserGrant
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathGrantId'
  /api/v1/users/{userId}/risk:
    get:
      summary: Retrieve the user's risk
      description: Retrieves the user risk object for a user ID
      operationId: getUserRisk
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRiskGetResponse'
              examples:
                UserRiskResponseExample:
                  $ref: '#/components/examples/UserRiskResponse'
                UserRiskNoneResponseExample:
                  $ref: '#/components/examples/UserRiskNoneResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userRisk.read
      tags:
        - UserRisk
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    put:
      summary: Upsert the user's risk
      description: Upserts (creates or updates) the user risk object for a user ID
      operationId: upsertUserRisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRiskRequest'
            examples:
              RiskProviderRequestExample:
                $ref: '#/components/examples/UserRiskRequest'
        required: true
      responses:
        '200':
          description: Updated the user's risk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRiskPutResponse'
              examples:
                UserRiskResponseExample:
                  $ref: '#/components/examples/UserRiskResponse'
        '201':
          description: Created the user's risk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRiskPutResponse'
              examples:
                UserRiskResponseExample:
                  $ref: '#/components/examples/UserRiskResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.userRisk.manage
      tags:
        - UserRisk
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/roles:
    get:
      summary: List all user role assignments
      description: Lists all roles assigned to a user (identified by `userId`)
      operationId: listAssignedRolesForUser
      parameters:
        - $ref: '#/components/parameters/pathQueryRoleExpand'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/StandardRole'
                    - $ref: '#/components/schemas/CustomRole'
              examples:
                Standard Roles:
                  $ref: '#/components/examples/StandardRolesListResponse'
                Custom Roles:
                  $ref: '#/components/examples/StandardAndCustomRolesListResponse'
                IAM-based Standard Roles:
                  $ref: '#/components/examples/IAMStandardRolesListResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Assign a user role
      description: >-
        Assigns a [standard
        role](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles) to a user.


        You can also assign a custom role to a user, but the preferred method to
        assign a custom role to a user is to create a binding between the custom
        role, the resource set, and the user. See [Create a role resource set
        binding](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/RoleDResourceSetBinding/#tag/RoleDResourceSetBinding/operation/createResourceSetBinding).


        > **Notes:**

        > * The request payload is different for standard and custom role
        assignments.

        > * For IAM-based standard role assignments, use the request payload for
        standard roles. However, the response payload for IAM-based role
        assignments is similar to the custom role's assignment response.
      operationId: assignRoleToUser
      parameters:
        - name: disableNotifications
          description: Setting this to `true` grants the user third-party admin status
          in: query
          schema:
            type: boolean
            default: false
      x-codegen-request-body-name: assignRoleRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - $ref: '#/components/schemas/StandardRoleAssignmentSchema'
                - $ref: '#/components/schemas/CustomRoleAssignmentSchema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/StandardRole'
                  - $ref: '#/components/schemas/CustomRole'
              examples:
                Standard Roles:
                  $ref: '#/components/examples/StandardRoleResponseUser'
                Custom Roles:
                  $ref: '#/components/examples/CustomRoleResponseUser'
                IAM-based Standard Roles:
                  $ref: '#/components/examples/IAMStandardRoleResponseUser'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}:
    get:
      summary: Retrieve a user role assignment
      description: >-
        Retrieves a role assigned to a user (identified by `userId`). The
        `roleAssignmentId` parameter is the unique identifier for either a
        standard role assignment object or a custom role resource set binding
        object.
      operationId: getUserAssignedRole
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/StandardRole'
                  - $ref: '#/components/schemas/CustomRole'
              examples:
                Standard Roles:
                  $ref: '#/components/examples/StandardRoleResponseUser'
                Custom Roles:
                  $ref: '#/components/examples/CustomRoleResponseUser'
                IAM-based Standard Roles:
                  $ref: '#/components/examples/IAMStandardRoleResponseUser'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign a user role
      description: >-
        Unassigns a role assignment (identified by `roleAssignmentId`) from a
        user (identified by `userId`)
      operationId: unassignRoleFromUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/governance:
    get:
      summary: Retrieve all user role governance sources
      description: >-
        Retrieves the governance sources of a role (identified by
        `roleAssignmentId`) that's assigned to a user (identified by `userId`)
      operationId: getUserAssignedRoleGovernance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGovernance'
              examples:
                Example Response:
                  $ref: '#/components/examples/GetUseRoleGovernanceResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/governance/{grantId}:
    get:
      summary: Retrieve a user role governance source
      description: >-
        Retrieves a governance source (identified by `grantId`) for a role
        (identified by `roleAssignmentId`) that's assigned to a user (identified
        by `userId`)
      operationId: getRoleAssignmentGovernanceGrant
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGovernanceSource'
              examples:
                Example Response:
                  $ref: >-
                    #/components/examples/GetRoleAssignmentGovernanceGrantResponse
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathGrantId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/governance/{grantId}/resources:
    get:
      summary: Retrieve the user role governance source resources
      description: >-
        Retrieves the resources of a governance source (identified by `grantId`)
        for a role (identified by `roleAssignmentId`) that's assigned to a user
        (identified by `userId`)
      operationId: getRoleAssignmentGovernanceGrantResources
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGovernanceResources'
              examples:
                Example Response:
                  $ref: >-
                    #/components/examples/GetRoleAssignmentGovernanceGrantResources
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleAssignmentAUser
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathGrantId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/targets/catalog/apps:
    get:
      summary: List all admin role app targets
      description: >-
        Lists all app targets for an `APP_ADMIN` role assigned to a user. The
        response is a list that includes OIN-cataloged apps or app instances.
        The response payload for an app instance contains the `id` property, but
        an OIN-cataloged app payload doesn't.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForUser
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogApplication'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Assign all apps as target to admin role
      description: Assigns all apps as target to an `APP_ADMIN` role
      operationId: assignAllAppsAsTargetToRoleForUser
      responses:
        '200':
          description: Success
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/targets/catalog/apps/{appName}:
    put:
      summary: Assign an admin role app target
      description: >
        Assigns an OIN app target for an `APP_ADMIN` role assignment to an admin
        user. When you assign the first app target, you reduce the scope of the
        role assignment.

        The role no longer applies to all app targets, but applies only to the
        specified target.


        Assigning an OIN app target overrides any existing app instance targets
        of the OIN app.

        For example, if a user was assigned to administer a specific Facebook
        instance, a successful request to add an OIN app target with `facebook`
        for `appName` makes that user the admin for all Facebook instances.
      operationId: assignAppTargetToAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign an admin role app target
      description: >
        Unassigns an OIN app target from an `APP_ADMIN` role assignment to an
        admin user.


        > **Note:** You can't remove the last OIN app target from a role
        assignment since this causes an exception.

        > If you need a role assignment that applies to all apps, delete the
        `APP_ADMIN` role assignment to the user and recreate a new one.
      operationId: unassignAppTargetFromAppAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathAppName'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/targets/catalog/apps/{appName}/{appId}:
    put:
      summary: Assign an admin role app instance target
      description: >
        Assigns an app instance target to an `APP_ADMIN` role assignment to an
        admin user. When you assign the first OIN app or app instance target,
        you reduce the scope of the role assignment.

        The role no longer applies to all app targets, but applies only to the
        specified target.


        > **Note:** You can target a mixture of both OIN app and app instance
        targets, but can't assign permissions to manage all instances of an OIN
        app and then assign a subset of permission to the same OIN app.

        > For example, you can't specify that an admin has access to manage all
        instances of the Salesforce app and then also manage specific
        configurations of the Salesforce app.
      operationId: assignAppInstanceTargetToAppAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign an admin role app instance target
      description: >-
        Unassigns an app instance target from an `APP_ADMIN` role assignment to
        an admin user.


        > **Note:** You can't remove the last app instance target from a role
        assignment since this causes an exception.

        > If you need a role assignment that applies to all apps, delete the
        `APP_ADMIN` role assignment and recreate a new one.
      operationId: unassignAppInstanceTargetFromAdminRoleForUser
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathAppName'
      - $ref: '#/components/parameters/pathAppId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/targets/groups:
    get:
      summary: List all admin role group targets
      description: >
        Lists all group targets for a `USER_ADMIN`, `HELP_DESK_ADMIN`, or
        `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user.

        If the role isn't scoped to specific group targets, an empty array `[]`
        is returned.
      operationId: listGroupTargetsForRole
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
  /api/v1/users/{userId}/roles/{roleAssignmentId}/targets/groups/{groupId}:
    put:
      summary: Assign an admin role group target
      description: >
        Assigns a group target for a `USER_ADMIN`, `HELP_DESK_ADMIN`, or
        `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user.

        When you assign the first group target, you reduce the scope of the role
        assignment. The role no longer applies to all targets but applies only
        to the specified target.
      operationId: assignGroupTargetToUserRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Unassign an admin role group target
      description: >
        Unassigns a group target from a `USER_ADMIN`, `HELP_DESK_ADMIN`, or
        `GROUP_MEMBERSHIP_ADMIN` role assignment to an admin user.


        > **Note:** You can't remove the last group target from a role
        assignment since this causes an exception.

        > If you need a role assignment that applies to all groups, delete the
        role assignment to the user and recreate a new one.
      operationId: unassignGroupTargetFromUserAdminRole
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.manage
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleAssignmentId'
      - $ref: '#/components/parameters/pathGroupId'
  /api/v1/users/{userId}/roles/{roleIdOrEncodedRoleId}/targets:
    get:
      summary: Retrieve a role target by assignment type
      description: >
        Retrieves all role targets for an `APP_ADMIN`, `USER_ADMIN`,
        `HELP_DESK_ADMIN`, or `GROUP_MEMBERSHIP_ADMIN` role assignment to an
        admin user by user or group assignment type.

        If the role isn't scoped to specific group targets or any app targets,
        an empty array `[]` is returned.
      operationId: getRoleTargetsByUserIdAndRoleId
      parameters:
        - $ref: '#/components/parameters/assignmentType'
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleTarget'
              examples:
                Group Target:
                  $ref: '#/components/examples/RoleTargetGroupResponse'
                App Target:
                  $ref: '#/components/examples/RoleTargetAppResponse'
                App Instance Target:
                  $ref: '#/components/examples/RoleTargetAppInstanceResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.roles.read
      tags:
        - RoleBTargetAdmin
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathRoleIdOrEncodedRoleId'
  /api/v1/users/{userId}/sessions:
    delete:
      summary: Revoke all user sessions
      description: >-
        Revokes all active identity provider sessions of the user. This forces
        the user to authenticate on the next operation. Optionally revokes
        OpenID Connect and OAuth refresh and access tokens issued to the user.


        You can also clear the user's remembered factors for all devices using
        the `forgetDevices` parameter. See
        [forgetDevices](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserSessions/#tag/UserSessions/operation/revokeUserSessions!in=query&path=forgetDevices&t=request).

        > **Note:** This operation doesn't clear the sessions created for web or
        native apps.
      operationId: revokeUserSessions
      parameters:
        - name: oauthTokens
          in: query
          description: Revokes issued OpenID Connect and OAuth refresh and access tokens
          schema:
            type: boolean
            default: false
        - name: forgetDevices
          in: query
          description: |-
            Clears the user's remembered factors for all devices.
            > **Note:** This parameter defaults to false in Classic Engine.
          schema:
            type: boolean
            default: true
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - UserSessions
      x-okta-lifecycle:
        isCorsEnabled: true
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/subscriptions:
    get:
      summary: List all subscriptions for a user
      description: >-
        Lists all subscriptions available to a specified user. Returns an
        `AccessDeniedException` message if requests are made for another user.
      operationId: listSubscriptionsUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subscription'
                type: array
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
  /api/v1/users/{userId}/subscriptions/{notificationType}:
    get:
      summary: Retrieve a subscription for a user
      description: >-
        Retrieves a subscription by `notificationType` for a specified user.
        Returns an `AccessDeniedException` message if requests are made for
        another user.
      operationId: getSubscriptionsNotificationTypeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
        - $ref: '#/components/parameters/pathNotificationType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.read
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathNotificationType'
  /api/v1/users/{userId}/subscriptions/{notificationType}/subscribe:
    post:
      summary: Subscribe a user to a specific notification type
      description: >-
        Subscribes the current user to a specified notification type. Returns an
        `AccessDeniedException` message if requests are made for another user.
      operationId: subscribeByNotificationTypeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
        - $ref: '#/components/parameters/pathNotificationType'
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathNotificationType'
  /api/v1/users/{userId}/subscriptions/{notificationType}/unsubscribe:
    post:
      summary: Unsubscribe a user from a specific notification type
      description: >-
        Unsubscribes the current user from a specified notification type.
        Returns an `AccessDeniedException` message if requests are made for
        another user.
      operationId: unsubscribeByNotificationTypeUser
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
            description: The unique ID of the user
        - $ref: '#/components/parameters/pathNotificationType'
      responses:
        '200':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          description: Not Found
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.users.manage
      tags:
        - Subscription
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathUserId'
      - $ref: '#/components/parameters/pathNotificationType'
components:
  schemas:
    User:
      type: object
      properties:
        activated:
          type: string
          description: The timestamp when the user status transitioned to `ACTIVE`
          format: date-time
          readOnly: true
          nullable: true
        created:
          type: string
          description: The timestamp when the user was created
          format: date-time
          readOnly: true
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          type: string
          description: The unique key for the user
          readOnly: true
        lastLogin:
          type: string
          description: The timestamp of the last login
          format: date-time
          readOnly: true
          nullable: true
        lastUpdated:
          type: string
          description: The timestamp when the user was last updated
          format: date-time
          readOnly: true
        passwordChanged:
          type: string
          description: The timestamp when the user's password was last updated
          format: date-time
          readOnly: true
          nullable: true
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: >-
            The ID of the realm in which the user is residing. See
            [Realms](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Realm/).
          example: guo1bfiNtSnZYILxO0g4
          readOnly: true
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          type: string
          description: The timestamp when the status of the user last changed
          format: date-time
          readOnly: true
          nullable: true
        transitioningToStatus:
          type: string
          description: >-
            The target status of an in-progress asynchronous status transition.
            This property is only returned if the user's state is transitioning.
          readOnly: true
          nullable: true
          enum:
            - ACTIVE
            - DEPROVISIONED
            - PROVISIONED
        type:
          type: object
          description: >-
            The user type that determines the schema for the user's profile. The
            `type` property is a map that identifies the [User
            Types](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/#tag/UserType).


            Currently it contains a single element, `id`. It can be specified
            when creating a new user, and ca be updated by an admin on a full
            replace of an existing user (but not a partial update).
          properties:
            id:
              type: string
              description: The ID of the user type
        _embedded:
          type: object
          description: >-
            Embedded resources related to the user using the [JSON Hypertext
            Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          description: >-
            Specifies link relations (see [Web
            Linking](https://datatracker.ietf.org/doc/html/rfc8288) available
            for the current status of a user.

            The links object is used for dynamic discovery of related resources,
            lifecycle operations, and credential operations. The links object is
            read-only.


            For an individual user result, the links object contains a full set
            of link relations available for that user as determined by your
            policies.

            For a collection of users, the links object contains only the `self`
            link. Operations that return a collection of users include [List all
            users](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/listUsers)
            and [List all group member
            users](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroupUsers).
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - type: object
              properties:
                self:
                  description: URL to the individual user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                activate:
                  description: URL to activate the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                resetPassword:
                  description: URL to reset the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                resetFactors:
                  description: URL to reset the user's factors
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                expirePassword:
                  description: URL to expire the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                forgotPassword:
                  description: URL to initiate a forgot password operation
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                changeRecoveryQuestion:
                  description: URL to change the user's recovery question
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                deactivate:
                  description: URL to deactivate a user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                reactivate:
                  description: URL to reactivate the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                changePassword:
                  description: URL to change the user's password
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                schema:
                  description: URL to the user's profile schema
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                suspend:
                  description: URL to suspend the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                unsuspend:
                  description: URL to unsuspend the user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                unlock:
                  description: URL to unlock the locked-out user
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                type:
                  description: URL to the user type
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
            - readOnly: true
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    UserNextLogin:
      type: string
      enum:
        - changePassword
    CreateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentialsWritable'
        groupIds:
          type: array
          description: >-
            The list of group IDs of groups that the user is added to at the
            time of creation
          items:
            type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: >-
            The ID of the realm in which the user is residing. See
            [Realms](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Realm/).
          example: guo1bfiNtSnZYILxO0g4
        type:
          type: object
          description: >-
            The ID of the user type. Add this value if you want to create a user
            with a non-default [User
            Type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserType/).

            The user type determines which
            [schema](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/)
            applies to that user. After a user has been created, the user can

            only be assigned a different user type by an administrator through a
            full replacement (`PUT`) operation.
          properties:
            id:
              type: string
              description: The ID of the user type
      required:
        - profile
    KeepCurrent:
      type: object
      properties:
        keepCurrent:
          description: Skip deleting the user's current session when set to `true`
          type: boolean
          default: true
    UserGetSingleton:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            _embedded:
              type: object
              description: >-
                The embedded resources related to the object if the `expand`
                query parameter is specified
              properties:
                blocks:
                  type: array
                  description: A list of access block details for the user account
                  items:
                    $ref: '#/components/schemas/UserBlock'
    UpdateUserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        profile:
          $ref: '#/components/schemas/UserProfile'
        realmId:
          type: string
          description: >-
            The ID of the realm in which the user is residing. See
            [Realms](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Realm/).
          example: guo1bfiNtSnZYILxO0g4
    AssignedAppLink:
      type: object
      properties:
        appAssignmentId:
          type: string
          readOnly: true
        appInstanceId:
          type: string
          readOnly: true
        appName:
          type: string
          readOnly: true
        credentialsSetup:
          type: boolean
          readOnly: true
        hidden:
          type: boolean
          readOnly: true
        id:
          type: string
          readOnly: true
        label:
          type: string
          readOnly: true
        linkUrl:
          type: string
          readOnly: true
        logoUrl:
          type: string
          readOnly: true
        sortOrder:
          type: integer
          readOnly: true
    UserBlock:
      description: >-
        Describes how the account is blocked from access. If `appliesTo` is
        `ANY_DEVICES`, then the account is blocked for all devices. If
        `appliesTo` is `UNKNOWN_DEVICES`, then the account is only blocked for
        unknown devices.
      type: object
      properties:
        appliesTo:
          type: string
          readOnly: true
          description: The devices that the block applies to
          enum:
            - ANY_DEVICES
            - UNKNOWN_DEVICES
          x-enumDescriptions:
            ANY_DEVICES: The account is blocked for all devices
            UNKNOWN_DEVICES: The account is only blocked for unknown devices
        type:
          type: string
          readOnly: true
          description: Type of access block
          enum:
            - DEVICE_BASED
    Group:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the group was created
        id:
          type: string
          readOnly: true
          example: 0gabcd1234
          description: Unique ID for the group
        lastMembershipUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the groups memberships were last updated
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when the group's profile was last updated
        objectClass:
          type: array
          readOnly: true
          description: Determines the group's `profile`
          items:
            type: string
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
        _embedded:
          type: object
          description: Embedded resources related to the group
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          description: >-
            [Discoverable
            resources](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Group/#tag/Group/operation/listGroups!c=200&path=_links&t=response)
            related to the group
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                apps:
                  $ref: '#/components/schemas/HrefObject'
                logo:
                  type: array
                  items:
                    $ref: '#/components/schemas/HrefObject'
                source:
                  $ref: '#/components/schemas/HrefObject'
                users:
                  $ref: '#/components/schemas/HrefObject'
              type: object
    IdentityProvider:
      type: object
      properties:
        created:
          $ref: '#/components/schemas/Created'
        id:
          type: string
          readOnly: true
          description: Unique key for the IdP
          example: 0oaWma58liwx40w6boYD
        issuerMode:
          $ref: '#/components/schemas/IdentityProviderIssuerMode'
        lastUpdated:
          $ref: '#/components/schemas/LastUpdated'
        name:
          type: string
          maxLength: 100
          description: Unique name for the IdP
          example: Sample IdP
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        properties:
          $ref: '#/components/schemas/IdentityProviderProperties'
        protocol:
          description: >-
            IdP-specific protocol settings for endpoints, bindings, and
            algorithms used to connect with the IdP and validate messages
          oneOf:
            - $ref: '#/components/schemas/ProtocolSaml'
            - $ref: '#/components/schemas/ProtocolOAuth'
            - $ref: '#/components/schemas/ProtocolOidc'
            - $ref: '#/components/schemas/ProtocolMtls'
            - $ref: '#/components/schemas/ProtocolIdVerification'
        status:
          $ref: '#/components/schemas/LifecycleStatus'
        type:
          $ref: '#/components/schemas/IdentityProviderType'
        _links:
          type: object
          additionalProperties: true
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                acs:
                  description: SAML 2.0 Assertion Consumer Service URL for the Okta SP
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                authorize:
                  description: >-
                    OAuth 2.0 authorization endpoint for the IdP OAuth 2.0
                    Authorization Code flow
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                clientRedirectUri:
                  description: Redirect URI for the OAuth 2.0 Authorization Code flow
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                metadata:
                  description: >-
                    Federation metadata document for the IdP (for example: SAML
                    2.0 Metadata)
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                users:
                  description: IdP users
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                deactivate:
                  description: Deactivate IdP
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                activate:
                  description: Activate IdP
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                keys:
                  description: IdP keys
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
              type: object
    UserActivationToken:
      type: object
      properties:
        activationToken:
          type: string
          readOnly: true
          example: XE6wE17zmphl3KqAPFxO
          description: >-
            Token received as part of an activation user request. If a password
            was set before the user was activated, then user must sign in with
            their password or the `activationToken` and not the activation link.
            More information about using the `activationToken`

            to login can be found in the [Authentication
            API](https://developer.okta.com/docs/reference/api/authn/#primary-authentication-with-activation-token).
        activationUrl:
          type: string
          readOnly: true
          example: https://{yourOktaDomain}/welcome/XE6wE17zmphl3KqAPFxO
          description: >-
            If `sendEmail` is `false`, returns an activation link for the user
            to set up their account. The activation token can be used to create
            a custom activation link.
    ResetPasswordToken:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
          example: https://{yourOktaDomain}/signin/reset-password/XE6wE17zmphl3KqAPFxO
    ResponseLinks:
      description: Link objects
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/LinksSelf'
    AuthenticatorEnrollment:
      type: object
      properties:
        created:
          type: string
          description: Timestamp when the authenticator enrollment was created
          format: date-time
        id:
          description: The unique identifier of the authenticator enrollment
          type: string
        key:
          description: A human-readable string that identifies the authenticator
          type: string
        lastUpdated:
          type: string
          description: Timestamp when the authenticator enrollment was last updated
          format: date-time
        name:
          description: The authenticator display name
          type: string
        profile:
          $ref: '#/components/schemas/AuthenticatorProfile'
        status:
          type: string
          description: Status of the enrollment
        type:
          $ref: '#/components/schemas/AuthenticatorType'
        _links:
          $ref: '#/components/schemas/AuthenticatorEnrollmentLinks'
    UserClassification:
      type: object
      properties:
        lastUpdated:
          type: string
          description: The timestamp when the user classification was last updated
          format: date-time
          readOnly: true
        type:
          $ref: '#/components/schemas/ClassificationType'
    ReplaceUserClassification:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClassificationType'
    OAuth2Client:
      type: object
      properties:
        client_id:
          description: Unique key for the client application. The `client_id` is immutable.
          type: string
          readOnly: true
          example: 0oabskvc6442nkvQO0h7
        client_name:
          description: Human-readable string name of the client application
          type: string
          readOnly: true
          example: My App
        client_uri:
          type: string
          readOnly: true
          example: https://www.example.com
        logo_uri:
          description: >-
            URL string that references a logo for the client consent dialog (not
            the sign-in dialog)
          type: string
          readOnly: true
          example: https://www.example.com/logo.png
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - type: object
              properties:
                grants:
                  description: Link to the grant resources
                  allOf:
                    - $ref: '#/components/schemas/GrantResourcesHrefObject'
                tokens:
                  description: Link to the token resources
                  allOf:
                    - $ref: '#/components/schemas/TokenResourcesHrefObject'
    OAuth2ScopeConsentGrant:
      description: Grant object that represents an app consent scope grant
      type: object
      properties:
        clientId:
          type: string
          description: Client ID of the app integration
          readOnly: true
          example: oag3ih1zrm1cBFOiq0h6
        created:
          $ref: '#/components/schemas/createdProperty'
        createdBy:
          $ref: '#/components/schemas/OAuth2Actor'
        id:
          type: string
          description: ID of the Grant object
          readOnly: true
          example: oag3ih1zrm1cBFOiq0h6
        issuer:
          type: string
          description: >-
            The issuer of your org authorization server. This is typically your
            Okta domain.
          example: https://my_test_okta_org.oktapreview.com
        lastUpdated:
          $ref: '#/components/schemas/lastUpdatedProperty'
        scopeId:
          type: string
          description: >-
            The name of the [Okta
            scope](https://developer.okta.com/docs/api/oauth2/#oauth-20-scopes)
            for which consent is granted
          example: okta.users.read
        source:
          $ref: '#/components/schemas/OAuth2ScopeConsentGrantSource'
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
          description: User ID that granted consent (if `source` is `END_USER`)
          readOnly: true
          example: 00u5t60iloOHN9pBi0h7
        _embedded:
          type: object
          description: Embedded resources related to the Grant
          properties:
            scope:
              type: object
              properties:
                id:
                  type: string
                  description: The name of the Okta scope for which consent is granted
                  example: okta.users.read
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - type: object
              properties:
                app:
                  description: Link to the app resource
                  allOf:
                    - $ref: '#/components/schemas/AppResourceHrefObject'
                client:
                  description: Link to the client resource
                  allOf:
                    - $ref: '#/components/schemas/AppResourceHrefObject'
                scope:
                  description: Link to the scope resource
                  allOf:
                    - $ref: '#/components/schemas/ScopeResourceHrefObject'
                user:
                  description: Link to the user resource
                  allOf:
                    - $ref: '#/components/schemas/UserResourceHrefObject'
                authorizationServer:
                  description: Link to the authorization server resource
                  allOf:
                    - $ref: >-
                        #/components/schemas/AuthorizationServerResourceHrefObject
            - readOnly: true
      required:
        - issuer
        - scopeId
    OAuth2RefreshToken:
      type: object
      properties:
        clientId:
          type: string
          description: Client ID
        created:
          $ref: '#/components/schemas/createdProperty'
        expiresAt:
          type: string
          description: Expiration time of the OAuth 2.0 Token
          format: date-time
          readOnly: true
        id:
          type: string
          description: ID of the Token object
          readOnly: true
          example: oar579Mcp7OUsNTlo0g3
        issuer:
          type: string
          description: The complete URL of the authorization server that issued the Token
          example: https://{yourOktaDomain}/oauth2/ausain6z9zIedDCxB0h7
        lastUpdated:
          $ref: '#/components/schemas/lastUpdatedProperty'
        scopes:
          type: array
          description: The scope names attached to the Token
          items:
            type: string
            example: offline_access
        status:
          $ref: '#/components/schemas/GrantOrTokenStatus'
        userId:
          type: string
          description: The ID of the user associated with the Token
          example: 00u5t60iloOHN9pBi0h7
        _embedded:
          type: object
          description: >-
            The embedded resources related to the object if the `expand` query
            parameter is specified
          properties:
            scopes:
              type: array
              description: The scope objects attached to the Token
              items:
                $ref: '#/components/schemas/OAuth2RefreshTokenScope'
          readOnly: true
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - type: object
              properties:
                app:
                  description: Link to the app resource
                  allOf:
                    - $ref: '#/components/schemas/AppResourceHrefObject'
                revoke:
                  description: Link to revoke the refresh Token
                  allOf:
                    - $ref: '#/components/schemas/RevokeRefreshTokenHrefObject'
                    - properties:
                        hints:
                          properties:
                            allow:
                              items:
                                enum:
                                  - DELETE
                                default: DELETE
                          type: object
                      type: object
                client:
                  description: Link to the client resource
                  allOf:
                    - $ref: '#/components/schemas/AppResourceHrefObject'
                user:
                  description: Link to the user resource
                  allOf:
                    - $ref: '#/components/schemas/UserResourceHrefObject'
                authorizationServer:
                  description: Link to the Token authorization server resource
                  allOf:
                    - $ref: >-
                        #/components/schemas/AuthorizationServerResourceHrefObject
    ChangePasswordRequest:
      type: object
      properties:
        newPassword:
          $ref: '#/components/schemas/PasswordCredential'
        oldPassword:
          $ref: '#/components/schemas/PasswordCredential'
        revokeSessions:
          type: boolean
          description: >-
            When set to `true`, revokes all user sessions, except for the
            current session
          default: false
    UserCredentials:
      description: >-
        Specifies primary authentication and recovery credentials for a user.
        Credential types and requirements vary depending on the provider and
        security policy of the org.
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
    ForgotPasswordResponse:
      type: object
      properties:
        resetPasswordUrl:
          type: string
          readOnly: true
    UserDevice:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the device was created
          readOnly: true
        device:
          type: object
          $ref: '#/components/schemas/Device'
        deviceUserId:
          type: string
          description: Unique key for the user device link
    UserFactor:
      type: object
      properties:
        created:
          description: Timestamp when the factor was enrolled
          type: string
          format: date-time
          example: '2022-08-25T00:31:00.000Z'
          readOnly: true
        factorType:
          $ref: '#/components/schemas/UserFactorType'
        id:
          description: ID of the factor
          type: string
          example: caf8m6jbcvUH8mAep1d7
          readOnly: true
        lastUpdated:
          description: Timestamp when the factor was last updated
          type: string
          format: date-time
          example: '2022-08-25T00:31:00.000Z'
          readOnly: true
        profile:
          type: object
          description: Specific attributes related to the factor
        provider:
          description: >-
            Provider for the factor. Each provider can support a subset of
            factor types.
          type: string
        status:
          $ref: '#/components/schemas/UserFactorStatus'
        vendorName:
          description: >-
            Name of the factor vendor. This is usually the same as the provider
            except for On-Prem MFA, which depends on admin settings.
          type: string
          example: OKTA
          readOnly: true
        _embedded:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/UserFactorLinks'
      discriminator:
        propertyName: factorType
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          push: '#/components/schemas/UserFactorPush'
          question: '#/components/schemas/UserFactorSecurityQuestion'
          sms: '#/components/schemas/UserFactorSMS'
          token: '#/components/schemas/UserFactorToken'
          token:hardware: '#/components/schemas/UserFactorTokenHardware'
          token:hotp: '#/components/schemas/UserFactorTokenHOTP'
          token:software:totp: '#/components/schemas/UserFactorTokenSoftwareTOTP'
          u2f: '#/components/schemas/UserFactorU2F'
          web: '#/components/schemas/UserFactorWeb'
          webauthn: '#/components/schemas/UserFactorWebAuthn'
    UserFactorSupported:
      type: object
      properties:
        enrollment:
          type: string
          description: Indicates if the factor is required for the specified user
          example: OPTIONAL
          enum:
            - OPTIONAL
            - REQUIRED
        factorType:
          $ref: '#/components/schemas/UserFactorType'
        provider:
          $ref: '#/components/schemas/UserFactorProvider'
        status:
          $ref: '#/components/schemas/UserFactorStatus'
        vendorName:
          description: >-
            Name of the factor vendor. This is usually the same as the provider
            except for On-Prem MFA, which depends on admin settings.
          type: string
          example: OKTA
          readOnly: true
        _embedded:
          type: object
          description: Embedded resources related to the factor
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _links:
          $ref: '#/components/schemas/UserFactorLinks'
    UserFactorSecurityQuestionProfile:
      type: object
      properties:
        answer:
          description: Answer to the question
          minLength: 4
          type: string
          writeOnly: true
        question:
          description: Unique key for the question
          example: disliked_food
          enum:
            - disliked_food
            - name_of_first_plush_toy
            - first_award
            - favorite_security_question
            - favorite_toy
            - first_computer_game
            - favorite_movie_quote
            - first_sports_team_mascot
            - first_music_purchase
            - favorite_art_piece
            - grandmother_favorite_desert
            - first_thing_cooked
            - childhood_dream_job
            - first_kiss_location
            - place_where_significant_other_was_met
            - favorite_vacation_location
            - new_years_two_thousand
            - favorite_speaker_actor
            - favorite_book_movie_character
            - favorite_sports_player
          type: string
        questionText:
          description: Human-readable text that's displayed to the user
          example: What is the food you least liked as a child?
          type: string
          readOnly: true
    UserFactorActivateRequest:
      oneOf:
        - title: call
          description: Attempts to activate a `call` factor with the specified passcode
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: email
          description: Attempts to activate an `email` factor with the specified passcode
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: push
          type: object
          nullable: true
          description: >-
            Sends an asynchronous push notification to the device for approval
            by the user. You must poll the transaction to determine the state of
            the verification. See [Retrieve a factor transaction
            status](./#tag/UserFactor/operation/getFactorTransactionStatus).


            Activations have a short lifetime of several minutes and return a
            `TIMEOUT` if not completed before the timestamp specified in the
            `expiresAt` param. Use the published activate link to restart the
            activation process if the activation expires.
          properties:
            useNumberMatchingChallenge:
              $ref: '#/components/schemas/useNumberMatchingChallenge'
        - title: sms
          description: Attempts to activate an `sms` factor with the specified passcode
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: token:software:totp
          description: >-
            Attempts to activate a `token:software:totp` factor with the
            specified passcode
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: u2f
          description: >-
            Activates a `u2f` factor with the specified client and registration
            information from the U2F token
          properties:
            clientData:
              type: string
              description: Base64-encoded client data from the U2F token
              example: >-
                eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlhxR0h0RTBoUkxuVEoxYUF5U1oyIiwib3JpZ2luIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMCIsImNpZF9wdWJrZXkiOiJ1bnVzZWQifQ
            registrationData:
              type: string
              description: Base64-encoded registration data from the U2F token
              example: >-
                BQTEMUyOM8h1TiZG4DL-RdMr-tYgTYSf62Y52AmwEFTiSYWIRVO5L-MwWdRJOthmV3J3JrqpmGfmFb820-awx1YIQFlTvkMhxItHlpkzahEqicpw7SIH9yMfTn2kaDcC6JaLKPfV5ds0vzuxF1JJj3gCM01bRC-HWI4nCVgc-zaaoRgwggEcMIHDoAMCAQICCwD52fCSMoNczORdMAoGCCqGSM49BAMCMBUxEzARBgNVBAMTClUyRiBJc3N1ZXIwGhcLMDAwMTAxMDAwMFoXCzAwMDEwMTAwMDBaMBUxEzARBgNVBAMTClUyRiBEZXZpY2UwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQFKJupuUgPQcRHUphaW5JPfLvkkwlEwlHKk_ntSp7MS4aTHJyGnpziqncrjiTC_oUVtb-wN-y_t_IMIjueGkhxMAoGCCqGSM49BAMCA0gAMEUCIQDBo6aOLxanIUYnBX9iu3KMngPnobpi0EZSTkVtLC8_cwIgC1945RGqGBKfbyNtkhMifZK05n7fU-gW37Bdnci5D94wRQIhAJv3VvclbRkHAQhaUR8rr8qFTg9iF-GtHoXU95vWaQdyAiAbEr-440U4dQAZF-Sj8G2fxgh5DkgkkWpyUHZhz7N9ew
          type: object
        - title: webauthn
          description: >-
            Activates a `webauthn` factor with the specified attestation and
            registration information from the WebAuthn authenticator
          properties:
            attestation:
              type: string
              description: Base64-encoded attestation from the WebAuthn authenticator
              example: >-
                o2NmbXRmcGFja2VkZ2F0dFN0bXSiY2FsZyZjc2lnWEgwRgIhAMvf2+dzXlHZN1um38Y8aFzrKvX0k5dt/hnDu9lahbR4AiEAuwtMg3IoaElWMp00QrP/+3Po/6LwXfmYQVfsnsQ+da1oYXV0aERhdGFYxkgb9OHGifjS2dG03qLRqvXrDIRyfGAuc+GzF1z20/eVRV2wvl6tzgACNbzGCmSLCyXx8FUDAEIBvWNHOcE3QDUkDP/HB1kRbrIOoZ1dR874ZaGbMuvaSVHVWN2kfNiO4D+HlAzUEFaqlNi5FPqKw+mF8f0XwdpEBlClAQIDJiABIVgg0a6oo3W0JdYPu6+eBrbr0WyB3uJLI3ODVgDfQnpgafgiWCB4fFo/5iiVrFhB8pNH2tbBtKewyAHuDkRolcCnVaCcmQ==
            clientData:
              type: string
              description: Base64-encoded client data from the WebAuthn authenticator
              example: >-
                eyJjaGFsbGVuZ2UiOiJVSk5wYW9sVWt0dF9vcEZPNXJMYyIsIm9yaWdpbiI6Imh0dHBzOi8vcmFpbi5va3RhMS5jb20iLCJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIn0
          type: object
      type: object
    UserFactorActivateResponse:
      type: object
      properties:
        factorType:
          description: Type of the factor
          type: string
          enum:
            - call
            - email
            - sms
            - push
            - token:software:totp
            - u2f
            - webauthn
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksUser'
            - $ref: '#/components/schemas/LinksVerify'
      discriminator:
        propertyName: factorType
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          sms: '#/components/schemas/UserFactorSMS'
          push: '#/components/schemas/UserFactorPush'
          token:software:totp: '#/components/schemas/UserFactorTokenSoftwareTOTP'
          u2f: '#/components/schemas/UserFactorU2F'
          webauthn: '#/components/schemas/UserFactorWebAuthn'
    ResendUserFactor:
      type: object
      properties:
        factorType:
          description: Type of the factor
          type: string
          enum:
            - call
            - email
            - sms
      discriminator:
        propertyName: factorType
        mapping:
          call: '#/components/schemas/UserFactorCall'
          email: '#/components/schemas/UserFactorEmail'
          sms: '#/components/schemas/UserFactorSMS'
    UserFactorPushTransaction:
      type: object
      properties:
        factorResult:
          description: Result of the verification transaction
          type: string
          enum:
            - WAITING (with number matching challenge)
            - WAITING
            - SUCCESS
            - REJECTED
            - TIMEOUT
      discriminator:
        propertyName: factorResult
        mapping:
          WAITING: '#/components/schemas/UserFactorPushTransactionWaitingNoNMC'
          WAITING (with number matching challenge): '#/components/schemas/UserFactorPushTransactionWaitingNMC'
          SUCCESS: '#/components/schemas/UserFactorPushTransaction'
          REJECTED: '#/components/schemas/UserFactorPushTransactionRejected'
          TIMEOUT: '#/components/schemas/UserFactorPushTransactionTimeout'
    UserFactorVerifyRequest:
      oneOf:
        - title: call
          description: >-
            Verifies an OTP sent by a `call` factor challenge. If you omit
            `passCode` in the request, a new OTP is sent to the phone.
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: sms
          description: >-
            Verifies an OTP sent by an `sms` factor challenge. If you omit
            `passCode` in the request, a new OTP is sent to the phone.
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: push
          type: object
          nullable: true
          description: >-
            Sends an asynchronous push notification to the device for approval
            by the user. A successful request returns an HTTP 201 response,
            unlike other factors. You must poll the transaction to determine the
            state of the verification. See [Retrieve a factor transaction
            status](./#tag/UserFactor/operation/getFactorTransactionStatus).
          properties:
            useNumberMatchingChallenge:
              $ref: '#/components/schemas/useNumberMatchingChallenge'
        - title: email
          description: >-
            Verifies an OTP sent by an `email` factor challenge. If you omit
            `passCode` in the request, a new OTP is sent to the phone.
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: question
          description: Verifies an answer to a `question` factor
          properties:
            answer:
              description: Answer to the question
              minLength: 4
              type: string
              writeOnly: true
          type: object
        - title: token:software:totp
          description: Verifies an OTP for a `token:software:totp` factor
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: token:hotp
          description: Verifies an OTP for a `token:hotp` factor
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: token:hardware
          description: Verifies an OTP for a `token:hardware` factor
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: token
          description: Verifies an OTP for a `token` factor
          properties:
            passCode:
              $ref: '#/components/schemas/UserFactorPassCode'
          type: object
        - title: u2f
          description: >-
            Verifies a `u2f` factor challenge by posting a signed assertion
            using the challenge `nonce`
          properties:
            clientData:
              type: string
              description: Base64-encoded client data from the U2F token
              example: >-
                eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlhxR0h0RTBoUkxuVEoxYUF5U1oyIiwib3JpZ2luIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMCIsImNpZF9wdWJrZXkiOiJ1bnVzZWQifQ
            signatureData:
              description: Base64-encoded signature data from the U2F token
          type: object
        - title: webauthn
          description: >-
            Verifies a `webauthn` factor challenge by posting a signed assertion
            using the challenge `nonce`
          properties:
            authenticatorData:
              description: >-
                Base64-encoded authenticator data from the WebAuthn
                authenticator
              type: string
            clientData:
              type: string
              description: Base64-encoded client data from the WebAuthn authenticator
              example: >-
                eyJjaGFsbGVuZ2UiOiJVSk5wYW9sVWt0dF9vcEZPNXJMYyIsIm9yaWdpbiI6Imh0dHBzOi8vcmFpbi5va3RhMS5jb20iLCJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIn0
            signatureData:
              type: string
              description: Base64-encoded signature data from the WebAuthn authenticator
          type: object
    UserFactorVerifyResponse:
      type: object
      properties:
        expiresAt:
          description: Timestamp when the verification expires
          type: string
          format: date-time
          example: '2022-08-25T00:31:00.000Z'
          readOnly: true
        factorMessage:
          description: Optional display message for factor verification
          type: string
          readOnly: true
          nullable: true
        factorResult:
          $ref: '#/components/schemas/UserFactorVerifyResult'
          readOnly: true
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _embedded:
          allOf:
            - additionalProperties:
                type: object
                nullable: true
                readOnly: true
        _links:
          $ref: '#/components/schemas/UserFactorLinks'
    UserFactorVerifyResponseWaiting:
      type: object
      properties:
        expiresAt:
          description: Timestamp when the verification expires
          type: string
          format: date-time
          example: '2022-08-25T00:31:00.000Z'
          readOnly: true
        factorMessage:
          description: Optional display message for factor verification
          type: string
          readOnly: true
          nullable: true
        factorResult:
          $ref: '#/components/schemas/UserFactorVerifyResultWaiting'
          readOnly: true
        profile:
          type: object
          additionalProperties:
            type: object
            properties: {}
          readOnly: true
        _embedded:
          allOf:
            - $ref: '#/components/schemas/NumberFactorChallengeEmbeddedLinks'
            - additionalProperties:
                type: object
                nullable: true
                readOnly: true
        _links:
          $ref: '#/components/schemas/UserFactorLinks'
    UserRiskGetResponse:
      type: object
      properties:
        riskLevel:
          $ref: '#/components/schemas/UserRiskLevelAll'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksUserRef'
      discriminator:
        propertyName: riskLevel
        mapping:
          HIGH: '#/components/schemas/UserRiskLevelExists'
          MEDIUM: '#/components/schemas/UserRiskLevelExists'
          LOW: '#/components/schemas/UserRiskLevelExists'
          NONE: '#/components/schemas/UserRiskLevelNone'
    UserRiskRequest:
      type: object
      properties:
        riskLevel:
          type: string
          description: The risk level associated with the user
          enum:
            - HIGH
            - LOW
    UserRiskPutResponse:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/UserRiskReason'
        riskLevel:
          $ref: '#/components/schemas/UserRiskLevelPut'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksUserRef'
    StandardRole:
      title: Standard Role Assignment
      type: object
      properties:
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
        id:
          type: string
          description: Role assignment ID
          readOnly: true
        label:
          type: string
          description: Label for the role assignment
          readOnly: true
        lastUpdated:
          type: string
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/LifecycleStatus'
            - description: Status of the role assignment
        type:
          $ref: '#/components/schemas/RoleType'
        _embedded:
          type: object
          description: Optional embedded resources for the role assignment
          properties:
            targets:
              type: object
              description: Targets configured for the role assignment
              properties:
                groups:
                  type: array
                  description: Group targets
                  items:
                    $ref: '#/components/schemas/Group'
                catalog:
                  description: App targets
                  properties:
                    apps:
                      type: array
                      items:
                        $ref: '#/components/schemas/CatalogApplication'
                  type: object
        _links:
          $ref: '#/components/schemas/LinksAssignee'
    CustomRole:
      title: Custom role assignment
      type: object
      properties:
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          type: string
          description: Timestamp when the object was created
          format: date-time
          readOnly: true
        id:
          type: string
          description: Binding object ID
          readOnly: true
        label:
          type: string
          description: Label for the custom role assignment
          readOnly: true
        lastUpdated:
          type: string
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
        resource-set:
          type: string
          description: Resource set ID
          readOnly: true
        role:
          type: string
          description: Custom role ID
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/LifecycleStatus'
            - description: Status of the custom role assignment
        type:
          type: string
          description: CUSTOM for a custom role
          enum:
            - CUSTOM
        _links:
          $ref: '#/components/schemas/LinksCustomRoleResponse'
    StandardRoleAssignmentSchema:
      title: Standard Role
      type: object
      properties:
        type:
          type: string
          description: >-
            Specify the standard or IAM-based role type. See [standard
            roles](https://developer.okta.com/docs/api/openapi/okta-management/guides/roles/#standard-roles).
    CustomRoleAssignmentSchema:
      title: Custom Role
      type: object
      properties:
        resource-set:
          type: string
          description: Resource set ID
        role:
          type: string
          description: Custom role ID
        type:
          type: string
          description: The type of role. Specify `CUSTOM` for a custom role.
          enum:
            - CUSTOM
    RoleGovernance:
      description: List of all user role governance sources
      type: object
      properties:
        grants:
          type: array
          items:
            $ref: '#/components/schemas/RoleGovernanceSource'
        _links:
          $ref: '#/components/schemas/LinksGovernanceSources'
    RoleGovernanceSource:
      description: User role governance source
      type: object
      properties:
        bundleId:
          type: string
          readOnly: true
          description: '`id` of the entitlement bundle'
        expirationDate:
          type: string
          format: date-time
          readOnly: true
          description: The expiration date of the entitlement bundle
        grantId:
          type: string
          readOnly: true
          description: '`id` of the grant'
        type:
          $ref: '#/components/schemas/GovernanceSourceType'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksGovernanceResources'
            - $ref: '#/components/schemas/LinksSelf'
      required:
        - type
        - grantId
        - resources
    RoleGovernanceResources:
      description: The resources of a grant
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: '#/components/schemas/RoleGovernanceResource'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - $ref: '#/components/schemas/LinksNext'
    CatalogApplication:
      description: An app in the OIN catalog
      type: object
      properties:
        category:
          type: string
          description: Category for the app in the OIN catalog
          example: SOCIAL
          readOnly: true
        description:
          type: string
          description: Description of the app in the OIN catalog
          readOnly: true
        displayName:
          type: string
          description: OIN catalog app display name
          readOnly: true
        features:
          type: array
          readOnly: true
          description: >-
            Features supported by the app. See app
            [features](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Application/#tag/Application/operation/listApplications!c=200&path=0/features&t=response).
          items:
            type: string
        id:
          type: string
          readOnly: true
          description: >-
            ID of the app instance. Okta returns this property only for apps not
            in the OIN catalog.
        lastUpdated:
          type: string
          description: Timestamp when the object was last updated
          format: date-time
          readOnly: true
          example: '2024-09-19T23:37:37.000Z'
        name:
          type: string
          description: >-
            App key name. For OIN catalog apps, this is a unique key for the app
            definition.
        signOnModes:
          type: array
          description: >-
            Authentication mode for the app. See app
            [signOnMode](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Application/#tag/Application/operation/listApplications!c=200&path=0/signOnMode&t=response).
          items:
            type: string
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        verificationStatus:
          type: string
          description: OIN verification status of the catalog app
          example: OKTA_VERIFIED
        website:
          type: string
          description: Website of the OIN catalog app
        _links:
          type: object
          description: >-
            Specifies link relations (see [Web
            Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using
            the [JSON Hypertext Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification
          readOnly: true
          properties:
            logo:
              type: array
              description: List of app logo resources
              items:
                $ref: '#/components/schemas/HrefObjectLogoLink'
            self:
              $ref: '#/components/schemas/HrefObjectSelfLink'
    RoleTarget:
      type: object
      properties:
        assignmentType:
          type: string
          readOnly: true
          example: GROUP
          description: The assignment type of how the user receives this target
        expiration:
          type: string
          format: date-time
          example: '2023-08-25T12:00:00.000Z'
          readOnly: true
          description: >-
            The expiry time stamp of the associated target. It's only included
            in the response if the associated target will expire.
        orn:
          type: string
          readOnly: true
          example: orn:okta:directory:00o5v1t2W4OSF9r4N0g4:groups:00g5vhi3rEJMOog1S0g4
          description: >-
            The [Okta Resource Name
            (ORN)](https://support.okta.com/help/s/article/understanding-okta-resource-name-orn)
            of the app target or group target
        _links:
          $ref: '#/components/schemas/LinksSelf'
    Subscription:
      type: object
      properties:
        channels:
          description: |-
            An array of sources send notifications to users.
            > **Note**: Currently, Okta only allows `email` channels.
          items:
            type: string
          type: array
        notificationType:
          $ref: '#/components/schemas/NotificationType'
        status:
          $ref: '#/components/schemas/SubscriptionStatus'
        _links:
          type: object
          description: Discoverable resources related to the subscription
          properties:
            self:
              $ref: '#/components/schemas/HrefObject'
          readOnly: true
    UserProfile:
      additionalProperties: true
      description: >-
        Specifies the default and custom profile properties for a user.


        The default user profile is based on the [System for Cross-domain
        Identity Management: Core
        Schema](https://datatracker.ietf.org/doc/html/rfc7643).


        The only permitted customizations of the default profile are to update
        permissions, change whether the `firstName` and `lastName` properties
        are nullable, and specify a
        [pattern](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation)
        for `login`. You can use the Profile Editor in the Admin Console or the
        [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)
        to make schema modifications.


        You can extend user profiles with custom properties. You must first add
        the custom property to the user profile schema before you reference it.

        You can use the Profile Editor in the Admin Console or the [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/UISchema/#tag/UISchema)
        to manage schema extensions.


        Custom attributes can contain HTML tags. It's the client's
        responsibility to escape or encode this data before displaying it. Use
        [best-practices](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
        to prevent cross-site scripting.
      type: object
      properties:
        city:
          type: string
          description: The city or locality of the user's address (`locality`)
          maxLength: 128
          nullable: true
        costCenter:
          type: string
          description: Name of the cost center assigned to a user
          nullable: true
        countryCode:
          description: >-
            The country name component of the user's address (`country`). For
            validation, see [ISO 3166-1 alpha 2 "short" code
            format](https://datatracker.ietf.org/doc/html/draft-ietf-scim-core-schema-22#ref-ISO3166).
          type: string
          maxLength: 2
          nullable: true
        department:
          type: string
          description: Name of the user's department
        displayName:
          type: string
          description: Name of the user suitable for display to end users
          nullable: true
        division:
          type: string
          description: Name of the user's division
          nullable: true
        email:
          type: string
          description: >-
            The primary email address of the user. For validation, see [RFC 5322
            Section
            3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
          format: email
          minLength: 5
          maxLength: 100
        employeeNumber:
          description: The organization or company assigned unique identifier for the user
          type: string
        firstName:
          type: string
          description: Given name of the user (`givenName`)
          minLength: 1
          maxLength: 50
          nullable: true
        honorificPrefix:
          type: string
          description: Honorific prefix(es) of the user, or title in most Western languages
          nullable: true
        honorificSuffix:
          type: string
          description: Honorific suffix(es) of the user
          nullable: true
        lastName:
          type: string
          description: The family name of the user (`familyName`)
          minLength: 1
          maxLength: 50
          nullable: true
        locale:
          type: string
          description: >-
            The user's default location for purposes of localizing items such as
            currency, date time format, numerical representations, and so on.

            A locale value is a concatenation of the ISO 639-1 two-letter
            language code, an underscore, and the ISO 3166-1 two-letter country
            code. For example, en_US specifies the language English and country
            US. This value is `en_US` by default.
        login:
          type: string
          description: >-
            The unique identifier for the user (`username`). For validation, see
            [Login pattern
            validation](https://developer.okta.com/docs/reference/api/schemas/#login-pattern-validation).


            Every user within your Okta org must have a unique identifier for a
            login. This constraint applies to all users you import from other
            systems or applications such as Active Directory. Your organization
            is the top-level namespace to mix and match logins from all your
            connected applications or directories. Careful consideration of
            naming conventions for your login identifier will make it easier to
            onboard new applications in the future.


            Logins are not considered unique if they differ only in case and/or
            diacritical marks. If one of your users has a login of
            Isaac.Brock@example.com, there cannot be another user whose login is
            isaac.brock@example.com, nor isáàc.bröck@example.com.


            Okta has a default ambiguous name resolution policy for usernames
            that include @-signs. (By default, usernames must be formatted as
            email addresses and thus always include @-signs. You can remove that
            restriction using either the Admin Console or the [Schemas
            API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/).
            Users can sign in with their non-qualified short name (for example:
            isaac.brock with username isaac.brock@example.com) as long as the
            short name is still unique within the organization.

            maxLength: 100
          minLength: 5
        manager:
          type: string
          description: The `displayName` of the user's manager
          nullable: true
        managerId:
          type: string
          description: The `id` of the user's manager
          nullable: true
        middleName:
          type: string
          description: The middle name of the user
          nullable: true
        mobilePhone:
          type: string
          description: The mobile phone number of the user
          maxLength: 100
          minLength: 0
          nullable: true
        nickName:
          type: string
          description: The casual way to address the user in real life
          nullable: true
        organization:
          type: string
          description: Name of the the user's organization
          nullable: true
        postalAddress:
          type: string
          description: Mailing address component of the user's address
          maxLength: 4096
          nullable: true
        preferredLanguage:
          type: string
          description: >-
            The user's preferred written or spoken language. For validation, see
            [RFC 7231 Section
            5.3.5](https://datatracker.ietf.org/doc/html/rfc7231#section-5.3.5).
          nullable: true
        primaryPhone:
          type: string
          description: The primary phone number of the user such as a home number
          maxLength: 100
          minLength: 0
          nullable: true
        profileUrl:
          type: string
          description: >-
            The URL of the user's online profile. For example, a web page. See
            [URL](https://datatracker.ietf.org/doc/html/rfc1808).
          nullable: true
        secondEmail:
          type: string
          format: email
          description: >-
            The secondary email address of the user typically used for account
            recovery. For validation, see [RFC 5322 Section
            3.2.3](https://datatracker.ietf.org/doc/html/rfc5322#section-3.2.3).
          minLength: 5
          maxLength: 100
          nullable: true
        state:
          type: string
          description: The state or region component of the user's address (`region`)
          maxLength: 128
          nullable: true
        streetAddress:
          type: string
          description: The full street address component of the user's address
          maxLength: 1024
          nullable: true
        timezone:
          type: string
          description: The user's time zone
          nullable: true
        title:
          type: string
          description: The user's title, such as Vice President
          nullable: true
        userType:
          type: string
          description: >-
            The property used to describe the organization-to-user relationship,
            such as employee or contractor
          nullable: true
        zipCode:
          type: string
          description: >-
            The ZIP code or postal code component of the user's address
            (`postalCode`)
          maxLength: 50
          nullable: true
    UserStatus:
      description: >-
        The current status of the user.


        The status of a user changes in response to explicit events, such as
        admin-driven lifecycle changes, user login, or self-service password
        recovery. Okta doesn't asynchronously sweep through users and update
        their password expiry state, for example. Instead, Okta evaluates
        password policy at login time, notices the password has expired, and
        moves the user to the expired state. When running reports, remember that
        the data is valid as of the last login or lifecycle event for that user.
      type: string
      enum:
        - ACTIVE
        - DEPROVISIONED
        - LOCKED_OUT
        - PASSWORD_EXPIRED
        - PROVISIONED
        - RECOVERY
        - STAGED
        - SUSPENDED
      readOnly: true
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    UserCredentialsWritable:
      description: >-
        Specifies primary authentication and recovery credentials for a user.
        Credential types and requirements vary depending on the provider and
        security policy of the org.
      type: object
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProviderWritable'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
    GroupProfile:
      description: >-
        Specifies required and optional properties for a group. The
        `objectClass` of a group determines which additional properties are
        available.


        You can extend group profiles with custom properties, but you must first
        add the properties to the group profile schema before you can reference
        them. Use the Profile Editor in the Admin Console or the [Schemas
        API](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/)to
        manage schema extensions.


        Custom properties can contain HTML tags. It is the client's
        responsibility to escape or encode this data before displaying it. Use
        [best-practices](https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html)
        to prevent cross-site scripting.
      anyOf:
        - $ref: '#/components/schemas/OktaUserGroupProfile'
        - $ref: '#/components/schemas/OktaActiveDirectoryGroupProfile'
    GroupType:
      description: Determines how a group's profile and memberships are managed
      type: string
      enum:
        - APP_GROUP
        - BUILT_IN
        - OKTA_GROUP
      x-enumDescriptions:
        APP_GROUP: >-
          Group profile and memberships are imported and must be managed within
          the app (such as Active Directory or LDAP) that imported the group
        BUILT_IN: >-
          Group profile and memberships are managed by Okta and can't be
          modified
        OKTA_GROUP: >-
          Group profile and memberships are directly managed in Okta via static
          assignments or indirectly through group rules
    Created:
      format: date-time
      description: Timestamp when the object was created
      example: '2016-01-03T18:15:47.000Z'
      type: string
      readOnly: true
    IdentityProviderIssuerMode:
      description: >-
        Indicates whether Okta uses the original Okta org domain URL or a custom
        domain URL in the request to the social IdP
      default: DYNAMIC
      type: string
      enum:
        - CUSTOM_URL
        - DYNAMIC
        - ORG_URL
      x-enumDescriptions:
        ORG_URL: >-
          In the authorize request to the social IdP, Okta uses the Okta org's
          original domain URL (`https://${yourOktaDomain}`) as the domain in the
          `redirect_uri`.
        CUSTOM_URL: >-
          In the authorize request to the social IdP, Okta uses the custom
          domain URL as the domain in the `redirect_uri`. You can set
          `issuerMode` to `CUSTOM_URL` only if you have a custom URL domain
          configured.
        DYNAMIC: >-
          In the authorize request to the social IdP, Okta uses the custom
          domain URL as the domain in the `redirect_uri` if the request was made
          from the custom domain URL. Otherwise, Okta uses the Okta org's
          original domain URL if the request was made from the Okta org domain.
    LastUpdated:
      format: date-time
      description: Timestamp when the object was last updated
      example: '2016-01-03T18:15:47.000Z'
      type: string
      readOnly: true
    IdentityProviderPolicy:
      description: >-
        Policy settings for the IdP.

        The following provisioning and account linking actions are supported by
        each IdP provider:

        | IdP type                                                          |
        User provisioning actions | Group provisioning actions            |
        Account link actions | Account link filters |

        | ----------------------------------------------------------------- |
        ------------------------- | ------------------------------------- |
        -------------------- | -------------------- |

        | `SAML2`                                                           |
        `AUTO` or `DISABLED`      | `NONE`, `ASSIGN`, `APPEND`, or `SYNC` |
        `AUTO`, `DISABLED`   | `groups`, `users`    |

        | `X509`, `IDV_PERSONA`, `IDV_INCODE`, and `IDV_CLEAR`              |
        `DISABLED`                | No support for JIT provisioning      
        |                      |                      |

        | All other IdP types                                               |
        `AUTO`, `DISABLED`        | `NONE` or `ASSIGN`                    |
        `AUTO`, `DISABLED`   | `groups`, `users`    |
      allOf:
        - type: object
          properties:
            accountLink:
              $ref: '#/components/schemas/PolicyAccountLink'
            maxClockSkew:
              type: integer
              description: >-
                Maximum allowable clock skew when processing messages from the
                IdP
              example: 120000
            provisioning:
              $ref: '#/components/schemas/Provisioning'
            subject:
              $ref: '#/components/schemas/PolicySubject'
    IdentityProviderProperties:
      nullable: true
      description: >-
        The properties in the IdP `properties` object vary depending on the IdP
        type
      type: object
      properties:
        aalValue:
          type: string
          nullable: true
          description: >-
            The [authentication assurance
            level](https://developers.login.gov/oidc/#aal-values) (AAL) value
            for the Login.gov IdP. 

            See [Add a Login.gov
            IdP](https://developer.okta.com/docs/guides/add-logingov-idp/).
            Applies to `LOGINGOV` and `LOGINGOV_SANDBOX` IdP types.
        additionalAmr:
          type: array
          description: >-
            The additional Assurance Methods References (AMR) values for Smart
            Card IdPs. Applies to `X509` IdP type.
          nullable: true
          items:
            type: string
            enum:
              - sc
              - hwk
              - pin
              - mfa
            x-enumDescriptions:
              sc: Smart card
              hwk: Hardware-secured key
              pin: Personal identification number
              mfa: Multifactor authentication
        ialValue:
          type: string
          nullable: true
          description: >-
            The [type of identity
            verification](https://developers.login.gov/oidc/#ial-values) (IAL)
            value for the Login.gov IdP. 

            See [Add a Login.gov
            IdP](https://developer.okta.com/docs/guides/add-logingov-idp/).
            Applies to `LOGINGOV` and `LOGINGOV_SANDBOX` IdP types.
        inquiryTemplateId:
          type: string
          description: >-
            The ID of the inquiry template from your Persona dashboard. The
            inquiry template always starts with `itmpl`. Applies to the
            `IDV_PERSONA` IdP type.
          example: itmpl_HSctx8fNvXoHtrQfz2hxUVH8RBjG
      required:
        - inquiryTemplateId
    ProtocolSaml:
      title: SAML 2.0 Protocol
      description: >-
        Protocol settings for the [SAML 2.0 Authentication Request
        Protocol](http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf)
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/SamlAlgorithms'
        credentials:
          $ref: '#/components/schemas/SamlCredentials'
        endpoints:
          $ref: '#/components/schemas/SamlEndpoints'
        relayState:
          $ref: '#/components/schemas/SamlRelayState'
        settings:
          $ref: '#/components/schemas/SamlSettings'
        type:
          type: string
          description: SAML 2.0 protocol
          enum:
            - SAML2
    ProtocolOAuth:
      title: OAuth 2.0 Protocol
      description: >-
        Protocol settings for authentication using the [OAuth 2.0 Authorization
        Code flow](https://tools.ietf.org/html/rfc6749#section-4.1)
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/OAuthCredentials'
        endpoints:
          $ref: '#/components/schemas/OAuthEndpoints'
        scopes:
          $ref: '#/components/schemas/OAuthScopes'
        type:
          type: string
          description: OAuth 2.0 Authorization Code flow
          enum:
            - OAUTH2
    ProtocolOidc:
      title: OpenID Connect Protocol
      description: >-
        Protocol settings for authentication using the [OpenID Connect
        Protocol](http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth)
      type: object
      properties:
        algorithms:
          $ref: '#/components/schemas/OidcAlgorithms'
        credentials:
          $ref: '#/components/schemas/OAuthCredentials'
        endpoints:
          $ref: '#/components/schemas/OAuthEndpoints'
        oktaIdpOrgUrl:
          type: string
          description: URL of the IdP org
          example: https://idp.example.com
        scopes:
          type: array
          description: >-
            OpenID Connect and IdP-defined permission bundles to request
            delegated access from the user

            > **Note:** The [IdP
            type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=type&t=request)
            table lists the scopes that are supported for each IdP.
          items:
            type: string
            example: openid
        settings:
          $ref: '#/components/schemas/OidcSettings'
        type:
          type: string
          description: OpenID Connect Authorization Code flow
          enum:
            - OIDC
    ProtocolMtls:
      title: Mutual TLS Protocol
      description: >-
        Protocol settings for the [MTLS
        Protocol](https://tools.ietf.org/html/rfc5246#section-7.4.4)
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/MtlsCredentials'
        endpoints:
          $ref: '#/components/schemas/MtlsEndpoints'
        type:
          type: string
          description: Mutual TLS
          enum:
            - MTLS
    ProtocolIdVerification:
      title: ID Verification
      description: Protocol settings for the IDV
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/IDVCredentials'
        endpoints:
          $ref: '#/components/schemas/IDVEndpoints'
        scopes:
          $ref: '#/components/schemas/OAuthScopes'
        type:
          type: string
          description: ID verification protocol
          enum:
            - ID_PROOFING
    LifecycleStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    IdentityProviderType:
      description: >-
        The IdP object's `type` property identifies the social or enterprise IdP
        used for authentication. 

        Each IdP uses a specific protocol, therefore the `protocol` object must
        correspond with the IdP `type`. 

        If the protocol is OAuth 2.0-based, the `protocol` object's `scopes`
        property must also correspond with the scopes supported by the IdP
        `type`. 

        For policy actions supported by each IdP type, see [IdP type policy
        actions](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=policy&t=request).


        | Type               |
        Description                                                                                                                                          
        | Corresponding protocol | Corresponding protocol
        scopes                                         |

        | ------------------ |
        -----------------------------------------------------------------------------------------------------------------------------------------------------
        | ---------------------- |
        --------------------------------------------------------------------  |

        | `AMAZON`           |
        [Amazon](https://developer.amazon.com/settings/console/registration?return_to=/)&nbsp;as
        the IdP                                        | OpenID Connect        
        | `profile`, `profile:user_id`                                         
        |

        | `APPLE`            |
        [Apple](https://developer.apple.com/sign-in-with-apple/)&nbsp;as the
        IdP                                                                |
        OpenID Connect         | `names`, `email`,
        `openid`                                            |

        | `DISCORD`          | [Discord](https://discord.com/login)&nbsp;as the
        IdP                                                                                   
        | OAuth 2.0              | `identify`,
        `email`                                                   |

        | `FACEBOOK`         |
        [Facebook](https://developers.facebook.com)&nbsp;as the
        IdP                                                                            
        | OAuth 2.0              | `public_profile`,
        `email`                                             |

        | `GITHUB`           | [GitHub](https://github.com/join)&nbsp;as the
        IdP                                                                                      
        | OAuth 2.0              |
        `user`                                                                |

        | `GITLAB`           |
        [GitLab](https://gitlab.com/users/sign_in)&nbsp;as the
        IdP                                                                             
        | OpenID Connect         | `openid`, `read_user`, `profile`,
        `email`                             |

        | `GOOGLE`           |
        [Google](https://accounts.google.com/signup)&nbsp;as the
        IdP                                                                           
        | OpenID Connect         | `openid`, `email`,
        `profile`                                          |

        | `IDV_PERSONA`      |
        [Persona](https://app.withpersona.com/dashboard/login)&nbsp;as the IDV
        IdP                                                              | ID
        verification       
        |                                                                      
        |

        | `IDV_CLEAR`        | [CLEAR
        Verified](https://www.clearme.com/)&nbsp;as the IDV
        IdP                                                                         
        | ID verification        | `openid`, `profile`,
        `identity_assurance`                             |

        | `IDV_INCODE`       | [Incode](https://incode.com/)&nbsp;as the IDV
        IdP                                                                                      
        | ID verification        | `openid`, `profile`,
        `identity_assurance`                             |

        | `LINKEDIN`         |
        [LinkedIn](https://developer.linkedin.com/)&nbsp;as the
        IdP                                                                            
        | OAuth 2.0              | `r_emailaddress`,
        `r_liteprofile`                                     |

        | `LOGINGOV`         |
        [Login.gov](https://developers.login.gov/)&nbsp;as the
        IdP                                                                             
        | OpenID Connect         | `email`, `profile`,
        `profile:name`                                    |

        | `LOGINGOV_SANDBOX` | [Login.gov's identity
        sandbox](https://developers.login.gov/testing/)&nbsp;as the
        IdP                                                   | OpenID
        Connect         | `email`, `profile`,
        `profile:name`                                    |

        | `MICROSOFT`        | [Microsoft Enterprise
        SSO](https://azure.microsoft.com/)&nbsp;as the
        IdP                                                                |
        OpenID Connect         | `openid`, `email`, `profile`,
        `https://graph.microsoft.com/User.Read` |

        | `OIDC`             | IdP that supports [OpenID
        Connect](https://openid.net/specs/openid-connect-core-1_0.html)                                              
        | OpenID Connect         | `openid`, `email`,
        `profile`                                          |

        | `PAYPAL`           | [Paypal](https://www.paypal.com/signin)&nbsp;as
        the
        IdP                                                                                
        | OpenID Connect         | `openid`, `email`,
        `profile`                                          |

        | `PAYPAL_SANDBOX`   | [Paypal
        Sandbox](https://developer.paypal.com/tools/sandbox/)&nbsp;as the
        IdP                                                           | OpenID
        Connect         | `openid`, `email`,
        `profile`                                          |

        | `SALESFORCE`       |
        [SalesForce](https://login.salesforce.com/)&nbsp;as the
        IdP                                                                            
        | OAuth 2.0              | `id`, `email`,
        `profile`                                              |

        | `SAML2`            | Enterprise IdP that supports the [SAML 2.0 Web
        Browser SSO
        Profile](https://docs.oasis-open.org/security/saml/v2.0/saml-profiles-2.0-os.pdf)|
        SAML 2.0 
        |                                                                               
        |

        | `SPOTIFY`          | [Spotify](https://developer.spotify.com/)&nbsp;as
        the
        IdP                                                                              
        | OpenID Connect         | `user-read-email`,
        `user-read-private`                                |

        | `X509`             | [Smart Card
        IdP](https://tools.ietf.org/html/rfc5280)                                                                                  
        | Mutual TLS            
        |                                                                      
        |

        | `XERO`             |
        [Xero](https://www.xero.com/us/signup/api/)&nbsp;as the
        IdP                                                                            
        | OpenID Connect         | `openid`, `profile`,
        `email`                                          |

        | `YAHOO`            | [Yahoo](https://login.yahoo.com/)&nbsp;as the
        IdP                                                                                      
        | OpenID Connect         | `openid`, `profile`,
        `email`                                          |

        | `YAHOOJP`          | [Yahoo
        Japan](https://login.yahoo.co.jp/config/login)&nbsp;as the
        IdP                                                                   |
        OpenID Connect         | `openid`, `profile`,
        `email`                                          |

        | `OKTA_INTEGRATION`             | IdP that supports the [OpenID
        Connect](https://openid.net/specs/openid-connect-core-1_0.html) Org2Org
        IdP                                               | OpenID
        Connect         | `openid`, `email`,
        `profile`                                          |
      type: string
      enum:
        - AMAZON
        - APPLE
        - DISCORD
        - FACEBOOK
        - GITHUB
        - GITLAB
        - GOOGLE
        - IDV_CLEAR
        - IDV_INCODE
        - IDV_PERSONA
        - LINKEDIN
        - LOGINGOV
        - LOGINGOV_SANDBOX
        - MICROSOFT
        - OIDC
        - OKTA_INTEGRATION
        - PAYPAL
        - PAYPAL_SANDBOX
        - SALESFORCE
        - SAML2
        - SPOTIFY
        - X509
        - XERO
        - YAHOO
        - YAHOOJP
    AuthenticatorProfile:
      description: Defines the authenticator specific parameters
      type: object
      properties:
        phoneNumber:
          type: string
          description: The phone number for a `call` or `sms` authenticator enrollment.
      required:
        - phoneNumber
    AuthenticatorType:
      description: The type of authenticator
      type: string
      enum:
        - app
        - email
        - federated
        - password
        - phone
        - security_key
        - security_question
        - tac
    AuthenticatorEnrollmentLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - $ref: '#/components/schemas/LinksUser'
        - $ref: '#/components/schemas/LinksAuthenticator'
      readOnly: true
    AuthenticatorEnrollmentCreateRequest:
      type: object
      properties:
        authenticatorId:
          type: string
          description: Unique identifier of the `phone` authenticator
        profile:
          $ref: '#/components/schemas/AuthenticatorProfile'
      required:
        - authenticatorId
        - profile
    AuthenticatorEnrollmentCreateRequestTac:
      type: object
      properties:
        authenticatorId:
          type: string
          description: Unique identifier of the TAC authenticator
        profile:
          $ref: '#/components/schemas/AuthenticatorProfileTacRequest'
      required:
        - authenticatorId
    TacAuthenticatorEnrollment:
      type: object
      properties:
        created:
          type: string
          description: Timestamp when the authenticator enrollment was created
          format: date-time
        id:
          description: A unique identifier of the authenticator enrollment
          type: string
        key:
          description: A human-readable string that identifies the authenticator
          type: string
        lastUpdated:
          type: string
          description: Timestamp when the authenticator enrollment was last updated
          format: date-time
        name:
          description: The authenticator display name
          type: string
        nickname:
          type: string
          description: A user-friendly name for the authenticator enrollment
        profile:
          $ref: '#/components/schemas/AuthenticatorProfileTacResponsePost'
        status:
          type: string
          description: Status of the enrollment
        type:
          $ref: '#/components/schemas/AuthenticatorType'
        _links:
          $ref: '#/components/schemas/AuthenticatorEnrollmentLinks'
    ClassificationType:
      description: The type of user classification
      type: string
      enum:
        - LITE
        - STANDARD
      x-enumDescriptions:
        LITE: Lite
        STANDARD: Standard
    GrantResourcesHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: >-
            https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/grants
    TokenResourcesHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: >-
            https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens
    createdProperty:
      description: Timestamp when the object was created
      format: date-time
      example: '2017-03-28T01:11:10.000Z'
      type: string
      readOnly: true
    OAuth2Actor:
      description: User that created the object
      type: object
      properties:
        id:
          type: string
          description: User ID
          readOnly: true
          example: 00u5t60iloOHN9pBi0h7
        type:
          type: string
          description: Type of user
          example: User
      readOnly: true
    lastUpdatedProperty:
      format: date-time
      description: Timestamp when the object was last updated
      type: string
      readOnly: true
    OAuth2ScopeConsentGrantSource:
      description: User type source that granted consent
      example: ADMIN
      type: string
      enum:
        - ADMIN
        - END_USER
      readOnly: true
    GrantOrTokenStatus:
      description: Status
      example: ACTIVE
      type: string
      enum:
        - ACTIVE
        - REVOKED
      readOnly: true
    AppResourceHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: https://{yourOktaDomain}/api/v1/apps/0oabskvc6442nkvQO0h7
        title:
          type: string
          description: Link name
          example: My App
    ScopeResourceHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: >-
            https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scpCmCCV1DpxVkCaye2X
        title:
          type: string
          description: Link name
          example: My phone
    UserResourceHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7
        title:
          type: string
          description: Link name
          example: SAML Jackson
    AuthorizationServerResourceHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: >-
            https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7
        title:
          type: string
          description: Link name
          example: Example Authorization Server
    OAuth2RefreshTokenScope:
      type: object
      properties:
        description:
          type: string
          description: Description of the Scope
          example: >-
            Requests a refresh token by default, used to obtain more access
            tokens without re-prompting the user for authentication
        displayName:
          type: string
          description: Name of the end user displayed in a consent dialog
        id:
          type: string
          description: Scope object ID
          readOnly: true
          example: scppb56cIl4GvGxy70g3
        name:
          type: string
          description: Scope name
          example: offline_access
        _links:
          description: >-
            Specifies link relations (see [Web
            Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
            current status of an application using the [JSON Hypertext
            Application
            Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
            specification. This object is used for dynamic discovery of related
            resources and lifecycle operations.
          type: object
          properties:
            scope:
              description: Link to Scope resource
              allOf:
                - $ref: '#/components/schemas/OfflineAccessScopeResourceHrefObject'
    RevokeRefreshTokenHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: >-
            https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens/oar579Mcp7OUsNTlo0g3
    PasswordCredential:
      description: >-
        Specifies a password for a user.


        When a user has a valid password, imported hashed password, or password
        hook, and a response object contains

        a password credential, then the password object is a bare object without
        the value property defined (for example, `password: {}`). This indicates
        that a password value exists. You can modify password policy
        requirements in the Admin Console by editing the Password
        authenticator:  **Security** > **Authenticators** > **Password** (or for
        Okta Classic orgs, use **Security** > **Authentication** >
        **Password**).


        For information on defaults and configuring your password policies, see
        [Configure the password
        authenticator](https://help.okta.com/okta_help.htm?type=oie&id=ext-configure-password)
        in the help documentation.
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          type: string
          writeOnly: true
          description: >-
            Specifies the password for a user. The password policy validates
            this password.
          format: password
          example: pa$$word
    AuthenticationProvider:
      description: >-
        Specifies the authentication provider that validates the user's password
        credential. The user's current provider is managed by the **Delegated
        Authentication** settings for your org. The provider object is
        **read-only**.
      type: object
      properties:
        name:
          type: string
          description: The name of the authentication provider
          readOnly: true
          example: OKTA
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      readOnly: true
    RecoveryQuestionCredential:
      description: >-
        Specifies a secret question and answer that's validated (case
        insensitive) when a user forgets their

        password or unlocks their account. The answer property is write-only.
      type: object
      properties:
        answer:
          type: string
          description: The answer to the recovery question
          minimum: 1
          maximum: 100
          writeOnly: true
          example: se7en
        question:
          type: string
          description: The recovery question
          minimum: 1
          maximum: 100
          example: what is your favourite movie?
    Device:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the device was created
          readOnly: true
        id:
          type: string
          description: Unique key for the device
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          description: >-
            Timestamp when the device record was last updated. Updates occur
            when Okta collects and saves device signals during authentication,
            and when the lifecycle state of the device changes.
          readOnly: true
        profile:
          $ref: '#/components/schemas/DeviceProfile'
        resourceAlternateId:
          type: string
          readOnly: true
        resourceDisplayName:
          $ref: '#/components/schemas/DeviceDisplayName'
        resourceId:
          type: string
          description: Alternate key for the `id`
          readOnly: true
        resourceType:
          type: string
          default: UDDevice
          readOnly: true
        status:
          $ref: '#/components/schemas/DeviceStatus'
        _links:
          $ref: '#/components/schemas/LinksSelfAndFullUsersLifecycle'
    UserFactorType:
      description: Type of factor
      type: string
      enum:
        - call
        - email
        - push
        - question
        - signed_nonce
        - sms
        - token
        - token:hardware
        - token:hotp
        - token:software:totp
        - u2f
        - web
        - webauthn
    UserFactorStatus:
      example: ACTIVE
      description: Status of the factor
      type: string
      enum:
        - ACTIVE
        - DISABLED
        - ENROLLED
        - EXPIRED
        - INACTIVE
        - NOT_SETUP
        - PENDING_ACTIVATION
      readOnly: true
    UserFactorLinks:
      allOf:
        - $ref: '#/components/schemas/LinksActivate'
        - $ref: '#/components/schemas/LinksCancel'
        - $ref: '#/components/schemas/LinksDeactivate'
        - $ref: '#/components/schemas/LinksEnroll'
        - $ref: '#/components/schemas/LinksFactor'
        - $ref: '#/components/schemas/LinksPoll'
        - $ref: '#/components/schemas/LinksQrcode'
        - $ref: '#/components/schemas/LinksQuestions'
        - $ref: '#/components/schemas/LinksResend'
        - $ref: '#/components/schemas/LinksSend'
        - $ref: '#/components/schemas/LinksSelf'
        - $ref: '#/components/schemas/LinksUser'
        - $ref: '#/components/schemas/LinksVerify'
      readOnly: true
    UserFactorProvider:
      type: string
      enum:
        - CUSTOM
        - DUO
        - FIDO
        - GOOGLE
        - OKTA
        - RSA
        - SYMANTEC
        - YUBICO
    UserFactorPassCode:
      description: OTP for the current time window
      example: 1234567890
      type: string
    useNumberMatchingChallenge:
      description: >-
        Select whether to use a number matching challenge for a `push` factor.


        > **Note:** Sending a request with a body is required when you verify a
        `push` factor with a number matching challenge.
      example: true
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
      type: boolean
    LinksUser:
      type: object
      properties:
        user:
          allOf:
            - description: Returns information on the specified user
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksVerify:
      type: object
      properties:
        verify:
          allOf:
            - description: >-
                Verifies the factor resource. See [Verify a
                factor](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/verifyFactor).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    UserFactorVerifyResult:
      description: Result of a factor verification
      type: string
      enum:
        - CHALLENGE
        - ERROR
        - EXPIRED
        - FAILED
        - PASSCODE_REPLAYED
        - REJECTED
        - SUCCESS
        - TIMEOUT
        - TIME_WINDOW_EXCEEDED
      x-enumDescriptions:
        CANCELED: User cancelled the verification
        CHALLENGE: Okta issued a verification challenge
        ERROR: Verification encountered an unexpected server error
        EXPIRED: User didn't complete the verification within the allowed time window
        FAILED: Verification failed
        PASSCODE_REPLAYED: >-
          User previously verified the factor within the same time window.
          Another verification is required during another time window.
        REJECTED: User rejected the verification
        SUCCESS: User completed the verification
        TIMEOUT: Okta didn't complete the verification within the allowed time window
        TIME_WINDOW_EXCEEDED: >-
          User completed the verification outside of the allowed time window.
          Another verification is required.
    UserFactorVerifyResultWaiting:
      description: Result of a factor verification
      type: string
      enum:
        - WAITING
      x-enumDescriptions:
        WAITING: Verification is in progress
    NumberFactorChallengeEmbeddedLinks:
      description: >-
        Contains the `challenge` and `correctAnswer` objects for `push` factors
        that use a number matching challenge
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
      type: object
      properties:
        challenge:
          type: object
          description: Number matching challenge for a `push` factor
          properties:
            correctAnswer:
              description: >-
                The correct answer for a `push` factor that uses a number
                matching challenge
              type: integer
              example: 72
          nullable: true
    UserRiskLevelAll:
      description: The risk level associated with the user
      type: string
      enum:
        - HIGH
        - LOW
        - MEDIUM
        - NONE
    LinksUserRef:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/HrefObjectUserLink'
    UserRiskReason:
      description: Describes the risk level for the user
      example: Admin override risk
      type: string
    UserRiskLevelPut:
      description: The risk level associated with the user
      type: string
      enum:
        - HIGH
        - LOW
    RoleAssignmentType:
      description: Role assignment type
      type: string
      enum:
        - CLIENT
        - GROUP
        - USER
      x-enumDescriptions:
        USER: The role is assigned to a user
        GROUP: The role is assigned to a group
        CLIENT: The role is assigned to a client app
    RoleType:
      description: Standard role type
      type: string
      enum:
        - ACCESS_CERTIFICATIONS_ADMIN
        - ACCESS_REQUESTS_ADMIN
        - API_ACCESS_MANAGEMENT_ADMIN
        - API_ADMIN
        - APP_ADMIN
        - CUSTOM
        - GROUP_MEMBERSHIP_ADMIN
        - HELP_DESK_ADMIN
        - MOBILE_ADMIN
        - ORG_ADMIN
        - READ_ONLY_ADMIN
        - REPORT_ADMIN
        - SUPER_ADMIN
        - USER_ADMIN
        - WORKFLOWS_ADMIN
      x-enumDescriptions:
        API_ACCESS_MANAGEMENT_ADMIN: Access Management Administrator
        API_ADMIN: Access Management Administrator
        APP_ADMIN: Application Administrator
        CUSTOM: Custom label specified by the client
        GROUP_MEMBERSHIP_ADMIN: Group Membership Administrator
        HELP_DESK_ADMIN: Help Desk Administrator
        MOBILE_ADMIN: Mobile Administrator
        ORG_ADMIN: Organizational Administrator
        READ_ONLY_ADMIN: Read-Only Administrator
        REPORT_ADMIN: Report Administrator
        SUPER_ADMIN: Super Administrator
        USER_ADMIN: Group Administrator
        WORKFLOWS_ADMIN: Workflows Administrator
        ACCESS_CERTIFICATIONS_ADMIN: Access Certifications Administrator (predefined resource sets)
        ACCESS_REQUESTS_ADMIN: Access Requests Administrator (predefined resource sets)
    LinksAssignee:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification.
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/HrefObjectAssigneeLink'
    LinksCustomRoleResponse:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources.
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/HrefObjectAssigneeLink'
        member:
          $ref: '#/components/schemas/HrefObjectMemberLink'
        permissions:
          $ref: '#/components/schemas/HrefObjectPermissionsLink'
        resource-set:
          $ref: '#/components/schemas/HrefObjectResourceSetLink'
        role:
          $ref: '#/components/schemas/HrefObjectRoleLink'
    LinksGovernanceSources:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
        sources using the [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification.
      type: object
      properties:
        assignee:
          $ref: '#/components/schemas/HrefObjectUserLink'
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    GovernanceSourceType:
      description: The grant type
      type: string
      enum:
        - CUSTOM
        - ENTITLEMENT-BUNDLE
    LinksGovernanceResources:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
        resources using the [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification.
      type: object
      properties:
        resources:
          $ref: '#/components/schemas/HrefObjectGovernanceResourcesLink'
      readOnly: true
    RoleGovernanceResource:
      description: The resource of a grant
      type: object
      properties:
        label:
          type: string
          description: The resource name
        resource:
          type: string
          description: The resources id
    LinksNext:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
        current status of an application using the [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. Use the `LinksNext` object for dynamic discovery of
        related resources and lifecycle operations.
      type: object
      properties:
        next:
          $ref: '#/components/schemas/HrefObject'
      readOnly: true
    CatalogApplicationStatus:
      description: App status
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    HrefObjectLogoLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the logo resource
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    NotificationType:
      description: The type of notification
      type: string
      enum:
        - AD_AGENT
        - AGENT_AUTO_UPDATE_NOTIFICATION
        - AGENT_AUTO_UPDATE_NOTIFICATION_LDAP
        - APP_IMPORT
        - CONNECTOR_AGENT
        - IWA_AGENT
        - LDAP_AGENT
        - OKTA_ANNOUNCEMENT
        - OKTA_UPDATE
        - RATELIMIT_NOTIFICATION
        - REPORT_SUSPICIOUS_ACTIVITY
        - USER_DEPROVISION
        - USER_LOCKED_OUT
      x-enumDescriptions:
        AD_AGENT: System notification sent when an AD agent disconnects or reconnects
        AGENT_AUTO_UPDATE_NOTIFICATION: System notification sent when an agent automatically updates
        APP_IMPORT: System notification sent with the status of an app user import
        CONNECTOR_AGENT: >-
          System notification sent when an on-premises provisioning or Okta
          on-prem MFA agent disconnects or reconnects
        IWA_AGENT: System notification sent when an IGA agent disconnects or reconnects
        LDAP_AGENT: System notification sent when an LDAP agent disconnects or reconnects
        OKTA_ANNOUNCEMENT: Okta communication sent for announcements and release notes
        OKTA_UPDATE: Okta communication sent for scheduled system updates
        RATELIMIT_NOTIFICATION: >-
          System notification sent when an org reaches rate limit warning or
          violation thresholds
        REPORT_SUSPICIOUS_ACTIVITY: System notification sent when a user reports suspicious activity
        USER_DEPROVISION: System notification sent when a user is deprovisioned from apps
        USER_LOCKED_OUT: >-
          System notification sent when a user is locked out from logging in to
          Okta
    SubscriptionStatus:
      description: The status of the subscription
      type: string
      enum:
        - subscribed
        - unsubscribed
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    AuthenticationProviderWritable:
      description: >-
        Specifies the authentication provider that validates the user password
        credential. The user's current provider is managed by the **Delegated
        Authentication** settings in your org. See [Create user with
        authentication
        provider](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-authentication-provider).
      type: object
      properties:
        name:
          type: string
          description: The name of the authentication provider
          example: OKTA
        type:
          $ref: '#/components/schemas/AuthenticationProviderTypeWritable'
    OktaUserGroupProfile:
      description: >-
        Profile for any group that is not imported from Active Directory.
        Specifies the standard

        and custom profile properties for a group.


        The `objectClass` for these groups is `okta:user_group`.
      type: object
      properties:
        description:
          type: string
          example: All users West of The Rockies
          description: Description of the group
        name:
          type: string
          example: West Coast users
          description: Name of the group
      x-okta-extensible: true
    OktaActiveDirectoryGroupProfile:
      description: |-
        Profile for a group that is imported from Active Directory.

        The `objectClass` for such groups is `okta:windows_security_principal`.
      type: object
      properties:
        description:
          type: string
          example: All users in the engineering department
          description: Description of the Windows group
        dn:
          type: string
          example: CN=West Coast users,OU=West Coast,DC=example,DC=com
          description: The distinguished name of the Windows group
        externalId:
          type: string
          example: VKzYZ1C+IkSZxIWlrW5ITg==
          description: Base-64 encoded GUID (`objectGUID`) of the Windows group
        name:
          type: string
          example: West Coast users
          description: Name of the Windows group
        samAccountName:
          type: string
          example: West Coast users
          description: Pre-Windows 2000 name of the Windows group
        windowsDomainQualifiedName:
          type: string
          example: EXAMPLE\\West Coast users
          description: Fully qualified name of the Windows group
    PolicyAccountLink:
      description: Specifies the behavior for linking an IdP user to an existing Okta user
      type: object
      properties:
        action:
          $ref: '#/components/schemas/PolicyAccountLinkAction'
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
    Provisioning:
      description: >-
        Specifies the behavior for just-in-time (JIT) provisioning of an IdP
        user as a new Okta user and their group memberships
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningAction'
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
          description: >-
            Determines if the IdP should act as a source of truth for user
            profile attributes
    PolicySubject:
      description: >-
        Specifies the behavior for establishing, validating, and matching a
        username for an IdP user
      type: object
      properties:
        filter:
          type: string
          description: >-
            Optional [regular expression
            pattern](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Regular_expressions)
            used to filter untrusted IdP usernames.

            * As a best security practice, you should define a regular
            expression pattern to filter untrusted IdP usernames. This is
            especially important if multiple IdPs are connected to your org. The
            filter prevents an IdP from issuing an assertion for any user,
            including partners or directory users in your Okta org.

            * For example, the filter pattern `(\S+@example\.com)` allows only
            Users that have an `@example.com` username suffix. It rejects
            assertions that have any other suffix such as `@corp.example.com` or
            `@partner.com`.

            * Only `SAML2` and `OIDC` IdP providers support the `filter`
            property.
          maxLength: 1024
          example: (\S+@example\.com)
        matchAttribute:
          type: string
          description: >-
            Okta user profile attribute for matching a transformed IdP username.
            Only for matchType `CUSTOM_ATTRIBUTE`.

            The `matchAttribute` must be a valid Okta user profile attribute of
            one of the following types:

            * String (with no format or 'email' format only)

            * Integer

            * Number
          example: login
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
    SamlAlgorithms:
      description: Settings for signing and verifying SAML messages
      type: object
      properties:
        request:
          $ref: '#/components/schemas/SamlRequestAlgorithm'
        response:
          $ref: '#/components/schemas/SamlResponseAlgorithm'
    SamlCredentials:
      description: >-
        Federation Trust Credentials for verifying assertions from the IdP and
        signing requests to the IdP
      type: object
      properties:
        signing:
          $ref: '#/components/schemas/SamlSigningCredentials'
        trust:
          $ref: '#/components/schemas/SamlTrustCredentials'
    SamlEndpoints:
      description: SAML 2.0 HTTP binding settings for IdP and SP (Okta)
      type: object
      properties:
        acs:
          $ref: '#/components/schemas/SamlAcsEndpoint'
        slo:
          $ref: '#/components/schemas/SamlSloEndpoint'
        sso:
          $ref: '#/components/schemas/SamlSsoEndpoint'
    SamlRelayState:
      description: Relay state settings for IdP
      type: object
      properties:
        format:
          $ref: '#/components/schemas/SamlRelayStateFormat'
    SamlSettings:
      description: Advanced settings for the SAML 2.0 protocol
      type: object
      properties:
        honorPersistentNameId:
          type: boolean
          description: >-
            Determines if the IdP should persist account linking when the
            incoming assertion NameID format is
            `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`
          default: true
        nameFormat:
          $ref: '#/components/schemas/SamlNameIdFormat'
        participateSlo:
          type: boolean
          description: >-
            Set to `true` to have Okta send a logout request to the upstream IdP
            when a user signs out of Okta or a downstream app.
        sendApplicationContext:
          type: boolean
          description: >-
            Determines if the IdP should send the application context as
            `<OktaAppInstanceId>` and `<OktaAppName>` in the
            `<saml2p:Extensions>` element of the `<AuthnRequest>` message
          default: false
    OAuthCredentials:
      description: >-
        Client authentication credentials for an [OAuth 2.0 Authorization
        Server](https://tools.ietf.org/html/rfc6749#section-2.3)
      type: object
      properties:
        client:
          $ref: '#/components/schemas/OAuthCredentialsClient'
        signing:
          $ref: '#/components/schemas/AppleClientSigning'
    OAuthEndpoints:
      description: >-
        The `OAUTH2` and `OIDC` protocols support the `authorization` and
        `token` endpoints. Also, the `OIDC` protocol supports the `userInfo` and
        `jwks` endpoints.


        The IdP Authorization Server (AS) endpoints are currently defined as
        part of the [IdP
        provider]((https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=type&t=request))
        and are read-only.
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/OAuthAuthorizationEndpoint'
        jwks:
          $ref: '#/components/schemas/OidcJwksEndpoint'
        slo:
          $ref: '#/components/schemas/OidcSloEndpoint'
        token:
          $ref: '#/components/schemas/OAuthTokenEndpoint'
        userInfo:
          $ref: '#/components/schemas/OidcUserInfoEndpoint'
    OAuthScopes:
      description: >-
        IdP-defined permission bundles to request delegated access from the
        user.

        > **Note:** The [identity provider
        type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=type&t=request)
        table lists the scopes that are supported for each IdP.
      items:
        type: string
        example: public_profile
      type: array
    OidcAlgorithms:
      type: object
      properties:
        request:
          $ref: '#/components/schemas/OidcRequestAlgorithm'
    OidcSettings:
      description: Advanced settings for the OpenID Connect protocol
      type: object
      properties:
        participateSlo:
          type: boolean
          description: >-
            Set to `true` to have Okta send a logout request to the upstream IdP
            when a user signs out of Okta or a downstream app.
        sendApplicationContext:
          type: boolean
          description: >-
            Determines if the IdP should send the application context as
            `OktaAppInstanceId` and `OktaAppName` params in the request
          default: false
    MtlsCredentials:
      description: >-
        Certificate chain description for verifying assertions from the Smart
        Card
      type: object
      properties:
        trust:
          $ref: '#/components/schemas/MtlsTrustCredentials'
    MtlsEndpoints:
      type: object
      properties:
        sso:
          $ref: '#/components/schemas/MtlsSsoEndpoint'
    IDVCredentials:
      description: Credentials for verifying requests to the IDV
      type: object
      properties:
        bearer:
          type: object
          description: Client credential for `IDV_PERSONA` IdP type
          properties:
            apiKey:
              type: string
              description: The API key that you generate in your Persona dashboard
          required:
            - apiKey
        client:
          type: object
          description: >-
            <x-lifecycle-container><x-lifecycle
            class="oie"></x-lifecycle></x-lifecycle-container>Client credentials
            for `IDV_CLEAR` and `IDV_INCODE` IdP types
          properties:
            client_id:
              type: string
              description: The client ID that you generate in your IDV
            client_secret:
              type: string
              description: The client secret that you generate in your IDV
          required:
            - client_id
            - client_secret
          x-okta-lifecycle:
            lifecycle: LIMITED_GA
            isGenerallyAvailable: false
            SKUs: []
    IDVEndpoints:
      description: Contains the endpoints for the IDV
      type: object
      properties:
        authorization:
          $ref: '#/components/schemas/IDVAuthorizationEndpoint'
        par:
          $ref: '#/components/schemas/IDVParEndpoint'
        token:
          $ref: '#/components/schemas/IDVTokenEndpoint'
      readOnly: true
    LinksAuthenticator:
      type: object
      properties:
        authenticator:
          allOf:
            - description: >-
                Returns information about a specific authenticator. See
                [Retrieve an
                authenticator](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/Authenticator/#tag/Authenticator/operation/getAuthenticator).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    AuthenticatorProfileTacRequest:
      description: Defines the authenticator specific parameters
      type: object
      properties:
        multiUse:
          type: boolean
          description: >-
            Determines whether the enrollment can be used more than once. To
            enable multi-use, the org-level authenticator’s configuration must
            allow multi-use.
          writeOnly: true
        ttl:
          type: string
          description: >-
            Time-to-live (TTL) in minutes.


            Specifies how long the TAC enrollment is valid after it's created
            and activated.

            The configured value must be between 10 minutes (`10`) and 10 days
            (`14400`), inclusive.

            The actual allowed range depends on the org-level authenticator
            configuration.
          writeOnly: true
    AuthenticatorProfileTacResponsePost:
      description: Defines the authenticator specific parameters
      type: object
      properties:
        expiresAt:
          type: string
          description: The time when the TAC enrollment expires in the UTC timezone
          format: date-time
        multiUse:
          type: boolean
          description: Determines whether an enrollment can be used more than once
        tac:
          type: string
          description: >-
            A temporary access code used for authentication. It can be used one
            or more times and is valid for a defined period specified by the
            `ttl` property.

            The `tac` is returned in the response when the enrollment is
            created. It is not returned when the enrollment is retrieved.

            Issuing a new TAC invalidates any existing TAC for this user.
    OfflineAccessScopeResourceHrefObject:
      type: object
      properties:
        href:
          type: string
          description: Link URI
          example: >-
            https://{yourOktaDomain}/api/v1/authorizationServers/ausain6z9zIedDCxB0h7/scopes/scppb56cIl4GvGxy70g3
        title:
          type: string
          description: Link name
          example: offline_access
    PasswordCredentialHash:
      description: >-
        Specifies a hashed password to import into Okta. This allows an existing
        password to be imported into Okta directly

        from some other store. Okta supports the BCRYPT, SHA-512, SHA-256,
        SHA-1, MD5, and PBKDF2 hash functions for password import.
         A hashed password may be specified in a password object when creating or updating a user, but not for other operations.
         See the [Create user with imported hashed password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-imported-hashed-password) description. When you update a user with a hashed password, the user must be in the `STAGED` status.
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        digestAlgorithm:
          $ref: '#/components/schemas/DigestAlgorithm'
        iterationCount:
          type: integer
          description: >-
            The number of iterations used when hashing passwords using PBKDF2.
            Must be >= 4096. Only required for PBKDF2 algorithm.
        keySize:
          type: integer
          description: >-
            Size of the derived key in bytes. Only required for PBKDF2
            algorithm.
        salt:
          description: >-
            Only required for salted hashes. For BCRYPT, this specifies Radix-64
            as the encoded salt used to generate the hash,

            which must be 22 characters long. For other salted hashes, this
            specifies the Base64-encoded salt used to

            generate the hash.
          type: string
        saltOrder:
          type: string
          description: >-
            Specifies whether salt was pre- or postfixed to the password before
            hashing. Only required for salted algorithms.
        value:
          description: >-
            For SHA-512, SHA-256, SHA-1, MD5, and PBKDF2, this is the actual
            base64-encoded hash of the password (and salt, if used).

            This is the Base64-encoded `value` of the
            SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest that was computed by either
            pre-fixing or post-fixing

            the `salt` to the `password`, depending on the `saltOrder`. If a
            `salt` was not used in the `source` system, then this should just be

            the Base64-encoded `value` of the password's
            SHA-512/SHA-256/SHA-1/MD5/PBKDF2 digest. For BCRYPT, this is the
            actual Radix-64 encoded hashed password.
          type: string
        workFactor:
          type: integer
          description: >-
            Governs the strength of the hash and the time required to compute
            it. Only required for BCRYPT algorithm.
          minimum: 1
          maximum: 20
    PasswordCredentialHook:
      description: >-
        Specify a [password import inline
        hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createPasswordImportInlineHook)
        to trigger verification of the user's password the first time the user
        signs in. This allows an existing password to be imported into Okta
        directly from some other store.
      type: object
      properties:
        type:
          type: string
          description: The type of password inline hook. Currently, must be set to default.
    AuthenticationProviderType:
      description: The type of authentication provider
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - IMPORT
        - LDAP
        - OKTA
        - SOCIAL
      x-enumDescriptions:
        ACTIVE_DIRECTORY: >-
          Specifies the Microsoft Active Directory instance name as the `name`
          property
        FEDERATION: >-
          Specifies a federated identity provider (such as an SAML IdP) that
          validates the user's password credentials. Doesn't support a
          `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
        IMPORT: Specifies a hashed password that was imported from an external source
        LDAP: Specifies the LDAP directory instance name as the `name` property
        OKTA: Specifies the Okta identity provider
        SOCIAL: >-
          Specifies an OIDC or third-party social identity provider. Doesn't
          support a `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
      readOnly: true
    DeviceProfile:
      type: object
      properties:
        diskEncryptionType:
          $ref: '#/components/schemas/DiskEncryptionTypeDef'
        displayName:
          type: string
          description: Display name of the device
          minLength: 1
          maxLength: 255
        imei:
          type: string
          description: International Mobile Equipment Identity (IMEI) of the device
          minLength: 14
          maxLength: 17
        integrityJailbreak:
          type: boolean
          description: >-
            Indicates if the device is jailbroken or rooted. Only applicable to
            `IOS` and `ANDROID` platforms
        managed:
          type: boolean
          description: >-
            Indicates if the device is managed by mobile device management (MDM)
            software
        manufacturer:
          type: string
          description: Name of the manufacturer of the device
          maxLength: 127
        meid:
          type: string
          description: Mobile equipment identifier of the device
          maxLength: 14
        model:
          type: string
          description: Model of the device
          maxLength: 127
        osVersion:
          type: string
          description: Version of the device OS
          maxLength: 127
        platform:
          $ref: '#/components/schemas/DevicePlatform'
        registered:
          type: boolean
          description: Indicates if the device is registered at Okta
        secureHardwarePresent:
          type: boolean
          description: Indicates if the device contains a secure hardware functionality
        serialNumber:
          type: string
          description: Serial number of the device
          maxLength: 127
        sid:
          type: string
          description: Windows Security identifier of the device
          maxLength: 256
        tpmPublicKeyHash:
          type: string
          description: Windows Trusted Platform Module hash value
        udid:
          type: string
          description: macOS Unique device identifier of the device
          maxLength: 47
      required:
        - displayName
        - platform
        - registered
    DeviceDisplayName:
      description: Display name of the device
      type: object
      properties:
        sensitive:
          type: boolean
          description: >-
            Indicates whether the associated value is Personal Identifiable
            Information (PII) and requires masking
          default: false
        value:
          type: string
          description: Display name of the device
    DeviceStatus:
      description: The state object of the device
      type: string
      enum:
        - ACTIVE
        - DEACTIVATED
        - SUSPENDED
        - UNSUSPENDED
      x-enumDescriptions:
        ACTIVE: Use activated devices to create and delete device user links
        DEACTIVATED: >-
          Deactivation causes a device to lose all device user links. Set the
          device status to `DEACTIVATED` before deleting it.
        SUSPENDED: >-
          Use suspended devices to create and delete device user links. You can
          only unsuspend or deactivate suspended devices.
        UNSUSPENDED: Returns a suspended device to `ACTIVE`.
    LinksSelfAndFullUsersLifecycle:
      allOf:
        - $ref: '#/components/schemas/LinksSelfAndLifecycle'
        - type: object
          properties:
            suspend:
              $ref: '#/components/schemas/HrefObjectSuspendLink'
            unsuspend:
              $ref: '#/components/schemas/HrefObjectUnsuspendLink'
            users:
              description: Link to device users
              allOf:
                - $ref: '#/components/schemas/HrefObject'
    LinksActivate:
      type: object
      properties:
        activate:
          allOf:
            - description: >-
                Activates an enrolled factor. See [Activate a
                factor](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/activateFactor).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksCancel:
      type: object
      properties:
        cancel:
          allOf:
            - description: Cancels a `push` factor challenge with a `WAITING` status
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksDeactivate:
      type: object
      properties:
        deactivate:
          allOf:
            - description: >-
                Deactivates the factor. See [Unenroll a
                factor](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/unenrollFactor).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksEnroll:
      type: object
      properties:
        enroll:
          allOf:
            - description: >-
                Enrolls a supported factor. See [Enroll a
                factor](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/enrollFactor).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksFactor:
      type: object
      properties:
        factor:
          allOf:
            - description: Link to the factor resource
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksPoll:
      type: object
      properties:
        poll:
          allOf:
            - description: >-
                Polls the factor resource for status information. Always use the
                `poll` link instead of manually constructing your own URL.
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksQrcode:
      type: object
      properties:
        qrcode:
          allOf:
            - description: >-
                QR code that encodes the push activation code needed for
                enrollment on the device
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksQuestions:
      type: object
      properties:
        question:
          allOf:
            - description: >-
                Lists all supported security questions. See [List all supported
                security
                questions](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/listSupportedSecurityQuestions).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksResend:
      type: object
      properties:
        resend:
          allOf:
            - description: >-
                Resends the factor enrollment challenge. See [Resend a factor
                enrollment](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/UserFactor/#tag/UserFactor/operation/resendEnrollFactor).
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    LinksSend:
      type: object
      properties:
        send:
          allOf:
            - description: >-
                Sends an activation link through email or sms for users who
                can't scan the QR code
            - $ref: '#/components/schemas/HrefObject'
      readOnly: true
    HrefObjectUserLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the user resource
    HrefObjectAssigneeLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the assignee resource
    HrefObjectMemberLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the member resource
    HrefObjectPermissionsLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the permissions resource
    HrefObjectResourceSetLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource set resource
    HrefObjectRoleLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the role resource
    HrefObjectGovernanceResourcesLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resources
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    AuthenticationProviderTypeWritable:
      description: The type of authentication provider
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - IMPORT
        - LDAP
        - OKTA
        - SOCIAL
      x-enumDescriptions:
        ACTIVE_DIRECTORY: >-
          Specifies a Microsoft Active Directory instance name as the `name`
          property
        FEDERATION: >-
          Specifies a federated identity provider (such as a SAML IdP) that
          validates the user's password credentials. Doesn't support a
          `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
        IMPORT: Specifies a hashed password that was imported from an external source
        LDAP: Specifies the LDAP directory instance name as the `name` property
        OKTA: Specifies the Okta identity provider
        SOCIAL: >-
          Specifies an OIDC or third-party social identity provider. Doesn't
          support a `password` or `recovery question` credential. The user must
          authenticate through a trusted identity provider.
    PolicyAccountLinkAction:
      description: Specifies the account linking action for an IdP user
      type: string
      enum:
        - AUTO
        - DISABLED
      x-enumDescriptions:
        AUTO: >-
          The IdP user is automatically linked to an Okta user when the
          transformed IdP user matches an existing Okta user according to
          [subject match
          rules](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=policy/subject&t=request).
        DISABLED: >-
          Okta never attempts to link the IdP user to an existing Okta user, but
          may still attempt to provision a new Okta user according to the
          [provisioning action
          type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=policy/provisioning/action&t=request).
    PolicyAccountLinkFilter:
      description: >-
        Specifies filters on which users are available for account linking by an
        IdP
      type: object
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
        users:
          $ref: '#/components/schemas/PolicyAccountLinkFilterUsers'
    ProvisioningAction:
      description: >-
        Specifies the user provisioning action during authentication when an IdP
        user isn't linked to an existing Okta user.

        * To successfully provision a new Okta user, you must enable
        just-in-time (JIT) provisioning in your org security settings.

        * If the target username isn't unique or the resulting Okta user profile
        is missing a required profile attribute, JIT provisioning may fail.

        * New Okta users are provisioned with either a `FEDERATION` or `SOCIAL`
        authentication provider depending on the IdP type.
      type: string
      enum:
        - AUTO
        - DISABLED
      x-enumDescriptions:
        AUTO: >-
          The IdP user profile is transformed through defined universal
          directory profile mappings to an Okta user profile and automatically
          provisioned as an Okta user.
        DISABLED: >-
          Okta rejects the authentication request and skips provisioning of a
          new Okta user if the IdP user isn't linked to an existing Okta user.
    ProvisioningConditions:
      description: Conditional behaviors for an IdP user during authentication
      type: object
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
    ProvisioningGroups:
      description: Provisioning settings for a user's group memberships
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningGroupsAction'
        assignments:
          type: array
          description: >-
            List of `OKTA_GROUP` group identifiers to add an IdP user as a
            member with the `ASSIGN` action
          items:
            type: string
            example: 00gak46y5hydV6NdM0g4
        filter:
          type: array
          description: >-
            Allowlist of `OKTA_GROUP` group identifiers for the `APPEND` or
            `SYNC` provisioning action
          items:
            type: string
            example: 00gak46y5hydV6NdM0g4
        sourceAttributeName:
          type: string
          description: >-
            IdP user profile attribute name (case-insensitive) for an array
            value that contains group memberships
          maxLength: 1024
          example: Groups
    PolicySubjectMatchType:
      description: >-
        Determines the Okta user profile attribute match conditions for account
        linking and authentication of the transformed IdP username
      type: string
      enum:
        - CUSTOM_ATTRIBUTE
        - EMAIL
        - USERNAME
        - USERNAME_OR_EMAIL
    PolicyUserNameTemplate:
      description: >-
        [Okta Expression Language (EL)
        expression](https://developer.okta.com/docs/reference/okta-expression-language/)
        to generate or transform a unique username for the IdP user.

        * IdP user profile attributes can be referenced with the `idpuser`
        prefix such as `idpuser.subjectNameId`.

        * You must define an IdP user profile attribute before it can be
        referenced in an Okta EL expression. To define an IdP user attribute
        policy, you may need to create a new IdP instance without a base profile
        property. Then edit the IdP user profile to update the IdP instance with
        an expression that references the IdP user profile attribute that you
        just created.
      type: object
      properties:
        template:
          type: string
          minLength: 9
          maxLength: 1024
          example: idpuser.subjectNameId
    SamlRequestAlgorithm:
      description: Algorithm settings used to secure an `<AuthnRequest>` message
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/SamlRequestSignatureAlgorithm'
    SamlResponseAlgorithm:
      description: >-
        Algorithm settings for verifying `<SAMLResponse>` messages and
        `<Assertion>` elements from the IdP
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/SamlResponseSignatureAlgorithm'
    SamlSigningCredentials:
      description: Key used for signing requests to the IdP
      type: object
      properties:
        kid:
          $ref: '#/components/schemas/ProtocolCredentialsKeyId'
    SamlTrustCredentials:
      description: Federation Trust Credentials for verifying assertions from the IdP
      type: object
      properties:
        additionalKids:
          description: >-
            Additional IdP key credential reference to the Okta X.509 signature
            certificate
          type: array
          maxItems: 1
          items:
            $ref: '#/components/schemas/ProtocolCredentialsKeyId'
        audience:
          type: string
          description: >-
            URI that identifies the target Okta IdP instance (SP) for an
            `<Assertion>`
          maxLength: 1024
          example: https://www.okta.com/saml2/service-provider/spgv32vOnpdyeGSaiUpL
        issuer:
          type: string
          description: >-
            URI that identifies the issuer (IdP) of a `<SAMLResponse>` message
            `<Assertion>` element
          maxLength: 1024
          example: urn:example:idp
        kid:
          $ref: '#/components/schemas/ProtocolCredentialsKeyId'
    SamlAcsEndpoint:
      description: >-
        Okta's `SPSSODescriptor` endpoint where the IdP sends a `<SAMLResponse>`
        message
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        type:
          $ref: '#/components/schemas/SamlEndpointType'
    SamlSloEndpoint:
      description: >-
        IdP's `SingleLogoutService` endpoint where Okta sends a
        `<LogoutRequest>` message
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: >-
            URL of the binding-specific IdP endpoint where Okta sends a
            `<LogoutRequest>`
          maxLength: 1014
          example: https://idp.example.com/saml2/slo
    SamlSsoEndpoint:
      description: >-
        IdP's `SingleSignOnService` endpoint where Okta sends an
        `<AuthnRequest>` message
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        destination:
          type: string
          description: >-
            URI reference that indicates the address to which the
            `<AuthnRequest>` message is sent.

            The `destination` property is required if request signatures are
            specified. See [SAML 2.0 Request Algorithm
            object](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/IdentityProvider/#tag/IdentityProvider/operation/createIdentityProvider!path=protocol/0/algorithms/request&t=request).
          maxLength: 512
          example: https://idp.example.com/saml2/sso
        url:
          type: string
          description: >-
            URL of the binding-specific endpoint to send an `<AuthnRequest>`
            message to the IdP.

            The value of `url` defaults to the same value as the `sso` endpoint
            if omitted during creation of a new IdP instance.

            The `url` should be the same value as the `Location` attribute for a
            published binding in the IdP's SAML Metadata `IDPSSODescriptor`.
          maxLength: 1014
          example: https://idp.example.com/saml2/sso
    SamlRelayStateFormat:
      description: >-
        The format used to generate the `relayState` in the SAML request. The
        `FROM_URL` format is used if this value is null.
      type: string
      enum:
        - FROM_URL
        - OPAQUE
    SamlNameIdFormat:
      description: SAML 2.0 Name Identifier formats
      default: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
      type: string
      enum:
        - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
        - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
    OAuthCredentialsClient:
      description: >-
        OAuth 2.0 and OpenID Connect Client object

        > **Note:** You must complete client registration with the IdP
        Authorization Server for your Okta IdP instance to obtain client
        credentials.
      type: object
      properties:
        client_id:
          type: string
          description: >-
            The [Unique
            identifier](https://tools.ietf.org/html/rfc6749#section-2.2) issued
            by the AS for the Okta IdP instance
          maxLength: 1024
          example: your-client-id
        client_secret:
          type: string
          description: >-
            The [Client
            secret](https://tools.ietf.org/html/rfc6749#section-2.3.1) issued by
            the AS for the Okta IdP instance
          maxLength: 1024
          example: your-client-secret
        pkce_required:
          type: boolean
          description: >-
            Require Proof Key for Code Exchange (PKCE) for additional
            verification
        token_endpoint_auth_method:
          type: string
          description: Client authentication methods supported by the token endpoint
          enum:
            - private_key_jwt
    AppleClientSigning:
      description: >-
        Information used to generate the secret JSON Web Token for the token
        requests to Apple IdP

        > **Note:** The `privateKey` property is required for a CREATE request.
        For an UPDATE request, it can be null and keeps the existing value if
        it's null. The `privateKey` property isn't returned for LIST and GET
        requests or UPDATE requests if it's null.
      type: object
      properties:
        kid:
          type: string
          description: >-
            The key ID that you obtained from Apple when you created the private
            key for the client
          maxLength: 1024
          example: test key id
        privateKey:
          type: string
          description: >-
            The PKCS \#8 encoded private key that you created for the client and
            downloaded from Apple
          maxLength: 1024
          example: MIGTAgEAMBM........Cb9PnybCnzDv+3cWSGWqpAIsQQZ
        teamId:
          type: string
          description: The Team ID associated with your Apple developer account
          maxLength: 1024
          example: test team id
    OAuthAuthorizationEndpoint:
      description: >-
        Endpoint for an [OAuth 2.0 Authorization Server
        (AS)](https://tools.ietf.org/html/rfc6749#page-18)
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the IdP Authorization Server (AS) authorization endpoint
          example: https://idp.example.com/authorize
    OidcJwksEndpoint:
      description: >-
        Endpoint for the JSON Web Key Set (JWKS) document. This document
        contains signing keys that are used to validate the signatures from the
        provider. For more information on JWKS, see [JSON Web
        Key](https://tools.ietf.org/html/rfc7517).
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the endpoint to the JWK Set
          example: https://idp.example.com/keys
    OidcSloEndpoint:
      description: OIDC IdP logout endpoint
      type: object
      properties:
        url:
          type: string
          description: IdP logout endpoint URL
          maxLength: 1014
          example: https://idp.example.com/saml2/slo
    OAuthTokenEndpoint:
      description: >-
        Endpoint for an [OAuth 2.0 Authorization Server
        (AS)](https://tools.ietf.org/html/rfc6749#page-18)
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the IdP Authorization Server (AS) token endpoint
          example: https://idp.example.com/token
    OidcUserInfoEndpoint:
      description: >-
        Endpoint for getting identity information about the user. For more
        information on the `/userinfo` endpoint, see [OpenID
        Connect](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).
      type: object
      properties:
        binding:
          $ref: '#/components/schemas/ProtocolEndpointBinding'
        url:
          type: string
          description: URL of the resource server's `/userinfo` endpoint
          example: https://idp.example.com/userinfo
    OidcRequestAlgorithm:
      description: Algorithm settings used to sign an authorization request
      type: object
      properties:
        signature:
          $ref: '#/components/schemas/OidcRequestSignatureAlgorithm'
    MtlsTrustCredentials:
      type: object
      properties:
        audience:
          type: string
          description: Not used
          example: null
        issuer:
          type: string
          description: Description of the certificate issuer
          maxLength: 1024
          example: CN=Test Smart Card, OU=Test OU, O=Test O, C=US
        kid:
          $ref: '#/components/schemas/ProtocolCredentialsKeyId'
        revocation:
          $ref: '#/components/schemas/MtlsTrustCredentialsRevocation'
        revocationCacheLifetime:
          type: number
          description: Time in minutes to cache the certificate revocation information
          maximum: 4320
          example: 2880
    MtlsSsoEndpoint:
      description: >-
        The Single Sign-On (SSO) endpoint is the IdP's `SingleSignOnService`
        endpoint
      type: object
      properties:
        url:
          type: string
          maxLength: 1014
          example: https://{yourOktaDomain}.okta.com/login/cert
    IDVAuthorizationEndpoint:
      description: IDV authorization endpoint
      type: object
      properties:
        binding:
          type: string
          enum:
            - HTTP-REDIRECT
        url:
          type: string
          description: URL of the IDV `authorization` endpoint
      readOnly: true
    IDVParEndpoint:
      description: IDV [PAR](https://datatracker.ietf.org/doc/html/rfc9126) endpoint
      type: object
      properties:
        binding:
          type: string
          enum:
            - HTTP-POST
        url:
          type: string
          description: URL of the IDV `par` endpoint
      readOnly: true
    IDVTokenEndpoint:
      description: IDV token endpoint
      type: object
      properties:
        binding:
          type: string
          enum:
            - HTTP-POST
        url:
          type: string
          description: URL of the IDV `token` endpoint
      readOnly: true
    PasswordCredentialHashAlgorithm:
      description: >-
        The algorithm used to generate the hash using the password (and salt,
        when applicable).
      type: string
      enum:
        - BCRYPT
        - MD5
        - PBKDF2
        - SHA-1
        - SHA-256
        - SHA-512
    DigestAlgorithm:
      description: >-
        Algorithm used to generate the key. Only required for the PBKDF2
        algorithm.
      type: string
      enum:
        - SHA256_HMAC
        - SHA512_HMAC
    DiskEncryptionTypeDef:
      description: >-
        Type of encryption used on the device

        > **Note:** The following values map to Disk Encryption ON: `FULL`,
        `USER`, `ALL_INTERNAL_VOLUMES`. All other values map to Disk Encryption
        OFF.
      type: string
      enum:
        - ALL_INTERNAL_VOLUMES
        - FULL
        - NONE
        - SYSTEM_VOLUME
        - USER
      x-enumDescriptions:
        NONE: No encryption has been set.
        FULL: >-
          Disk is fully encrypted. Only applicable to `IOS` and `ANDROID`
          platforms.
        USER: >-
          Encryption key is tied to the user or profile. Only applicable to
          `ANDROID` platform.
        ALL_INTERNAL_VOLUMES: >-
          All internal disks are encrypted. Only applicable to `WINDOWS` and
          `MACOS` platforms.
        SYSTEM_VOLUME: >-
          Only the system volume is encrypted. Only applicable to `WINDOWS` and
          `MACOS` platforms.
    DevicePlatform:
      description: OS platform of the device
      type: string
      enum:
        - ANDROID
        - IOS
        - MACOS
        - WINDOWS
    LinksSelfAndLifecycle:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            activate:
              $ref: '#/components/schemas/HrefObjectActivateLink'
            deactivate:
              $ref: '#/components/schemas/HrefObjectDeactivateLink'
    HrefObjectSuspendLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to suspend the resource
    HrefObjectUnsuspendLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to unsuspend the resource
    PolicyAccountLinkFilterGroups:
      description: Group memberships used to determine link candidates
      type: object
      properties:
        include:
          type: array
          description: >-
            Specifies the allowlist of Group identifiers to match against. Group
            memberships are restricted to type `OKTA_GROUP`.
          items:
            type: string
            example: 00gjg5lzfBpn62wuF0g3
    PolicyAccountLinkFilterUsers:
      description: Filters on which users are available for account linking
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
      type: object
      properties:
        exclude:
          type: array
          description: >-
            Specifies the blocklist of user identifiers to exclude from account
            linking
          items:
            type: string
            example: 00u2c0nz7wj4UBs8V0g5
        excludeAdmins:
          type: boolean
          description: >-
            Specifies whether admin users should be excluded from account
            linking
          default: false
    ProvisioningDeprovisionedCondition:
      description: >-
        Behavior for a previously deprovisioned IdP user during authentication.
        Not supported with OIDC IdPs.
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningDeprovisionedAction'
    ProvisioningSuspendedCondition:
      description: >-
        Behavior for a previously suspended IdP user during authentication. Not
        supported with OIDC IdPs.
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ProvisioningSuspendedAction'
    ProvisioningGroupsAction:
      description: >-
        Provisioning action for the IdP user's group memberships


        | Enum     |
        Description                                                                                                                                                      
        | Existing OKTA_GROUP
        Memberships                                                                      
        | Existing APP_GROUP Memberships | Existing BUILT_IN Memberships |

        | -------- |
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------
        |
        -----------------------------------------------------------------------------------------------------
        | ------------------------------ | ----------------------------- |

        | `APPEND` | Adds a user to any group defined by the IdP as a value of
        the `sourceAttributeName` array that matches the name of the allow
        listed group defined in the `filter` |
        Unchanged                                                                                            
        | Unchanged                      | Unchanged                     |

        | `ASSIGN` | Assigns a user to groups defined in the `assignments`
        array                                                                                                      
        |
        Unchanged                                                                                            
        | Unchanged                      | Unchanged                     |

        | `NONE`   | Skips processing of group
        memberships                                                                                                                            
        |
        Unchanged                                                                                            
        | Unchanged                      | Unchanged                     |

        | `SYNC`   | Group memberships are sourced by the IdP as a value of the
        `sourceAttributeName` array that matches the name of the group defined
        in the `filter`                 | Removed if not defined by the IdP in
        `sourceAttributeName` and matching name of the group in `filter` |
        Unchanged                      | Unchanged                     |


        > **Note:** Group provisioning action is processed independently from
        profile sourcing. You can sync group memberships through SAML with
        profile sourcing disabled.
      type: string
      enum:
        - APPEND
        - ASSIGN
        - NONE
        - SYNC
    SamlRequestSignatureAlgorithm:
      description: >-
        XML digital Signature Algorithm settings for signing `<AuthnRequest>`
        messages sent to the IdP

        > **Note:**  The `algorithm` property is ignored when you disable
        request signatures (`scope` set as `NONE`).
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/SamlSigningAlgorithm'
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmRequestScope'
    SamlResponseSignatureAlgorithm:
      description: >-
        XML digital Signature Algorithm settings for verifying `<SAMLResponse>`
        messages and `<Assertion>` elements from the IdP
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/SamlSigningAlgorithm'
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmResponseScope'
    ProtocolCredentialsKeyId:
      description: IdP key credential reference to the Okta X.509 signature certificate
      example: your-key-id
      type: string
    ProtocolEndpointBinding:
      type: string
      enum:
        - HTTP-POST
        - HTTP-REDIRECT
    SamlEndpointType:
      description: >-
        Determines whether to publish an instance-specific (trust) or
        organization (shared) ACS endpoint in the SAML metadata
      default: INSTANCE
      type: string
      enum:
        - INSTANCE
        - ORG
    OidcRequestSignatureAlgorithm:
      description: >-
        Signature Algorithm settings for signing authorization requests sent to
        the IdP

        > **Note:**  The `algorithm` property is ignored when you disable
        request signatures (`scope` set as `NONE`).
      type: object
      properties:
        algorithm:
          $ref: '#/components/schemas/OidcSigningAlgorithm'
        scope:
          $ref: '#/components/schemas/ProtocolAlgorithmRequestScope'
    MtlsTrustCredentialsRevocation:
      description: Mechanism to validate the certificate
      example: CRL
      type: string
      enum:
        - CRL
        - DELTA_CRL
        - OCSP
    HrefObjectActivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to activate the resource
    HrefObjectDeactivateLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to deactivate the resource
    ProvisioningDeprovisionedAction:
      description: >-
        Specifies the action during authentication when an IdP user is linked to
        a previously deprovisioned Okta user
      type: string
      enum:
        - NONE
        - REACTIVATE
      x-enumDescriptions:
        NONE: >-
          Take no action. If an IdP user that matches a previously deprovisioned
          Okta user attempts to authenticate, authentication fails.
        REACTIVATE: >-
          If an IdP user that matches a previously deprovisioned Okta user
          attempts to authenticate, reactivate the matching user in Okta and
          allow the authentication attempt to proceed.
    ProvisioningSuspendedAction:
      description: >-
        Specifies the action during authentication when an IdP user is linked to
        a previously suspended Okta user
      type: string
      enum:
        - NONE
        - UNSUSPEND
      x-enumDescriptions:
        NONE: >-
          Take no action. If an IdP user that matches a previously suspended
          Okta user attempts to authenticate, authentication fails.
        UNSUSPEND: >-
          If an IdP user that matches a previously suspended Okta user attempts
          to authenticate, unsuspend the matching user in Okta and allow the
          authentication attempt to proceed.
    SamlSigningAlgorithm:
      example: SHA-256
      type: string
      enum:
        - SHA-1
        - SHA-256
    ProtocolAlgorithmRequestScope:
      description: Specifies whether to digitally sign authorization requests to the IdP
      example: REQUEST
      type: string
      enum:
        - NONE
        - REQUEST
    ProtocolAlgorithmResponseScope:
      description: Specifies whether to verify responses from the IdP
      example: ANY
      type: string
      enum:
        - ANY
        - RESPONSE
        - TOKEN
    OidcSigningAlgorithm:
      type: string
      enum:
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
  responses:
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorMissingRequiredParameter400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            MissingRequiredParameter:
              $ref: '#/components/examples/ErrorMissingRequiredParameter'
    PhoneAuthenticatorCreateEnrollmentResponse:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticatorEnrollment'
          examples:
            PhoneSmsEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentResponsePhoneSms'
            PhoneCallEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentResponsePhoneVoice'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    TacAuthenticatorCreateEnrollmentResponse:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TacAuthenticatorEnrollment'
          examples:
            TacEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentResponseTac'
    AuthenticatorEnrollmentResponse:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticatorEnrollment'
          examples:
            PhoneSmsEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentResponsePhoneSms'
            PhoneCallEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentResponsePhoneVoice'
    GetFactorResponse:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserFactor'
          examples:
            SMS:
              $ref: '#/components/examples/FactorResponseSms'
            Email:
              $ref: '#/components/examples/FactorEmail'
  parameters:
    OktaResponse:
      name: Content-Type
      in: header
      description: >-
        Specifies the media type of the resource. Optional `okta-response` value
        can be included for performance optimization.


        Complex DelAuth configurations may degrade performance when fetching
        specific parts of the response, and passing this parameter can omit
        these parts, bypassing the bottleneck.


        Enum values for `okta-response`:
          * `omitCredentials`: Omits the credentials subobject from the response.
          * `omitCredentialsLinks`: Omits the following HAL links from the response: Update password, Change recovery question, Start forgot password flow, Reset password, Reset factors, Unlock.
          * `omitTransitioningToStatus`: Omits the `transitioningToStatus` field from the response.
      required: false
      schema:
        type: string
      examples:
        Omit credentials subobject and credentials links:
          value: application/json; okta-response=omitCredentials,omitCredentialsLinks
          summary: >-
            Omits the credentials subobject and credentials links from the
            response. Doesn't apply performance optimization.
        Omit credentials, credentials links, and `transitioningToStatus` field:
          value: >-
            application/json;
            okta-response="omitCredentials,omitCredentialsLinks,
            omitTransitioningToStatus"
          summary: >-
            Omits the credentials, credentials links, and
            `transitioningToStatus` field from the response. Applies performance
            optimization.
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    pathId:
      name: id
      description: >-
        An ID, login, or login shortname (as long as the shortname is
        unambiguous) of an existing Okta user
      in: path
      required: true
      schema:
        type: string
    queryUserExpand:
      name: expand
      in: query
      description: >-
        An optional parameter to include metadata in the `_embedded` attribute.
        Valid values: `blocks` or <x-lifecycle class="ea"></x-lifecycle>
        `classification`.
      required: false
      schema:
        type: string
        example: blocks
    pathUserIdOrLogin:
      name: userIdOrLogin
      description: >-
        If for the `self` link, this is the ID of the user for whom you want to
        get the primary user ID. If for the `associated` relation, this is the
        user ID or login value of the user assigned the associated relationship.


        This can be `me` to represent the current session user.
      in: path
      required: true
      schema:
        type: string
      examples:
        manager:
          value: 00u5zex6ztMbOZhF50h7
          summary: Example ID of `primary`
        subordinate:
          value: 00u5zex6ztMbOZhF50h7
          summary: Example ID of `associated`
    pathPrimaryRelationshipName:
      name: primaryRelationshipName
      description: Name of the `primary` relationship being assigned
      in: path
      required: true
      schema:
        type: string
        example: manager
    pathPrimaryUserId:
      name: primaryUserId
      description: >-
        User ID to be assigned to the `primary` relationship for the
        `associated` user
      in: path
      required: true
      schema:
        type: string
    pathRelationshipName:
      name: relationshipName
      description: Name of the `primary` or `associated` relationship being queried
      in: path
      required: true
      schema:
        type: string
      examples:
        manager:
          value: manager
          summary: Example of a `primary` name
        subordinate:
          value: subordinate
          summary: Example of an `associated` name
    pathUserId:
      name: userId
      description: ID of an existing Okta user
      in: path
      required: true
      schema:
        type: string
        example: 00ub0oNGTSWTBKOLGLNR
    pathEnrollmentId:
      name: enrollmentId
      description: Unique identifier of an enrollment
      in: path
      required: true
      schema:
        type: string
        example: sms8lqwuzSpWT4kVs0g4
    pathClientId:
      name: clientId
      description: Client app ID
      in: path
      required: true
      schema:
        type: string
        example: 52Uy4BUWVBOjFItcg2jWsmnd83Ad8dD
    pathTokenId:
      name: tokenId
      description: '`id` of Token'
      in: path
      required: true
      schema:
        type: string
        example: sHHSth53yJAyNSTQKDJZ
    pathFactorId:
      name: factorId
      description: ID of an existing user factor
      in: path
      required: true
      schema:
        type: string
        example: zAgrsaBe0wVGRugDYtdv
    pathTransactionId:
      name: transactionId
      description: ID of an existing factor verification transaction
      in: path
      required: true
      schema:
        type: string
        example: gPAQcN3NDjSGOCAeG2Jv
    pathGrantId:
      name: grantId
      description: Grant ID
      in: path
      required: true
      schema:
        type: string
        example: iJoqkwx50mrgX4T9LcaH
    pathQueryRoleExpand:
      name: expand
      description: >-
        An optional parameter used to return targets configured for the standard
        role assignment in the `embedded` property. Supported values:
        `targets/groups` or `targets/catalog/apps`
      in: query
      required: false
      schema:
        type: string
      examples:
        groupTarget:
          value: targets/groups
          summary: Return group targets
        appTarget:
          value: targets/catalog/apps
          summary: Return app targets
    pathRoleAssignmentId:
      name: roleAssignmentId
      description: The `id` of the role assignment
      in: path
      required: true
      schema:
        type: string
        example: JBCUYUC7IRCVGS27IFCE2SKO
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    pathAppName:
      name: appName
      description: Name of the app definition (the OIN catalog app key name)
      in: path
      required: true
      schema:
        type: string
        example: google
    pathAppId:
      name: appId
      description: Application ID
      in: path
      required: true
      schema:
        type: string
        example: 0oafxqCAJWWGELFTYASJ
    pathGroupId:
      name: groupId
      description: The `id` of the group
      in: path
      required: true
      schema:
        type: string
        example: 00g1emaKYZTWRYYRRTSK
    pathRoleIdOrEncodedRoleId:
      name: roleIdOrEncodedRoleId
      description: The `id` of the role or Base32 encoded `id` of the role name
      in: path
      required: true
      schema:
        type: string
        example: JBCUYUC7IRCVGS27IFCE2SKO
    assignmentType:
      name: assignmentType
      description: Specifies the assignment type of the user
      in: query
      required: false
      schema:
        type: string
        enum:
          - USER
          - GROUP
        example: GROUP
    pathNotificationType:
      name: notificationType
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/NotificationType'
  examples:
    ListRealmAwareUsersResponse:
      summary: List all users
      value:
        - id: 00u118oQYT4TBGuay0g4
          status: ACTIVE
          created: '2022-04-04T15:56:05.000Z'
          activated: null
          statusChanged: null
          lastLogin: '2022-05-04T19:50:52.000Z'
          lastUpdated: '2022-05-05T18:15:44.000Z'
          passwordChanged: '2022-04-04T16:00:22.000Z'
          type:
            id: oty1162QAr8hJjTaq0g4
          profile:
            firstName: Alice
            lastName: Smith
            mobilePhone: null
            secondEmail: null
            login: alice.smith@example.com
            email: alice.smith@example.com
          realmId: guo1afiNtSnZYILxO0g4
          credentials:
            password: {}
            provider:
              type: OKTA
              name: OKTA
          _links:
            self:
              href: http://your-subdomain.okta.com/api/v1/users/00u118oQYT4TBGuay0g4
    create-user-without-credentials-request:
      description: >-
        See [Create user without
        credentials](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-without-credentials)
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
    create-user-with-recovery-question-request:
      description: >-
        See [Create user with recovery
        question](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-recovery-question)
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          recovery_question:
            question: Who is a major player in the cowboy scene?
            answer: Annie Oakley
    create-user-with-password-request:
      description: >-
        Set `activate` parameter to `true`. See [Create user with
        password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-password).
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password:
            value: tlpWENT2m
    create-user-with-imported-hashed-password-request:
      description: >-
        Set `activate` parameter to `true`.  See [Create user with imported
        hashed
        password](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-imported-hashed-password).
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password:
            hash:
              algorithm: BCRYPT
              workFactor: 10
              salt: rwh3vH166HCH/NT9XV5FYu
              value: qaMqvAPULkbiQzkTCWo5XDcvzpk8Tna
    create-user-with-password-import-inline-hook-request:
      description: >-
        Set `activate` parameter to `true`.  See [Create user with password
        import inline
        hook](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-password-import-inline-hook).
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password:
            hook:
              type: default
    create-user-with-password-and-recovery-question-request:
      description: >-
        See [Create user with password and recovery
        question](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-password-and-recovery-question)
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password:
            value: tlpWENT2m
          recovery_question:
            question: Who is a major player in the cowboy scene?
            answer: Annie Oakley
    create-user-with-authentication-provider-request:
      description: >-
        Set `activate` parameter to `true`. See [Create user with authentication
        provider](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-authentication-provider).
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          provider:
            type: FEDERATION
            name: FEDERATION
    create-user-in-group-request:
      description: >-
        See [Create user in
        group](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-in-group)
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        groupIds:
          - 00g1emaKYZTWRYYRRTSK
          - 00garwpuyxHaWOkdV0g4
    create-user-with-non-default-user-type-request:
      description: >-
        See [Create user with non-default user
        type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#create-user-with-non-default-user-type)
      value:
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        type:
          id: otyfnjfba4ye7pgjB0g4
    create-user-without-credentials-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: STAGED
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: null
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          provider:
            type: OKTA
            name: OKTA
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-recovery-question-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: STAGED
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: null
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          recovery_question:
            question: Who's a major player in the cowboy scene?
          provider:
            type: OKTA
            name: OKTA
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-password-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: ACTIVE
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: '2013-07-02T21:36:25.344Z'
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password: {}
          provider:
            type: OKTA
            name: OKTA
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-imported-hashed-password-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: ACTIVE
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: '2013-07-02T21:36:25.344Z'
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password: {}
          provider:
            type: IMPORT
            name: IMPORT
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-password-import-inline-hook-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: ACTIVE
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: '2013-07-02T21:36:25.344Z'
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password: {}
          provider:
            type: IMPORT
            name: IMPORT
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-password-and-recovery-question-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: STAGED
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: '2013-07-02T21:36:25.344Z'
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password: {}
          recovery_question:
            question: Who's a major player in the cowboy scene?
          provider:
            type: OKTA
            name: OKTA
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-authentication-provider-response:
      value:
        id: 00uijntSwJjSHtDY70g3
        status: ACTIVE
        created: '2016-01-19T22:02:08.000Z'
        activated: '2016-01-19T22:02:08.000Z'
        statusChanged: '2016-01-19T22:02:08.000Z'
        lastLogin: null
        lastUpdated: '2016-01-19T22:02:08.000Z'
        passwordChanged: null
        profile:
          login: isaac.brock@example.com
          firstName: Isaac
          lastName: Brock
          mobilePhone: 555-415-1337
          email: isaac.brock@example.com
          secondEmail: null
        credentials:
          provider:
            type: FEDERATION
            name: FEDERATION
        _links:
          resetPassword:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00uijntSwJjSHtDY70g3/lifecycle/reset_password
            method: POST
          changeRecoveryQuestion:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00uijntSwJjSHtDY70g3/credentials/change_recovery_question
            method: POST
          deactivate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00uijntSwJjSHtDY70g3/lifecycle/deactivate
            method: POST
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-in-group-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: STAGED
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: null
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          provider:
            type: OKTA
            name: OKTA
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    create-user-with-non-default-user-type-response:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: STAGED
        created: '2013-07-02T21:36:25.344Z'
        activated: null
        statusChanged: null
        lastLogin: null
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: null
        type:
          id: otyfnjfba4ye7pgjB0g4
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          provider:
            type: OKTA
            name: OKTA
        _links:
          schema:
            href: >-
              https://{yourOktaDomain}/api/v1/meta/schemas/user/oscfnjfba4ye7pgjB0g4
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/activate
          self:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
          type:
            href: >-
              https://{yourOktaDomain}/api/v1/meta/types/user/otyfnjfba4ye7pgjB0g4
    ErrorCreateUserWithTooManyManyGroupsResponse:
      value:
        errorCode: E0000093
        errorSummary: Target count limit exceeded
        errorLink: E0000093
        errorId: oaePVSLIYnIQsC0B-ptBIllVA
        errorCauses:
          - errorSummary: The number of group targets is too large
    ErrorCreateUserWithExpiredPasswordWithoutActivation:
      value:
        errorCode: E0000125
        errorSummary: >-
          Could not create user. To create a user and expire their password
          immediately, `activate` must be true.
        errorLink: E0000125
        errorId: oaeDd77L9R-TJaD7j_rXsQ31w
        errorCauses:
          - errorSummary: >-
              Could not create user. To create a user and expire their password
              immediately, `activate` must be true.
    ErrorCreateUserWithExpiredPasswordWithNullPassword:
      value:
        errorCode: E0000124
        errorSummary: >-
          Could not create user. To create a user and expire their password
          immediately, a password must be specified.
        errorLink: E0000124
        errorId: oaeXxuZgXBySvqi1FvtkwoYCA
        errorCauses:
          - errorSummary: >-
              Could not create user. To create a user and expire their password
              immediately, a password must be specified.
    user-example:
      summary: User example
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: ACTIVE
        created: '2013-06-24T16:39:18.000Z'
        activated: '2013-06-24T16:39:19.000Z'
        statusChanged: '2013-06-24T16:39:19.000Z'
        lastLogin: '2013-06-24T17:39:19.000Z'
        lastUpdated: '2013-07-02T21:36:25.344Z'
        passwordChanged: '2013-07-02T21:36:25.344Z'
        profile:
          login: isaac.brock@example.com
          firstName: Isaac
          lastName: Brock
          nickName: issac
          displayName: Isaac Brock
          email: isaac.brock@example.com
          secondEmail: isaac@example.org
          profileUrl: http://www.example.com/profile
          preferredLanguage: en-US
          userType: Employee
          organization: Okta
          title: Director
          division: R&D
          department: Engineering
          costCenter: '10'
          employeeNumber: '187'
          mobilePhone: +1-555-415-1337
          primaryPhone: +1-555-514-1337
          streetAddress: 301 Brannan St.
          city: San Francisco
          state: CA
          zipCode: '94107'
          countryCode: US
        credentials:
          password: {}
          recovery_question:
            question: What's my childhood elementary school?
          provider:
            type: OKTA
            name: OKTA
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/users/00u1f96ECLNVOKVMUSEA
    update-user-profile-request:
      value:
        profile:
          firstName: Isaac
          email: isaac.brock@update.example.com
          mobilePhone: 555-415-1337
    update-user-set-password-request:
      value:
        credentials:
          password:
            value: uTVM,TPw55
    update-user-set-recovery-question-and-answer:
      value:
        credentials:
          recovery_question:
            question: How many roads must a man walk down?
            answer: forty two
    replace-user-request:
      value:
        credentials:
          password:
            value: tlpWENT2m
          recovery_question:
            question: Who's a major player in the cowboy scene?
            answer: Annie Oakley
          provider:
            type: OKTA
            name: OKTA
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
    ListAppLinks:
      value:
        - id: 00ub0oNGTSWTBKOLGLNR
          label: Google Apps Mail
          linkUrl: https://{yourOktaDomain}/home/google/0oa3omz2i9XRNSRIHBZO/50
          logoUrl: https://{yourOktaDomain}/img/logos/google-mail.png
          appName: google
          appInstanceId: 0oa3omz2i9XRNSRIHBZO
          appAssignmentId: 0ua3omz7weMMMQJERBKY
          credentialsSetup: false
          hidden: false
          sortOrder: 0
        - id: 00ub0oNGTSWTBKOLGLNR
          label: Google Apps Calendar
          linkUrl: https://{yourOktaDomain}/home/google/0oa3omz2i9XRNSRIHBZO/54
          logoUrl: https://{yourOktaDomain}/img/logos/google-calendar.png
          appName: google
          appInstanceId: 0oa3omz2i9XRNSRIHBZO
          appAssignmentId: 0ua3omz7weMMMQJERBKY
          credentialsSetup: false
          hidden: false
          sortOrder: 1
        - id: 00ub0oNGTSWTBKOLGLNR
          label: Box
          linkUrl: https://{yourOktaDomain}/home/boxnet/0oa3ompioiQCSTOYXVBK/72
          logoUrl: https://{yourOktaDomain}/img/logos/box.png
          appName: boxnet
          appInstanceId: 0oa3ompioiQCSTOYXVBK
          appAssignmentId: 0ua3omx46lYEZLPPRWBO
          credentialsSetup: false
          hidden: false
          sortOrder: 3
        - id: 00ub0oNGTSWTBKOLGLNR
          label: Salesforce.com
          linkUrl: https://{yourOktaDomain}/home/salesforce/0oa12ecnxtBQMKOXJSMF/46
          logoUrl: https://{yourOktaDomain}/img/logos/salesforce_logo.png
          appName: salesforce
          appInstanceId: 0oa12ecnxtBQMKOXJSMF
          appAssignmentId: 0ua173qgj5VAVOBQMCVB
          credentialsSetup: true
          hidden: false
          sortOrder: 2
    ListUserBlocksUnknownDevicesResponse:
      value:
        - type: DEVICE_BASED
          appliesTo: UNKNOWN_DEVICES
    ListUserBlocksAnyDevicesResponse:
      value:
        - type: DEVICE_BASED
          appliesTo: ANY_DEVICES
    ListUserGroups:
      value:
        - id: 0gabcd1234
          profile:
            name: Cloud app users
            description: Users can access cloud apps
        - id: 0gefgh5678
          profile:
            name: Internal app users
            description: Users can access internal apps
    MultipleIdPsResponse:
      summary: Multiple IdPs
      value:
        - id: 0oa62b57p7c8PaGpU0h7
          type: FACEBOOK
          name: Facebook
          status: ACTIVE
          created: '2016-03-24T23:18:27.000Z'
          lastUpdated: '2016-03-24T23:18:27.000Z'
          protocol:
            type: OAUTH2
            endpoints:
              authorization:
                url: https://www.facebook.com/dialog/oauth
                binding: HTTP-REDIRECT
              token:
                url: https://graph.facebook.com/v2.5/oauth/access_token
                binding: HTTP-POST
            scopes:
              - public_profile
              - email
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62b57p7c8PaGpU0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oa62bc8wppPw0UGr0h7
          type: SAML2
          name: Example SAML IdP
          status: ACTIVE
          created: '2016-03-24T23:14:54.000Z'
          lastUpdated: '2016-03-24T23:14:54.000Z'
          protocol:
            type: SAML2
            endpoints:
              sso:
                url: https://idp.example.com
                binding: HTTP-POST
                destination: https://idp.example.com
              acs:
                binding: HTTP-POST
                type: INSTANCE
            algorithms:
              request:
                signature:
                  algorithm: SHA-256
                  scope: REQUEST
              response:
                signature:
                  algorithm: SHA-256
                  scope: ANY
            settings:
              nameFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
            credentials:
              trust:
                issuer: https://idp.example.com
                audience: http://www.okta.com/123
                kid: your-key-id
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: saml.subjectNameId
              filter: (\S+@example\.com)
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            metadata:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/metadata.xml
              type: application/xml
              hints:
                allow:
                  - GET
            acs:
              href: https://{yourOktaDomain}/sso/saml2/0oa62bc8wppPw0UGr0h7
              type: application/xml
              hints:
                allow:
                  - POST
            users:
              href: https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/users
              hints:
                allow:
                  - GET
            deactivate:
              href: >-
                https://{yourOktaDomain}/api/v1/idps/0oa62bc8wppPw0UGr0h7/lifecycle/deactivate
              hints:
                allow:
                  - POST
        - id: 0oa62bfdiumsUndnZ0h7
          type: GOOGLE
          name: Google
          status: ACTIVE
          created: '2016-03-24T23:21:49.000Z'
          lastUpdated: '2016-03-24T23:21:49.000Z'
          protocol:
            type: OIDC
            endpoints:
              authorization:
                url: https://accounts.google.com/o/oauth2/auth
                binding: HTTP-REDIRECT
              token:
                url: https://www.googleapis.com/oauth2/v3/token
                binding: HTTP-POST
            scopes:
              - profile
              - email
              - openid
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdiumsUndnZ0h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oa62bfdjnK55Z5x80h7
          type: LINKEDIN
          name: LinkedIn
          status: ACTIVE
          created: '2016-03-24T23:23:59.000Z'
          lastUpdated: '2016-03-24T23:23:59.000Z'
          protocol:
            type: OAUTH2
            endpoints:
              authorization:
                url: https://www.linkedin.com/uas/oauth2/authorization
                binding: HTTP-REDIRECT
              token:
                url: https://www.linkedin.com/uas/oauth2/accessToken
                binding: HTTP-POST
            scopes:
              - r_basicprofile
              - r_emailaddress
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oa62bfdjnK55Z5x80h7&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oajmvdFawBih4gey0g3
          type: MICROSOFT
          name: Microsoft
          status: ACTIVE
          created: '2016-03-29T16:47:36.000Z'
          lastUpdated: '2016-03-29T16:47:36.000Z'
          protocol:
            type: OIDC
            endpoints:
              authorization:
                url: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
                binding: HTTP-REDIRECT
              token:
                url: https://login.microsoftonline.com/common/oauth2/v2.0/token
                binding: HTTP-POST
            scopes:
              - openid
              - email
              - profile
              - https://graph.microsoft.com/User.Read
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: true
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.userPrincipalName
              filter: null
              matchType: USERNAME
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oajmvdFawBih4gey0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oaulob4BFVa4zQvt0g3
          type: OIDC
          name: Example OpenID Connect IdP
          status: ACTIVE
          created: '2019-02-07T20:07:47.000Z'
          lastUpdated: '2019-02-07T20:07:47.000Z'
          protocol:
            type: OIDC
            endpoints:
              authorization:
                url: https://idp.example.com/authorize
                binding: HTTP-REDIRECT
              token:
                url: https://idp.example.com/token
                binding: HTTP-POST
              userInfo:
                url: https://idp.example.com/userinfo
                binding: HTTP-REDIRECT
              jwks:
                url: https://idp.example.com/keys
                binding: HTTP-REDIRECT
            scopes:
              - openid
            issuer:
              url: https://idp.example.com
            credentials:
              client:
                client_id: your-client-id
                client_secret: your-client-secret
          policy:
            provisioning:
              action: AUTO
              profileMaster: false
              groups:
                action: NONE
              conditions:
                deprovisioned:
                  action: NONE
                suspended:
                  action: NONE
            accountLink:
              filter: null
              action: AUTO
            subject:
              userNameTemplate:
                template: idpuser.email
              filter: null
              matchType: USERNAME
              matchAttribute: null
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            authorize:
              href: >-
                https://{yourOktaDomain}/oauth2/v1/authorize?idp=0oaulob4BFVa4zQvt0g3&client_id={clientId}&response_type={responseType}&response_mode={responseMode}&scope={scopes}&redirect_uri={redirectUri}&state={state}&nonce={nonce}
              templated: true
              hints:
                allow:
                  - GET
            clientRedirectUri:
              href: https://{yourOktaDomain}/oauth2/v1/authorize/callback
              hints:
                allow:
                  - POST
        - id: 0oa6jxasyhwM2ZHJh0g4
          type: X509
          name: Smart Card IDP Name
          status: ACTIVE
          created: '2020-01-07T00:19:27.000Z'
          lastUpdated: '2020-01-07T00:19:27.000Z'
          properties:
            additionalAmr:
              - sc
              - hwk
              - pin
              - mfa
          protocol:
            type: MTLS
            endpoints:
              sso:
                url: https://{yourOktaDomain}.okta.com/login/cert
            credentials:
              trust:
                issuer: CN=Test Smart Card, OU=Test OU, O=Test O, C=US
                audience: null
                kid: 45dec5ff-8cdc-48c0-85fe-a4869f1753dc
                revocation: CRL
                revocationCacheLifetime: 2880
          policy:
            provisioning:
              action: DISABLED
              profileMaster: false
              groups: null
            subject:
              userNameTemplate:
                template: idpuser.subjectAltNameEmail
              filter: null
              matchType: EMAIL
              matchAttribute: null
            mapAMRClaims: false
            maxClockSkew: 0
          _links:
            deactivate:
              href: >-
                https://{yourOktaDomain}.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/lifecycle/deactivate
              hints:
                allow:
                  - POST
            users:
              href: >-
                https://{yourOktaDomain}.okta.com/api/v1/idps/0oa6jxasyhwM2ZHJh0g4/users
              hints:
                allow:
                  - GET
            keys:
              href: >-
                https://{yourOktaDomain}.okta.com/api/v1/idps/credentials/keys/45dec5ff-8cdc-48c0-85fe-a4869f1753dc
              hints:
                allow:
                  - GET
    ExpirePwdResponse:
      value:
        id: 00ub0oNGTSWTBKOLGLNR
        status: PASSWORD_EXPIRED
        created: '2013-06-24T16:39:18.000Z'
        activated: '2013-06-24T16:39:19.000Z'
        statusChanged: '2013-06-24T16:39:19.000Z'
        lastLogin: '2013-06-24T17:39:19.000Z'
        lastUpdated: '2013-06-27T16:35:28.000Z'
        passwordChanged: '2013-06-24T16:39:19.000Z'
        profile:
          firstName: Isaac
          lastName: Brock
          email: isaac.brock@example.com
          login: isaac.brock@example.com
          mobilePhone: 555-415-1337
        credentials:
          password: {}
          recovery_question:
            question: Who's a major player in the cowboy scene?
          provider:
            type: OKTA
            name: OKTA
        _links:
          resetPassword:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_password
          resetFactors:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/reset_factors
          expirePassword:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/expire_password
          forgotPassword:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/forgot_password
          changeRecoveryQuestion:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_recovery_question
          deactivate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/lifecycle/deactivate
          changePassword:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR/credentials/change_password
    ExpirePwdWithTempPwdResponse:
      value:
        tempPassword: F46gy7X4
    ResetPwdWithoutSendingEmailResponse:
      value:
        summary: Reset password without sending email
        resetPasswordUrl: https://{yourOktaDomain}/reset_password/XE6wE17zmphl3KqAPFxO
    GetPrimaryLinkedObjectResponse:
      summary: Retrieve primary linked object value response
      value:
        - _links:
            self:
              href: https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7
    GetAssociatedLinkedObjectsResponse:
      summary: Retrieve all associated linked object values response
      value:
        - _links:
            self:
              href: https://{yourOktaDomain}/api/v1/users/00u5zex6ztMbOZhF50h7
        - _links:
            self:
              href: https://{yourOktaDomain}/api/v1/users/00u1tsf0nQKavLDUh0g5
    AuthenticatorEnrollmentResponseListAll:
      summary: List of authenticator enrollments
      value:
        - type: email
          id: eae4za57woixzodEK0g7
          key: okta_email
          status: ACTIVE
          name: Email
          profile:
            email: joe@example.com
          nickname: null
          created: '2020-07-26T21:05:23.000Z'
          lastUpdated: '2020-07-28T21:45:52.000Z'
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7/authenticator-enrollments/eae4za57woixzodEK0g7
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7
              hints:
                allow:
                  - GET
            authenticator:
              href: >-
                https://{yourOktaDomain}/api/v1/authenticators/auth60xfl7VbebsFr0g6
              hints:
                allow:
                  - GET
        - type: password
          id: laeh60xfl7VbebsFr0g6
          key: okta_password
          status: ACTIVE
          name: Password
          nickname: null
          created: '2020-07-26T21:05:23.000Z'
          lastUpdated: '2020-07-26T21:05:23.000Z'
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7/authenticator-enrollments/laeh60xfl7VbebsFr0g6
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7
              hints:
                allow:
                  - GET
            authenticator:
              href: >-
                https://{yourOktaDomain}/api/v1/authenticators/auth60xfl7VbebsFr0g6
              hints:
                allow:
                  - GET
        - type: phone
          id: sms8evhwh0Ne35iPR0g7
          key: phone_number
          status: ACTIVE
          name: Phone
          created: '2020-07-26T21:05:23.000Z'
          lastUpdated: '2020-07-29T00:21:29.000Z'
          profile:
            phoneNumber: +1 XXX-XXX-6065
          nickname: Joe's Work Phone
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7/authenticator-enrollments/laeh60xfl7VbebsFr0g6
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7
              hints:
                allow:
                  - GET
            authenticator:
              href: >-
                https://{yourOktaDomain}/api/v1/authenticators/auth60xfl7VbebsFr0g6
              hints:
                allow:
                  - GET
    Get-User-Classification-Example:
      value:
        type: LITE
        lastUpdated: '2022-05-04T19:50:52.000Z'
    Set-User-Classification-Example:
      value:
        type: LITE
    ListUserClients:
      value:
        - client_id: 0oabskvc6442nkvQO0h7
          client_name: My App
          client_uri: null
          logo_uri: null
          _links:
            grants:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/grants
            tokens:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u5t60iloOHN9pBi0h7/clients/0oabskvc6442nkvQO0h7/tokens
    ChangePwdRequest:
      value:
        oldPassword:
          value: tlpWENT2m
        newPassword:
          value: uTVM,TPw55
        revokeSessions: true
    ChangePwdResponse:
      value:
        password: {}
        recovery_question:
          question: Who's a major player in the cowboy scene?
        provider:
          type: OKTA
          name: OKTA
    UpdateRecQuestionRequest:
      value:
        password:
          value: tlpWENT2m
        recovery_question:
          question: How many roads must a man walk down?
          answer: forty two
    UpdateRecQuestionResponse:
      value:
        password: {}
        recovery_question:
          question: How many roads must a man walk down?
        provider:
          type: OKTA
          name: OKTA
    ForgotPwdResponse:
      value:
        resetPasswordUrl: https://{yourOktaDomain}/signin/reset-password/XE6wE17zmphl3KqAPFxO
    ForgotPwdRecoveryQuestionRequest:
      value:
        password:
          value: uTVM,TPw55
        recovery_question:
          answer: Annie Oakley
    ForgotPwdRecoveryQuestionResponse:
      value:
        password: {}
        recovery_question:
          question: Who's a major player in the cowboy scene?
        provider:
          type: OKTA
          name: OKTA
    APIUserListDevicesResponse:
      value:
        - created: '2020-11-03T21:47:01.000Z'
          deviceUserId: lnk46w61OLJz1uSQW0g4
          device:
            id: guo8jx5vVoxfvJeLb0w4
            status: ACTIVE
            created: '2020-11-03T21:47:01.000Z'
            lastUpdated: '2020-11-03T23:46:27.000Z'
            profile:
              displayName: DESKTOP-EHAD3IE
              platform: WINDOWS
              manufacturer: International Corp
              model: VMware7,1
              osVersion: 10.0.18362
              serialNumber: 56 4d 4f 95 74 c5 d3 e7-fc 3a 57 9c c2 f8 5d ce
              udid: 954F4D56-C574-E7D3-FC3A-579CC2F85DCE
              sid: S-1-5-21-3992267483-1860856704-2413701314-500
              registered: true
              secureHardwarePresent: false
              diskEncryptionType: NONE
            resourceId: guo8jx5vVoxfvJeLb0w4
            resourceDisplayName:
              value: DESKTOP-EHAD3IE
              sensitive: false
            resourceType: UDDevice
            resourceAlternateId: null
            _links:
              suspend:
                href: >-
                  https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/suspend
                hints:
                  allow:
                    - POST
              self:
                href: https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4
                hints:
                  allow:
                    - GET
                    - PATCH
                    - PUT
              users:
                href: >-
                  https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/users
                hints:
                  allow:
                    - GET
              deactivate:
                href: >-
                  https://{yourOktaDomain}/api/v1/devices/guo8jx5vVoxfvJeLb0w4/lifecycle/deactivate
                hints:
                  allow:
                    - POST
    ListFactorsResults:
      summary: List of enrolled factors for the specified user
      value:
        - id: ufs2bysphxKODSZKWVCT
          factorType: question
          provider: OKTA
          vendorName: OKTA
          status: ACTIVE
          created: '2014-04-15T18:10:06.000Z'
          lastUpdated: '2014-04-15T18:10:06.000Z'
          profile:
            question: favorite_art_piece
            questionText: What is your favorite piece of art?
          _links:
            questions:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions
              hints:
                allow:
                  - GET
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufs2bysphxKODSZKWVCT
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
              hints:
                allow:
                  - GET
        - id: ostf2gsyictRQDSGTDZE
          factorType: token:software:totp
          provider: OKTA
          status: PENDING_ACTIVATION
          created: '2014-06-27T20:27:33.000Z'
          lastUpdated: '2014-06-27T20:27:33.000Z'
          profile:
            credentialId: dade.murphy@example.com
          _links:
            next:
              name: activate
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf2gsyictRQDSGTDZE/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf2gsyictRQDSGTDZE
              hints:
                allow:
                  - GET
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
              hints:
                allow:
                  - GET
          _embedded:
            activation:
              timeStep: 30
              sharedSecret: HE64TMLL2IUZW2ZLB
              encoding: base32
              keyLength: 16
        - id: sms2gt8gzgEBPUWBIFHN
          factorType: sms
          provider: OKTA
          status: ACTIVE
          created: '2014-06-27T20:27:26.000Z'
          lastUpdated: '2014-06-27T20:27:26.000Z'
          profile:
            phoneNumber: +1-555-415-1337
          _links:
            verify:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms2gt8gzgEBPUWBIFHN/verify
              hints:
                allow:
                  - POST
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms2gt8gzgEBPUWBIFHN
              hints:
                allow:
                  - GET
                  - DELETE
            user:
              href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
              hints:
                allow:
                  - GET
    EnrollFactorQuestionRequest:
      summary: question
      value:
        question:
          summary: question factor
          value:
            factorType: question
            provider: OKTA
            profile:
              question: disliked_food
              answer: mayonnaise
    EnrollFactorSmsRequest:
      summary: sms
      value:
        factorType: sms
        provider: OKTA
        profile:
          phoneNumber: +1-555-415-1337
    EnrollFactorCallRequest:
      summary: call
      value:
        factorType: call
        provider: OKTA
        profile:
          phoneNumber: +1-555-415-1337
          phoneExtension: '1234'
    EnrollFactorOVTotpRequest:
      summary: token:software:totp
      value:
        factorType: token:software:totp
        provider: OKTA
    EnrollFactorOVPushRequest:
      summary: token:software:totp push
      value:
        factorType: push
        provider: OKTA
    EnrollFactorGoogleRequest:
      summary: google token:software:totp
      value:
        factorType: token:software:totp
        provider: GOOGLE
    EnrollFactorRsaSecurIdRequest:
      summary: RSA SecurID
      value:
        factorType: token
        provider: RSA
        profile:
          credentialId: dade.murphy@example.com
        verify:
          passCode: '5275875498'
    EnrollFactorSymantecVipRequest:
      summary: Symantec VIP
      value:
        factorType: token
        provider: SYMANTEC
        profile:
          credentialId: VSMT14393584
        verify:
          passCode: '875498'
          nextPassCode: '678195'
    EnrollFactorYubikeyRequest:
      summary: yubikey
      value:
        factorType: token:hardware
        provider: YUBICO
        verify:
          passCode: cccccceukngdfgkukfctkcvfidnetljjiknckkcjulji
    EnrollFactorEmailRequest:
      summary: email
      value:
        factorType: email
        provider: OKTA
        profile:
          email: test@gmail.com
    EnrollFactorU2fRequest:
      summary: u2f
      value:
        factorType: u2f
        provider: FIDO
    EnrollFactorWebauthnRequest:
      summary: webAuthn
      value:
        factorType: webauthn
        provider: FIDO
    EnrollFactorCustomTotpRequest:
      summary: custom totp
      value:
        factorType: token:hotp
        provider: CUSTOM
        factorProfileId: fpr20l2mDyaUGWGCa0g4
        profile:
          sharedSecret: 484f97be3213b117e3a20438e291540a
    EnrollFactorQuestionResponse:
      summary: question
      value:
        id: ufs1o01OTMGHLAJPVHDZ
        factorType: question
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        created: '2014-08-05T22:58:49.000Z'
        lastUpdated: '2014-08-05T22:58:49.000Z'
        profile:
          question: disliked_food
          questionText: What is the food you least liked as a child?
        _links:
          questions:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions
            hints:
              allow:
                - GET
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufs1o01OTMGHLAJPVHDZ
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    EnrollFactorSmsResponse:
      summary: sms
      value:
        id: mbl1nz9JHJGHWRKMTLHP
        factorType: sms
        provider: OKTA
        vendorName: OKTA
        status: PENDING_ACTIVATION
        created: '2014-08-05T20:59:49.000Z'
        lastUpdated: '2014-08-06T03:59:49.000Z'
        profile:
          phoneNumber: +1-555-415-1337
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/mbl1nz9JHJGHWRKMTLHP/lifecycle/activate
            hints:
              allow:
                - POST
          resend:
            - name: sms
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/mbl1nz9JHJGHWRKMTLHP/resend
              hints:
                allow:
                  - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/mbl1nz9JHJGHWRKMTLHP
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    EnrollFactorCallResponse:
      summary: call
      value:
        id: clf1nz9JHJGHWRKMTLHP
        factorType: call
        provider: OKTA
        vendorName: OKTA
        status: PENDING_ACTIVATION
        created: '2014-08-05T20:59:49.000Z'
        lastUpdated: '2014-08-06T03:59:49.000Z'
        profile:
          phoneNumber: +1-555-415-1337
          phoneExtension: '1234'
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1nz9JHJGHWRKMTLHP/lifecycle/activate
            hints:
              allow:
                - POST
          resend:
            - name: call
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1nz9JHJGHWRKMTLHP/resend
              hints:
                allow:
                  - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1nz9JHJGHWRKMTLHP
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    EnrollFactorOVTotpResponse:
      summary: token:software:totp
      value:
        id: ostf1fmaMGJLMNGNLIVG
        factorType: token:software:totp
        provider: OKTA
        vendorName: OKTA
        status: PENDING_ACTIVATION
        created: '2014-07-16T16:13:56.000Z'
        lastUpdated: '2014-07-16T16:13:56.000Z'
        profile:
          credentialId: dade.murphy@example.com
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
        _embedded:
          activation:
            timeStep: 30
            sharedSecret: JBTWGV22G4ZGKV3N
            encoding: base32
            keyLength: 6
          _links:
            qrcode:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4
              type: image/png
    EnrollFactorOVPushResponse:
      summary: token:software:totp
      value:
        id: opfbtzzrjgwauUsxO0g4
        factorType: push
        provider: OKTA
        vendorName: OKTA
        status: PENDING_ACTIVATION
        created: '2015-11-13T07:34:22.000Z'
        lastUpdated: '2015-11-13T07:34:22.000Z'
        _links:
          poll:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/lifecycle/activate/poll
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
        _embedded:
          activation:
            expiresAt: '2015-11-13T07:44:22.000Z'
            factorResult: WAITING
            _links:
              send:
                - name: email
                  href: >-
                    https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/lifecycle/activate/email
                  hints:
                    allow:
                      - POST
                - name: sms
                  href: >-
                    https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/lifecycle/activate/sms
                  hints:
                    allow:
                      - POST
              qrcode:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfbtzzrjgwauUsxO0g4/qr/00Ji8qVBNJD4LmjYy1WZO2VbNqvvPdaCVua-1qjypa
                type: image/png
    EnrollFactorGoogleResponse:
      value:
        id: ostf1fmaMGJLMNGNLIVG
        factorType: token:software:totp
        provider: GOOGLE
        vendorName: GOOGLE
        status: PENDING_ACTIVATION
        created: '2014-07-16T16:13:56.000Z'
        lastUpdated: '2014-07-16T16:13:56.000Z'
        profile:
          credentialId: dade.murphy@example.com
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
        _embedded:
          activation:
            timeStep: 30
            sharedSecret: JBTWGV22G4ZGKV3N
            encoding: base32
            keyLength: 16
            _links:
              qrcode:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/qr/00fukNElRS_Tz6k-CFhg3pH4KO2dj2guhmaapXWbc4
                type: image/png
    EnrollFactorRsaSecurIdResponse:
      summary: RSA SecurID
      value:
        id: rsabtznMn6cp94ez20g4
        factorType: token
        provider: RSA
        vendorName: RSA
        status: ACTIVE
        created: '2015-11-13T07:05:53.000Z'
        lastUpdated: '2015-11-13T07:05:53.000Z'
        profile:
          credentialId: dade.murphy@example.com
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/rsabtznMn6cp94ez20g4/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/rsabtznMn6cp94ez20g4
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    EnrollFactorSymantecVipResponse:
      summary: Symantec VIP
      value:
        id: ufvbtzgkYaA7zTKdQ0g4
        factorType: token
        provider: SYMANTEC
        vendorName: SYMANTEC
        status: ACTIVE
        created: '2015-11-13T06:52:08.000Z'
        lastUpdated: '2015-11-13T06:52:08.000Z'
        profile:
          credentialId: VSMT14393584
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufvbtzgkYaA7zTKdQ0g4/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ufvbtzgkYaA7zTKdQ0g4
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    EnrollFactorYubikeyResponse:
      value:
        id: ykfbty3BJeBgUi3750g4
        factorType: token:hardware
        provider: YUBICO
        vendorName: YUBICO
        status: ACTIVE
        created: '2015-11-13T05:27:49.000Z'
        lastUpdated: '2015-11-13T05:27:49.000Z'
        profile:
          credentialId: '000004102994'
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ykfbty3BJeBgUi3750g4/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              hhttps://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ykfbty3BJeBgUi3750g4
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    EnrollFactorEmailResponse:
      summary: email
      value:
        id: emfnf3gSScB8xXoXK0g3
        factorType: email
        provider: OKTA
        vendorName: OKTA
        status: PENDING_ACTIVATION
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/lifecycle/activate
            hints:
              allow:
                - POST
          resend:
            - name: email
              href: >-
                https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/resend
              hints:
                allow:
                  - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3
            hints:
              allow:
                - GET
    EnrollFactorU2fResponse:
      summary: u2f
      value:
        id: fuf2rovRxogXJ0nDy0g4
        factorType: u2f
        provider: FIDO
        vendorName: FIDO
        status: PENDING_ACTIVATION
        created: '2018-05-24T20:43:19.000Z'
        lastUpdated: '2018-05-24T20:43:19.000Z'
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
        _embedded:
          activation:
            version: U2F_V2
            nonce: 9DmGJDLvaU6KWxJbfrZ0
            timeoutSeconds: 20
    EnrollFactorWebauthnResponse:
      summary: webAuthn
      value:
        id: fwf2rovRxogXJ0nDy0g4
        factorType: webauthn
        provider: FIDO
        vendorName: FIDO
        status: PENDING_ACTIVATION
        created: '2018-05-24T20:43:19.000Z'
        lastUpdated: '2018-05-24T20:43:19.000Z'
        _links:
          activate:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4
            hints:
              allow:
                - GET
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
        _embedded:
          activation:
            attestation: direct
            authenticatorSelection:
              userVerification: preferred
              requireResidentKey: false
            challenge: cdsZ1V10E0BGE4GcG3IK
            excludeCredentials: []
            pubKeyCredParams:
              - type: public-key
                alg: -7
              - type: public-key
                alg: -257
            rp:
              name: Rain-Cloud59
            user:
              displayName: First Last
              name: first.last@gmail.com
              id: 00u15s1KDETTQMQYABRL
    EnrollFactorCustomTotpResponse:
      summary: custom totp
      value:
        id: chf20l33Ks8U2Zjba0g4
        factorType: token:hotp
        provider: CUSTOM
        vendorName: Entrust Datacard
        status: ACTIVE
        created: '2019-07-22T23:22:36.000Z'
        lastUpdated: '2019-07-22T23:22:36.000Z'
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00utf43LCCmTJVcsK0g3/factors/chf20l33Ks8U2Zjba0g4
            hints:
              allow:
                - GET
                - DELETE
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00utf43LCCmTJVcsK0g3/factors/chf20l33Ks8U2Zjba0g4/verify
            hints:
              allow:
                - POST
          user:
            href: https://{yourOktaDomain}/api/v1/users/00utf43LCCmTJVcsK0g3
            hints:
              allow:
                - GET
    SupportedFactorResults:
      value:
        - factorType: question
          provider: OKTA
          vendorName: OKTA
          _links:
            questions:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/questions
              hints:
                allow:
                  - GET
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
        - factorType: token:software:totp
          provider: OKTA
          _links:
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
        - factorType: token:software:totp
          provider: GOOGLE
          _links:
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
        - factorType: sms
          provider: OKTA
          vendorName: OKTA
          _links:
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
          _embedded:
            phones:
              - id: mblldntFJevYKbyQQ0g3
                profile:
                  phoneNumber: '+14081234567'
                status: ACTIVE
        - factorType: call
          provider: OKTA
          _links:
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
        - factorType: token
          provider: RSA
          _links:
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
        - factorType: token
          provider: SYMANTEC
          _links:
            enroll:
              href: >-
                https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors
              hints:
                allow:
                  - POST
    FactorPasscodeRequest:
      value:
        passCode: '123456'
    ActivateFactorU2fRequest:
      summary: u2f
      value:
        registrationData: >-
          BQTEMUyOM8h1TiZG4DL-RdMr-tYgTYSf62Y52AmwEFTiSYWIRVO5L-MwWdRJOthmV3J3JrqpmGfmFb820-awx1YIQFlTvkMhxItHlpkzahEqicpw7SIH9yMfTn2kaDcC6JaLKPfV5ds0vzuxF1JJj3gCM01bRC-HWI4nCVgc-zaaoRgwggEcMIHDoAMCAQICCwD52fCSMoNczORdMAoGCCqGSM49BAMCMBUxEzARBgNVBAMTClUyRiBJc3N1ZXIwGhcLMDAwMTAxMDAwMFoXCzAwMDEwMTAwMDBaMBUxEzARBgNVBAMTClUyRiBEZXZpY2UwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQFKJupuUgPQcRHUphaW5JPfLvkkwlEwlHKk_ntSp7MS4aTHJyGnpziqncrjiTC_oUVtb-wN-y_t_IMIjueGkhxMAoGCCqGSM49BAMCA0gAMEUCIQDBo6aOLxanIUYnBX9iu3KMngPnobpi0EZSTkVtLC8_cwIgC1945RGqGBKfbyNtkhMifZK05n7fU-gW37Bdnci5D94wRQIhAJv3VvclbRkHAQhaUR8rr8qFTg9iF-GtHoXU95vWaQdyAiAbEr-440U4dQAZF-Sj8G2fxgh5DkgkkWpyUHZhz7N9ew
        clientData: >-
          eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZmluaXNoRW5yb2xsbWVudCIsImNoYWxsZW5nZSI6IlhxR0h0RTBoUkxuVEoxYUF5U1oyIiwib3JpZ2luIjoiaHR0cHM6Ly9sb2NhbGhvc3Q6MzAwMCIsImNpZF9wdWJrZXkiOiJ1bnVzZWQifQ
    ActivateFactorWebauthnRequest:
      summary: webAuthn
      value:
        attestation: >-
          o2NmbXRmcGFja2VkZ2F0dFN0bXSiY2FsZyZjc2lnWEgwRgIhAMvf2+dzXlHZN1um38Y8aFzrKvX0k5dt/hnDu9lahbR4AiEAuwtMg3IoaElWMp00QrP/+3Po/6LwXfmYQVfsnsQ+da1oYXV0aERhdGFYxkgb9OHGifjS2dG03qLRqvXrDIRyfGAuc+GzF1z20/eVRV2wvl6tzgACNbzGCmSLCyXx8FUDAEIBvWNHOcE3QDUkDP/HB1kRbrIOoZ1dR874ZaGbMuvaSVHVWN2kfNiO4D+HlAzUEFaqlNi5FPqKw+mF8f0XwdpEBlClAQIDJiABIVgg0a6oo3W0JdYPu6+eBrbr0WyB3uJLI3ODVgDfQnpgafgiWCB4fFo/5iiVrFhB8pNH2tbBtKewyAHuDkRolcCnVaCcmQ==
        clientData: >-
          eyJjaGFsbGVuZ2UiOiJVSk5wYW9sVWt0dF9vcEZPNXJMYyIsIm9yaWdpbiI6Imh0dHBzOi8vcmFpbi5va3RhMS5jb20iLCJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIn0=
    ActivateFactorTotpResponse:
      summary: token:software:totp
      value:
        id: ostf1fmaMGJLMNGNLIVG
        factorType: token:software:totp
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        created: '2014-07-16T16:13:56.000Z'
        lastUpdated: '2014-08-06T00:31:07.000Z'
        profile:
          credentialId: dade.murphy@example.com
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/ostf1fmaMGJLMNGNLIVG
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    ActivateFactorSmsResponse:
      summary: sms
      value:
        id: sms1o51EADOTFXHHBXBP
        factorType: sms
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        created: '2014-08-06T16:56:31.000Z'
        lastUpdated: '2014-08-06T16:56:31.000Z'
        profile:
          phoneNumber: +1-555-415-1337
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms1o51EADOTFXHHBXBP/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms1o51EADOTFXHHBXBP
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    ActivateFactorCallResponse:
      summary: call
      value:
        id: clf1o51EADOTFXHHBXBP
        factorType: call
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        created: '2014-08-06T16:56:31.000Z'
        lastUpdated: '2014-08-06T16:56:31.000Z'
        profile:
          phoneNumber: +1-555-415-1337
          phoneExtension: '1234'
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1o51EADOTFXHHBXBP/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clf1o51EADOTFXHHBXBP
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    ActivateFactorPushResponse:
      summary: push
      value:
        id: opf3hkfocI4JTLAju0g4
        factorType: push
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        created: '2015-03-16T18:01:28.000Z'
        lastUpdated: '2015-08-27T14:25:17.000Z'
        profile:
          credentialId: dade.murphy@example.com
          deviceType: SmartPhone_IPhone
          name: Gibson
          platform: IOS
          version: '9.0'
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opf3hkfocI4JTLAju0g4/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opf3hkfocI4JTLAju0g4
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    ActivateFactorEmailResponse:
      summary: email
      value:
        id: emfnf3gSScB8xXoXK0g3
        factorType: email
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        profile:
          email: changed@clouditude.net
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3
            hints:
              allow:
                - GET
    ActivateFactorU2fResponse:
      summary: u2f
      value:
        id: fuf2rovRxogXJ0nDy0g4
        factorType: u2f
        provider: FIDO
        vendorName: FIDO
        status: ACTIVE
        created: '2018-05-24T20:43:19.000Z'
        lastUpdated: '2018-05-24T21:43:32.000Z'
        profile:
          credentialId: >-
            WVO-QyHEi0eWmTNqESqJynDtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA
          version: U2F_V2
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4
            hints:
              allow:
                - GET
                - DELETE
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4/verify
            hints:
              allow:
                - POST
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    ActivateFactorWebauthnResponse:
      summary: webAuthn
      value:
        id: fwf2rovRxogXJ0nDy0g4
        factorType: webauthn
        provider: FIDO
        vendorName: FIDO
        status: ACTIVE
        created: '2018-05-24T20:43:19.000Z'
        lastUpdated: '2018-05-24T21:43:32.000Z'
        profile:
          credentialId: >-
            l3Br0n-7H3g047NqESqJynFtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA
          authenticatorName: MacBook Touch ID
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4
            hints:
              allow:
                - GET
                - DELETE
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4/verify
            hints:
              allow:
                - POST
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    UserFactorVerifyPushTransactionWaitingNMC:
      summary: WAITING (with number matching challenge)
      value:
        expiresAt: '2015-04-01T15:57:32.000Z'
        factorResult: WAITING
        profile:
          credentialId: jane.doe@example.com
        _links:
          poll:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/v2mst.GldKV5VxTrifyeZmWSQguA
            hints:
              allow:
                - GET
          cancel:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/v2mst.GldKV5VxTrifyeZmWSQguA
            hints:
              allow:
                - DELETE
        _embedded:
          challenge:
            correctAnswer: 72
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    UserFactorVerifyPushTransactionWaiting:
      summary: WAITING
      value:
        expiresAt: '2015-04-01T15:57:32.000Z'
        factorResult: WAITING
        profile:
          credentialId: jane.doe@example.com
        _links:
          poll:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/v2mst.GldKV5VxTrifyeZmWSQguA
            hints:
              allow:
                - GET
          cancel:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/v2mst.GldKV5VxTrifyeZmWSQguA
            hints:
              allow:
                - DELETE
    UserFactorVerifyPushTransactionApproved:
      summary: SUCCESS
      value:
        factorResult: SUCCESS
    UserFactorVerifyPushTransactionRejected:
      summary: REJECTED
      value:
        factorResult: REJECTED
        profile:
          credentialId: jane.doe@example.com
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3
            hints:
              allow:
                - GET
                - DELETE
    UserFactorVerifyPushTransactionTimeout:
      summary: TIMEOUT
      value:
        factorResult: TIMEOUT
        profile:
          credentialId: jane.doe@example.com
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3
            hints:
              allow:
                - GET
                - DELETE
    NumberMatchingChallengeRequest:
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
      value:
        useNumberMatchingChallenge: true
    UserFactorVerifyU2fRequest:
      summary: u2f verify
      value:
        clientData: >-
          eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiS2NCLXRqUFU0NDY0ZThuVFBudXIiLCJvcmlnaW4iOiJodHRwczovL2xvY2FsaG9zdDozMDAwIiwiY2lkX3B1YmtleSI6InVudXNlZCJ9
        signatureData: >-
          AQAAACYwRgIhAKPktdpH0T5mlPSm_9uGW5w-VaUy-LhI9tIacexpgItkAiEAncRVZURVPOq7zDwIw-OM5LtSkdAxOkfv0ZDVUx3UFHc
    UserFactorVerifyWebauthnRequest:
      summary: WebAuthn verify challenge
      value:
        clientData: >-
          eyJ0eXAiOiJuYXZpZ2F0b3IuaWQuZ2V0QXNzZXJ0aW9uIiwiY2hhbGxlbmdlIjoiS2NCLXRqUFU0NDY0ZThuVFBudXIiLCJvcmlnaW4iOiJodHRwczovL2xvY2FsaG9zdDozMDAwIiwiY2lkX3B1YmtleSI6InVudXNlZCJ9
        authenticatorData: SBv04caJ+NLZ0bTeotGq9esMhHJ8YC5z4bMXXPbT95UFXbDsOg==
        signatureData: >-
          AQAAACYwRgIhAKPktdpH0T5mlPSm_9uGW5w-VaUy-LhI9tIacexpgItkAiEAncRVZURVPOq7zDwIw-OM5LtSkdAxOkfv0ZDVUx3UFHc
    UserFactorVerifySecurityQuestionRequest:
      summary: security question verify
      value:
        answer: mayonnaise
    UserFactorChallengeSmsResponse:
      summary: sms challenge
      value:
        factorResult: CHALLENGE
        profile:
          phoneNumber: '+12532236986'
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/smsszf1YNUtGWTx4j0g3/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/smsszf1YNUtGWTx4j0g3
            hints:
              allow:
                - GET
                - DELETE
    UserFactorVerifySuccessSmsResponse:
      summary: sms verify
      value:
        factorResult: SUCCESS
    UserFactorChallengeCallResponse:
      summary: call challenge
      value:
        factorResult: CHALLENGE
        profile:
          phoneNumber: '+12532236986'
          phoneExtension: '1234'
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clff17zuKEUMYQAQGCOV/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/clff17zuKEUMYQAQGCOV
            hints:
              allow:
                - GET
                - DELETE
    UserFactorVerifyCallSuccessResponse:
      summary: call verify
      value:
        factorResult: SUCCESS
    UserFactorChallengeEmailResponse:
      summary: email challenge
      value:
        factorResult: CHALLENGE
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/emfnf3gSScB8xXoXK0g3/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/emfnf3gSScB8xXoXK0g3
            hints:
              allow:
                - GET
                - DELETE
    UserFactorVerifyEmailSuccessResponse:
      summary: email verify
      value:
        factorResult: SUCCESS
    UserFactorChallengeU2fResponse:
      summary: u2f challenge
      value:
        factorResult: CHALLENGE
        profile:
          credentialId: >-
            GAiiLsVab2m3-zL1Fi3bVtNrM9G6_MntUITHKjxkV24ktGKjLSCRnz72wCEdHCe18IvC69Aia0sE4UpsO0HpFQ
          version: U2F_V2
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fuf2rovRxogXJ0nDy0g4
            hints:
              allow:
                - GET
                - DELETE
        _embedded:
          challenge:
            nonce: vQFwTt6zKzMV7HFPzjS2
            timeoutSeconds: 20
    UserFactorVerifyU2fResponse:
      summary: u2f verify response
      value:
        factorResult: SUCCESS
        profile:
          credentialId: >-
            h1bFwJFU9wnelYkexJuQfoUHZ5lX3CgQMTZk4H3I8kM9Nn6XALiQ-BIab4P5EE0GQrA7VD-kAwgnG950aXkhBw
          version: U2F_V2
    UserFactorChallengeWebauthnResponse:
      summary: webAuthn challenge
      value:
        factorResult: CHALLENGE
        profile:
          credentialId: >-
            l3Br0n-7H3g047NqESqJynFtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA
          authenticatorName: MacBook Touch ID
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4/verify
            hints:
              allow:
                - POST
          factor:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/fwf2rovRxogXJ0nDy0g4
            hints:
              allow:
                - GET
                - DELETE
        _embedded:
          challenge:
            challenge: vQFwTt6zKzMV7HFPzjS2
            extensions: {}
    UserFactorVerifyWebauthnResponse:
      summary: WebAuthn verify
      value:
        factorResult: SUCCESS
        profile:
          credentialId: >-
            l3Br0n-7H3g047NqESqJynFtIgf3Ix9OfaRoNwLoloso99Xl2zS_O7EXUkmPeAIzTVtEL4dYjicJWBz7NpqhGA
          authenticatorName: MacBook Touch ID
    UserFactorVerifySuccessSqResponse:
      summary: security question verify
      value:
        factorResult: SUCCESS
    UserFactorVerifySuccessTotpResponse:
      summary: totp verify
      value:
        factorResult: SUCCESS
    UserFactorVerifySuccessTokenResponse:
      summary: token verify
      value:
        factorResult: SUCCESS
    UserFactorVerifySuccessYubikeyResponse:
      summary: yubikey verify
      value:
        factorResult: SUCCESS
    UserFactorChallengePushResponseWithNumberMatchingChallenge:
      summary: Push challenge with number matching
      value:
        expiresAt: '2015-04-01T15:57:32.000Z'
        factorResult: WAITING
        _links:
          poll:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/mst1eiHghhPxf0yhp0g
            hints:
              allow:
                - GET
          cancel:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/mst1eiHghhPxf0yhp0g
            hints:
              allow:
                - DELETE
        _embedded:
          challenge:
            correctAnswer: 72
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    UserFactorChallengePushResponse:
      summary: push challenge
      value:
        expiresAt: '2015-04-01T15:57:32.000Z'
        factorResult: WAITING
        _links:
          poll:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/mst1eiHghhPxf0yhp0g
            hints:
              allow:
                - GET
          cancel:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/opfh52xcuft3J4uZc0g3/transactions/mst1eiHghhPxf0yhp0g
            hints:
              allow:
                - DELETE
    UserRiskResponse:
      summary: Example user risk response
      value:
        riskLevel: HIGH
        reason: Admin override risk
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/users/{userId}/risk
            hints:
              allow:
                - GET
                - PUT
          user:
            href: https://{yourOktaDomain}/api/v1/users/{userId}
            hints:
              allow:
                - GET
    UserRiskNoneResponse:
      summary: Example user risk with NONE risk level response
      value:
        riskLevel: NONE
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/users/{userId}/risk
            hints:
              allow:
                - GET
                - PUT
          user:
            href: https://{yourOktaDomain}/api/v1/users/{userId}
            hints:
              allow:
                - GET
    UserRiskRequest:
      summary: Example upsert the risk for a user request
      value:
        riskLevel: HIGH
    StandardRolesListResponse:
      value:
        - id: IFIFAX2BIRGUSTQ
          label: Application administrator
          type: APP_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: JBCUYUC7IRCVGS27IFCE2SKO
          label: Help Desk administrator
          type: HELP_DESK_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: ra125eqBFpETrMwu80g4
          label: Organization administrator
          type: ORG_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: gra25fapn1prGTBKV0g4
          label: API Access Management administrator
          type: API_ACCESS_MANAGEMENT_ADMIN
          status: ACTIVE
          created": '2019-02-06T16:20:57.000Z'
          lastUpdated": '2019-02-06T16:20:57.000Z'
          assignmentType": GROUP
          _links":
            assignee":
              href": https://{yourOktaDomain}/api/v1/groups/00g1ousb3XCr9Dkr20g4
    StandardAndCustomRolesListResponse:
      value:
        - id: IFIFAX2BIRGUSTQ
          label: Application administrator
          type: APP_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: JBCUYUC7IRCVGS27IFCE2SKO
          label: Help Desk administrator
          type: HELP_DESK_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: ra125eqBFpETrMwu80g4
          label: Organization administrator
          type: ORG_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: gra25fapn1prGTBKV0g4
          label: API Access Management administrator
          type: API_ACCESS_MANAGEMENT_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: GROUP
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/groups/00g1ousb3XCr9Dkr20g4
        - id: irb1q92TFAHzySt3x0g4
          role: cr0Yq6IJxGIr0ouum0g3
          label: UserCreatorRole
          type: CUSTOM
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: USER
          resource-set: iamoJDFKaJxGIr0oamd9g
          _links:
            assignee:
              href": https://{yourOktaDomain}/api/v1/users/00u1gytb3XCr9Dkr18r2
            resource-set:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
            member:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members/irb1qe6PGuMc7Oh8N0g4
            role:
              href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
            permissions:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/permission-sets/cr0Yq6IJxGIr0ouum0g3/permissions
        - id: irb5e92YgBazyyQ3x1q5
          role: cr0Yq6IJxGIr0ouum0g3
          label: UserCreatorRole
          type: CUSTOM
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: GROUP
          resource-set: iamoakjsdQaJxGIr03int1o
          _links:
            assignee:
              href: https://{ yourOktaDomain }/api/v1/groups/00g1ousb3XCr9Dkr20g4
            resource-set:
              href: >-
                https://{ yourOktaDomain
                }/api/v1/iam/resource-sets/iamoakjsdQaJxGIr03int1o
            member:
              href: >-
                https://{ yourOktaDomain
                }/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members/irb1qe6PGuMc7Oh8N0g4
            role:
              href: https://{ yourOktaDomain }/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
            permissions:
              href: >-
                https://{ yourOktaDomain
                }/api/v1/iam/permission-sets/cr0Yq6IJxGIr0ouum0g3/permissions
    IAMStandardRolesListResponse:
      value:
        - id: IFIFAX2BIRGUSTQ
          label: Application administrator
          type: APP_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:17:40.000Z'
          lastUpdated: '2019-02-06T16:17:40.000Z'
          assignmentType: USER
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00ur32Vg0fvpyHZeQ0g3
        - id: irb1q92TFAHzySt3x0g4
          role: cr0Yq6IJxGIr0ouum0g3
          label: UserCreatorRole
          type: CUSTOM
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: USER
          resource-set: iamoJDFKaJxGIr0oamd9g
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00u1gytb3XCr9Dkr18r2
            resource-set:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
            member:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g/bindings/cr0Yq6IJxGIr0ouum0g3/members/irb1qe6PGuMc7Oh8N0g4
            role:
              href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
            permissions:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/permission-sets/cr0Yq6IJxGIr0ouum0g3/permissions
        - id: irb5e92YgBazyyQ3x1q5
          role: ACCESS_CERTIFICATIONS_ADMIN
          label: Access Certifications administrator
          type: ACCESS_CERTIFICATIONS_ADMIN
          status: ACTIVE
          created: '2019-02-06T16:20:57.000Z'
          lastUpdated: '2019-02-06T16:20:57.000Z'
          assignmentType: USER
          resource-set: ACCESS_CERTIFICATIONS_IAM_POLICY
          _links:
            assignee:
              href: https://{yourOktaDomain}/api/v1/users/00u1gytb3XCr9Dkr18r2
            resource-set:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY
            member:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY/bindings/ACCESS_CERTIFICATIONS_ADMIN/members/irb1qe6PGuMc7Oh8N0g4
            role:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/roles/ACCESS_CERTIFICATIONS_ADMIN
            permissions:
              href: >-
                https://{yourOktaDomain}/api/v1/iam/permission-sets/OKTA_IAM_TEST_DELIVERED_ROLE/permissions
    StandardRoleResponseUser:
      value:
        id: ra1b8anIk7rx7em7L0g4
        label: Super Organization administrator
        type: SUPER_ADMIN
        status: ACTIVE
        created: '2015-09-06T15:28:47.000Z'
        lastUpdated: '2015-09-06T15:28:47.000Z'
        assignmentType: USER
        _links:
          assignee:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
    CustomRoleResponseUser:
      value:
        id: irb1q92TFAHzySt3x0g4
        role: cr0Yq6IJxGIr0ouum0g3
        label: UserCreatorRole
        type: CUSTOM
        status: ACTIVE
        created: '2019-02-06T16:20:57.000Z'
        lastUpdated: '2019-02-06T16:20:57.000Z'
        assignmentType: USER
        resource-set: iamoJDFKaJxGIr0oamd9g
        _links:
          assignee:
            href": https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/iamoJDFKaJxGIr0oamd9g
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3
          permissions:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/cr0Yq6IJxGIr0ouum0g3/permissions
    IAMStandardRoleResponseUser:
      value:
        id: irb1q92TFAHzySt3x0g4
        role: ACCESS_REQUESTS_ADMIN
        label: Access Requests administrator
        type: ACCESS_REQUESTS_ADMIN
        status: ACTIVE
        created: '2019-02-06T16:20:57.000Z'
        lastUpdated: '2019-02-06T16:20:57.000Z'
        assignmentType: USER
        resource-set: ACCESS_CERTIFICATIONS_IAM_POLICY
        _links:
          assignee:
            href: https://{yourOktaDomain}/api/v1/users/00ub0oNGTSWTBKOLGLNR
          resource-set:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY
          role:
            href: https://{yourOktaDomain}/api/v1/iam/roles/ACCESS_REQUESTS_ADMIN
          permissions:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/roles/ACCESS_REQUESTS_ADMIN/permissions
          member:
            href: >-
              https://{yourOktaDomain}/api/v1/iam/resource-sets/ACCESS_CERTIFICATIONS_IAM_POLICY/bindings/ACCESS_REQUESTS_ADMIN/members/irb1q92TFAHzySt3x0g4
    GetUseRoleGovernanceResponse:
      value:
        grants:
          - type: CUSTOM
            grantId: grai24zWTjnDazeOI0g4
            _links:
              resources:
                href: >-
                  https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance/grai24zWTjnDazeOI0g4/resources
          - type: ENTITLEMENT-BUNDLE
            grantId: grai2556vZgWesWf10g4
            bundleId: enbhz2pAwtts9UBes0g4
            expirationDate: '2024-12-09 14:17:22.0'
            _links:
              resources:
                href: >-
                  https://{yourOktaDomain}//api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance/grai2556vZgWesWf10g4/resources
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance
          assignee:
            href: https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5"
    GetRoleAssignmentGovernanceGrantResponse:
      value:
        type: ENTITLEMENT-BUNDLE
        grantId: grai2556vZgWesWf10g4
        bundleId: enbhz2pAwtts9UBes0g4
        expirationDate: '2024-12-09 14:17:22.0'
        _links:
          resources:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance/grai2556vZgWesWf10g4/resources
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance/grai2556vZgWesWf10g4
    GetRoleAssignmentGovernanceGrantResources:
      value:
        resources:
          - resource: >-
              orn:okta:directory:00ozmkUsqWxsUxhGO0g3:groups:00g114290ar1oCC5A0g5
            label: test-group-1
          - resource: >-
              orn:okta:directory:00ozmkUsqWxsUxhGO0g3:groups:00g118990hl1oCC5B0g5
            label: test-group-2
        _links:
          next:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance/grai2556vZgWesWf10g4/resources?after=orn:okta:directory:00ozmkUsqWxsUxhGO0g3:groups:00g118990hl1oCC5A0g5
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15r0i2hC4jeTne0g5/roles/KVJUKUS7IFCE2SKO/governance/grai2556vZgWesWf10g4/resources
    RoleTargetGroupResponse:
      value:
        - orn: orn:okta:directory:00o5v1t2W4OSF9r4N0g4:groups:00g5vhi3rEJMOog1S0g4
          assignmentType: USER
          expiration: '2025-05-10T20:21:11.000Z'
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/groups/00g5vhi3rEJMOog1S0g4
    RoleTargetAppResponse:
      value:
        - orn: orn:okta:idp:00ozjqqlt6mmHQonQ0g3:apps:gooddata
          assignmentType: GROUP
          expiration: '2025-05-10T20:21:11.000Z'
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/apps%3Ffilter%3Dname%2Beq%2B%22gooddata%22
    RoleTargetAppInstanceResponse:
      value:
        - orn: orn:okta:idp:00o5yd9J0satsK2Rp0g4:apps:myownapp:0oa5yriAxuR12wfQ30g4
          assignmentType: USER
          expiration: '2025-05-10T20:21:11.000Z'
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa5yriAxuR12wfQ30g4
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorMissingRequiredParameter:
      summary: Missing Required Parameter
      value:
        errorCode: E0000028
        errorSummary: The request is missing a required parameter.
        errorLink: E0000028
        errorId: sampleiCF-l7mr9XqM1NQ
        errorCauses: []
    AuthenticatorEnrollmentCreateRequestPhone:
      summary: Enroll phone - SMS authenticator request
      value:
        authenticatorId: aut5l4ttFyGEWdy6V0k7
        profile:
          phoneNumber: '+14086673418'
    AuthenticatorEnrollmentResponsePhoneSms:
      summary: phone - SMS authenticator enrollment response
      value:
        type: phone
        id: sms8evhwh0Ne35iPR0g7
        key: phone_number
        status: ACTIVE
        name: Phone
        created: '2020-07-26T21:05:23.000Z'
        lastUpdated: '2020-07-29T00:21:29.000Z'
        profile:
          phoneNumber: +1 XXX-XXX-6065
        nickname: Joe's Work Phone
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7/authenticator-enrollments/sms8evhwh0Ne35iPR0g7
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7
            hints:
              allow:
                - GET
          authenticator:
            href: >-
              https://{yourOktaDomain}/api/v1/authenticators/auth60xfl7VbebsFr0g6
            hints:
              allow:
                - GET
    AuthenticatorEnrollmentResponsePhoneVoice:
      summary: phone - voice authenticator enrollment response
      value:
        type: phone
        id: clf8evhwh0Ne35iPR0g7
        key: phone_number
        status: ACTIVE
        name: Phone
        created: '2020-07-26T21:05:23.000Z'
        lastUpdated: '2020-07-29T00:21:29.000Z'
        profile:
          phoneNumber: +1 XXX-XXX-6065
        nickname: Joe's Work Phone
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7/authenticator-enrollments/clf8evhwh0Ne35iPR0g7
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7
            hints:
              allow:
                - GET
          authenticator:
            href: >-
              https://{yourOktaDomain}/api/v1/authenticators/auth60xfl7VbebsFr0g6
            hints:
              allow:
                - GET
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    AuthenticatorEnrollmentCreateRequestTac:
      summary: Enroll TAC authenticator request
      value:
        authenticatorId: autnmtl4xbt8RQVzA0g4
        profile:
          ttl: 11
          multiUse: false
    AuthenticatorEnrollmentResponseTac:
      summary: TAC authenticator enrollment response
      value:
        type: tac
        id: tac8evhwh0Ne35iPR0g7
        key: tac
        status: ACTIVE
        name: Temporary Access Code
        created: '2025-05-28T17:21:14.000Z'
        lastUpdated: '2025-05-28T17:21:14.000Z'
        profile:
          tac: n@C*bU26
          multiUse: true
          expiresAt: '2025-05-28T19:21:14'
        _links:
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7/authenticator-enrollments/clf8evhwh0Ne35iPR0g7
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u4za57vqNsQAN8S0g7
            hints:
              allow:
                - GET
    FactorResponseSms:
      value:
        id: sms2gt8gzgEBPUWBIFHN
        factorType: sms
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        created: '2014-06-27T20:27:26.000Z'
        lastUpdated: '2014-06-27T20:27:26.000Z'
        profile:
          phoneNumber: +1-555-415-1337
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms2gt8gzgEBPUWBIFHN/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL/factors/sms2gt8gzgEBPUWBIFHN
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00u15s1KDETTQMQYABRL
            hints:
              allow:
                - GET
    FactorEmail:
      value:
        id: emfnf3gSScB8xXoXK0g3
        factorType: email
        provider: OKTA
        vendorName: OKTA
        status: ACTIVE
        profile:
          email: changed@clouditude.net
        _links:
          verify:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3/verify
            hints:
              allow:
                - POST
          self:
            href: >-
              https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3/factors/emfnf3gSScB8xXoXK0g3
            hints:
              allow:
                - GET
                - DELETE
          user:
            href: https://{yourOktaDomain}/api/v1/users/00umvfJKwXOQ1mEL50g3
            hints:
              allow:
                - GET
  requestBodies:
    PhoneAuthenticatorEnrollmentRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticatorEnrollmentCreateRequest'
          examples:
            PhoneSmsEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentCreateRequestPhone'
      required: true
    TacAuthenticatorEnrollmentRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticatorEnrollmentCreateRequestTac'
          examples:
            TacEx:
              $ref: '#/components/examples/AuthenticatorEnrollmentCreateRequestTac'
      required: true
  x-stackQL-resources:
    users:
      id: okta.users.users
      name: users
      title: Users
      methods:
        list_users:
          operation:
            $ref: '#/paths/~1api~1v1~1users/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        end_user_sessions:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1me~1lifecycle~1delete_sessions/post'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        get_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1activate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1deactivate/post'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        expire_password:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1expire_password/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        expire_password_with_temp_password:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{id}~1lifecycle~1expire_password_with_temp_password/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reactivate_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1reactivate/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        reset_factors:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1reset_factors/post'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        reset_password:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1reset_password/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        suspend_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1suspend/post'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        unlock_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1unlock/post'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        unsuspend_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1lifecycle~1unsuspend/post'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        change_password:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1credentials~1change_password/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        change_recovery_question:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1credentials~1change_recovery_question/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        forgot_password:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1credentials~1forgot_password/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        forgot_password_set_new_password:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1credentials~1forgot_password_recovery_question/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_user_sessions:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1sessions/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/users/methods/list_users'
          - $ref: '#/components/x-stackQL-resources/users/methods/get_user'
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_user'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/update_user'
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete_user'
        replace:
          - $ref: '#/components/x-stackQL-resources/users/methods/replace_user'
    app_links:
      id: okta.users.app_links
      name: app_links
      title: App Links
      methods:
        list_app_links:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1appLinks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/app_links/methods/list_app_links'
        insert: []
        update: []
        delete: []
        replace: []
    user_blocks:
      id: okta.users.user_blocks
      name: user_blocks
      title: User Blocks
      methods:
        list_user_blocks:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1blocks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_blocks/methods/list_user_blocks
        insert: []
        update: []
        delete: []
        replace: []
    user_groups:
      id: okta.users.user_groups
      name: user_groups
      title: User Groups
      methods:
        list_user_groups:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1groups/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_groups/methods/list_user_groups
        insert: []
        update: []
        delete: []
        replace: []
    identity_providers:
      id: okta.users.identity_providers
      name: identity_providers
      title: Identity Providers
      methods:
        list_user_identity_providers:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{id}~1idps/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/identity_providers/methods/list_user_identity_providers
        insert: []
        update: []
        delete: []
        replace: []
    linked_objects:
      id: okta.users.linked_objects
      name: linked_objects
      title: Linked Objects
      methods:
        assign_linked_object_value_for_primary:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userIdOrLogin}~1linkedObjects~1{primaryRelationshipName}~1{primaryUserId}/put
          response:
            mediaType: ''
            openAPIDocKey: '204'
        list_linked_objects_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userIdOrLogin}~1linkedObjects~1{relationshipName}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_linked_object_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userIdOrLogin}~1linkedObjects~1{relationshipName}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/linked_objects/methods/list_linked_objects_for_user
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/linked_objects/methods/delete_linked_object_for_user
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/linked_objects/methods/assign_linked_object_value_for_primary
    authenticator_enrollments:
      id: okta.users.authenticator_enrollments
      name: authenticator_enrollments
      title: Authenticator Enrollments
      methods:
        list_authenticator_enrollments:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1authenticator-enrollments/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_authenticator_enrollment:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1authenticator-enrollments~1phone/post
          response:
            mediaType: ''
            openAPIDocKey: '200'
        create_tac_authenticator_enrollment:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1authenticator-enrollments~1tac/post
          response:
            mediaType: ''
            openAPIDocKey: '200'
        get_authenticator_enrollment:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1authenticator-enrollments~1{enrollmentId}/get
          response:
            mediaType: ''
            openAPIDocKey: '200'
        delete_authenticator_enrollment:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1authenticator-enrollments~1{enrollmentId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_enrollments/methods/list_authenticator_enrollments
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_enrollments/methods/get_authenticator_enrollment
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_enrollments/methods/create_authenticator_enrollment
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_enrollments/methods/create_tac_authenticator_enrollment
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/authenticator_enrollments/methods/delete_authenticator_enrollment
        replace: []
    classifications:
      id: okta.users.classifications
      name: classifications
      title: Classifications
      methods:
        get_user_classification:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1classification/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_user_classification:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1classification/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/classifications/methods/get_user_classification
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/classifications/methods/replace_user_classification
    user_clients:
      id: okta.users.user_clients
      name: user_clients
      title: User Clients
      methods:
        list_user_clients:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1clients/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_clients/methods/list_user_clients
        insert: []
        update: []
        delete: []
        replace: []
    grants:
      id: okta.users.grants
      name: grants
      title: Grants
      methods:
        list_grants_for_user_and_client:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1grants/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_grants_for_user_and_client:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1grants/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        list_user_grants:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_user_grants:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        get_user_grant:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants~1{grantId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_user_grant:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1grants~1{grantId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/grants/methods/list_grants_for_user_and_client
          - $ref: '#/components/x-stackQL-resources/grants/methods/list_user_grants'
          - $ref: '#/components/x-stackQL-resources/grants/methods/get_user_grant'
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/grants/methods/revoke_grants_for_user_and_client
          - $ref: '#/components/x-stackQL-resources/grants/methods/revoke_user_grants'
          - $ref: '#/components/x-stackQL-resources/grants/methods/revoke_user_grant'
        replace: []
    oauth_tokens:
      id: okta.users.oauth_tokens
      name: oauth_tokens
      title: Oauth Tokens
      methods:
        list_refresh_tokens_for_user_and_client:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_tokens_for_user_and_client:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        get_refresh_token_for_user_and_client:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens~1{tokenId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        revoke_token_for_user_and_client:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1clients~1{clientId}~1tokens~1{tokenId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/oauth_tokens/methods/list_refresh_tokens_for_user_and_client
          - $ref: >-
              #/components/x-stackQL-resources/oauth_tokens/methods/get_refresh_token_for_user_and_client
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/oauth_tokens/methods/revoke_tokens_for_user_and_client
          - $ref: >-
              #/components/x-stackQL-resources/oauth_tokens/methods/revoke_token_for_user_and_client
        replace: []
    user_devices:
      id: okta.users.user_devices
      name: user_devices
      title: User Devices
      methods:
        list_user_devices:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1devices/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_devices/methods/list_user_devices
        insert: []
        update: []
        delete: []
        replace: []
    factors:
      id: okta.users.factors
      name: factors
      title: Factors
      methods:
        list_factors:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1factors/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        enroll_factor:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1factors/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_factor:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1factors~1{factorId}/get'
          response:
            mediaType: ''
            openAPIDocKey: '200'
        unenroll_factor:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1factors~1{factorId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_factor:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1factors~1{factorId}~1lifecycle~1activate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        resend_enroll_factor:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1factors~1{factorId}~1resend/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_factor_transaction_status:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1factors~1{factorId}~1transactions~1{transactionId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify_factor:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1factors~1{factorId}~1verify/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/factors/methods/list_factors'
          - $ref: '#/components/x-stackQL-resources/factors/methods/get_factor'
          - $ref: >-
              #/components/x-stackQL-resources/factors/methods/get_factor_transaction_status
        insert:
          - $ref: '#/components/x-stackQL-resources/factors/methods/enroll_factor'
        update: []
        delete:
          - $ref: '#/components/x-stackQL-resources/factors/methods/unenroll_factor'
        replace: []
    supported_factors:
      id: okta.users.supported_factors
      name: supported_factors
      title: Supported Factors
      methods:
        list_supported_factors:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1factors~1catalog/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/supported_factors/methods/list_supported_factors
        insert: []
        update: []
        delete: []
        replace: []
    supported_security_questions:
      id: okta.users.supported_security_questions
      name: supported_security_questions
      title: Supported Security Questions
      methods:
        list_supported_security_questions:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1factors~1questions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/supported_security_questions/methods/list_supported_security_questions
        insert: []
        update: []
        delete: []
        replace: []
    user_risk:
      id: okta.users.user_risk
      name: user_risk
      title: User Risk
      methods:
        get_user_risk:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1risk/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        upsert_user_risk:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1risk/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/user_risk/methods/get_user_risk'
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/user_risk/methods/upsert_user_risk
    role_assignment_users:
      id: okta.users.role_assignment_users
      name: role_assignment_users
      title: Role Assignment Users
      methods:
        list_assigned_roles_for_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_role_to_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get_user_assigned_role:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unassign_role_from_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        assign_all_apps_as_target_to_role_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps/put
          response:
            mediaType: ''
            openAPIDocKey: '200'
        assign_app_target_to_admin_role_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}/put
          response:
            mediaType: ''
            openAPIDocKey: '204'
        assign_app_instance_target_to_app_admin_role_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}~1{appId}/put
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_assignment_users/methods/list_assigned_roles_for_user
          - $ref: >-
              #/components/x-stackQL-resources/role_assignment_users/methods/get_user_assigned_role
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/role_assignment_users/methods/assign_role_to_user
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_assignment_users/methods/unassign_role_from_user
        replace: []
    user_assigned_role_governance:
      id: okta.users.user_assigned_role_governance
      name: user_assigned_role_governance
      title: User Assigned Role Governance
      methods:
        get_user_assigned_role_governance:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1governance/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/user_assigned_role_governance/methods/get_user_assigned_role_governance
        insert: []
        update: []
        delete: []
        replace: []
    role_assignment_governance_grant:
      id: okta.users.role_assignment_governance_grant
      name: role_assignment_governance_grant
      title: Role Assignment Governance Grant
      methods:
        get_role_assignment_governance_grant:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1governance~1{grantId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_assignment_governance_grant/methods/get_role_assignment_governance_grant
        insert: []
        update: []
        delete: []
        replace: []
    role_assignment_governance_grant_resources:
      id: okta.users.role_assignment_governance_grant_resources
      name: role_assignment_governance_grant_resources
      title: Role Assignment Governance Grant Resources
      methods:
        get_role_assignment_governance_grant_resources:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1governance~1{grantId}~1resources/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_assignment_governance_grant_resources/methods/get_role_assignment_governance_grant_resources
        insert: []
        update: []
        delete: []
        replace: []
    admin_app_targets:
      id: okta.users.admin_app_targets
      name: admin_app_targets
      title: Admin App Targets
      methods:
        list_application_targets_for_application_administrator_role_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        unassign_app_target_from_app_admin_role_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
        unassign_app_instance_target_from_admin_role_for_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1catalog~1apps~1{appName}~1{appId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/admin_app_targets/methods/list_application_targets_for_application_administrator_role_for_user
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/admin_app_targets/methods/unassign_app_target_from_app_admin_role_for_user
          - $ref: >-
              #/components/x-stackQL-resources/admin_app_targets/methods/unassign_app_instance_target_from_admin_role_for_user
        replace: []
    role_group_targets:
      id: okta.users.role_group_targets
      name: role_group_targets
      title: Role Group Targets
      methods:
        list_group_targets_for_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1groups/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        assign_group_target_to_user_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1groups~1{groupId}/put
          response:
            mediaType: ''
            openAPIDocKey: '204'
        unassign_group_target_from_user_admin_role:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleAssignmentId}~1targets~1groups~1{groupId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_group_targets/methods/list_group_targets_for_role
        insert: []
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/role_group_targets/methods/unassign_group_target_from_user_admin_role
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/role_group_targets/methods/assign_group_target_to_user_role
    role_targets:
      id: okta.users.role_targets
      name: role_targets
      title: Role Targets
      methods:
        get_role_targets_by_user_id_and_role_id:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1roles~1{roleIdOrEncodedRoleId}~1targets/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/role_targets/methods/get_role_targets_by_user_id_and_role_id
        insert: []
        update: []
        delete: []
        replace: []
    subscriptions:
      id: okta.users.subscriptions
      name: subscriptions
      title: Subscriptions
      methods:
        list_subscriptions_user:
          operation:
            $ref: '#/paths/~1api~1v1~1users~1{userId}~1subscriptions/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_subscriptions_notification_type_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1subscriptions~1{notificationType}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        subscribe_by_notification_type_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1subscriptions~1{notificationType}~1subscribe/post
          response:
            mediaType: ''
            openAPIDocKey: '200'
        unsubscribe_by_notification_type_user:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1users~1{userId}~1subscriptions~1{notificationType}~1unsubscribe/post
          response:
            mediaType: ''
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/list_subscriptions_user
          - $ref: >-
              #/components/x-stackQL-resources/subscriptions/methods/get_subscriptions_notification_type_user
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
