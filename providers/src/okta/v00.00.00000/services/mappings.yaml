openapi: 3.0.3
info:
  title: mappings API
  description: okta mappings API
  version: 5.1.0
paths:
  /api/v1/mappings:
    get:
      summary: List all profile mappings
      description: >-
        Lists all profile mappings in your org with
        [pagination](https://developer.okta.com/docs/api/#pagination). You can
        return a subset of profile mappings that match a supported `sourceId`
        and/or `targetId`.


        The results are [paginated]https://developer.okta.com/docs/api#pagination according to the `limit`
        parameter. If there are multiple pages of results, the Link header
        contains a `next` link that you should treat as an opaque value (follow
        it, don't parse it). See [Link
        Header](https://developer.okta.com/docs/api/#link-header).


        The response is a collection of profile mappings that include a subset
        of the profile mapping object's parameters. The profile mapping object
        describes

        the properties mapping between an Okta user and an app user profile
        using [JSON Schema Draft
        4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).
      operationId: listProfileMappings
      parameters:
        - name: after
          in: query
          description: >-
            Mapping `id` that specifies the pagination cursor for the next page
            of mappings
          schema:
            type: string
        - name: limit
          in: query
          description: Specifies the number of results per page
          schema:
            type: integer
            format: int32
            default: 20
            maximum: 200
        - name: sourceId
          in: query
          description: >-
            The user type or app instance ID that acts as the source of
            expressions in a mapping. If this parameter is included, all
            returned mappings have this as their `source.id`.
          schema:
            type: string
        - name: targetId
          in: query
          description: >-
            The user type or app instance ID that acts as the target of
            expressions in a mapping. If this parameter is included, all
            returned mappings have this as their `target.id`.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListProfileMappings'
              examples:
                MappingList:
                  summary: List all profile mappings response
                  $ref: '#/components/examples/ListMappingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.profileMappings.read
      tags:
        - ProfileMapping
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/mappings/{mappingId}:
    get:
      summary: Retrieve a profile mapping
      description: Retrieves a single profile mapping referenced by its ID
      operationId: getProfileMapping
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
              examples:
                MappingRetrieve:
                  summary: Retrieve a single profile mapping
                  $ref: '#/components/examples/RetrieveMappingsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.profileMappings.read
      tags:
        - ProfileMapping
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    post:
      summary: Update a profile mapping
      description: >-
        Updates an existing profile mapping by adding, updating, or removing one
        or many property mappings
      operationId: updateProfileMapping
      x-codegen-request-body-name: profileMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileMappingRequest'
            examples:
              Addpropertymapping:
                $ref: '#/components/examples/AddMappingBody'
              Updatepropertymapping:
                $ref: '#/components/examples/UpdateMappingBody'
              Removepropertymapping:
                $ref: '#/components/examples/RemoveMappingBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileMapping'
              examples:
                Addpropertymapping:
                  summary: >-
                    Update an existing profile mapping by adding one or more
                    properties
                  $ref: '#/components/examples/AddMappingResponse'
                Updatepropertymapping:
                  summary: >-
                    Update an existing profile mapping by updating one or more
                    properties
                  $ref: '#/components/examples/UpdateMappingResponse'
                Removepropertymapping:
                  summary: >-
                    Update an existing profile mapping by removing one or more
                    properties
                  $ref: '#/components/examples/RemoveMappingResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.profileMappings.manage
      tags:
        - ProfileMapping
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathMappingId'
components:
  schemas:
    ListProfileMappings:
      description: >-
        A collection of the profile mappings that include a subset of the
        profile mapping object's properties. The profile mapping object
        describes a mapping between an Okta user's and an app user's properties
        using [JSON Schema Draft
        4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).


        > **Note:** Same type source/target mappings aren't supported by this
        API. Profile mappings must either be Okta->App or App->Okta.

      properties:
        id:
          type: string
          description: Unique identifier for profile mapping
          readOnly: true
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingTarget'
        _links:
          $ref: '#/components/schemas/LinksSelf'
    ProfileMapping:
      description: >-
        The profile mapping object describes a mapping between an Okta user's
        and an app user's properties using [JSON Schema Draft
        4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04).


        > **Note:** Same type source/target mappings aren't supported by this
        API. Profile mappings must be between Okta and an app.

      properties:
        id:
          type: string
          description: Unique identifier for a profile mapping
          readOnly: true
        properties:

          $ref: '#/components/schemas/ProfileMappingProperty'
          readOnly: false
        source:
          $ref: '#/components/schemas/ProfileMappingSource'
        target:
          $ref: '#/components/schemas/ProfileMappingTarget'
        _links:
          $ref: '#/components/schemas/LinksSelf'

    ProfileMappingRequest:
      description: The updated request body properties

      properties:
        properties:

          $ref: '#/components/schemas/ProfileMappingProperty'

      required:
        - properties
        - expression
        - pushStatus
    ProfileMappingSource:
      description: >-
        The parameter is the source of a profile mapping and is a valid [JSON
        Schema Draft
        4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04)
        document with the following properties. The data type can be an app
        instance or an Okta object.


        > **Note:** If the source is Okta and the UserTypes feature isn't
        enabled, then the source `_links` only has a link to the schema.

      properties:
        id:
          type: string
          description: Unique identifier for the application instance or userType
          readOnly: true
        name:
          type: string
          description: >-
            Variable name of the application instance or name of the referenced
            UserType
          readOnly: true
        type:
          type: string
          description: Type of user referenced in the mapping
          readOnly: true
        _links:
          $ref: '#/components/schemas/SourceLinks'
    ProfileMappingTarget:
      description: >-
        The parameter is the target of a profile mapping and is a valid [JSON
        Schema Draft
        4](https://datatracker.ietf.org/doc/html/draft-zyp-json-schema-04)
        document with the following properties. The data type can be an app
        instance or an Okta object.

         > **Note:** If the target is Okta and the UserTypes feature isn't enabled, then the target `_links` only has a link to the schema.

      properties:
        id:
          type: string
          description: Unique identifier for the application instance or UserType
          readOnly: true
        name:
          type: string
          description: >-
            Variable name of the application instance or name of the referenced
            userType
          readOnly: true
        type:
          type: string
          description: Type of user referenced in the mapping
          readOnly: true
        _links:
          $ref: '#/components/schemas/SourceLinks'
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.

      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    Error:
      title: Error

      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    ProfileMappingProperty:
      description: >-
        A target property, in string form, that maps to a valid [JSON Schema
        Draft](https://tools.ietf.org/html/draft-zyp-json-schema-04) document.

      properties:
        expression:
          description: >-
            Combination or single source properties that are mapped to the
            target property. See [Okta Expression
            Language](https://developer.okta.com/docs/reference/okta-expression-language/).
          type: string
        pushStatus:
          $ref: '#/components/schemas/ProfileMappingPropertyPushStatus'
    SourceLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        -
          properties:
            schema:
              allOf:
                - $ref: '#/components/schemas/HrefObject'
                - description: The associated schema
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    ErrorCause:

      properties:
        errorSummary:
          type: string
    ProfileMappingPropertyPushStatus:
      description: >-
        Indicates whether to update target properties for user create and update
        or just for user create.


        - Having a pushStatus of `PUSH` causes properties in the target to be
        updated on create and update. 

        - Having a pushStatus of `DONT_PUSH` causes properties in the target to
        be updated only on create.
      type: string
      enum:
        - DONT_PUSH
        - PUSH
    HrefObject:
      title: Link Object
      additionalProperties: true

      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`

      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
  parameters:
    pathMappingId:
      name: mappingId
      description: '`id` of the Mapping'
      in: path
      required: true
      schema:
        type: string
        example: cB6u7X8mptebWkffatKA
  examples:
    ListMappingsResponse:
      summary: List all profile mappings response
      value:
        - id: prm1k47ghydIQOTBW0g4
          source:
            id: otysbePhQ3yqt4cVv0g3
            name: user
            type: user
            _links:
              self:
                href: >-
                  https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
              schema:
                href: >-
                  https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
          target:
            id: 0oa1qmn4LZQQEH0wZ0g4
            name: okta_org2org
            type: appuser
            _links:
              self:
                href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
              schema:
                href: >-
                  https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4
    RetrieveMappingsResponse:
      summary: Retrieve a single profile mapping
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          firstName:
            expression: user.firstName
            pushStatus: PUSH
          lastName:
            expression: user.lastName
            pushStatus: PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4

    AddMappingBody:
      summary: Update an existing profile mapping by adding one or more properties
      value:
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.nickName
            pushStatus: PUSH

    UpdateMappingBody:
      summary: Update an existing profile mapping by updating one or more properties
      value:
        properties:
          nickName:
            expression: user.honorificPrefix + user.displayName
            pushStatus: DONT_PUSH

    RemoveMappingBody:
      summary: Update an existing profile mapping by removing one or more properties
      value:
        properties:
          nickName:
            expression: null
            pushStatus: null

    AddMappingResponse:
      summary: Update an existing profile mapping by adding one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.nickName
            pushStatus: PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4

    UpdateMappingResponse:
      summary: Update an existing profile mapping by updating one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
          nickName:
            expression: user.honorificPrefix + user.displayName
            pushStatus: DONT_PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4

    RemoveMappingResponse:
      summary: Update an existing profile mapping by removing one or more properties
      value:
        id: prm1k47ghydIQOTBW0g4
        source:
          id: otysbePhQ3yqt4cVv0g3
          name: user
          type: user
          _links:
            self:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/types/user/otysbePhQ3yqt4cVv0g3
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/user/oscsbePhQ3yqt4cVv0g3
        target:
          id: 0oa1qmn4LZQQEH0wZ0g4
          name: okta_org2org
          type: appuser
          _links:
            self:
              href: https://{yourOktaDomain}/api/v1/apps/0oa1qmn4LZQQEH0wZ0g4
            schema:
              href: >-
                https://{yourOktaDomain}/api/v1/meta/schemas/apps/0oa1qmn4LZQQEH0wZ0g4/default
        properties:
          fullName:
            expression: user.firstName + user.lastName
            pushStatus: PUSH
        _links:
          self:
            href: https://{yourOktaDomain}/api/v1/mappings/prm1k48weFSOnEUnw0g4

    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
  x-stackQL-resources:
    profile_mappings:
      id: okta.mappings.profile_mappings
      name: profile_mappings
      title: Profile Mappings
      methods:
        list_profile_mappings:
          operation:
            $ref: '#/paths/~1api~1v1~1mappings/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_profile_mapping:
          operation:
            $ref: '#/paths/~1api~1v1~1mappings~1{mappingId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_profile_mapping:
          operation:
            $ref: '#/paths/~1api~1v1~1mappings~1{mappingId}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/profile_mappings/methods/list_profile_mappings
          - $ref: >-
              #/components/x-stackQL-resources/profile_mappings/methods/get_profile_mapping
        insert: []
        update:
          - $ref: >-
              #/components/x-stackQL-resources/profile_mappings/methods/update_profile_mapping
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
