openapi: 3.0.3
info:
  title: identity_sources API
  description: okta identity_sources API
  version: 5.1.0
paths:
  /api/v1/identity-sources/{identitySourceId}/sessions:
    get:
      summary: List all identity source sessions
      description: >-
        Lists all identity source sessions for the given identity source
        instance
      operationId: listIdentitySourceSessions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                sessionsList:
                  $ref: '#/components/examples/ListSessionsResponseForGetSessions'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.read
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    post:
      summary: Create an identity source session
      description: >-
        Creates an identity source session for the given identity source
        instance
      operationId: createIdentitySourceSession
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                session:
                  $ref: '#/components/examples/GetSessionResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}:
    get:
      summary: Retrieve an identity source session
      description: >-
        Retrieves an identity source session for a given identity source ID and
        session ID
      operationId: getIdentitySourceSession
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                session:
                  $ref: '#/components/examples/GetSessionResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.read
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    delete:
      summary: Delete an identity source session
      description: >-
        Deletes an identity source session for a given identity source ID and
        session Id
      operationId: deleteIdentitySourceSession
      responses:
        '204':
          description: No Content
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/bulk-delete:
    post:
      summary: Upload the data to be deleted in Okta
      description: >-
        Uploads external IDs of entities that need to be deleted in Okta from
        the identity source for the given session
      operationId: uploadIdentitySourceDataForDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteRequestBody'
            examples:
              bulkDeletePayload:
                $ref: '#/components/examples/bulkDeletePayload'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/bulk-upsert:
    post:
      summary: Upload the data to be upserted in Okta
      description: >-
        Uploads entities that need to be inserted or updated in Okta from the
        identity source for the given session
      operationId: uploadIdentitySourceDataForUpsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpsertRequestBody'
            examples:
              bulkUpsertPayload:
                $ref: '#/components/examples/bulkUpsertPayload'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
  /api/v1/identity-sources/{identitySourceId}/sessions/{sessionId}/start-import:
    post:
      summary: Start the import from the identity source
      description: >-
        Starts the import from the identity source described by the uploaded
        bulk operations
      operationId: startImportFromIdentitySource
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentitySourceSession'
              examples:
                triggeredSession:
                  $ref: '#/components/examples/TriggerSessionResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.identitySources.manage
      tags:
        - IdentitySource
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathIdentitySourceId'
      - $ref: '#/components/parameters/pathIdentitySourceSessionId'
components:
  schemas:
    IdentitySourceSession:
      type: object
      properties:
        created:
          type: string
          description: The timestamp when the identity source session was created
          format: date-time
          readOnly: true
        id:
          type: string
          description: The ID of the identity source session
          readOnly: true
        identitySourceId:
          type: string
          description: >-
            The ID of the custom identity source for which the session is
            created
          readOnly: true
        importType:
          type: string
          description: The type of import.  All imports are `INCREMENTAL` imports.
          readOnly: true
        lastUpdated:
          type: string
          description: The timestamp when the identity source session was created
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/IdentitySourceSessionStatus'
    BulkDeleteRequestBody:
      type: object
      properties:
        entityType:
          description: >-
            The type of data to bulk delete in a session. Currently, only
            `USERS` is supported.
          type: string
          enum:
            - USERS
        profiles:
          type: array
          description: Array of profiles to be deleted
          items:
            $ref: '#/components/schemas/IdentitySourceUserProfileForDelete'
    BulkUpsertRequestBody:
      type: object
      properties:
        entityType:
          description: >-
            The type of data to upsert into the session. Currently, only `USERS`
            is supported.
          type: string
          enum:
            - USERS
        profiles:
          type: array
          description: Array of user profiles to be uploaded
          items:
            type: object
            properties:
              externalId:
                type: string
                description: >-
                  The external ID of the entity that needs to be created or
                  updated in Okta
                maxLength: 512
              profile:
                $ref: '#/components/schemas/IdentitySourceUserProfileForUpsert'
    IdentitySourceSessionStatus:
      description: The current status of the identity source session
      type: string
      enum:
        - CLOSED
        - COMPLETED
        - CREATED
        - ERROR
        - EXPIRED
        - IN_PROGRESS
        - TRIGGERED
      x-enumDescriptions:
        CREATED: >-
          This is a new identity source session that hasn't been processed. You
          can upload bulk data in this stage.
        IN_PROGRESS: The bulk data is being uploaded to Okta.
        TRIGGERED: >-
          Okta is processing the import data in this session. You can't load
          bulk data in this stage.
        COMPLETED: The bulk data was processed and imported into Okta.
        CLOSED: >-
          The identity source session was canceled and isn't available for
          further activity.
        EXPIRED: >-
          This identity source session had the `CREATED` status and timed-out
          after 24 hours of inactivity.
        ERROR: >-
          The processing of import data in the session encountered an error. You
          need to open a new session to upload the data again.
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    IdentitySourceUserProfileForDelete:
      type: object
      properties:
        externalId:
          type: string
          description: The external ID of the entity that needs to be deleted in Okta
          maxLength: 512
    IdentitySourceUserProfileForUpsert:
      description: >-
        Contains a set of external user attributes and their values that are
        mapped to Okta standard and custom profile properties. See the
        [`profile`
        object](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/User/#tag/User/operation/getUser!c=200&path=profile&t=response)
        and Declaration of a Custom Identity Source Schema in [Using anything as
        a
        source](https://help.okta.com/okta_help.htm?type=oie&id=ext-anything-as-a-source).

        > **Note:** Profile attributes can only be of the string type.
      type: object
      properties:
        email:
          type: string
          format: email
          description: Email address of the user
          minLength: 5
          maxLength: 100
        firstName:
          type: string
          description: First name of the user
          minLength: 1
          maxLength: 50
          nullable: true
        homeAddress:
          type: string
          description: Home address of the user
          maxLength: 4096
          nullable: true
        lastName:
          type: string
          description: Last name of the user
          minLength: 1
          maxLength: 50
          nullable: true
        mobilePhone:
          type: string
          description: Mobile phone number of the user
          maxLength: 100
          nullable: true
        secondEmail:
          type: string
          description: Alternative email address of the user
          format: email
          minLength: 5
          maxLength: 100
        userName:
          type: string
          description: Username of the user
          maxLength: 100
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
  parameters:
    pathIdentitySourceId:
      name: identitySourceId
      in: path
      required: true
      description: The ID of the identity source for which the session is created
      example: 0oa3l6l6WK6h0R0QW0g4
      schema:
        type: string
    pathIdentitySourceSessionId:
      name: sessionId
      in: path
      required: true
      description: The ID of the identity source session
      example: aps1qqonvr2SZv6o70h8
      schema:
        type: string
  examples:
    ListSessionsResponseForGetSessions:
      value:
        - id: aps1qqonvr2SZv6o70h8
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: CREATED
          importType: INCREMENTAL
          created: '2022-04-04T15:56:05.000Z'
          lastUpdated: '2022-05-05T16:15:44.000Z'
        - id: aps1quck606ngubVq0h8
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: TRIGGERED
          importType: INCREMENTAL
          created: '2022-04-04T16:56:05.000Z'
          lastUpdated: '2022-05-05T17:15:44.000Z'
        - id: aps1qzy2acb5jDlUc0h8
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: IN_PROGRESS
          importType: INCREMENTAL
          created: '2022-04-04T17:56:05.000Z'
          lastUpdated: '2022-05-05T18:15:44.000Z'
        - id: aps1qqne8c1JHkMdF0h8
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: EXPIRED
          importType: INCREMENTAL
          created: '2022-04-04T18:56:05.000Z'
          lastUpdated: '2022-05-05T19:15:44.000Z'
        - id: aps1qqonvr2SZv6o70h8
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: CLOSED
          importType: INCREMENTAL
          created: '2022-04-04T19:56:05.000Z'
          lastUpdated: '2022-05-05T20:15:44.000Z'
    GetSessionResponse:
      value:
        id: aps1qqonvr2SZv6o70h8
        identitySourceId: 0oa3l6l6WK6h0R0QW0g4
        status: CREATED
        importType: INCREMENTAL
        created: '2022-04-04T15:56:05.000Z'
        lastUpdated: '2022-05-05T16:15:44.000Z'
    bulkDeletePayload:
      value:
        entityType: USERS
        profiles:
          - externalId: EXT123456784C2IF
          - externalId: EXT123456784C3IF
          - externalId: EXT123456784C4IF
    bulkUpsertPayload:
      value:
        entityType: USERS
        profiles:
          - externalId: EXT123456784C2IF
            profile:
              userName: isaac.brock@example.com
              firstName: Isaac
              lastName: Brock
              email: isaac.brock@example.com
              secondEmail: isaac2.brock@example.com
              mobilePhone: 123-456-7890
              homeAddress: Kirkland, WA
    TriggerSessionResponse:
      value:
        - id: aps1qqonvr2SZv6o70h8
          identitySourceId: 0oa3l6l6WK6h0R0QW0g4
          status: TRIGGERED
          importType: INCREMENTAL
          created: '2022-04-04T15:56:05.000Z'
          lastUpdated: '2022-05-05T18:15:44.000Z'
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
  x-stackQL-resources:
    sessions:
      id: okta.identity_sources.sessions
      name: sessions
      title: Sessions
      methods:
        list_identity_source_sessions:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_identity_source_session:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_identity_source_session:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions~1{sessionId}/get
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_identity_source_session:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions~1{sessionId}/delete
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/list_identity_source_sessions
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/get_identity_source_session
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/create_identity_source_session
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/sessions/methods/delete_identity_source_session
        replace: []
    identity_sources:
      id: okta.identity_sources.identity_sources
      name: identity_sources
      title: Identity Sources
      methods:
        upload_identity_source_data_for_delete:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions~1{sessionId}~1bulk-delete/post
          response:
            mediaType: ''
            openAPIDocKey: '202'
        upload_identity_source_data_for_upsert:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions~1{sessionId}~1bulk-upsert/post
          response:
            mediaType: ''
            openAPIDocKey: '202'
        start_import_from_identity_source:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1identity-sources~1{identitySourceId}~1sessions~1{sessionId}~1start-import/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select: []
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
