openapi: 3.0.3
info:
  title: features API
  description: okta features API
  version: 5.1.0
paths:
  /api/v1/features:
    get:
      summary: List all features
      description: Lists all self-service features for your org
      operationId: listFeatures
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
              examples:
                FeaturesList:
                  summary: List all self-service features for your org
                  $ref: '#/components/examples/ListFeaturesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/features/{featureId}:
    get:
      summary: Retrieve a feature
      description: Retrieves a feature by ID
      operationId: getFeature
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
              examples:
                FeaturesRetrieve:
                  summary: Retrieve a feature by ID
                  $ref: '#/components/examples/RetrieveFeaturesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
  /api/v1/features/{featureId}/dependencies:
    get:
      summary: List all dependencies
      description: >-
        Lists all feature dependencies for a specified feature.


        A feature's dependencies are the features that it requires to be enabled
        in order for itself to be enabled.
      operationId: listFeatureDependencies
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
              examples:
                FeaturesDependenciesList:
                  summary: List all dependencies
                  $ref: '#/components/examples/ListFeatureDependenciesResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
  /api/v1/features/{featureId}/dependents:
    get:
      summary: List all dependents
      description: >-
        Lists all feature dependents for the specified feature.


        A feature's dependents are the features that need to be disabled in
        order for the feature itself to be disabled.
      operationId: listFeatureDependents
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
              examples:
                FeaturesDependentsList:
                  summary: List all feature dependents for the specified feature
                  $ref: '#/components/examples/ListFeatureDependentsResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.read
      tags:
        - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
  /api/v1/features/{featureId}/{lifecycle}:
    post:
      summary: Update a feature lifecycle
      description: >-
        Updates a feature's lifecycle status. Use this endpoint to enable or
        disable a feature for your org.


        Use the `mode=force` parameter to override dependency restrictions for a
        particular feature. Normally, you can't enable a feature if it has one
        or more dependencies that aren't enabled.


        When you use the `mode=force` parameter while enabling a feature, Okta
        first tries to enable any disabled features that this feature may have
        as dependencies. If you don't pass the `mode=force` parameter and the
        feature has dependencies that need to be enabled before the feature is
        enabled, a 400 error is returned.


        When you use the `mode=force` parameter while disabling a feature, Okta
        first tries to disable any enabled features that this feature may have
        as dependents. If you don't pass the `mode=force` parameter and the
        feature has dependents that need to be disabled before the feature is
        disabled, a 400 error is returned.


        The following chart shows the different state transitions for a feature.


        ![State transitions of a
        feature](/img/update-ssfeat-flowchart.png
        '#width=500px;')
      operationId: updateFeatureLifecycle
      parameters:
        - name: mode
          in: query
          description: >-
            Indicates if you want to force enable or disable a feature.
            Supported value is `force`.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature'
              examples:
                FeaturesUpdate:
                  summary: Update the feature lifecycle status
                  $ref: '#/components/examples/UpdateFeatureLifecycleResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.features.manage
      tags:
        - Feature
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathFeatureId'
      - $ref: '#/components/parameters/pathLifecycle'
components:
  schemas:
    Feature:
      description: Specifies feature release cycle information
      type: object
      properties:
        description:
          type: string
          description: Brief description of the feature and what it provides
        id:
          type: string
          description: Unique identifier for this feature
          readOnly: true
        name:
          type: string
          description: Name of the feature
        stage:
          $ref: '#/components/schemas/FeatureStage'
        status:
          $ref: '#/components/schemas/EnabledStatus'
        type:
          $ref: '#/components/schemas/FeatureType'
        _links:
          allOf:
            - $ref: '#/components/schemas/LinksSelf'
            - properties:
                dependents:
                  description: Link to feature dependents
                  type: object
                  readOnly: true
                  properties:
                    href:
                      description: Link URI
                      type: string
                      readOnly: true
                dependencies:
                  description: Link to feature dependencies
                  type: object
                  readOnly: true
                  properties:
                    href:
                      description: Link URI
                      type: string
                      readOnly: true
              type: object
    FeatureStage:
      description: >-
        Current release cycle stage of a feature


        If a feature's stage value is `EA`, the state is `null` and not
        returned. If the value is `BETA`, the state is `OPEN` or `CLOSED`
        depending on whether the `BETA` feature is manageable.


        > **Note:** If a feature's stage is `OPEN BETA`, you can update it only
        in Preview cells. If a feature's stage is `CLOSED BETA`, you can disable
        it only in Preview cells.
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FeatureStageState'
        value:
          $ref: '#/components/schemas/FeatureStageValue'
    EnabledStatus:
      description: Setting status
      type: string
      enum:
        - DISABLED
        - ENABLED
    FeatureType:
      description: Type of feature
      type: string
      enum:
        - self-service
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    FeatureLifecycle:
      example: ENABLE
      type: string
      enum:
        - DISABLE
        - ENABLE
    FeatureStageState:
      description: Indicates the release state of the feature
      type: string
      enum:
        - CLOSED
        - OPEN
    FeatureStageValue:
      description: Current release stage of the feature
      type: string
      enum:
        - BETA
        - EA
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    pathFeatureId:
      name: featureId
      description: '`id` of the feature'
      in: path
      required: true
      schema:
        type: string
        example: R5HjqNn1pEqWGy48E9jg
    pathLifecycle:
      name: lifecycle
      description: Whether to `ENABLE` or `DISABLE` the feature
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/FeatureLifecycle'
  examples:
    ListFeaturesResponse:
      summary: List all self-service features for your org
      value:
        - id: ftrZooGoT8b41iWRiQs7
          description: Example feature description
          name: Example feature name
          stage:
            state: CLOSED
            value: BETA
          status: DISABLED
          type: self-service
          _links:
            self:
              hints:
                allow:
                  - POST
              href: https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7
            dependents:
              href: >-
                https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents
            dependencies:
              href: >-
                https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies
    RetrieveFeaturesResponse:
      summary: Retrieve a feature by ID
      value:
        id: ftrZooGoT8b41iWRiQs7
        description: Example feature description
        name: Example feature name
        stage:
          state: CLOSED
          value: BETA
        status: DISABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
                - POST
            href: https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7
          dependents:
            href: >-
              https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents
          dependencies:
            href: >-
              https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies
    ListFeatureDependenciesResponse:
      summary: List all dependencies for a feature
      value:
        - id: ftrZooGoT8b41iWRiQs7
          description: Example feature description
          name: Example feature name
          stage:
            state: OPEN
            value: EA
          status: ENABLED
          type: self-service
          _links:
            self:
              hints:
                allow:
                  - POST
              href: https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7
            dependents:
              href: >-
                https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents
            dependencies:
              href: >-
                https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies
    ListFeatureDependentsResponse:
      summary: List all feature dependents for the specified feature
      value:
        - id: ftrZooGoT8b41iWRiQs7
          description: Example feature description
          name: Example feature name
          stage:
            state: OPEN
            value: EA
          status: ENABLED
          type: self-service
          _links:
            self:
              hints:
                allow:
                  - POST
              href: https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7
            dependents:
              href: >-
                https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents
            dependencies:
              href: >-
                https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies
    UpdateFeatureLifecycleResponse:
      summary: Update the feature lifecycle status
      value:
        description: Example feature description
        id: ftrZooGoT8b41iWRiQs7
        name: Example feature name
        stage:
          state: OPEN
          value: BETA
        status: DISABLED
        type: self-service
        _links:
          self:
            hints:
              allow:
                - POST
            href: https://{yourOktaDomain}/api/v1/features/ftrZooGoT8b41iWRiQs7
          dependents:
            href: >-
              https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependents
          dependencies:
            href: >-
              https://{yourOktaDomain}/api/v1/features/ftrlBDFcGwYP2epXCGYn/dependencies
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    features:
      id: okta.features.features
      name: features
      title: Features
      methods:
        list_features:
          operation:
            $ref: '#/paths/~1api~1v1~1features/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_feature:
          operation:
            $ref: '#/paths/~1api~1v1~1features~1{featureId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_feature_lifecycle:
          operation:
            $ref: '#/paths/~1api~1v1~1features~1{featureId}~1{lifecycle}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: '#/components/x-stackQL-resources/features/methods/list_features'
          - $ref: '#/components/x-stackQL-resources/features/methods/get_feature'
        insert: []
        update: []
        delete: []
        replace: []
    feature_dependencies:
      id: okta.features.feature_dependencies
      name: feature_dependencies
      title: Feature Dependencies
      methods:
        list_feature_dependencies:
          operation:
            $ref: '#/paths/~1api~1v1~1features~1{featureId}~1dependencies/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/feature_dependencies/methods/list_feature_dependencies
        insert: []
        update: []
        delete: []
        replace: []
    feature_dependents:
      id: okta.features.feature_dependents
      name: feature_dependents
      title: Feature Dependents
      methods:
        list_feature_dependents:
          operation:
            $ref: '#/paths/~1api~1v1~1features~1{featureId}~1dependents/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/feature_dependents/methods/list_feature_dependents
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
