openapi: 3.0.3
info:
  title: logstreams API
  description: okta logstreams API
  version: 5.1.0
paths:
  /api/v1/logStreams:
    get:
      summary: List all log streams
      description: >-
        Lists all log stream objects in your org. You can request a paginated
        list or a subset of log streams that match a supported filter
        expression.
      operationId: listLogStreams
      parameters:
        - $ref: '#/components/parameters/queryAfter'
        - $ref: '#/components/parameters/queryLimit'
        - name: filter
          in: query
          description: >-
            An expression that [filters]https://developer.okta.com/docs/api#filter the returned objects. You can
            only use the `eq` operator on either the `status` or `type`
            properties in the filter expression.
          schema:
            type: string
            example: type eq "aws_eventbridge"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogStream'
              examples:
                ExampleGetAllResponse:
                  $ref: '#/components/examples/LogStreamGetAllResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.read
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    post:
      summary: Create a log stream
      description: Creates a new log stream object
      operationId: createLogStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogStream'
            examples:
              LogStreamPostRequestExample:
                $ref: '#/components/examples/LogStreamPostRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamPostResponseExample:
                  $ref: '#/components/examples/LogStreamPostResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
  /api/v1/logStreams/{logStreamId}:
    get:
      summary: Retrieve a log stream
      description: Retrieves a log stream object by ID
      operationId: getLogStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamGetRequestExample:
                  $ref: '#/components/examples/LogStreamPostResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.read
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    put:
      summary: Replace a log stream
      description: >-
        Replaces the log stream object properties for a given ID.


        This operation is typically used to update the configuration of a log
        stream.

        Depending on the type of log stream you want to update, certain
        properties can't be modified after the log stream is initially created.

        Use the [Retrieve the log stream schema for the schema
        type](https://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/apihttps://developer.okta.com/docs/api/openapi/okta-management/management/tag/Schema/#tag/Schema/operation/getLogStreamSchema)
        request to determine which properties you can update for the specific
        log stream type.

        Log stream properties with the `"writeOnce" : true` attribute can't be
        updated after creation.

        You must still specify these `writeOnce` properties in the request body
        with the original values in the PUT request.


        > **Note:** You don't have to specify properties that have both the
        `"writeOnce": true` and the `"writeOnly": true` attributes in the PUT
        request body. These property values are ignored even if you add them in
        the PUT request body.
      operationId: replaceLogStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogStreamPutSchema'
            examples:
              LogStreamPutRequestExample:
                $ref: '#/components/examples/LogStreamPutRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamPostResponseExample:
                  $ref: '#/components/examples/LogStreamPutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    delete:
      summary: Delete a log stream
      description: Deletes a log stream object from your org by ID
      operationId: deleteLogStream
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathLogStreamId'
  /api/v1/logStreams/{logStreamId}/lifecycle/activate:
    post:
      summary: Activate a log stream
      description: Activates a log stream by `logStreamId`
      operationId: activateLogStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamActivateResponseExample:
                  $ref: '#/components/examples/LogStreamActivateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathLogStreamId'
  /api/v1/logStreams/{logStreamId}/lifecycle/deactivate:
    post:
      summary: Deactivate a log stream
      description: Deactivates a log stream by `logStreamId`
      operationId: deactivateLogStream
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStream'
              examples:
                LogStreamDeactivateResponseExample:
                  $ref: '#/components/examples/LogStreamDeactivateResponse'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.logStreams.manage
      tags:
        - LogStream
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: false
        SKUs: []
    parameters:
      - $ref: '#/components/parameters/pathLogStreamId'
components:
  schemas:
    LogStream:
      type: object
      properties:
        created:
          type: string
          format: date-time
          description: Timestamp when the log stream object was created
          readOnly: true
          example: '2022-10-21T16:59:59.000Z'
        id:
          type: string
          description: Unique identifier for the log stream
          readOnly: true
          example: 0oa1orzg0CHSgPcjZ0g4
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the log stream object was last updated
          readOnly: true
          example: '2022-10-21T17:15:10.000Z'
        name:
          $ref: '#/components/schemas/LogStreamName'
        status:
          type: string
          description: Lifecycle status of the log stream object
          enum:
            - ACTIVE
            - INACTIVE
          readOnly: true
        type:
          $ref: '#/components/schemas/LogStreamType'
        _links:
          $ref: '#/components/schemas/LogStreamLinksSelfAndLifecycle'
      required:
        - created
        - id
        - lastUpdated
        - name
        - status
        - type
        - _links
      discriminator:
        propertyName: type
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAws'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunk'
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    LogStreamPutSchema:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LogStreamName'
        type:
          $ref: '#/components/schemas/LogStreamType'
      required:
        - name
        - type
      discriminator:
        propertyName: type
        mapping:
          aws_eventbridge: '#/components/schemas/LogStreamAwsPutSchema'
          splunk_cloud_logstreaming: '#/components/schemas/LogStreamSplunkPutSchema'
    LogStreamName:
      description: Unique name for the log stream object
      example: My AWS EventBridge log stream
      type: string
    LogStreamType:
      description: >-
        Specifies the streaming provider used


        Supported providers:
          * `aws_eventbridge` ([AWS EventBridge](https://aws.amazon.com/eventbridge))
          * `splunk_cloud_logstreaming` ([Splunk Cloud](https://www.splunk.com/en_us/software/splunk-cloud-platform.html))

        Select the provider type to see provider-specific configurations in the
        `settings` property:
      type: string
      enum:
        - aws_eventbridge
        - splunk_cloud_logstreaming
    LogStreamLinksSelfAndLifecycle:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for the
        current status of an application using the [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        activate:
          $ref: '#/components/schemas/LogStreamActivateLink'
        deactivate:
          $ref: '#/components/schemas/LogStreamDeactivateLink'
        self:
          $ref: '#/components/schemas/LogStreamSelfLink'
      required:
        - self
      readOnly: true
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    LogStreamActivateLink:
      allOf:
        - $ref: '#/components/schemas/LogStreamLinkObject'
        - description: Link to activate the resource
    LogStreamDeactivateLink:
      allOf:
        - $ref: '#/components/schemas/LogStreamLinkObject'
        - description: Link to deactivate the resource
    LogStreamSelfLink:
      allOf:
        - $ref: '#/components/schemas/LogStreamLinkObject'
        - description: Link to the resource (self)
    LogStreamLinkObject:
      title: Log stream link object
      type: object
      properties:
        href:
          type: string
          description: The URI of the resource
        method:
          type: string
          description: HTTP method allowed for the resource
          enum:
            - GET
            - POST
      required:
        - href
      readOnly: true
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    queryAfter:
      name: after
      in: query
      schema:
        type: string
      description: >-
        The cursor to use for pagination. It is an opaque string that specifies
        your current location in the list and is obtained from the `Link`
        response header. See
        [Pagination](https://developer.okta.com/docs/api/#pagination).
    queryLimit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
      description: A limit on the number of objects to return
    pathLogStreamId:
      name: logStreamId
      in: path
      schema:
        type: string
        example: 0oa1orzg0CHSgPcjZ0g4
      required: true
      description: Unique identifier for the log stream
  examples:
    LogStreamGetAllResponse:
      summary: Lists all log streams
      value:
        - id: 0oa1orqUGCIoCGNxf0g4
          type: aws_eventbridge
          name: Example AWS EventBridge
          lastUpdated: '2023-03-24T21:02:43.000Z'
          created: '2023-03-24T21:02:43.000Z'
          status: ACTIVE
          settings:
            accountId: '123456789012'
            eventSourceName: your-event-source-name
            region: us-east-2
          _links:
            self:
              href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
              method: GET
            deactivate:
              href: >-
                http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
              method: POST
    LogStreamPostRequest:
      summary: Create an AWS EventBridge log stream
      value:
        type: aws_eventbridge
        name: Example AWS EventBridge
        settings:
          eventSourceName: your-event-source-name
          accountId: '123456789012'
          region: us-east-2
    LogStreamPostResponse:
      summary: AWS EventBridge log stream response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: '2023-03-24T21:02:43.000Z'
        created: '2023-03-24T21:02:43.000Z'
        status: ACTIVE
        settings:
          accountId: '123456789012'
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
            method: GET
          deactivate:
            href: >-
              http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
            method: POST
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    LogStreamPutRequest:
      summary: Replace AWS EventBridge name
      value:
        type: aws_eventbridge
        name: Updated AWS EventBridge
        settings:
          eventSourceName: your-event-source-name
          accountId: '123456789012'
          region: us-east-2
    LogStreamPutResponse:
      summary: Replace AWS EventBridge name response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Updated AWS EventBridge
        lastUpdated: '2023-03-24T21:12:43.000Z'
        created: '2023-03-24T21:02:43.000Z'
        status: ACTIVE
        settings:
          accountId: '123456789012'
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
            method: GET
          deactivate:
            href: >-
              http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
            method: POST
    LogStreamActivateResponse:
      summary: Activate log stream response
      value:
        id: 0oa1orqUGCIoCGNxf0g4
        type: aws_eventbridge
        name: Example AWS EventBridge
        lastUpdated: '2023-03-24T21:22:43.000Z'
        created: '2023-03-24T21:02:43.000Z'
        status: ACTIVE
        settings:
          accountId: '123456789012'
          eventSourceName: your-event-source-name
          region: us-east-2
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4
            method: GET
          deactivate:
            href: >-
              http://{yourOktaDomain}/api/v1/logStreams/0oa1orqUGCIoCGNxf0g4/lifecycle/deactivate
            method: POST
    LogStreamDeactivateResponse:
      summary: Deactivate log stream response
      value:
        id: 0oa7agphh5FT7H521d7
        type: splunk_cloud_logstreaming
        name: Splunk Cloud Example
        lastUpdated: '2023-03-24T21:23:00.000Z'
        created: '2023-03-24T21:15:13.000Z'
        status: INACTIVE
        settings:
          edition: aws
          host: okexample.splunkcloud.com
        _links:
          self:
            href: http://{yourOktaDomain}/api/v1/logStreams/0oa7agphh5FT7H521d7
            method: GET
          activate:
            href: >-
              http://{yourOktaDomain}/api/v1/logStreams/0oa7agphh5FT7H521d7/lifecycle/activate
            method: POST
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    log_streams:
      id: okta.logstreams.log_streams
      name: log_streams
      title: Log Streams
      methods:
        list_log_streams:
          operation:
            $ref: '#/paths/~1api~1v1~1logStreams/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_log_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1logStreams/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_log_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1logStreams~1{logStreamId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_log_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1logStreams~1{logStreamId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_log_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1logStreams~1{logStreamId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        activate_log_stream:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1logStreams~1{logStreamId}~1lifecycle~1activate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_log_stream:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1logStreams~1{logStreamId}~1lifecycle~1deactivate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/log_streams/methods/list_log_streams
          - $ref: >-
              #/components/x-stackQL-resources/log_streams/methods/get_log_stream
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/log_streams/methods/create_log_stream
        update: []
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/log_streams/methods/delete_log_stream
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/log_streams/methods/replace_log_stream
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
