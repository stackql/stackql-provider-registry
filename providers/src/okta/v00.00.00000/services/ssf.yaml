openapi: 3.0.3
info:
  title: ssf API
  description: okta ssf API
  version: 5.1.0
paths:
  /api/v1/ssf/stream:
    get:
      summary: Retrieve the SSF stream configuration(s)
      description: >-
        Retrieves either a list of all known SSF Stream configurations or the
        individual configuration if specified by ID.


        As Stream configurations are tied to a Client ID, only the Stream
        associated with the Client ID of the request OAuth 2.0 access token can
        be viewed.
      operationId: getSsfStreams
      parameters:
        - in: query
          name: stream_id
          schema:
            type: string
          example: esc1k235GIIztAuGK0g5
          description: The ID of the specified SSF Stream configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    title: List of Stream Configurations
                    items:
                      $ref: '#/components/schemas/StreamConfiguration'
                  - $ref: '#/components/schemas/StreamConfiguration'
              examples:
                listResponse:
                  $ref: '#/components/examples/listStreamConfigurationExample'
                individualStreamResponse:
                  $ref: '#/components/examples/streamConfigurationExample'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.read
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    post:
      summary: Create an SSF stream
      description: >-
        Creates an SSF Stream for an event receiver to start receiving security
        events in the form of Security Event Tokens (SETs) from Okta.


        An SSF Stream is associated with the Client ID of the OAuth 2.0 access
        token used to create the stream. The Client ID is provided by Okta for
        an [OAuth 2.0 app
        integration](https://help.okta.com/okta_help.htm?id=ext_Apps_App_Integration_Wizard-oidc).
        One SSF Stream is allowed for each Client ID, hence, one SSF Stream is
        allowed for each app integration in Okta.


        A maximum of 10 SSF Stream configurations can be created for one org.
      operationId: createSsfStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamConfigurationCreateRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamConfiguration'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '409':
          $ref: '#/components/responses/ErrorApiValidationConflict409'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.manage
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    put:
      summary: Replace an SSF stream
      description: >-
        Replaces all properties for an existing SSF Stream configuration.


        If the `stream_id` isn't provided in the request body, the associated
        stream with the Client ID (through the request OAuth 2.0 access token)
        is replaced.
      operationId: replaceSsfStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamConfiguration'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamConfiguration'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.manage
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    patch:
      summary: Update an SSF stream
      description: >-
        Updates properties for an existing SSF Stream configuration.


        If the `stream_id` isn't provided in the request body, the associated
        stream with the Client ID (through the request OAuth 2.0 access token)
        is updated.
      operationId: updateSsfStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamConfiguration'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamConfiguration'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.manage
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
    delete:
      summary: Delete an SSF stream
      description: >-
        Deletes the specified SSF Stream.


        If the `stream_id` is not provided in the query string, the associated
        stream with the Client ID (through the request OAuth 2.0 access token)
        is deleted. Otherwise, the SSF Stream with the `stream_id` is deleted,
        if found.
      operationId: deleteSsfStream
      parameters:
        - in: query
          name: stream_id
          schema:
            type: string
          example: esc1k235GIIztAuGK0g5
          description: The ID of the specified SSF Stream configuration
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.manage
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
  /api/v1/ssf/stream/status:
    get:
      summary: Retrieve the SSF Stream status
      description: >-
        Retrieves the status of an SSF Stream. The status indicates whether the
        transmitter is able to transmit events over the stream.
      operationId: getSsfStreamStatus
      parameters:
        - in: query
          name: stream_id
          schema:
            type: string
          example: esc1k235GIIztAuGK0g5
          description: The ID of the specified SSF Stream configuration
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamStatus'
              examples:
                streamStatusEnabledExample:
                  $ref: '#/components/examples/streamStatusEnabledExample'
                streamStatusDisabledExample:
                  $ref: '#/components/examples/streamStatusDisabledExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.read
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
  /api/v1/ssf/stream/verification:
    post:
      summary: Verify an SSF stream
      description: >-
        Verifies an SSF Stream by publishing a Verification Event requested by a
        Security Events Provider.


        > **Note:** A successful response doesn't indicate that the Verification
        Event
            was transmitted successfully, only that Okta has transmitted the event or will
            at some point in the future. The SSF Receiver is responsible for validating and acknowledging
            successful transmission of the request by responding with HTTP Response Status Code 202.
      operationId: verifySsfStream
      x-codegen-request-body-name: instance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamVerificationRequest'
        required: true
      responses:
        '204':
          description: No Content
          content: {}
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '401':
          $ref: '#/components/responses/ErrorInvalidToken401'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - oauth2:
            - ssf.manage
      tags:
        - SSFTransmitter
      x-okta-lifecycle:
        lifecycle: LIMITED_GA
        isGenerallyAvailable: false
        SKUs:
          - Okta Identity Engine
components:
  schemas:
    StreamConfiguration:
      title: Stream Configuration
      type: object
      properties:
        aud:
          oneOf:
            - type: string
              format: uri
              example: https://example.com
            - type: array
              items:
                type: string
                format: uri
                example: https://example.com
          description: >-
            The audience used in the SET. This value is set as `aud` in the
            claim.


            A read-only parameter that is set by the transmitter. If this
            parameter is included in the request, the value must match the
            expected value from the transmitter.
          example: https://example.com
        delivery:
          $ref: '#/components/schemas/StreamConfigurationDelivery'
        events_delivered:
          type: array
          items:
            type: string
            format: uri
          description: >-
            The events (mapped by the array of event type URIs) that the
            transmitter actually delivers to the SSF Stream.


            A read-only parameter that is set by the transmitter. If this
            parameter is included in the request, the value must match the
            expected value from the transmitter.
          example:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_requested:
          type: array
          maxItems: 50
          items:
            type: string
            format: uri
            maxLength: 256
          description: >-
            The events (mapped by the array of event type URIs) that the
            receiver wants to receive
          example:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_supported:
          type: array
          items:
            type: string
            format: uri
          description: >-
            An array of event type URIs that the transmitter supports.


            A read-only parameter that is set by the transmitter. If this
            parameter is included in the request, the value must match the
            expected value from the transmitter.
          example:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
        format:
          type: string
          description: The Subject Identifier format expected for any SET transmitted.
          enum:
            - iss_sub
        iss:
          type: string
          description: >-
            The issuer used in Security Event Tokens (SETs). This value is set
            as `iss` in the claim.


            A read-only parameter that is set by the transmitter. If this
            parameter is included in the request, the value must match the
            expected value from the transmitter.
          example: https://{yourOktaDomain}
        min_verification_interval:
          type: integer
          nullable: true
          example: 60
          description: >-
            The minimum amount of time, in seconds, between two verification
            requests.


            A read-only parameter that is set by the transmitter. If this
            parameter is included in the request, the value must match the
            expected value from the transmitter.
        stream_id:
          type: string
          description: The ID of the SSF Stream configuration
          example: esc1k235GIIztAuGK0g5
      required:
        - events_requested
        - delivery
    StreamConfigurationCreateRequest:
      title: Stream Configuration Create Request
      type: object
      properties:
        delivery:
          $ref: '#/components/schemas/StreamConfigurationDelivery'
        events_requested:
          type: array
          maxItems: 50
          items:
            type: string
            format: uri
            maxLength: 256
          description: >-
            The events (mapped by the array of event type URIs) that the
            receiver wants to receive
          example:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
        format:
          type: string
          description: The Subject Identifier format expected for any SET transmitted.
          enum:
            - iss_sub
      required:
        - events_requested
        - delivery
    StreamStatus:
      title: Stream Status
      description: Status corresponding to the `stream_id` of the SSF Stream
      type: object
      properties:
        status:
          type: string
          description: The status of the SSF Stream configuration
          enum:
            - enabled
            - disabled
          x-enumDescriptions:
            enabled: >-
              The transmitter MUST transmit events over the stream according to
              the stream’s configured delivery method.
            disabled: >-
              The transmitter MUST NOT transmit events over the stream and
              doesn't hold any events for later transmission.
        stream_id:
          type: string
          description: >-
            The ID of the SSF Stream configuration. This corresponds to the
            value in the query parameter of the request.
          example: esc1k235GIIztAuGK0g5
    StreamVerificationRequest:
      title: Stream Verification Request
      type: object
      properties:
        state:
          type: string
          description: >-
            An arbitrary string that Okta as a transmitter must echo back to the
            Event Receiver in the Verification Event's payload
          example: VGhpcyBpcyBhbiBleGFtcGxlIHN0YXRlIHZhbHVlLgo=
        stream_id:
          type: string
          description: The ID of the SSF Stream Configuration
          example: esc1k235GIIztAuGK0g5
      required:
        - stream_id
    StreamConfigurationDelivery:
      title: Stream Configuration Delivery
      description: >-
        Contains information about the intended SET delivery method by the
        receiver
      type: object
      properties:
        authorization_header:
          type: string
          description: >-
            The HTTP Authorization header that is included for each HTTP POST
            request
          example: '{authorizationHeaderValue}'
          nullable: true
          maxLength: 8192
        endpoint_url:
          type: string
          format: uri
          description: >-
            The target endpoint URL where the transmitter delivers the SET using
            HTTP POST requests
          example: https://example.com/
          maxLength: 2048
        method:
          type: string
          description: The delivery method that the transmitter uses for delivering a SET
          enum:
            - https://schemas.openid.net/secevent/risc/delivery-method/push
            - urn:ietf:rfc:8935
      required:
        - method
        - endpoint_url
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
  responses:
    ErrorInvalidToken401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            InvalidTokenProvided:
              $ref: '#/components/examples/ErrorInvalidTokenProvided'
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorApiValidationConflict409:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorApiValidationConflict'
  examples:
    listStreamConfigurationExample:
      summary: List of SSF stream configurations example
      value:
        - aud: https://example.com
          delivery:
            method: urn:ietf:rfc:8935
            endpoint_url: https://example.com
          events_delivered:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
          events_requested:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
          events_supported:
            - >-
              https://schemas.openid.net/secevent/caep/event-type/session-revoked
            - >-
              https://schemas.openid.net/secevent/caep/event-type/credential-change
          format: iss_sub
          iss: https://{yourOktaDomain}
          min_verification_interval: 0
          stream_id: esc1k235GIIztAuGK0g5
    streamConfigurationExample:
      summary: SSF stream configuration example
      value:
        aud: https://example.com
        delivery:
          method: urn:ietf:rfc:8935
          endpoint_url: https://example.com
        events_delivered:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - >-
            https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_requested:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - >-
            https://schemas.openid.net/secevent/caep/event-type/credential-change
        events_supported:
          - https://schemas.openid.net/secevent/caep/event-type/session-revoked
          - >-
            https://schemas.openid.net/secevent/caep/event-type/credential-change
        format: iss_sub
        iss: https://{yourOktaDomain}
        min_verification_interval: 0
        stream_id: esc1k235GIIztAuGK0g5
    streamStatusEnabledExample:
      summary: SSF Stream enabled status example
      value:
        stream_id: esc1k235GIIztAuGK0g5
        status: enabled
    streamStatusDisabledExample:
      summary: SSF Stream disabled status example
      value:
        stream_id: esc1k235GIIztAuGK0g5
        status: disabled
    ErrorInvalidTokenProvided:
      summary: Invalid Token Provided
      value:
        errorCode: E0000011
        errorSummary: Invalid token provided
        errorLink: E0000011
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorApiValidationConflict:
      summary: Conflict
      value:
        errorCode: E0000195
        errorSummary: 'Api validation failed due to conflict: {0}'
        errorLink: E0000195
        errorId: sampleMlLvGUj_YD5v15vkYWX
        errorCauses: []
  x-stackQL-resources:
    ssf_streams:
      id: okta.ssf.ssf_streams
      name: ssf_streams
      title: Ssf Streams
      methods:
        get_ssf_streams:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_ssf_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream/post'
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        replace_ssf_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_ssf_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream/patch'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_ssf_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        verify_ssf_stream:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream~1verification/post'
          response:
            mediaType: ''
            openAPIDocKey: '204'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/ssf_streams/methods/get_ssf_streams
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/ssf_streams/methods/create_ssf_stream
        update:
          - $ref: >-
              #/components/x-stackQL-resources/ssf_streams/methods/update_ssf_stream
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/ssf_streams/methods/delete_ssf_stream
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/ssf_streams/methods/replace_ssf_stream
    ssf_stream_status:
      id: okta.ssf.ssf_stream_status
      name: ssf_stream_status
      title: Ssf Stream Status
      methods:
        get_ssf_stream_status:
          operation:
            $ref: '#/paths/~1api~1v1~1ssf~1stream~1status/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/ssf_stream_status/methods/get_ssf_stream_status
        insert: []
        update: []
        delete: []
        replace: []
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
