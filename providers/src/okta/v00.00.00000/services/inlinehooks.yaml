openapi: 3.0.3
info:
  title: inlinehooks API
  description: okta inlinehooks API
  version: 5.1.0
paths:
  /api/v1/inlineHooks:
    get:
      summary: List all inline hooks
      description: >-
        Lists all inline hooks or all inline hooks of a specific type.


        When listing a specific inline hook, you need to specify its type. The
        following types are currently supported:
          | Type Value                         | Name                                                           |
          |------------------------------------|----------------------------------------------------------------|
          | `com.okta.import.transform`        | [User import inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createUserImportInlineHook)       |
          | `com.okta.oauth2.tokens.transform` | [Token inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createTokenInlineHook)               |
          | `com.okta.saml.tokens.transform`   | [SAML assertion inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createSAMLAssertionInlineHook)       |
          | `com.okta.telephony.provider`      | [Telephony inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createTelephonyInlineHook) |
          | `com.okta.user.credential.password.import` | [Password import inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/createPasswordImportInlineHook)|
          | `com.okta.user.pre-registration`   | [Registration inline hook](https://developer.okta.com/docs/api/openapi/okta-management/management/tag/InlineHook/#tag/InlineHook/operation/create-registration-hook) |
      operationId: listInlineHooks
      parameters:
        - $ref: '#/components/parameters/inlineHookType'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InlineHook'
              examples:
                InlineHooktMgmtListAllexample:
                  $ref: '#/components/examples/InlineHooktMgmtListAllexample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Create an inline hook
      description: >-
        Creates an inline hook


        This endpoint creates an inline hook for your org in an `ACTIVE` status.
        You need to pass an inline hooks object in the JSON payload of your
        request. 

        That object represents the set of required information about the inline
        hook that you're registering, including:


        * The URI of your external service endpoint

        * The type of inline hook you're registering

        * The type of authentication you're registering


        There are two authentication options that you can configure for your
        inline hook: HTTP headers and OAuth 2.0 tokens.


        HTTP headers let you specify a secret API key that you want Okta to pass
        to your external service endpoint (so that your external service can
        check for its presence as a security measure).


        >**Note:** The API key that you set here is unrelated to the Okta API
        token you must supply when making calls to Okta APIs.


        You can also optionally specify extra headers that you want Okta to pass
        to your external service with each call.


        To configure HTTP header authentication, see parameters for the `config`
        object.


        OAuth 2.0 tokens provide enhanced security between Okta and your
        external service. You can configure these tokens for the following
        types&mdash;client secret and private key.


        >**Note:** Your external service's endpoint needs to be a valid HTTPS
        endpoint. The URI you specify should always begin with `https://`.


        The total number of inline hooks that you can create in an Okta org is
        limited to 50, which is a combined total for any combination of inline
        hook types.
      operationId: createInlineHook
      x-codegen-request-body-name: inlineHookCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookCreate'
            examples:
              CreateInlineHookHTTP:
                $ref: '#/components/examples/InlineHookMgmtCreateHTTPRequest'
              CreateInlineHookOAuthClientSecret:
                $ref: >-
                  #/components/examples/InlineHookMgmtCreateOAuthClientSecretRequest
              CreateInlineHookOAuthPrivateKey:
                $ref: >-
                  #/components/examples/InlineHookMgmtCreateOAuthPrivateKeyRequest
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHookCreateResponse'
              examples:
                CreateInlineHookHTTP:
                  $ref: '#/components/examples/InlineHookMgmtCreateHTTPResponse'
                CreateInlineHookOAuthClientSecret:
                  $ref: >-
                    #/components/examples/InlineHookMgmtCreateOAuthClientSecretResponse
                CreateInlineHookOAuthPrivateKey:
                  $ref: >-
                    #/components/examples/InlineHookMgmtCreateOAuthPrivateKeyResponse
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
  /api/v1/inlineHooks/{inlineHookId}:
    get:
      summary: Retrieve an inline hook
      description: Retrieves an inline hook by `inlineHookId`
      operationId: getInlineHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
              examples:
                InlineHookHTTP:
                  $ref: '#/components/examples/InlineHookMgmtHTTPexample'
                InlineHookOAuthClientSecret:
                  $ref: '#/components/examples/InlineHookMgmtOAuthCSPexample'
                InlineHookOAuthPrivateKey:
                  $ref: '#/components/examples/InlineHookMgmtOauthPKJexample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.read
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    post:
      summary: Update an inline hook
      description: Updates an inline hook by `inlineHookId`
      operationId: updateInlineHook
      x-codegen-request-body-name: inlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookReplace'
            examples:
              UpdateInlineHookHTTP:
                $ref: '#/components/examples/InlineHookMgmtPutHTTPRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
              examples:
                UpdateInlineHookHTTP:
                  $ref: '#/components/examples/InlineHookMgmtPutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace an inline hook
      description: >-
        Replaces an inline hook by `inlineHookId`. The submitted inline hook
        properties replace the existing properties after passing validation.


        >**Note:** Some properties are immutable and can't be updated.
      operationId: replaceInlineHook
      x-codegen-request-body-name: inlineHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InlineHookReplace'
            examples:
              UpdateInlineHookHTTP:
                $ref: '#/components/examples/InlineHookMgmtPutHTTPRequest'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
              examples:
                UpdateInlineHookHTTP:
                  $ref: '#/components/examples/InlineHookMgmtPutResponse'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    delete:
      summary: Delete an inline hook
      description: >-
        Deletes an inline hook by `inlineHookId`. After it's deleted, the inline
        hook is unrecoverable. As a safety precaution, only inline hooks with a
        status of `INACTIVE` are eligible for deletion.
      operationId: deleteInlineHook
      responses:
        '204':
          description: No Content
          content: {}
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
  /api/v1/inlineHooks/{inlineHookId}/execute:
    post:
      summary: Execute an inline hook
      description: >-
        Executes the inline hook that matches the provided `inlineHookId` by
        using the request body as the input. This inline hook sends the
        provided 

        data through the `channel` object and returns a response if it matches
        the correct data contract. Otherwise it returns an error. You need to 

        construct a JSON payload that matches the payloads that Okta would send
        to your external service for this inline hook type.


        A timeout of three seconds is enforced on all outbound requests, with
        one retry in the event of a timeout or an error response from the remote
        system. 

        If a successful response isn't received after the request, a 400 error
        is returned with more information about what failed.


        >**Note:** This execution endpoint isn't tied to any other functionality
        in Okta, and you should only use it for testing purposes.
      operationId: executeInlineHook
      x-codegen-request-body-name: payloadData
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PasswordImportRequestExecute'
                - $ref: '#/components/schemas/TelephonyRequestExecute'
                - $ref: '#/components/schemas/RegistrationInlineHookRequest'
                - $ref: '#/components/schemas/TokenRequest'
                - $ref: '#/components/schemas/SAMLPayloadExecute'
                - $ref: '#/components/schemas/UserImportRequestExecute'
            examples:
              PasswordImportPayloadExample:
                $ref: '#/components/examples/PasswordImportPayloadExample'
              TelephonyPayloadExample:
                $ref: '#/components/examples/TelephonyPayloadExample'
              ProfileEnrollmentRequest:
                $ref: '#/components/examples/ProfileEnrollmentRequest'
              TokenPayLoadExample:
                $ref: '#/components/examples/TokenPayLoadExample'
              SAMLPayloadExample:
                $ref: '#/components/examples/SAMLPayLoadExample'
              UserImportPayloadExample:
                $ref: '#/components/examples/UserImportPayloadExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PasswordImportResponse'
                  - $ref: '#/components/schemas/TelephonyResponse'
                  - $ref: '#/components/schemas/RegistrationInlineHookResponse'
                  - $ref: '#/components/schemas/TokenHookResponse'
                  - $ref: '#/components/schemas/SAMLHookResponse'
                  - $ref: '#/components/schemas/UserImportResponse'
              examples:
                PasswordImportPayloadExample:
                  $ref: '#/components/examples/PasswordImportVerifiedResponse'
                TelephonyPayloadExample:
                  $ref: '#/components/examples/TelephonySuccessResponse'
                ProfileEnrollmentRequest:
                  $ref: '#/components/examples/ProfileEnrollmentResponse'
                TokenPayLoadExample:
                  $ref: '#/components/examples/TokenHookResponse'
                SAMLPayloadExample:
                  $ref: '#/components/examples/SAMLHookResponseExample'
                UserImportPayloadExample:
                  $ref: '#/components/examples/UserImportChangeAppUserProfileExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/activate:
    post:
      summary: Activate an inline hook
      description: Activates the inline hook by `inlineHookId`
      operationId: activateInlineHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
              examples:
                ActivateAnInlineHook:
                  $ref: '#/components/examples/InlineHookMgmtOAuthCSPexample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
  /api/v1/inlineHooks/{inlineHookId}/lifecycle/deactivate:
    post:
      summary: Deactivate an inline hook
      description: Deactivates the inline hook by `inlineHookId`
      operationId: deactivateInlineHook
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineHook'
              examples:
                DeactivateAnInlineHook:
                  $ref: '#/components/examples/InlineHookMgmtHTTPexampleDeactivate'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '404':
          $ref: '#/components/responses/ErrorResourceNotFound404'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.inlineHooks.manage
      tags:
        - InlineHook
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathInlineHookId'
components:
  schemas:
    InlineHook:
      description: An inline hook object that specifies the details of the inline hook
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
          description: Date of the inline hook creation
        id:
          type: string
          readOnly: true
          description: The unique identifier for the inline hook
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Date of the last inline hook update
        name:
          type: string
          description: The display name of the inline hook
          maximum: 255
          minimum: 1
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
        version:
          type: string
          description: >-
            Version of the inline hook type. The currently supported version is
            `1.0.0`.
          readOnly: true
        _links:
          $ref: '#/components/schemas/InlineHookLinks'
    InlineHookCreate:
      description: An inline hook object that specifies the details of the inline hook
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannelCreate'
        name:
          type: string
          description: The display name of the inline hook
          maximum: 255
          minimum: 1
        type:
          $ref: '#/components/schemas/InlineHookType'
        version:
          type: string
          description: >-
            Version of the inline hook type. The currently supported version is
            `1.0.0`.
    InlineHookCreateResponse:
      description: An inline hook object that specifies the details of the inline hook
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannel'
        created:
          type: string
          format: date-time
          readOnly: true
          description: Date of the inline hook creation
        id:
          type: string
          readOnly: true
          description: The unique identifier for the inline hook
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          description: Date of the last inline hook update
        name:
          type: string
          description: The display name of the inline hook
          maximum: 255
          minimum: 1
        status:
          $ref: '#/components/schemas/InlineHookStatus'
        type:
          $ref: '#/components/schemas/InlineHookType'
        version:
          type: string
          description: >-
            Version of the inline hook type. The currently supported version is
            `1.0.0`.
          readOnly: true
        _links:
          $ref: '#/components/schemas/InlineHookLinksCreate'
    InlineHookReplace:
      description: An inline hook object that specifies the details of the inline hook
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/InlineHookChannelCreate'
        name:
          type: string
          description: The display name of the inline hook
          maximum: 255
          minimum: 1
        version:
          type: string
          description: >-
            Version of the inline hook type. The currently supported version is
            `1.0.0`.
    PasswordImportRequestExecute:
      description: Password import inline hook request
      allOf:
        - $ref: '#/components/schemas/InlineHookBasePayload'
        - $ref: '#/components/schemas/PasswordImportRequest'
    TelephonyRequestExecute:
      description: Telephony inline hook request body
      allOf:
        - $ref: '#/components/schemas/InlineHookBasePayload'
        - $ref: '#/components/schemas/TelephonyRequest'
    RegistrationInlineHookRequest:
      description: Registration inline hook request
      type: object
      properties:
        eventType:
          type: string
          description: >-
            The type of inline hook. The registration inline hook type is
            `com.okta.user.pre-registration`.
        requestType:
          $ref: '#/components/schemas/RegistrationInlineHookRequestType'
        source:
          type: string
          description: The ID of the registration inline hook
      discriminator:
        propertyName: requestType
        mapping:
          self.service.registration: '#/components/schemas/RegistrationInlineHookSSRData'
          progressive.profile: '#/components/schemas/RegistrationInlineHookPPData'
    TokenRequest:
      description: Token inline hook request
      allOf:
        - $ref: '#/components/schemas/InlineHookBasePayload'
        - $ref: '#/components/schemas/TokenPayLoad'
    SAMLPayloadExecute:
      description: SAML assertion inline hook request
      allOf:
        - $ref: '#/components/schemas/InlineHookBasePayload'
        - $ref: '#/components/schemas/SAMLPayLoad'
    UserImportRequestExecute:
      description: User import inline hook request
      allOf:
        - $ref: '#/components/schemas/InlineHookBasePayload'
        - $ref: '#/components/schemas/UserImportRequest'
    PasswordImportResponse:
      description: Password import inline hook response
      type: object
      properties:
        commands:
          description: >-
            The `commands` object specifies whether Okta accepts the end user's
            sign-in credentials as valid or not. For the password import inline
            hook, you typically only return one `commands` object with one array
            element in it.
          type: array
          items:
            type: object
            properties:
              type:
                description: >-
                  The location where you specify the command. For the password
                  import inline hook, there's only one command,
                  `com.okta.action.update`.
              value:
                description: >-
                  The parameter value of the command.

                  * To indicate that the supplied credentials are valid, supply
                  a type property set to `com.okta.action.update` together with
                  a value property set to `{"credential": "VERIFIED"}`.

                  * To indicate that the supplied credentials are invalid,
                  supply a type property set to `com.okta.action.update`
                  together with a value property set to `{"credential":
                  "UNVERIFIED"}`.

                  Alternatively, you can send an empty response (`204`). By
                  default, the `data.action.credential` is always set to
                  `UNVERIFIED`.
                type: object
                properties:
                  credential:
                    type: string
                    enum:
                      - UNVERIFIED
                      - VERIFIED
    TelephonyResponse:
      description: Telephony inline hook response
      type: object
      properties:
        commands:
          description: >-
            The `commands` object specifies whether Okta accepts the end user's
            sign-in credentials as valid or not. For the telephony inline hook,
            you typically only return one `commands` object with one array
            element in it.
          type: array
          items:
            type: object
            properties:
              type:
                description: >-
                  The location where you specify the command. For the telephony
                  inline hook, there's only one command,
                  `com.okta.telephony.action`.
                type: string
              value:
                description: >-
                  The status of the telephony operation along with optional
                  additional information about the provider, transaction ID and
                  any other transaction metadata.
                type: array
                items:
                  type: object
                  properties:
                    status:
                      type: string
                      description: Status of telephony callout
                      enum:
                        - SUCCESSFUL
                        - PENDING
                        - FAILED
                      x-enumDescriptions:
                        SUCCESSFUL: >-
                          External web service was able to deliver the OTP to
                          the Requester.
                        PENDING: >-
                          External web service wasn't able to confirm delivery
                          of the OTP to the Requester.
                        FAILED: >-
                          External web service was unable to deliver the OTP to
                          the Requester.
                    provider:
                      type: string
                      description: Telephony provider for sms/voice
                    transactionId:
                      type: string
                      description: Transaction ID for sms/voice
                    transactionMetadata:
                      type: string
                      description: Any relevant metadata for the telephony transaction
    RegistrationInlineHookResponse:
      description: Registration inline hook response
      type: object
      properties:
        commands:
          type: array
    TokenHookResponse:
      description: >-
        For the token inline hook, the `commands` and `error` objects that you
        can return in the JSON payload of your response are defined in the
        following sections.

        > **Note:** The size of your response payload must be less than 256 KB.
      type: object
      properties:
        commands:
          description: >-
            You can use the `commands` object to provide commands to Okta. It's
            where you can tell Okta to add more claims to the token.

            The `commands` object is an array, allowing you to send multiple
            commands. In each array element, there needs to be a `type` property
            and `value` property. The `type` property is where you specify which
            of the supported commands you want to execute, and `value` is where
            you supply an operand for that command.

            In the case of the token hook type, the `value` property is itself a
            nested object in which you specify a particular operation, a path to
            act on, and a value.
          type: array
          items:
            type: object
            properties:
              type:
                description: >-
                  One of the supported commands:
                    `com.okta.identity.patch`: Modify an ID token
                    `com.okta.access.patch`: Modify an access token
                  > **Note:** The `commands` array should only contain commands
                  that can be applied to the requested tokens. For example, if
                  only an ID token is requested, the `commands` array shouldn't
                  contain commands of the type `com.okta.access.patch`.
                type: string
              value:
                description: >-
                  The `value` object is where you specify the operation to
                  perform. It's an array, which allows you to request more than
                  one operation.
                type: array
                items:
                  type: object
                  properties:
                    op:
                      description: >-
                        The name of one of the supported ops: `add`: Add a
                        claim. `replace`: Modify an existing claim and update
                        the token lifetime. `remove`: Remove an existing claim.

                        #### `op: add` notes


                        <details>

                        <summary>Add a claim</summary>

                          Add a claim

                          **Existing JSON**

                          ```
                          {
                            "employeeId": "00u12345678"
                          }
                          ```

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.assertion.patch",
                                "value": [
                                  {
                                    "op": "add",
                                    "path": "/claims/extPatientId",
                                    "value": "1234"
                                  }
                                ]
                              },
                              {
                                "type": "com.okta.assertion.patch",
                                "value": [
                                  {
                                    "op": "add",
                                    "path": "/claims/external_guid",
                                    "value": "F0384685-F87D-474B-848D-2058AC5655A7"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          **Updated JSON**

                          ```
                          {
                            "employeeId": "00u12345678",
                            "extPatientId": 1234,
                            "external_guid": "F0384685-F87D-474B-848D-2058AC5655A7"
                          }
                          ```

                          > **Note:** If you use the `add` operation and include an existing claim in your response with a different value, that value is replaced. Use the `replace` operation instead. If you attempt to remove a system-specific claim or use an invalid operation, the entire PATCH fails and errors are logged in the token hooks events. See `op: replace` notes.
                        </details>


                        <details>

                        <summary>Add new members to existing JSON
                        objects</summary>

                          If you have a JSON object in a claim called `employee_profile`, and you want to add the `department_id` member to the claim, the existing JSON is updated by specifying the claim in the path, followed by the name of the object member.

                          **Existing JSON**

                          ```
                          {
                            "employee_profile": {
                              "employee_id": "1234",
                              "name": "Anna"
                            }
                          }
                          ```

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "add",
                                    "path": "/claims/employee_profile/department_id",
                                    "value": "4947"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          **Updated JSON**

                          ```
                          {
                            "employee_profile": {
                              "employee_id": "1234",
                              "name": "Anna",
                              "department_id": "4947"
                            }
                          }
                          ```

                          > **Note:** If you attempt to add a member within a JSON object that doesn't exist or using an invalid operation, the entire PATCH fails and errors are logged in the token hooks events.
                        </details>


                        <details>

                        <summary>Add new elements to existing arrays</summary>

                          Append an element to an array by specifying the name of the array, followed by the index where you want to insert the element in the path. Alternatively, you can specify the array name followed by a hyphen (-) in the path to append an element at the end of the array. For example, you have an array that contains the user's preferred airports, and you want to add a new airport to the array. The existing target JSON object is updated by specifying the claim in the path, followed by the index of where to insert the claim.

                          **Existing JSON**

                          ```
                          {
                            "preferred_airports":[
                              "sjc",
                              "sfo",
                              "oak"
                            ]
                          }
                          ```

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "add",
                                    "path": "/claims/preferred_airports/3",
                                    "value": "lax"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          **Updated JSON**

                          ```
                          {
                            "preferred_airports":[
                              "sjc",
                              "sfo",
                              "oak",
                              "lax"
                            ]
                          }
                          ```

                          > **Note:** If you attempt to add an element within an array that doesn't exist or specify an invalid index, the entire PATCH fails and errors are logged in the token hooks events.
                        </details>


                        #### `op: replace` notes


                        <details>

                        <summary>Modify an existing claim</summary>

                          You can modify (`replace`) existing custom claims or OIDC standard profile claims, such as `birthdate` and `locale`. You can't, however, modify any system-specific claims, such as `iss` or `ver`. Also, you can't modify a claim that isn't currently part of the token in the request payload. Attempting to modify a system-specific claim or using an invalid operation results in the entire PATCH failing and errors logged in the token hooks events.

                          See [Access Tokens Scopes and Claims](/openapi/okta-oauth/guides/overview/#access-token-scopes-and-claims) for the list of access token-reserved claims that you can't modify.

                          > **Note:** Although the `aud` and `sub` claims are listed as reserved claims, you can modify those claims in access tokens. You can't modify these claims in ID tokens.

                          See [ID Token Claims](/openapi/okta-oauth/guides/overview/#id-token-claims) for a list of ID token-reserved claims that you can't modify.

                          **Existing target JSON object**

                          ```
                          {
                            "employeeId": "00u12345678",
                            "extPatientId": 1234,
                            "external_guid": "F0384685-F87D-474B-848D-2058AC5655A7"
                          }
                          ```

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "replace",
                                    "path": "/claims/extPatientId",
                                    "value": "12345"
                                  },
                                  {
                                    "op": "replace",
                                    "path": "/claims/external_guid",
                                    "value": "D1495796-G98E-585C-959E-1269CD6766B8"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          **Updated JSON***

                          ```
                          {
                            "employeeId": "00u12345678",
                            "extPatientId": 12345,
                            "external_guid": "D1495796-G98E-585C-959E-1269CD6766B8"
                          }
                          ```

                        </details>


                        <details>

                        <summary>Modify members within existing JSON objects and
                        arrays</summary>

                          Use the `replace` operation to modify members within JSON objects and elements within arrays. For example, you have a JSON object in a claim called `employee_profile`, and you want to update the email address of the employee. The existing target JSON object is updated by specifying the claim in the path, followed by the name of the object member that you want to modify.

                          **Existing target JSON object**

                          ```
                          {
                            "employee_profile": {
                              "employee_id":"1234",
                              "name":"Anna",
                              "email":"anna.v@company.com"
                              }
                          }
                          ```

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "replace",
                                    "path": "/claims/employee_profile/email",
                                    "value": "anna@company.com"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          **Updated JSON**

                          ```
                          {
                            "employee_profile": {
                              "employee_id":"1234",
                              "name":"Anna",
                              "email":"anna@company.com"
                              }
                          }
                          ```

                          > **Note:** If you attempt to modify a member within a JSON object that doesn't exist or use an invalid operation, the entire PATCH fails and errors are logged in the token hooks events.

                          Similarly, you can replace elements in an array by specifying the array name and the valid index of the element that you want to replace in the path.
                        </details>


                        <details>

                        <summary>Modify token lifetimes</summary>
                          You can modify how long the access and ID tokens are valid by specifying the `lifetime` in seconds. The `lifetime` value must be a minimum of five minutes (300 seconds) and a maximum of 24 hours (86,400 seconds).

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "replace",
                                    "path": "/token/lifetime/expiration",
                                    "value": 36000
                                  }
                                ]
                              },
                              {
                                "type": "com.okta.access.patch",
                                "value": [
                                  {
                                    "op": "replace",
                                    "path": "/token/lifetime/expiration",
                                    "value": 36000
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                        </details>


                        #### `op: remove` notes


                        <details>

                        <summary>Remove a claim</summary>

                          You can remove existing custom claims or OIDC standard profile claims, such as `birthdate` or `locale`. You can't, however, remove any system-specific claims, such as `iss` or `ver`. You also can't remove a claim that isn't currently part of the token in the request payload. If you attempt to remove a system-specific claim or use an invalid operation, the entire PATCH fails and errors are logged in the token hooks events.

                          See [Access Tokens Scopes and Claims](/openapi/okta-oauth/guides/overview/#access-token-scopes-and-claims) for the list of access token-reserved claims that you can't modify.

                          See [ID Token Claims](/openapi/okta-oauth/guides/overview/#id-token-claims) for a list of ID token-reserved claims that you can't modify.

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "remove",
                                    "path": "/claims/birthdate",
                                    "value": null
                                  }
                                ]
                              },
                              {
                                "type": "com.okta.access.patch",
                                "value": [
                                  {
                                    "op": "remove",
                                    "path": "/claims/external_guid"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          > **Note:** The `value` property for the `remove` operation isn't required. If you provide it in the response, it should be set to `null`. Providing any other value fails the entire PATCH response.

                        </details>


                        <details>

                        <summary>Remove members from existing arrays</summary>

                          Use the `remove` operation to remove members from existing arrays. For example, you have an array that contains the user's preferred airports, and you want to remove an airport from the array. The existing target JSON object is updated by specifying the array name followed by the index of the element that you want to remove. You don't need to specify a value for the remove operation, but you can specify `null` as the value if you want.

                          **Existing target JSON object**

                          ```
                          {
                            "preferred_airports": [
                                "sjc",
                                "lax",
                                "sfo",
                                "oak"
                              ]
                          }
                          ```

                          **Operation**

                          ```
                          {
                            "commands": [
                              {
                                "type": "com.okta.identity.patch",
                                "value": [
                                  {
                                    "op": "remove",
                                    "path": "/claims/preferred_airports/1"
                                  }
                                ]
                              }
                            ]
                          }
                          ```

                          **Updated JSON**

                          ```
                          {
                            "preferred_airports": [
                                "sjc",
                                "sfo",
                                "oak"
                              ]
                          }
                          ```

                        </details>


                        <details>

                        <summary>Remove members from existing JSON
                        objects</summary>

                         Use the `remove` operation to remove members from existing JSON objects. Do this by specifying the JSON object in the path, followed by the claim member that you would like to remove. For example, you have an `employee_profile` claim, and you want to remove `email` from it.

                        **Existing target JSON object**


                        ```

                        {
                          "employee_profile": {
                            "employee_id":"1234",
                            "name":"Anna",
                            "email":"anna.v@company.com"
                            }
                        }

                        ```


                        **Operation**


                        ```

                        {
                          "commands": [
                            {
                              "type": "com.okta.identity.patch",
                              "value": [
                                {
                                  "op": "remove",
                                  "path": "/claims/employee_profile/email"
                                }
                              ]
                            }
                          ]
                        }

                        ```


                        **Updated JSON**

                        ```

                        {
                          "employee_profile": {
                            "employee_id":"1234",
                            "name":"Anna",
                            }
                        }

                        ```


                        </details>
                      type: string
                    path:
                      description: >-
                        Location within the token to apply the operation,
                        specified as a slash-delimited path. When you add,
                        replace, or remove a claim, this path always begins with
                        `/claims/` and is followed by the name of the new claim
                        that you're adding. When you replace a token lifetime,
                        the path should always be `/token/lifetime/expiration`.
                      type: string
                    value:
                      description: Value to set the claim to.
                      oneOf:
                        - type: string
                        - type: integer
                        - type: object
        error:
          description: >-
            When an error object is returned, it causes Okta to return an OAuth
            2.0 error to the requester of the token. In the error response, the
            value of `error` is `server_error`, and the value of
            `error_description` is the string that you supplied in the
            `errorSummary` property of the `error` object that you returned.
          type: object
          properties:
            errorSummary:
              description: >-
                Human-readable summary of the error. If the error object doesn't
                include the `errorSummary` property defined, the following
                common default message is returned to the end user: `The
                callback service returned an error`.
              type: string
    SAMLHookResponse:
      type: object
      properties:
        commands:
          description: >-
            The `commands` object is where you tell Okta to add additional
            claims to the assertion or to modify the existing assertion
            statements.


            `commands` is an array, allowing you to send multiple commands. In
            each array element, include a `type` property and a `value`
            property. The `type` property is where you specify which of the
            supported commands you want to execute, and `value` is where you
            supply an operand for that command.

            In the case of the SAML assertion inline hook, the `value` property
            is itself a nested object, in which you specify a particular
            operation, a path to act on, and a value.
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: One of the supported commands `com.okta.assertion.patch`
              value:
                type: array
                items:
                  type: object
                  properties:
                    op:
                      type: string
                      description: |-
                        The name of one of the supported ops:
                        `add`:  Add a new claim to the assertion
                        `replace`: Modify any element of the assertion
                         > **Note:** If a response to the SAML assertion inline hook request isn't received from your external service within three seconds, a timeout occurs. In this scenario, the Okta process flow continues with the original SAML assertion returned.
                    path:
                      type: string
                      description: Location, within the assertion, to apply the operation
                    value:
                      oneOf:
                        - type: string
                        - type: integer
                        - type: object
                      description: >-
                        The value of the claim that you add or replace, and can
                        also include other attributes. If adding to a claim, add
                        another `value` attribute residing within an array
                        called `attributeValues`.


                        See the following examples:


                        #### Simple value (integer or string)


                        `"value": 300` or `"value": "replacementString"`


                        #### Attribute value (object)


                        ` "value": {
                            "authContextClassRef": "replacementValue"
                          }`

                        #### AttributeValues array value (object)


                        ` "value": {
                            "attributes": {
                              "NameFormat": "urn:oasis:names:tc:SAML:2.0:attrname-format:basic"
                            },
                            "attributeValues": [
                              {"attributes": {
                                "xsi:type": "xs:string"
                              },
                              "value": "4321"}
                              ]
                            }`
        error:
          description: >-
            An object to return an error. Returning an error causes Okta to
            record a failure event in the Okta System Log.

            The string supplied in the `errorSummary` property is recorded in
            the System Log event.

            > **Note:** If the error object doesn't include the defined
            `errorSummary` property, the following common default message

            is returned to the end user: `The callback service returned an
            error`.


            > **Note:** If a response to a SAML inline hook request isn't
            received from your external service within three seconds, a timeout
            occurs. In this scenario, the Okta SAML inline hook process
            continues, and the user is created.
          type: object
          properties:
            errorSummary:
              description: A human-readable summary of the error
              type: string
    UserImportResponse:
      type: object
      properties:
        commands:
          description: >-
            The `commands` object is where you can provide commands to Okta. It
            is an array that allows you to send multiple commands.

            Each array element needs to consist of a type-value pair.
          type: array
          items:
            type: object
            properties:
              type:
                description: >-
                  The command types supported for the import inline hook.

                  When using the `com.okta.action.update` command to specify
                  that the user should be treated as a match, you need to also
                  provide a `com.okta.user.update` command that sets the ID of
                  the Okta user.
                type: string
                enum:
                  - com.okta.appUser.profile.update
                  - com.okta.user.profile.update
                  - com.okta.action.update
                  - com.okta.user.update
                x-enumDescriptions:
                  com.okta.appUser.profile.update: Change values of attributes in the user's app user profile
                  com.okta.user.profile.update: Change values of attributes in the user's Okta user profile
                  com.okta.action.update: >-
                    Specify whether to create a new Okta user for the user being
                    imported or treat them as a match of an existing Okta user
                  com.okta.user.update: >-
                    Specify the existing Okta user that the imported user should
                    be treated as a match of.
              value:
                description: >-
                  The `value` object is the parameter to pass to the command. In
                  the case of the `com.okta.appUser.profile.update` and
                  `com.okta.user.profile.update` commands, 

                  the parameter should be a list of one or more profile
                  attributes and the values you wish to set them to. In the case
                  of the `com.okta.action.update` command,

                  the parameter should be a `result` property set to either
                  `CREATE_USER` or `LINK_USER`.
                type: object
                additionalProperties:
                  type: string
        error:
          description: >-
            An object to return an error. Returning an error causes Okta to
            record a failure event in the Okta System Log. 

            The string supplied in the `errorSummary` property is recorded in
            the System Log event.


            >**Note:** If a response to an import inline hook request is not
            received from your external service within three seconds, a timeout
            occurs. In this scenario, the Okta import process continues and the
            user is created.
          type: object
          properties:
            errorSummary:
              description: A human-readable summary of the error
              type: string
    InlineHookChannel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InlineHookChannelType'
        version:
          type: string
          description: >-
            Version of the inline hook type. The currently supported version is
            `1.0.0`.
      discriminator:
        propertyName: type
        mapping:
          HTTP: '#/components/schemas/InlineHookChannelHttp'
          OAUTH: '#/components/schemas/InlineHookChannelOAuth'
    InlineHookStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    InlineHookType:
      description: One of the inline hook types
      type: string
      enum:
        - com.okta.import.transform
        - com.okta.oauth2.tokens.transform
        - com.okta.saml.tokens.transform
        - com.okta.telephony.provider
        - com.okta.user.credential.password.import
        - com.okta.user.pre-registration
    InlineHookLinks:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            activate:
              description: URL to activate the inline hook
              allOf:
                - $ref: '#/components/schemas/HrefObject'
            deactivate:
              description: URL to deactivate the inline hook
              allOf:
                - $ref: '#/components/schemas/HrefObject'
            delete:
              description: URL to delete the inline hook
              allOf:
                - $ref: '#/components/schemas/HrefObject'
            execute:
              description: URL to test the inline hook
              allOf:
                - $ref: '#/components/schemas/HrefObject'
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    InlineHookChannelCreate:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/InlineHookChannelType'
        version:
          type: string
          description: >-
            Version of the inline hook type. The currently supported version is
            `1.0.0`.
      discriminator:
        propertyName: type
        mapping:
          HTTP: '#/components/schemas/InlineHookChannelHttpCreate'
          OAUTH: '#/components/schemas/InlineHookChannelOAuthCreate'
    InlineHookLinksCreate:
      allOf:
        - $ref: '#/components/schemas/LinksSelf'
        - type: object
          properties:
            deactivate:
              description: URL to deactivate the inline hook
              allOf:
                - $ref: '#/components/schemas/HrefObject'
            execute:
              description: URL to test the inline hook
              allOf:
                - $ref: '#/components/schemas/HrefObject'
    InlineHookBasePayload:
      type: object
      properties:
        cloudEventVersion:
          description: The inline hook cloud version
          example: 0.1
          type: string
        contentType:
          description: The inline hook request header content
          example: application/JSON
          type: string
        eventId:
          type: string
          description: The individual inline hook request ID
          example: 3o9jBzq1SmOGmmsDsqyyeQ
        eventTime:
          type: string
          description: The time the inline hook request was sent
          example: '2020-01-17T21:23:56.000Z'
        eventTypeVersion:
          description: The inline hook version
          example: 1
          type: string
    PasswordImportRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PasswordImportRequestData'
        eventType:
          type: string
          description: >-
            The type of inline hook. The password import inline hook type is
            `com.okta.user.credential.password.import`.
        source:
          description: The ID and URL of the password import inline hook
          type: string
    TelephonyRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TelephonyRequestData'
        eventType:
          type: string
          description: >-
            The type of inline hook. The telephony inline hook type is
            `com.okta.telephony.provider`.
        requestType:
          type: string
          description: >-
            The type of inline hook request. For example,
            `com.okta.user.telephony.pre-enrollment`.
        source:
          description: The ID and URL of the telephony inline hook
          type: string
    RegistrationInlineHookRequestType:
      description: >-
        The type of registration hook. Use either `self.service.registration` or
        `progressive.profile`.
      type: string
      enum:
        - progressive.profile
        - self.service.registration
    TokenPayLoad:
      type: object
      properties:
        data:
          type: object
          properties:
            context:
              allOf:
                - $ref: '#/components/schemas/BaseContext'
                - type: object
                  properties:
                    protocol:
                      description: Details of the authentication protocol
                      type: object
                      properties:
                        type:
                          description: The type of authentication protocol used
                          type: string
                          example: OAUTH2.0
                        request:
                          $ref: '#/components/schemas/TokenProtocolRequest'
                        OriginalGrant:
                          description: >-
                            Information about the original token request used to
                            get the refresh token being used, when in a refresh
                            token request
                          type: object
                          properties:
                            request:
                              $ref: '#/components/schemas/TokenProtocolRequest'
                            refresh_token:
                              $ref: '#/components/schemas/RefreshToken'
                        issuer:
                          description: The authorization server's issuer identifier
                          type: object
                          properties:
                            uri:
                              description: The authorization server's issuer identifier
                              type: string
                              format: uri
                        client:
                          description: The client making the token request
                          type: object
                          properties:
                            id:
                              description: The unique identifier of the client
                              type: string
                            name:
                              description: The name of the client
                              type: string
                            type:
                              description: The type of client
                              type: string
                              example: PUBLIC
                    policy:
                      description: The authorization server policy used to mint the token
                      type: object
                      properties:
                        id:
                          description: The unique identifier for the policy
                          type: string
                          example: 00p4ktaq2ryOYtsHC0g7
                        rule:
                          description: >-
                            The authorization server policy rule used to mint
                            the token
                          type: object
                          properties:
                            id:
                              description: The unique identifier for the policy rule
                              type: string
                              example: 0pr4ktb7elD3ZvrMy0g7
            identity:
              allOf:
                - description: >-
                    Provides information on the properties of the ID token that
                    Okta has generated, including the existing claims that it
                    contains
                - $ref: '#/components/schemas/BaseToken'
            access:
              allOf:
                - description: >-
                    Provides information on the properties of the access token
                    that Okta has generated, including the existing claims that
                    it contains
                - $ref: '#/components/schemas/BaseToken'
                - type: object
                  properties:
                    scopes:
                      description: >-
                        The scopes contained in the token. For descriptions of
                        the scopes that you can include, see the Okta [OpenID
                        Connect and OAuth 2.0 API
                        reference](/openapi/okta-oauth/guides/overview/#scopes).
                      type: object
            refresh_token:
              $ref: '#/components/schemas/RefreshToken'
        eventType:
          type: string
          description: >-
            The type of inline hook. The token inline hook type is
            `com.okta.oauth2.tokens.transform`.
        source:
          description: The URL of the token inline hook
          type: string
    SAMLPayLoad:
      type: object
      properties:
        data:
          type: object
          properties:
            context:
              allOf:
                - $ref: '#/components/schemas/BaseContext'
                - type: object
                  properties:
                    protocol:
                      description: Details of the assertion protocol being used
                      type: object
                      properties:
                        type:
                          description: >-
                            The type of authentication protocol being used for
                            the assertion
                          type: string
                          example: SAML2.0
                        issuer:
                          type: object
                          properties:
                            id:
                              description: >-
                                The unique identifier of the issuer that
                                provided the SAML assertion
                              type: string
                              example: 0oath92zlO60urQOP0g3
                            name:
                              description: >-
                                The name of the issuer that provided the SAML
                                assertion
                              type: string
                              example: SAML 2.0 App
                            uri:
                              description: >-
                                The base URI of the SAML endpoint that's used to
                                assert the authorization
                              type: string
                              example: http://www.okta.com/exkth8lMzFm0HZOTU0g3
            assertion:
              description: Details of the SAML assertion that was generated
              type: object
              properties:
                subject:
                  description: >-
                    Provides a JSON representation of the `<saml:Subject>`
                    element of the SAML assertion
                  type: object
                  properties:
                    nameId:
                      description: The unique identifier of the user
                      type: string
                      example: user@example.com
                    nameFormat:
                      description: Indicates how to interpret the attribute name
                      type: string
                      example: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
                    confirmation:
                      type: object
                      properties:
                        method:
                          description: >-
                            Used to indicate how the authorization server
                            confirmed the SAML assertion
                          type: string
                          example: urn:oasis:names:tc:SAML:2.0:cm:bearer
                        data:
                          type: object
                          properties:
                            recipient:
                              description: >-
                                The token endpoint URL of the authorization
                                server
                              type: string
                              example: http://www.example.com:7070/saml/sso
                authentication:
                  description: >-
                    Provides a JSON representation of the
                    `<saml:AuthnStatement>` element of the SAML assertion
                  type: object
                  properties:
                    sessionIndex:
                      description: The unique identifier describing the assertion statement
                      type: string
                      example: id1553800523546.312669168
                    authnContext:
                      description: >-
                        Details of the authentication methods used for the SAML
                        assertion
                      type: object
                      properties:
                        authnContextClassRef:
                          description: >-
                            Describes the identity provider's supported
                            authentication context classes
                          type: string
                          example: >-
                            urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
                conditions:
                  description: >-
                    Provides a JSON representation of the `<saml:Conditions>`
                    element of the SAML assertion
                  type: object
                  properties:
                    audienceRestriction:
                      description: >-
                        Describes which service providers the assertion is valid
                        for
                      type: array
                      items:
                        type: string
                        example:
                          - urn:example:sp
                claims:
                  description: >-
                    Provides a JSON representation of the
                    `<saml:AttributeStatement>` element contained in the
                    generated SAML assertion. Contains any optional SAML
                    attribute statements that you have defined for the app using
                    the Admin Console's **SAML Settings**.
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      attributes:
                        type: object
                        properties:
                          NameFormat:
                            type: string
                            description: Indicates how to interpret the attribute name
                      attributeValues:
                        type: array
                        items:
                          type: object
                          properties:
                            attributes:
                              type: object
                              properties:
                                xsi:type:
                                  type: string
                                  description: Used to derive the type of the attribute
                            value:
                              type: string
                              description: The actual value of the attribute
                lifetime:
                  description: >-
                    Specifies the expiration time, in seconds, of the SAML
                    assertion
                  type: object
                  properties:
                    expiration:
                      description: The expiration time in seconds
                      type: integer
                      example: 300
        eventType:
          type: string
          description: >-
            The type of inline hook. The SAML assertion inline hook type is
            `com.okta.saml.tokens.transform`.
        source:
          description: The ID and URL of the SAML assertion inline hook
          type: string
    UserImportRequest:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserImportRequestData'
        eventType:
          type: string
          description: >-
            The type of inline hook. The user import inline hook type is
            `com.okta.import.transform`.
        source:
          description: The ID of the user import inline hook
          type: string
    InlineHookChannelType:
      type: string
      enum:
        - HTTP
        - OAUTH
    LinksSelf:
      description: >-
        Specifies link relations (see [Web
        Linking](https://www.rfc-editor.org/rfc/rfc8288)) available using the
        [JSON Hypertext Application
        Language](https://datatracker.ietf.org/doc/html/draft-kelly-json-hal-06)
        specification. This object is used for dynamic discovery of related
        resources and lifecycle operations.
      type: object
      properties:
        self:
          $ref: '#/components/schemas/HrefObjectSelfLink'
      readOnly: true
    HrefObject:
      title: Link Object
      additionalProperties: true
      type: object
      properties:
        hints:
          $ref: '#/components/schemas/HrefHints'
          readOnly: true
        href:
          type: string
          description: Link URI
        name:
          type: string
          description: Link name
          readOnly: true
        templated:
          type: boolean
          description: >-
            Indicates whether the link object's `href` property is a URI
            template.
          readOnly: true
        type:
          type: string
          description: >-
            The media type of the link. If omitted, it is implicitly
            `application/json`.
          readOnly: true
      required:
        - href
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
    PasswordImportRequestData:
      type: object
      properties:
        action:
          type: object
          description: >-
            This object specifies the default action Okta is set to take. Okta
            takes this action if your external service sends an empty HTTP 204
            response. You can override the default action by returning a
            commands object in your response specifying the action to take.
          properties:
            credential:
              description: >-
                The status of the user credential, either `UNVERIFIED` or
                `VERIFIED`
              default: UNVERIFIED
              type: string
        context:
          type: object
          properties:
            request:
              $ref: '#/components/schemas/InlineHookRequestObject'
            credential:
              type: object
              properties:
                username:
                  description: >-
                    The `username` that the user supplied when attempting to
                    sign in to Okta.
                  type: string
                password:
                  description: >-
                    The `password` that the user supplied when attempting to
                    sign in to Okta.
                  type: string
    TelephonyRequestData:
      type: object
      properties:
        context:
          type: object
          properties:
            request:
              $ref: '#/components/schemas/InlineHookRequestObject'
        messageProfile:
          type: object
          description: >-
            Message profile specifies information about the telephony
            (sms/voice) message to be sent to the Okta user
          properties:
            msgTemplate:
              description: Default or Okta org configured sms or voice message template
              type: string
            phoneNumber:
              description: The Okta's user's phone number
              type: string
            otpExpires:
              description: The time when OTP expires
              type: string
            deliveryChannel:
              description: The channel for OTP delivery - SMS or voice
              type: string
            otpCode:
              description: The OTP code requested by the Okta user
              type: string
            locale:
              description: The locale associated with the Okta user
              type: string
        userProfile:
          type: object
          description: User profile specifies information about the Okta user
          properties:
            firstName:
              description: The user's first name
              type: string
            lastName:
              description: The user's last name
              type: string
            login:
              description: The user's Okta login
              type: string
            userId:
              description: The user's Okta user ID
              type: string
    BaseContext:
      description: >-
        This object contains a number of sub-objects, each of which provide some
        type of contextual information.
      type: object
      properties:
        request:
          $ref: '#/components/schemas/InlineHookRequestObject'
        session:
          description: Details of the user session
          type: object
          properties:
            id:
              description: The unique identifier for the user's session
              type: string
              example: 102LN9Bnuc4S_ewfc9BYwageA
            userId:
              description: The unique identifier for the user
              type: string
              example: 00uq8tMo3zV0OfJON0g3
            login:
              description: >-
                The username used to identify the user. This is often the user's
                email address.
              type: string
              example: user@example.com
            createdAt:
              description: Timestamp of when the session was created
              type: string
              format: date-time
              example: '2019-03-28T16:45:55.000Z'
            expiresAt:
              description: Timestamp of when the session expires
              type: string
              format: date-time
              example: '2019-03-28T21:15:23.000Z'
            status:
              description: Represents the current status of the user's session
              type: string
              example: ACTIVE
            lastPasswordVerification:
              description: Timestamp of when the user was last authenticated
              type: string
              format: date-time
              example: '2019-03-28T16:45:55.000Z'
            amr:
              description: The authentication method reference
              type: array
              items:
                type: string
                example:
                  - PASSWORD
            idp:
              $ref: '#/components/schemas/SessionIdentityProvider'
            mfaActive:
              description: Describes whether multifactor authentication was enabled
              type: boolean
              example: false
        user:
          description: >-
            Identifies the Okta user that the token was generated to
            authenticate and provides details of their Okta user profile
          type: object
          properties:
            id:
              description: The unique identifier for the user
              type: string
              example: 00uq8tMo3zV0OfJON0g3
            passwordChanged:
              description: The timestamp when the user's password was last updated
              type: string
              format: date-time
              example: '2018-09-11T23:19:12.000Z'
            profile:
              type: object
              properties:
                login:
                  description: >-
                    The username used to identify the user. This is often the
                    user's email address.
                  type: string
                  example: user@example.com
                firstName:
                  description: The first name of the user
                  type: string
                  example: John
                lastName:
                  description: The last name of the user
                  type: string
                  example: Smith
                locale:
                  description: >-
                    The user's default location for purposes of localizing items
                    such as currency, date time format, numerical
                    representations, and so on.

                    A locale value is a concatenation of the [ISO
                    639-1](https://en.wikipedia.org/wiki/List_of_ISO_639_language_codes)
                    two-letter language code, an underscore, and the [ISO
                    3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
                    two-letter country code. For example, `en_US` specifies the
                    language English and country US. This value is `en_US` by
                    default.
                  type: string
                  example: en_US
                timeZone:
                  description: The user's timezone
                  type: string
                  example: America/Los_Angeles
            _links:
              description: >-
                Specifies link relations (see [Web
                Linking](https://www.rfc-editor.org/rfc/rfc8288)) available for
                the current status of the user. These links are used to discover
                what groups the user is a part of and what factors they have
                enrolled.
              type: object
              properties:
                groups:
                  description: URL to retrieve the individual user's group memberships
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
                factors:
                  description: URL to retrieve individual user's factor enrollments
                  allOf:
                    - $ref: '#/components/schemas/HrefObject'
    TokenProtocolRequest:
      description: Details of the token request
      type: object
      properties:
        client_id:
          description: The ID of the client associated with the token
          type: string
        grant_type:
          $ref: '#/components/schemas/GrantType'
        redirect_uri:
          description: Specifies the callback location where the authorization was sent
          type: string
          format: uri
        response_mode:
          description: The authorization response mode
          type: string
          enum:
            - form_post
            - fragment
            - okta_post_message
            - query
        response_type:
          description: The authorization response type
          type: string
          enum:
            - code
            - id_token
            - token
            - none
        scope:
          description: The scopes requested
          type: string
        state:
          type: string
    RefreshToken:
      description: The refresh token
      type: object
      properties:
        jti:
          description: The refresh token ID
          type: string
    BaseToken:
      type: object
      properties:
        claims:
          description: >-
            Claims included in the token. Consists of name-value pairs for each
            included claim. For descriptions of the claims that you can include,
            see the Okta [OpenID Connect and OAuth 2.0 API
            reference](/openapi/okta-oauth/guides/overview/#claims).
          type: object
        token:
          description: The token
          type: object
          properties:
            lifetime:
              description: Lifetime of the token
              type: object
              properties:
                expiration:
                  description: Time in seconds until the token expires
                  type: integer
    UserImportRequestData:
      type: object
      properties:
        action:
          type: object
          description: The object that specifies the default action Okta is set to take
          properties:
            result:
              description: >-
                The current default action that results when Okta imports a
                user. The two possible values are `CREATE_USER` and `LINK_USER`.
                You 

                can change the action that is taken by means of the commands
                object you return.
              type: string
              enum:
                - CREATE_USER
                - LINK_USER
              x-enumDescriptions:
                CREATE_USER: A new Okta user profile is created for the user
                LINK_USER: >-
                  The user is treated as a match for the existing Okta user
                  identified by the value of `data.user.id`
        appUser:
          type: object
          description: The app user profile being imported
          properties:
            profile:
              type: object
              description: >-
                Provides the name-value pairs of the attributes contained in the
                app user profile of the user who is being imported. You can
                change 

                the values of attributes in the user's app profile by means of
                the `commands` object you return. If you change attributes in
                the app 

                profile, they then flow through to the Okta user profile, based
                on matching and mapping rules.
              additionalProperties:
                type: string
        context:
          type: object
          properties:
            conflicts:
              description: An array of user profile attributes that are in conflict
              type: array
              items:
                additionalProperties: true
                type: string
            application:
              type: object
              description: Details of the app from which the user is being imported
              properties:
                name:
                  type: string
                  description: The app name
                id:
                  type: string
                  description: The app ID
                label:
                  type: string
                  description: The user-defined display name for the app
                status:
                  type: string
                  description: The status of the app
                  enum:
                    - ACTIVE
                    - INACTIVE
            job:
              type: object
              description: The details of the running import job
              properties:
                id:
                  type: string
                  description: The ID number of the import job
                type:
                  type: string
                  description: The type of import job
            matches:
              type: array
              description: >-
                The list of Okta users currently matched to the app user based
                on import matching. There can be more than one match.
              items:
                additionalProperties: true
                type: string
            policy:
              type: array
              description: The list of any policies that apply to the import matching
              items:
                additionalProperties: true
                type: string
        user:
          type: object
          description: >-
            Provides information on the Okta user profile currently set to be
            used for the user who is being imported, based on the matching 

            rules and attribute mappings that were applied.
          properties:
            profile:
              description: >-
                The `data.user.profile` contains the name-value pairs of the
                attributes in the user profile. If the user has been matched to
                an existing

                Okta user, a `data.user.id` object is included, containing the
                unique identifier of the Okta user profile.


                You can change the values of the attributes by means of the
                `commands` object you return.
              type: object
              additionalProperties:
                type: string
    HrefObjectSelfLink:
      allOf:
        - $ref: '#/components/schemas/HrefObject'
        - description: Link to the resource (self)
    HrefHints:
      description: Describes allowed HTTP verbs for the `href`
      type: object
      properties:
        allow:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethod'
    InlineHookRequestObject:
      description: The API request that triggered the inline hook
      type: object
      properties:
        id:
          type: string
          description: The unique identifier that Okta assigned to the API request
        ipAddress:
          type: string
          description: The IP address of the client that made the API request
        method:
          type: string
          description: The HTTP request method of the API request
        url:
          type: object
          description: The URL of the API endpoint
          properties:
            value:
              type: string
              description: The URL value of the API endpoint
    SessionIdentityProvider:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: >-
            Identity Provider ID. If the `type` is `OKTA`, then the `id` is the
            org ID.
        type:
          $ref: '#/components/schemas/SessionIdentityProviderType'
    GrantType:
      description: >-
        Determines the mechanism Okta uses to authorize the creation of the
        tokens.
      type: string
      enum:
        - authorization_code
        - client_credentials
        - implicit
        - interaction_code
        - password
        - refresh_token
        - urn:ietf:params:oauth:grant-type:device_code
        - urn:ietf:params:oauth:grant-type:jwt-bearer
        - urn:ietf:params:oauth:grant-type:saml2-bearer
        - urn:ietf:params:oauth:grant-type:token-exchange
        - urn:openid:params:grant-type:ciba
        - urn:okta:params:oauth:grant-type:otp
        - urn:okta:params:oauth:grant-type:oob
        - http://auth0.com/oauth/grant-type/mfa-otp
        - http://auth0.com/oauth/grant-type/mfa-oob
    HttpMethod:
      type: string
      enum:
        - DELETE
        - GET
        - POST
        - PUT
    SessionIdentityProviderType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - FEDERATION
        - LDAP
        - OKTA
        - SOCIAL
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
    ErrorResourceNotFound404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            ResourceNotFound:
              $ref: '#/components/examples/ErrorResourceNotFound'
  parameters:
    inlineHookType:
      name: type
      description: One of the supported inline hook types
      in: query
      schema:
        type: string
        enum:
          - com.okta.import.transform
          - com.okta.oauth2.tokens.transform
          - com.okta.saml.tokens.transform
          - com.okta.user.credential.password.import
          - com.okta.user.pre-registration
          - com.okta.telephony.provider
    pathInlineHookId:
      name: inlineHookId
      description: '`id` of the inline hook'
      in: path
      required: true
      schema:
        type: string
        example: Y7Rzrd4g4xj6WdKzrBHH
  examples:
    InlineHooktMgmtListAllexample:
      summary: List all inline hooks response
      value:
        - id: calb7gacafgwgE7hc5e4
          status: ACTIVE
          name: Token hook with HTTP authentication
          type: com.okta.oauth2.tokens.transform
          version: 1.0.0
          channel:
            type: HTTP
            version: 1.0.0
            config:
              uri: https://example.com/tokenHook
              headers: []
              method: POST
              authScheme:
                type: header
                key: authorization
          created: '2024-08-22T21:01:09.000Z'
          lastUpdated: '2024-09-05T16:06:09.000Z'
          _links:
            activate:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4/lifecycle/activate
              hints:
                allow:
                  - POST
            self:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
            delete:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
              hints:
                allow:
                  - DELETE
        - id: calj4fythrqj5Bxol5e5
          status: ACTIVE
          name: Registration hook with OAuth 2.0 Client Secret Post
          type: com.okta.user.pre-registration
          version: 1.0.0
          channel:
            type: OAUTH
            version: 1.0.0
            config:
              uri: https://example.com/registrationHook
              headers: []
              method: POST
              authScheme: null
              clientId: 0oaj43vkrq7wKxZSI5e6
              tokenUrl: https:/subdomain.okta.com/oauth2/default/v1/token"
              authType: client_secret_post
              scope: null
          created: '2024-08-22T21:01:09.000Z'
          lastUpdated: '2024-09-05T16:06:09.000Z'
          _links:
            self:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5
            execute:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5/execute
              hints:
                allow:
                  - POST
            deactivate:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5/lifecycle/activate
              hints:
                allow:
                  - POST
        - id: calj4fythrqj5Bxol4ai6
          status: ACTIVE
          name: Token Hook with OAuth 2.0 Private Key JWT
          type: com.okta.oauth2.tokens.transform
          version: 1.0.0
          channel:
            type: OAUTH
            version: 1.0.0
            config:
              uri: https://example.com/tokenHook
              headers: []
              method: POST
              authScheme: null
              clientId: 0oaj43vkrq7wKxZSI5d7
              tokenUrl: https:/subdomain.okta.com/oauth2/default/v1/token"
              authType: private_key_jwt
              scope: null
              hookKeyId: HKYj4ft1a3fjmwZg05d6
            created: '2024-08-22T21:01:09.000Z'
          lastUpdated: '2024-09-05T16:06:09.000Z'
          _links:
            self:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6
            execute:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6/execute
              hints:
                allow:
                  - POST
            deactivate:
              href: >-
                https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6/lifecycle/activate
              hints:
                allow:
                  - POST
    InlineHookMgmtCreateHTTPRequest:
      summary: Create an inline hook with HTTP authentication
      value:
        name: Token hook with HTTP authentication
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers:
              - key: x-any-key
                value: my-header-value
            method: POST
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    InlineHookMgmtCreateOAuthClientSecretRequest:
      summary: Create an inline hook with OAuth 2.0 Client Secret
      value:
        name: Registration hook with OAuth 2.0 Client Secret Post
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: OAUTH
          version: 1.0.0
          config:
            authType: client_secret_post
            clientId: 0oaj43vkrq7wKxZSI5e6
            clientSecret: b-iATvTu7sIocvhWx95S9kF.....vfZhM6q6khSaojLBejF21cUn5bPm9abi
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            tokenUrl: https://example.okta.com/oauth2/default/v1/token
    InlineHookMgmtCreateOAuthPrivateKeyRequest:
      summary: Create an inline hook with OAuth 2.0 Private Key
      value:
        name: Token hook with OAuth 2.0 Private Key authentication
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: OAUTH
          version: 1.0.0
          config:
            authType: private_key_jwt
            clientId: 0oaj43vkrq7wKxZSI5e6
            hookKeyId: HKYj4ft1a3fjmwZg05e6
            uri: https://example.com/tokenHook
            headers:
              - key: x-any-key
                value: my-header-value
            method: POST
            tokenUrl: https://example.okta.com/oauth2/default/v1/token
    InlineHookMgmtCreateHTTPResponse:
      summary: Inline hook with HTTP authentication response
      value:
        id: calb7gacafgwgE7hc5e4
        status: ACTIVE
        name: Token hook with HTTP authentication
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            authScheme:
              type: header
              key: authorization
        created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          activate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
          delete:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
            hints:
              allow:
                - DELETE
    InlineHookMgmtCreateOAuthClientSecretResponse:
      summary: Inline hook with OAuth 2.0 Client Secret response
      value:
        id: calj4fythrqj5Bxol5e5
        status: ACTIVE
        name: Registration hook with OAuth 2.0 Client Secret Post
        type: com.okta.user.pre-registration
        version: 1.0.0
        channel:
          type: OAUTH
          version: 1.0.0
          config:
            uri: https://example.com/registrationHook
            headers: []
            method: POST
            authScheme: null
            clientId: 0oaj43vkrq7wKxZSI5e6
            tokenUrl: https:/subdomain.okta.com/oauth2/default/v1/token"
            authType: client_secret_post
            scope: null
        created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          self:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5
          execute:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5/execute
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5/lifecycle/activate
            hints:
              allow:
                - POST
    InlineHookMgmtCreateOAuthPrivateKeyResponse:
      summary: Inline hook with OAuth 2.0 Private Key response
      value:
        id: calj4fythrqj5Bxol4ai6
        status: ACTIVE
        name: Token Hook with OAuth 2.0 Private Key JWT
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: OAUTH
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            authScheme: null
            clientId: 0oaj43vkrq7wKxZSI5d7
            tokenUrl: https:/subdomain.okta.com/oauth2/default/v1/token"
            authType: private_key_jwt
            scope: null
            hookKeyId: HKYj4ft1a3fjmwZg05d6
          created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          self:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6
          execute:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6/execute
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6/lifecycle/activate
            hints:
              allow:
                - POST
    InlineHookMgmtHTTPexample:
      summary: An inline hook with HTTP authentication
      value:
        id: calb7gacafgwgE7hc5e4
        status: ACTIVE
        name: Token hook with HTTP authentication
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            authScheme:
              type: header
              key: authorization
        created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          activate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
          delete:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
            hints:
              allow:
                - DELETE
    InlineHookMgmtOAuthCSPexample:
      summary: An inline hook example with OAuth 2.0 Client Secret Post
      value:
        id: calj4fythrqj5Bxol5e5
        status: ACTIVE
        name: Registration hook with OAuth 2.0 Client Secret Post
        type: com.okta.user.pre-registration
        version: 1.0.0
        channel:
          type: OAUTH
          version: 1.0.0
          config:
            uri: https://example.com/registrationHook
            headers: []
            method: POST
            authScheme: null
            clientId: 0oaj43vkrq7wKxZSI5e6
            tokenUrl: https:/subdomain.okta.com/oauth2/default/v1/token"
            authType: client_secret_post
            scope: null
        created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          self:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5
          execute:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5/execute
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol5e5/lifecycle/activate
            hints:
              allow:
                - POST
    InlineHookMgmtOauthPKJexample:
      summary: An inline hook example with OAuth 2.0 Private Key JWT
      value:
        id: calj4fythrqj5Bxol4ai6
        status: ACTIVE
        name: Token Hook with OAuth 2.0 Private Key JWT
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: OAUTH
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            authScheme: null
            clientId: 0oaj43vkrq7wKxZSI5d7
            tokenUrl: https:/subdomain.okta.com/oauth2/default/v1/token"
            authType: private_key_jwt
            scope: null
            hookKeyId: HKYj4ft1a3fjmwZg05d6
          created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          self:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6
          execute:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6/execute
            hints:
              allow:
                - POST
          deactivate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calj4fythrqj5Bxol4ai6/lifecycle/activate
            hints:
              allow:
                - POST
    InlineHookMgmtPutHTTPRequest:
      summary: Update an inline hook name
      value:
        name: New name token hook with HTTP authentication
        version: 1.0.0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers:
              - key: x-any-key
                value: my-header-value
            method: POST
            authScheme:
              type: HEADER
              key: Authorization
              value: my-shared-secret
    InlineHookMgmtPutResponse:
      value:
        id: calb7gacafgwgE7hc5e4
        status: ACTIVE
        name: New name token hook with HTTP authentication
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            authScheme:
              type: header
              key: authorization
        created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          activate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
          delete:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
            hints:
              allow:
                - DELETE
        description: Inline hook response with a new name
    PasswordImportPayloadExample:
      summary: An example password import inline hook request body
      value:
        eventId: 3o9jBzq1SmOGmmsDsqyyeQ
        eventTime: '2020-01-17T21:23:56.000Z'
        eventType: com.okta.user.credential.password.import
        eventTypeVersion: '1.0'
        contentType: application/json
        cloudEventVersion: '0.1'
        source: https://${yourOktaDomain}/api/v1/inlineHooks/cbl2ad6phv9fsPLcF0g7
        data:
          context:
            request:
              id: XiIl6wn7005Rr@fjYqeC7CCDBxw
              method: POST
              url:
                value: /idp/idx/challenge/answer
              ipAddress: 66.124.153.138
            credential:
              username: isaac.brock@example.com
              password: Okta
          action:
            credential: UNVERIFIED
    TelephonyPayloadExample:
      summary: An example telephony inline hook request body
      value:
        eventId: uS5871kJThSsU8qlA1LTcg
        eventTime: '2020-01-17T21:23:56.000Z'
        eventType: com.okta.telephony.provider
        eventTypeVersion: '1.0'
        contentType: application/json
        cloudEventVersion: '0.1'
        source: https://${yourOktaDomain}/api/v1/inlineHooks/cbl2ad6phv9fsPLcF0g7
        data:
          context:
            request:
              id: reqRgSk8IBBRhuo0YdlEDTmUw
              method: POST
              url:
                value: >-
                  /api/internal/v1/inlineHooks/com.okta.telephony.provider/generatePreview
              ipAddress: 127.0.0.1
          userProfile:
            firstName: test
            lastName: user
            login: test.user@okta.com
            userId: 00uyxxSknGtK8022w0g3
          messageProfile:
            msgTemplate: (HOOK)Your code is 11111
            phoneNumber: 9876543210
            otpExpires: '2022-01-28T21:48:34.321Z'
            deliveryChannel: SMS
            otpCode: 11111
            locale: EN-US
    ProfileEnrollmentRequest:
      summary: >-
        An example registration hook profile enrollment (SSR) inline hook
        request body
      value:
        eventId: 04Dmt8BcT_aEgM
        eventTime: '2022-04-25T17:35:27.000Z'
        eventType: com.okta.user.pre-registration
        eventTypeVersion: 1
        contentType: application/json
        cloudEventVersion: 0.1
        source: regt4qeBKU29vSoPz0g3
        requestType: self.service.registration
        data:
          context:
            request:
              method: POST
              ipAddress: 127.0.0.1
              id: 123testId456
              url:
                value: /idp/idx/enroll/new
          userProfile:
            firstName: Rosario
            lastName: Jones
            login: rosario.jones@example.com
            email: rosario.jones@example.com
          action: ALLOW
    TokenPayLoadExample:
      summary: An example token inline hook request body
      description: An example token inline hook request body
      value:
        source: https://{yourOktaDomain}/oauth2/default/v1/authorize
        eventId: 3OWo4oo-QQ-rBWfRyTmQYw
        eventTime: '2019-01-15T23:20:47.000Z'
        eventTypeVersion: '1.0'
        cloudEventVersion: '0.1'
        contentType: application/json
        eventType: com.okta.oauth2.tokens.transform
        data:
          context:
            request:
              id: reqv66CbCaCStGEFc8AdfS0ng
              method: GET
              url:
                value: >-
                  https://{yourOktaDomain}/oauth2/default/v1/authorize?scope=openid+profile+email&response_type=token+id_token&redirect_uri=https%3A%2F%2Fhttpbin.org%2Fget&state=state&nonce=asf&client_id=customClientIdNative
              ipAddress: 127.0.0.1
            protocol:
              type: OAUTH2.0
              request:
                scope: openid profile email
                state: state
                redirect_uri: https://httpbin.org/get
                response_mode: fragment
                response_type: token id_token
                client_id: customClientIdNative
              issuer:
                uri: https://{yourOktaDomain}/oauth2/default
              client:
                id: customClientIdNative
                name: Native client
                type: PUBLIC
            session:
              id: 102Qoe7t5PcRnSxr8j3I8I6pA
              userId: 00uq8tMo3zV0OfJON0g3
              login: administrator1@clouditude.net
              createdAt: '2019-01-15T23:17:09.000Z'
              expiresAt: '2019-01-16T01:20:46.000Z'
              status: ACTIVE
              lastPasswordVerification: '2019-01-15T23:17:09.000Z'
              amr:
                - PASSWORD
              idp:
                id: 00oq6kcVwvrDY2YsS0g3
                type: OKTA
              mfaActive: false
            user:
              id: 00uq8tMo3zV0OfJON0g3
              passwordChanged: '2018-09-11T23:19:12.000Z'
              profile:
                login: administrator1@clouditude.net
                firstName: Add-Min
                lastName: O'Cloudy Tud
                locale: en
                timeZone: America/Los_Angeles
              _links:
                groups:
                  href: https://{yourOktaDomain}/00uq8tMo3zV0OfJON0g3/groups
                factors:
                  href: >-
                    https://{yourOktaDomain}/api/v1/users/00uq8tMo3zV0OfJON0g3/factors
            policy:
              id: 00pq8lGaLlI8APuqY0g3
              rule:
                id: 0prq8mLKuKAmavOvq0g3
          identity:
            claims:
              sub: 00uq8tMo3zV0OfJON0g3
              name: Add-Min O'Cloudy Tud
              email: administrator1@clouditude.net
              ver: 1
              iss: https://{yourOktaDomain}/oauth2/default
              aud: customClientIdNative
              jti: ID.YxF2whJfB3Eu4ktG_7aClqtCgjDq6ab_hgpiV7-ZZn0
              amr:
                - pwd
              idp: 00oq6kcVwvrDY2YsS0g3
              nonce: asf
              preferred_username: administrator1@clouditude.net
              auth_time: 1547594229
            token:
              lifetime:
                expiration: 3600
          access:
            claims:
              ver: 1
              jti: AT.W-rrB-z-kkZQmHW0e6VS3Or...QfEN_YvoWJa46A7HAA
              iss: https://{yourOktaDomain}/oauth2/default
              aud: api://default
              cid: customClientIdNative
              uid: 00uq8tMo3zV0OfJON0g3
              sub: administrator1@clouditude.net
              firstName: Add-Min
              preferred_username: administrator1@clouditude.net
            token:
              lifetime:
                expiration: 3600
            scopes:
              openid:
                id: scpq7bW1cp6dcvrz80g3
                action: GRANT
              profile:
                id: scpq7cWJ81CIP5Qkr0g3
                action: GRANT
              email:
                id: scpq7dxsoz6LQlRj00g3
                action: GRANT
          refresh_token:
            jti: oarob4a0tckCkGcyo1d6
    SAMLPayLoadExample:
      summary: An example SAML assertion inline hook request body
      value:
        source: >-
          https://${yourOktaDomain}/app/saml20app_1/exkth8lMzFm0HZOTU0g3/sso/saml
        eventId: XMFoHCM1S4Wi_SGWzL8T9A
        eventTime: '2019-03-28T19:15:23.000Z'
        data:
          context:
            request:
              id: reqqXypjzYJRSu2j1G1imUovA
              method: GET
              url:
                value: >-
                  https://${yourOktaDomain}/app/saml20app_1/exkth8lMzFm0HZOTU0g3/sso/saml
              ipAddress: 127.0.0.1
            protocol:
              type: SAML2.0
              issuer:
                id: 0oath92zlO60urQOP0g3
                name: SAML 2.0 App
                uri: http://www.okta.com/exkth8lMzFm0HZOTU0g3
            session:
              id: 102LN9Bnuc4S_ewfc9BYwageA
              userId: 00uq8tMo3zV0OfJON0g3
              login: user@example.com
              createdAt: '2019-03-28T16:45:55.000Z'
              expiresAt: '2019-03-28T21:15:23.000Z'
              status: ACTIVE
              lastPasswordVerification: '2019-03-28T16:45:55.000Z'
              amr:
                - PASSWORD
              idp:
                id: 00oq6kcVwvrDY2YsS0g3
                type: OKTA
              mfaActive: false
            user:
              id: 00uq8tMo3zV0OfJON0g3
              passwordChanged: '2018-09-11T23:19:12.000Z'
              profile:
                login: user@example.com
                firstName: Admin
                lastName: Last
                locale: en
                timeZone: America/Los_Angeles
              _links:
                groups:
                  href: https://${yourOktaDomain}/00uq8tMo3zV0OfJON0g3/groups
                factors:
                  href: >-
                    https://${yourOktaDomain}/api/v1/users/00uq8tMo3zV0OfJON0g3/factors
          assertion:
            subject:
              nameId: user@example.com
              nameFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
              confirmation:
                method: urn:oasis:names:tc:SAML:2.0:cm:bearer
                data:
                  recipient: http://www.example.com:7070/saml/sso
            authentication:
              sessionIndex: id1553800523546.312669168
              authnContext:
                authnContextClassRef: >-
                  urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport
            conditions:
              audienceRestriction:
                - urn:example:sp
            claims:
              extPatientId:
                attributes:
                  NameFormat: urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified
                attributeValues:
                  - attributes:
                      xsi:type: xs:integer
                    value: '4321'
              array:
                attributes:
                  NameFormat: urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified
                attributeValues:
                  - attributes:
                      xsi:type: xs:string
                    value: Array 1
                  - attributes:
                      xsi:type: xs:string
                    value: Array2
                  - attributes:
                      xsi:type: xs:string
                    value: Array3
              middle:
                attributes:
                  NameFormat: urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified
                attributeValues:
                  - attributes:
                      xsi:type: xs:string
                    value: admin
              firstAndLast:
                attributes:
                  NameFormat: urn:oasis:names:tc:SAML:2.0:attrname-format:unspecified
                attributeValues:
                  - attributes:
                      xsi:type: xs:string
                    value: 7d6a50c8-4d7e-4058-9c5b-2cc98cecd294
            lifetime:
              expiration: 300
        eventTypeVersion: '1.0'
        cloudEventVersion: '0.1'
        eventType: com.okta.saml.tokens.transform
        contentType: application/json
    UserImportPayloadExample:
      summary: An example user import request body
      value:
        source: cal7eyxOsnb20oWbZ0g4
        eventId: JUGOUiYZTaKPmH6db0nDag
        eventTime: '2019-02-27T20:59:04.000Z'
        eventTypeVersion: '1.0'
        cloudEventVersion: '0.1'
        eventType: com.okta.import.transform
        contentType: application/json
        data:
          context:
            conflicts:
              - login
            application:
              name: test_app
              id: 0oa7ey7aLRuBvcYUD0g4
              label: Test App
              status: ACTIVE
            job:
              id: ij17ez2AWtMZRfCZ60g4
              type: import:users
            matches: []
            policy:
              - EMAIL
              - FIRST_AND_LAST_NAME
          action:
            result: CREATE_USER
          appUser:
            profile:
              firstName: Sally2
              lastName: Admin2
              mobilePhone: null
              accountType: PRO
              secondEmail: null
              failProvisioning: null
              failDeprovisioning: null
              externalId: user221
              groups:
                - everyone@examplee.net
                - tech@example.net
              userName: administrator2
              email: sally.admin@example.net
          user:
            profile:
              lastName: Admin2
              zipCode: null
              city: null
              secondEmail: null
              postAddress: null
              login: sally.admin@example.net
              firstName: Sally2
              primaryPhone: null
              mobilePhone: null
              streetAddress: null
              countryCode: null
              typeId: null
              state: null
              email: sally.admin@example.net
    PasswordImportVerifiedResponse:
      summary: An example password hook response for a verified user password
      value:
        commands:
          - type: com.okta.action.update
            value:
              credential: VERIFIED
    TelephonySuccessResponse:
      summary: >-
        An example telephony hook response for an external web service returning
        success
      value:
        commands:
          - type: com.okta.telephony.action
          - value:
              status: SUCCESS
              provider: VONAGE
              transactionId: SM49a8ece2822d44e4adaccd7ed268f954
              transactionMetadata: Duration=300ms
    ProfileEnrollmentResponse:
      summary: >-
        An example registration hook profile enrollment (SSR) inline hook
        response
      value:
        commands:
          - type: com.action.update
            value:
              registration: ALLOW
    TokenHookResponse:
      summary: An example token inline hook response that adds a claim
      value:
        commands:
          - type: com.okta.identity.patch
            value:
              - op: add
                path: /claims/extPatientId
                value: '1234'
          - type: com.okta.access.patch
            value:
              - op: add
                path: /claims/external_guid
                value: F0384685-F87D-474B-848D-2058AC5655A7
    SAMLHookResponseExample:
      summary: An example SAML assertion inline hook response
      value:
        commands:
          - type: com.okta.assertion.patch
            value:
              - op: replace
                path: /claims/array/attributeValues/1/value
                value: replacementValue
              - op: replace
                path: /authentication/authnContext
                value:
                  authnContextClassRef: replacementValue
              - op: add
                path: /claims/extPatientId
                value:
                  attributes:
                    NameFormat: urn:oasis:names:tc:SAML:2.0:attrname-format:basic
                  attributeValues:
                    - attributes:
                        xsi:type: xs:string
                      value: '4321'
              - op: add
                path: /authentication/sessionLifetime
                value: 300
          - type: com.okta.assertion.patch
            value:
              - op: replace
                path: /authentication/sessionIndex
                value: exampleSession
    UserImportChangeAppUserProfileExample:
      summary: >-
        An example user import inline hook response that updates an app user's
        profile
      value:
        commands:
          - type: com.okta.appUser.profile.update
            value:
              firstName: Stan
    InlineHookMgmtHTTPexampleDeactivate:
      value:
        id: calb7gacafgwgE7hc5e4
        status: INACTIVE
        name: Token hook with HTTP authentication
        type: com.okta.oauth2.tokens.transform
        version: 1.0.0
        channel:
          type: HTTP
          version: 1.0.0
          config:
            uri: https://example.com/tokenHook
            headers: []
            method: POST
            authScheme:
              type: header
              key: authorization
        created: '2024-08-22T21:01:09.000Z'
        lastUpdated: '2024-09-05T16:06:09.000Z'
        _links:
          activate:
            href: >-
              https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4/lifecycle/activate
            hints:
              allow:
                - POST
          self:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
          delete:
            href: https://subdomain.okta.com/api/v1/inlineHooks/calb7gacafgwgE7hc5e4
            hints:
              allow:
                - DELETE
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
    ErrorResourceNotFound:
      summary: Resource Not Found
      value:
        errorCode: E0000007
        errorSummary: 'Not found: {0}'
        errorLink: E0000007
        errorId: sampleMlLvGUj_YD5v16vkYWY
        errorCauses: []
  x-stackQL-resources:
    inline_hooks:
      id: okta.inlinehooks.inline_hooks
      name: inline_hooks
      title: Inline Hooks
      methods:
        list_inline_hooks:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        create_inline_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        get_inline_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks~1{inlineHookId}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_inline_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks~1{inlineHookId}/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_inline_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks~1{inlineHookId}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_inline_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks~1{inlineHookId}/delete'
          response:
            mediaType: ''
            openAPIDocKey: '204'
        execute_inline_hook:
          operation:
            $ref: '#/paths/~1api~1v1~1inlineHooks~1{inlineHookId}~1execute/post'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        activate_inline_hook:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1inlineHooks~1{inlineHookId}~1lifecycle~1activate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate_inline_hook:
          operation:
            $ref: >-
              #/paths/~1api~1v1~1inlineHooks~1{inlineHookId}~1lifecycle~1deactivate/post
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/inline_hooks/methods/list_inline_hooks
          - $ref: >-
              #/components/x-stackQL-resources/inline_hooks/methods/get_inline_hook
        insert:
          - $ref: >-
              #/components/x-stackQL-resources/inline_hooks/methods/create_inline_hook
        update:
          - $ref: >-
              #/components/x-stackQL-resources/inline_hooks/methods/update_inline_hook
        delete:
          - $ref: >-
              #/components/x-stackQL-resources/inline_hooks/methods/delete_inline_hook
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/inline_hooks/methods/replace_inline_hook
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
