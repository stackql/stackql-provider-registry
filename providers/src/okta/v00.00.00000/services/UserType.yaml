components:
  schemas:
    UserType:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
      type: object
      x-okta-crud:
      - alias: create
        arguments:
        - dest: userType
          self: true
        operationId: createUserType
      - alias: update
        arguments:
        - dest: typeId
          src: id
        - dest: userType
          self: true
        operationId: updateUserType
      - alias: read
        arguments:
        - dest: typeId
          src: id
        operationId: getUserType
      - alias: delete
        arguments:
        - dest: typeId
          src: id
        operationId: deleteUserType
      x-okta-operations:
      - alias: replaceUserType
        arguments:
        - dest: roleId
          src: id
        operationId: replaceUserType
      x-okta-tags:
      - UserType
  securitySchemes:
    api_token:
      description: SSWS {API Token}
      in: header
      name: Authorization
      type: apiKey
  x-stackQL-resources:
    user:
      id: okta.usertype.user
      methods:
        delete:
          operation:
            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/DELETE'
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/GET'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1api~1v1~1meta~1types~1user/POST'
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~1v1~1meta~1types~1user/GET'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        partialUpdate:
          operation:
            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/POST'
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~1v1~1meta~1types~1user~1{typeId}/PUT'
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: user
      title: user
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta API
  version: 2.8.0
openapi: 3.0.1
paths:
  /api/v1/meta/types/user:
    get:
      description: Fetches all User Types in your org
      operationId: listUserTypes
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserType'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
    post:
      description: Creates a new User Type. A default User Type is automatically created
        along with your org, and you may add another 9 User Types for a maximum of
        10.
      operationId: createUserType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-codegen-request-body-name: userType
  /api/v1/meta/types/user/{typeId}:
    delete:
      description: Deletes a User Type permanently. This operation is not permitted
        for the default type, nor for any User Type that has existing users
      operationId: deleteUserType
      parameters:
      - in: path
        name: typeId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - UserType
    get:
      description: Fetches a User Type by ID. The special identifier `default` may
        be used to fetch the default User Type.
      operationId: getUserType
      parameters:
      - in: path
        name: typeId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
    post:
      description: Updates an existing User Type
      operationId: updateUserType
      parameters:
      - in: path
        name: typeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-codegen-request-body-name: userType
    put:
      description: Replace an existing User Type
      operationId: replaceUserType
      parameters:
      - in: path
        name: typeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserType'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserType'
          description: Success
      security:
      - api_token: []
      tags:
      - UserType
      x-codegen-request-body-name: userType
servers:
- url: https://{subdomain}.okta.com/
  variables:
    subdomain:
      default: my-domain
