openapi: 3.0.3
info:
  title: first_party_app_settings API
  description: okta first_party_app_settings API
  version: 5.1.0
paths:
  /api/v1/first-party-app-settings/{appName}:
    get:
      summary: Retrieve the Okta application settings
      description: >-
        Retrieves the settings for an Okta app (also known as an Okta
        first-party app)
      operationId: getFirstPartyAppSettings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConsoleSettings'
              examples:
                exampleSettings:
                  $ref: '#/components/examples/AdminConsoleSettingsExample'
        '403':
          $ref: '#/components/responses/ErrorAccessDenied403'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.read
      tags:
        - OktaApplicationSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    put:
      summary: Replace the Okta application settings
      description: >-
        Replaces the settings for an Okta app (also known as an Okta first-party
        app)
      operationId: replaceFirstPartyAppSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminConsoleSettings'
            examples:
              exampleSettings:
                $ref: '#/components/examples/AdminConsoleSettingsExample'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminConsoleSettings'
              examples:
                exampleSettings:
                  $ref: '#/components/examples/AdminConsoleSettingsExample'
        '400':
          $ref: '#/components/responses/ErrorApiValidationFailed400'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Access Denied:
                  $ref: '#/components/examples/ErrorAccessDenied'
        '429':
          $ref: '#/components/responses/ErrorTooManyRequests429'
      security:
        - apiToken: []
        - oauth2:
            - okta.apps.manage
      tags:
        - OktaApplicationSettings
      x-okta-lifecycle:
        lifecycle: GA
        isGenerallyAvailable: true
    parameters:
      - $ref: '#/components/parameters/pathFirstPartyAppName'
components:
  schemas:
    AdminConsoleSettings:
      title: Okta Admin Console Settings
      description: Settings specific to the Okta Admin Console
      type: object
      properties:
        sessionIdleTimeoutMinutes:
          description: >-
            The maximum idle time before the Okta Admin Console session expires.
            Must be no more than 12 hours.
          type: integer
          minimum: 5
          maximum: 720
          default: 15
        sessionMaxLifetimeMinutes:
          description: >-
            The absolute maximum session lifetime of the Okta Admin Console.
            Must be no more than 7 days.
          type: integer
          minimum: 5
          maximum: 10080
          default: 720
    Error:
      title: Error
      type: object
      properties:
        errorCauses:
          type: array
          items:
            $ref: '#/components/schemas/ErrorCause'
        errorCode:
          type: string
          description: An Okta code for this type of error
        errorId:
          type: string
          description: >-
            A unique identifier for this error. This can be used by Okta Support
            to help with troubleshooting.
        errorLink:
          type: string
          description: An Okta code for this type of error
        errorSummary:
          type: string
          description: >-
            A short description of what caused this error. Sometimes this
            contains dynamically-generated information about your specific
            error.
    ErrorCause:
      type: object
      properties:
        errorSummary:
          type: string
  responses:
    ErrorAccessDenied403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            AccessDenied:
              $ref: '#/components/examples/ErrorAccessDenied'
    ErrorTooManyRequests429:
      description: Too Many Requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            TooManyRequests:
              $ref: '#/components/examples/ErrorTooManyRequests'
    ErrorApiValidationFailed400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            APIValidationFailed:
              $ref: '#/components/examples/ErrorApiValidationFailed'
  parameters:
    pathFirstPartyAppName:
      name: appName
      description: |
        The key name for the Okta app.<br>
        Supported apps:
          * Okta Admin Console (`admin-console`)
      in: path
      required: true
      schema:
        type: string
        example: admin-console
  examples:
    AdminConsoleSettingsExample:
      summary: Default Okta Admin Console settings
      value:
        sessionMaxLifetimeMinutes: 720
        sessionIdleTimeoutMinutes: 15
    ErrorAccessDenied:
      summary: Access Denied
      value:
        errorCode: E0000006
        errorSummary: You do not have permission to perform the requested action
        errorLink: E0000006
        errorId: sampleNUSD_8fdkFd8fs8SDBK
        errorCauses: []
    ErrorTooManyRequests:
      summary: Too Many Requests
      value:
        errorCode: E0000047
        errorSummary: API call exceeded rate limit due to too many requests.
        errorLink: E0000047
        errorId: sampleQPivGUj_ND5v78vbYWW
        errorCauses: []
    ErrorApiValidationFailed:
      summary: API Validation Failed
      value:
        errorCode: E0000001
        errorSummary: 'Api validation failed: {0}'
        errorLink: E0000001
        errorId: sampleiCF-8D5rLW6myqiPItW
        errorCauses: []
  x-stackQL-resources:
    first_party_app_settings:
      id: okta.first_party_app_settings.first_party_app_settings
      name: first_party_app_settings
      title: First Party App Settings
      methods:
        get_first_party_app_settings:
          operation:
            $ref: '#/paths/~1api~1v1~1first-party-app-settings~1{appName}/get'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        replace_first_party_app_settings:
          operation:
            $ref: '#/paths/~1api~1v1~1first-party-app-settings~1{appName}/put'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        select:
          - $ref: >-
              #/components/x-stackQL-resources/first_party_app_settings/methods/get_first_party_app_settings
        insert: []
        update: []
        delete: []
        replace:
          - $ref: >-
              #/components/x-stackQL-resources/first_party_app_settings/methods/replace_first_party_app_settings
servers:
  - url: https://{subdomain}.okta.com/
    variables:
      subdomain:
        default: my-org
        description: >-
          The domain of your organization. This can be a provided subdomain of
          an official okta domain (okta.com, oktapreview.com, etc) or one of
          your configured custom domains.
