components:
  schemas:
    DNSRecord:
      properties:
        expiration:
          type: string
        fqdn:
          type: string
        recordType:
          $ref: '#/components/schemas/DNSRecordType'
        values:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Domain
    DNSRecordType:
      enum:
      - TXT
      - CNAME
      type: string
      x-okta-tags:
      - Domain
    Domain:
      properties:
        certificateSourceType:
          $ref: '#/components/schemas/DomainCertificateSourceType'
        dnsRecords:
          items:
            $ref: '#/components/schemas/DNSRecord'
          type: array
        domain:
          type: string
        id:
          readOnly: true
          type: string
        publicCertificate:
          $ref: '#/components/schemas/DomainCertificateMetadata'
        validationStatus:
          $ref: '#/components/schemas/DomainValidationStatus'
      type: object
      x-okta-tags:
      - Domain
    DomainCertificate:
      properties:
        certificate:
          type: string
        certificateChain:
          type: string
        privateKey:
          type: string
        type:
          $ref: '#/components/schemas/DomainCertificateType'
      type: object
      x-okta-operations:
      - alias: createCertificate
        arguments:
        - dest: certificate
          self: true
        operationId: createCertificate
      x-okta-tags:
      - Domain
    DomainCertificateMetadata:
      properties:
        expiration:
          type: string
        fingerprint:
          type: string
        subject:
          type: string
      type: object
      x-okta-tags:
      - Domain
    DomainCertificateSourceType:
      enum:
      - MANUAL
      type: string
      x-okta-tags:
      - Domain
    DomainCertificateType:
      enum:
      - PEM
      type: string
      x-okta-tags:
      - Domain
    DomainListResponse:
      properties:
        domains:
          items:
            $ref: '#/components/schemas/Domain'
          type: array
      type: object
      x-okta-tags:
      - Domain
    DomainValidationStatus:
      enum:
      - NOT_STARTED
      - IN_PROGRESS
      - VERIFIED
      - COMPLETED
      type: string
      x-okta-tags:
      - Domain
  securitySchemes:
    api_token:
      description: SSWS {API Token}
      in: header
      name: Authorization
      type: apiKey
  x-stackQL-resources:
    certificates:
      id: okta.domain.certificates
      methods:
        insert:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/domains/{domainId}/certificate
          request:
            mediaType: application/json
          response:
            openAPIDocKey: '204'
      name: certificates
      title: certificates
    domains:
      id: okta.domain.domains
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/domains/{domainId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/domains/{domainId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/domains
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/domains
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/domains/{domainId}/verify
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: domains
      title: domains
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta API
  version: 2.8.0
openapi: 3.0.1
paths:
  /api/v1/domains:
    get:
      description: List all verified custom Domains for the org.
      operationId: listDomains
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResponse'
          description: Success
      security:
      - api_token: []
      summary: List Domains
      tags:
      - Domain
    post:
      description: Creates your domain.
      operationId: createDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Success
      security:
      - api_token: []
      summary: Create Domain
      tags:
      - Domain
      x-codegen-request-body-name: domain
  /api/v1/domains/{domainId}:
    delete:
      description: Deletes a Domain by `id`.
      operationId: deleteDomain
      parameters:
      - in: path
        name: domainId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Delete Domain
      tags:
      - Domain
    get:
      description: Fetches a Domain by `id`.
      operationId: getDomain
      parameters:
      - in: path
        name: domainId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Success
      security:
      - api_token: []
      summary: Get Domain
      tags:
      - Domain
  /api/v1/domains/{domainId}/certificate:
    put:
      description: Creates the Certificate for the Domain.
      operationId: createCertificate
      parameters:
      - in: path
        name: domainId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertificate'
        required: true
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Create Certificate
      tags:
      - Domain
      x-codegen-request-body-name: certificate
  /api/v1/domains/{domainId}/verify:
    post:
      description: Verifies the Domain by `id`.
      operationId: verifyDomain
      parameters:
      - in: path
        name: domainId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: Success
      security:
      - api_token: []
      summary: Verify Domain
      tags:
      - Domain
servers:
- url: https://{subdomain}.okta.com/
  variables:
    subdomain:
      default: my-domain
