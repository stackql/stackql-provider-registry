components:
  schemas:
    AppAndInstanceConditionEvaluatorAppOrInstance:
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        type:
          enum:
          - APP_TYPE
          - APP
          type: string
      type: object
      x-okta-tags:
      - Policy
    AppAndInstancePolicyRuleCondition:
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
        include:
          items:
            $ref: '#/components/schemas/AppAndInstanceConditionEvaluatorAppOrInstance'
          type: array
      type: object
      x-okta-tags:
      - Policy
    AppInstancePolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    BeforeScheduledActionPolicyRuleCondition:
      properties:
        duration:
          $ref: '#/components/schemas/Duration'
        lifecycleAction:
          $ref: '#/components/schemas/ScheduledUserLifecycleAction'
      type: object
      x-okta-tags:
      - Policy
    ClientPolicyCondition:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    ContextPolicyRuleCondition:
      properties:
        expression:
          type: string
      type: object
      x-okta-tags:
      - Policy
    Csr:
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        csr:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        kty:
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Application
    CsrMetadata:
      properties:
        subject:
          $ref: '#/components/schemas/CsrMetadataSubject'
        subjectAltNames:
          $ref: '#/components/schemas/CsrMetadataSubjectAltNames'
      type: object
      x-okta-tags:
      - Application
    CsrMetadataSubject:
      properties:
        commonName:
          type: string
        countryName:
          type: string
        localityName:
          type: string
        organizationName:
          type: string
        organizationalUnitName:
          type: string
        stateOrProvinceName:
          type: string
      type: object
      x-okta-tags:
      - Application
    CsrMetadataSubjectAltNames:
      properties:
        dnsNames:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    DevicePolicyRuleCondition:
      properties:
        migrated:
          type: boolean
        platform:
          $ref: '#/components/schemas/DevicePolicyRuleConditionPlatform'
        rooted:
          type: boolean
        trustLevel:
          enum:
          - ANY
          - TRUSTED
          type: string
      type: object
      x-okta-tags:
      - Policy
    DevicePolicyRuleConditionPlatform:
      properties:
        supportedMDMFrameworks:
          items:
            enum:
            - AFW
            - SAFE
            - NATIVE
            type: string
          type: array
        types:
          items:
            enum:
            - IOS
            - ANDROID
            - OSX
            - WINDOWS
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    Duration:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    GrantTypePolicyRuleCondition:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    GroupCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    GroupPolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    IdentityProvider:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        issuerMode:
          enum:
          - ORG_URL
          - CUSTOM_URL
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        policy:
          $ref: '#/components/schemas/IdentityProviderPolicy'
        protocol:
          $ref: '#/components/schemas/Protocol'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        type:
          enum:
          - SAML2
          - GOOGLE
          - FACEBOOK
          - LINKEDIN
          - MICROSOFT
          - OIDC
          - OKTA
          - IWA
          - AgentlessDSSO
          - X509
          type: string
      type: object
      x-okta-crud:
      - alias: create
        arguments:
        - dest: idpTrust
          self: true
        operationId: createIdentityProvider
      - alias: read
        arguments: []
        operationId: getIdentityProvider
      - alias: update
        arguments:
        - dest: idpId
          src: id
        - dest: idpTrust
          self: true
        operationId: updateIdentityProvider
      - alias: delete
        arguments:
        - dest: idpId
          src: id
        operationId: deleteIdentityProvider
      x-okta-operations:
      - alias: listSigningCsrs
        arguments:
        - dest: idpId
          src: id
        operationId: listCsrsForIdentityProvider
      - alias: generateCsr
        arguments:
        - dest: idpId
          src: id
        operationId: generateCsrForIdentityProvider
      - alias: deleteSigningCsr
        arguments:
        - dest: idpId
          src: id
        operationId: revokeCsrForIdentityProvider
      - alias: getSigningCsr
        arguments:
        - dest: idpId
          src: id
        operationId: getCsrForIdentityProvider
      - alias: listSigningKeys
        arguments:
        - dest: idpId
          src: id
        operationId: listIdentityProviderSigningKeys
      - alias: generateSigningKey
        arguments:
        - dest: idpId
          src: id
        operationId: generateIdentityProviderSigningKey
      - alias: getSigningKey
        arguments:
        - dest: idpId
          src: id
        operationId: getIdentityProviderSigningKey
      - alias: cloneKey
        arguments:
        - dest: idpId
          src: id
        operationId: cloneIdentityProviderKey
      - alias: activate
        arguments:
        - dest: idpId
          src: id
        operationId: activateIdentityProvider
      - alias: deactivate
        arguments:
        - dest: idpId
          src: id
        operationId: deactivateIdentityProvider
      - alias: listUsers
        arguments:
        - dest: idpId
          src: id
        operationId: listIdentityProviderApplicationUsers
      - alias: unlinkUser
        arguments:
        - dest: idpId
          src: id
        operationId: unlinkUserFromIdentityProvider
      - alias: getUser
        arguments:
        - dest: idpId
          src: id
        operationId: getIdentityProviderApplicationUser
      - alias: linkUser
        arguments:
        - dest: idpId
          src: id
        operationId: linkUserToIdentityProvider
      - alias: listSocialAuthTokens
        arguments:
        - dest: idpId
          src: id
        operationId: listSocialAuthTokens
      x-okta-tags:
      - IdentityProvider
    IdentityProviderApplicationUser:
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          type: string
        externalId:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentials:
      properties:
        client:
          $ref: '#/components/schemas/IdentityProviderCredentialsClient'
        signing:
          $ref: '#/components/schemas/IdentityProviderCredentialsSigning'
        trust:
          $ref: '#/components/schemas/IdentityProviderCredentialsTrust'
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentialsClient:
      properties:
        client_id:
          type: string
        client_secret:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentialsSigning:
      properties:
        kid:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderCredentialsTrust:
      properties:
        audience:
          type: string
        issuer:
          type: string
        kid:
          type: string
        revocation:
          enum:
          - CRL
          - DELTA_CRL
          - OCSP
          type: string
        revocationCacheLifetime:
          type: integer
      type: object
      x-okta-tags:
      - IdentityProvider
    IdentityProviderPolicy:
      properties:
        accountLink:
          $ref: '#/components/schemas/PolicyAccountLink'
        maxClockSkew:
          type: integer
        provisioning:
          $ref: '#/components/schemas/Provisioning'
        subject:
          $ref: '#/components/schemas/PolicySubject'
      type: object
      x-okta-parent: '#/components/schemas/Policy'
      x-okta-tags:
      - Policy
    IdentityProviderPolicyRuleCondition:
      properties:
        idpIds:
          items:
            type: string
          type: array
        provider:
          enum:
          - ANY
          - OKTA
          - SPECIFIC_IDP
          type: string
      type: object
      x-okta-tags:
      - Policy
    InactivityPolicyRuleCondition:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    JsonWebKey:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        alg:
          type: string
        created:
          format: date-time
          type: string
        e:
          type: string
        expiresAt:
          format: date-time
          type: string
        key_ops:
          items:
            type: string
          type: array
        kid:
          type: string
        kty:
          type: string
        lastUpdated:
          format: date-time
          type: string
        n:
          type: string
        status:
          type: string
        use:
          type: string
        x5c:
          items:
            type: string
          type: array
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
      type: object
      x-okta-tags:
      - Application
    LifecycleExpirationPolicyRuleCondition:
      properties:
        lifecycleStatus:
          type: string
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    MDMEnrollmentPolicyRuleCondition:
      properties:
        blockNonSafeAndroid:
          type: boolean
        enrollment:
          enum:
          - OMM
          - ANY_OR_NONE
          type: string
      type: object
      x-okta-tags:
      - Policy
    OAuth2ScopesMediationPolicyRuleCondition:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    OAuthAuthorizationPolicy:
      type: object
      x-okta-parent: '#/components/schemas/Policy'
      x-okta-tags:
      - Policy
    OktaSignOnPolicy:
      properties:
        conditions:
          $ref: '#/components/schemas/OktaSignOnPolicyConditions'
      type: object
      x-okta-parent: '#/components/schemas/Policy'
      x-okta-tags:
      - Policy
    OktaSignOnPolicyConditions:
      properties:
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
      x-okta-parent: '#/components/schemas/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    PasswordDictionary:
      properties:
        common:
          $ref: '#/components/schemas/PasswordDictionaryCommon'
      type: object
      x-okta-tags:
      - Policy
    PasswordDictionaryCommon:
      properties:
        exclude:
          default: false
          type: boolean
      type: object
      x-okta-tags:
      - Policy
    PasswordExpirationPolicyRuleCondition:
      properties:
        number:
          type: integer
        unit:
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicy:
      properties:
        conditions:
          $ref: '#/components/schemas/PasswordPolicyConditions'
        settings:
          $ref: '#/components/schemas/PasswordPolicySettings'
      type: object
      x-okta-parent: '#/components/schemas/Policy'
      x-okta-tags:
      - Policy
    PasswordPolicyAuthenticationProviderCondition:
      properties:
        include:
          items:
            type: string
          type: array
        provider:
          enum:
          - ACTIVE_DIRECTORY
          - ANY
          - LDAP
          - OKTA
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyConditions:
      properties:
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
      type: object
      x-okta-parent: '#/components/schemas/PolicyRuleConditions'
      x-okta-tags:
      - Policy
    PasswordPolicyDelegationSettings:
      properties:
        options:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettingsOptions'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyDelegationSettingsOptions:
      properties:
        skipUnlock:
          type: boolean
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettings:
      properties:
        age:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsAge'
        complexity:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsComplexity'
        lockout:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettingsLockout'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettingsAge:
      properties:
        expireWarnDays:
          type: integer
        historyCount:
          type: integer
        maxAgeDays:
          type: integer
        minAgeMinutes:
          type: integer
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettingsComplexity:
      properties:
        dictionary:
          $ref: '#/components/schemas/PasswordDictionary'
        excludeAttributes:
          items:
            type: string
          type: array
        excludeUsername:
          default: true
          type: boolean
        minLength:
          type: integer
        minLowerCase:
          type: integer
        minNumber:
          type: integer
        minSymbol:
          type: integer
        minUpperCase:
          type: integer
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyPasswordSettingsLockout:
      properties:
        autoUnlockMinutes:
          type: integer
        maxAttempts:
          type: integer
        showLockoutFailures:
          type: boolean
        userLockoutNotificationChannels:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryEmail:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailProperties'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryEmailProperties:
      properties:
        recoveryToken:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmailRecoveryToken'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryEmailRecoveryToken:
      properties:
        tokenLifetimeMinutes:
          type: integer
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryFactorSettings:
      properties:
        status:
          default: INACTIVE
          enum:
          - ACTIVE
          - INACTIVE
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryFactors:
      properties:
        okta_call:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        okta_email:
          $ref: '#/components/schemas/PasswordPolicyRecoveryEmail'
        okta_sms:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactorSettings'
        recovery_question:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestion'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryQuestion:
      properties:
        properties:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionProperties'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          readOnly: true
          type: string
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryQuestionComplexity:
      properties:
        minLength:
          readOnly: true
          type: integer
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoveryQuestionProperties:
      properties:
        complexity:
          $ref: '#/components/schemas/PasswordPolicyRecoveryQuestionComplexity'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicyRecoverySettings:
      properties:
        factors:
          $ref: '#/components/schemas/PasswordPolicyRecoveryFactors'
      type: object
      x-okta-tags:
      - Policy
    PasswordPolicySettings:
      properties:
        delegation:
          $ref: '#/components/schemas/PasswordPolicyDelegationSettings'
        password:
          $ref: '#/components/schemas/PasswordPolicyPasswordSettings'
        recovery:
          $ref: '#/components/schemas/PasswordPolicyRecoverySettings'
      type: object
      x-okta-tags:
      - Policy
    PlatformConditionEvaluatorPlatform:
      properties:
        os:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystem'
        type:
          enum:
          - DESKTOP
          - MOBILE
          - OTHER
          - ANY
          type: string
      type: object
      x-okta-tags:
      - Policy
    PlatformConditionEvaluatorPlatformOperatingSystem:
      properties:
        expression:
          type: string
        type:
          enum:
          - ANDROID
          - IOS
          - WINDOWS
          - OSX
          - OTHER
          - ANY
          type: string
        version:
          $ref: '#/components/schemas/PlatformConditionEvaluatorPlatformOperatingSystemVersion'
      type: object
      x-okta-tags:
      - Policy
    PlatformConditionEvaluatorPlatformOperatingSystemVersion:
      properties:
        matchType:
          enum:
          - EXPRESSION
          - SEMVER
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - Policy
    PlatformPolicyRuleCondition:
      properties:
        exclude:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
        include:
          items:
            $ref: '#/components/schemas/PlatformConditionEvaluatorPlatform'
          type: array
      type: object
      x-okta-tags:
      - Policy
    Policy:
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        conditions:
          $ref: '#/components/schemas/PolicyRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        priority:
          type: integer
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        system:
          type: boolean
        type:
          $ref: '#/components/schemas/PolicyType'
      type: object
      x-okta-crud:
      - alias: read
        arguments:
        - dest: policyId
          src: id
        operationId: getPolicy
      - alias: update
        arguments:
        - dest: policyId
          src: id
        - dest: policy
          self: true
        operationId: updatePolicy
      - alias: delete
        arguments:
        - dest: policyId
          src: id
        operationId: deletePolicy
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: policyId
          src: id
        operationId: activatePolicy
      - alias: deactivate
        arguments:
        - dest: policyId
          src: id
        operationId: deactivatePolicy
      - alias: listPolicyRules
        arguments:
        - dest: policyId
          src: id
        operationId: listPolicyRules
      - alias: createRule
        arguments:
        - dest: policyId
          src: id
        operationId: createPolicyRule
      - alias: getPolicyRule
        arguments:
        - dest: policyId
          src: id
        operationId: getPolicyRule
      x-okta-tags:
      - Policy
      x-openapi-v3-discriminator:
        mapping:
          IDP_DISCOVERY: '#/components/schemas/IdentityProviderPolicy'
          OAUTH_AUTHORIZATION_POLICY: '#/components/schemas/OAuthAuthorizationPolicy'
          OKTA_SIGN_ON: '#/components/schemas/OktaSignOnPolicy'
          PASSWORD: '#/components/schemas/PasswordPolicy'
        propertyName: type
    PolicyAccountLink:
      properties:
        action:
          enum:
          - AUTO
          - DISABLED
          type: string
        filter:
          $ref: '#/components/schemas/PolicyAccountLinkFilter'
      type: object
      x-okta-tags:
      - Policy
    PolicyAccountLinkFilter:
      properties:
        groups:
          $ref: '#/components/schemas/PolicyAccountLinkFilterGroups'
      type: object
      x-okta-tags:
      - Policy
    PolicyAccountLinkFilterGroups:
      properties:
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    PolicyNetworkCondition:
      properties:
        connection:
          enum:
          - ANYWHERE
          - ZONE
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    PolicyPeopleCondition:
      properties:
        groups:
          $ref: '#/components/schemas/GroupCondition'
        users:
          $ref: '#/components/schemas/UserCondition'
      type: object
      x-okta-tags:
      - Policy
    PolicyRuleAuthContextCondition:
      properties:
        authType:
          enum:
          - ANY
          - RADIUS
          type: string
      type: object
      x-okta-tags:
      - Policy
    PolicyRuleConditions:
      properties:
        app:
          $ref: '#/components/schemas/AppAndInstancePolicyRuleCondition'
        apps:
          $ref: '#/components/schemas/AppInstancePolicyRuleCondition'
        authContext:
          $ref: '#/components/schemas/PolicyRuleAuthContextCondition'
        authProvider:
          $ref: '#/components/schemas/PasswordPolicyAuthenticationProviderCondition'
        beforeScheduledAction:
          $ref: '#/components/schemas/BeforeScheduledActionPolicyRuleCondition'
        clients:
          $ref: '#/components/schemas/ClientPolicyCondition'
        context:
          $ref: '#/components/schemas/ContextPolicyRuleCondition'
        device:
          $ref: '#/components/schemas/DevicePolicyRuleCondition'
        grantTypes:
          $ref: '#/components/schemas/GrantTypePolicyRuleCondition'
        groups:
          $ref: '#/components/schemas/GroupPolicyRuleCondition'
        identityProvider:
          $ref: '#/components/schemas/IdentityProviderPolicyRuleCondition'
        mdmEnrollment:
          $ref: '#/components/schemas/MDMEnrollmentPolicyRuleCondition'
        network:
          $ref: '#/components/schemas/PolicyNetworkCondition'
        people:
          $ref: '#/components/schemas/PolicyPeopleCondition'
        platform:
          $ref: '#/components/schemas/PlatformPolicyRuleCondition'
        risk:
          $ref: '#/components/schemas/RiskPolicyRuleCondition'
        riskScore:
          $ref: '#/components/schemas/RiskScorePolicyRuleCondition'
        scopes:
          $ref: '#/components/schemas/OAuth2ScopesMediationPolicyRuleCondition'
        userIdentifier:
          $ref: '#/components/schemas/UserIdentifierPolicyRuleCondition'
        userStatus:
          $ref: '#/components/schemas/UserStatusPolicyRuleCondition'
        users:
          $ref: '#/components/schemas/UserPolicyRuleCondition'
      type: object
      x-okta-tags:
      - Policy
    PolicySubject:
      properties:
        filter:
          type: string
        format:
          items:
            type: string
          type: array
        matchAttribute:
          type: string
        matchType:
          $ref: '#/components/schemas/PolicySubjectMatchType'
        userNameTemplate:
          $ref: '#/components/schemas/PolicyUserNameTemplate'
      type: object
      x-okta-tags:
      - Policy
    PolicySubjectMatchType:
      enum:
      - USERNAME
      - EMAIL
      - USERNAME_OR_EMAIL
      - CUSTOM_ATTRIBUTE
      type: string
      x-okta-tags:
      - Policy
    PolicyType:
      enum:
      - OAUTH_AUTHORIZATION_POLICY
      - OKTA_SIGN_ON
      - PASSWORD
      - IDP_DISCOVERY
      type: string
      x-okta-tags:
      - Policy
    PolicyUserNameTemplate:
      properties:
        template:
          type: string
      type: object
      x-okta-tags:
      - Policy
    Protocol:
      properties:
        algorithms:
          $ref: '#/components/schemas/ProtocolAlgorithms'
        credentials:
          $ref: '#/components/schemas/IdentityProviderCredentials'
        endpoints:
          $ref: '#/components/schemas/ProtocolEndpoints'
        issuer:
          $ref: '#/components/schemas/ProtocolEndpoint'
        relayState:
          $ref: '#/components/schemas/ProtocolRelayState'
        scopes:
          items:
            type: string
          type: array
        settings:
          $ref: '#/components/schemas/ProtocolSettings'
        type:
          enum:
          - SAML2
          - OIDC
          - OAUTH2
          - MTLS
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolAlgorithmType:
      properties:
        signature:
          $ref: '#/components/schemas/ProtocolAlgorithmTypeSignature'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolAlgorithmTypeSignature:
      properties:
        algorithm:
          type: string
        scope:
          enum:
          - RESPONSE
          - TOKEN
          - ANY
          - REQUEST
          - NONE
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolAlgorithms:
      properties:
        request:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
        response:
          $ref: '#/components/schemas/ProtocolAlgorithmType'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolEndpoint:
      properties:
        binding:
          enum:
          - HTTP-POST
          - HTTP-REDIRECT
          type: string
        destination:
          type: string
        type:
          enum:
          - INSTANCE
          - ORG
          type: string
        url:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolEndpoints:
      properties:
        acs:
          $ref: '#/components/schemas/ProtocolEndpoint'
        authorization:
          $ref: '#/components/schemas/ProtocolEndpoint'
        jwks:
          $ref: '#/components/schemas/ProtocolEndpoint'
        metadata:
          $ref: '#/components/schemas/ProtocolEndpoint'
        slo:
          $ref: '#/components/schemas/ProtocolEndpoint'
        sso:
          $ref: '#/components/schemas/ProtocolEndpoint'
        token:
          $ref: '#/components/schemas/ProtocolEndpoint'
        userInfo:
          $ref: '#/components/schemas/ProtocolEndpoint'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolRelayState:
      properties:
        format:
          $ref: '#/components/schemas/ProtocolRelayStateFormat'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProtocolRelayStateFormat:
      enum:
      - OPAQUE
      - FROM_URL
      type: string
      x-okta-tags:
      - IdentityProvider
    ProtocolSettings:
      properties:
        nameFormat:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    Provisioning:
      properties:
        action:
          enum:
          - AUTO
          - CALLOUT
          - DISABLED
          type: string
        conditions:
          $ref: '#/components/schemas/ProvisioningConditions'
        groups:
          $ref: '#/components/schemas/ProvisioningGroups'
        profileMaster:
          type: boolean
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningConditions:
      properties:
        deprovisioned:
          $ref: '#/components/schemas/ProvisioningDeprovisionedCondition'
        suspended:
          $ref: '#/components/schemas/ProvisioningSuspendedCondition'
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningDeprovisionedCondition:
      properties:
        action:
          enum:
          - NONE
          - REACTIVATE
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningGroups:
      properties:
        action:
          enum:
          - NONE
          - APPEND
          - SYNC
          - ASSIGN
          type: string
        assignments:
          items:
            type: string
          type: array
        filter:
          items:
            type: string
          type: array
        sourceAttributeName:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    ProvisioningSuspendedCondition:
      properties:
        action:
          enum:
          - NONE
          - UNSUSPEND
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    RiskPolicyRuleCondition:
      properties:
        behaviors:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
      x-okta-tags:
      - Policy
    RiskScorePolicyRuleCondition:
      properties:
        level:
          type: string
      type: object
      x-okta-tags:
      - Policy
    ScheduledUserLifecycleAction:
      properties:
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - PENDING
          - DELETED
          - EXPIRED_PASSWORD
          - ACTIVATING
          - SUSPENDED
          - DELETING
          type: string
      type: object
      x-okta-tags:
      - Policy
    SocialAuthToken:
      properties:
        expiresAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        scopes:
          items:
            type: string
          type: array
        token:
          type: string
        tokenAuthScheme:
          type: string
        tokenType:
          type: string
      type: object
      x-okta-tags:
      - IdentityProvider
    UserCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Policy
    UserIdentifierConditionEvaluatorPattern:
      properties:
        matchType:
          enum:
          - SUFFIX
          - EXPRESSION
          - STARTS_WITH
          - EQUALS
          - CONTAINS
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserIdentifierPolicyRuleCondition:
      properties:
        attribute:
          type: string
        patterns:
          items:
            $ref: '#/components/schemas/UserIdentifierConditionEvaluatorPattern'
          type: array
        type:
          enum:
          - IDENTIFIER
          - ATTRIBUTE
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserIdentityProviderLinkRequest:
      properties:
        externalId:
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserLifecycleAttributePolicyRuleCondition:
      properties:
        attributeName:
          type: string
        matchingValue:
          type: string
      type: object
      x-okta-tags:
      - Policy
    UserPolicyRuleCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        inactivity:
          $ref: '#/components/schemas/InactivityPolicyRuleCondition'
        include:
          items:
            type: string
          type: array
        lifecycleExpiration:
          $ref: '#/components/schemas/LifecycleExpirationPolicyRuleCondition'
        passwordExpiration:
          $ref: '#/components/schemas/PasswordExpirationPolicyRuleCondition'
        userLifecycleAttribute:
          $ref: '#/components/schemas/UserLifecycleAttributePolicyRuleCondition'
      type: object
      x-okta-tags:
      - Policy
    UserStatusPolicyRuleCondition:
      properties:
        value:
          enum:
          - ACTIVE
          - INACTIVE
          - PENDING
          - DELETED
          - EXPIRED_PASSWORD
          - ACTIVATING
          - SUSPENDED
          - DELETING
          type: string
      type: object
      x-okta-tags:
      - Policy
  securitySchemes:
    api_token:
      description: SSWS {API Token}
      in: header
      name: Authorization
      type: apiKey
  x-stackQL-resources:
    csrs:
      id: okta.identityprovider.csrs
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/idps/{idpId}/credentials/csrs/{csrId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/credentials/csrs/{csrId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/{idpId}/credentials/csrs
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/credentials/csrs
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: csrs
      title: csrs
    idpkeys:
      id: okta.identityprovider.idpkeys
      methods:
        clone:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone
          response:
            mediaType: application/json
            openAPIDocKey: '201'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/credentials/keys/{keyId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/{idpId}/credentials/keys/generate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/credentials/keys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: idpkeys
      title: idpkeys
    idps:
      id: okta.identityprovider.idps
      methods:
        activate:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/{idpId}/lifecycle/activate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/{idpId}/lifecycle/activate
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/idps/{idpId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/idps/{idpId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: idps
      title: idps
    keys:
      id: okta.identityprovider.keys
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/idps/credentials/keys/{keyId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/credentials/keys/{keyId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/credentials/keys
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/credentials/keys
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: keys
      title: keys
    users:
      id: okta.identityprovider.users
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/idps/{idpId}/users/{userId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/users/{userId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/idps/{idpId}/users/{userId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/users
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: users
      title: users
    usertokens:
      id: okta.identityprovider.usertokens
      methods:
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/idps/{idpId}/users/{userId}/credentials/tokens
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: usertokens
      title: usertokens
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta API
  version: 2.8.0
openapi: 3.0.1
paths:
  /api/v1/idps:
    get:
      description: Enumerates IdPs in your organization with pagination. A subset
        of IdPs can be returned that match a supported filter expression or query.
      operationId: listIdentityProviders
      parameters:
      - description: Searches the name property of IdPs for matching value
        in: query
        name: q
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of IdPs
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of IdP results in a page
        in: query
        name: limit
        schema:
          default: 20
          format: int32
          type: integer
      - description: Filters IdPs by type
        in: query
        name: type
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProvider'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Identity Providers
      tags:
      - IdentityProvider
    post:
      description: Adds a new IdP to your organization.
      operationId: createIdentityProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Add Identity Provider
      tags:
      - IdentityProvider
      x-codegen-request-body-name: identityProvider
  /api/v1/idps/credentials/keys:
    get:
      description: Enumerates IdP key credentials.
      operationId: listIdentityProviderKeys
      parameters:
      - description: Specifies the pagination cursor for the next page of keys
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of key results in a page
        in: query
        name: limit
        schema:
          default: 20
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Keys
      tags:
      - IdentityProvider
    post:
      description: Adds a new X.509 certificate credential to the IdP key store.
      operationId: createIdentityProviderKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonWebKey'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Add X.509 Certificate Public Key
      tags:
      - IdentityProvider
      x-codegen-request-body-name: jsonWebKey
  /api/v1/idps/credentials/keys/{keyId}:
    delete:
      description: Deletes a specific IdP Key Credential by `kid` if it is not currently
        being used by an Active or Inactive IdP.
      operationId: deleteIdentityProviderKey
      parameters:
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Delete Key
      tags:
      - IdentityProvider
    get:
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderKey
      parameters:
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Get Key
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}:
    delete:
      description: Removes an IdP from your organization.
      operationId: deleteIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Delete Identity Provider
      tags:
      - IdentityProvider
    get:
      description: Fetches an IdP by `id`.
      operationId: getIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Get Identity Provider
      tags:
      - IdentityProvider
    put:
      description: Updates the configuration for an IdP.
      operationId: updateIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProvider'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Update Identity Provider
      tags:
      - IdentityProvider
      x-codegen-request-body-name: identityProvider
  /api/v1/idps/{idpId}/credentials/csrs:
    get:
      description: Enumerates Certificate Signing Requests for an IdP
      operationId: listCsrsForIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Csr'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Certificate Signing Requests for IdP
      tags:
      - IdentityProvider
    post:
      description: Generates a new key pair and returns a Certificate Signing Request
        for it.
      operationId: generateCsrForIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsrMetadata'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Created
      security:
      - api_token: []
      summary: Generate Certificate Signing Request for IdP
      tags:
      - IdentityProvider
      x-codegen-request-body-name: metadata
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}:
    delete:
      description: Revoke a Certificate Signing Request and delete the key pair from
        the IdP
      operationId: revokeCsrForIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: csrId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - IdentityProvider
    get:
      description: Gets a specific Certificate Signing Request model by id
      operationId: getCsrForIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: csrId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Csr'
          description: Success
      security:
      - api_token: []
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/csrs/{csrId}/lifecycle/publish:
    post:
      description: Update the Certificate Signing Request with a signed X.509 certificate
        and add it into the signing key credentials for the IdP.
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: csrId
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      tags:
      - IdentityProvider
      x-okta-multi-operation:
      - consumes:
        - application/x-x509-ca-cert
        encoding: base64
        operationId: publishCerCertForIdentityProvider
        parameters:
        - in: body
          name: certificate
          required: true
          type: string
      - consumes:
        - application/x-x509-ca-cert
        operationId: publishBinaryCerCertForIdentityProvider
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
      - consumes:
        - application/pkix-cert
        encoding: base64
        operationId: publishDerCertForIdentityProvider
        parameters:
        - in: body
          name: certificate
          required: true
          type: string
      - consumes:
        - application/pkix-cert
        operationId: publishBinaryDerCertForIdentityProvider
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
      - consumes:
        - application/x-pem-file
        operationId: publishBinaryPemCertForIdentityProvider
        parameters:
        - format: binary
          in: body
          name: certificate
          required: true
          type: string
  /api/v1/idps/{idpId}/credentials/keys:
    get:
      description: Enumerates signing key credentials for an IdP
      operationId: listIdentityProviderSigningKeys
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JsonWebKey'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Signing Key Credentials for IdP
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/generate:
    post:
      description: Generates a new X.509 certificate for an IdP signing key credential
        to be used for signing assertions sent to the IdP
      operationId: generateIdentityProviderSigningKey
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - description: expiry of the IdP Key Credential
        in: query
        name: validityYears
        required: true
        schema:
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Generate New IdP Signing Key Credential
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{keyId}:
    get:
      description: Gets a specific IdP Key Credential by `kid`
      operationId: getIdentityProviderSigningKey
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Success
      security:
      - api_token: []
      summary: Get Signing Key Credential for IdP
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/credentials/keys/{keyId}/clone:
    post:
      description: Clones a X.509 certificate for an IdP signing key credential from
        a source IdP to target IdP
      operationId: cloneIdentityProviderKey
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      - in: query
        name: targetIdpId
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JsonWebKey'
          description: Created
      security:
      - api_token: []
      summary: Clone Signing Key Credential for IdP
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/activate:
    post:
      description: Activates an inactive IdP.
      operationId: activateIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Activate Identity Provider
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/lifecycle/deactivate:
    post:
      description: Deactivates an active IdP.
      operationId: deactivateIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProvider'
          description: Success
      security:
      - api_token: []
      summary: Deactivate Identity Provider
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/users:
    get:
      description: Find all the users linked to an identity provider
      operationId: listIdentityProviderApplicationUsers
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProviderApplicationUser'
                type: array
          description: Success
      security:
      - api_token: []
      summary: Find Users
      tags:
      - IdentityProvider
  /api/v1/idps/{idpId}/users/{userId}:
    delete:
      description: Removes the link between the Okta user and the IdP user.
      operationId: unlinkUserFromIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Unlink User from IdP
      tags:
      - IdentityProvider
    get:
      description: Fetches a linked IdP user by ID
      operationId: getIdentityProviderApplicationUser
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
      security:
      - api_token: []
      tags:
      - IdentityProvider
    post:
      description: Links an Okta user to an existing Social Identity Provider. This
        does not support the SAML2 Identity Provider Type
      operationId: linkUserToIdentityProvider
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserIdentityProviderLinkRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderApplicationUser'
          description: Success
      security:
      - api_token: []
      summary: Link a user to a Social IdP without a transaction
      tags:
      - IdentityProvider
      x-codegen-request-body-name: userIdentityProviderLinkRequest
  /api/v1/idps/{idpId}/users/{userId}/credentials/tokens:
    get:
      description: Fetches the tokens minted by the Social Authentication Provider
        when the user authenticates with Okta via Social Auth.
      operationId: listSocialAuthTokens
      parameters:
      - in: path
        name: idpId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SocialAuthToken'
                type: array
          description: Success
      security:
      - api_token: []
      summary: Social Authentication Token Operation
      tags:
      - IdentityProvider
servers:
- url: https://{subdomain}.okta.com/
  variables:
    subdomain:
      default: my-domain
