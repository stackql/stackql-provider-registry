components:
  schemas:
    AcsEndpoint:
      properties:
        index:
          type: integer
        url:
          type: string
      type: object
      x-okta-tags:
      - Application
    Application:
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        accessibility:
          $ref: '#/components/schemas/ApplicationAccessibility'
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/ApplicationCredentials'
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        label:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        licensing:
          $ref: '#/components/schemas/ApplicationLicensing'
        name:
          readOnly: true
          type: string
        profile:
          additionalProperties:
            properties: {}
            type: object
          type: object
        settings:
          $ref: '#/components/schemas/ApplicationSettings'
        signOnMode:
          $ref: '#/components/schemas/ApplicationSignOnMode'
        status:
          enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          readOnly: true
          type: string
        visibility:
          $ref: '#/components/schemas/ApplicationVisibility'
      type: object
      x-okta-crud:
      - alias: read
        arguments:
        - dest: appId
          src: id
        operationId: getApplication
      - alias: update
        arguments:
        - dest: appId
          src: id
        - dest: application
          self: true
        operationId: updateApplication
      - alias: delete
        arguments:
        - dest: appId
          src: id
        operationId: deleteApplication
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: appId
          src: id
        operationId: activateApplication
      - alias: deactivate
        arguments:
        - dest: appId
          src: id
        operationId: deactivateApplication
      - alias: listApplicationUsers
        arguments:
        - dest: appId
          src: id
        operationId: listApplicationUsers
      - alias: assignUserToApplication
        arguments:
        - dest: appId
          src: id
        operationId: assignUserToApplication
      - alias: getApplicationUser
        arguments:
        - dest: appId
          src: id
        operationId: getApplicationUser
      - alias: createApplicationGroupAssignment
        arguments:
        - dest: appId
          src: id
        operationId: createApplicationGroupAssignment
      - alias: getApplicationGroupAssignment
        arguments:
        - dest: appId
          src: id
        operationId: getApplicationGroupAssignment
      - alias: cloneApplicationKey
        arguments:
        - dest: appId
          src: id
        operationId: cloneApplicationKey
      - alias: getApplicationKey
        arguments:
        - dest: appId
          src: id
        operationId: getApplicationKey
      - alias: listGroupAssignments
        arguments:
        - dest: appId
          src: id
        operationId: listApplicationGroupAssignments
      - alias: listKeys
        arguments:
        - dest: appId
          src: id
        operationId: listApplicationKeys
      - alias: generateKey
        arguments:
        - dest: appId
          src: id
        operationId: generateApplicationKey
      - alias: generateCsr
        arguments:
        - dest: appId
          src: id
        operationId: generateCsrForApplication
      - alias: getCsr
        arguments:
        - dest: appId
          src: id
        operationId: getCsrForApplication
      - alias: revokeCsr
        arguments:
        - dest: appId
          src: id
        operationId: revokeCsrFromApplication
      - alias: listCsrs
        arguments:
        - dest: appId
          src: id
        operationId: listCsrsForApplication
      - alias: publishCerCert
        arguments:
        - dest: appId
          src: id
        operationId: publishCerCert
      - alias: publishBinaryCerCert
        arguments:
        - dest: appId
          src: id
        operationId: publishBinaryCerCert
      - alias: publishDerCert
        arguments:
        - dest: appId
          src: id
        operationId: publishDerCert
      - alias: publishBinaryDerCert
        arguments:
        - dest: appId
          src: id
        operationId: publishBinaryDerCert
      - alias: publishBinaryPemCert
        arguments:
        - dest: appId
          src: id
        operationId: publishBinaryPemCert
      - alias: listOAuth2Tokens
        arguments:
        - dest: appId
          src: id
        operationId: listOAuth2TokensForApplication
      - alias: revokeOAuth2TokenForApplication
        arguments:
        - dest: appId
          src: id
        operationId: revokeOAuth2TokenForApplication
      - alias: getOAuth2Token
        arguments:
        - dest: appId
          src: id
        operationId: getOAuth2TokenForApplication
      - alias: revokeOAuth2Tokens
        arguments:
        - dest: appId
          src: id
        operationId: revokeOAuth2TokensForApplication
      - alias: listScopeConsentGrants
        arguments:
        - dest: appId
          src: id
        operationId: listScopeConsentGrants
      - alias: grantConsentToScope
        arguments:
        - dest: appId
          src: id
        operationId: grantConsentToScope
      - alias: revokeScopeConsentGrant
        arguments:
        - dest: appId
          src: id
        operationId: revokeScopeConsentGrant
      - alias: getScopeConsentGrant
        arguments:
        - dest: appId
          src: id
        operationId: getScopeConsentGrant
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          AUTO_LOGIN: '#/components/schemas/AutoLoginApplication'
          BASIC_AUTH: '#/components/schemas/BasicAuthApplication'
          BOOKMARK: '#/components/schemas/BookmarkApplication'
          BROWSER_PLUGIN: '#/components/schemas/BrowserPluginApplication'
          OPENID_CONNECT: '#/components/schemas/OpenIdConnectApplication'
          SAML_1_1: '#/components/schemas/SamlApplication'
          SAML_2_0: '#/components/schemas/SamlApplication'
          SECURE_PASSWORD_STORE: '#/components/schemas/SecurePasswordStoreApplication'
          WS_FEDERATION: '#/components/schemas/WsFederationApplication'
        propertyName: signOnMode
    ApplicationAccessibility:
      properties:
        errorRedirectUrl:
          type: string
        loginRedirectUrl:
          type: string
        selfService:
          type: boolean
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentials:
      properties:
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userNameTemplate:
          $ref: '#/components/schemas/ApplicationCredentialsUsernameTemplate'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsOAuthClient:
      properties:
        autoKeyRotation:
          type: boolean
        client_id:
          type: string
        client_secret:
          type: string
        token_endpoint_auth_method:
          $ref: '#/components/schemas/OAuthEndpointAuthenticationMethod'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsScheme:
      enum:
      - SHARED_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - EDIT_USERNAME_AND_PASSWORD
      - EDIT_PASSWORD_ONLY
      - ADMIN_SETS_CREDENTIALS
      type: string
      x-okta-tags:
      - Application
    ApplicationCredentialsSigning:
      properties:
        kid:
          type: string
        lastRotated:
          format: date-time
          readOnly: true
          type: string
        nextRotation:
          format: date-time
          readOnly: true
          type: string
        rotationMode:
          type: string
        use:
          $ref: '#/components/schemas/ApplicationCredentialsSigningUse'
      type: object
      x-okta-tags:
      - Application
    ApplicationCredentialsSigningUse:
      enum:
      - sig
      type: string
      x-okta-tags:
      - AuthorizationServer
    ApplicationCredentialsUsernameTemplate:
      properties:
        suffix:
          type: string
        template:
          type: string
        type:
          type: string
      type: object
      x-okta-tags:
      - Application
    ApplicationLicensing:
      properties:
        seatCount:
          type: integer
      type: object
      x-okta-tags:
      - Application
    ApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/ApplicationSettingsApplication'
        implicitAssignment:
          type: boolean
        inlineHookId:
          type: string
        notes:
          $ref: '#/components/schemas/ApplicationSettingsNotes'
        notifications:
          $ref: '#/components/schemas/ApplicationSettingsNotifications'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsApplication:
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotes:
      properties:
        admin:
          type: string
        enduser:
          type: string
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotifications:
      properties:
        vpn:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpn'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotificationsVpn:
      properties:
        helpUrl:
          type: string
        message:
          type: string
        network:
          $ref: '#/components/schemas/ApplicationSettingsNotificationsVpnNetwork'
      type: object
      x-okta-tags:
      - Application
    ApplicationSettingsNotificationsVpnNetwork:
      properties:
        connection:
          type: string
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    ApplicationSignOnMode:
      enum:
      - BOOKMARK
      - BASIC_AUTH
      - BROWSER_PLUGIN
      - SECURE_PASSWORD_STORE
      - AUTO_LOGIN
      - WS_FEDERATION
      - SAML_2_0
      - OPENID_CONNECT
      - SAML_1_1
      type: string
      x-okta-tags:
      - Application
    ApplicationVisibility:
      properties:
        appLinks:
          additionalProperties:
            type: boolean
          type: object
        autoLaunch:
          type: boolean
        autoSubmitToolbar:
          type: boolean
        hide:
          $ref: '#/components/schemas/ApplicationVisibilityHide'
      type: object
      x-okta-tags:
      - Application
    ApplicationVisibilityHide:
      properties:
        iOS:
          type: boolean
        web:
          type: boolean
      type: object
      x-okta-tags:
      - Application
    AssignRoleRequest:
      properties:
        type:
          $ref: '#/components/schemas/RoleType'
      type: object
      x-okta-tags:
      - Role
    AuthenticationProvider:
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AuthenticationProviderType'
      type: object
      x-okta-tags:
      - User
    AuthenticationProviderType:
      enum:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
      - IMPORT
      type: string
      x-okta-tags:
      - User
    AutoLoginApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        settings:
          $ref: '#/components/schemas/AutoLoginApplicationSettings'
      type: object
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    AutoLoginApplicationSettings:
      properties:
        signOn:
          $ref: '#/components/schemas/AutoLoginApplicationSettingsSignOn'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    AutoLoginApplicationSettingsSignOn:
      properties:
        loginUrl:
          type: string
        redirectUrl:
          type: string
      type: object
      x-okta-tags:
      - Application
    BasicApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/BasicApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    BasicApplicationSettingsApplication:
      properties:
        authURL:
          type: string
        url:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    BasicAuthApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          type: object
        settings:
          $ref: '#/components/schemas/BasicApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_basic_auth
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    BookmarkApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/BookmarkApplicationSettings'
      type: object
      x-okta-defined-as:
        name: bookmark
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    BookmarkApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/BookmarkApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    BookmarkApplicationSettingsApplication:
      properties:
        requestIntegration:
          type: boolean
        url:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    BrowserPluginApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
      type: object
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
      x-openapi-v3-discriminator:
        mapping:
          template_swa: '#/components/schemas/SwaApplication'
          template_swa3field: '#/components/schemas/SwaThreeFieldApplication'
        propertyName: name
    CatalogApplication:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        category:
          type: string
        description:
          type: string
        displayName:
          type: string
        features:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        signOnModes:
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/CatalogApplicationStatus'
        verificationStatus:
          type: string
        website:
          type: string
      type: object
      x-okta-tags:
      - Role
    CatalogApplicationStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - Role
    Group:
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastMembershipUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        objectClass:
          items:
            type: string
          readOnly: true
          type: array
        profile:
          $ref: '#/components/schemas/GroupProfile'
        type:
          $ref: '#/components/schemas/GroupType'
      type: object
      x-okta-crud:
      - alias: update
        arguments:
        - dest: groupId
          src: id
        - dest: group
          self: true
        operationId: updateGroup
      - alias: delete
        arguments:
        - dest: groupId
          src: id
        operationId: deleteGroup
      x-okta-operations:
      - alias: removeUser
        arguments:
        - dest: groupId
          src: id
        operationId: removeUserFromGroup
      - alias: listUsers
        arguments:
        - dest: groupId
          src: id
        operationId: listGroupUsers
      - alias: listApplications
        arguments:
        - dest: groupId
          src: id
        operationId: listAssignedApplicationsForGroup
      - alias: assignRole
        arguments:
        - dest: groupId
          src: id
        operationId: assignRoleToGroup
      x-okta-tags:
      - Group
    GroupProfile:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - Group
    GroupRule:
      properties:
        actions:
          $ref: '#/components/schemas/GroupRuleAction'
        conditions:
          $ref: '#/components/schemas/GroupRuleConditions'
        created:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/GroupRuleStatus'
        type:
          type: string
      type: object
      x-okta-crud:
      - alias: update
        arguments:
        - dest: ruleId
          src: id
        - dest: groupRule
          self: true
        operationId: updateGroupRule
      - alias: delete
        arguments:
        - dest: ruleId
          src: id
        operationId: deleteGroupRule
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: ruleId
          src: id
        operationId: activateGroupRule
      - alias: deactivate
        arguments:
        - dest: ruleId
          src: id
        operationId: deactivateGroupRule
      x-okta-tags:
      - GroupRule
    GroupRuleAction:
      properties:
        assignUserToGroups:
          $ref: '#/components/schemas/GroupRuleGroupAssignment'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleConditions:
      properties:
        expression:
          $ref: '#/components/schemas/GroupRuleExpression'
        people:
          $ref: '#/components/schemas/GroupRulePeopleCondition'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleExpression:
      properties:
        type:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleGroupAssignment:
      properties:
        groupIds:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleGroupCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupRulePeopleCondition:
      properties:
        groups:
          $ref: '#/components/schemas/GroupRuleGroupCondition'
        users:
          $ref: '#/components/schemas/GroupRuleUserCondition'
      type: object
      x-okta-tags:
      - GroupRule
    GroupRuleStatus:
      enum:
      - ACTIVE
      - INACTIVE
      - INVALID
      type: string
      x-okta-tags:
      - GroupRule
    GroupRuleUserCondition:
      properties:
        exclude:
          items:
            type: string
          type: array
        include:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - GroupRule
    GroupType:
      enum:
      - OKTA_GROUP
      - APP_GROUP
      - BUILT_IN
      type: string
      x-okta-tags:
      - Group
    JsonWebKey:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        alg:
          type: string
        created:
          format: date-time
          type: string
        e:
          type: string
        expiresAt:
          format: date-time
          type: string
        key_ops:
          items:
            type: string
          type: array
        kid:
          type: string
        kty:
          type: string
        lastUpdated:
          format: date-time
          type: string
        n:
          type: string
        status:
          type: string
        use:
          type: string
        x5c:
          items:
            type: string
          type: array
        x5t:
          type: string
        x5t#S256:
          type: string
        x5u:
          type: string
      type: object
      x-okta-tags:
      - Application
    OAuthApplicationCredentials:
      properties:
        oauthClient:
          $ref: '#/components/schemas/ApplicationCredentialsOAuthClient'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationCredentials'
      x-okta-tags:
      - Application
    OAuthEndpointAuthenticationMethod:
      enum:
      - none
      - client_secret_post
      - client_secret_basic
      - client_secret_jwt
      - private_key_jwt
      type: string
      x-okta-tags:
      - Application
    OAuthGrantType:
      enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
      type: string
      x-okta-tags:
      - Application
    OAuthResponseType:
      enum:
      - code
      - token
      - id_token
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/OAuthApplicationCredentials'
        name:
          type: object
        settings:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettings'
      type: object
      x-okta-defined-as:
        name: oidc_client
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    OpenIdConnectApplicationConsentMethod:
      enum:
      - REQUIRED
      - TRUSTED
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplicationIdpInitiatedLogin:
      properties:
        default_scope:
          items:
            type: string
          type: array
        mode:
          type: string
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationIssuerMode:
      enum:
      - CUSTOM_URL
      - ORG_URL
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettings:
      properties:
        oauthClient:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClient'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsClient:
      properties:
        application_type:
          $ref: '#/components/schemas/OpenIdConnectApplicationType'
        client_uri:
          type: string
        consent_method:
          $ref: '#/components/schemas/OpenIdConnectApplicationConsentMethod'
        grant_types:
          items:
            $ref: '#/components/schemas/OAuthGrantType'
          type: array
        idp_initiated_login:
          $ref: '#/components/schemas/OpenIdConnectApplicationIdpInitiatedLogin'
        initiate_login_uri:
          type: string
        issuer_mode:
          $ref: '#/components/schemas/OpenIdConnectApplicationIssuerMode'
        jwks:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsClientKeys'
        logo_uri:
          type: string
        policy_uri:
          type: string
        post_logout_redirect_uris:
          items:
            type: string
          type: array
        redirect_uris:
          items:
            type: string
          type: array
        refresh_token:
          $ref: '#/components/schemas/OpenIdConnectApplicationSettingsRefreshToken'
        response_types:
          items:
            $ref: '#/components/schemas/OAuthResponseType'
          type: array
        tos_uri:
          type: string
        wildcard_redirect:
          type: string
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsClientKeys:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/JsonWebKey'
          type: array
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationSettingsRefreshToken:
      properties:
        leeway:
          type: integer
        rotation_type:
          $ref: '#/components/schemas/OpenIdConnectRefreshTokenRotationType'
      type: object
      x-okta-tags:
      - Application
    OpenIdConnectApplicationType:
      enum:
      - web
      - native
      - browser
      - service
      type: string
      x-okta-tags:
      - Application
    OpenIdConnectRefreshTokenRotationType:
      enum:
      - rotate
      - static
      type: string
      x-okta-tags:
      - Application
    PasswordCredential:
      properties:
        hash:
          $ref: '#/components/schemas/PasswordCredentialHash'
        hook:
          $ref: '#/components/schemas/PasswordCredentialHook'
        value:
          format: password
          type: string
      type: object
      x-okta-tags:
      - User
    PasswordCredentialHash:
      properties:
        algorithm:
          $ref: '#/components/schemas/PasswordCredentialHashAlgorithm'
        salt:
          type: string
        saltOrder:
          type: string
        value:
          type: string
        workFactor:
          type: integer
      type: object
      x-okta-tags:
      - User
    PasswordCredentialHashAlgorithm:
      enum:
      - BCRYPT
      - SHA-512
      - SHA-256
      - SHA-1
      - MD5
      type: string
      x-okta-tags:
      - User
    PasswordCredentialHook:
      properties:
        type:
          type: string
      type: object
      x-okta-tags:
      - User
    RecoveryQuestionCredential:
      properties:
        answer:
          type: string
        question:
          type: string
      type: object
      x-okta-tags:
      - User
    Role:
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        assignmentType:
          $ref: '#/components/schemas/RoleAssignmentType'
        created:
          format: date-time
          readOnly: true
          type: string
        description:
          type: string
        id:
          readOnly: true
          type: string
        label:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/RoleStatus'
        type:
          $ref: '#/components/schemas/RoleType'
      type: object
      x-okta-operations:
      - alias: addAdminGroupTarget
        arguments:
        - dest: roleId
          src: id
        - dest: groupId
          parentSrc: id
        operationId: addGroupTargetToGroupAdministratorRoleForGroup
      - alias: addAppInstanceTargetToAdminRole
        arguments:
        - dest: roleId
          src: id
        - dest: groupId
          parentSrc: id
        operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      - alias: addAppTargetToAdminRole
        arguments:
        - dest: roleId
          src: id
        - dest: groupId
          parentSrc: id
        operationId: addApplicationTargetToAdminRoleGivenToGroup
      - alias: addAllAppsAsTargetToRole
        arguments:
        - dest: roleId
          src: id
        - dest: userId
          parentSrc: id
        operationId: addAllAppsAsTargetToRole
      - alias: addAppTargetToAppAdminRoleForUser
        arguments:
        - dest: roleId
          src: id
        - dest: userId
          parentSrc: id
        operationId: addApplicationTargetToAppAdminRoleForUser
      - alias: addAppTargetToAdminRoleForUser
        arguments:
        - dest: roleId
          src: id
        - dest: userId
          parentSrc: id
        operationId: addApplicationTargetToAdminRoleForUser
      x-okta-tags:
      - User
    RoleAssignmentType:
      enum:
      - GROUP
      - USER
      type: string
      x-okta-tags:
      - Role
    RoleStatus:
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      x-okta-tags:
      - User
    RoleType:
      enum:
      - SUPER_ADMIN
      - ORG_ADMIN
      - APP_ADMIN
      - USER_ADMIN
      - HELP_DESK_ADMIN
      - READ_ONLY_ADMIN
      - MOBILE_ADMIN
      - API_ACCESS_MANAGEMENT_ADMIN
      - REPORT_ADMIN
      - GROUP_MEMBERSHIP_ADMIN
      type: string
      x-okta-tags:
      - Role
    SamlApplication:
      properties:
        settings:
          $ref: '#/components/schemas/SamlApplicationSettings'
      type: object
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    SamlApplicationSettings:
      properties:
        signOn:
          $ref: '#/components/schemas/SamlApplicationSettingsSignOn'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    SamlApplicationSettingsSignOn:
      properties:
        acsEndpoints:
          items:
            $ref: '#/components/schemas/AcsEndpoint'
          type: array
        allowMultipleAcsEndpoints:
          type: boolean
        assertionSigned:
          type: boolean
        attributeStatements:
          items:
            $ref: '#/components/schemas/SamlAttributeStatement'
          type: array
        audience:
          type: string
        audienceOverride:
          type: string
        authnContextClassRef:
          type: string
        defaultRelayState:
          type: string
        destination:
          type: string
        destinationOverride:
          type: string
        digestAlgorithm:
          type: string
        honorForceAuthn:
          type: boolean
        idpIssuer:
          type: string
        inlineHooks:
          items:
            $ref: '#/components/schemas/SignOnInlineHook'
          type: array
        recipient:
          type: string
        recipientOverride:
          type: string
        requestCompressed:
          type: boolean
        responseSigned:
          type: boolean
        signatureAlgorithm:
          type: string
        slo:
          $ref: '#/components/schemas/SingleLogout'
        spCertificate:
          $ref: '#/components/schemas/SpCertificate'
        spIssuer:
          type: string
        ssoAcsUrl:
          type: string
        ssoAcsUrlOverride:
          type: string
        subjectNameIdFormat:
          type: string
        subjectNameIdTemplate:
          type: string
      type: object
      x-okta-tags:
      - Application
    SamlAttributeStatement:
      properties:
        filterType:
          type: string
        filterValue:
          type: string
        name:
          type: string
        namespace:
          type: string
        type:
          type: string
        values:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    SchemeApplicationCredentials:
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        revealPassword:
          type: boolean
        scheme:
          $ref: '#/components/schemas/ApplicationCredentialsScheme'
        signing:
          $ref: '#/components/schemas/ApplicationCredentialsSigning'
        userName:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationCredentials'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplication:
      properties:
        credentials:
          $ref: '#/components/schemas/SchemeApplicationCredentials'
        name:
          type: object
        settings:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_sps
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SecurePasswordStoreApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    SecurePasswordStoreApplicationSettingsApplication:
      properties:
        optionalField1:
          type: string
        optionalField1Value:
          type: string
        optionalField2:
          type: string
        optionalField2Value:
          type: string
        optionalField3:
          type: string
        optionalField3Value:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    SignOnInlineHook:
      properties:
        id:
          type: string
      type: object
      x-okta-tags:
      - Application
    SingleLogout:
      properties:
        enabled:
          type: boolean
        issuer:
          type: string
        logoutUrl:
          type: string
      type: object
      x-okta-tags:
      - Application
    SpCertificate:
      properties:
        x5c:
          items:
            type: string
          type: array
      type: object
      x-okta-tags:
      - Application
    SwaApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/SwaApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_swa
      x-okta-parent: '#/components/schemas/BrowserPluginApplication'
      x-okta-tags:
      - Application
    SwaApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SwaApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    SwaApplicationSettingsApplication:
      properties:
        buttonField:
          type: string
        loginUrlRegex:
          type: string
        passwordField:
          type: string
        url:
          type: string
        usernameField:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    SwaThreeFieldApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/SwaThreeFieldApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_swa3field
      x-okta-parent: '#/components/schemas/BrowserPluginApplication'
      x-okta-tags:
      - Application
    SwaThreeFieldApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/SwaThreeFieldApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    SwaThreeFieldApplicationSettingsApplication:
      properties:
        buttonSelector:
          type: string
        extraFieldSelector:
          type: string
        extraFieldValue:
          type: string
        loginUrlRegex:
          type: string
        passwordSelector:
          type: string
        targetURL:
          type: string
        userNameSelector:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
    User:
      properties:
        _embedded:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        activated:
          format: date-time
          readOnly: true
          type: string
        created:
          format: date-time
          readOnly: true
          type: string
        credentials:
          $ref: '#/components/schemas/UserCredentials'
        id:
          readOnly: true
          type: string
        lastLogin:
          format: date-time
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        passwordChanged:
          format: date-time
          readOnly: true
          type: string
        profile:
          $ref: '#/components/schemas/UserProfile'
        status:
          $ref: '#/components/schemas/UserStatus'
        statusChanged:
          format: date-time
          readOnly: true
          type: string
        transitioningToStatus:
          $ref: '#/components/schemas/UserStatus'
        type:
          $ref: '#/components/schemas/UserType'
      type: object
      x-okta-crud:
      - alias: create
        arguments:
        - dest: user
          self: true
        operationId: createUser
      - alias: read
        arguments: []
        operationId: getUser
      - alias: update
        arguments:
        - dest: userId
          src: id
        - dest: user
          self: true
        operationId: updateUser
      - alias: delete
        arguments:
        - dest: userId
          src: id
        - dest: user
          self: true
        operationId: deactivateOrDeleteUser
      x-okta-operations:
      - alias: listAppLinks
        arguments:
        - dest: userId
          src: id
        operationId: listAppLinks
      - alias: changePassword
        arguments:
        - dest: userId
          src: id
        operationId: changePassword
      - alias: changeRecoveryQuestion
        arguments:
        - dest: userId
          src: id
        operationId: changeRecoveryQuestion
      - alias: forgotPasswordSetNewPassword
        arguments:
        - dest: userId
          src: id
        operationId: forgotPasswordSetNewPassword
      - alias: forgotPasswordGenerateOneTimeToken
        arguments:
        - dest: userId
          src: id
        operationId: forgotPasswordGenerateOneTimeToken
      - alias: assignRole
        arguments:
        - dest: userId
          src: id
        operationId: assignRoleToUser
      - alias: getRole
        arguments:
        - dest: userId
          src: id
        operationId: getUserRole
      - alias: removeRole
        arguments:
        - dest: userId
          src: id
        operationId: removeRoleFromUser
      - alias: listGroupTargets
        arguments:
        - dest: userId
          src: id
        operationId: listGroupTargetsForRole
      - alias: removeGroupTarget
        arguments:
        - dest: userId
          src: id
        operationId: removeGroupTargetFromRole
      - alias: addGroupTarget
        arguments:
        - dest: userId
          src: id
        operationId: addGroupTargetToRole
      - alias: listAssignedRoles
        arguments:
        - dest: userId
          src: id
        operationId: listAssignedRolesForUser
      - alias: addAllAppsAsTarget
        arguments:
        - dest: userId
          src: id
        operationId: addAllAppsAsTargetToRole
      - alias: listGroups
        arguments:
        - dest: userId
          src: id
        operationId: listUserGroups
      - alias: listGrants
        arguments:
        - dest: userId
          src: id
        operationId: listUserGrants
      - alias: revokeGrants
        arguments:
        - dest: userId
          src: id
        operationId: revokeUserGrants
      - alias: revokeGrant
        arguments:
        - dest: userId
          src: id
        operationId: revokeUserGrant
      - alias: revokeGrantsForUserAndClient
        arguments:
        - dest: userId
          src: id
        operationId: revokeGrantsForUserAndClient
      - alias: listRefreshTokensForUserAndClient
        arguments:
        - dest: userId
          src: id
        operationId: listRefreshTokensForUserAndClient
      - alias: revokeTokenForUserAndClient
        arguments:
        - dest: userId
          src: id
        operationId: revokeTokenForUserAndClient
      - alias: getRefreshTokenForUserAndClient
        arguments:
        - dest: userId
          src: id
        operationId: getRefreshTokenForUserAndClient
      - alias: revokeTokensForUserAndClient
        arguments:
        - dest: userId
          src: id
        operationId: revokeTokensForUserAndClient
      - alias: listClients
        arguments:
        - dest: userId
          src: id
        operationId: listUserClients
      - alias: activate
        arguments:
        - dest: userId
          src: id
        operationId: activateUser
      - alias: reactivate
        arguments:
        - dest: userId
          src: id
        operationId: reactivateUser
      - alias: deactivate
        arguments:
        - dest: userId
          src: id
        operationId: deactivateUser
      - alias: suspend
        arguments:
        - dest: userId
          src: id
        operationId: suspendUser
      - alias: unsuspend
        arguments:
        - dest: userId
          src: id
        operationId: unsuspendUser
      - alias: resetPassword
        arguments:
        - dest: userId
          src: id
        operationId: resetPassword
      - alias: expirePassword
        arguments:
        - dest: userId
          src: id
        operationId: expirePassword
      - alias: expirePasswordAndGetTemporaryPassword
        arguments:
        - dest: userId
          src: id
        operationId: expirePasswordAndGetTemporaryPassword
      - alias: unlock
        arguments:
        - dest: userId
          src: id
        operationId: unlockUser
      - alias: resetFactors
        arguments:
        - dest: userId
          src: id
        operationId: resetFactors
      - alias: deleteFactor
        arguments:
        - dest: userId
          src: id
        operationId: deleteFactor
      - alias: addToGroup
        arguments:
        - dest: userId
          src: id
        description: Adds a user to a group with 'OKTA_GROUP' type
        operationId: addUserToGroup
      - alias: enrollFactor
        arguments:
        - dest: userId
          src: id
        operationId: enrollFactor
      - alias: listSupportedFactors
        arguments:
        - dest: userId
          src: id
        operationId: listSupportedFactors
      - alias: listFactors
        arguments:
        - dest: userId
          src: id
        operationId: listFactors
      - alias: listSupportedSecurityQuestions
        arguments:
        - dest: userId
          src: id
        operationId: listSupportedSecurityQuestions
      - alias: getFactor
        arguments:
        - dest: userId
          src: id
        operationId: getFactor
      - alias: setLinkedObject
        arguments:
        - dest: associatedUserId
          src: id
        operationId: setLinkedObjectForUser
      - alias: listIdentityProviders
        arguments:
        - dest: userId
          src: id
        operationId: listUserIdentityProviders
      - alias: getLinkedObjects
        arguments:
        - dest: userId
          src: id
        operationId: getLinkedObjectsForUser
      - alias: clearSessions
        arguments:
        - dest: userId
          src: id
        operationId: clearUserSessions
      - alias: removeLinkedObject
        arguments:
        - dest: userId
          src: id
        operationId: removeLinkedObjectForUser
      x-okta-tags:
      - User
    UserCredentials:
      properties:
        password:
          $ref: '#/components/schemas/PasswordCredential'
        provider:
          $ref: '#/components/schemas/AuthenticationProvider'
        recovery_question:
          $ref: '#/components/schemas/RecoveryQuestionCredential'
      type: object
      x-okta-tags:
      - User
    UserProfile:
      properties:
        city:
          type: string
        costCenter:
          type: string
        countryCode:
          type: string
        department:
          type: string
        displayName:
          type: string
        division:
          type: string
        email:
          type: string
        employeeNumber:
          type: string
        firstName:
          type: string
        honorificPrefix:
          type: string
        honorificSuffix:
          type: string
        lastName:
          type: string
        locale:
          type: string
        login:
          type: string
        manager:
          type: string
        managerId:
          type: string
        middleName:
          type: string
        mobilePhone:
          type: string
        nickName:
          type: string
        organization:
          type: string
        postalAddress:
          type: string
        preferredLanguage:
          type: string
        primaryPhone:
          type: string
        profileUrl:
          type: string
        secondEmail:
          type: string
        state:
          type: string
        streetAddress:
          type: string
        timezone:
          type: string
        title:
          type: string
        userType:
          type: string
        zipCode:
          type: string
      type: object
      x-okta-extensible: true
      x-okta-tags:
      - User
    UserStatus:
      enum:
      - ACTIVE
      - DEPROVISIONED
      - LOCKED_OUT
      - PASSWORD_EXPIRED
      - PROVISIONED
      - RECOVERY
      - STAGED
      - SUSPENDED
      type: string
      x-okta-tags:
      - User
    UserType:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          readOnly: true
          type: string
        default:
          readOnly: true
          type: boolean
        description:
          type: string
        displayName:
          type: string
        id:
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        lastUpdatedBy:
          readOnly: true
          type: string
        name:
          type: string
      type: object
      x-okta-crud:
      - alias: create
        arguments:
        - dest: userType
          self: true
        operationId: createUserType
      - alias: update
        arguments:
        - dest: typeId
          src: id
        - dest: userType
          self: true
        operationId: updateUserType
      - alias: read
        arguments:
        - dest: typeId
          src: id
        operationId: getUserType
      - alias: delete
        arguments:
        - dest: typeId
          src: id
        operationId: deleteUserType
      x-okta-operations:
      - alias: replaceUserType
        arguments:
        - dest: roleId
          src: id
        operationId: replaceUserType
      x-okta-tags:
      - UserType
    WsFederationApplication:
      properties:
        name:
          type: object
        settings:
          $ref: '#/components/schemas/WsFederationApplicationSettings'
      type: object
      x-okta-defined-as:
        name: template_wsfed
      x-okta-parent: '#/components/schemas/Application'
      x-okta-tags:
      - Application
    WsFederationApplicationSettings:
      properties:
        app:
          $ref: '#/components/schemas/WsFederationApplicationSettingsApplication'
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettings'
      x-okta-tags:
      - Application
    WsFederationApplicationSettingsApplication:
      properties:
        attributeStatements:
          type: string
        audienceRestriction:
          type: string
        authnContextClassRef:
          type: string
        groupFilter:
          type: string
        groupName:
          type: string
        groupValueFormat:
          type: string
        nameIDFormat:
          type: string
        realm:
          type: string
        siteURL:
          type: string
        usernameAttribute:
          type: string
        wReplyOverride:
          type: boolean
        wReplyURL:
          type: string
      type: object
      x-okta-parent: '#/components/schemas/ApplicationSettingsApplication'
      x-okta-tags:
      - Application
  securitySchemes:
    api_token:
      description: SSWS {API Token}
      in: header
      name: Authorization
      type: apiKey
  x-stackQL-resources:
    appinstancetargets:
      id: okta.group.appinstancetargets
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}
          response:
            openAPIDocKey: '204'
        insert:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}
          response:
            openAPIDocKey: '204'
      name: appinstancetargets
      title: appinstancetargets
    apps:
      id: okta.group.apps
      methods:
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}/apps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: apps
      title: apps
    apptargets:
      id: okta.group.apptargets
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}
          response:
            openAPIDocKey: '204'
        insert:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}
          response:
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: apptargets
      title: apptargets
    groups:
      id: okta.group.groups
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/{groupId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/groups
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/groups/{groupId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: groups
      title: groups
    grouptargets:
      id: okta.group.grouptargets
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}
          response:
            openAPIDocKey: '204'
        insert:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}
          response:
            openAPIDocKey: '204'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}/targets/groups
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: grouptargets
      title: grouptargets
    roles:
      id: okta.group.roles
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}/roles/{roleId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/groups/{groupId}/roles
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}/roles
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: roles
      title: roles
    ruleactivations:
      id: okta.group.ruleactivations
      methods:
        delete:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/groups/rules/{ruleId}/lifecycle/deactivate
          response:
            openAPIDocKey: '204'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/groups/rules/{ruleId}/lifecycle/activate
          response:
            openAPIDocKey: '204'
      name: ruleactivations
      title: ruleactivations
    rules:
      id: okta.group.rules
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/rules/{ruleId}
          response:
            openAPIDocKey: '202'
        get:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/rules/{ruleId}
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: POST
          path:
            $ref: /api/v1/groups/rules
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/rules
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/groups/rules/{ruleId}
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: rules
      title: rules
    users:
      id: okta.group.users
      methods:
        delete:
          operation:
            $ref: DELETE
          path:
            $ref: /api/v1/groups/{groupId}/users/{userId}
          response:
            openAPIDocKey: '204'
        insert:
          operation:
            $ref: PUT
          path:
            $ref: /api/v1/groups/{groupId}/users/{userId}
          response:
            openAPIDocKey: '204'
        list:
          operation:
            $ref: GET
          path:
            $ref: /api/v1/groups/{groupId}/users
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: users
      title: users
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta API
  version: 2.8.0
openapi: 3.0.1
paths:
  /api/v1/groups:
    get:
      description: Enumerates groups in your organization with pagination. A subset
        of groups can be returned that match a supported filter expression or query.
      operationId: listGroups
      parameters:
      - description: Searches the name property of groups for matching value
        in: query
        name: q
        schema:
          type: string
      - description: Filter expression for groups
        in: query
        name: search
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of groups
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of group results in a page
        in: query
        name: limit
        schema:
          default: 10000
          format: int32
          type: integer
      - description: If specified, it causes additional metadata to be included in
          the response.
        in: query
        name: expand
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Groups
      tags:
      - Group
    post:
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: Add Group
      tags:
      - Group
      x-codegen-request-body-name: group
  /api/v1/groups/rules:
    get:
      description: Lists all group rules for your organization.
      operationId: listGroupRules
      parameters:
      - description: Specifies the number of rule results in a page
        in: query
        name: limit
        schema:
          default: 50
          format: int32
          type: integer
      - description: Specifies the pagination cursor for the next page of rules
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the keyword to search fules for
        in: query
        name: search
        schema:
          type: string
      - description: If specified as `groupIdToGroupNameMap`, then show group names
        in: query
        name: expand
        schema:
          type: string
          x-okta-added-version: 1.3.0
        x-okta-added-version: 1.3.0
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRule'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Group Rules
      tags:
      - Group
    post:
      description: Creates a group rule to dynamically add users to the specified
        group if they match the condition
      operationId: createGroupRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      summary: Create Group Rule
      tags:
      - Group
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}:
    delete:
      description: Removes a specific group rule by id from your organization
      operationId: deleteGroupRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      - description: Indicates whether to keep or remove users from groups assigned
          by this rule.
        in: query
        name: removeUsers
        schema:
          type: boolean
      responses:
        '202':
          content: {}
          description: Accepted
      security:
      - api_token: []
      summary: Delete a group Rule
      tags:
      - Group
    get:
      description: Fetches a specific group rule by id from your organization
      operationId: getGroupRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      summary: Get Group Rule
      tags:
      - Group
    put:
      description: Updates a group rule. Only `INACTIVE` rules can be updated.
      operationId: updateGroupRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRule'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRule'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-codegen-request-body-name: groupRule
  /api/v1/groups/rules/{ruleId}/lifecycle/activate:
    post:
      description: Activates a specific group rule by id from your organization
      operationId: activateGroupRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Activate a group Rule
      tags:
      - Group
  /api/v1/groups/rules/{ruleId}/lifecycle/deactivate:
    post:
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateGroupRule
      parameters:
      - in: path
        name: ruleId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Deactivate a group Rule
      tags:
      - Group
  /api/v1/groups/{groupId}:
    delete:
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Remove Group
      tags:
      - Group
    get:
      description: Fetches a group from your organization.
      operationId: getGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: List Group Rules
      tags:
      - Group
    put:
      description: Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: updateGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: Success
      security:
      - api_token: []
      summary: Update Group
      tags:
      - Group
      x-codegen-request-body-name: group
  /api/v1/groups/{groupId}/apps:
    get:
      description: Enumerates all applications that are assigned to a group.
      operationId: listAssignedApplicationsForGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of apps
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of app results for a page
        in: query
        name: limit
        schema:
          default: 20
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Assigned Applications
      tags:
      - Group
  /api/v1/groups/{groupId}/roles:
    get:
      description: Success
      operationId: listGroupAssignedRoles
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: query
        name: expand
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - Group
    post:
      description: Assigns a Role to a Group
      operationId: assignRoleToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: query
        name: disableNotifications
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRoleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
        '201':
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - Group
      x-codegen-request-body-name: assignRoleRequest
  /api/v1/groups/{groupId}/roles/{roleId}:
    delete:
      description: Unassigns a Role from a Group
      operationId: removeRoleFromGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
    get:
      description: Success
      operationId: getRole
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: Success
      security:
      - api_token: []
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps:
    get:
      description: Lists all App targets for an `APP_ADMIN` Role assigned to a Group.
        This methods return list may include full Applications or Instances. The response
        for an instance will have an `ID` value, while Application will not have an
        ID.
      operationId: listApplicationTargetsForApplicationAdministratorRoleForGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: query
        name: after
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: 20
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CatalogApplication'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}:
    delete:
      description: Success
      operationId: removeApplicationTargetFromApplicationAdministratorRoleGivenToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: appName
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
    put:
      description: Success
      operationId: addApplicationTargetToAdminRoleGivenToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: appName
        required: true
        schema:
          type: string
      responses:
        '200':
          content: {}
          description: Success
      security:
      - api_token: []
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/catalog/apps/{appName}/{applicationId}:
    delete:
      description: Remove App Instance Target to App Administrator Role given to a
        Group
      operationId: removeApplicationTargetFromAdministratorRoleGivenToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: appName
        required: true
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Remove App Instance Target to App Administrator Role given to a Group
      tags:
      - Group
    put:
      description: Add App Instance Target to App Administrator Role given to a Group
      operationId: addApplicationInstanceTargetToAppAdminRoleGivenToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: appName
        required: true
        schema:
          type: string
      - in: path
        name: applicationId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Add App Instance Target to App Administrator Role given to a Group
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups:
    get:
      description: Success
      operationId: listGroupTargetsForGroupRole
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: query
        name: after
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: 20
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - Group
  /api/v1/groups/{groupId}/roles/{roleId}/targets/groups/{targetGroupId}:
    delete:
      operationId: removeGroupTargetFromGroupAdministratorRoleGivenToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: targetGroupId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
    put:
      operationId: addGroupTargetToGroupAdministratorRoleForGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: roleId
        required: true
        schema:
          type: string
      - in: path
        name: targetGroupId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - Group
  /api/v1/groups/{groupId}/users:
    get:
      description: Enumerates all users that are a member of a group.
      operationId: listGroupUsers
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - description: Specifies the pagination cursor for the next page of users
        in: query
        name: after
        schema:
          type: string
      - description: Specifies the number of user results in a page
        in: query
        name: limit
        schema:
          default: 1000
          format: int32
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                type: array
          description: Success
      security:
      - api_token: []
      summary: List Group Members
      tags:
      - Group
  /api/v1/groups/{groupId}/users/{userId}:
    delete:
      description: Removes a user from a group with 'OKTA_GROUP' type.
      operationId: removeUserFromGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Remove User from Group
      tags:
      - Group
    put:
      description: Adds a user to a group with 'OKTA_GROUP' type.
      operationId: addUserToGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      summary: Add User to Group
      tags:
      - Group
servers:
- url: https://{subdomain}.okta.com/
  variables:
    subdomain:
      default: my-domain
