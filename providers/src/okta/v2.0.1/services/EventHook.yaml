components:
  schemas:
    EventHook:
      properties:
        _links:
          additionalProperties:
            properties: {}
            type: object
          readOnly: true
          type: object
        channel:
          $ref: '#/components/schemas/EventHookChannel'
        created:
          format: date-time
          readOnly: true
          type: string
        createdBy:
          type: string
        events:
          $ref: '#/components/schemas/EventSubscriptions'
        id:
          readOnly: true
          type: string
        lastUpdated:
          format: date-time
          readOnly: true
          type: string
        name:
          type: string
        status:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        verificationStatus:
          enum:
          - UNVERIFIED
          - VERIFIED
          type: string
      type: object
      x-okta-crud:
      - alias: create
        arguments:
        - dest: eventHook
          self: true
        operationId: createEventHook
      - alias: read
        arguments: []
        operationId: getEventHook
      - alias: update
        arguments:
        - dest: eventHookId
          src: id
        - dest: eventHook
          self: true
        operationId: updateEventHook
      - alias: delete
        arguments:
        - dest: eventHookId
          src: id
        operationId: deleteEventHook
      x-okta-operations:
      - alias: activate
        arguments:
        - dest: eventHookId
          src: id
        operationId: activateEventHook
      - alias: deactivate
        arguments:
        - dest: eventHookId
          src: id
        operationId: deactivateEventHook
      - alias: verify
        arguments:
        - dest: eventHookId
          src: id
        operationId: verifyEventHook
      x-okta-tags:
      - EventHook
    EventHookChannel:
      properties:
        config:
          $ref: '#/components/schemas/EventHookChannelConfig'
        type:
          enum:
          - HTTP
          type: string
        version:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventHookChannelConfig:
      properties:
        authScheme:
          $ref: '#/components/schemas/EventHookChannelConfigAuthScheme'
        headers:
          items:
            $ref: '#/components/schemas/EventHookChannelConfigHeader'
          type: array
        uri:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventHookChannelConfigAuthScheme:
      properties:
        key:
          type: string
        type:
          $ref: '#/components/schemas/EventHookChannelConfigAuthSchemeType'
        value:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventHookChannelConfigAuthSchemeType:
      enum:
      - HEADER
      type: string
      x-okta-tags:
      - EventHook
    EventHookChannelConfigHeader:
      properties:
        key:
          type: string
        value:
          type: string
      type: object
      x-okta-tags:
      - EventHook
    EventSubscriptions:
      discriminator:
        propertyName: type
      properties:
        items:
          items:
            type: string
          type: array
        type:
          enum:
          - EVENT_TYPE
          - FLOW_EVENT
          type: string
      type: object
      x-okta-tags:
      - EventHook
  securitySchemes:
    api_token:
      description: SSWS {API Token}
      in: header
      name: Authorization
      type: apiKey
  x-stackQL-resources:
    eventhooks:
      id: okta.eventhook.eventhooks
      methods:
        activate:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}~1lifecycle~1activate/POST'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        deactivate:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}~1lifecycle~1activate/POST'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}/DELETE'
          response:
            openAPIDocKey: '204'
        get:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}/GET'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        insert:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks/POST'
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        list:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks/GET'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}/PUT'
          request:
            mediaType: application/json
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        verify:
          operation:
            $ref: '#/paths/~1api~1v1~1eventHooks~1{eventHookId}~1lifecycle~1verify/POST'
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: eventhooks
      title: eventhooks
externalDocs:
  description: Find more info here
  url: https://developer.okta.com/docs/api/getting_started/design_principles.html
info:
  contact:
    email: devex-public@okta.com
    name: Okta Developer Team
    url: https://developer.okta.com/
  description: Allows customers to easily access the Okta API
  license:
    name: Apache-2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developer.okta.com/terms/
  title: Okta API
  version: 2.8.0
openapi: 3.0.1
paths:
  /api/v1/eventHooks:
    get:
      description: Success
      operationId: listEventHooks
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventHook'
                type: array
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
    post:
      description: Success
      operationId: createEventHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-codegen-request-body-name: eventHook
  /api/v1/eventHooks/{eventHookId}:
    delete:
      description: Success
      operationId: deleteEventHook
      parameters:
      - in: path
        name: eventHookId
        required: true
        schema:
          type: string
      responses:
        '204':
          content: {}
          description: No Content
      security:
      - api_token: []
      tags:
      - EventHook
    get:
      description: Success
      operationId: getEventHook
      parameters:
      - in: path
        name: eventHookId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
    put:
      description: Success
      operationId: updateEventHook
      parameters:
      - in: path
        name: eventHookId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventHook'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
      x-codegen-request-body-name: eventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/activate:
    post:
      description: Success
      operationId: activateEventHook
      parameters:
      - in: path
        name: eventHookId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/deactivate:
    post:
      description: Success
      operationId: deactivateEventHook
      parameters:
      - in: path
        name: eventHookId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
  /api/v1/eventHooks/{eventHookId}/lifecycle/verify:
    post:
      description: Success
      operationId: verifyEventHook
      parameters:
      - in: path
        name: eventHookId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHook'
          description: Success
      security:
      - api_token: []
      tags:
      - EventHook
servers:
- url: https://{subdomain}.okta.com/
  variables:
    subdomain:
      default: my-domain
