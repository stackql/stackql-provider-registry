openapi: 3.0.0
info:
  title: Inspector
  version: 1.0.0
paths: {}
components:
  schemas:
    AssessmentTarget:
      type: object
      properties:
        Arn:
          type: string
        AssessmentTargetName:
          type: string
        ResourceGroupArn:
          type: string
      x-stackql-resource-name: assessment_target
      description: Resource Type definition for AWS::Inspector::AssessmentTarget
      x-type-name: AWS::Inspector::AssessmentTarget
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - AssessmentTargetName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - inspector:CreateAssessmentTarget
          - inspector:ListAssessmentTargets
          - inspector:DescribeAssessmentTargets
        update:
          - inspector:DescribeAssessmentTargets
          - inspector:UpdateAssessmentTarget
        read:
          - inspector:DescribeAssessmentTargets
        delete:
          - inspector:DeleteAssessmentTarget
        list:
          - inspector:ListAssessmentTargets
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
      required:
        - Value
        - Key
    AssessmentTemplate:
      type: object
      properties:
        Arn:
          type: string
        AssessmentTargetArn:
          type: string
        DurationInSeconds:
          type: integer
        AssessmentTemplateName:
          type: string
        RulesPackageArns:
          type: array
          uniqueItems: false
          items:
            type: string
        UserAttributesForFindings:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AssessmentTargetArn
        - DurationInSeconds
        - RulesPackageArns
      x-stackql-resource-name: assessment_template
      description: Resource Type definition for AWS::Inspector::AssessmentTemplate
      x-type-name: AWS::Inspector::AssessmentTemplate
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DurationInSeconds
        - AssessmentTemplateName
        - UserAttributesForFindings
        - AssessmentTargetArn
        - RulesPackageArns
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AssessmentTargetArn
        - DurationInSeconds
        - RulesPackageArns
      x-required-permissions:
        create:
          - inspector:CreateAssessmentTemplate
          - inspector:ListAssessmentTemplates
          - inspector:DescribeAssessmentTemplates
        read:
          - inspector:DescribeAssessmentTemplates
        delete:
          - inspector:DeleteAssessmentTemplate
        list:
          - inspector:ListAssessmentTemplates
    ResourceGroup:
      type: object
      properties:
        Arn:
          type: string
        ResourceGroupTags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ResourceGroupTags
      x-stackql-resource-name: resource_group
      description: Resource Type definition for AWS::Inspector::ResourceGroup
      x-type-name: AWS::Inspector::ResourceGroup
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ResourceGroupTags
      x-read-only-properties:
        - Arn
      x-required-properties:
        - ResourceGroupTags
      x-required-permissions:
        create:
          - inspector:CreateResourceGroup
        read:
          - inspector:CreateResourceGroup
        delete:
          - inspector:CreateResourceGroup
  x-stackQL-resources:
    assessment_targets:
      name: assessment_targets
      id: aws.inspector.assessment_targets
      x-cfn-schema-name: AssessmentTarget
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Inspector::AssessmentTarget'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Inspector::AssessmentTarget'
                AND region = 'us-east-1'
    assessment_target:
      name: assessment_target
      id: aws.inspector.assessment_target
      x-cfn-schema-name: AssessmentTarget
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AssessmentTargetName') as assessment_target_name,
              JSON_EXTRACT(Properties, '$.ResourceGroupArn') as resource_group_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Inspector::AssessmentTarget'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'AssessmentTargetName') as assessment_target_name,
                json_extract_path_text(Properties, 'ResourceGroupArn') as resource_group_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Inspector::AssessmentTarget'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    assessment_templates:
      name: assessment_templates
      id: aws.inspector.assessment_templates
      x-cfn-schema-name: AssessmentTemplate
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Inspector::AssessmentTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Inspector::AssessmentTemplate'
                AND region = 'us-east-1'
    assessment_template:
      name: assessment_template
      id: aws.inspector.assessment_template
      x-cfn-schema-name: AssessmentTemplate
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AssessmentTargetArn') as assessment_target_arn,
              JSON_EXTRACT(Properties, '$.DurationInSeconds') as duration_in_seconds,
              JSON_EXTRACT(Properties, '$.AssessmentTemplateName') as assessment_template_name,
              JSON_EXTRACT(Properties, '$.RulesPackageArns') as rules_package_arns,
              JSON_EXTRACT(Properties, '$.UserAttributesForFindings') as user_attributes_for_findings
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Inspector::AssessmentTemplate'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'AssessmentTargetArn') as assessment_target_arn,
                json_extract_path_text(Properties, 'DurationInSeconds') as duration_in_seconds,
                json_extract_path_text(Properties, 'AssessmentTemplateName') as assessment_template_name,
                json_extract_path_text(Properties, 'RulesPackageArns') as rules_package_arns,
                json_extract_path_text(Properties, 'UserAttributesForFindings') as user_attributes_for_findings
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Inspector::AssessmentTemplate'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    resource_group:
      name: resource_group
      id: aws.inspector.resource_group
      x-cfn-schema-name: ResourceGroup
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ResourceGroupTags') as resource_group_tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Inspector::ResourceGroup'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ResourceGroupTags') as resource_group_tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Inspector::ResourceGroup'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
