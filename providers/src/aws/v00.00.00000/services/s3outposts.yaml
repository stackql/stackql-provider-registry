openapi: 3.0.0
info:
  title: S3Outposts
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    VpcConfiguration:
      type: object
      additionalProperties: false
      properties:
        VpcId:
          description: Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests.
          type: string
          minLength: 1
          maxLength: 1024
    AccessPoint:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the specified AccessPoint.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/accesspoint\/[^:]+$
          type: string
        Bucket:
          description: The Amazon Resource Name (ARN) of the bucket you want to associate this AccessPoint with.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        Name:
          description: A name for the AccessPoint.
          maxLength: 50
          minLength: 3
          pattern: ^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$
          type: string
        VpcConfiguration:
          description: Virtual Private Cloud (VPC) from which requests can be made to the AccessPoint.
          $ref: '#/components/schemas/VpcConfiguration'
        Policy:
          description: The access point policy associated with this access point.
          type: object
      required:
        - Bucket
        - Name
        - VpcConfiguration
      x-stackql-resource-name: access_point
      description: Resource Type Definition for AWS::S3Outposts::AccessPoint
      x-type-name: AWS::S3Outposts::AccessPoint
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Bucket
        - Name
        - VpcConfiguration
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Bucket
        - Name
        - VpcConfiguration
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - s3-outposts:CreateAccessPoint
          - s3-outposts:GetAccessPoint
          - s3-outposts:PutAccessPointPolicy
          - s3-outposts:GetAccessPointPolicy
        read:
          - s3-outposts:GetAccessPoint
          - s3-outposts:GetAccessPointPolicy
        update:
          - s3-outposts:GetAccessPoint
          - s3-outposts:PutAccessPointPolicy
          - s3-outposts:GetAccessPointPolicy
          - s3-outposts:DeleteAccessPointPolicy
        delete:
          - s3-outposts:DeleteAccessPoint
          - s3-outposts:DeleteAccessPointPolicy
        list:
          - s3-outposts:ListAccessPoints
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^(?!aws:.*)([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
        Value:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
      required:
        - Key
        - Value
    LifecycleConfiguration:
      type: object
      additionalProperties: false
      properties:
        Rules:
          description: A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Rule'
      required:
        - Rules
    Rule:
      description: 'Specifies lifecycle rules for an Amazon S3Outposts bucket. You must specify at least one of the following: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays.'
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
          enum:
            - Enabled
            - Disabled
        Id:
          type: string
          maxLength: 255
          description: Unique identifier for the lifecycle rule. The value can't be longer than 255 characters.
        AbortIncompleteMultipartUpload:
          description: Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
        ExpirationDate:
          description: Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
          $ref: '#/components/schemas/iso8601UTC'
        ExpirationInDays:
          description: Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
          type: integer
          minimum: 1
        Filter:
          description: The container for the filter of the lifecycle rule.
          type: object
          additionalProperties: false
          properties:
            Prefix:
              description: Object key prefix that identifies one or more objects to which this rule applies.
              $ref: '#/components/schemas/FilterPrefix'
            Tag:
              description: Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
              $ref: '#/components/schemas/FilterTag'
            AndOperator:
              description: The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
              $ref: '#/components/schemas/FilterAndOperator'
          oneOf:
            - required:
                - Prefix
            - required:
                - Tag
            - required:
                - AndOperator
      anyOf:
        - required:
            - Status
            - AbortIncompleteMultipartUpload
        - required:
            - Status
            - ExpirationDate
        - required:
            - Status
            - ExpirationInDays
    iso8601UTC:
      description: The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
      type: string
      pattern: ^([0-2]\d{3})-(0[0-9]|1[0-2])-([0-2]\d|3[01])T([01]\d|2[0-4]):([0-5]\d):([0-6]\d)((\.\d{3})?)Z$
    AbortIncompleteMultipartUpload:
      description: Specifies the days since the initiation of an incomplete multipart upload that Amazon S3Outposts will wait before permanently removing all parts of the upload.
      type: object
      additionalProperties: false
      properties:
        DaysAfterInitiation:
          description: Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload.
          type: integer
          minimum: 0
      required:
        - DaysAfterInitiation
    FilterPrefix:
      description: Prefix identifies one or more objects to which the rule applies.
      type: string
    FilterTag:
      description: Tag used to identify a subset of objects for an Amazon S3Outposts bucket.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
        Value:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^([\p{L}\p{Z}\p{N}_.:=+\/\-@%]*)$
      required:
        - Key
        - Value
    FilterAndOperator:
      oneOf:
        - type: object
          additionalProperties: false
          required:
            - Tags
          properties:
            Prefix:
              description: Prefix identifies one or more objects to which the rule applies.
              $ref: '#/components/schemas/FilterPrefix'
            Tags:
              description: All of these tags must exist in the object's tag set in order for the rule to apply.
              type: array
              x-insertionOrder: false
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/FilterTag'
    Bucket:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the specified bucket.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        BucketName:
          description: A name for the bucket.
          maxLength: 63
          minLength: 3
          pattern: (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
          type: string
        OutpostId:
          description: The id of the customer outpost on which the bucket resides.
          pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
          type: string
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this S3Outposts bucket.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          x-insertionOrder: false
          uniqueItems: true
        LifecycleConfiguration:
          description: Rules that define how Amazon S3Outposts manages objects during their lifetime.
          $ref: '#/components/schemas/LifecycleConfiguration'
      required:
        - BucketName
        - OutpostId
      x-stackql-resource-name: bucket
      description: Resource Type Definition for AWS::S3Outposts::Bucket
      x-type-name: AWS::S3Outposts::Bucket
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - BucketName
        - OutpostId
      x-read-only-properties:
        - Arn
      x-required-properties:
        - BucketName
        - OutpostId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - s3-outposts:DeleteBucketTagging
          - s3-outposts:PutBucketTagging
          - s3-outposts:GetBucketTagging
      x-required-permissions:
        create:
          - s3-outposts:CreateBucket
          - s3-outposts:PutBucketTagging
          - s3-outposts:PutLifecycleConfiguration
        read:
          - s3-outposts:GetBucket
          - s3-outposts:GetBucketTagging
          - s3-outposts:GetLifecycleConfiguration
        update:
          - s3-outposts:PutBucketTagging
          - s3-outposts:DeleteBucketTagging
          - s3-outposts:PutLifecycleConfiguration
        delete:
          - s3-outposts:DeleteBucket
        list:
          - s3-outposts:ListRegionalBuckets
    BucketPolicy:
      type: object
      properties:
        Bucket:
          description: The Amazon Resource Name (ARN) of the specified bucket.
          maxLength: 2048
          minLength: 20
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
          type: string
        PolicyDocument:
          description: A policy document containing permissions to add to the specified bucket.
          type: object
      required:
        - Bucket
        - PolicyDocument
      x-stackql-resource-name: bucket_policy
      description: Resource Type Definition for AWS::S3Outposts::BucketPolicy
      x-type-name: AWS::S3Outposts::BucketPolicy
      x-stackql-primary-identifier:
        - Bucket
      x-create-only-properties:
        - Bucket
      x-required-properties:
        - Bucket
        - PolicyDocument
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - s3-outposts:PutBucketPolicy
          - s3-outposts:GetBucketPolicy
        read:
          - s3-outposts:GetBucketPolicy
        update:
          - s3-outposts:PutBucketPolicy
          - s3-outposts:GetBucketPolicy
        delete:
          - s3-outposts:DeleteBucketPolicy
          - s3-outposts:GetBucketPolicy
    NetworkInterface:
      description: The container for the network interface.
      type: object
      additionalProperties: false
      properties:
        NetworkInterfaceId:
          type: string
          minLength: 1
          maxLength: 100
      required:
        - NetworkInterfaceId
    FailedReason:
      type: object
      additionalProperties: false
      properties:
        ErrorCode:
          type: string
          description: The failure code, if any, for a create or delete endpoint operation.
        Message:
          type: string
          description: Additional error details describing the endpoint failure and recommended action.
    Endpoint:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the endpoint.
          minLength: 5
          maxLength: 500
          type: string
          pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/endpoint/[a-zA-Z0-9]{19}$
        CidrBlock:
          description: The VPC CIDR committed by this endpoint.
          minLength: 1
          maxLength: 20
          type: string
        CreationTime:
          description: The time the endpoint was created.
          $ref: '#/components/schemas/iso8601UTC'
        Id:
          description: The ID of the endpoint.
          minLength: 5
          maxLength: 500
          type: string
          pattern: ^[a-zA-Z0-9]{19}$
        NetworkInterfaces:
          description: The network interfaces of the endpoint.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/NetworkInterface'
        OutpostId:
          description: The id of the customer outpost on which the bucket resides.
          pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
          type: string
        SecurityGroupId:
          description: The ID of the security group to use with the endpoint.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^sg-([0-9a-f]{8}|[0-9a-f]{17})$
        Status:
          type: string
          enum:
            - Available
            - Pending
            - Deleting
            - Create_Failed
            - Delete_Failed
        SubnetId:
          description: The ID of the subnet in the selected VPC. The subnet must belong to the Outpost.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
        AccessType:
          description: The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool.
          type: string
          enum:
            - CustomerOwnedIp
            - Private
          default: Private
        CustomerOwnedIpv4Pool:
          description: The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint.
          type: string
          pattern: ^ipv4pool-coip-([0-9a-f]{17})$
        FailedReason:
          description: The failure reason, if any, for a create or delete endpoint operation.
          $ref: '#/components/schemas/FailedReason'
      required:
        - OutpostId
        - SecurityGroupId
        - SubnetId
      x-stackql-resource-name: endpoint
      description: Resource Type Definition for AWS::S3Outposts::Endpoint
      x-type-name: AWS::S3Outposts::Endpoint
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - OutpostId
        - SecurityGroupId
        - SubnetId
        - AccessType
        - CustomerOwnedIpv4Pool
      x-read-only-properties:
        - Arn
        - CidrBlock
        - CreationTime
        - Id
        - NetworkInterfaces
        - Status
      x-required-properties:
        - OutpostId
        - SecurityGroupId
        - SubnetId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - s3-outposts:CreateEndpoint
        read:
          - s3-outposts:ListEndpoints
        delete:
          - s3-outposts:DeleteEndpoint
        list:
          - s3-outposts:ListEndpoints
    CreateAccessPointRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the specified AccessPoint.
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/accesspoint\/[^:]+$
              type: string
            Bucket:
              description: The Amazon Resource Name (ARN) of the bucket you want to associate this AccessPoint with.
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
              type: string
            Name:
              description: A name for the AccessPoint.
              maxLength: 50
              minLength: 3
              pattern: ^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$
              type: string
            VpcConfiguration:
              description: Virtual Private Cloud (VPC) from which requests can be made to the AccessPoint.
              $ref: '#/components/schemas/VpcConfiguration'
            Policy:
              description: The access point policy associated with this access point.
              type: object
          x-stackQL-stringOnly: true
      x-title: CreateAccessPointRequest
      type: object
      required: []
    CreateBucketRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the specified bucket.
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
              type: string
            BucketName:
              description: A name for the bucket.
              maxLength: 63
              minLength: 3
              pattern: (?=^.{3,63}$)(?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
              type: string
            OutpostId:
              description: The id of the customer outpost on which the bucket resides.
              pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
              type: string
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this S3Outposts bucket.
              items:
                $ref: '#/components/schemas/Tag'
              type: array
              x-insertionOrder: false
              uniqueItems: true
            LifecycleConfiguration:
              description: Rules that define how Amazon S3Outposts manages objects during their lifetime.
              $ref: '#/components/schemas/LifecycleConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateBucketRequest
      type: object
      required: []
    CreateBucketPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Bucket:
              description: The Amazon Resource Name (ARN) of the specified bucket.
              maxLength: 2048
              minLength: 20
              pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/bucket\/[^:]+$
              type: string
            PolicyDocument:
              description: A policy document containing permissions to add to the specified bucket.
              type: object
          x-stackQL-stringOnly: true
      x-title: CreateBucketPolicyRequest
      type: object
      required: []
    CreateEndpointRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the endpoint.
              minLength: 5
              maxLength: 500
              type: string
              pattern: ^arn:[^:]+:s3-outposts:[a-zA-Z0-9\-]+:\d{12}:outpost\/[^:]+\/endpoint/[a-zA-Z0-9]{19}$
            CidrBlock:
              description: The VPC CIDR committed by this endpoint.
              minLength: 1
              maxLength: 20
              type: string
            CreationTime:
              description: The time the endpoint was created.
              $ref: '#/components/schemas/iso8601UTC'
            Id:
              description: The ID of the endpoint.
              minLength: 5
              maxLength: 500
              type: string
              pattern: ^[a-zA-Z0-9]{19}$
            NetworkInterfaces:
              description: The network interfaces of the endpoint.
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/NetworkInterface'
            OutpostId:
              description: The id of the customer outpost on which the bucket resides.
              pattern: ^(op-[a-f0-9]{17}|\d{12}|ec2)$
              type: string
            SecurityGroupId:
              description: The ID of the security group to use with the endpoint.
              minLength: 1
              maxLength: 100
              type: string
              pattern: ^sg-([0-9a-f]{8}|[0-9a-f]{17})$
            Status:
              type: string
              enum:
                - Available
                - Pending
                - Deleting
                - Create_Failed
                - Delete_Failed
            SubnetId:
              description: The ID of the subnet in the selected VPC. The subnet must belong to the Outpost.
              minLength: 1
              maxLength: 100
              type: string
              pattern: ^subnet-([0-9a-f]{8}|[0-9a-f]{17})$
            AccessType:
              description: The type of access for the on-premise network connectivity for the Outpost endpoint. To access endpoint from an on-premises network, you must specify the access type and provide the customer owned Ipv4 pool.
              type: string
              enum:
                - CustomerOwnedIp
                - Private
              default: Private
            CustomerOwnedIpv4Pool:
              description: The ID of the customer-owned IPv4 pool for the Endpoint. IP addresses will be allocated from this pool for the endpoint.
              type: string
              pattern: ^ipv4pool-coip-([0-9a-f]{17})$
            FailedReason:
              description: The failure reason, if any, for a create or delete endpoint operation.
              $ref: '#/components/schemas/FailedReason'
          x-stackQL-stringOnly: true
      x-title: CreateEndpointRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    access_points:
      name: access_points
      id: aws.s3outposts.access_points
      x-cfn-schema-name: AccessPoint
      x-cfn-type-name: AWS::S3Outposts::AccessPoint
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AccessPoint&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::AccessPoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::AccessPoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::AccessPoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/access_points/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Bucket') as bucket,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.VpcConfiguration') as vpc_configuration,
              JSON_EXTRACT(Properties, '$.Policy') as policy
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::AccessPoint'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Bucket') as bucket,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.VpcConfiguration') as vpc_configuration,
                JSON_EXTRACT(detail.Properties, '$.Policy') as policy
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::S3Outposts::AccessPoint'
                AND detail.data__TypeName = 'AWS::S3Outposts::AccessPoint'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Bucket') as bucket,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'VpcConfiguration') as vpc_configuration,
                  json_extract_path_text(Properties, 'Policy') as policy
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::AccessPoint'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Bucket') as bucket,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'VpcConfiguration') as vpc_configuration,
                    json_extract_path_text(detail.Properties, 'Policy') as policy
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::S3Outposts::AccessPoint'
                    AND detail.data__TypeName = 'AWS::S3Outposts::AccessPoint'
                    AND listing.region = 'us-east-1'
    access_points_list_only:
      name: access_points_list_only
      id: aws.s3outposts.access_points_list_only
      x-cfn-schema-name: AccessPoint
      x-cfn-type-name: AWS::S3Outposts::AccessPoint
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::AccessPoint'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::AccessPoint'
                AND region = 'us-east-1'
    buckets:
      name: buckets
      id: aws.s3outposts.buckets
      x-cfn-schema-name: Bucket
      x-cfn-type-name: AWS::S3Outposts::Bucket
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Bucket&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::Bucket"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::Bucket"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::Bucket"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/buckets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(Properties, '$.OutpostId') as outpost_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LifecycleConfiguration') as lifecycle_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::Bucket'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.BucketName') as bucket_name,
                JSON_EXTRACT(detail.Properties, '$.OutpostId') as outpost_id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.LifecycleConfiguration') as lifecycle_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::S3Outposts::Bucket'
                AND detail.data__TypeName = 'AWS::S3Outposts::Bucket'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'BucketName') as bucket_name,
                  json_extract_path_text(Properties, 'OutpostId') as outpost_id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'LifecycleConfiguration') as lifecycle_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::Bucket'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'BucketName') as bucket_name,
                    json_extract_path_text(detail.Properties, 'OutpostId') as outpost_id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'LifecycleConfiguration') as lifecycle_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::S3Outposts::Bucket'
                    AND detail.data__TypeName = 'AWS::S3Outposts::Bucket'
                    AND listing.region = 'us-east-1'
    buckets_list_only:
      name: buckets_list_only
      id: aws.s3outposts.buckets_list_only
      x-cfn-schema-name: Bucket
      x-cfn-type-name: AWS::S3Outposts::Bucket
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::Bucket'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::Bucket'
                AND region = 'us-east-1'
    bucket_tags:
      name: bucket_tags
      id: aws.s3outposts.bucket_tags
      x-cfn-schema-name: Bucket
      x-cfn-type-name: AWS::S3Outposts::Bucket
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.BucketName') as bucket_name,
              JSON_EXTRACT(detail.Properties, '$.OutpostId') as outpost_id,
              JSON_EXTRACT(detail.Properties, '$.LifecycleConfiguration') as lifecycle_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::S3Outposts::Bucket'
              AND detail.data__TypeName = 'AWS::S3Outposts::Bucket'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'BucketName') as bucket_name,
                json_extract_path_text(detail.Properties, 'OutpostId') as outpost_id,
                json_extract_path_text(detail.Properties, 'LifecycleConfiguration') as lifecycle_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::S3Outposts::Bucket'
                AND detail.data__TypeName = 'AWS::S3Outposts::Bucket'
                AND listing.region = 'us-east-1'
    bucket_policies:
      name: bucket_policies
      id: aws.s3outposts.bucket_policies
      x-cfn-schema-name: BucketPolicy
      x-cfn-type-name: AWS::S3Outposts::BucketPolicy
      x-identifiers:
        - Bucket
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__BucketPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::BucketPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::BucketPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::BucketPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/bucket_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/bucket_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/bucket_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Bucket') as bucket,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::BucketPolicy'
              AND data__Identifier = '<Bucket>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Bucket') as bucket,
                json_extract_path_text(Properties, 'PolicyDocument') as policy_document
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::BucketPolicy'
                AND data__Identifier = '<Bucket>'
                AND region = 'us-east-1'
    endpoints:
      name: endpoints
      id: aws.s3outposts.endpoints
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::S3Outposts::Endpoint
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Endpoint&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::S3Outposts::Endpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/endpoints/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CidrBlock') as cidr_block,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.NetworkInterfaces') as network_interfaces,
              JSON_EXTRACT(Properties, '$.OutpostId') as outpost_id,
              JSON_EXTRACT(Properties, '$.SecurityGroupId') as security_group_id,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.SubnetId') as subnet_id,
              JSON_EXTRACT(Properties, '$.AccessType') as access_type,
              JSON_EXTRACT(Properties, '$.CustomerOwnedIpv4Pool') as customer_owned_ipv4_pool,
              JSON_EXTRACT(Properties, '$.FailedReason') as failed_reason
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::Endpoint'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CidrBlock') as cidr_block,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.NetworkInterfaces') as network_interfaces,
                JSON_EXTRACT(detail.Properties, '$.OutpostId') as outpost_id,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroupId') as security_group_id,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.SubnetId') as subnet_id,
                JSON_EXTRACT(detail.Properties, '$.AccessType') as access_type,
                JSON_EXTRACT(detail.Properties, '$.CustomerOwnedIpv4Pool') as customer_owned_ipv4_pool,
                JSON_EXTRACT(detail.Properties, '$.FailedReason') as failed_reason
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::S3Outposts::Endpoint'
                AND detail.data__TypeName = 'AWS::S3Outposts::Endpoint'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CidrBlock') as cidr_block,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'NetworkInterfaces') as network_interfaces,
                  json_extract_path_text(Properties, 'OutpostId') as outpost_id,
                  json_extract_path_text(Properties, 'SecurityGroupId') as security_group_id,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'SubnetId') as subnet_id,
                  json_extract_path_text(Properties, 'AccessType') as access_type,
                  json_extract_path_text(Properties, 'CustomerOwnedIpv4Pool') as customer_owned_ipv4_pool,
                  json_extract_path_text(Properties, 'FailedReason') as failed_reason
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::S3Outposts::Endpoint'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CidrBlock') as cidr_block,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'NetworkInterfaces') as network_interfaces,
                    json_extract_path_text(detail.Properties, 'OutpostId') as outpost_id,
                    json_extract_path_text(detail.Properties, 'SecurityGroupId') as security_group_id,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'SubnetId') as subnet_id,
                    json_extract_path_text(detail.Properties, 'AccessType') as access_type,
                    json_extract_path_text(detail.Properties, 'CustomerOwnedIpv4Pool') as customer_owned_ipv4_pool,
                    json_extract_path_text(detail.Properties, 'FailedReason') as failed_reason
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::S3Outposts::Endpoint'
                    AND detail.data__TypeName = 'AWS::S3Outposts::Endpoint'
                    AND listing.region = 'us-east-1'
    endpoints_list_only:
      name: endpoints_list_only
      id: aws.s3outposts.endpoints_list_only
      x-cfn-schema-name: Endpoint
      x-cfn-type-name: AWS::S3Outposts::Endpoint
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::Endpoint'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::S3Outposts::Endpoint'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AccessPoint&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAccessPoint
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAccessPointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Bucket&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateBucket
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateBucketRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__BucketPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateBucketPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateBucketPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Endpoint&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEndpoint
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEndpointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
