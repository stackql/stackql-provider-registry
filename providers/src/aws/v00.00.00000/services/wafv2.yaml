openapi: 3.0.0
info:
  title: WAFv2
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    EntityName:
      description: Name of the WebACL.
      type: string
      pattern: ^[0-9A-Za-z_-]{1,128}$
    EntityDescription:
      description: Description of the entity.
      type: string
      pattern: ^[a-zA-Z0-9=:#@/\-,.][a-zA-Z0-9+=:#@/\-,.\s]+[a-zA-Z0-9+=:#@/\-,.]{1,256}$
    EntityId:
      description: Id of the WebACL
      type: string
      pattern: ^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$
    Scope:
      description: Use CLOUDFRONT for CloudFront WebACL, use REGIONAL for Application Load Balancer and API Gateway.
      type: string
      enum:
        - CLOUDFRONT
        - REGIONAL
    IPAddressVersion:
      description: Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
      type: string
      enum:
        - IPV4
        - IPV6
    IPAddress:
      description: IP address
      type: string
      maxLength: 50
      minLength: 1
    ResourceArn:
      type: string
      minLength: 20
      maxLength: 2048
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
    IPSet:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        Description:
          $ref: '#/components/schemas/EntityDescription'
        Name:
          $ref: '#/components/schemas/EntityName'
        Id:
          $ref: '#/components/schemas/EntityId'
        Scope:
          $ref: '#/components/schemas/Scope'
        IPAddressVersion:
          $ref: '#/components/schemas/IPAddressVersion'
        Addresses:
          description: List of IPAddresses.
          type: array
          items:
            $ref: '#/components/schemas/IPAddress'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
      required:
        - Addresses
        - IPAddressVersion
        - Scope
      x-stackql-resource-name: ip_set
      description: Contains a list of IP addresses. This can be either IPV4 or IPV6. The list will be mutually
      x-type-name: AWS::WAFv2::IPSet
      x-stackql-primary-identifier:
        - Name
        - Id
        - Scope
      x-create-only-properties:
        - Name
        - Scope
      x-read-only-properties:
        - Arn
        - Id
      x-required-properties:
        - Addresses
        - IPAddressVersion
        - Scope
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagUpdatable: true
        taggable: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - wafv2:CreateIPSet
          - wafv2:GetIPSet
          - wafv2:ListTagsForResource
        delete:
          - wafv2:DeleteIPSet
          - wafv2:GetIPSet
        read:
          - wafv2:GetIPSet
          - wafv2:ListTagsForResource
        update:
          - wafv2:UpdateIPSet
          - wafv2:GetIPSet
          - wafv2:ListTagsForResource
          - wafv2:TagResource
          - wafv2:UntagResource
        list:
          - wafv2:listIPSets
    Filter:
      type: object
      properties:
        Behavior:
          description: 'How to handle logs that satisfy the filter''s conditions and requirement. '
          type: string
          enum:
            - KEEP
            - DROP
        Conditions:
          description: Match conditions for the filter.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Condition'
        Requirement:
          description: Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
          type: string
          enum:
            - MEETS_ALL
            - MEETS_ANY
      additionalProperties: false
      required:
        - Behavior
        - Conditions
        - Requirement
    Condition:
      type: object
      additionalProperties: false
      properties:
        ActionCondition:
          description: A single action condition.
          type: object
          additionalProperties: false
          properties:
            Action:
              description: Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
              type: string
              enum:
                - ALLOW
                - BLOCK
                - COUNT
                - CAPTCHA
                - CHALLENGE
                - EXCLUDED_AS_COUNT
          required:
            - Action
        LabelNameCondition:
          description: A single label name condition.
          type: object
          additionalProperties: false
          properties:
            LabelName:
              description: 'The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. '
              type: string
          required:
            - LabelName
    FieldToMatch:
      description: Field of the request to match.
      type: object
      properties:
        SingleHeader:
          type: object
          properties:
            Name:
              type: string
          required:
            - Name
          additionalProperties: false
        SingleQueryArgument:
          description: One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
          type: object
          properties:
            Name:
              type: string
          required:
            - Name
          additionalProperties: false
        AllQueryArguments:
          description: All query arguments of a web request.
          type: object
        UriPath:
          description: The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
          type: object
        QueryString:
          description: The query string of a web request. This is the part of a URL that appears after a ? character, if any.
          type: object
        Body:
          $ref: '#/components/schemas/Body'
        Method:
          description: The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
          type: object
        JsonBody:
          $ref: '#/components/schemas/JsonBody'
        Headers:
          $ref: '#/components/schemas/Headers'
        Cookies:
          $ref: '#/components/schemas/Cookies'
        JA3Fingerprint:
          $ref: '#/components/schemas/JA3Fingerprint'
      additionalProperties: false
    LoggingConfiguration:
      type: object
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
          type: string
        LogDestinationConfigs:
          description: The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
          type: array
          items:
            type: string
        RedactedFields:
          description: The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/FieldToMatch'
        ManagedByFirewallManager:
          description: Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
          type: boolean
        LoggingFilter:
          description: Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
          type: object
          additionalProperties: false
          properties:
            DefaultBehavior:
              description: Default handling for logs that don't match any of the specified filtering conditions.
              type: string
              enum:
                - KEEP
                - DROP
            Filters:
              description: The filters that you want to apply to the logs.
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/Filter'
          required:
            - DefaultBehavior
            - Filters
      required:
        - ResourceArn
        - LogDestinationConfigs
      x-stackql-resource-name: logging_configuration
      description: A WAFv2 Logging Configuration Resource Provider
      x-type-name: AWS::WAFv2::LoggingConfiguration
      x-stackql-primary-identifier:
        - ResourceArn
      x-create-only-properties:
        - ResourceArn
      x-read-only-properties:
        - ManagedByFirewallManager
      x-required-properties:
        - ResourceArn
        - LogDestinationConfigs
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - wafv2:PutLoggingConfiguration
          - wafv2:GetLoggingConfiguration
          - firehose:ListDeliveryStreams
          - iam:CreateServiceLinkedRole
          - iam:DescribeOrganization
          - logs:CreateLogDelivery
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
        read:
          - wafv2:GetLoggingConfiguration
        update:
          - wafv2:PutLoggingConfiguration
          - wafv2:GetLoggingConfiguration
          - firehose:ListDeliveryStreams
          - iam:CreateServiceLinkedRole
          - iam:DescribeOrganization
          - logs:CreateLogDelivery
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
        delete:
          - wafv2:DeleteLoggingConfiguration
          - wafv2:GetLoggingConfiguration
          - logs:DeleteLogDelivery
        list:
          - wafv2:ListLoggingConfigurations
    RegexPatternSet:
      type: object
      properties:
        Arn:
          description: ARN of the WAF entity.
          type: string
        Description:
          description: Description of the entity.
          type: string
          pattern: ^[a-zA-Z0-9=:#@/\-,.][a-zA-Z0-9+=:#@/\-,.\s]+[a-zA-Z0-9+=:#@/\-,.]{1,256}$
        Name:
          description: Name of the RegexPatternSet.
          type: string
          pattern: ^[0-9A-Za-z_-]{1,128}$
        Id:
          description: Id of the RegexPatternSet
          type: string
          pattern: ^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$
        RegularExpressionList:
          type: array
          items:
            type: string
        Scope:
          description: Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
          type: string
          enum:
            - CLOUDFRONT
            - REGIONAL
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
      required:
        - Scope
        - RegularExpressionList
      x-stackql-resource-name: regex_pattern_set
      description: Contains a list of Regular expressions based on the provided inputs. RegexPatternSet can be used with other WAF entities with RegexPatternSetReferenceStatement to perform other actions .
      x-type-name: AWS::WAFv2::RegexPatternSet
      x-stackql-primary-identifier:
        - Name
        - Id
        - Scope
      x-create-only-properties:
        - Name
        - Scope
      x-read-only-properties:
        - Arn
        - Id
      x-required-properties:
        - Scope
        - RegularExpressionList
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagUpdatable: true
        taggable: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - wafv2:CreateRegexPatternSet
          - wafv2:GetRegexPatternSet
          - wafv2:ListTagsForResource
        delete:
          - wafv2:DeleteRegexPatternSet
          - wafv2:GetRegexPatternSet
        read:
          - wafv2:GetRegexPatternSet
          - wafv2:ListTagsForResource
        update:
          - wafv2:UpdateRegexPatternSet
          - wafv2:GetRegexPatternSet
          - wafv2:ListTagsForResource
          - wafv2:TagResource
          - wafv2:UntagResource
        list:
          - wafv2:listRegexPatternSets
    AndStatement:
      type: object
      properties:
        Statements:
          type: array
          items:
            $ref: '#/components/schemas/Statement'
      required:
        - Statements
      additionalProperties: false
    ByteMatchStatement:
      description: Byte Match statement.
      type: object
      properties:
        SearchString:
          $ref: '#/components/schemas/SearchString'
        SearchStringBase64:
          $ref: '#/components/schemas/SearchStringBase64'
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
        PositionalConstraint:
          $ref: '#/components/schemas/PositionalConstraint'
      required:
        - FieldToMatch
        - PositionalConstraint
        - TextTransformations
      additionalProperties: false
    JsonBody:
      description: Inspect the request body as JSON. The request body immediately follows the request headers.
      type: object
      properties:
        MatchPattern:
          $ref: '#/components/schemas/JsonMatchPattern'
        MatchScope:
          $ref: '#/components/schemas/JsonMatchScope'
        InvalidFallbackBehavior:
          $ref: '#/components/schemas/BodyParsingFallbackBehavior'
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      required:
        - MatchPattern
        - MatchScope
      additionalProperties: false
    BodyParsingFallbackBehavior:
      description: The inspection behavior to fall back to if the JSON in the request body is invalid.
      type: string
      enum:
        - MATCH
        - NO_MATCH
        - EVALUATE_AS_STRING
    JsonMatchScope:
      description: The parts of the JSON to match against using the MatchPattern.
      type: string
      enum:
        - ALL
        - KEY
        - VALUE
    JsonMatchPattern:
      description: The pattern to look for in the JSON body.
      type: object
      properties:
        All:
          description: Inspect all parts of the web request's JSON body.
          type: object
        IncludedPaths:
          type: array
          items:
            $ref: '#/components/schemas/JsonPointerPath'
      additionalProperties: false
    JsonPointerPath:
      description: JSON pointer path in the web request's JSON body
      type: string
      pattern: ^[\/]+([^~]*(~[01])*)*{1,512}$
    GeoMatchStatement:
      type: object
      properties:
        CountryCodes:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 2
        ForwardedIPConfig:
          $ref: '#/components/schemas/ForwardedIPConfiguration'
      additionalProperties: false
    IPSetReferenceStatement:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        IPSetForwardedIPConfig:
          $ref: '#/components/schemas/IPSetForwardedIPConfiguration'
      required:
        - Arn
      additionalProperties: false
    NotStatement:
      type: object
      properties:
        Statement:
          $ref: '#/components/schemas/Statement'
      required:
        - Statement
      additionalProperties: false
    OrStatement:
      type: object
      properties:
        Statements:
          type: array
          items:
            $ref: '#/components/schemas/Statement'
      required:
        - Statements
      additionalProperties: false
    PositionalConstraint:
      description: Position of the evaluation in the FieldToMatch of request.
      type: string
      enum:
        - EXACTLY
        - STARTS_WITH
        - ENDS_WITH
        - CONTAINS
        - CONTAINS_WORD
    RateBasedStatement:
      type: object
      properties:
        Limit:
          $ref: '#/components/schemas/RateLimit'
        EvaluationWindowSec:
          $ref: '#/components/schemas/EvaluationWindowSec'
        AggregateKeyType:
          type: string
          enum:
            - CONSTANT
            - IP
            - FORWARDED_IP
            - CUSTOM_KEYS
        CustomKeys:
          description: Specifies the aggregate keys to use in a rate-base rule.
          type: array
          items:
            $ref: '#/components/schemas/RateBasedStatementCustomKey'
          maxItems: 5
        ScopeDownStatement:
          $ref: '#/components/schemas/Statement'
        ForwardedIPConfig:
          $ref: '#/components/schemas/ForwardedIPConfiguration'
      required:
        - Limit
        - AggregateKeyType
      additionalProperties: false
    RateBasedStatementCustomKey:
      description: Specifies a single custom aggregate key for a rate-base rule.
      type: object
      properties:
        Cookie:
          $ref: '#/components/schemas/RateLimitCookie'
        ForwardedIP:
          $ref: '#/components/schemas/RateLimitForwardedIP'
        Header:
          $ref: '#/components/schemas/RateLimitHeader'
        HTTPMethod:
          $ref: '#/components/schemas/RateLimitHTTPMethod'
        IP:
          $ref: '#/components/schemas/RateLimitIP'
        LabelNamespace:
          $ref: '#/components/schemas/RateLimitLabelNamespace'
        QueryArgument:
          $ref: '#/components/schemas/RateLimitQueryArgument'
        QueryString:
          $ref: '#/components/schemas/RateLimitQueryString'
        UriPath:
          $ref: '#/components/schemas/RateLimitUriPath'
      additionalProperties: false
    RateLimitCookie:
      description: Specifies a cookie as an aggregate key for a rate-based rule.
      type: object
      properties:
        Name:
          description: The name of the cookie to use.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 64
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - Name
        - TextTransformations
      additionalProperties: false
    RateLimitForwardedIP:
      description: Specifies the first IP address in an HTTP header as an aggregate key for a rate-based rule.
      type: object
    RateLimitHeader:
      description: Specifies a header as an aggregate key for a rate-based rule.
      type: object
      properties:
        Name:
          description: The name of the header to use.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 64
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - Name
        - TextTransformations
      additionalProperties: false
    RateLimitHTTPMethod:
      description: Specifies the request's HTTP method as an aggregate key for a rate-based rule.
      type: object
    RateLimitIP:
      description: Specifies the IP address in the web request as an aggregate key for a rate-based rule.
      type: object
    RateLimitLabelNamespace:
      description: Specifies a label namespace to use as an aggregate key for a rate-based rule.
      type: object
      properties:
        Namespace:
          description: The namespace to use for aggregation.
          type: string
          pattern: ^[0-9A-Za-z_:-]{1,1024}$
      required:
        - Namespace
      additionalProperties: false
    RateLimitQueryArgument:
      description: Specifies a query argument in the request as an aggregate key for a rate-based rule.
      type: object
      properties:
        Name:
          description: The name of the query argument to use.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 64
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - Name
        - TextTransformations
      additionalProperties: false
    RateLimitQueryString:
      description: Specifies the request's query string as an aggregate key for a rate-based rule.
      type: object
      properties:
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - TextTransformations
      additionalProperties: false
    RateLimitUriPath:
      description: Specifies the request's URI Path as an aggregate key for a rate-based rule.
      type: object
      properties:
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - TextTransformations
      additionalProperties: false
    RateLimit:
      type: integer
      minimum: 10
      maximum: 2000000000
    EvaluationWindowSec:
      type: integer
      enum:
        - 60
        - 120
        - 300
        - 600
    RegexPatternSetReferenceStatement:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - Arn
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    ForwardedIPConfiguration:
      type: object
      properties:
        HeaderName:
          type: string
          pattern: ^[a-zA-Z0-9-]+{1,255}$
        FallbackBehavior:
          type: string
          enum:
            - MATCH
            - NO_MATCH
      required:
        - HeaderName
        - FallbackBehavior
      additionalProperties: false
    IPSetForwardedIPConfiguration:
      type: object
      properties:
        HeaderName:
          type: string
          pattern: ^[a-zA-Z0-9-]+{1,255}$
        FallbackBehavior:
          type: string
          enum:
            - MATCH
            - NO_MATCH
        Position:
          type: string
          enum:
            - FIRST
            - LAST
            - ANY
      required:
        - HeaderName
        - FallbackBehavior
        - Position
      additionalProperties: false
    Rule:
      description: Rule of WebACL that contains condition and action.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
        Priority:
          $ref: '#/components/schemas/RulePriority'
        Statement:
          $ref: '#/components/schemas/Statement'
        Action:
          $ref: '#/components/schemas/RuleAction'
        OverrideAction:
          $ref: '#/components/schemas/OverrideAction'
        RuleLabels:
          description: Collection of Rule Labels.
          type: array
          items:
            $ref: '#/components/schemas/Label'
        VisibilityConfig:
          $ref: '#/components/schemas/VisibilityConfig'
        CaptchaConfig:
          $ref: '#/components/schemas/CaptchaConfig'
        ChallengeConfig:
          $ref: '#/components/schemas/ChallengeConfig'
      required:
        - Name
        - Priority
        - Statement
        - VisibilityConfig
      additionalProperties: false
    RuleAction:
      description: Action taken when Rule matches its condition.
      type: object
      properties:
        Allow:
          $ref: '#/components/schemas/AllowAction'
        Block:
          $ref: '#/components/schemas/BlockAction'
        Count:
          $ref: '#/components/schemas/CountAction'
        Captcha:
          $ref: '#/components/schemas/CaptchaAction'
        Challenge:
          $ref: '#/components/schemas/ChallengeAction'
      additionalProperties: false
    AllowAction:
      description: Allow traffic towards application.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    BlockAction:
      description: Block traffic towards application.
      type: object
      properties:
        CustomResponse:
          $ref: '#/components/schemas/CustomResponse'
      additionalProperties: false
    CountAction:
      description: Allow traffic towards application.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    CaptchaAction:
      description: Checks valid token exists with request.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    ChallengeAction:
      description: Checks that the request has a valid token with an unexpired challenge timestamp and, if not, returns a browser challenge to the client.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    CustomHTTPHeaderName:
      description: HTTP header name.
      type: string
      minLength: 1
      maxLength: 64
    CustomHTTPHeaderValue:
      description: HTTP header value.
      type: string
      minLength: 1
      maxLength: 255
    CustomHTTPHeader:
      description: HTTP header.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/CustomHTTPHeaderName'
        Value:
          $ref: '#/components/schemas/CustomHTTPHeaderValue'
      required:
        - Name
        - Value
      additionalProperties: false
    CustomRequestHandling:
      description: Custom request handling.
      type: object
      properties:
        InsertHeaders:
          description: Collection of HTTP headers.
          type: array
          items:
            $ref: '#/components/schemas/CustomHTTPHeader'
          minItems: 1
      required:
        - InsertHeaders
      additionalProperties: false
    ResponseStatusCode:
      description: Custom response code.
      type: integer
      minimum: 200
      maximum: 599
    ResponseContentType:
      description: Valid values are TEXT_PLAIN, TEXT_HTML, and APPLICATION_JSON.
      type: string
      enum:
        - TEXT_PLAIN
        - TEXT_HTML
        - APPLICATION_JSON
    ResponseContent:
      description: Response content.
      type: string
      minLength: 1
      maxLength: 10240
    CustomResponseBody:
      description: Custom response body.
      type: object
      properties:
        ContentType:
          $ref: '#/components/schemas/ResponseContentType'
        Content:
          $ref: '#/components/schemas/ResponseContent'
      required:
        - ContentType
        - Content
      additionalProperties: false
    CustomResponse:
      description: Custom response.
      type: object
      properties:
        ResponseCode:
          $ref: '#/components/schemas/ResponseStatusCode'
        CustomResponseBodyKey:
          description: Custom response body key.
          type: string
          pattern: ^[\w\-]+$
        ResponseHeaders:
          description: Collection of HTTP headers.
          type: array
          items:
            $ref: '#/components/schemas/CustomHTTPHeader'
          minItems: 1
      required:
        - ResponseCode
      additionalProperties: false
    CustomResponseBodies:
      description: Custom response key and body map.
      type: object
      x-patternProperties:
        ^[\w\-]+$:
          $ref: '#/components/schemas/CustomResponseBody'
      minProperties: 1
      additionalProperties: false
    RuleGroup:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        Capacity:
          type: integer
          minimum: 0
        Description:
          $ref: '#/components/schemas/EntityDescription'
        Name:
          $ref: '#/components/schemas/EntityName'
        Id:
          $ref: '#/components/schemas/EntityId'
        Scope:
          $ref: '#/components/schemas/Scope'
        Rules:
          description: Collection of Rules.
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        VisibilityConfig:
          $ref: '#/components/schemas/VisibilityConfig'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        LabelNamespace:
          $ref: '#/components/schemas/LabelName'
        CustomResponseBodies:
          $ref: '#/components/schemas/CustomResponseBodies'
        AvailableLabels:
          description: Collection of Available Labels.
          type: array
          items:
            $ref: '#/components/schemas/LabelSummary'
        ConsumedLabels:
          description: Collection of Consumed Labels.
          type: array
          items:
            $ref: '#/components/schemas/LabelSummary'
      required:
        - Capacity
        - Scope
        - VisibilityConfig
      x-stackql-resource-name: rule_group
      description: >-
        Contains the Rules that identify the requests that you want to allow, block, or count. In a RuleGroup, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a RuleGroup, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the RuleGroup with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a RuleGroup, a request
        needs to match only one of the specifications to be allowed, blocked, or counted.
      x-type-name: AWS::WAFv2::RuleGroup
      x-stackql-primary-identifier:
        - Name
        - Id
        - Scope
      x-create-only-properties:
        - Name
        - Scope
      x-read-only-properties:
        - Arn
        - Id
        - LabelNamespace
        - AvailableLabels/*/Name
        - ConsumedLabels/*/Name
      x-required-properties:
        - Capacity
        - Scope
        - VisibilityConfig
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagUpdatable: true
        taggable: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - wafv2:CreateRuleGroup
          - wafv2:GetRuleGroup
          - wafv2:ListTagsForResource
        delete:
          - wafv2:DeleteRuleGroup
          - wafv2:GetRuleGroup
        read:
          - wafv2:GetRuleGroup
          - wafv2:ListTagsForResource
        update:
          - wafv2:TagResource
          - wafv2:UntagResource
          - wafv2:UpdateRuleGroup
          - wafv2:GetRuleGroup
          - wafv2:ListTagsForResource
        list:
          - wafv2:listRuleGroups
    RulePriority:
      description: Priority of the Rule, Rules get evaluated from lower to higher priority.
      type: integer
      minimum: 0
    SearchString:
      description: String that is searched to find a match.
      type: string
    SearchStringBase64:
      description: Base64 encoded string that is searched to find a match.
      type: string
    SizeConstraintStatement:
      description: Size Constraint statement.
      type: object
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        ComparisonOperator:
          type: string
          enum:
            - EQ
            - NE
            - LE
            - LT
            - GE
            - GT
        Size:
          type: number
          minimum: 0
          maximum: 21474836480
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - FieldToMatch
        - ComparisonOperator
        - Size
        - TextTransformations
      additionalProperties: false
    SqliMatchStatement:
      description: Sqli Match Statement.
      type: object
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
        SensitivityLevel:
          $ref: '#/components/schemas/SensitivityLevel'
      required:
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    Statement:
      description: First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
      type: object
      properties:
        ByteMatchStatement:
          $ref: '#/components/schemas/ByteMatchStatement'
        SqliMatchStatement:
          $ref: '#/components/schemas/SqliMatchStatement'
        XssMatchStatement:
          $ref: '#/components/schemas/XssMatchStatement'
        SizeConstraintStatement:
          $ref: '#/components/schemas/SizeConstraintStatement'
        GeoMatchStatement:
          $ref: '#/components/schemas/GeoMatchStatement'
        RuleGroupReferenceStatement:
          $ref: '#/components/schemas/RuleGroupReferenceStatement'
        IPSetReferenceStatement:
          $ref: '#/components/schemas/IPSetReferenceStatement'
        RegexPatternSetReferenceStatement:
          $ref: '#/components/schemas/RegexPatternSetReferenceStatement'
        ManagedRuleGroupStatement:
          $ref: '#/components/schemas/ManagedRuleGroupStatement'
        RateBasedStatement:
          $ref: '#/components/schemas/RateBasedStatement'
        AndStatement:
          $ref: '#/components/schemas/AndStatement'
        OrStatement:
          $ref: '#/components/schemas/OrStatement'
        NotStatement:
          $ref: '#/components/schemas/NotStatement'
        LabelMatchStatement:
          $ref: '#/components/schemas/LabelMatchStatement'
        RegexMatchStatement:
          $ref: '#/components/schemas/RegexMatchStatement'
      additionalProperties: false
    TextTransformation:
      description: Text Transformation on the Search String before match.
      type: object
      properties:
        Priority:
          $ref: '#/components/schemas/TextTransformationPriority'
        Type:
          $ref: '#/components/schemas/TextTransformationType'
      required:
        - Priority
        - Type
      additionalProperties: false
    TextTransformationPriority:
      description: Priority of Rule being evaluated.
      type: integer
      minimum: 0
    TextTransformationType:
      description: Type of text transformation.
      type: string
      enum:
        - NONE
        - COMPRESS_WHITE_SPACE
        - HTML_ENTITY_DECODE
        - LOWERCASE
        - CMD_LINE
        - URL_DECODE
        - BASE64_DECODE
        - HEX_DECODE
        - MD5
        - REPLACE_COMMENTS
        - ESCAPE_SEQ_DECODE
        - SQL_HEX_DECODE
        - CSS_DECODE
        - JS_DECODE
        - NORMALIZE_PATH
        - NORMALIZE_PATH_WIN
        - REMOVE_NULLS
        - REPLACE_NULLS
        - BASE64_DECODE_EXT
        - URL_DECODE_UNI
        - UTF8_TO_UNICODE
    VisibilityConfig:
      description: Visibility Metric of the WebACL.
      type: object
      properties:
        SampledRequestsEnabled:
          type: boolean
        CloudWatchMetricsEnabled:
          type: boolean
        MetricName:
          type: string
          maxLength: 128
          minLength: 1
      required:
        - SampledRequestsEnabled
        - CloudWatchMetricsEnabled
        - MetricName
      additionalProperties: false
    XssMatchStatement:
      description: Xss Match Statement.
      type: object
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    LabelName:
      description: Name of the Label.
      type: string
      pattern: ^[0-9A-Za-z_:-]{1,1024}$
    LabelSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LabelName'
      additionalProperties: false
    Label:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LabelName'
      required:
        - Name
      additionalProperties: false
    LabelMatchKey:
      type: string
      pattern: ^[0-9A-Za-z_:-]{1,1024}$
    LabelMatchScope:
      type: string
      enum:
        - LABEL
        - NAMESPACE
    LabelMatchStatement:
      type: object
      properties:
        Scope:
          $ref: '#/components/schemas/LabelMatchScope'
        Key:
          $ref: '#/components/schemas/LabelMatchKey'
      required:
        - Scope
        - Key
      additionalProperties: false
    RegexMatchStatement:
      type: object
      properties:
        RegexString:
          type: string
          maxLength: 512
          minLength: 1
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - RegexString
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    CaptchaConfig:
      type: object
      properties:
        ImmunityTimeProperty:
          $ref: '#/components/schemas/ImmunityTimeProperty'
      additionalProperties: false
    ChallengeConfig:
      type: object
      properties:
        ImmunityTimeProperty:
          $ref: '#/components/schemas/ImmunityTimeProperty'
      additionalProperties: false
    ImmunityTimeProperty:
      type: object
      properties:
        ImmunityTime:
          type: integer
          minimum: 60
          maximum: 259200
      required:
        - ImmunityTime
      additionalProperties: false
    Body:
      description: The body of a web request. This immediately follows the request headers.
      type: object
      properties:
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      additionalProperties: false
    Headers:
      description: Includes headers of a web request.
      type: object
      properties:
        MatchPattern:
          $ref: '#/components/schemas/HeaderMatchPattern'
        MatchScope:
          $ref: '#/components/schemas/MapMatchScope'
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      required:
        - MatchPattern
        - MatchScope
        - OversizeHandling
      additionalProperties: false
    Cookies:
      description: Includes cookies of a web request.
      type: object
      properties:
        MatchPattern:
          $ref: '#/components/schemas/CookieMatchPattern'
        MatchScope:
          $ref: '#/components/schemas/MapMatchScope'
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      required:
        - MatchPattern
        - MatchScope
        - OversizeHandling
      additionalProperties: false
    HeaderMatchPattern:
      description: The pattern to look for in the request headers.
      type: object
      properties:
        All:
          description: Inspect all parts of the web request headers.
          type: object
        IncludedHeaders:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 64
          minItems: 1
          maxItems: 199
        ExcludedHeaders:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 64
          minItems: 1
          maxItems: 199
      additionalProperties: false
    CookieMatchPattern:
      description: The pattern to look for in the request cookies.
      type: object
      properties:
        All:
          description: Inspect all parts of the web request cookies.
          type: object
        IncludedCookies:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 60
          minItems: 1
          maxItems: 199
        ExcludedCookies:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 60
          minItems: 1
          maxItems: 199
      additionalProperties: false
    MapMatchScope:
      description: The parts of the request to match against using the MatchPattern.
      type: string
      enum:
        - ALL
        - KEY
        - VALUE
    OversizeHandling:
      description: Handling of requests containing oversize fields
      type: string
      enum:
        - CONTINUE
        - MATCH
        - NO_MATCH
    SensitivityLevel:
      description: Sensitivity Level current only used for sqli match statements.
      type: string
      enum:
        - LOW
        - HIGH
    JA3Fingerprint:
      description: Includes the JA3 fingerprint of a web request.
      type: object
      properties:
        FallbackBehavior:
          type: string
          enum:
            - MATCH
            - NO_MATCH
      required:
        - FallbackBehavior
      additionalProperties: false
    DefaultAction:
      description: Default Action WebACL will take against ingress traffic when there is no matching Rule.
      type: object
      properties:
        Allow:
          $ref: '#/components/schemas/AllowAction'
        Block:
          $ref: '#/components/schemas/BlockAction'
      additionalProperties: false
    ExcludedRule:
      description: Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
      required:
        - Name
      additionalProperties: false
    RuleActionOverride:
      description: Action override for rules in the rule group.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
        ActionToUse:
          $ref: '#/components/schemas/RuleAction'
      required:
        - Name
        - ActionToUse
      additionalProperties: false
    ExcludedRules:
      type: array
      items:
        $ref: '#/components/schemas/ExcludedRule'
    ManagedRuleGroupStatement:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
        VendorName:
          type: string
        Version:
          type: string
          pattern: ^[\w#:\.\-/]+$
          minLength: 1
          maxLength: 64
        ExcludedRules:
          type: array
          items:
            $ref: '#/components/schemas/ExcludedRule'
        ScopeDownStatement:
          $ref: '#/components/schemas/Statement'
        ManagedRuleGroupConfigs:
          description: Collection of ManagedRuleGroupConfig.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleGroupConfig'
        RuleActionOverrides:
          description: Action overrides for rules in the rule group.
          type: array
          items:
            $ref: '#/components/schemas/RuleActionOverride'
          maxItems: 100
      required:
        - VendorName
        - Name
      additionalProperties: false
    OverrideAction:
      description: Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.
      type: object
      properties:
        Count:
          description: Count traffic towards application.
          type: object
        None:
          description: Keep the RuleGroup or ManagedRuleGroup behavior as is.
          type: object
      additionalProperties: false
    QueryString:
      type: object
    Rules:
      description: Collection of Rules.
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    RuleGroupReferenceStatement:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        ExcludedRules:
          type: array
          items:
            $ref: '#/components/schemas/ExcludedRule'
        RuleActionOverrides:
          description: Action overrides for rules in the rule group.
          type: array
          items:
            $ref: '#/components/schemas/RuleActionOverride'
          maxItems: 100
      required:
        - Arn
      additionalProperties: false
    SingleHeader:
      type: object
      properties:
        Name:
          type: string
      additionalProperties: false
    SingleQueryArgument:
      type: object
      properties:
        Name:
          type: string
      additionalProperties: false
    UriPath:
      type: object
    ManagedRuleGroupConfig:
      description: ManagedRuleGroupConfig.
      type: object
      properties:
        LoginPath:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 256
        PayloadType:
          type: string
          enum:
            - JSON
            - FORM_ENCODED
        UsernameField:
          $ref: '#/components/schemas/FieldIdentifier'
        PasswordField:
          $ref: '#/components/schemas/FieldIdentifier'
        AWSManagedRulesBotControlRuleSet:
          $ref: '#/components/schemas/AWSManagedRulesBotControlRuleSet'
        AWSManagedRulesATPRuleSet:
          $ref: '#/components/schemas/AWSManagedRulesATPRuleSet'
        AWSManagedRulesACFPRuleSet:
          $ref: '#/components/schemas/AWSManagedRulesACFPRuleSet'
      additionalProperties: false
    AWSManagedRulesBotControlRuleSet:
      description: Configures how to use the Bot Control managed rule group in the web ACL
      type: object
      properties:
        InspectionLevel:
          type: string
          enum:
            - COMMON
            - TARGETED
        EnableMachineLearning:
          type: boolean
      required:
        - InspectionLevel
      additionalProperties: false
    AWSManagedRulesATPRuleSet:
      description: Configures how to use the Account Takeover Prevention managed rule group in the web ACL
      type: object
      properties:
        LoginPath:
          type: string
        EnableRegexInPath:
          type: boolean
        RequestInspection:
          $ref: '#/components/schemas/RequestInspection'
        ResponseInspection:
          $ref: '#/components/schemas/ResponseInspection'
      required:
        - LoginPath
      additionalProperties: false
    AWSManagedRulesACFPRuleSet:
      description: Configures how to use the Account creation fraud prevention managed rule group in the web ACL
      type: object
      properties:
        CreationPath:
          type: string
        RegistrationPagePath:
          type: string
        RequestInspection:
          $ref: '#/components/schemas/RequestInspectionACFP'
        ResponseInspection:
          $ref: '#/components/schemas/ResponseInspection'
        EnableRegexInPath:
          type: boolean
      required:
        - CreationPath
        - RegistrationPagePath
        - RequestInspection
      additionalProperties: false
    RequestInspection:
      description: Configures the inspection of login requests
      type: object
      properties:
        PayloadType:
          type: string
          enum:
            - JSON
            - FORM_ENCODED
        UsernameField:
          $ref: '#/components/schemas/FieldIdentifier'
        PasswordField:
          $ref: '#/components/schemas/FieldIdentifier'
      required:
        - PayloadType
        - UsernameField
        - PasswordField
      additionalProperties: false
    RequestInspectionACFP:
      description: Configures the inspection of sign-up requests
      type: object
      properties:
        PayloadType:
          type: string
          enum:
            - JSON
            - FORM_ENCODED
        UsernameField:
          $ref: '#/components/schemas/FieldIdentifier'
        PasswordField:
          $ref: '#/components/schemas/FieldIdentifier'
        EmailField:
          $ref: '#/components/schemas/FieldIdentifier'
        PhoneNumberFields:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumberField'
        AddressFields:
          type: array
          items:
            $ref: '#/components/schemas/AddressField'
      required:
        - PayloadType
      additionalProperties: false
    ResponseInspection:
      description: Configures the inspection of login responses
      type: object
      properties:
        StatusCode:
          $ref: '#/components/schemas/ResponseInspectionStatusCode'
        Header:
          $ref: '#/components/schemas/ResponseInspectionHeader'
        BodyContains:
          $ref: '#/components/schemas/ResponseInspectionBodyContains'
        Json:
          $ref: '#/components/schemas/ResponseInspectionJson'
      additionalProperties: false
    ResponseInspectionStatusCode:
      description: Response status codes that indicate success or failure of a login request
      type: object
      properties:
        SuccessCodes:
          type: array
          items:
            type: integer
            minLength: 0
            maxLength: 999
          minItems: 1
          maxItems: 10
        FailureCodes:
          type: array
          items:
            type: integer
            minLength: 0
            maxLength: 999
          minItems: 1
          maxItems: 10
      required:
        - SuccessCodes
        - FailureCodes
      additionalProperties: false
    ResponseInspectionHeader:
      description: Response headers that indicate success or failure of a login request
      type: object
      properties:
        Name:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 200
        SuccessValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 3
        FailureValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 3
      required:
        - Name
        - SuccessValues
        - FailureValues
      additionalProperties: false
    ResponseInspectionBodyContains:
      description: Response body contents that indicate success or failure of a login request
      type: object
      properties:
        SuccessStrings:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
        FailureStrings:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
      required:
        - SuccessStrings
        - FailureStrings
      additionalProperties: false
    ResponseInspectionJson:
      description: Response JSON that indicate success or failure of a login request
      type: object
      properties:
        Identifier:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 512
        SuccessValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
        FailureValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
      required:
        - Identifier
        - SuccessValues
        - FailureValues
      additionalProperties: false
    TokenDomains:
      description: List of domains to accept in web request tokens, in addition to the domain of the protected resource.
      type: array
      items:
        type: string
        pattern: ^[\w\.\-/]+$
        minLength: 1
        maxLength: 253
    AssociationConfig:
      description: AssociationConfig for body inspection
      type: object
      properties:
        RequestBody:
          $ref: '#/components/schemas/RequestBody'
      additionalProperties: false
    RequestBody:
      type: object
      description: Map of AssociatedResourceType and RequestBodyAssociatedResourceTypeConfig
      x-patternProperties:
        ^(CLOUDFRONT|API_GATEWAY|COGNITO_USER_POOL|APP_RUNNER_SERVICE|VERIFIED_ACCESS_INSTANCE)$:
          $ref: '#/components/schemas/RequestBodyAssociatedResourceTypeConfig'
      additionalProperties: false
    RequestBodyAssociatedResourceTypeConfig:
      description: Configures the inspection size in the request body.
      type: object
      properties:
        DefaultSizeInspectionLimit:
          $ref: '#/components/schemas/SizeInspectionLimit'
      required:
        - DefaultSizeInspectionLimit
      additionalProperties: false
    SizeInspectionLimit:
      type: string
      enum:
        - KB_16
        - KB_32
        - KB_48
        - KB_64
    PhoneNumberField:
      $ref: '#/components/schemas/FieldIdentifier'
    AddressField:
      $ref: '#/components/schemas/FieldIdentifier'
    FieldIdentifier:
      type: object
      properties:
        Identifier:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 512
      required:
        - Identifier
      additionalProperties: false
    WebACL:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        Capacity:
          type: integer
          minimum: 0
        DefaultAction:
          $ref: '#/components/schemas/DefaultAction'
        Description:
          $ref: '#/components/schemas/EntityDescription'
        Name:
          $ref: '#/components/schemas/EntityName'
        Id:
          $ref: '#/components/schemas/EntityId'
        Scope:
          $ref: '#/components/schemas/Scope'
        Rules:
          description: Collection of Rules.
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        VisibilityConfig:
          $ref: '#/components/schemas/VisibilityConfig'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        LabelNamespace:
          $ref: '#/components/schemas/LabelName'
        CustomResponseBodies:
          $ref: '#/components/schemas/CustomResponseBodies'
        CaptchaConfig:
          $ref: '#/components/schemas/CaptchaConfig'
        ChallengeConfig:
          $ref: '#/components/schemas/ChallengeConfig'
        TokenDomains:
          $ref: '#/components/schemas/TokenDomains'
        AssociationConfig:
          $ref: '#/components/schemas/AssociationConfig'
      required:
        - DefaultAction
        - Scope
        - VisibilityConfig
      x-stackql-resource-name: web_acl
      description: >-
        Contains the Rules that identify the requests that you want to allow, block, or count. In a WebACL, you also specify a default action (ALLOW or BLOCK), and the action for each Rule that you add to a WebACL, for example, block requests from specified IP addresses or block requests from specified referrers. You also associate the WebACL with a CloudFront distribution to identify the requests that you want AWS WAF to filter. If you add more than one Rule to a WebACL, a request needs to
        match only one of the specifications to be allowed, blocked, or counted.
      x-type-name: AWS::WAFv2::WebACL
      x-stackql-primary-identifier:
        - Name
        - Id
        - Scope
      x-create-only-properties:
        - Name
        - Scope
      x-read-only-properties:
        - Arn
        - Capacity
        - Id
        - LabelNamespace
      x-required-properties:
        - DefaultAction
        - Scope
        - VisibilityConfig
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagUpdatable: true
        taggable: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - wafv2:CreateWebACL
          - wafv2:GetWebACL
          - wafv2:ListTagsForResource
        delete:
          - wafv2:DeleteWebACL
          - wafv2:GetWebACL
        read:
          - wafv2:GetWebACL
          - wafv2:ListTagsForResource
        update:
          - wafv2:UpdateWebACL
          - wafv2:GetWebACL
          - wafv2:ListTagsForResource
          - wafv2:TagResource
          - wafv2:UntagResource
        list:
          - wafv2:listWebACLs
    WebACLAssociation:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
        WebACLArn:
          $ref: '#/components/schemas/ResourceArn'
      required:
        - ResourceArn
        - WebACLArn
      x-stackql-resource-name: webacl_association
      description: Associates WebACL to Application Load Balancer, CloudFront or API Gateway.
      x-type-name: AWS::WAFv2::WebACLAssociation
      x-stackql-primary-identifier:
        - ResourceArn
        - WebACLArn
      x-create-only-properties:
        - ResourceArn
        - WebACLArn
      x-required-properties:
        - ResourceArn
        - WebACLArn
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - wafv2:AssociateWebACL
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
          - wafv2:DisassociateWebACL
          - elasticloadbalancing:SetWebACL
          - apigateway:SetWebACL
          - appsync:SetWebACL
          - cognito-idp:AssociateWebACL
          - cognito-idp:DisassociateWebACL
          - cognito-idp:GetWebACLForResource
          - apprunner:AssociateWebAcl
          - apprunner:DisassociateWebAcl
          - apprunner:DescribeWebAclForService
          - ec2:AssociateVerifiedAccessInstanceWebAcl
          - ec2:DisassociateVerifiedAccessInstanceWebAcl
          - ec2:DescribeVerifiedAccessInstanceWebAclAssociations
          - ec2:GetVerifiedAccessInstanceWebAcl
        delete:
          - wafv2:AssociateWebACL
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
          - wafv2:DisassociateWebACL
          - elasticloadbalancing:SetWebACL
          - apigateway:SetWebACL
          - appsync:SetWebACL
          - cognito-idp:AssociateWebACL
          - cognito-idp:DisassociateWebACL
          - cognito-idp:GetWebACLForResource
          - apprunner:AssociateWebAcl
          - apprunner:DisassociateWebAcl
          - apprunner:DescribeWebAclForService
          - ec2:AssociateVerifiedAccessInstanceWebAcl
          - ec2:DisassociateVerifiedAccessInstanceWebAcl
          - ec2:DescribeVerifiedAccessInstanceWebAclAssociations
          - ec2:GetVerifiedAccessInstanceWebAcl
        read:
          - wafv2:AssociateWebACL
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
          - wafv2:DisassociateWebACL
          - elasticloadbalancing:SetWebACL
          - apigateway:SetWebACL
          - appsync:SetWebACL
          - cognito-idp:AssociateWebACL
          - cognito-idp:DisassociateWebACL
          - cognito-idp:GetWebACLForResource
          - apprunner:AssociateWebAcl
          - apprunner:DisassociateWebAcl
          - apprunner:DescribeWebAclForService
          - ec2:AssociateVerifiedAccessInstanceWebAcl
          - ec2:DisassociateVerifiedAccessInstanceWebAcl
          - ec2:DescribeVerifiedAccessInstanceWebAclAssociations
          - ec2:GetVerifiedAccessInstanceWebAcl
        update:
          - wafv2:AssociateWebACL
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
          - wafv2:DisassociateWebACL
          - elasticloadbalancing:SetWebACL
          - apigateway:SetWebACL
          - appsync:SetWebACL
          - cognito-idp:AssociateWebACL
          - cognito-idp:DisassociateWebACL
          - cognito-idp:GetWebACLForResource
          - apprunner:AssociateWebAcl
          - apprunner:DisassociateWebAcl
          - apprunner:DescribeWebAclForService
          - ec2:AssociateVerifiedAccessInstanceWebAcl
          - ec2:DisassociateVerifiedAccessInstanceWebAcl
          - ec2:DescribeVerifiedAccessInstanceWebAclAssociations
          - ec2:GetVerifiedAccessInstanceWebAcl
    CreateIPSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/ResourceArn'
            Description:
              $ref: '#/components/schemas/EntityDescription'
            Name:
              $ref: '#/components/schemas/EntityName'
            Id:
              $ref: '#/components/schemas/EntityId'
            Scope:
              $ref: '#/components/schemas/Scope'
            IPAddressVersion:
              $ref: '#/components/schemas/IPAddressVersion'
            Addresses:
              description: List of IPAddresses.
              type: array
              items:
                $ref: '#/components/schemas/IPAddress'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
          x-stackQL-stringOnly: true
      x-title: CreateIPSetRequest
      type: object
      required: []
    CreateLoggingConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ResourceArn:
              description: The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
              type: string
            LogDestinationConfigs:
              description: The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
              type: array
              items:
                type: string
            RedactedFields:
              description: The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/FieldToMatch'
            ManagedByFirewallManager:
              description: Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
              type: boolean
            LoggingFilter:
              description: Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
              type: object
              additionalProperties: false
              properties:
                DefaultBehavior:
                  description: Default handling for logs that don't match any of the specified filtering conditions.
                  type: string
                  enum:
                    - KEEP
                    - DROP
                Filters:
                  description: The filters that you want to apply to the logs.
                  type: array
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/Filter'
              required:
                - DefaultBehavior
                - Filters
          x-stackQL-stringOnly: true
      x-title: CreateLoggingConfigurationRequest
      type: object
      required: []
    CreateRegexPatternSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: ARN of the WAF entity.
              type: string
            Description:
              description: Description of the entity.
              type: string
              pattern: ^[a-zA-Z0-9=:#@/\-,.][a-zA-Z0-9+=:#@/\-,.\s]+[a-zA-Z0-9+=:#@/\-,.]{1,256}$
            Name:
              description: Name of the RegexPatternSet.
              type: string
              pattern: ^[0-9A-Za-z_-]{1,128}$
            Id:
              description: Id of the RegexPatternSet
              type: string
              pattern: ^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$
            RegularExpressionList:
              type: array
              items:
                type: string
            Scope:
              description: Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
              type: string
              enum:
                - CLOUDFRONT
                - REGIONAL
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
          x-stackQL-stringOnly: true
      x-title: CreateRegexPatternSetRequest
      type: object
      required: []
    CreateRuleGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/ResourceArn'
            Capacity:
              type: integer
              minimum: 0
            Description:
              $ref: '#/components/schemas/EntityDescription'
            Name:
              $ref: '#/components/schemas/EntityName'
            Id:
              $ref: '#/components/schemas/EntityId'
            Scope:
              $ref: '#/components/schemas/Scope'
            Rules:
              description: Collection of Rules.
              type: array
              items:
                $ref: '#/components/schemas/Rule'
            VisibilityConfig:
              $ref: '#/components/schemas/VisibilityConfig'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
            LabelNamespace:
              $ref: '#/components/schemas/LabelName'
            CustomResponseBodies:
              $ref: '#/components/schemas/CustomResponseBodies'
            AvailableLabels:
              description: Collection of Available Labels.
              type: array
              items:
                $ref: '#/components/schemas/LabelSummary'
            ConsumedLabels:
              description: Collection of Consumed Labels.
              type: array
              items:
                $ref: '#/components/schemas/LabelSummary'
          x-stackQL-stringOnly: true
      x-title: CreateRuleGroupRequest
      type: object
      required: []
    CreateWebACLRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/ResourceArn'
            Capacity:
              type: integer
              minimum: 0
            DefaultAction:
              $ref: '#/components/schemas/DefaultAction'
            Description:
              $ref: '#/components/schemas/EntityDescription'
            Name:
              $ref: '#/components/schemas/EntityName'
            Id:
              $ref: '#/components/schemas/EntityId'
            Scope:
              $ref: '#/components/schemas/Scope'
            Rules:
              description: Collection of Rules.
              type: array
              items:
                $ref: '#/components/schemas/Rule'
            VisibilityConfig:
              $ref: '#/components/schemas/VisibilityConfig'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
            LabelNamespace:
              $ref: '#/components/schemas/LabelName'
            CustomResponseBodies:
              $ref: '#/components/schemas/CustomResponseBodies'
            CaptchaConfig:
              $ref: '#/components/schemas/CaptchaConfig'
            ChallengeConfig:
              $ref: '#/components/schemas/ChallengeConfig'
            TokenDomains:
              $ref: '#/components/schemas/TokenDomains'
            AssociationConfig:
              $ref: '#/components/schemas/AssociationConfig'
          x-stackQL-stringOnly: true
      x-title: CreateWebACLRequest
      type: object
      required: []
    CreateWebACLAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ResourceArn:
              $ref: '#/components/schemas/ResourceArn'
            WebACLArn:
              $ref: '#/components/schemas/ResourceArn'
          x-stackQL-stringOnly: true
      x-title: CreateWebACLAssociationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    ip_sets:
      name: ip_sets
      id: aws.wafv2.ip_sets
      x-cfn-schema-name: IPSet
      x-cfn-type-name: AWS::WAFv2::IPSet
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IPSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::IPSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::IPSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::IPSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ip_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope,
              JSON_EXTRACT(Properties, '$.IPAddressVersion') as ip_address_version,
              JSON_EXTRACT(Properties, '$.Addresses') as addresses,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::IPSet'
              AND data__Identifier = '<Name>|<Id>|<Scope>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
                JSON_EXTRACT(detail.Properties, '$.IPAddressVersion') as ip_address_version,
                JSON_EXTRACT(detail.Properties, '$.Addresses') as addresses,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WAFv2::IPSet'
                AND detail.data__TypeName = 'AWS::WAFv2::IPSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Scope') as scope,
                  json_extract_path_text(Properties, 'IPAddressVersion') as ip_address_version,
                  json_extract_path_text(Properties, 'Addresses') as addresses,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::IPSet'
                  AND data__Identifier = '<Name>|<Id>|<Scope>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Scope') as scope,
                    json_extract_path_text(detail.Properties, 'IPAddressVersion') as ip_address_version,
                    json_extract_path_text(detail.Properties, 'Addresses') as addresses,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WAFv2::IPSet'
                    AND detail.data__TypeName = 'AWS::WAFv2::IPSet'
                    AND listing.region = 'us-east-1'
    ip_sets_list_only:
      name: ip_sets_list_only
      id: aws.wafv2.ip_sets_list_only
      x-cfn-schema-name: IPSet
      x-cfn-type-name: AWS::WAFv2::IPSet
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::IPSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Scope') as scope
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::IPSet'
                AND region = 'us-east-1'
    ip_set_tags:
      name: ip_set_tags
      id: aws.wafv2.ip_set_tags
      x-cfn-schema-name: IPSet
      x-cfn-type-name: AWS::WAFv2::IPSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
              JSON_EXTRACT(detail.Properties, '$.IPAddressVersion') as ip_address_version,
              JSON_EXTRACT(detail.Properties, '$.Addresses') as addresses
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WAFv2::IPSet'
              AND detail.data__TypeName = 'AWS::WAFv2::IPSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Scope') as scope,
                json_extract_path_text(detail.Properties, 'IPAddressVersion') as ip_address_version,
                json_extract_path_text(detail.Properties, 'Addresses') as addresses
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WAFv2::IPSet'
                AND detail.data__TypeName = 'AWS::WAFv2::IPSet'
                AND listing.region = 'us-east-1'
    logging_configurations:
      name: logging_configurations
      id: aws.wafv2.logging_configurations
      x-cfn-schema-name: LoggingConfiguration
      x-cfn-type-name: AWS::WAFv2::LoggingConfiguration
      x-identifiers:
        - ResourceArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LoggingConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::LoggingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::LoggingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::LoggingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/logging_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/logging_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/logging_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.LogDestinationConfigs') as log_destination_configs,
              JSON_EXTRACT(Properties, '$.RedactedFields') as redacted_fields,
              JSON_EXTRACT(Properties, '$.ManagedByFirewallManager') as managed_by_firewall_manager,
              JSON_EXTRACT(Properties, '$.LoggingFilter') as logging_filter
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
              AND data__Identifier = '<ResourceArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ResourceArn') as resource_arn,
                JSON_EXTRACT(detail.Properties, '$.LogDestinationConfigs') as log_destination_configs,
                JSON_EXTRACT(detail.Properties, '$.RedactedFields') as redacted_fields,
                JSON_EXTRACT(detail.Properties, '$.ManagedByFirewallManager') as managed_by_firewall_manager,
                JSON_EXTRACT(detail.Properties, '$.LoggingFilter') as logging_filter
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
                AND detail.data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                  json_extract_path_text(Properties, 'LogDestinationConfigs') as log_destination_configs,
                  json_extract_path_text(Properties, 'RedactedFields') as redacted_fields,
                  json_extract_path_text(Properties, 'ManagedByFirewallManager') as managed_by_firewall_manager,
                  json_extract_path_text(Properties, 'LoggingFilter') as logging_filter
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
                  AND data__Identifier = '<ResourceArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ResourceArn') as resource_arn,
                    json_extract_path_text(detail.Properties, 'LogDestinationConfigs') as log_destination_configs,
                    json_extract_path_text(detail.Properties, 'RedactedFields') as redacted_fields,
                    json_extract_path_text(detail.Properties, 'ManagedByFirewallManager') as managed_by_firewall_manager,
                    json_extract_path_text(detail.Properties, 'LoggingFilter') as logging_filter
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
                    AND detail.data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
                    AND listing.region = 'us-east-1'
    logging_configurations_list_only:
      name: logging_configurations_list_only
      id: aws.wafv2.logging_configurations_list_only
      x-cfn-schema-name: LoggingConfiguration
      x-cfn-type-name: AWS::WAFv2::LoggingConfiguration
      x-identifiers:
        - ResourceArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
                AND region = 'us-east-1'
    regex_pattern_sets:
      name: regex_pattern_sets
      id: aws.wafv2.regex_pattern_sets
      x-cfn-schema-name: RegexPatternSet
      x-cfn-type-name: AWS::WAFv2::RegexPatternSet
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RegexPatternSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::RegexPatternSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::RegexPatternSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::RegexPatternSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/regex_pattern_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/regex_pattern_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/regex_pattern_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RegularExpressionList') as regular_expression_list,
              JSON_EXTRACT(Properties, '$.Scope') as scope,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::RegexPatternSet'
              AND data__Identifier = '<Name>|<Id>|<Scope>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.RegularExpressionList') as regular_expression_list,
                JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                AND detail.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'RegularExpressionList') as regular_expression_list,
                  json_extract_path_text(Properties, 'Scope') as scope,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                  AND data__Identifier = '<Name>|<Id>|<Scope>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'RegularExpressionList') as regular_expression_list,
                    json_extract_path_text(detail.Properties, 'Scope') as scope,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                    AND detail.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                    AND listing.region = 'us-east-1'
    regex_pattern_sets_list_only:
      name: regex_pattern_sets_list_only
      id: aws.wafv2.regex_pattern_sets_list_only
      x-cfn-schema-name: RegexPatternSet
      x-cfn-type-name: AWS::WAFv2::RegexPatternSet
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::RegexPatternSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Scope') as scope
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                AND region = 'us-east-1'
    regex_pattern_set_tags:
      name: regex_pattern_set_tags
      id: aws.wafv2.regex_pattern_set_tags
      x-cfn-schema-name: RegexPatternSet
      x-cfn-type-name: AWS::WAFv2::RegexPatternSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.RegularExpressionList') as regular_expression_list,
              JSON_EXTRACT(detail.Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
              AND detail.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'RegularExpressionList') as regular_expression_list,
                json_extract_path_text(detail.Properties, 'Scope') as scope
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                AND detail.data__TypeName = 'AWS::WAFv2::RegexPatternSet'
                AND listing.region = 'us-east-1'
    rule_groups:
      name: rule_groups
      id: aws.wafv2.rule_groups
      x-cfn-schema-name: RuleGroup
      x-cfn-type-name: AWS::WAFv2::RuleGroup
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RuleGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::RuleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::RuleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::RuleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/rule_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/rule_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/rule_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.VisibilityConfig') as visibility_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LabelNamespace') as label_namespace,
              JSON_EXTRACT(Properties, '$.CustomResponseBodies') as custom_response_bodies,
              JSON_EXTRACT(Properties, '$.AvailableLabels') as available_labels,
              JSON_EXTRACT(Properties, '$.ConsumedLabels') as consumed_labels
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::RuleGroup'
              AND data__Identifier = '<Name>|<Id>|<Scope>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
                JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
                JSON_EXTRACT(detail.Properties, '$.VisibilityConfig') as visibility_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.LabelNamespace') as label_namespace,
                JSON_EXTRACT(detail.Properties, '$.CustomResponseBodies') as custom_response_bodies,
                JSON_EXTRACT(detail.Properties, '$.AvailableLabels') as available_labels,
                JSON_EXTRACT(detail.Properties, '$.ConsumedLabels') as consumed_labels
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WAFv2::RuleGroup'
                AND detail.data__TypeName = 'AWS::WAFv2::RuleGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Capacity') as capacity,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Scope') as scope,
                  json_extract_path_text(Properties, 'Rules') as rules,
                  json_extract_path_text(Properties, 'VisibilityConfig') as visibility_config,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'LabelNamespace') as label_namespace,
                  json_extract_path_text(Properties, 'CustomResponseBodies') as custom_response_bodies,
                  json_extract_path_text(Properties, 'AvailableLabels') as available_labels,
                  json_extract_path_text(Properties, 'ConsumedLabels') as consumed_labels
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::RuleGroup'
                  AND data__Identifier = '<Name>|<Id>|<Scope>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Scope') as scope,
                    json_extract_path_text(detail.Properties, 'Rules') as rules,
                    json_extract_path_text(detail.Properties, 'VisibilityConfig') as visibility_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'LabelNamespace') as label_namespace,
                    json_extract_path_text(detail.Properties, 'CustomResponseBodies') as custom_response_bodies,
                    json_extract_path_text(detail.Properties, 'AvailableLabels') as available_labels,
                    json_extract_path_text(detail.Properties, 'ConsumedLabels') as consumed_labels
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WAFv2::RuleGroup'
                    AND detail.data__TypeName = 'AWS::WAFv2::RuleGroup'
                    AND listing.region = 'us-east-1'
    rule_groups_list_only:
      name: rule_groups_list_only
      id: aws.wafv2.rule_groups_list_only
      x-cfn-schema-name: RuleGroup
      x-cfn-type-name: AWS::WAFv2::RuleGroup
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::RuleGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Scope') as scope
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::RuleGroup'
                AND region = 'us-east-1'
    rule_group_tags:
      name: rule_group_tags
      id: aws.wafv2.rule_group_tags
      x-cfn-schema-name: RuleGroup
      x-cfn-type-name: AWS::WAFv2::RuleGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
              JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
              JSON_EXTRACT(detail.Properties, '$.VisibilityConfig') as visibility_config,
              JSON_EXTRACT(detail.Properties, '$.LabelNamespace') as label_namespace,
              JSON_EXTRACT(detail.Properties, '$.CustomResponseBodies') as custom_response_bodies,
              JSON_EXTRACT(detail.Properties, '$.AvailableLabels') as available_labels,
              JSON_EXTRACT(detail.Properties, '$.ConsumedLabels') as consumed_labels
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WAFv2::RuleGroup'
              AND detail.data__TypeName = 'AWS::WAFv2::RuleGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Scope') as scope,
                json_extract_path_text(detail.Properties, 'Rules') as rules,
                json_extract_path_text(detail.Properties, 'VisibilityConfig') as visibility_config,
                json_extract_path_text(detail.Properties, 'LabelNamespace') as label_namespace,
                json_extract_path_text(detail.Properties, 'CustomResponseBodies') as custom_response_bodies,
                json_extract_path_text(detail.Properties, 'AvailableLabels') as available_labels,
                json_extract_path_text(detail.Properties, 'ConsumedLabels') as consumed_labels
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WAFv2::RuleGroup'
                AND detail.data__TypeName = 'AWS::WAFv2::RuleGroup'
                AND listing.region = 'us-east-1'
    web_acls:
      name: web_acls
      id: aws.wafv2.web_acls
      x-cfn-schema-name: WebACL
      x-cfn-type-name: AWS::WAFv2::WebACL
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__WebACL&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::WebACL"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::WebACL"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::WebACL"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/web_acls/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/web_acls/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/web_acls/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.DefaultAction') as default_action,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.VisibilityConfig') as visibility_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LabelNamespace') as label_namespace,
              JSON_EXTRACT(Properties, '$.CustomResponseBodies') as custom_response_bodies,
              JSON_EXTRACT(Properties, '$.CaptchaConfig') as captcha_config,
              JSON_EXTRACT(Properties, '$.ChallengeConfig') as challenge_config,
              JSON_EXTRACT(Properties, '$.TokenDomains') as token_domains,
              JSON_EXTRACT(Properties, '$.AssociationConfig') as association_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::WebACL'
              AND data__Identifier = '<Name>|<Id>|<Scope>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
                JSON_EXTRACT(detail.Properties, '$.DefaultAction') as default_action,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
                JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
                JSON_EXTRACT(detail.Properties, '$.VisibilityConfig') as visibility_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.LabelNamespace') as label_namespace,
                JSON_EXTRACT(detail.Properties, '$.CustomResponseBodies') as custom_response_bodies,
                JSON_EXTRACT(detail.Properties, '$.CaptchaConfig') as captcha_config,
                JSON_EXTRACT(detail.Properties, '$.ChallengeConfig') as challenge_config,
                JSON_EXTRACT(detail.Properties, '$.TokenDomains') as token_domains,
                JSON_EXTRACT(detail.Properties, '$.AssociationConfig') as association_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::WAFv2::WebACL'
                AND detail.data__TypeName = 'AWS::WAFv2::WebACL'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Capacity') as capacity,
                  json_extract_path_text(Properties, 'DefaultAction') as default_action,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Scope') as scope,
                  json_extract_path_text(Properties, 'Rules') as rules,
                  json_extract_path_text(Properties, 'VisibilityConfig') as visibility_config,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'LabelNamespace') as label_namespace,
                  json_extract_path_text(Properties, 'CustomResponseBodies') as custom_response_bodies,
                  json_extract_path_text(Properties, 'CaptchaConfig') as captcha_config,
                  json_extract_path_text(Properties, 'ChallengeConfig') as challenge_config,
                  json_extract_path_text(Properties, 'TokenDomains') as token_domains,
                  json_extract_path_text(Properties, 'AssociationConfig') as association_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::WebACL'
                  AND data__Identifier = '<Name>|<Id>|<Scope>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                    json_extract_path_text(detail.Properties, 'DefaultAction') as default_action,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Scope') as scope,
                    json_extract_path_text(detail.Properties, 'Rules') as rules,
                    json_extract_path_text(detail.Properties, 'VisibilityConfig') as visibility_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'LabelNamespace') as label_namespace,
                    json_extract_path_text(detail.Properties, 'CustomResponseBodies') as custom_response_bodies,
                    json_extract_path_text(detail.Properties, 'CaptchaConfig') as captcha_config,
                    json_extract_path_text(detail.Properties, 'ChallengeConfig') as challenge_config,
                    json_extract_path_text(detail.Properties, 'TokenDomains') as token_domains,
                    json_extract_path_text(detail.Properties, 'AssociationConfig') as association_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::WAFv2::WebACL'
                    AND detail.data__TypeName = 'AWS::WAFv2::WebACL'
                    AND listing.region = 'us-east-1'
    web_acls_list_only:
      name: web_acls_list_only
      id: aws.wafv2.web_acls_list_only
      x-cfn-schema-name: WebACL
      x-cfn-type-name: AWS::WAFv2::WebACL
      x-identifiers:
        - Name
        - Id
        - Scope
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::WebACL'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Scope') as scope
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::WebACL'
                AND region = 'us-east-1'
    web_acl_tags:
      name: web_acl_tags
      id: aws.wafv2.web_acl_tags
      x-cfn-schema-name: WebACL
      x-cfn-type-name: AWS::WAFv2::WebACL
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(detail.Properties, '$.DefaultAction') as default_action,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Scope') as scope,
              JSON_EXTRACT(detail.Properties, '$.Rules') as rules,
              JSON_EXTRACT(detail.Properties, '$.VisibilityConfig') as visibility_config,
              JSON_EXTRACT(detail.Properties, '$.LabelNamespace') as label_namespace,
              JSON_EXTRACT(detail.Properties, '$.CustomResponseBodies') as custom_response_bodies,
              JSON_EXTRACT(detail.Properties, '$.CaptchaConfig') as captcha_config,
              JSON_EXTRACT(detail.Properties, '$.ChallengeConfig') as challenge_config,
              JSON_EXTRACT(detail.Properties, '$.TokenDomains') as token_domains,
              JSON_EXTRACT(detail.Properties, '$.AssociationConfig') as association_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::WAFv2::WebACL'
              AND detail.data__TypeName = 'AWS::WAFv2::WebACL'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                json_extract_path_text(detail.Properties, 'DefaultAction') as default_action,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Scope') as scope,
                json_extract_path_text(detail.Properties, 'Rules') as rules,
                json_extract_path_text(detail.Properties, 'VisibilityConfig') as visibility_config,
                json_extract_path_text(detail.Properties, 'LabelNamespace') as label_namespace,
                json_extract_path_text(detail.Properties, 'CustomResponseBodies') as custom_response_bodies,
                json_extract_path_text(detail.Properties, 'CaptchaConfig') as captcha_config,
                json_extract_path_text(detail.Properties, 'ChallengeConfig') as challenge_config,
                json_extract_path_text(detail.Properties, 'TokenDomains') as token_domains,
                json_extract_path_text(detail.Properties, 'AssociationConfig') as association_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::WAFv2::WebACL'
                AND detail.data__TypeName = 'AWS::WAFv2::WebACL'
                AND listing.region = 'us-east-1'
    webacl_associations:
      name: webacl_associations
      id: aws.wafv2.webacl_associations
      x-cfn-schema-name: WebACLAssociation
      x-cfn-type-name: AWS::WAFv2::WebACLAssociation
      x-identifiers:
        - ResourceArn
        - WebACLArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__WebACLAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::WebACLAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::WebACLAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::WAFv2::WebACLAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/webacl_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/webacl_associations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/webacl_associations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.WebACLArn') as web_acl_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::WebACLAssociation'
              AND data__Identifier = '<ResourceArn>|<WebACLArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(Properties, 'WebACLArn') as web_acl_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::WebACLAssociation'
                AND data__Identifier = '<ResourceArn>|<WebACLArn>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IPSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIPSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIPSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LoggingConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLoggingConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLoggingConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RegexPatternSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRegexPatternSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRegexPatternSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RuleGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRuleGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRuleGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__WebACL&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWebACL
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWebACLRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__WebACLAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWebACLAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWebACLAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
