openapi: 3.0.0
info:
  title: WAFv2
  version: 1.0.0
paths: {}
components:
  schemas:
    EntityName:
      description: Name of the WebACL.
      type: string
      pattern: ^[0-9A-Za-z_-]{1,128}$
    EntityDescription:
      description: Description of the entity.
      type: string
      pattern: ^[a-zA-Z0-9=:#@/\-,.][a-zA-Z0-9+=:#@/\-,.\s]+[a-zA-Z0-9+=:#@/\-,.]{1,256}$
    EntityId:
      description: Id of the WebACL
      type: string
      pattern: ^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$
    Scope:
      description: Use CLOUDFRONT for CloudFront WebACL, use REGIONAL for Application Load Balancer and API Gateway.
      type: string
      enum:
        - CLOUDFRONT
        - REGIONAL
    IPAddressVersion:
      description: Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
      type: string
      enum:
        - IPV4
        - IPV6
    IPAddress:
      description: IP address
      type: string
      maxLength: 50
      minLength: 1
    ResourceArn:
      type: string
      minLength: 20
      maxLength: 2048
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
    IPSet:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        Description:
          $ref: '#/components/schemas/EntityDescription'
        Name:
          $ref: '#/components/schemas/EntityName'
        Id:
          $ref: '#/components/schemas/EntityId'
        Scope:
          $ref: '#/components/schemas/Scope'
        IPAddressVersion:
          $ref: '#/components/schemas/IPAddressVersion'
        Addresses:
          description: List of IPAddresses.
          type: array
          items:
            $ref: '#/components/schemas/IPAddress'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
      required:
        - Addresses
        - IPAddressVersion
        - Scope
      x-stackql-resource-name: ip_set
      x-stackql-primaryIdentifier:
        - Name
        - Id
        - Scope
    Filter:
      type: object
      properties:
        Behavior:
          description: 'How to handle logs that satisfy the filter''s conditions and requirement. '
          type: string
          enum:
            - KEEP
            - DROP
        Conditions:
          description: Match conditions for the filter.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Condition'
        Requirement:
          description: Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
          type: string
          enum:
            - MEETS_ALL
            - MEETS_ANY
      additionalProperties: false
      required:
        - Behavior
        - Conditions
        - Requirement
    Condition:
      type: object
      additionalProperties: false
      properties:
        ActionCondition:
          description: A single action condition.
          type: object
          additionalProperties: false
          properties:
            Action:
              description: Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
              type: string
              enum:
                - ALLOW
                - BLOCK
                - COUNT
                - CAPTCHA
                - CHALLENGE
                - EXCLUDED_AS_COUNT
          required:
            - Action
        LabelNameCondition:
          description: A single label name condition.
          type: object
          additionalProperties: false
          properties:
            LabelName:
              description: 'The label name that a log record must contain in order to meet the condition. This must be a fully qualified label name. Fully qualified labels have a prefix, optional namespaces, and label name. The prefix identifies the rule group or web ACL context of the rule that added the label. '
              type: string
          required:
            - LabelName
    FieldToMatch:
      description: Field of the request to match.
      type: object
      properties:
        SingleHeader:
          type: object
          properties:
            Name:
              type: string
          required:
            - Name
          additionalProperties: false
        SingleQueryArgument:
          description: One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
          type: object
          properties:
            Name:
              type: string
          required:
            - Name
          additionalProperties: false
        AllQueryArguments:
          description: All query arguments of a web request.
          type: object
        UriPath:
          description: The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
          type: object
        QueryString:
          description: The query string of a web request. This is the part of a URL that appears after a ? character, if any.
          type: object
        Body:
          $ref: '#/components/schemas/Body'
        Method:
          description: The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
          type: object
        JsonBody:
          $ref: '#/components/schemas/JsonBody'
        Headers:
          $ref: '#/components/schemas/Headers'
        Cookies:
          $ref: '#/components/schemas/Cookies'
      additionalProperties: false
    LoggingConfiguration:
      type: object
      properties:
        ResourceArn:
          description: The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
          type: string
        LogDestinationConfigs:
          description: The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
          type: array
          items:
            type: string
        RedactedFields:
          description: The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/FieldToMatch'
        ManagedByFirewallManager:
          description: Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
          type: boolean
        LoggingFilter:
          description: Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
          type: object
          additionalProperties: false
          properties:
            DefaultBehavior:
              description: Default handling for logs that don't match any of the specified filtering conditions.
              type: string
              enum:
                - KEEP
                - DROP
            Filters:
              description: The filters that you want to apply to the logs.
              type: array
              minItems: 1
              items:
                $ref: '#/components/schemas/Filter'
          required:
            - DefaultBehavior
            - Filters
      required:
        - ResourceArn
        - LogDestinationConfigs
      x-stackql-resource-name: logging_configuration
      x-stackql-primaryIdentifier:
        - ResourceArn
    RegexPatternSet:
      type: object
      properties:
        Arn:
          description: ARN of the WAF entity.
          type: string
        Description:
          description: Description of the entity.
          type: string
          pattern: ^[a-zA-Z0-9=:#@/\-,.][a-zA-Z0-9+=:#@/\-,.\s]+[a-zA-Z0-9+=:#@/\-,.]{1,256}$
        Name:
          description: Name of the RegexPatternSet.
          type: string
          pattern: ^[0-9A-Za-z_-]{1,128}$
        Id:
          description: Id of the RegexPatternSet
          type: string
          pattern: ^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$
        RegularExpressionList:
          type: array
          items:
            type: string
        Scope:
          description: Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
          type: string
          enum:
            - CLOUDFRONT
            - REGIONAL
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
      required:
        - Scope
        - RegularExpressionList
      x-stackql-resource-name: regex_pattern_set
      x-stackql-primaryIdentifier:
        - Name
        - Id
        - Scope
    AndStatement:
      type: object
      properties:
        Statements:
          type: array
          items:
            $ref: '#/components/schemas/Statement'
      required:
        - Statements
      additionalProperties: false
    ByteMatchStatement:
      description: Byte Match statement.
      type: object
      properties:
        SearchString:
          $ref: '#/components/schemas/SearchString'
        SearchStringBase64:
          $ref: '#/components/schemas/SearchStringBase64'
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
        PositionalConstraint:
          $ref: '#/components/schemas/PositionalConstraint'
      required:
        - FieldToMatch
        - PositionalConstraint
        - TextTransformations
      additionalProperties: false
    JsonBody:
      description: Inspect the request body as JSON. The request body immediately follows the request headers.
      type: object
      properties:
        MatchPattern:
          $ref: '#/components/schemas/JsonMatchPattern'
        MatchScope:
          $ref: '#/components/schemas/JsonMatchScope'
        InvalidFallbackBehavior:
          $ref: '#/components/schemas/BodyParsingFallbackBehavior'
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      required:
        - MatchPattern
        - MatchScope
      additionalProperties: false
    BodyParsingFallbackBehavior:
      description: The inspection behavior to fall back to if the JSON in the request body is invalid.
      type: string
      enum:
        - MATCH
        - NO_MATCH
        - EVALUATE_AS_STRING
    JsonMatchScope:
      description: The parts of the JSON to match against using the MatchPattern.
      type: string
      enum:
        - ALL
        - KEY
        - VALUE
    JsonMatchPattern:
      description: The pattern to look for in the JSON body.
      type: object
      properties:
        All:
          description: Inspect all parts of the web request's JSON body.
          type: object
        IncludedPaths:
          type: array
          items:
            $ref: '#/components/schemas/JsonPointerPath'
      additionalProperties: false
    JsonPointerPath:
      description: JSON pointer path in the web request's JSON body
      type: string
      pattern: ^[\/]+([^~]*(~[01])*)*{1,512}$
    GeoMatchStatement:
      type: object
      properties:
        CountryCodes:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 2
        ForwardedIPConfig:
          $ref: '#/components/schemas/ForwardedIPConfiguration'
      additionalProperties: false
    IPSetReferenceStatement:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        IPSetForwardedIPConfig:
          $ref: '#/components/schemas/IPSetForwardedIPConfiguration'
      required:
        - Arn
      additionalProperties: false
    NotStatement:
      type: object
      properties:
        Statement:
          $ref: '#/components/schemas/Statement'
      required:
        - Statement
      additionalProperties: false
    OrStatement:
      type: object
      properties:
        Statements:
          type: array
          items:
            $ref: '#/components/schemas/Statement'
      required:
        - Statements
      additionalProperties: false
    PositionalConstraint:
      description: Position of the evaluation in the FieldToMatch of request.
      type: string
      enum:
        - EXACTLY
        - STARTS_WITH
        - ENDS_WITH
        - CONTAINS
        - CONTAINS_WORD
    RateBasedStatement:
      type: object
      properties:
        Limit:
          $ref: '#/components/schemas/RateLimit'
        AggregateKeyType:
          type: string
          enum:
            - IP
            - FORWARDED_IP
        ScopeDownStatement:
          $ref: '#/components/schemas/Statement'
        ForwardedIPConfig:
          $ref: '#/components/schemas/ForwardedIPConfiguration'
      required:
        - Limit
        - AggregateKeyType
      additionalProperties: false
    RateLimit:
      type: integer
      minimum: 100
      maximum: 2000000000
    RegexPatternSetReferenceStatement:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - Arn
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    ForwardedIPConfiguration:
      type: object
      properties:
        HeaderName:
          type: string
          pattern: ^[a-zA-Z0-9-]+{1,255}$
        FallbackBehavior:
          type: string
          enum:
            - MATCH
            - NO_MATCH
      required:
        - HeaderName
        - FallbackBehavior
      additionalProperties: false
    IPSetForwardedIPConfiguration:
      type: object
      properties:
        HeaderName:
          type: string
          pattern: ^[a-zA-Z0-9-]+{1,255}$
        FallbackBehavior:
          type: string
          enum:
            - MATCH
            - NO_MATCH
        Position:
          type: string
          enum:
            - FIRST
            - LAST
            - ANY
      required:
        - HeaderName
        - FallbackBehavior
        - Position
      additionalProperties: false
    Rule:
      description: Rule of WebACL that contains condition and action.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
        Priority:
          $ref: '#/components/schemas/RulePriority'
        Statement:
          $ref: '#/components/schemas/Statement'
        Action:
          $ref: '#/components/schemas/RuleAction'
        OverrideAction:
          $ref: '#/components/schemas/OverrideAction'
        RuleLabels:
          description: Collection of Rule Labels.
          type: array
          items:
            $ref: '#/components/schemas/Label'
        VisibilityConfig:
          $ref: '#/components/schemas/VisibilityConfig'
        CaptchaConfig:
          $ref: '#/components/schemas/CaptchaConfig'
        ChallengeConfig:
          $ref: '#/components/schemas/ChallengeConfig'
      required:
        - Name
        - Priority
        - Statement
        - VisibilityConfig
      additionalProperties: false
    RuleAction:
      description: Action taken when Rule matches its condition.
      type: object
      properties:
        Allow:
          $ref: '#/components/schemas/AllowAction'
        Block:
          $ref: '#/components/schemas/BlockAction'
        Count:
          $ref: '#/components/schemas/CountAction'
        Captcha:
          $ref: '#/components/schemas/CaptchaAction'
        Challenge:
          $ref: '#/components/schemas/ChallengeAction'
      additionalProperties: false
    AllowAction:
      description: Allow traffic towards application.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    BlockAction:
      description: Block traffic towards application.
      type: object
      properties:
        CustomResponse:
          $ref: '#/components/schemas/CustomResponse'
      additionalProperties: false
    CountAction:
      description: Allow traffic towards application.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    CaptchaAction:
      description: Checks valid token exists with request.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    ChallengeAction:
      description: Checks that the request has a valid token with an unexpired challenge timestamp and, if not, returns a browser challenge to the client.
      type: object
      properties:
        CustomRequestHandling:
          $ref: '#/components/schemas/CustomRequestHandling'
      additionalProperties: false
    CustomHTTPHeaderName:
      description: HTTP header name.
      type: string
      minLength: 1
      maxLength: 64
    CustomHTTPHeaderValue:
      description: HTTP header value.
      type: string
      minLength: 1
      maxLength: 255
    CustomHTTPHeader:
      description: HTTP header.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/CustomHTTPHeaderName'
        Value:
          $ref: '#/components/schemas/CustomHTTPHeaderValue'
      required:
        - Name
        - Value
      additionalProperties: false
    CustomRequestHandling:
      description: Custom request handling.
      type: object
      properties:
        InsertHeaders:
          description: Collection of HTTP headers.
          type: array
          items:
            $ref: '#/components/schemas/CustomHTTPHeader'
          minItems: 1
      required:
        - InsertHeaders
      additionalProperties: false
    ResponseStatusCode:
      description: Custom response code.
      type: integer
      minimum: 200
      maximum: 599
    ResponseContentType:
      description: Valid values are TEXT_PLAIN, TEXT_HTML, and APPLICATION_JSON.
      type: string
      enum:
        - TEXT_PLAIN
        - TEXT_HTML
        - APPLICATION_JSON
    ResponseContent:
      description: Response content.
      type: string
      minLength: 1
      maxLength: 10240
    CustomResponseBody:
      description: Custom response body.
      type: object
      properties:
        ContentType:
          $ref: '#/components/schemas/ResponseContentType'
        Content:
          $ref: '#/components/schemas/ResponseContent'
      required:
        - ContentType
        - Content
      additionalProperties: false
    CustomResponse:
      description: Custom response.
      type: object
      properties:
        ResponseCode:
          $ref: '#/components/schemas/ResponseStatusCode'
        CustomResponseBodyKey:
          description: Custom response body key.
          type: string
          pattern: ^[\w\-]+$
        ResponseHeaders:
          description: Collection of HTTP headers.
          type: array
          items:
            $ref: '#/components/schemas/CustomHTTPHeader'
          minItems: 1
      required:
        - ResponseCode
      additionalProperties: false
    CustomResponseBodies:
      description: Custom response key and body map.
      type: object
      x-patternProperties:
        ^[\w\-]+$:
          $ref: '#/components/schemas/CustomResponseBody'
      minProperties: 1
      additionalProperties: false
    RuleGroup:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        Capacity:
          type: integer
          minimum: 0
        Description:
          $ref: '#/components/schemas/EntityDescription'
        Name:
          $ref: '#/components/schemas/EntityName'
        Id:
          $ref: '#/components/schemas/EntityId'
        Scope:
          $ref: '#/components/schemas/Scope'
        Rules:
          description: Collection of Rules.
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        VisibilityConfig:
          $ref: '#/components/schemas/VisibilityConfig'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        LabelNamespace:
          $ref: '#/components/schemas/LabelName'
        CustomResponseBodies:
          $ref: '#/components/schemas/CustomResponseBodies'
        AvailableLabels:
          description: Collection of Available Labels.
          type: array
          items:
            $ref: '#/components/schemas/LabelSummary'
        ConsumedLabels:
          description: Collection of Consumed Labels.
          type: array
          items:
            $ref: '#/components/schemas/LabelSummary'
      required:
        - Capacity
        - Scope
        - VisibilityConfig
      x-stackql-resource-name: rule_group
      x-stackql-primaryIdentifier:
        - Name
        - Id
        - Scope
    RulePriority:
      description: Priority of the Rule, Rules get evaluated from lower to higher priority.
      type: integer
      minimum: 0
    SearchString:
      description: String that is searched to find a match.
      type: string
    SearchStringBase64:
      description: Base64 encoded string that is searched to find a match.
      type: string
    SizeConstraintStatement:
      description: Size Constraint statement.
      type: object
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        ComparisonOperator:
          type: string
          enum:
            - EQ
            - NE
            - LE
            - LT
            - GE
            - GT
        Size:
          type: number
          minimum: 0
          maximum: 21474836480
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - FieldToMatch
        - ComparisonOperator
        - Size
        - TextTransformations
      additionalProperties: false
    SqliMatchStatement:
      description: Sqli Match Statement.
      type: object
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
        SensitivityLevel:
          $ref: '#/components/schemas/SensitivityLevel'
      required:
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    Statement:
      description: First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
      type: object
      properties:
        ByteMatchStatement:
          $ref: '#/components/schemas/ByteMatchStatement'
        SqliMatchStatement:
          $ref: '#/components/schemas/SqliMatchStatement'
        XssMatchStatement:
          $ref: '#/components/schemas/XssMatchStatement'
        SizeConstraintStatement:
          $ref: '#/components/schemas/SizeConstraintStatement'
        GeoMatchStatement:
          $ref: '#/components/schemas/GeoMatchStatement'
        RuleGroupReferenceStatement:
          $ref: '#/components/schemas/RuleGroupReferenceStatement'
        IPSetReferenceStatement:
          $ref: '#/components/schemas/IPSetReferenceStatement'
        RegexPatternSetReferenceStatement:
          $ref: '#/components/schemas/RegexPatternSetReferenceStatement'
        ManagedRuleGroupStatement:
          $ref: '#/components/schemas/ManagedRuleGroupStatement'
        RateBasedStatement:
          $ref: '#/components/schemas/RateBasedStatement'
        AndStatement:
          $ref: '#/components/schemas/AndStatement'
        OrStatement:
          $ref: '#/components/schemas/OrStatement'
        NotStatement:
          $ref: '#/components/schemas/NotStatement'
        LabelMatchStatement:
          $ref: '#/components/schemas/LabelMatchStatement'
        RegexMatchStatement:
          $ref: '#/components/schemas/RegexMatchStatement'
      additionalProperties: false
    TextTransformation:
      description: Text Transformation on the Search String before match.
      type: object
      properties:
        Priority:
          $ref: '#/components/schemas/TextTransformationPriority'
        Type:
          $ref: '#/components/schemas/TextTransformationType'
      required:
        - Priority
        - Type
      additionalProperties: false
    TextTransformationPriority:
      description: Priority of Rule being evaluated.
      type: integer
      minimum: 0
    TextTransformationType:
      description: Type of text transformation.
      type: string
      enum:
        - NONE
        - COMPRESS_WHITE_SPACE
        - HTML_ENTITY_DECODE
        - LOWERCASE
        - CMD_LINE
        - URL_DECODE
        - BASE64_DECODE
        - HEX_DECODE
        - MD5
        - REPLACE_COMMENTS
        - ESCAPE_SEQ_DECODE
        - SQL_HEX_DECODE
        - CSS_DECODE
        - JS_DECODE
        - NORMALIZE_PATH
        - NORMALIZE_PATH_WIN
        - REMOVE_NULLS
        - REPLACE_NULLS
        - BASE64_DECODE_EXT
        - URL_DECODE_UNI
        - UTF8_TO_UNICODE
    VisibilityConfig:
      description: Visibility Metric of the WebACL.
      type: object
      properties:
        SampledRequestsEnabled:
          type: boolean
        CloudWatchMetricsEnabled:
          type: boolean
        MetricName:
          type: string
          maxLength: 128
          minLength: 1
      required:
        - SampledRequestsEnabled
        - CloudWatchMetricsEnabled
        - MetricName
      additionalProperties: false
    XssMatchStatement:
      description: Xss Match Statement.
      type: object
      properties:
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    LabelName:
      description: Name of the Label.
      type: string
      pattern: ^[0-9A-Za-z_:-]{1,1024}$
    LabelSummary:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LabelName'
      additionalProperties: false
    Label:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/LabelName'
      required:
        - Name
      additionalProperties: false
    LabelMatchKey:
      type: string
      pattern: ^[0-9A-Za-z_:-]{1,1024}$
    LabelMatchScope:
      type: string
      enum:
        - LABEL
        - NAMESPACE
    LabelMatchStatement:
      type: object
      properties:
        Scope:
          $ref: '#/components/schemas/LabelMatchScope'
        Key:
          $ref: '#/components/schemas/LabelMatchKey'
      required:
        - Scope
        - Key
      additionalProperties: false
    RegexMatchStatement:
      type: object
      properties:
        RegexString:
          type: string
          maxLength: 512
          minLength: 1
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
        TextTransformations:
          type: array
          items:
            $ref: '#/components/schemas/TextTransformation'
      required:
        - RegexString
        - FieldToMatch
        - TextTransformations
      additionalProperties: false
    CaptchaConfig:
      type: object
      properties:
        ImmunityTimeProperty:
          $ref: '#/components/schemas/ImmunityTimeProperty'
      additionalProperties: false
    ChallengeConfig:
      type: object
      properties:
        ImmunityTimeProperty:
          $ref: '#/components/schemas/ImmunityTimeProperty'
      additionalProperties: false
    ImmunityTimeProperty:
      type: object
      properties:
        ImmunityTime:
          type: integer
          minimum: 60
          maximum: 259200
      required:
        - ImmunityTime
      additionalProperties: false
    Body:
      description: The body of a web request. This immediately follows the request headers.
      type: object
      properties:
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      additionalProperties: false
    Headers:
      description: Includes headers of a web request.
      type: object
      properties:
        MatchPattern:
          $ref: '#/components/schemas/HeaderMatchPattern'
        MatchScope:
          $ref: '#/components/schemas/MapMatchScope'
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      required:
        - MatchPattern
        - MatchScope
        - OversizeHandling
      additionalProperties: false
    Cookies:
      description: Includes headers of a web request.
      type: object
      properties:
        MatchPattern:
          $ref: '#/components/schemas/CookieMatchPattern'
        MatchScope:
          $ref: '#/components/schemas/MapMatchScope'
        OversizeHandling:
          $ref: '#/components/schemas/OversizeHandling'
      required:
        - MatchPattern
        - MatchScope
        - OversizeHandling
      additionalProperties: false
    HeaderMatchPattern:
      description: The pattern to look for in the request headers.
      type: object
      properties:
        All:
          description: Inspect all parts of the web request headers.
          type: object
        IncludedHeaders:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 64
          minItems: 1
          maxItems: 199
        ExcludedHeaders:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 64
          minItems: 1
          maxItems: 199
      additionalProperties: false
    CookieMatchPattern:
      description: The pattern to look for in the request cookies.
      type: object
      properties:
        All:
          description: Inspect all parts of the web request cookies.
          type: object
        IncludedCookies:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 60
          minItems: 1
          maxItems: 199
        ExcludedCookies:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 60
          minItems: 1
          maxItems: 199
      additionalProperties: false
    MapMatchScope:
      description: The parts of the request to match against using the MatchPattern.
      type: string
      enum:
        - ALL
        - KEY
        - VALUE
    OversizeHandling:
      description: Handling of requests containing oversize fields
      type: string
      enum:
        - CONTINUE
        - MATCH
        - NO_MATCH
    SensitivityLevel:
      description: Sensitivity Level current only used for sqli match statements.
      type: string
      enum:
        - LOW
        - HIGH
    DefaultAction:
      description: Default Action WebACL will take against ingress traffic when there is no matching Rule.
      type: object
      properties:
        Allow:
          $ref: '#/components/schemas/AllowAction'
        Block:
          $ref: '#/components/schemas/BlockAction'
      additionalProperties: false
    ExcludedRule:
      description: Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
      required:
        - Name
      additionalProperties: false
    RuleActionOverride:
      description: Action override for rules in the rule group.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
        ActionToUse:
          $ref: '#/components/schemas/RuleAction'
      required:
        - Name
        - ActionToUse
      additionalProperties: false
    ExcludedRules:
      type: array
      items:
        $ref: '#/components/schemas/ExcludedRule'
    ManagedRuleGroupStatement:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/EntityName'
        VendorName:
          type: string
        Version:
          type: string
          pattern: ^[\w#:\.\-/]+$
          minLength: 1
          maxLength: 64
        ExcludedRules:
          type: array
          items:
            $ref: '#/components/schemas/ExcludedRule'
        ScopeDownStatement:
          $ref: '#/components/schemas/Statement'
        ManagedRuleGroupConfigs:
          description: Collection of ManagedRuleGroupConfig.
          type: array
          items:
            $ref: '#/components/schemas/ManagedRuleGroupConfig'
        RuleActionOverrides:
          description: Action overrides for rules in the rule group.
          type: array
          items:
            $ref: '#/components/schemas/RuleActionOverride'
          minItems: 1
          maxItems: 100
      required:
        - VendorName
        - Name
      additionalProperties: false
    OverrideAction:
      description: Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.
      type: object
      properties:
        Count:
          description: Count traffic towards application.
          type: object
        None:
          description: Keep the RuleGroup or ManagedRuleGroup behavior as is.
          type: object
      additionalProperties: false
    QueryString:
      type: object
    Rules:
      description: Collection of Rules.
      type: array
      items:
        $ref: '#/components/schemas/Rule'
    RuleGroupReferenceStatement:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        ExcludedRules:
          type: array
          items:
            $ref: '#/components/schemas/ExcludedRule'
        RuleActionOverrides:
          description: Action overrides for rules in the rule group.
          type: array
          items:
            $ref: '#/components/schemas/RuleActionOverride'
          minItems: 1
          maxItems: 100
      required:
        - Arn
      additionalProperties: false
    SingleHeader:
      type: object
      properties:
        Name:
          type: string
      additionalProperties: false
    SingleQueryArgument:
      type: object
      properties:
        Name:
          type: string
      additionalProperties: false
    UriPath:
      type: object
    ManagedRuleGroupConfig:
      description: ManagedRuleGroupConfig.
      type: object
      properties:
        LoginPath:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 256
        PayloadType:
          type: string
          enum:
            - JSON
            - FORM_ENCODED
        UsernameField:
          $ref: '#/components/schemas/FieldIdentifier'
        PasswordField:
          $ref: '#/components/schemas/FieldIdentifier'
        AWSManagedRulesBotControlRuleSet:
          $ref: '#/components/schemas/AWSManagedRulesBotControlRuleSet'
        AWSManagedRulesATPRuleSet:
          $ref: '#/components/schemas/AWSManagedRulesATPRuleSet'
      additionalProperties: false
    AWSManagedRulesBotControlRuleSet:
      description: Configures how to use the Bot Control managed rule group in the web ACL
      type: object
      properties:
        InspectionLevel:
          type: string
          enum:
            - COMMON
            - TARGETED
      required:
        - InspectionLevel
      additionalProperties: false
    AWSManagedRulesATPRuleSet:
      description: Configures how to use the Account Takeover Prevention managed rule group in the web ACL
      type: object
      properties:
        LoginPath:
          type: string
        RequestInspection:
          $ref: '#/components/schemas/RequestInspection'
        ResponseInspection:
          $ref: '#/components/schemas/ResponseInspection'
      required:
        - LoginPath
      additionalProperties: false
    RequestInspection:
      description: Configures the inspection of login requests
      type: object
      properties:
        PayloadType:
          type: string
          enum:
            - JSON
            - FORM_ENCODED
        UsernameField:
          $ref: '#/components/schemas/FieldIdentifier'
        PasswordField:
          $ref: '#/components/schemas/FieldIdentifier'
      required:
        - PayloadType
        - UsernameField
        - PasswordField
      additionalProperties: false
    ResponseInspection:
      description: Configures the inspection of login responses
      type: object
      properties:
        StatusCode:
          $ref: '#/components/schemas/ResponseInspectionStatusCode'
        Header:
          $ref: '#/components/schemas/ResponseInspectionHeader'
        BodyContains:
          $ref: '#/components/schemas/ResponseInspectionBodyContains'
        Json:
          $ref: '#/components/schemas/ResponseInspectionJson'
      additionalProperties: false
    ResponseInspectionStatusCode:
      description: Response status codes that indicate success or failure of a login request
      type: object
      properties:
        SuccessCodes:
          type: array
          items:
            type: integer
            minLength: 0
            maxLength: 999
          minItems: 1
          maxItems: 10
        FailureCodes:
          type: array
          items:
            type: integer
            minLength: 0
            maxLength: 999
          minItems: 1
          maxItems: 10
      required:
        - SuccessCodes
        - FailureCodes
      additionalProperties: false
    ResponseInspectionHeader:
      description: Response headers that indicate success or failure of a login request
      type: object
      properties:
        Name:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 200
        SuccessValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 3
        FailureValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 3
      required:
        - Name
        - SuccessValues
        - FailureValues
      additionalProperties: false
    ResponseInspectionBodyContains:
      description: Response body contents that indicate success or failure of a login request
      type: object
      properties:
        SuccessStrings:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
        FailureStrings:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
      required:
        - SuccessStrings
        - FailureStrings
      additionalProperties: false
    ResponseInspectionJson:
      description: Response JSON that indicate success or failure of a login request
      type: object
      properties:
        Identifier:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 512
        SuccessValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
        FailureValues:
          type: array
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 100
          minItems: 1
          maxItems: 5
      required:
        - Identifier
        - SuccessValues
        - FailureValues
      additionalProperties: false
    TokenDomains:
      description: List of domains to accept in web request tokens, in addition to the domain of the protected resource.
      type: array
      items:
        type: string
        pattern: ^[\w\.\-/]+$
        minLength: 1
        maxLength: 253
    FieldIdentifier:
      type: object
      properties:
        Identifier:
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 512
      required:
        - Identifier
      additionalProperties: false
    WebACL:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        Capacity:
          type: integer
          minimum: 0
        DefaultAction:
          $ref: '#/components/schemas/DefaultAction'
        Description:
          $ref: '#/components/schemas/EntityDescription'
        Name:
          $ref: '#/components/schemas/EntityName'
        Id:
          $ref: '#/components/schemas/EntityId'
        Scope:
          $ref: '#/components/schemas/Scope'
        Rules:
          description: Collection of Rules.
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        VisibilityConfig:
          $ref: '#/components/schemas/VisibilityConfig'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
        LabelNamespace:
          $ref: '#/components/schemas/LabelName'
        CustomResponseBodies:
          $ref: '#/components/schemas/CustomResponseBodies'
        CaptchaConfig:
          $ref: '#/components/schemas/CaptchaConfig'
        ChallengeConfig:
          $ref: '#/components/schemas/ChallengeConfig'
        TokenDomains:
          $ref: '#/components/schemas/TokenDomains'
      required:
        - DefaultAction
        - Scope
        - VisibilityConfig
      x-stackql-resource-name: web_acl
      x-stackql-primaryIdentifier:
        - Name
        - Id
        - Scope
    WebACLAssociation:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
        WebACLArn:
          $ref: '#/components/schemas/ResourceArn'
      required:
        - ResourceArn
        - WebACLArn
      x-stackql-resource-name: webacl_association
      x-stackql-primaryIdentifier:
        - ResourceArn
        - WebACLArn
  x-stackQL-resources:
    ip_sets:
      name: ip_sets
      id: aws.wafv2.ip_sets
      x-cfn-schema-name: IPSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::IPSet'
    ip_set:
      name: ip_set
      id: aws.wafv2.ip_set
      x-cfn-schema-name: IPSet
      x-type: get
      x-identifiers:
        - Name
        - Id
        - Scope
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Addresses') as addresses,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::IPSet'
    logging_configurations:
      name: logging_configurations
      id: aws.wafv2.logging_configurations
      x-cfn-schema-name: LoggingConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
    logging_configuration:
      name: logging_configuration
      id: aws.wafv2.logging_configuration
      x-cfn-schema-name: LoggingConfiguration
      x-type: get
      x-identifiers:
        - ResourceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.LogDestinationConfigs') as log_destination_configs,
              JSON_EXTRACT(Properties, '$.RedactedFields') as redacted_fields,
              JSON_EXTRACT(Properties, '$.ManagedByFirewallManager') as managed_by_firewall_manager,
              JSON_EXTRACT(Properties, '$.LoggingFilter') as logging_filter
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::LoggingConfiguration'
    regex_pattern_sets:
      name: regex_pattern_sets
      id: aws.wafv2.regex_pattern_sets
      x-cfn-schema-name: RegexPatternSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::RegexPatternSet'
    regex_pattern_set:
      name: regex_pattern_set
      id: aws.wafv2.regex_pattern_set
      x-cfn-schema-name: RegexPatternSet
      x-type: get
      x-identifiers:
        - Name
        - Id
        - Scope
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RegularExpressionList') as regular_expression_list,
              JSON_EXTRACT(Properties, '$.Scope') as scope,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::RegexPatternSet'
    rule_groups:
      name: rule_groups
      id: aws.wafv2.rule_groups
      x-cfn-schema-name: RuleGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::RuleGroup'
    rule_group:
      name: rule_group
      id: aws.wafv2.rule_group
      x-cfn-schema-name: RuleGroup
      x-type: get
      x-identifiers:
        - Name
        - Id
        - Scope
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.VisibilityConfig.SampledRequestsEnabled') as visibility_config_sampled_requests_enabled,
              JSON_EXTRACT(Properties, '$.VisibilityConfig.CloudWatchMetricsEnabled') as visibility_config_cloud_watch_metrics_enabled,
              JSON_EXTRACT(Properties, '$.VisibilityConfig.MetricName') as visibility_config_metric_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AvailableLabels') as available_labels,
              JSON_EXTRACT(Properties, '$.ConsumedLabels') as consumed_labels
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::RuleGroup'
    web_acls:
      name: web_acls
      id: aws.wafv2.web_acls
      x-cfn-schema-name: WebACL
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Scope') as scope
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::WebACL'
    web_acl:
      name: web_acl
      id: aws.wafv2.web_acl
      x-cfn-schema-name: WebACL
      x-type: get
      x-identifiers:
        - Name
        - Id
        - Scope
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.DefaultAction.Allow') as default_action_allow,
              JSON_EXTRACT(Properties, '$.DefaultAction.Block') as default_action_block,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.VisibilityConfig.SampledRequestsEnabled') as visibility_config_sampled_requests_enabled,
              JSON_EXTRACT(Properties, '$.VisibilityConfig.CloudWatchMetricsEnabled') as visibility_config_cloud_watch_metrics_enabled,
              JSON_EXTRACT(Properties, '$.VisibilityConfig.MetricName') as visibility_config_metric_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CaptchaConfig.ImmunityTimeProperty') as captcha_config_immunity_time_property,
              JSON_EXTRACT(Properties, '$.ChallengeConfig.ImmunityTimeProperty') as challenge_config_immunity_time_property
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::WebACL'
    webacl_associations:
      name: webacl_associations
      id: aws.wafv2.webacl_associations
      x-cfn-schema-name: WebACLAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.WebACLArn') as web_ac_larn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFv2::WebACLAssociation'
    webacl_association:
      name: webacl_association
      id: aws.wafv2.webacl_association
      x-cfn-schema-name: WebACLAssociation
      x-type: get
      x-identifiers:
        - ResourceArn
        - WebACLArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFv2::WebACLAssociation'
