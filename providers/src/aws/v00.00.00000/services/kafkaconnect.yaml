openapi: 3.0.0
info:
  title: KafkaConnect
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ApacheKafkaCluster:
      description: Details of how to connect to an Apache Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        BootstrapServers:
          description: The bootstrap servers string of the Apache Kafka cluster.
          type: string
        Vpc:
          $ref: '#/components/schemas/Vpc'
      required:
        - BootstrapServers
        - Vpc
    AutoScaling:
      description: Details about auto scaling of a connector.
      type: object
      additionalProperties: false
      properties:
        MaxWorkerCount:
          description: The maximum number of workers for a connector.
          type: integer
        MinWorkerCount:
          description: The minimum number of workers for a connector.
          type: integer
        ScaleInPolicy:
          $ref: '#/components/schemas/ScaleInPolicy'
        ScaleOutPolicy:
          $ref: '#/components/schemas/ScaleOutPolicy'
        McuCount:
          description: Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
          type: integer
          enum:
            - 1
            - 2
            - 4
            - 8
      required:
        - MaxWorkerCount
        - MinWorkerCount
        - ScaleInPolicy
        - ScaleOutPolicy
        - McuCount
    Capacity:
      description: Information about the capacity allocated to the connector.
      type: object
      additionalProperties: false
      properties:
        AutoScaling:
          $ref: '#/components/schemas/AutoScaling'
        ProvisionedCapacity:
          $ref: '#/components/schemas/ProvisionedCapacity'
      oneOf:
        - required:
            - AutoScaling
        - required:
            - ProvisionedCapacity
    CloudWatchLogsLogDelivery:
      description: Details about delivering logs to Amazon CloudWatch Logs.
      type: object
      additionalProperties: false
      properties:
        Enabled:
          description: Specifies whether the logs get sent to the specified CloudWatch Logs destination.
          type: boolean
        LogGroup:
          description: The CloudWatch log group that is the destination for log delivery.
          type: string
      required:
        - Enabled
    CustomPlugin:
      type: object
      properties:
        Name:
          description: The name of the custom plugin.
          type: string
          minLength: 1
          maxLength: 128
        Description:
          description: A summary description of the custom plugin.
          type: string
          maxLength: 1024
        CustomPluginArn:
          description: The Amazon Resource Name (ARN) of the custom plugin to use.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
        ContentType:
          description: The type of the plugin file.
          type: string
          enum:
            - JAR
            - ZIP
        FileDescription:
          $ref: '#/components/schemas/CustomPluginFileDescription'
        Location:
          $ref: '#/components/schemas/CustomPluginLocation'
        Revision:
          description: The revision of the custom plugin.
          type: integer
          format: int64
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - ContentType
        - Location
      x-stackql-resource-name: custom_plugin
      description: An example resource schema demonstrating some basic constructs and validation rules.
      x-type-name: AWS::KafkaConnect::CustomPlugin
      x-stackql-primary-identifier:
        - CustomPluginArn
      x-stackql-additional-identifiers:
        - - Name
      x-create-only-properties:
        - Name
        - Description
        - ContentType
        - Location
      x-read-only-properties:
        - CustomPluginArn
        - Revision
        - FileDescription
      x-required-properties:
        - Name
        - ContentType
        - Location
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:UntagResource
          - kafkaconnect:TagResource
      x-required-permissions:
        create:
          - kafkaconnect:DescribeCustomPlugin
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:CreateCustomPlugin
          - kafkaconnect:TagResource
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetObjectAttributes
          - s3:GetObjectVersionAttributes
        read:
          - kafkaconnect:DescribeCustomPlugin
          - kafkaconnect:ListTagsForResource
        update:
          - kafkaconnect:DescribeCustomPlugin
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:TagResource
          - kafkaconnect:UntagResource
        delete:
          - kafkaconnect:DeleteCustomPlugin
          - kafkaconnect:DescribeCustomPlugin
        list:
          - kafkaconnect:ListCustomPlugins
    FirehoseLogDelivery:
      description: Details about delivering logs to Amazon Kinesis Data Firehose.
      type: object
      additionalProperties: false
      properties:
        DeliveryStream:
          description: The Kinesis Data Firehose delivery stream that is the destination for log delivery.
          type: string
        Enabled:
          description: Specifies whether the logs get sent to the specified Kinesis Data Firehose delivery stream.
          type: boolean
      required:
        - Enabled
    KafkaCluster:
      description: Details of how to connect to the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        ApacheKafkaCluster:
          $ref: '#/components/schemas/ApacheKafkaCluster'
      required:
        - ApacheKafkaCluster
    KafkaClusterClientAuthentication:
      description: Details of the client authentication used by the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        AuthenticationType:
          $ref: '#/components/schemas/KafkaClusterClientAuthenticationType'
      required:
        - AuthenticationType
    KafkaClusterClientAuthenticationType:
      description: The type of client authentication used to connect to the Kafka cluster. Value NONE means that no client authentication is used.
      type: string
      enum:
        - NONE
        - IAM
    KafkaClusterEncryptionInTransit:
      description: Details of encryption in transit to the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        EncryptionType:
          $ref: '#/components/schemas/KafkaClusterEncryptionInTransitType'
      required:
        - EncryptionType
    KafkaClusterEncryptionInTransitType:
      description: The type of encryption in transit to the Kafka cluster.
      type: string
      enum:
        - PLAINTEXT
        - TLS
    LogDelivery:
      description: Details of what logs are delivered and where they are delivered.
      type: object
      additionalProperties: false
      properties:
        WorkerLogDelivery:
          $ref: '#/components/schemas/WorkerLogDelivery'
      required:
        - WorkerLogDelivery
    Plugin:
      description: Details about a Kafka Connect plugin which will be used with the connector.
      type: object
      additionalProperties: false
      properties:
        CustomPlugin:
          $ref: '#/components/schemas/CustomPlugin'
      required:
        - CustomPlugin
    ProvisionedCapacity:
      description: Details about a fixed capacity allocated to a connector.
      type: object
      additionalProperties: false
      properties:
        McuCount:
          description: Specifies how many MSK Connect Units (MCU) are allocated to the connector.
          type: integer
          enum:
            - 1
            - 2
            - 4
            - 8
        WorkerCount:
          description: Number of workers for a connector.
          type: integer
      required:
        - WorkerCount
    S3LogDelivery:
      description: Details about delivering logs to Amazon S3.
      type: object
      additionalProperties: false
      properties:
        Bucket:
          description: The name of the S3 bucket that is the destination for log delivery.
          type: string
        Enabled:
          description: Specifies whether the logs get sent to the specified Amazon S3 destination.
          type: boolean
        Prefix:
          description: The S3 prefix that is the destination for log delivery.
          type: string
      required:
        - Enabled
    ScaleInPolicy:
      description: Information about the scale in policy of the connector.
      type: object
      additionalProperties: false
      properties:
        CpuUtilizationPercentage:
          description: Specifies the CPU utilization percentage threshold at which connector scale in should trigger.
          type: integer
          minimum: 1
          maximum: 100
      required:
        - CpuUtilizationPercentage
    ScaleOutPolicy:
      description: Information about the scale out policy of the connector.
      type: object
      additionalProperties: false
      properties:
        CpuUtilizationPercentage:
          description: Specifies the CPU utilization percentage threshold at which connector scale out should trigger.
          type: integer
          minimum: 1
          maximum: 100
      required:
        - CpuUtilizationPercentage
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Vpc:
      description: Information about a VPC used with the connector.
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          description: The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
          type: array
          uniqueItems: true
          items:
            type: string
          x-insertionOrder: false
        Subnets:
          description: The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: string
          x-insertionOrder: false
      required:
        - SecurityGroups
        - Subnets
    WorkerConfiguration:
      type: object
      properties:
        Name:
          description: The name of the worker configuration.
          type: string
          minLength: 1
          maxLength: 128
        Description:
          description: A summary description of the worker configuration.
          type: string
          maxLength: 1024
        WorkerConfigurationArn:
          description: The Amazon Resource Name (ARN) of the custom configuration.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
        PropertiesFileContent:
          description: Base64 encoded contents of connect-distributed.properties file.
          type: string
        Revision:
          description: The description of a revision of the worker configuration.
          type: integer
          format: int64
        Tags:
          description: A collection of tags associated with a resource
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - PropertiesFileContent
      x-stackql-resource-name: worker_configuration
      description: The configuration of the workers, which are the processes that run the connector logic.
      x-type-name: AWS::KafkaConnect::WorkerConfiguration
      x-stackql-primary-identifier:
        - WorkerConfigurationArn
      x-stackql-additional-identifiers:
        - - Name
      x-create-only-properties:
        - Name
        - Description
        - PropertiesFileContent
      x-read-only-properties:
        - WorkerConfigurationArn
        - Revision
      x-required-properties:
        - Name
        - PropertiesFileContent
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:UntagResource
          - kafkaconnect:TagResource
      x-required-permissions:
        create:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:CreateWorkerConfiguration
          - kafkaconnect:TagResource
          - kafkaconnect:ListTagsForResource
        read:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:ListTagsForResource
        update:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:TagResource
          - kafkaconnect:UntagResource
        delete:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:DeleteWorkerConfiguration
        list:
          - kafkaconnect:ListWorkerConfigurations
    WorkerLogDelivery:
      description: Specifies where worker logs are delivered.
      type: object
      additionalProperties: false
      properties:
        CloudWatchLogs:
          $ref: '#/components/schemas/CloudWatchLogsLogDelivery'
        Firehose:
          $ref: '#/components/schemas/FirehoseLogDelivery'
        S3:
          $ref: '#/components/schemas/S3LogDelivery'
    Connector:
      type: object
      properties:
        Capacity:
          $ref: '#/components/schemas/Capacity'
        ConnectorArn:
          description: Amazon Resource Name for the created Connector.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
        ConnectorConfiguration:
          description: The configuration for the connector.
          type: object
          additionalProperties: false
          x-patternProperties:
            .*:
              type: string
        ConnectorDescription:
          description: A summary description of the connector.
          type: string
          maxLength: 1024
        ConnectorName:
          description: The name of the connector.
          type: string
          minLength: 1
          maxLength: 128
        KafkaCluster:
          $ref: '#/components/schemas/KafkaCluster'
        KafkaClusterClientAuthentication:
          $ref: '#/components/schemas/KafkaClusterClientAuthentication'
        KafkaClusterEncryptionInTransit:
          $ref: '#/components/schemas/KafkaClusterEncryptionInTransit'
        KafkaConnectVersion:
          description: The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
          type: string
        LogDelivery:
          $ref: '#/components/schemas/LogDelivery'
        Plugins:
          description: List of plugins to use with the connector.
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Plugin'
          x-insertionOrder: false
        ServiceExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):iam:.*
        Tags:
          description: A collection of tags associated with a resource
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        WorkerConfiguration:
          $ref: '#/components/schemas/WorkerConfiguration'
      required:
        - Capacity
        - ConnectorConfiguration
        - ConnectorName
        - KafkaConnectVersion
        - KafkaCluster
        - KafkaClusterClientAuthentication
        - KafkaClusterEncryptionInTransit
        - Plugins
        - ServiceExecutionRoleArn
      x-stackql-resource-name: connector
      description: Resource Type definition for AWS::KafkaConnect::Connector
      x-type-name: AWS::KafkaConnect::Connector
      x-stackql-primary-identifier:
        - ConnectorArn
      x-stackql-additional-identifiers:
        - - ConnectorName
      x-create-only-properties:
        - ConnectorConfiguration
        - ConnectorDescription
        - ConnectorName
        - KafkaCluster
        - KafkaClusterClientAuthentication
        - KafkaClusterEncryptionInTransit
        - KafkaConnectVersion
        - LogDelivery
        - Plugins
        - ServiceExecutionRoleArn
        - WorkerConfiguration
      x-read-only-properties:
        - ConnectorArn
      x-required-properties:
        - Capacity
        - ConnectorConfiguration
        - ConnectorName
        - KafkaConnectVersion
        - KafkaCluster
        - KafkaClusterClientAuthentication
        - KafkaClusterEncryptionInTransit
        - Plugins
        - ServiceExecutionRoleArn
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:UntagResource
          - kafkaconnect:TagResource
          - firehose:TagDeliveryStream
      x-required-permissions:
        create:
          - kafkaconnect:CreateConnector
          - kafkaconnect:DescribeConnector
          - kafkaconnect:TagResource
          - kafkaconnect:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - ec2:CreateNetworkInterface
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - firehose:TagDeliveryStream
        read:
          - kafkaconnect:DescribeConnector
          - kafkaconnect:ListTagsForResource
        delete:
          - kafkaconnect:DeleteConnector
          - kafkaconnect:DescribeConnector
          - logs:DeleteLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
        update:
          - kafkaconnect:UpdateConnector
          - kafkaconnect:DescribeConnector
          - kafkaconnect:TagResource
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:UntagResource
          - iam:CreateServiceLinkedRole
          - logs:UpdateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - firehose:TagDeliveryStream
        list:
          - kafkaconnect:ListConnectors
    CustomPluginFileDescription:
      description: Details about the custom plugin file.
      type: object
      additionalProperties: false
      properties:
        FileMd5:
          description: The hex-encoded MD5 checksum of the custom plugin file. You can use it to validate the file.
          type: string
        FileSize:
          description: The size in bytes of the custom plugin file. You can use it to validate the file.
          type: integer
          format: int64
    CustomPluginLocation:
      description: Information about the location of a custom plugin.
      type: object
      additionalProperties: false
      properties:
        S3Location:
          $ref: '#/components/schemas/S3Location'
      required:
        - S3Location
    S3Location:
      description: The S3 bucket Amazon Resource Name (ARN), file key, and object version of the plugin file stored in Amazon S3.
      type: object
      additionalProperties: false
      properties:
        BucketArn:
          type: string
          description: The Amazon Resource Name (ARN) of an S3 bucket.
        FileKey:
          type: string
          description: The file key for an object in an S3 bucket.
        ObjectVersion:
          type: string
          description: The version of an object in an S3 bucket.
      required:
        - BucketArn
        - FileKey
    CreateCustomPluginRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the custom plugin.
              type: string
              minLength: 1
              maxLength: 128
            Description:
              description: A summary description of the custom plugin.
              type: string
              maxLength: 1024
            CustomPluginArn:
              description: The Amazon Resource Name (ARN) of the custom plugin to use.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
            ContentType:
              description: The type of the plugin file.
              type: string
              enum:
                - JAR
                - ZIP
            FileDescription:
              $ref: '#/components/schemas/CustomPluginFileDescription'
            Location:
              $ref: '#/components/schemas/CustomPluginLocation'
            Revision:
              description: The revision of the custom plugin.
              type: integer
              format: int64
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateCustomPluginRequest
      type: object
      required: []
    CreateWorkerConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the worker configuration.
              type: string
              minLength: 1
              maxLength: 128
            Description:
              description: A summary description of the worker configuration.
              type: string
              maxLength: 1024
            WorkerConfigurationArn:
              description: The Amazon Resource Name (ARN) of the custom configuration.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
            PropertiesFileContent:
              description: Base64 encoded contents of connect-distributed.properties file.
              type: string
            Revision:
              description: The description of a revision of the worker configuration.
              type: integer
              format: int64
            Tags:
              description: A collection of tags associated with a resource
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateWorkerConfigurationRequest
      type: object
      required: []
    CreateConnectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Capacity:
              $ref: '#/components/schemas/Capacity'
            ConnectorArn:
              description: Amazon Resource Name for the created Connector.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
            ConnectorConfiguration:
              description: The configuration for the connector.
              type: object
              additionalProperties: false
              x-patternProperties:
                .*:
                  type: string
            ConnectorDescription:
              description: A summary description of the connector.
              type: string
              maxLength: 1024
            ConnectorName:
              description: The name of the connector.
              type: string
              minLength: 1
              maxLength: 128
            KafkaCluster:
              $ref: '#/components/schemas/KafkaCluster'
            KafkaClusterClientAuthentication:
              $ref: '#/components/schemas/KafkaClusterClientAuthentication'
            KafkaClusterEncryptionInTransit:
              $ref: '#/components/schemas/KafkaClusterEncryptionInTransit'
            KafkaConnectVersion:
              description: The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
              type: string
            LogDelivery:
              $ref: '#/components/schemas/LogDelivery'
            Plugins:
              description: List of plugins to use with the connector.
              type: array
              uniqueItems: true
              minItems: 1
              items:
                $ref: '#/components/schemas/Plugin'
              x-insertionOrder: false
            ServiceExecutionRoleArn:
              description: The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn):iam:.*
            Tags:
              description: A collection of tags associated with a resource
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            WorkerConfiguration:
              $ref: '#/components/schemas/WorkerConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateConnectorRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    custom_plugins:
      name: custom_plugins
      id: aws.kafkaconnect.custom_plugins
      x-cfn-schema-name: CustomPlugin
      x-cfn-type-name: AWS::KafkaConnect::CustomPlugin
      x-identifiers:
        - CustomPluginArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CustomPlugin&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::CustomPlugin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::CustomPlugin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::CustomPlugin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/custom_plugins/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/custom_plugins/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/custom_plugins/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CustomPluginArn') as custom_plugin_arn,
              JSON_EXTRACT(Properties, '$.ContentType') as content_type,
              JSON_EXTRACT(Properties, '$.FileDescription') as file_description,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Revision') as revision,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
              AND data__Identifier = '<CustomPluginArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.CustomPluginArn') as custom_plugin_arn,
                JSON_EXTRACT(detail.Properties, '$.ContentType') as content_type,
                JSON_EXTRACT(detail.Properties, '$.FileDescription') as file_description,
                JSON_EXTRACT(detail.Properties, '$.Location') as location,
                JSON_EXTRACT(detail.Properties, '$.Revision') as revision,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND detail.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'CustomPluginArn') as custom_plugin_arn,
                  json_extract_path_text(Properties, 'ContentType') as content_type,
                  json_extract_path_text(Properties, 'FileDescription') as file_description,
                  json_extract_path_text(Properties, 'Location') as location,
                  json_extract_path_text(Properties, 'Revision') as revision,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                  AND data__Identifier = '<CustomPluginArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'CustomPluginArn') as custom_plugin_arn,
                    json_extract_path_text(detail.Properties, 'ContentType') as content_type,
                    json_extract_path_text(detail.Properties, 'FileDescription') as file_description,
                    json_extract_path_text(detail.Properties, 'Location') as location,
                    json_extract_path_text(detail.Properties, 'Revision') as revision,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                    AND detail.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                    AND listing.region = 'us-east-1'
    custom_plugins_list_only:
      name: custom_plugins_list_only
      id: aws.kafkaconnect.custom_plugins_list_only
      x-cfn-schema-name: CustomPlugin
      x-cfn-type-name: AWS::KafkaConnect::CustomPlugin
      x-identifiers:
        - CustomPluginArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CustomPluginArn') as custom_plugin_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CustomPluginArn') as custom_plugin_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND region = 'us-east-1'
    custom_plugin_tags:
      name: custom_plugin_tags
      id: aws.kafkaconnect.custom_plugin_tags
      x-cfn-schema-name: CustomPlugin
      x-cfn-type-name: AWS::KafkaConnect::CustomPlugin
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.CustomPluginArn') as custom_plugin_arn,
              JSON_EXTRACT(detail.Properties, '$.ContentType') as content_type,
              JSON_EXTRACT(detail.Properties, '$.FileDescription') as file_description,
              JSON_EXTRACT(detail.Properties, '$.Location') as location,
              JSON_EXTRACT(detail.Properties, '$.Revision') as revision
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
              AND detail.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'CustomPluginArn') as custom_plugin_arn,
                json_extract_path_text(detail.Properties, 'ContentType') as content_type,
                json_extract_path_text(detail.Properties, 'FileDescription') as file_description,
                json_extract_path_text(detail.Properties, 'Location') as location,
                json_extract_path_text(detail.Properties, 'Revision') as revision
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND detail.data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND listing.region = 'us-east-1'
    worker_configurations:
      name: worker_configurations
      id: aws.kafkaconnect.worker_configurations
      x-cfn-schema-name: WorkerConfiguration
      x-cfn-type-name: AWS::KafkaConnect::WorkerConfiguration
      x-identifiers:
        - WorkerConfigurationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__WorkerConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::WorkerConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::WorkerConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::WorkerConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/worker_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/worker_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/worker_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.WorkerConfigurationArn') as worker_configuration_arn,
              JSON_EXTRACT(Properties, '$.PropertiesFileContent') as properties_file_content,
              JSON_EXTRACT(Properties, '$.Revision') as revision,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
              AND data__Identifier = '<WorkerConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.WorkerConfigurationArn') as worker_configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.PropertiesFileContent') as properties_file_content,
                JSON_EXTRACT(detail.Properties, '$.Revision') as revision,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND detail.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'WorkerConfigurationArn') as worker_configuration_arn,
                  json_extract_path_text(Properties, 'PropertiesFileContent') as properties_file_content,
                  json_extract_path_text(Properties, 'Revision') as revision,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                  AND data__Identifier = '<WorkerConfigurationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'WorkerConfigurationArn') as worker_configuration_arn,
                    json_extract_path_text(detail.Properties, 'PropertiesFileContent') as properties_file_content,
                    json_extract_path_text(detail.Properties, 'Revision') as revision,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                    AND detail.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                    AND listing.region = 'us-east-1'
    worker_configurations_list_only:
      name: worker_configurations_list_only
      id: aws.kafkaconnect.worker_configurations_list_only
      x-cfn-schema-name: WorkerConfiguration
      x-cfn-type-name: AWS::KafkaConnect::WorkerConfiguration
      x-identifiers:
        - WorkerConfigurationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkerConfigurationArn') as worker_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkerConfigurationArn') as worker_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND region = 'us-east-1'
    worker_configuration_tags:
      name: worker_configuration_tags
      id: aws.kafkaconnect.worker_configuration_tags
      x-cfn-schema-name: WorkerConfiguration
      x-cfn-type-name: AWS::KafkaConnect::WorkerConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.WorkerConfigurationArn') as worker_configuration_arn,
              JSON_EXTRACT(detail.Properties, '$.PropertiesFileContent') as properties_file_content,
              JSON_EXTRACT(detail.Properties, '$.Revision') as revision
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
              AND detail.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'WorkerConfigurationArn') as worker_configuration_arn,
                json_extract_path_text(detail.Properties, 'PropertiesFileContent') as properties_file_content,
                json_extract_path_text(detail.Properties, 'Revision') as revision
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND detail.data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND listing.region = 'us-east-1'
    connectors:
      name: connectors
      id: aws.kafkaconnect.connectors
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::KafkaConnect::Connector
      x-identifiers:
        - ConnectorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Connector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KafkaConnect::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.ConnectorConfiguration') as connector_configuration,
              JSON_EXTRACT(Properties, '$.ConnectorDescription') as connector_description,
              JSON_EXTRACT(Properties, '$.ConnectorName') as connector_name,
              JSON_EXTRACT(Properties, '$.KafkaCluster') as kafka_cluster,
              JSON_EXTRACT(Properties, '$.KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
              JSON_EXTRACT(Properties, '$.KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
              JSON_EXTRACT(Properties, '$.KafkaConnectVersion') as kafka_connect_version,
              JSON_EXTRACT(Properties, '$.LogDelivery') as log_delivery,
              JSON_EXTRACT(Properties, '$.Plugins') as plugins,
              JSON_EXTRACT(Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WorkerConfiguration') as worker_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
              AND data__Identifier = '<ConnectorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
                JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
                JSON_EXTRACT(detail.Properties, '$.ConnectorConfiguration') as connector_configuration,
                JSON_EXTRACT(detail.Properties, '$.ConnectorDescription') as connector_description,
                JSON_EXTRACT(detail.Properties, '$.ConnectorName') as connector_name,
                JSON_EXTRACT(detail.Properties, '$.KafkaCluster') as kafka_cluster,
                JSON_EXTRACT(detail.Properties, '$.KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
                JSON_EXTRACT(detail.Properties, '$.KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
                JSON_EXTRACT(detail.Properties, '$.KafkaConnectVersion') as kafka_connect_version,
                JSON_EXTRACT(detail.Properties, '$.LogDelivery') as log_delivery,
                JSON_EXTRACT(detail.Properties, '$.Plugins') as plugins,
                JSON_EXTRACT(detail.Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.WorkerConfiguration') as worker_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::KafkaConnect::Connector'
                AND detail.data__TypeName = 'AWS::KafkaConnect::Connector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Capacity') as capacity,
                  json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                  json_extract_path_text(Properties, 'ConnectorConfiguration') as connector_configuration,
                  json_extract_path_text(Properties, 'ConnectorDescription') as connector_description,
                  json_extract_path_text(Properties, 'ConnectorName') as connector_name,
                  json_extract_path_text(Properties, 'KafkaCluster') as kafka_cluster,
                  json_extract_path_text(Properties, 'KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
                  json_extract_path_text(Properties, 'KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
                  json_extract_path_text(Properties, 'KafkaConnectVersion') as kafka_connect_version,
                  json_extract_path_text(Properties, 'LogDelivery') as log_delivery,
                  json_extract_path_text(Properties, 'Plugins') as plugins,
                  json_extract_path_text(Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'WorkerConfiguration') as worker_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
                  AND data__Identifier = '<ConnectorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                    json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                    json_extract_path_text(detail.Properties, 'ConnectorConfiguration') as connector_configuration,
                    json_extract_path_text(detail.Properties, 'ConnectorDescription') as connector_description,
                    json_extract_path_text(detail.Properties, 'ConnectorName') as connector_name,
                    json_extract_path_text(detail.Properties, 'KafkaCluster') as kafka_cluster,
                    json_extract_path_text(detail.Properties, 'KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
                    json_extract_path_text(detail.Properties, 'KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
                    json_extract_path_text(detail.Properties, 'KafkaConnectVersion') as kafka_connect_version,
                    json_extract_path_text(detail.Properties, 'LogDelivery') as log_delivery,
                    json_extract_path_text(detail.Properties, 'Plugins') as plugins,
                    json_extract_path_text(detail.Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'WorkerConfiguration') as worker_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::KafkaConnect::Connector'
                    AND detail.data__TypeName = 'AWS::KafkaConnect::Connector'
                    AND listing.region = 'us-east-1'
    connectors_list_only:
      name: connectors_list_only
      id: aws.kafkaconnect.connectors_list_only
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::KafkaConnect::Connector
      x-identifiers:
        - ConnectorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectorArn') as connector_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
                AND region = 'us-east-1'
    connector_tags:
      name: connector_tags
      id: aws.kafkaconnect.connector_tags
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::KafkaConnect::Connector
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(detail.Properties, '$.ConnectorConfiguration') as connector_configuration,
              JSON_EXTRACT(detail.Properties, '$.ConnectorDescription') as connector_description,
              JSON_EXTRACT(detail.Properties, '$.ConnectorName') as connector_name,
              JSON_EXTRACT(detail.Properties, '$.KafkaCluster') as kafka_cluster,
              JSON_EXTRACT(detail.Properties, '$.KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
              JSON_EXTRACT(detail.Properties, '$.KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
              JSON_EXTRACT(detail.Properties, '$.KafkaConnectVersion') as kafka_connect_version,
              JSON_EXTRACT(detail.Properties, '$.LogDelivery') as log_delivery,
              JSON_EXTRACT(detail.Properties, '$.Plugins') as plugins,
              JSON_EXTRACT(detail.Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
              JSON_EXTRACT(detail.Properties, '$.WorkerConfiguration') as worker_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::KafkaConnect::Connector'
              AND detail.data__TypeName = 'AWS::KafkaConnect::Connector'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                json_extract_path_text(detail.Properties, 'ConnectorConfiguration') as connector_configuration,
                json_extract_path_text(detail.Properties, 'ConnectorDescription') as connector_description,
                json_extract_path_text(detail.Properties, 'ConnectorName') as connector_name,
                json_extract_path_text(detail.Properties, 'KafkaCluster') as kafka_cluster,
                json_extract_path_text(detail.Properties, 'KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
                json_extract_path_text(detail.Properties, 'KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
                json_extract_path_text(detail.Properties, 'KafkaConnectVersion') as kafka_connect_version,
                json_extract_path_text(detail.Properties, 'LogDelivery') as log_delivery,
                json_extract_path_text(detail.Properties, 'Plugins') as plugins,
                json_extract_path_text(detail.Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                json_extract_path_text(detail.Properties, 'WorkerConfiguration') as worker_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::KafkaConnect::Connector'
                AND detail.data__TypeName = 'AWS::KafkaConnect::Connector'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CustomPlugin&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCustomPlugin
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCustomPluginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__WorkerConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWorkerConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWorkerConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Connector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConnector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConnectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
