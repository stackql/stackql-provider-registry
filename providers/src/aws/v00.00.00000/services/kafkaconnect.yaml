openapi: 3.0.0
info:
  title: KafkaConnect
  version: 1.0.0
paths: {}
components:
  schemas:
    ApacheKafkaCluster:
      description: Details of how to connect to an Apache Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        BootstrapServers:
          description: The bootstrap servers string of the Apache Kafka cluster.
          type: string
        Vpc:
          $ref: '#/components/schemas/Vpc'
      required:
        - BootstrapServers
        - Vpc
    AutoScaling:
      description: Details about auto scaling of a connector.
      type: object
      additionalProperties: false
      properties:
        MaxWorkerCount:
          description: The maximum number of workers for a connector.
          type: integer
        MinWorkerCount:
          description: The minimum number of workers for a connector.
          type: integer
        ScaleInPolicy:
          $ref: '#/components/schemas/ScaleInPolicy'
        ScaleOutPolicy:
          $ref: '#/components/schemas/ScaleOutPolicy'
        McuCount:
          description: Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
          type: integer
          enum:
            - 1
            - 2
            - 4
            - 8
      required:
        - MaxWorkerCount
        - MinWorkerCount
        - ScaleInPolicy
        - ScaleOutPolicy
        - McuCount
    Capacity:
      description: Information about the capacity allocated to the connector.
      type: object
      additionalProperties: false
      properties:
        AutoScaling:
          $ref: '#/components/schemas/AutoScaling'
        ProvisionedCapacity:
          $ref: '#/components/schemas/ProvisionedCapacity'
      oneOf:
        - required:
            - AutoScaling
        - required:
            - ProvisionedCapacity
    CloudWatchLogsLogDelivery:
      description: Details about delivering logs to Amazon CloudWatch Logs.
      type: object
      additionalProperties: false
      properties:
        Enabled:
          description: Specifies whether the logs get sent to the specified CloudWatch Logs destination.
          type: boolean
        LogGroup:
          description: The CloudWatch log group that is the destination for log delivery.
          type: string
      required:
        - Enabled
    CustomPlugin:
      type: object
      properties:
        Name:
          description: The name of the custom plugin.
          type: string
          minLength: 1
          maxLength: 128
        Description:
          description: A summary description of the custom plugin.
          type: string
          maxLength: 1024
        CustomPluginArn:
          description: The Amazon Resource Name (ARN) of the custom plugin to use.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
        ContentType:
          description: The type of the plugin file.
          type: string
          enum:
            - JAR
            - ZIP
        FileDescription:
          $ref: '#/components/schemas/CustomPluginFileDescription'
        Location:
          $ref: '#/components/schemas/CustomPluginLocation'
        Revision:
          description: The revision of the custom plugin.
          type: integer
          format: int64
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - ContentType
        - Location
      x-stackql-resource-name: custom_plugin
      description: An example resource schema demonstrating some basic constructs and validation rules.
      x-type-name: AWS::KafkaConnect::CustomPlugin
      x-stackql-primary-identifier:
        - CustomPluginArn
      x-stackql-additional-identifiers:
        - - Name
      x-create-only-properties:
        - Name
        - Description
        - ContentType
        - Location
      x-read-only-properties:
        - CustomPluginArn
        - Revision
        - FileDescription
      x-required-properties:
        - Name
        - ContentType
        - Location
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - kafkaconnect:DescribeCustomPlugin
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:CreateCustomPlugin
          - kafkaconnect:TagResource
          - s3:GetObject
          - s3:GetObjectVersion
          - s3:GetObjectAttributes
          - s3:GetObjectVersionAttributes
        read:
          - kafkaconnect:DescribeCustomPlugin
          - kafkaconnect:ListTagsForResource
        update:
          - kafkaconnect:DescribeCustomPlugin
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:TagResource
          - kafkaconnect:UntagResource
        delete:
          - kafkaconnect:DeleteCustomPlugin
          - kafkaconnect:DescribeCustomPlugin
        list:
          - kafkaconnect:ListCustomPlugins
    FirehoseLogDelivery:
      description: Details about delivering logs to Amazon Kinesis Data Firehose.
      type: object
      additionalProperties: false
      properties:
        DeliveryStream:
          description: The Kinesis Data Firehose delivery stream that is the destination for log delivery.
          type: string
        Enabled:
          description: Specifies whether the logs get sent to the specified Kinesis Data Firehose delivery stream.
          type: boolean
      required:
        - Enabled
    KafkaCluster:
      description: Details of how to connect to the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        ApacheKafkaCluster:
          $ref: '#/components/schemas/ApacheKafkaCluster'
      required:
        - ApacheKafkaCluster
    KafkaClusterClientAuthentication:
      description: Details of the client authentication used by the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        AuthenticationType:
          $ref: '#/components/schemas/KafkaClusterClientAuthenticationType'
      required:
        - AuthenticationType
    KafkaClusterClientAuthenticationType:
      description: The type of client authentication used to connect to the Kafka cluster. Value NONE means that no client authentication is used.
      type: string
      enum:
        - NONE
        - IAM
    KafkaClusterEncryptionInTransit:
      description: Details of encryption in transit to the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        EncryptionType:
          $ref: '#/components/schemas/KafkaClusterEncryptionInTransitType'
      required:
        - EncryptionType
    KafkaClusterEncryptionInTransitType:
      description: The type of encryption in transit to the Kafka cluster.
      type: string
      enum:
        - PLAINTEXT
        - TLS
    LogDelivery:
      description: Details of what logs are delivered and where they are delivered.
      type: object
      additionalProperties: false
      properties:
        WorkerLogDelivery:
          $ref: '#/components/schemas/WorkerLogDelivery'
      required:
        - WorkerLogDelivery
    Plugin:
      description: Details about a Kafka Connect plugin which will be used with the connector.
      type: object
      additionalProperties: false
      properties:
        CustomPlugin:
          $ref: '#/components/schemas/CustomPlugin'
      required:
        - CustomPlugin
    ProvisionedCapacity:
      description: Details about a fixed capacity allocated to a connector.
      type: object
      additionalProperties: false
      properties:
        McuCount:
          description: Specifies how many MSK Connect Units (MCU) are allocated to the connector.
          type: integer
          enum:
            - 1
            - 2
            - 4
            - 8
        WorkerCount:
          description: Number of workers for a connector.
          type: integer
      required:
        - WorkerCount
    S3LogDelivery:
      description: Details about delivering logs to Amazon S3.
      type: object
      additionalProperties: false
      properties:
        Bucket:
          description: The name of the S3 bucket that is the destination for log delivery.
          type: string
        Enabled:
          description: Specifies whether the logs get sent to the specified Amazon S3 destination.
          type: boolean
        Prefix:
          description: The S3 prefix that is the destination for log delivery.
          type: string
      required:
        - Enabled
    ScaleInPolicy:
      description: Information about the scale in policy of the connector.
      type: object
      additionalProperties: false
      properties:
        CpuUtilizationPercentage:
          description: Specifies the CPU utilization percentage threshold at which connector scale in should trigger.
          type: integer
          minimum: 1
          maximum: 100
      required:
        - CpuUtilizationPercentage
    ScaleOutPolicy:
      description: Information about the scale out policy of the connector.
      type: object
      additionalProperties: false
      properties:
        CpuUtilizationPercentage:
          description: Specifies the CPU utilization percentage threshold at which connector scale out should trigger.
          type: integer
          minimum: 1
          maximum: 100
      required:
        - CpuUtilizationPercentage
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Vpc:
      description: Information about a VPC used with the connector.
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          description: The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
          type: array
          uniqueItems: true
          items:
            type: string
          x-insertionOrder: false
        Subnets:
          description: The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
          type: array
          uniqueItems: true
          minItems: 1
          items:
            type: string
          x-insertionOrder: false
      required:
        - SecurityGroups
        - Subnets
    WorkerConfiguration:
      type: object
      properties:
        Name:
          description: The name of the worker configuration.
          type: string
          minLength: 1
          maxLength: 128
        Description:
          description: A summary description of the worker configuration.
          type: string
          maxLength: 1024
        WorkerConfigurationArn:
          description: The Amazon Resource Name (ARN) of the custom configuration.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
        PropertiesFileContent:
          description: Base64 encoded contents of connect-distributed.properties file.
          type: string
        Revision:
          description: The description of a revision of the worker configuration.
          type: integer
          format: int64
        Tags:
          description: A collection of tags associated with a resource
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - PropertiesFileContent
      x-stackql-resource-name: worker_configuration
      description: The configuration of the workers, which are the processes that run the connector logic.
      x-type-name: AWS::KafkaConnect::WorkerConfiguration
      x-stackql-primary-identifier:
        - WorkerConfigurationArn
      x-stackql-additional-identifiers:
        - - Name
      x-create-only-properties:
        - Name
        - Description
        - PropertiesFileContent
      x-read-only-properties:
        - WorkerConfigurationArn
        - Revision
      x-required-properties:
        - Name
        - PropertiesFileContent
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:CreateWorkerConfiguration
          - kafkaconnect:TagResource
          - kafkaconnect:ListTagsForResource
        read:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:ListTagsForResource
        update:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:TagResource
          - kafkaconnect:UntagResource
        delete:
          - kafkaconnect:DescribeWorkerConfiguration
          - kafkaconnect:DeleteWorkerConfiguration
        list:
          - kafkaconnect:ListWorkerConfigurations
    WorkerLogDelivery:
      description: Specifies where worker logs are delivered.
      type: object
      additionalProperties: false
      properties:
        CloudWatchLogs:
          $ref: '#/components/schemas/CloudWatchLogsLogDelivery'
        Firehose:
          $ref: '#/components/schemas/FirehoseLogDelivery'
        S3:
          $ref: '#/components/schemas/S3LogDelivery'
    Connector:
      type: object
      properties:
        Capacity:
          $ref: '#/components/schemas/Capacity'
        ConnectorArn:
          description: Amazon Resource Name for the created Connector.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*
        ConnectorConfiguration:
          description: The configuration for the connector.
          type: object
          additionalProperties: false
          x-patternProperties:
            .*:
              type: string
        ConnectorDescription:
          description: A summary description of the connector.
          type: string
          maxLength: 1024
        ConnectorName:
          description: The name of the connector.
          type: string
          minLength: 1
          maxLength: 128
        KafkaCluster:
          $ref: '#/components/schemas/KafkaCluster'
        KafkaClusterClientAuthentication:
          $ref: '#/components/schemas/KafkaClusterClientAuthentication'
        KafkaClusterEncryptionInTransit:
          $ref: '#/components/schemas/KafkaClusterEncryptionInTransit'
        KafkaConnectVersion:
          description: The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
          type: string
        LogDelivery:
          $ref: '#/components/schemas/LogDelivery'
        Plugins:
          description: List of plugins to use with the connector.
          type: array
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/Plugin'
          x-insertionOrder: false
        ServiceExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):iam:.*
        Tags:
          description: A collection of tags associated with a resource
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        WorkerConfiguration:
          $ref: '#/components/schemas/WorkerConfiguration'
      required:
        - Capacity
        - ConnectorConfiguration
        - ConnectorName
        - KafkaConnectVersion
        - KafkaCluster
        - KafkaClusterClientAuthentication
        - KafkaClusterEncryptionInTransit
        - Plugins
        - ServiceExecutionRoleArn
      x-stackql-resource-name: connector
      description: Resource Type definition for AWS::KafkaConnect::Connector
      x-type-name: AWS::KafkaConnect::Connector
      x-stackql-primary-identifier:
        - ConnectorArn
      x-stackql-additional-identifiers:
        - - ConnectorName
      x-create-only-properties:
        - ConnectorConfiguration
        - ConnectorDescription
        - ConnectorName
        - KafkaCluster
        - KafkaClusterClientAuthentication
        - KafkaClusterEncryptionInTransit
        - KafkaConnectVersion
        - LogDelivery
        - Plugins
        - ServiceExecutionRoleArn
        - WorkerConfiguration
      x-read-only-properties:
        - ConnectorArn
      x-required-properties:
        - Capacity
        - ConnectorConfiguration
        - ConnectorName
        - KafkaConnectVersion
        - KafkaCluster
        - KafkaClusterClientAuthentication
        - KafkaClusterEncryptionInTransit
        - Plugins
        - ServiceExecutionRoleArn
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - kafkaconnect:CreateConnector
          - kafkaconnect:DescribeConnector
          - kafkaconnect:TagResource
          - kafkaconnect:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - ec2:CreateNetworkInterface
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - firehose:TagDeliveryStream
        read:
          - kafkaconnect:DescribeConnector
          - kafkaconnect:ListTagsForResource
        delete:
          - kafkaconnect:DeleteConnector
          - kafkaconnect:DescribeConnector
          - logs:DeleteLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
        update:
          - kafkaconnect:UpdateConnector
          - kafkaconnect:DescribeConnector
          - kafkaconnect:TagResource
          - kafkaconnect:ListTagsForResource
          - kafkaconnect:UntagResource
          - iam:CreateServiceLinkedRole
          - logs:UpdateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - firehose:TagDeliveryStream
        list:
          - kafkaconnect:ListConnectors
    CustomPluginFileDescription:
      description: Details about the custom plugin file.
      type: object
      additionalProperties: false
      properties:
        FileMd5:
          description: The hex-encoded MD5 checksum of the custom plugin file. You can use it to validate the file.
          type: string
        FileSize:
          description: The size in bytes of the custom plugin file. You can use it to validate the file.
          type: integer
          format: int64
    CustomPluginLocation:
      description: Information about the location of a custom plugin.
      type: object
      additionalProperties: false
      properties:
        S3Location:
          $ref: '#/components/schemas/S3Location'
      required:
        - S3Location
    S3Location:
      description: The S3 bucket Amazon Resource Name (ARN), file key, and object version of the plugin file stored in Amazon S3.
      type: object
      additionalProperties: false
      properties:
        BucketArn:
          type: string
          description: The Amazon Resource Name (ARN) of an S3 bucket.
        FileKey:
          type: string
          description: The file key for an object in an S3 bucket.
        ObjectVersion:
          type: string
          description: The version of an object in an S3 bucket.
      required:
        - BucketArn
        - FileKey
  x-stackQL-resources:
    custom_plugins:
      name: custom_plugins
      id: aws.kafkaconnect.custom_plugins
      x-cfn-schema-name: CustomPlugin
      x-type: list
      x-identifiers:
        - CustomPluginArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CustomPluginArn') as custom_plugin_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CustomPluginArn') as custom_plugin_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND region = 'us-east-1'
    custom_plugin:
      name: custom_plugin
      id: aws.kafkaconnect.custom_plugin
      x-cfn-schema-name: CustomPlugin
      x-type: get
      x-identifiers:
        - CustomPluginArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CustomPluginArn') as custom_plugin_arn,
              JSON_EXTRACT(Properties, '$.ContentType') as content_type,
              JSON_EXTRACT(Properties, '$.FileDescription') as file_description,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Revision') as revision,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
              AND data__Identifier = '<CustomPluginArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'CustomPluginArn') as custom_plugin_arn,
                json_extract_path_text(Properties, 'ContentType') as content_type,
                json_extract_path_text(Properties, 'FileDescription') as file_description,
                json_extract_path_text(Properties, 'Location') as location,
                json_extract_path_text(Properties, 'Revision') as revision,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::CustomPlugin'
                AND data__Identifier = '<CustomPluginArn>'
                AND region = 'us-east-1'
    worker_configurations:
      name: worker_configurations
      id: aws.kafkaconnect.worker_configurations
      x-cfn-schema-name: WorkerConfiguration
      x-type: list
      x-identifiers:
        - WorkerConfigurationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkerConfigurationArn') as worker_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkerConfigurationArn') as worker_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND region = 'us-east-1'
    worker_configuration:
      name: worker_configuration
      id: aws.kafkaconnect.worker_configuration
      x-cfn-schema-name: WorkerConfiguration
      x-type: get
      x-identifiers:
        - WorkerConfigurationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.WorkerConfigurationArn') as worker_configuration_arn,
              JSON_EXTRACT(Properties, '$.PropertiesFileContent') as properties_file_content,
              JSON_EXTRACT(Properties, '$.Revision') as revision,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
              AND data__Identifier = '<WorkerConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'WorkerConfigurationArn') as worker_configuration_arn,
                json_extract_path_text(Properties, 'PropertiesFileContent') as properties_file_content,
                json_extract_path_text(Properties, 'Revision') as revision,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::WorkerConfiguration'
                AND data__Identifier = '<WorkerConfigurationArn>'
                AND region = 'us-east-1'
    connectors:
      name: connectors
      id: aws.kafkaconnect.connectors
      x-cfn-schema-name: Connector
      x-type: list
      x-identifiers:
        - ConnectorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectorArn') as connector_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
                AND region = 'us-east-1'
    connector:
      name: connector
      id: aws.kafkaconnect.connector
      x-cfn-schema-name: Connector
      x-type: get
      x-identifiers:
        - ConnectorArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.ConnectorConfiguration') as connector_configuration,
              JSON_EXTRACT(Properties, '$.ConnectorDescription') as connector_description,
              JSON_EXTRACT(Properties, '$.ConnectorName') as connector_name,
              JSON_EXTRACT(Properties, '$.KafkaCluster') as kafka_cluster,
              JSON_EXTRACT(Properties, '$.KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
              JSON_EXTRACT(Properties, '$.KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
              JSON_EXTRACT(Properties, '$.KafkaConnectVersion') as kafka_connect_version,
              JSON_EXTRACT(Properties, '$.LogDelivery') as log_delivery,
              JSON_EXTRACT(Properties, '$.Plugins') as plugins,
              JSON_EXTRACT(Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WorkerConfiguration') as worker_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
              AND data__Identifier = '<ConnectorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Capacity') as capacity,
                json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                json_extract_path_text(Properties, 'ConnectorConfiguration') as connector_configuration,
                json_extract_path_text(Properties, 'ConnectorDescription') as connector_description,
                json_extract_path_text(Properties, 'ConnectorName') as connector_name,
                json_extract_path_text(Properties, 'KafkaCluster') as kafka_cluster,
                json_extract_path_text(Properties, 'KafkaClusterClientAuthentication') as kafka_cluster_client_authentication,
                json_extract_path_text(Properties, 'KafkaClusterEncryptionInTransit') as kafka_cluster_encryption_in_transit,
                json_extract_path_text(Properties, 'KafkaConnectVersion') as kafka_connect_version,
                json_extract_path_text(Properties, 'LogDelivery') as log_delivery,
                json_extract_path_text(Properties, 'Plugins') as plugins,
                json_extract_path_text(Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'WorkerConfiguration') as worker_configuration
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KafkaConnect::Connector'
                AND data__Identifier = '<ConnectorArn>'
                AND region = 'us-east-1'
