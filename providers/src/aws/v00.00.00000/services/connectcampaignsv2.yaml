openapi: 3.0.0
info:
  title: ConnectCampaignsV2
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    CampaignName:
      type: string
      maxLength: 127
      minLength: 1
      description: Campaign name
    InstanceId:
      type: string
      maxLength: 256
      minLength: 0
      description: Amazon Connect Instance Id
      pattern: ^[a-zA-Z0-9_\-.]*$
    Capacity:
      type: number
      maximum: 1
      minimum: 0.01
      description: Allocates outbound capacity for the specific channel of this campaign between multiple active campaigns
    QueueId:
      type: string
      maxLength: 500
      description: The queue for the call
    ContactFlowId:
      type: string
      maxLength: 500
      description: The identifier of the contact flow for the outbound call
    SourcePhoneNumber:
      type: string
      maxLength: 100
      description: The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.
    Arn:
      type: string
      maxLength: 500
      minLength: 20
      description: Arn
      pattern: ^arn:.*$
    EmailAddress:
      type: string
      maxLength: 255
      minLength: 1
      description: Email address used for Email messages
      pattern: ^[\w-\.\+]+@([\w-]+\.)+[\w-]{2,4}$
    SourceEmailAddressDisplayName:
      type: string
      maxLength: 127
      minLength: 1
      description: The name of the source email address display name
    BandwidthAllocation:
      type: number
      maximum: 1
      minimum: 0
      description: The bandwidth allocation of a queue resource.
    TimeStamp:
      type: string
      description: Timestamp with no UTC offset or timezone
      maxLength: 100
    TimeZone:
      type: string
      description: Time Zone Id in the IANA format
    Iso8601Duration:
      type: string
      description: Time duration in ISO 8601 format
      maxLength: 50
      minLength: 0
      pattern: ^[a-zA-Z0-9.]*$
    Iso8601Date:
      type: string
      description: Date in ISO 8601 format, e.g. 2024-01-01
      pattern: ^\d{4}-\d{2}-\d{2}$
    Iso8601Time:
      type: string
      description: Time in ISO 8601 format, e.g. T23:11
      pattern: ^T\d{2}:\d{2}$
    DayOfWeek:
      type: string
      description: Day of week
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    PredictiveConfig:
      type: object
      description: Predictive config
      properties:
        BandwidthAllocation:
          $ref: '#/components/schemas/BandwidthAllocation'
      required:
        - BandwidthAllocation
      additionalProperties: false
    ProgressiveConfig:
      type: object
      description: Progressive config
      properties:
        BandwidthAllocation:
          $ref: '#/components/schemas/BandwidthAllocation'
      required:
        - BandwidthAllocation
      additionalProperties: false
    AgentlessConfig:
      type: object
      description: Agentless config
      required: []
      additionalProperties: false
    TelephonyOutboundMode:
      type: object
      description: Telephony Outbound Mode
      properties:
        ProgressiveConfig:
          $ref: '#/components/schemas/ProgressiveConfig'
        PredictiveConfig:
          $ref: '#/components/schemas/PredictiveConfig'
        AgentlessConfig:
          $ref: '#/components/schemas/AgentlessConfig'
      oneOf:
        - required:
            - ProgressiveConfig
        - required:
            - PredictiveConfig
        - required:
            - AgentlessConfig
      additionalProperties: false
    AnswerMachineDetectionConfig:
      type: object
      description: The configuration used for answering machine detection during outbound calls
      properties:
        EnableAnswerMachineDetection:
          type: boolean
          description: Flag to decided whether outbound calls should have answering machine detection enabled or not
        AwaitAnswerMachinePrompt:
          type: boolean
          description: Enables detection of prompts (e.g., beep after after a voicemail greeting)
      required:
        - EnableAnswerMachineDetection
      additionalProperties: false
    TelephonyOutboundConfig:
      type: object
      description: Default Telephone Outbound config
      properties:
        ConnectContactFlowId:
          $ref: '#/components/schemas/ContactFlowId'
        ConnectSourcePhoneNumber:
          $ref: '#/components/schemas/SourcePhoneNumber'
        AnswerMachineDetectionConfig:
          $ref: '#/components/schemas/AnswerMachineDetectionConfig'
      required:
        - ConnectContactFlowId
      additionalProperties: false
    TelephonyChannelSubtypeConfig:
      type: object
      description: Telephony Channel Subtype config
      properties:
        Capacity:
          $ref: '#/components/schemas/Capacity'
        ConnectQueueId:
          $ref: '#/components/schemas/QueueId'
        OutboundMode:
          $ref: '#/components/schemas/TelephonyOutboundMode'
        DefaultOutboundConfig:
          $ref: '#/components/schemas/TelephonyOutboundConfig'
      required:
        - OutboundMode
        - DefaultOutboundConfig
      additionalProperties: false
    SmsOutboundMode:
      type: object
      description: SMS Outbound Mode
      properties:
        AgentlessConfig:
          $ref: '#/components/schemas/AgentlessConfig'
      additionalProperties: false
    SmsOutboundConfig:
      type: object
      description: Default SMS outbound config
      properties:
        ConnectSourcePhoneNumberArn:
          $ref: '#/components/schemas/Arn'
        WisdomTemplateArn:
          $ref: '#/components/schemas/Arn'
      required:
        - ConnectSourcePhoneNumberArn
        - WisdomTemplateArn
      additionalProperties: false
    SmsChannelSubtypeConfig:
      type: object
      description: SMS Channel Subtype config
      properties:
        Capacity:
          $ref: '#/components/schemas/Capacity'
        OutboundMode:
          $ref: '#/components/schemas/SmsOutboundMode'
        DefaultOutboundConfig:
          $ref: '#/components/schemas/SmsOutboundConfig'
      required:
        - OutboundMode
        - DefaultOutboundConfig
      additionalProperties: false
    EmailOutboundMode:
      type: object
      description: Email Outbound Mode
      properties:
        AgentlessConfig:
          $ref: '#/components/schemas/AgentlessConfig'
      additionalProperties: false
    EmailOutboundConfig:
      type: object
      description: Default SMS outbound config
      properties:
        ConnectSourceEmailAddress:
          $ref: '#/components/schemas/EmailAddress'
        SourceEmailAddressDisplayName:
          $ref: '#/components/schemas/SourceEmailAddressDisplayName'
        WisdomTemplateArn:
          $ref: '#/components/schemas/Arn'
      required:
        - ConnectSourceEmailAddress
        - WisdomTemplateArn
      additionalProperties: false
    EmailChannelSubtypeConfig:
      type: object
      description: Email Channel Subtype config
      properties:
        Capacity:
          $ref: '#/components/schemas/Capacity'
        OutboundMode:
          $ref: '#/components/schemas/EmailOutboundMode'
        DefaultOutboundConfig:
          $ref: '#/components/schemas/EmailOutboundConfig'
      required:
        - OutboundMode
        - DefaultOutboundConfig
      additionalProperties: false
    ChannelSubtypeConfig:
      type: object
      description: The possible types of channel subtype config parameters
      properties:
        Telephony:
          $ref: '#/components/schemas/TelephonyChannelSubtypeConfig'
        Sms:
          $ref: '#/components/schemas/SmsChannelSubtypeConfig'
        Email:
          $ref: '#/components/schemas/EmailChannelSubtypeConfig'
      anyOf:
        - required:
            - Telephony
        - required:
            - Sms
        - required:
            - Email
      additionalProperties: false
    Source:
      type: object
      description: The possible source of the campaign
      properties:
        CustomerProfilesSegmentArn:
          $ref: '#/components/schemas/Arn'
        EventTrigger:
          $ref: '#/components/schemas/EventTrigger'
      oneOf:
        - required:
            - CustomerProfilesSegmentArn
        - required:
            - EventTrigger
      additionalProperties: false
    EventTrigger:
      type: object
      description: The event trigger of the campaign
      properties:
        CustomerProfilesDomainArn:
          $ref: '#/components/schemas/Arn'
      additionalProperties: false
    TimeRange:
      type: object
      description: Time range in 24 hour format
      properties:
        StartTime:
          $ref: '#/components/schemas/Iso8601Time'
        EndTime:
          $ref: '#/components/schemas/Iso8601Time'
      required:
        - StartTime
        - EndTime
      additionalProperties: false
    TimeRangeList:
      type: array
      description: List of time range
      items:
        $ref: '#/components/schemas/TimeRange'
      x-insertionOrder: false
    DailyHour:
      type: object
      description: Daily Hour
      properties:
        Key:
          $ref: '#/components/schemas/DayOfWeek'
        Value:
          $ref: '#/components/schemas/TimeRangeList'
      additionalProperties: false
    DailyHours:
      type: array
      uniqueItems: true
      x-insertionOrder: false
      description: Daily Hours map
      items:
        $ref: '#/components/schemas/DailyHour'
    OpenHours:
      type: object
      description: Open Hours config
      properties:
        DailyHours:
          $ref: '#/components/schemas/DailyHours'
      required:
        - DailyHours
      additionalProperties: false
    RestrictedPeriod:
      type: object
      description: Restricted period
      properties:
        Name:
          type: string
          maxLength: 127
          description: The name of a restricted period
        StartDate:
          $ref: '#/components/schemas/Iso8601Date'
        EndDate:
          $ref: '#/components/schemas/Iso8601Date'
      required:
        - StartDate
        - EndDate
      additionalProperties: false
    RestrictedPeriodList:
      type: array
      description: List of restricted period
      items:
        $ref: '#/components/schemas/RestrictedPeriod'
      x-insertionOrder: false
    RestrictedPeriods:
      type: object
      description: Restricted period config
      properties:
        RestrictedPeriodList:
          $ref: '#/components/schemas/RestrictedPeriodList'
      oneOf:
        - required:
            - RestrictedPeriodList
      additionalProperties: false
    TimeWindow:
      type: object
      description: Time window config
      properties:
        OpenHours:
          $ref: '#/components/schemas/OpenHours'
        RestrictedPeriods:
          $ref: '#/components/schemas/RestrictedPeriods'
      required:
        - OpenHours
      additionalProperties: false
    Schedule:
      type: object
      description: Campaign schedule
      properties:
        StartTime:
          $ref: '#/components/schemas/TimeStamp'
        EndTime:
          $ref: '#/components/schemas/TimeStamp'
        RefreshFrequency:
          $ref: '#/components/schemas/Iso8601Duration'
      required:
        - StartTime
        - EndTime
      additionalProperties: false
    LocalTimeZoneDetectionType:
      type: string
      description: Local TimeZone Detection method
      enum:
        - ZIP_CODE
        - AREA_CODE
    LocalTimeZoneDetection:
      type: array
      description: Local TimeZone Detection method list
      items:
        $ref: '#/components/schemas/LocalTimeZoneDetectionType'
      x-insertionOrder: false
    LocalTimeZoneConfig:
      type: object
      description: Local time zone config
      properties:
        DefaultTimeZone:
          $ref: '#/components/schemas/TimeZone'
        LocalTimeZoneDetection:
          $ref: '#/components/schemas/LocalTimeZoneDetection'
      additionalProperties: false
    CommunicationTimeConfig:
      type: object
      description: Campaign communication time config
      properties:
        LocalTimeZoneConfig:
          $ref: '#/components/schemas/LocalTimeZoneConfig'
        Telephony:
          $ref: '#/components/schemas/TimeWindow'
        Sms:
          $ref: '#/components/schemas/TimeWindow'
        Email:
          $ref: '#/components/schemas/TimeWindow'
      required:
        - LocalTimeZoneConfig
      additionalProperties: false
    CommunicationLimitTimeUnit:
      type: string
      description: The communication limit time unit
      enum:
        - DAY
    CommunicationLimit:
      type: object
      description: Communication Limit
      properties:
        MaxCountPerRecipient:
          type: integer
          minimum: 1
        Frequency:
          type: integer
          minimum: 1
        Unit:
          $ref: '#/components/schemas/CommunicationLimitTimeUnit'
      required:
        - MaxCountPerRecipient
        - Frequency
        - Unit
      additionalProperties: false
    CommunicationLimitList:
      type: array
      description: List of communication limit
      items:
        $ref: '#/components/schemas/CommunicationLimit'
      x-insertionOrder: false
    CommunicationLimits:
      type: object
      description: Communication limits
      properties:
        CommunicationLimitList:
          $ref: '#/components/schemas/CommunicationLimitList'
      additionalProperties: false
    CommunicationLimitsConfig:
      type: object
      description: Communication limits config
      properties:
        AllChannelsSubtypes:
          $ref: '#/components/schemas/CommunicationLimits'
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          description: The key name of the tag.
        Value:
          type: string
          description: The value for the tag.
      required:
        - Key
        - Value
      additionalProperties: false
    Campaign:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 256
          minLength: 0
          description: Amazon Connect Campaign Arn
          pattern: ^arn:aws[-a-z0-9]*:connect-campaigns:[-a-z0-9]*:[0-9]{12}:campaign/[-a-zA-Z0-9]*$
        Name:
          $ref: '#/components/schemas/CampaignName'
        ConnectInstanceId:
          $ref: '#/components/schemas/InstanceId'
        ChannelSubtypeConfig:
          $ref: '#/components/schemas/ChannelSubtypeConfig'
        Source:
          $ref: '#/components/schemas/Source'
        ConnectCampaignFlowArn:
          $ref: '#/components/schemas/Arn'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        CommunicationTimeConfig:
          $ref: '#/components/schemas/CommunicationTimeConfig'
        CommunicationLimitsOverride:
          $ref: '#/components/schemas/CommunicationLimitsConfig'
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - ConnectInstanceId
        - ChannelSubtypeConfig
      x-stackql-resource-name: campaign
      description: Definition of AWS::ConnectCampaignsV2::Campaign Resource Type
      x-type-name: AWS::ConnectCampaignsV2::Campaign
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ConnectInstanceId
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - ConnectInstanceId
        - ChannelSubtypeConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - connect-campaigns:UntagResource
          - connect-campaigns:TagResource
      x-required-permissions:
        create:
          - connect-campaigns:CreateCampaign
          - connect-campaigns:DescribeCampaign
          - connect-campaigns:TagResource
          - connect:DescribeContactFlow
          - connect:DescribeEmailAddress
          - connect:DescribeInstance
          - connect:DescribePhoneNumber
          - connect:DescribeQueue
          - profile:GetSegmentDefinition
          - wisdom:GetMessageTemplate
        read:
          - connect-campaigns:DescribeCampaign
        delete:
          - connect-campaigns:DeleteCampaign
          - connect-campaigns:DeleteCampaignChannelSubtypeConfig
          - connect-campaigns:DeleteCampaignCommunicationLimits
          - connect-campaigns:DeleteCampaignCommunicationTime
        list:
          - connect-campaigns:ListCampaigns
        update:
          - connect-campaigns:DeleteCampaignChannelSubtypeConfig
          - connect-campaigns:DeleteCampaignCommunicationLimits
          - connect-campaigns:DeleteCampaignCommunicationTime
          - connect-campaigns:UpdateCampaignChannelSubtypeConfig
          - connect-campaigns:UpdateCampaignCommunicationLimits
          - connect-campaigns:UpdateCampaignCommunicationTime
          - connect-campaigns:UpdateCampaignName
          - connect-campaigns:UpdateCampaignFlowAssociation
          - connect-campaigns:UpdateCampaignSchedule
          - connect-campaigns:UpdateCampaignSource
          - connect-campaigns:TagResource
          - connect-campaigns:UntagResource
          - connect-campaigns:DescribeCampaign
          - connect:DescribeContactFlow
          - connect:DescribeEmailAddress
          - connect:DescribePhoneNumber
          - connect:DescribeQueue
          - profile:GetSegmentDefinition
          - wisdom:GetMessageTemplate
    CreateCampaignRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 256
              minLength: 0
              description: Amazon Connect Campaign Arn
              pattern: ^arn:aws[-a-z0-9]*:connect-campaigns:[-a-z0-9]*:[0-9]{12}:campaign/[-a-zA-Z0-9]*$
            Name:
              $ref: '#/components/schemas/CampaignName'
            ConnectInstanceId:
              $ref: '#/components/schemas/InstanceId'
            ChannelSubtypeConfig:
              $ref: '#/components/schemas/ChannelSubtypeConfig'
            Source:
              $ref: '#/components/schemas/Source'
            ConnectCampaignFlowArn:
              $ref: '#/components/schemas/Arn'
            Schedule:
              $ref: '#/components/schemas/Schedule'
            CommunicationTimeConfig:
              $ref: '#/components/schemas/CommunicationTimeConfig'
            CommunicationLimitsOverride:
              $ref: '#/components/schemas/CommunicationLimitsConfig'
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: One or more tags.
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateCampaignRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    campaigns:
      name: campaigns
      id: aws.connectcampaignsv2.campaigns
      x-cfn-schema-name: Campaign
      x-cfn-type-name: AWS::ConnectCampaignsV2::Campaign
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Campaign&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ConnectCampaignsV2::Campaign"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ConnectCampaignsV2::Campaign"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ConnectCampaignsV2::Campaign"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ConnectInstanceId') as connect_instance_id,
              JSON_EXTRACT(Properties, '$.ChannelSubtypeConfig') as channel_subtype_config,
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.ConnectCampaignFlowArn') as connect_campaign_flow_arn,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.CommunicationTimeConfig') as communication_time_config,
              JSON_EXTRACT(Properties, '$.CommunicationLimitsOverride') as communication_limits_override,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ConnectInstanceId') as connect_instance_id,
                JSON_EXTRACT(detail.Properties, '$.ChannelSubtypeConfig') as channel_subtype_config,
                JSON_EXTRACT(detail.Properties, '$.Source') as source,
                JSON_EXTRACT(detail.Properties, '$.ConnectCampaignFlowArn') as connect_campaign_flow_arn,
                JSON_EXTRACT(detail.Properties, '$.Schedule') as schedule,
                JSON_EXTRACT(detail.Properties, '$.CommunicationTimeConfig') as communication_time_config,
                JSON_EXTRACT(detail.Properties, '$.CommunicationLimitsOverride') as communication_limits_override,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                AND detail.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ConnectInstanceId') as connect_instance_id,
                  json_extract_path_text(Properties, 'ChannelSubtypeConfig') as channel_subtype_config,
                  json_extract_path_text(Properties, 'Source') as source,
                  json_extract_path_text(Properties, 'ConnectCampaignFlowArn') as connect_campaign_flow_arn,
                  json_extract_path_text(Properties, 'Schedule') as schedule,
                  json_extract_path_text(Properties, 'CommunicationTimeConfig') as communication_time_config,
                  json_extract_path_text(Properties, 'CommunicationLimitsOverride') as communication_limits_override,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ConnectInstanceId') as connect_instance_id,
                    json_extract_path_text(detail.Properties, 'ChannelSubtypeConfig') as channel_subtype_config,
                    json_extract_path_text(detail.Properties, 'Source') as source,
                    json_extract_path_text(detail.Properties, 'ConnectCampaignFlowArn') as connect_campaign_flow_arn,
                    json_extract_path_text(detail.Properties, 'Schedule') as schedule,
                    json_extract_path_text(detail.Properties, 'CommunicationTimeConfig') as communication_time_config,
                    json_extract_path_text(detail.Properties, 'CommunicationLimitsOverride') as communication_limits_override,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                    AND detail.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                    AND listing.region = 'us-east-1'
    campaigns_list_only:
      name: campaigns_list_only
      id: aws.connectcampaignsv2.campaigns_list_only
      x-cfn-schema-name: Campaign
      x-cfn-type-name: AWS::ConnectCampaignsV2::Campaign
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                AND region = 'us-east-1'
    campaign_tags:
      name: campaign_tags
      id: aws.connectcampaignsv2.campaign_tags
      x-cfn-schema-name: Campaign
      x-cfn-type-name: AWS::ConnectCampaignsV2::Campaign
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ConnectInstanceId') as connect_instance_id,
              JSON_EXTRACT(detail.Properties, '$.ChannelSubtypeConfig') as channel_subtype_config,
              JSON_EXTRACT(detail.Properties, '$.Source') as source,
              JSON_EXTRACT(detail.Properties, '$.ConnectCampaignFlowArn') as connect_campaign_flow_arn,
              JSON_EXTRACT(detail.Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(detail.Properties, '$.CommunicationTimeConfig') as communication_time_config,
              JSON_EXTRACT(detail.Properties, '$.CommunicationLimitsOverride') as communication_limits_override
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
              AND detail.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ConnectInstanceId') as connect_instance_id,
                json_extract_path_text(detail.Properties, 'ChannelSubtypeConfig') as channel_subtype_config,
                json_extract_path_text(detail.Properties, 'Source') as source,
                json_extract_path_text(detail.Properties, 'ConnectCampaignFlowArn') as connect_campaign_flow_arn,
                json_extract_path_text(detail.Properties, 'Schedule') as schedule,
                json_extract_path_text(detail.Properties, 'CommunicationTimeConfig') as communication_time_config,
                json_extract_path_text(detail.Properties, 'CommunicationLimitsOverride') as communication_limits_override
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                AND detail.data__TypeName = 'AWS::ConnectCampaignsV2::Campaign'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Campaign&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCampaign
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
