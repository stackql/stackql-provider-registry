openapi: 3.0.0
info:
  title: IoTFleetWise
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Compression:
      type: string
      enum:
        - 'OFF'
        - SNAPPY
      default: 'OFF'
    DataDestinationConfig:
      oneOf:
        - additionalProperties: false
          type: object
          title: S3Config
          properties:
            S3Config:
              $ref: '#/components/schemas/S3Config'
          required:
            - S3Config
        - additionalProperties: false
          type: object
          title: TimestreamConfig
          properties:
            TimestreamConfig:
              $ref: '#/components/schemas/TimestreamConfig'
          required:
            - TimestreamConfig
        - type: object
          title: MqttTopicConfig
          properties:
            MqttTopicConfig:
              $ref: '#/components/schemas/MqttTopicConfig'
          required:
            - MqttTopicConfig
          additionalProperties: false
    S3Config:
      additionalProperties: false
      type: object
      properties:
        BucketArn:
          maxLength: 100
          type: string
          pattern: ^arn:(aws[a-zA-Z0-9-]*):s3:::.+$
          minLength: 16
        DataFormat:
          $ref: '#/components/schemas/DataFormat'
        StorageCompressionFormat:
          $ref: '#/components/schemas/StorageCompressionFormat'
        Prefix:
          maxLength: 512
          type: string
          pattern: ^[a-zA-Z0-9-_:./!*'()]+$
          minLength: 1
      required:
        - BucketArn
    TimestreamConfig:
      additionalProperties: false
      type: object
      properties:
        TimestreamTableArn:
          maxLength: 2048
          type: string
          pattern: ^arn:(aws[a-zA-Z0-9-]*):timestream:[a-zA-Z0-9-]+:[0-9]{12}:database\/[a-zA-Z0-9_.-]+\/table\/[a-zA-Z0-9_.-]+$
          minLength: 20
        ExecutionRoleArn:
          maxLength: 2048
          type: string
          pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
          minLength: 20
      required:
        - TimestreamTableArn
        - ExecutionRoleArn
    MqttTopicConfig:
      type: object
      properties:
        MqttTopicArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:.*
        ExecutionRoleArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
      required:
        - ExecutionRoleArn
        - MqttTopicArn
      additionalProperties: false
    UpdateCampaignAction:
      type: string
      enum:
        - APPROVE
        - SUSPEND
        - RESUME
        - UPDATE
    CampaignStatus:
      type: string
      enum:
        - CREATING
        - WAITING_FOR_APPROVAL
        - RUNNING
        - SUSPENDED
    ConditionBasedSignalFetchConfig:
      type: object
      properties:
        ConditionExpression:
          type: string
          maxLength: 2048
          minLength: 1
        TriggerMode:
          $ref: '#/components/schemas/TriggerMode'
      required:
        - ConditionExpression
        - TriggerMode
      additionalProperties: false
    DiagnosticsMode:
      type: string
      enum:
        - 'OFF'
        - SEND_ACTIVE_DTCS
      default: 'OFF'
    SignalInformation:
      additionalProperties: false
      type: object
      properties:
        MaxSampleCount:
          maximum: 4294967295
          type: number
          minimum: 1
        Name:
          minLength: 1
          pattern: ^[\w|*|-]+(\.[\w|*|-]+)*$
          type: string
          maxLength: 150
        MinimumSamplingIntervalMs:
          maximum: 4294967295
          type: number
          minimum: 0
        DataPartitionId:
          $ref: '#/components/schemas/DataPartitionId'
      required:
        - Name
    SignalFetchConfig:
      oneOf:
        - type: object
          title: TimeBased
          properties:
            TimeBased:
              $ref: '#/components/schemas/TimeBasedSignalFetchConfig'
          required:
            - TimeBased
          additionalProperties: false
        - type: object
          title: ConditionBased
          properties:
            ConditionBased:
              $ref: '#/components/schemas/ConditionBasedSignalFetchConfig'
          required:
            - ConditionBased
          additionalProperties: false
    SignalFetchInformation:
      type: object
      properties:
        FullyQualifiedName:
          type: string
          maxLength: 150
          minLength: 1
          pattern: ^[a-zA-Z0-9_.]+$
        SignalFetchConfig:
          $ref: '#/components/schemas/SignalFetchConfig'
        ConditionLanguageVersion:
          type: number
          maximum: 1
          minimum: 1
        Actions:
          type: array
          items:
            type: string
            maxLength: 2048
            minLength: 1
          maxItems: 5
          minItems: 1
      required:
        - Actions
        - FullyQualifiedName
        - SignalFetchConfig
      additionalProperties: false
    TimeBasedCollectionScheme:
      additionalProperties: false
      type: object
      properties:
        PeriodMs:
          maximum: 86400000
          type: number
          minimum: 10000
      required:
        - PeriodMs
    TimeBasedSignalFetchConfig:
      type: object
      properties:
        ExecutionFrequencyMs:
          type: number
          minimum: 1
      required:
        - ExecutionFrequencyMs
      additionalProperties: false
    SpoolingMode:
      type: string
      enum:
        - 'OFF'
        - TO_DISK
      default: 'OFF'
    TriggerMode:
      type: string
      enum:
        - ALWAYS
        - RISING_EDGE
    DataFormat:
      type: string
      enum:
        - JSON
        - PARQUET
    StorageCompressionFormat:
      type: string
      enum:
        - NONE
        - GZIP
    CollectionScheme:
      oneOf:
        - additionalProperties: false
          type: object
          title: TimeBasedCollectionScheme
          properties:
            TimeBasedCollectionScheme:
              $ref: '#/components/schemas/TimeBasedCollectionScheme'
          required:
            - TimeBasedCollectionScheme
        - additionalProperties: false
          type: object
          title: ConditionBasedCollectionScheme
          properties:
            ConditionBasedCollectionScheme:
              $ref: '#/components/schemas/ConditionBasedCollectionScheme'
          required:
            - ConditionBasedCollectionScheme
    ConditionBasedCollectionScheme:
      additionalProperties: false
      type: object
      properties:
        MinimumTriggerIntervalMs:
          maximum: 4294967295
          type: number
          minimum: 0
        Expression:
          $ref: '#/components/schemas/EventExpression'
        TriggerMode:
          $ref: '#/components/schemas/TriggerMode'
        ConditionLanguageVersion:
          $ref: '#/components/schemas/LanguageVersion'
      required:
        - Expression
    EventExpression:
      type: string
      minLength: 1
      maxLength: 2048
    LanguageVersion:
      type: integer
      minimum: 1
    DataPartition:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/DataPartitionId'
        StorageOptions:
          $ref: '#/components/schemas/DataPartitionStorageOptions'
        UploadOptions:
          $ref: '#/components/schemas/DataPartitionUploadOptions'
      required:
        - Id
        - StorageOptions
      additionalProperties: false
    DataPartitionStorageOptions:
      type: object
      properties:
        MaximumSize:
          $ref: '#/components/schemas/StorageMaximumSize'
        MinimumTimeToLive:
          $ref: '#/components/schemas/StorageMinimumTimeToLive'
        StorageLocation:
          $ref: '#/components/schemas/StorageLocation'
      required:
        - MaximumSize
        - MinimumTimeToLive
        - StorageLocation
      additionalProperties: false
    StorageLocation:
      type: string
      minLength: 1
      maxLength: 4096
    StorageMaximumSize:
      type: object
      properties:
        Unit:
          $ref: '#/components/schemas/StorageMaximumSizeUnit'
        Value:
          $ref: '#/components/schemas/StorageMaximumSizeValue'
      required:
        - Unit
        - Value
      additionalProperties: false
    StorageMaximumSizeUnit:
      type: string
      enum:
        - MB
        - GB
        - TB
    StorageMaximumSizeValue:
      type: integer
      minimum: 1
      maximum: 1073741824
    StorageMinimumTimeToLive:
      type: object
      properties:
        Unit:
          $ref: '#/components/schemas/StorageMinimumTimeToLiveUnit'
        Value:
          $ref: '#/components/schemas/StorageMinimumTimeToLiveValue'
      required:
        - Unit
        - Value
      additionalProperties: false
    StorageMinimumTimeToLiveUnit:
      type: string
      enum:
        - HOURS
        - DAYS
        - WEEKS
    StorageMinimumTimeToLiveValue:
      type: integer
      minimum: 1
      maximum: 10000
    DataPartitionUploadOptions:
      type: object
      properties:
        Expression:
          $ref: '#/components/schemas/EventExpression'
        ConditionLanguageVersion:
          $ref: '#/components/schemas/LanguageVersion'
      required:
        - Expression
      additionalProperties: false
    DataPartitionId:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 128
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    TimePeriod:
      type: object
      properties:
        Unit:
          $ref: '#/components/schemas/TimeUnit'
        Value:
          type: number
          minimum: 1
      required:
        - Unit
        - Value
      additionalProperties: false
    TimeUnit:
      type: string
      enum:
        - MILLISECOND
        - SECOND
        - MINUTE
        - HOUR
    Campaign:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/CampaignStatus'
        Action:
          $ref: '#/components/schemas/UpdateCampaignAction'
        CreationTime:
          type: string
          format: date-time
        Compression:
          $ref: '#/components/schemas/Compression'
        Description:
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
          type: string
          maxLength: 2048
        Priority:
          type: integer
          minimum: 0
          default: 0
        SignalsToCollect:
          minItems: 0
          maxItems: 1000
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/SignalInformation'
        SignalsToFetch:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SignalFetchInformation'
          maxItems: 10
          minItems: 0
        DataDestinationConfigs:
          minItems: 1
          maxItems: 1
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/DataDestinationConfig'
        StartTime:
          format: date-time
          type: string
          default: '0'
        Name:
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
          type: string
          maxLength: 100
        ExpiryTime:
          format: date-time
          type: string
          default: '253402214400'
        LastModificationTime:
          type: string
          format: date-time
        SpoolingMode:
          $ref: '#/components/schemas/SpoolingMode'
        SignalCatalogArn:
          type: string
        PostTriggerCollectionDuration:
          maximum: 4294967295
          type: number
          minimum: 0
          default: 0
        DataExtraDimensions:
          minItems: 0
          maxItems: 5
          x-insertionOrder: false
          type: array
          items:
            minLength: 1
            pattern: ^[a-zA-Z0-9_.]+$
            type: string
            maxLength: 150
        DiagnosticsMode:
          $ref: '#/components/schemas/DiagnosticsMode'
        TargetArn:
          type: string
        Arn:
          type: string
        CollectionScheme:
          $ref: '#/components/schemas/CollectionScheme'
        DataPartitions:
          type: array
          items:
            $ref: '#/components/schemas/DataPartition'
          x-insertionOrder: true
          uniqueItems: true
          maxItems: 20
          minItems: 0
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          minItems: 0
      required:
        - Name
        - CollectionScheme
        - SignalCatalogArn
        - TargetArn
      x-stackql-resource-name: campaign
      description: Definition of AWS::IoTFleetWise::Campaign Resource Type
      x-type-name: AWS::IoTFleetWise::Campaign
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - TargetArn
        - SignalCatalogArn
        - PostTriggerCollectionDuration
        - DiagnosticsMode
        - SpoolingMode
        - CollectionScheme
        - Priority
        - Compression
        - StartTime
        - ExpiryTime
        - DataPartitions
      x-write-only-properties:
        - Action
      x-read-only-properties:
        - Arn
        - Status
        - CreationTime
        - LastModificationTime
      x-required-properties:
        - Name
        - CollectionScheme
        - SignalCatalogArn
        - TargetArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:UntagResource
          - iotfleetwise:TagResource
          - iotfleetwise:ListTagsForResource
      x-required-permissions:
        read:
          - iotfleetwise:GetCampaign
          - iotfleetwise:ListTagsForResource
        create:
          - iotfleetwise:CreateCampaign
          - iotfleetwise:GetCampaign
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iam:PassRole
          - timestream:DescribeEndpoints
          - timestream:DescribeTable
        update:
          - iotfleetwise:GetCampaign
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:UpdateCampaign
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        list:
          - iotfleetwise:ListCampaigns
          - iotfleetwise:GetCampaign
        delete:
          - iotfleetwise:DeleteCampaign
          - iotfleetwise:GetCampaign
    CanInterface:
      type: object
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
        ProtocolName:
          type: string
          maxLength: 50
          minLength: 1
        ProtocolVersion:
          type: string
          maxLength: 50
          minLength: 1
      required:
        - Name
      additionalProperties: false
    CanSignal:
      type: object
      properties:
        MessageId:
          type: integer
        IsBigEndian:
          type: boolean
        IsSigned:
          type: boolean
        StartBit:
          type: integer
        Offset:
          type: number
        Factor:
          type: number
        Length:
          type: integer
        Name:
          type: string
          maxLength: 100
          minLength: 1
      required:
        - Factor
        - IsBigEndian
        - IsSigned
        - Length
        - MessageId
        - Offset
        - StartBit
      additionalProperties: false
    ManifestStatus:
      type: string
      enum:
        - ACTIVE
        - DRAFT
      default: DRAFT
    CanNetworkInterface:
      type: object
      properties:
        InterfaceId:
          type: string
          maxLength: 50
          minLength: 1
        Type:
          type: string
          enum:
            - CAN_INTERFACE
        CanInterface:
          $ref: '#/components/schemas/CanInterface'
      required:
        - InterfaceId
        - Type
        - CanInterface
      additionalProperties: false
    ObdNetworkInterface:
      type: object
      properties:
        InterfaceId:
          type: string
          maxLength: 50
          minLength: 1
        Type:
          type: string
          enum:
            - OBD_INTERFACE
        ObdInterface:
          $ref: '#/components/schemas/ObdInterface'
      required:
        - InterfaceId
        - Type
        - ObdInterface
      additionalProperties: false
    ObdInterface:
      type: object
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
        RequestMessageId:
          type: integer
        ObdStandard:
          type: string
          maxLength: 50
          minLength: 1
        PidRequestIntervalSeconds:
          type: integer
        DtcRequestIntervalSeconds:
          type: integer
        UseExtendedIds:
          type: boolean
        HasTransmissionEcu:
          type: boolean
      required:
        - Name
        - RequestMessageId
      additionalProperties: false
    ObdSignal:
      type: object
      properties:
        PidResponseLength:
          type: integer
        ServiceMode:
          type: integer
        Pid:
          type: integer
        Scaling:
          type: number
        Offset:
          type: number
        StartByte:
          type: integer
        ByteLength:
          type: integer
        BitRightShift:
          type: integer
        BitMaskLength:
          type: integer
      required:
        - ByteLength
        - Offset
        - Pid
        - PidResponseLength
        - Scaling
        - ServiceMode
        - StartByte
      additionalProperties: false
    CanSignalDecoder:
      type: object
      properties:
        FullyQualifiedName:
          type: string
          maxLength: 150
          minLength: 1
        Type:
          type: string
          enum:
            - CAN_SIGNAL
        InterfaceId:
          type: string
          maxLength: 50
          minLength: 1
        CanSignal:
          $ref: '#/components/schemas/CanSignal'
      required:
        - FullyQualifiedName
        - InterfaceId
        - Type
        - CanSignal
      additionalProperties: false
    ObdSignalDecoder:
      type: object
      properties:
        FullyQualifiedName:
          type: string
          maxLength: 150
          minLength: 1
        Type:
          type: string
          enum:
            - OBD_SIGNAL
        InterfaceId:
          type: string
          maxLength: 50
          minLength: 1
        ObdSignal:
          $ref: '#/components/schemas/ObdSignal'
      required:
        - FullyQualifiedName
        - InterfaceId
        - Type
        - ObdSignal
      additionalProperties: false
    CustomDecodingNetworkInterface:
      type: object
      properties:
        InterfaceId:
          type: string
          maxLength: 50
          minLength: 1
        Type:
          type: string
          enum:
            - CUSTOM_DECODING_INTERFACE
        CustomDecodingInterface:
          $ref: '#/components/schemas/CustomDecodingInterface'
      required:
        - InterfaceId
        - Type
        - CustomDecodingInterface
      additionalProperties: false
    CustomDecodingInterface:
      type: object
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
      required:
        - Name
      additionalProperties: false
    CustomDecodingSignal:
      type: object
      properties:
        Id:
          type: string
          maxLength: 150
          minLength: 1
          pattern: ^(?!.*\.\.)[a-zA-Z0-9_\-#:.]+$
      required:
        - Id
      additionalProperties: false
    CustomDecodingSignalDecoder:
      type: object
      properties:
        FullyQualifiedName:
          type: string
          maxLength: 150
          minLength: 1
        Type:
          type: string
          enum:
            - CUSTOM_DECODING_SIGNAL
        InterfaceId:
          type: string
          maxLength: 50
          minLength: 1
        CustomDecodingSignal:
          $ref: '#/components/schemas/CustomDecodingSignal'
      required:
        - FullyQualifiedName
        - InterfaceId
        - Type
        - CustomDecodingSignal
      additionalProperties: false
    DefaultForUnmappedSignalsType:
      type: string
      enum:
        - CUSTOM_DECODING
    DecoderManifest:
      type: object
      properties:
        Arn:
          type: string
        CreationTime:
          type: string
          format: date-time
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        LastModificationTime:
          type: string
          format: date-time
        ModelManifestArn:
          type: string
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
        NetworkInterfaces:
          x-insertionOrder: false
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/CanNetworkInterface'
              - $ref: '#/components/schemas/ObdNetworkInterface'
              - $ref: '#/components/schemas/CustomDecodingNetworkInterface'
          maxItems: 5000
          minItems: 1
        SignalDecoders:
          x-insertionOrder: false
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/CanSignalDecoder'
              - $ref: '#/components/schemas/ObdSignalDecoder'
              - $ref: '#/components/schemas/CustomDecodingSignalDecoder'
          maxItems: 5000
          minItems: 1
        Status:
          $ref: '#/components/schemas/ManifestStatus'
        DefaultForUnmappedSignals:
          $ref: '#/components/schemas/DefaultForUnmappedSignalsType'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          x-insertionOrder: false
          uniqueItems: true
      required:
        - Name
        - ModelManifestArn
      x-stackql-resource-name: decoder_manifest
      description: Definition of AWS::IoTFleetWise::DecoderManifest Resource Type
      x-type-name: AWS::IoTFleetWise::DecoderManifest
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - ModelManifestArn
      x-write-only-properties:
        - DefaultForUnmappedSignals
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModificationTime
      x-required-properties:
        - Name
        - ModelManifestArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:UntagResource
          - iotfleetwise:TagResource
          - iotfleetwise:ListTagsForResource
      x-required-permissions:
        create:
          - iotfleetwise:CreateDecoderManifest
          - iotfleetwise:GetDecoderManifest
          - iotfleetwise:UpdateDecoderManifest
          - iotfleetwise:ListDecoderManifestSignals
          - iotfleetwise:ListDecoderManifestNetworkInterfaces
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
        read:
          - iotfleetwise:GetDecoderManifest
          - iotfleetwise:ListDecoderManifestSignals
          - iotfleetwise:ListDecoderManifestNetworkInterfaces
          - iotfleetwise:ListTagsForResource
        update:
          - iotfleetwise:UpdateDecoderManifest
          - iotfleetwise:GetDecoderManifest
          - iotfleetwise:ListDecoderManifestSignals
          - iotfleetwise:ListDecoderManifestNetworkInterfaces
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        delete:
          - iotfleetwise:DeleteDecoderManifest
          - iotfleetwise:GetDecoderManifest
        list:
          - iotfleetwise:ListDecoderManifests
    Fleet:
      type: object
      properties:
        Arn:
          type: string
        CreationTime:
          type: string
          format: date-time
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        Id:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9:_-]+$
        LastModificationTime:
          type: string
          format: date-time
        SignalCatalogArn:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          minItems: 0
      required:
        - Id
        - SignalCatalogArn
      x-stackql-resource-name: fleet
      description: Definition of AWS::IoTFleetWise::Fleet Resource Type
      x-type-name: AWS::IoTFleetWise::Fleet
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - Id
        - SignalCatalogArn
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModificationTime
      x-required-properties:
        - Id
        - SignalCatalogArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:UntagResource
          - iotfleetwise:TagResource
          - iotfleetwise:ListTagsForResource
      x-required-permissions:
        create:
          - iotfleetwise:GetFleet
          - iotfleetwise:CreateFleet
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:ListVehiclesInFleet
          - iotfleetwise:TagResource
        read:
          - iotfleetwise:GetFleet
          - iotfleetwise:ListTagsForResource
        update:
          - iotfleetwise:GetFleet
          - iotfleetwise:UpdateFleet
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        delete:
          - iotfleetwise:GetFleet
          - iotfleetwise:DeleteFleet
        list:
          - iotfleetwise:ListFleets
    ModelManifest:
      type: object
      properties:
        Arn:
          type: string
        CreationTime:
          type: string
          format: date-time
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        LastModificationTime:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
        Nodes:
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          type: array
          items:
            type: string
        SignalCatalogArn:
          type: string
        Status:
          $ref: '#/components/schemas/ManifestStatus'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          minItems: 0
      required:
        - SignalCatalogArn
        - Name
      x-stackql-resource-name: model_manifest
      description: Definition of AWS::IoTFleetWise::ModelManifest Resource Type
      x-type-name: AWS::IoTFleetWise::ModelManifest
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModificationTime
      x-required-properties:
        - SignalCatalogArn
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:UntagResource
          - iotfleetwise:TagResource
          - iotfleetwise:ListTagsForResource
      x-required-permissions:
        create:
          - iotfleetwise:CreateModelManifest
          - iotfleetwise:GetModelManifest
          - iotfleetwise:UpdateModelManifest
          - iotfleetwise:ListModelManifestNodes
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
        read:
          - iotfleetwise:GetModelManifest
          - iotfleetwise:ListModelManifestNodes
          - iotfleetwise:ListTagsForResource
        update:
          - iotfleetwise:UpdateModelManifest
          - iotfleetwise:GetModelManifest
          - iotfleetwise:ListModelManifestNodes
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        delete:
          - iotfleetwise:DeleteModelManifest
          - iotfleetwise:GetModelManifest
        list:
          - iotfleetwise:ListModelManifests
    Actuator:
      type: object
      properties:
        FullyQualifiedName:
          type: string
        DataType:
          $ref: '#/components/schemas/NodeDataType'
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        Unit:
          type: string
        AllowedValues:
          $ref: '#/components/schemas/AllowedValues'
        Min:
          type: number
        Max:
          type: number
        AssignedValue:
          type: string
      required:
        - DataType
        - FullyQualifiedName
      additionalProperties: false
    AllowedValues:
      type: array
      x-insertionOrder: false
      items:
        type: string
      minItems: 1
    Attribute:
      type: object
      properties:
        FullyQualifiedName:
          type: string
        DataType:
          $ref: '#/components/schemas/NodeDataType'
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        Unit:
          type: string
        AllowedValues:
          $ref: '#/components/schemas/AllowedValues'
        Min:
          type: number
        Max:
          type: number
        AssignedValue:
          type: string
        DefaultValue:
          type: string
      required:
        - DataType
        - FullyQualifiedName
      additionalProperties: false
    Branch:
      type: object
      properties:
        FullyQualifiedName:
          type: string
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
      required:
        - FullyQualifiedName
      additionalProperties: false
    Node:
      oneOf:
        - type: object
          title: Branch
          properties:
            Branch:
              $ref: '#/components/schemas/Branch'
          additionalProperties: false
        - type: object
          title: Sensor
          properties:
            Sensor:
              $ref: '#/components/schemas/Sensor'
          additionalProperties: false
        - type: object
          title: Actuator
          properties:
            Actuator:
              $ref: '#/components/schemas/Actuator'
          additionalProperties: false
        - type: object
          title: Attribute
          properties:
            Attribute:
              $ref: '#/components/schemas/Attribute'
          additionalProperties: false
    NodeCounts:
      type: object
      properties:
        TotalNodes:
          type: number
        TotalBranches:
          type: number
        TotalSensors:
          type: number
        TotalAttributes:
          type: number
        TotalActuators:
          type: number
      additionalProperties: false
    NodeDataType:
      type: string
      enum:
        - INT8
        - UINT8
        - INT16
        - UINT16
        - INT32
        - UINT32
        - INT64
        - UINT64
        - BOOLEAN
        - FLOAT
        - DOUBLE
        - STRING
        - UNIX_TIMESTAMP
        - INT8_ARRAY
        - UINT8_ARRAY
        - INT16_ARRAY
        - UINT16_ARRAY
        - INT32_ARRAY
        - UINT32_ARRAY
        - INT64_ARRAY
        - UINT64_ARRAY
        - BOOLEAN_ARRAY
        - FLOAT_ARRAY
        - DOUBLE_ARRAY
        - STRING_ARRAY
        - UNIX_TIMESTAMP_ARRAY
        - UNKNOWN
    Sensor:
      type: object
      properties:
        FullyQualifiedName:
          type: string
        DataType:
          $ref: '#/components/schemas/NodeDataType'
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        Unit:
          type: string
        AllowedValues:
          $ref: '#/components/schemas/AllowedValues'
        Min:
          type: number
        Max:
          type: number
      required:
        - DataType
        - FullyQualifiedName
      additionalProperties: false
    SignalCatalog:
      type: object
      properties:
        Arn:
          type: string
        CreationTime:
          format: date-time
          type: string
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        LastModificationTime:
          format: date-time
          type: string
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
        NodeCounts:
          $ref: '#/components/schemas/NodeCounts'
        Nodes:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Node'
          maxItems: 5000
          minItems: 1
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          minItems: 0
      x-stackql-resource-name: signal_catalog
      description: Definition of AWS::IoTFleetWise::SignalCatalog Resource Type
      x-type-name: AWS::IoTFleetWise::SignalCatalog
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModificationTime
        - NodeCounts/TotalNodes
        - NodeCounts/TotalBranches
        - NodeCounts/TotalSensors
        - NodeCounts/TotalAttributes
        - NodeCounts/TotalActuators
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:UntagResource
          - iotfleetwise:TagResource
          - iotfleetwise:ListTagsForResource
      x-required-permissions:
        create:
          - iotfleetwise:GetSignalCatalog
          - iotfleetwise:CreateSignalCatalog
          - iotfleetwise:ListSignalCatalogNodes
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
        read:
          - iotfleetwise:GetSignalCatalog
          - iotfleetwise:ListSignalCatalogNodes
          - iotfleetwise:ListTagsForResource
        update:
          - iotfleetwise:GetSignalCatalog
          - iotfleetwise:UpdateSignalCatalog
          - iotfleetwise:ListSignalCatalogNodes
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        delete:
          - iotfleetwise:GetSignalCatalog
          - iotfleetwise:DeleteSignalCatalog
        list:
          - iotfleetwise:ListSignalCatalogs
    Unit:
      type: object
      additionalProperties: false
    StateTemplate:
      type: object
      properties:
        Arn:
          type: string
        CreationTime:
          type: string
          format: date-time
        Description:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^[^\u0000-\u001F\u007F]+$
        LastModificationTime:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
        SignalCatalogArn:
          type: string
        StateTemplateProperties:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 150
            minLength: 1
            pattern: ^[a-zA-Z0-9_.]+$
          maxItems: 500
          minItems: 1
        DataExtraDimensions:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 150
            minLength: 1
            pattern: ^[a-zA-Z0-9_.]+$
          maxItems: 5
          minItems: 0
        MetadataExtraDimensions:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 150
            minLength: 1
            pattern: ^[a-zA-Z0-9_.]+$
          maxItems: 5
          minItems: 0
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
      required:
        - Name
        - SignalCatalogArn
        - StateTemplateProperties
      x-stackql-resource-name: state_template
      description: Definition of AWS::IoTFleetWise::StateTemplate Resource Type
      x-type-name: AWS::IoTFleetWise::StateTemplate
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - SignalCatalogArn
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModificationTime
      x-required-properties:
        - Name
        - SignalCatalogArn
        - StateTemplateProperties
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
      x-required-permissions:
        create:
          - iotfleetwise:GetStateTemplate
          - iotfleetwise:CreateStateTemplate
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
        read:
          - iotfleetwise:GetStateTemplate
          - iotfleetwise:ListTagsForResource
        update:
          - iotfleetwise:UpdateStateTemplate
          - iotfleetwise:GetStateTemplate
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        delete:
          - iotfleetwise:DeleteStateTemplate
          - iotfleetwise:GetStateTemplate
        list:
          - iotfleetwise:ListStateTemplates
    VehicleAssociationBehavior:
      type: string
      enum:
        - CreateIotThing
        - ValidateIotThingExists
    attributesMap:
      type: object
      x-patternProperties:
        ^[a-zA-Z0-9_.-]+$:
          type: string
      minProperties: 1
      additionalProperties: false
    Vehicle:
      type: object
      properties:
        Arn:
          type: string
        AssociationBehavior:
          $ref: '#/components/schemas/VehicleAssociationBehavior'
        Attributes:
          $ref: '#/components/schemas/attributesMap'
        CreationTime:
          type: string
          format: date-time
        DecoderManifestArn:
          type: string
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z\d\-_:]+$
        LastModificationTime:
          type: string
          format: date-time
        ModelManifestArn:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 50
          minItems: 0
      required:
        - Name
        - DecoderManifestArn
        - ModelManifestArn
      x-stackql-resource-name: vehicle
      description: Definition of AWS::IoTFleetWise::Vehicle Resource Type
      x-type-name: AWS::IoTFleetWise::Vehicle
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - AssociationBehavior
      x-read-only-properties:
        - Arn
        - CreationTime
        - LastModificationTime
      x-required-properties:
        - Name
        - DecoderManifestArn
        - ModelManifestArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iotfleetwise:UntagResource
          - iotfleetwise:TagResource
          - iotfleetwise:ListTagsForResource
      x-required-permissions:
        create:
          - iotfleetwise:GetVehicle
          - iotfleetwise:CreateVehicle
          - iot:CreateThing
          - iot:DescribeThing
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:ListVehicles
          - iotfleetwise:TagResource
        read:
          - iotfleetwise:GetVehicle
          - iotfleetwise:ListTagsForResource
        update:
          - iotfleetwise:GetVehicle
          - iotfleetwise:UpdateVehicle
          - iotfleetwise:ListTagsForResource
          - iotfleetwise:TagResource
          - iotfleetwise:UntagResource
        delete:
          - iotfleetwise:GetVehicle
          - iotfleetwise:DeleteVehicle
        list:
          - iotfleetwise:ListVehicles
    CreateCampaignRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Status:
              $ref: '#/components/schemas/CampaignStatus'
            Action:
              $ref: '#/components/schemas/UpdateCampaignAction'
            CreationTime:
              type: string
              format: date-time
            Compression:
              $ref: '#/components/schemas/Compression'
            Description:
              minLength: 1
              pattern: ^[^\u0000-\u001F\u007F]+$
              type: string
              maxLength: 2048
            Priority:
              type: integer
              minimum: 0
              default: 0
            SignalsToCollect:
              minItems: 0
              maxItems: 1000
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/SignalInformation'
            SignalsToFetch:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SignalFetchInformation'
              maxItems: 10
              minItems: 0
            DataDestinationConfigs:
              minItems: 1
              maxItems: 1
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/DataDestinationConfig'
            StartTime:
              format: date-time
              type: string
              default: '0'
            Name:
              minLength: 1
              pattern: ^[a-zA-Z\d\-_:]+$
              type: string
              maxLength: 100
            ExpiryTime:
              format: date-time
              type: string
              default: '253402214400'
            LastModificationTime:
              type: string
              format: date-time
            SpoolingMode:
              $ref: '#/components/schemas/SpoolingMode'
            SignalCatalogArn:
              type: string
            PostTriggerCollectionDuration:
              maximum: 4294967295
              type: number
              minimum: 0
              default: 0
            DataExtraDimensions:
              minItems: 0
              maxItems: 5
              x-insertionOrder: false
              type: array
              items:
                minLength: 1
                pattern: ^[a-zA-Z0-9_.]+$
                type: string
                maxLength: 150
            DiagnosticsMode:
              $ref: '#/components/schemas/DiagnosticsMode'
            TargetArn:
              type: string
            Arn:
              type: string
            CollectionScheme:
              $ref: '#/components/schemas/CollectionScheme'
            DataPartitions:
              type: array
              items:
                $ref: '#/components/schemas/DataPartition'
              x-insertionOrder: true
              uniqueItems: true
              maxItems: 20
              minItems: 0
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
              maxItems: 50
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateCampaignRequest
      type: object
      required: []
    CreateDecoderManifestRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            CreationTime:
              type: string
              format: date-time
            Description:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^[^\u0000-\u001F\u007F]+$
            LastModificationTime:
              type: string
              format: date-time
            ModelManifestArn:
              type: string
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z\d\-_:]+$
            NetworkInterfaces:
              x-insertionOrder: false
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/CanNetworkInterface'
                  - $ref: '#/components/schemas/ObdNetworkInterface'
                  - $ref: '#/components/schemas/CustomDecodingNetworkInterface'
              maxItems: 5000
              minItems: 1
            SignalDecoders:
              x-insertionOrder: false
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/CanSignalDecoder'
                  - $ref: '#/components/schemas/ObdSignalDecoder'
                  - $ref: '#/components/schemas/CustomDecodingSignalDecoder'
              maxItems: 5000
              minItems: 1
            Status:
              $ref: '#/components/schemas/ManifestStatus'
            DefaultForUnmappedSignals:
              $ref: '#/components/schemas/DefaultForUnmappedSignalsType'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 50
              minItems: 0
              x-insertionOrder: false
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateDecoderManifestRequest
      type: object
      required: []
    CreateFleetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            CreationTime:
              type: string
              format: date-time
            Description:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^[^\u0000-\u001F\u007F]+$
            Id:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z0-9:_-]+$
            LastModificationTime:
              type: string
              format: date-time
            SignalCatalogArn:
              type: string
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
              maxItems: 50
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateFleetRequest
      type: object
      required: []
    CreateModelManifestRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            CreationTime:
              type: string
              format: date-time
            Description:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^[^\u0000-\u001F\u007F]+$
            LastModificationTime:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z\d\-_:]+$
            Nodes:
              x-insertionOrder: false
              uniqueItems: true
              minItems: 1
              type: array
              items:
                type: string
            SignalCatalogArn:
              type: string
            Status:
              $ref: '#/components/schemas/ManifestStatus'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
              maxItems: 50
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateModelManifestRequest
      type: object
      required: []
    CreateSignalCatalogRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            CreationTime:
              format: date-time
              type: string
            Description:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^[^\u0000-\u001F\u007F]+$
            LastModificationTime:
              format: date-time
              type: string
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z\d\-_:]+$
            NodeCounts:
              $ref: '#/components/schemas/NodeCounts'
            Nodes:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Node'
              maxItems: 5000
              minItems: 1
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
              maxItems: 50
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateSignalCatalogRequest
      type: object
      required: []
    CreateStateTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            CreationTime:
              type: string
              format: date-time
            Description:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^[^\u0000-\u001F\u007F]+$
            LastModificationTime:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z\d\-_:]+$
            SignalCatalogArn:
              type: string
            StateTemplateProperties:
              type: array
              x-insertionOrder: false
              items:
                type: string
                maxLength: 150
                minLength: 1
                pattern: ^[a-zA-Z0-9_.]+$
              maxItems: 500
              minItems: 1
            DataExtraDimensions:
              type: array
              x-insertionOrder: false
              items:
                type: string
                maxLength: 150
                minLength: 1
                pattern: ^[a-zA-Z0-9_.]+$
              maxItems: 5
              minItems: 0
            MetadataExtraDimensions:
              type: array
              x-insertionOrder: false
              items:
                type: string
                maxLength: 150
                minLength: 1
                pattern: ^[a-zA-Z0-9_.]+$
              maxItems: 5
              minItems: 0
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 50
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateStateTemplateRequest
      type: object
      required: []
    CreateVehicleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            AssociationBehavior:
              $ref: '#/components/schemas/VehicleAssociationBehavior'
            Attributes:
              $ref: '#/components/schemas/attributesMap'
            CreationTime:
              type: string
              format: date-time
            DecoderManifestArn:
              type: string
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z\d\-_:]+$
            LastModificationTime:
              type: string
              format: date-time
            ModelManifestArn:
              type: string
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
              maxItems: 50
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateVehicleRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    campaigns:
      name: campaigns
      id: aws.iotfleetwise.campaigns
      x-cfn-schema-name: Campaign
      x-cfn-type-name: AWS::IoTFleetWise::Campaign
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Campaign&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Campaign"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Campaign"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Campaign"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/campaigns/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Action') as action,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Compression') as compression,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.SignalsToCollect') as signals_to_collect,
              JSON_EXTRACT(Properties, '$.SignalsToFetch') as signals_to_fetch,
              JSON_EXTRACT(Properties, '$.DataDestinationConfigs') as data_destination_configs,
              JSON_EXTRACT(Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ExpiryTime') as expiry_time,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.SpoolingMode') as spooling_mode,
              JSON_EXTRACT(Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(Properties, '$.PostTriggerCollectionDuration') as post_trigger_collection_duration,
              JSON_EXTRACT(Properties, '$.DataExtraDimensions') as data_extra_dimensions,
              JSON_EXTRACT(Properties, '$.DiagnosticsMode') as diagnostics_mode,
              JSON_EXTRACT(Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CollectionScheme') as collection_scheme,
              JSON_EXTRACT(Properties, '$.DataPartitions') as data_partitions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::Campaign'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Action') as action,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Compression') as compression,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Priority') as priority,
                JSON_EXTRACT(detail.Properties, '$.SignalsToCollect') as signals_to_collect,
                JSON_EXTRACT(detail.Properties, '$.SignalsToFetch') as signals_to_fetch,
                JSON_EXTRACT(detail.Properties, '$.DataDestinationConfigs') as data_destination_configs,
                JSON_EXTRACT(detail.Properties, '$.StartTime') as start_time,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ExpiryTime') as expiry_time,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.SpoolingMode') as spooling_mode,
                JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
                JSON_EXTRACT(detail.Properties, '$.PostTriggerCollectionDuration') as post_trigger_collection_duration,
                JSON_EXTRACT(detail.Properties, '$.DataExtraDimensions') as data_extra_dimensions,
                JSON_EXTRACT(detail.Properties, '$.DiagnosticsMode') as diagnostics_mode,
                JSON_EXTRACT(detail.Properties, '$.TargetArn') as target_arn,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CollectionScheme') as collection_scheme,
                JSON_EXTRACT(detail.Properties, '$.DataPartitions') as data_partitions,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Campaign'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::Campaign'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Action') as action,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Compression') as compression,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Priority') as priority,
                  json_extract_path_text(Properties, 'SignalsToCollect') as signals_to_collect,
                  json_extract_path_text(Properties, 'SignalsToFetch') as signals_to_fetch,
                  json_extract_path_text(Properties, 'DataDestinationConfigs') as data_destination_configs,
                  json_extract_path_text(Properties, 'StartTime') as start_time,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ExpiryTime') as expiry_time,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'SpoolingMode') as spooling_mode,
                  json_extract_path_text(Properties, 'SignalCatalogArn') as signal_catalog_arn,
                  json_extract_path_text(Properties, 'PostTriggerCollectionDuration') as post_trigger_collection_duration,
                  json_extract_path_text(Properties, 'DataExtraDimensions') as data_extra_dimensions,
                  json_extract_path_text(Properties, 'DiagnosticsMode') as diagnostics_mode,
                  json_extract_path_text(Properties, 'TargetArn') as target_arn,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CollectionScheme') as collection_scheme,
                  json_extract_path_text(Properties, 'DataPartitions') as data_partitions,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::Campaign'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Action') as action,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Compression') as compression,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Priority') as priority,
                    json_extract_path_text(detail.Properties, 'SignalsToCollect') as signals_to_collect,
                    json_extract_path_text(detail.Properties, 'SignalsToFetch') as signals_to_fetch,
                    json_extract_path_text(detail.Properties, 'DataDestinationConfigs') as data_destination_configs,
                    json_extract_path_text(detail.Properties, 'StartTime') as start_time,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ExpiryTime') as expiry_time,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'SpoolingMode') as spooling_mode,
                    json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                    json_extract_path_text(detail.Properties, 'PostTriggerCollectionDuration') as post_trigger_collection_duration,
                    json_extract_path_text(detail.Properties, 'DataExtraDimensions') as data_extra_dimensions,
                    json_extract_path_text(detail.Properties, 'DiagnosticsMode') as diagnostics_mode,
                    json_extract_path_text(detail.Properties, 'TargetArn') as target_arn,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CollectionScheme') as collection_scheme,
                    json_extract_path_text(detail.Properties, 'DataPartitions') as data_partitions,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Campaign'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::Campaign'
                    AND listing.region = 'us-east-1'
    campaigns_list_only:
      name: campaigns_list_only
      id: aws.iotfleetwise.campaigns_list_only
      x-cfn-schema-name: Campaign
      x-cfn-type-name: AWS::IoTFleetWise::Campaign
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::Campaign'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::Campaign'
                AND region = 'us-east-1'
    campaign_tags:
      name: campaign_tags
      id: aws.iotfleetwise.campaign_tags
      x-cfn-schema-name: Campaign
      x-cfn-type-name: AWS::IoTFleetWise::Campaign
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.Action') as action,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.Compression') as compression,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Priority') as priority,
              JSON_EXTRACT(detail.Properties, '$.SignalsToCollect') as signals_to_collect,
              JSON_EXTRACT(detail.Properties, '$.SignalsToFetch') as signals_to_fetch,
              JSON_EXTRACT(detail.Properties, '$.DataDestinationConfigs') as data_destination_configs,
              JSON_EXTRACT(detail.Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ExpiryTime') as expiry_time,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.SpoolingMode') as spooling_mode,
              JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(detail.Properties, '$.PostTriggerCollectionDuration') as post_trigger_collection_duration,
              JSON_EXTRACT(detail.Properties, '$.DataExtraDimensions') as data_extra_dimensions,
              JSON_EXTRACT(detail.Properties, '$.DiagnosticsMode') as diagnostics_mode,
              JSON_EXTRACT(detail.Properties, '$.TargetArn') as target_arn,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CollectionScheme') as collection_scheme,
              JSON_EXTRACT(detail.Properties, '$.DataPartitions') as data_partitions
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Campaign'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::Campaign'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'Action') as action,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'Compression') as compression,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Priority') as priority,
                json_extract_path_text(detail.Properties, 'SignalsToCollect') as signals_to_collect,
                json_extract_path_text(detail.Properties, 'SignalsToFetch') as signals_to_fetch,
                json_extract_path_text(detail.Properties, 'DataDestinationConfigs') as data_destination_configs,
                json_extract_path_text(detail.Properties, 'StartTime') as start_time,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ExpiryTime') as expiry_time,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'SpoolingMode') as spooling_mode,
                json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                json_extract_path_text(detail.Properties, 'PostTriggerCollectionDuration') as post_trigger_collection_duration,
                json_extract_path_text(detail.Properties, 'DataExtraDimensions') as data_extra_dimensions,
                json_extract_path_text(detail.Properties, 'DiagnosticsMode') as diagnostics_mode,
                json_extract_path_text(detail.Properties, 'TargetArn') as target_arn,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CollectionScheme') as collection_scheme,
                json_extract_path_text(detail.Properties, 'DataPartitions') as data_partitions
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Campaign'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::Campaign'
                AND listing.region = 'us-east-1'
    decoder_manifests:
      name: decoder_manifests
      id: aws.iotfleetwise.decoder_manifests
      x-cfn-schema-name: DecoderManifest
      x-cfn-type-name: AWS::IoTFleetWise::DecoderManifest
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DecoderManifest&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::DecoderManifest"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::DecoderManifest"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::DecoderManifest"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/decoder_manifests/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/decoder_manifests/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/decoder_manifests/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.ModelManifestArn') as model_manifest_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.NetworkInterfaces') as network_interfaces,
              JSON_EXTRACT(Properties, '$.SignalDecoders') as signal_decoders,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.DefaultForUnmappedSignals') as default_for_unmapped_signals,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.ModelManifestArn') as model_manifest_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.NetworkInterfaces') as network_interfaces,
                JSON_EXTRACT(detail.Properties, '$.SignalDecoders') as signal_decoders,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.DefaultForUnmappedSignals') as default_for_unmapped_signals,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'ModelManifestArn') as model_manifest_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'NetworkInterfaces') as network_interfaces,
                  json_extract_path_text(Properties, 'SignalDecoders') as signal_decoders,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'DefaultForUnmappedSignals') as default_for_unmapped_signals,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'ModelManifestArn') as model_manifest_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'NetworkInterfaces') as network_interfaces,
                    json_extract_path_text(detail.Properties, 'SignalDecoders') as signal_decoders,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'DefaultForUnmappedSignals') as default_for_unmapped_signals,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                    AND listing.region = 'us-east-1'
    decoder_manifests_list_only:
      name: decoder_manifests_list_only
      id: aws.iotfleetwise.decoder_manifests_list_only
      x-cfn-schema-name: DecoderManifest
      x-cfn-type-name: AWS::IoTFleetWise::DecoderManifest
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                AND region = 'us-east-1'
    decoder_manifest_tags:
      name: decoder_manifest_tags
      id: aws.iotfleetwise.decoder_manifest_tags
      x-cfn-schema-name: DecoderManifest
      x-cfn-type-name: AWS::IoTFleetWise::DecoderManifest
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.ModelManifestArn') as model_manifest_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.NetworkInterfaces') as network_interfaces,
              JSON_EXTRACT(detail.Properties, '$.SignalDecoders') as signal_decoders,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.DefaultForUnmappedSignals') as default_for_unmapped_signals
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'ModelManifestArn') as model_manifest_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'NetworkInterfaces') as network_interfaces,
                json_extract_path_text(detail.Properties, 'SignalDecoders') as signal_decoders,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'DefaultForUnmappedSignals') as default_for_unmapped_signals
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::DecoderManifest'
                AND listing.region = 'us-east-1'
    fleets:
      name: fleets
      id: aws.iotfleetwise.fleets
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::IoTFleetWise::Fleet
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::Fleet'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Fleet'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::Fleet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'SignalCatalogArn') as signal_catalog_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::Fleet'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Fleet'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::Fleet'
                    AND listing.region = 'us-east-1'
    fleets_list_only:
      name: fleets_list_only
      id: aws.iotfleetwise.fleets_list_only
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::IoTFleetWise::Fleet
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::Fleet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::Fleet'
                AND region = 'us-east-1'
    fleet_tags:
      name: fleet_tags
      id: aws.iotfleetwise.fleet_tags
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::IoTFleetWise::Fleet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Fleet'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::Fleet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Fleet'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::Fleet'
                AND listing.region = 'us-east-1'
    model_manifests:
      name: model_manifests
      id: aws.iotfleetwise.model_manifests
      x-cfn-schema-name: ModelManifest
      x-cfn-type-name: AWS::IoTFleetWise::ModelManifest
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModelManifest&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::ModelManifest"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::ModelManifest"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::ModelManifest"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/model_manifests/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/model_manifests/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/model_manifests/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Nodes') as nodes,
              JSON_EXTRACT(Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Nodes') as nodes,
                JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Nodes') as nodes,
                  json_extract_path_text(Properties, 'SignalCatalogArn') as signal_catalog_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Nodes') as nodes,
                    json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                    AND listing.region = 'us-east-1'
    model_manifests_list_only:
      name: model_manifests_list_only
      id: aws.iotfleetwise.model_manifests_list_only
      x-cfn-schema-name: ModelManifest
      x-cfn-type-name: AWS::IoTFleetWise::ModelManifest
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                AND region = 'us-east-1'
    model_manifest_tags:
      name: model_manifest_tags
      id: aws.iotfleetwise.model_manifest_tags
      x-cfn-schema-name: ModelManifest
      x-cfn-type-name: AWS::IoTFleetWise::ModelManifest
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Nodes') as nodes,
              JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Nodes') as nodes,
                json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                json_extract_path_text(detail.Properties, 'Status') as status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::ModelManifest'
                AND listing.region = 'us-east-1'
    signal_catalogs:
      name: signal_catalogs
      id: aws.iotfleetwise.signal_catalogs
      x-cfn-schema-name: SignalCatalog
      x-cfn-type-name: AWS::IoTFleetWise::SignalCatalog
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SignalCatalog&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::SignalCatalog"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::SignalCatalog"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::SignalCatalog"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/signal_catalogs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/signal_catalogs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/signal_catalogs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.NodeCounts') as node_counts,
              JSON_EXTRACT(Properties, '$.Nodes') as nodes,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.NodeCounts') as node_counts,
                JSON_EXTRACT(detail.Properties, '$.Nodes') as nodes,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'NodeCounts') as node_counts,
                  json_extract_path_text(Properties, 'Nodes') as nodes,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'NodeCounts') as node_counts,
                    json_extract_path_text(detail.Properties, 'Nodes') as nodes,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                    AND listing.region = 'us-east-1'
    signal_catalogs_list_only:
      name: signal_catalogs_list_only
      id: aws.iotfleetwise.signal_catalogs_list_only
      x-cfn-schema-name: SignalCatalog
      x-cfn-type-name: AWS::IoTFleetWise::SignalCatalog
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                AND region = 'us-east-1'
    signal_catalog_tags:
      name: signal_catalog_tags
      id: aws.iotfleetwise.signal_catalog_tags
      x-cfn-schema-name: SignalCatalog
      x-cfn-type-name: AWS::IoTFleetWise::SignalCatalog
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.NodeCounts') as node_counts,
              JSON_EXTRACT(detail.Properties, '$.Nodes') as nodes
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'NodeCounts') as node_counts,
                json_extract_path_text(detail.Properties, 'Nodes') as nodes
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::SignalCatalog'
                AND listing.region = 'us-east-1'
    state_templates:
      name: state_templates
      id: aws.iotfleetwise.state_templates
      x-cfn-schema-name: StateTemplate
      x-cfn-type-name: AWS::IoTFleetWise::StateTemplate
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StateTemplate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::StateTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::StateTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::StateTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/state_templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/state_templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/state_templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(Properties, '$.StateTemplateProperties') as state_template_properties,
              JSON_EXTRACT(Properties, '$.DataExtraDimensions') as data_extra_dimensions,
              JSON_EXTRACT(Properties, '$.MetadataExtraDimensions') as metadata_extra_dimensions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
                JSON_EXTRACT(detail.Properties, '$.StateTemplateProperties') as state_template_properties,
                JSON_EXTRACT(detail.Properties, '$.DataExtraDimensions') as data_extra_dimensions,
                JSON_EXTRACT(detail.Properties, '$.MetadataExtraDimensions') as metadata_extra_dimensions,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SignalCatalogArn') as signal_catalog_arn,
                  json_extract_path_text(Properties, 'StateTemplateProperties') as state_template_properties,
                  json_extract_path_text(Properties, 'DataExtraDimensions') as data_extra_dimensions,
                  json_extract_path_text(Properties, 'MetadataExtraDimensions') as metadata_extra_dimensions,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                    json_extract_path_text(detail.Properties, 'StateTemplateProperties') as state_template_properties,
                    json_extract_path_text(detail.Properties, 'DataExtraDimensions') as data_extra_dimensions,
                    json_extract_path_text(detail.Properties, 'MetadataExtraDimensions') as metadata_extra_dimensions,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                    AND listing.region = 'us-east-1'
    state_templates_list_only:
      name: state_templates_list_only
      id: aws.iotfleetwise.state_templates_list_only
      x-cfn-schema-name: StateTemplate
      x-cfn-type-name: AWS::IoTFleetWise::StateTemplate
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                AND region = 'us-east-1'
    state_template_tags:
      name: state_template_tags
      id: aws.iotfleetwise.state_template_tags
      x-cfn-schema-name: StateTemplate
      x-cfn-type-name: AWS::IoTFleetWise::StateTemplate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.SignalCatalogArn') as signal_catalog_arn,
              JSON_EXTRACT(detail.Properties, '$.StateTemplateProperties') as state_template_properties,
              JSON_EXTRACT(detail.Properties, '$.DataExtraDimensions') as data_extra_dimensions,
              JSON_EXTRACT(detail.Properties, '$.MetadataExtraDimensions') as metadata_extra_dimensions
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'SignalCatalogArn') as signal_catalog_arn,
                json_extract_path_text(detail.Properties, 'StateTemplateProperties') as state_template_properties,
                json_extract_path_text(detail.Properties, 'DataExtraDimensions') as data_extra_dimensions,
                json_extract_path_text(detail.Properties, 'MetadataExtraDimensions') as metadata_extra_dimensions
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::StateTemplate'
                AND listing.region = 'us-east-1'
    vehicles:
      name: vehicles
      id: aws.iotfleetwise.vehicles
      x-cfn-schema-name: Vehicle
      x-cfn-type-name: AWS::IoTFleetWise::Vehicle
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Vehicle&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Vehicle"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Vehicle"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTFleetWise::Vehicle"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/vehicles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/vehicles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/vehicles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AssociationBehavior') as association_behavior,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.DecoderManifestArn') as decoder_manifest_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(Properties, '$.ModelManifestArn') as model_manifest_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::Vehicle'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AssociationBehavior') as association_behavior,
                JSON_EXTRACT(detail.Properties, '$.Attributes') as attributes,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
                JSON_EXTRACT(detail.Properties, '$.DecoderManifestArn') as decoder_manifest_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
                JSON_EXTRACT(detail.Properties, '$.ModelManifestArn') as model_manifest_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AssociationBehavior') as association_behavior,
                  json_extract_path_text(Properties, 'Attributes') as attributes,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time,
                  json_extract_path_text(Properties, 'DecoderManifestArn') as decoder_manifest_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'LastModificationTime') as last_modification_time,
                  json_extract_path_text(Properties, 'ModelManifestArn') as model_manifest_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AssociationBehavior') as association_behavior,
                    json_extract_path_text(detail.Properties, 'Attributes') as attributes,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                    json_extract_path_text(detail.Properties, 'DecoderManifestArn') as decoder_manifest_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                    json_extract_path_text(detail.Properties, 'ModelManifestArn') as model_manifest_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                    AND detail.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                    AND listing.region = 'us-east-1'
    vehicles_list_only:
      name: vehicles_list_only
      id: aws.iotfleetwise.vehicles_list_only
      x-cfn-schema-name: Vehicle
      x-cfn-type-name: AWS::IoTFleetWise::Vehicle
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::Vehicle'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                AND region = 'us-east-1'
    vehicle_tags:
      name: vehicle_tags
      id: aws.iotfleetwise.vehicle_tags
      x-cfn-schema-name: Vehicle
      x-cfn-type-name: AWS::IoTFleetWise::Vehicle
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.AssociationBehavior') as association_behavior,
              JSON_EXTRACT(detail.Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(detail.Properties, '$.DecoderManifestArn') as decoder_manifest_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.LastModificationTime') as last_modification_time,
              JSON_EXTRACT(detail.Properties, '$.ModelManifestArn') as model_manifest_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
              AND detail.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'AssociationBehavior') as association_behavior,
                json_extract_path_text(detail.Properties, 'Attributes') as attributes,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time,
                json_extract_path_text(detail.Properties, 'DecoderManifestArn') as decoder_manifest_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'LastModificationTime') as last_modification_time,
                json_extract_path_text(detail.Properties, 'ModelManifestArn') as model_manifest_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                AND detail.data__TypeName = 'AWS::IoTFleetWise::Vehicle'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Campaign&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCampaign
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DecoderManifest&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDecoderManifest
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDecoderManifestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFleet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModelManifest&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModelManifest
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModelManifestRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SignalCatalog&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSignalCatalog
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSignalCatalogRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StateTemplate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStateTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStateTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Vehicle&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateVehicle
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateVehicleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
