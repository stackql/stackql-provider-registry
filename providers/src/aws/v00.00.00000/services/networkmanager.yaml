openapi: 3.0.0
info:
  title: NetworkManager
  version: 1.0.0
paths: {}
components:
  schemas:
    ProposedSegmentChange:
      description: The attachment to move from one segment to another.
      type: object
      properties:
        Tags:
          description: The key-value tags that changed for the segment.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AttachmentPolicyRuleNumber:
          description: The rule number in the policy document that applies to this change.
          type: integer
        SegmentName:
          description: The name of the segment to change.
          type: string
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      x-insertionOrder: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
      required:
        - Key
        - Value
      additionalProperties: false
    ConnectAttachmentOptions:
      description: Connect attachment options for protocol
      type: object
      properties:
        Protocol:
          type: string
          description: Tunnel protocol for connect attachment
      additionalProperties: false
    ConnectAttachment:
      type: object
      properties:
        CoreNetworkId:
          description: ID of the CoreNetwork that the attachment will be attached to.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: The ID of the attachment.
          type: string
        OwnerAccountId:
          description: The ID of the attachment account owner.
          type: string
        AttachmentType:
          description: The type of attachment.
          type: string
        State:
          description: State of the attachment.
          type: string
        EdgeLocation:
          description: Edge location of the attachment.
          type: string
        ResourceArn:
          description: The attachment resource ARN.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment attachment.
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        Tags:
          description: Tags for the attachment.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        TransportAttachmentId:
          description: Id of transport attachment
          type: string
        Options:
          description: Protocol options for connect attachment
          $ref: '#/components/schemas/ConnectAttachmentOptions'
      required:
        - CoreNetworkId
        - EdgeLocation
        - TransportAttachmentId
        - Options
      x-stackql-resource-name: connect_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
    ConnectPeerConfiguration:
      type: object
      properties:
        CoreNetworkAddress:
          type: string
        PeerAddress:
          type: string
        InsideCidrBlocks:
          type: array
          x-insertionOrder: false
          items:
            type: string
        Protocol:
          $ref: '#/components/schemas/TunnelProtocol'
        BgpConfigurations:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConnectPeerBgpConfiguration'
      additionalProperties: false
    TunnelProtocol:
      description: Tunnel protocol type (Only support GRE for now)
      type: string
    BgpOptions:
      description: Bgp options
      type: object
      properties:
        PeerAsn:
          type: number
      additionalProperties: false
    ConnectPeerBgpConfiguration:
      description: Bgp configuration for connect peer
      type: object
      properties:
        CoreNetworkAsn:
          type: number
        PeerAsn:
          type: number
        CoreNetworkAddress:
          type: string
        PeerAddress:
          type: string
      additionalProperties: false
    ConnectPeer:
      type: object
      properties:
        PeerAddress:
          description: The IP address of the Connect peer.
          type: string
        CoreNetworkAddress:
          description: The IP address of a core network.
          type: string
        BgpOptions:
          description: Bgp options for connect peer.
          $ref: '#/components/schemas/BgpOptions'
        InsideCidrBlocks:
          description: The inside IP addresses used for a Connect peer configuration.
          type: array
          x-insertionOrder: false
          items:
            type: string
        CoreNetworkId:
          description: The ID of the core network.
          type: string
        ConnectAttachmentId:
          description: The ID of the attachment to connect.
          type: string
        ConnectPeerId:
          description: The ID of the Connect peer.
          type: string
        EdgeLocation:
          description: The Connect peer Regions where edges are located.
          type: string
        State:
          description: State of the connect peer.
          type: string
        CreatedAt:
          description: Connect peer creation time.
          type: string
        Configuration:
          description: Configuration of the connect peer.
          $ref: '#/components/schemas/ConnectPeerConfiguration'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ConnectAttachmentId
        - PeerAddress
        - InsideCidrBlocks
      x-stackql-resource-name: connect_peer
      x-stackql-primaryIdentifier:
        - ConnectPeerId
    CoreNetworkSegment:
      type: object
      properties:
        Name:
          type: string
          description: Name of segment
        EdgeLocations:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: The Regions where the edges are located.
        SharedSegments:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: The shared segments of a core network.
      additionalProperties: false
    CoreNetworkEdge:
      type: object
      properties:
        EdgeLocation:
          type: string
          description: The Region where a core network edge is located.
        Asn:
          type: number
          description: The ASN of a core network edge.
        InsideCidrBlocks:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: The inside IP addresses used for core network edges.
      additionalProperties: false
    CoreNetwork:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network that your core network is a part of.
          type: string
        CoreNetworkId:
          description: The Id of core network
          type: string
        CoreNetworkArn:
          description: The ARN (Amazon resource name) of core network
          type: string
        PolicyDocument:
          description: Live policy document for the core network, you must provide PolicyDocument in Json Format
          type: object
        Description:
          description: The description of core network
          type: string
        CreatedAt:
          description: The creation time of core network
          type: string
        State:
          description: The state of core network
          type: string
        Segments:
          description: The segments within a core network.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoreNetworkSegment'
        Edges:
          description: The edges within a core network.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CoreNetworkEdge'
        OwnerAccount:
          description: Owner of the core network
          type: string
        Tags:
          description: The tags for the global network.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - GlobalNetworkId
      x-stackql-resource-name: core_network
      x-stackql-primaryIdentifier:
        - CoreNetworkId
    CustomerGatewayAssociation:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        CustomerGatewayArn:
          description: The Amazon Resource Name (ARN) of the customer gateway.
          type: string
        DeviceId:
          description: The ID of the device
          type: string
        LinkId:
          description: The ID of the link
          type: string
      required:
        - GlobalNetworkId
        - CustomerGatewayArn
        - DeviceId
      x-stackql-resource-name: customer_gateway_association
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - CustomerGatewayArn
    Location:
      description: The location of the site
      type: object
      properties:
        Address:
          description: The physical address.
          type: string
        Latitude:
          description: The latitude.
          type: string
        Longitude:
          description: The longitude.
          type: string
      additionalProperties: false
    Device:
      type: object
      properties:
        DeviceArn:
          description: The Amazon Resource Name (ARN) of the device.
          type: string
        DeviceId:
          description: The ID of the device.
          type: string
        Description:
          description: The description of the device.
          type: string
        Tags:
          description: The tags for the device.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        Location:
          description: The site location.
          $ref: '#/components/schemas/Location'
        Model:
          description: The device model
          type: string
        SerialNumber:
          description: The device serial number.
          type: string
        SiteId:
          description: The site ID.
          type: string
        Type:
          description: The device type.
          type: string
        Vendor:
          description: The device vendor.
          type: string
      required:
        - GlobalNetworkId
      x-stackql-resource-name: device
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - DeviceId
    GlobalNetwork:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the global network.
          type: string
        Id:
          description: The ID of the global network.
          type: string
        Description:
          description: The description of the global network.
          type: string
        Tags:
          description: The tags for the global network.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: global_network
      x-stackql-primaryIdentifier:
        - Id
    Bandwidth:
      description: The bandwidth for the link.
      type: object
      properties:
        DownloadSpeed:
          description: Download speed in Mbps.
          type: integer
        UploadSpeed:
          description: Upload speed in Mbps.
          type: integer
      additionalProperties: false
    Link:
      type: object
      properties:
        LinkArn:
          description: The Amazon Resource Name (ARN) of the link.
          type: string
        LinkId:
          description: The ID of the link.
          type: string
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        SiteId:
          description: The ID of the site
          type: string
        Bandwidth:
          description: The Bandwidth for the link.
          $ref: '#/components/schemas/Bandwidth'
        Provider:
          description: The provider of the link.
          type: string
        Description:
          description: The description of the link.
          type: string
        Tags:
          description: The tags for the link.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          description: The type of the link.
          type: string
      required:
        - GlobalNetworkId
        - SiteId
        - Bandwidth
      x-stackql-resource-name: link
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - LinkId
    LinkAssociation:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        DeviceId:
          description: The ID of the device
          type: string
        LinkId:
          description: The ID of the link
          type: string
      required:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      x-stackql-resource-name: link_association
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - DeviceId
        - LinkId
    Site:
      type: object
      properties:
        SiteArn:
          description: The Amazon Resource Name (ARN) of the site.
          type: string
        SiteId:
          description: The ID of the site.
          type: string
        Description:
          description: The description of the site.
          type: string
        Tags:
          description: The tags for the site.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        Location:
          description: The location of the site.
          $ref: '#/components/schemas/Location'
      required:
        - GlobalNetworkId
      x-stackql-resource-name: site
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - SiteId
    SiteToSiteVpnAttachment:
      type: object
      properties:
        CoreNetworkId:
          description: The ID of a core network where you're creating a site-to-site VPN attachment.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: The ID of the attachment.
          type: string
        OwnerAccountId:
          description: Owner account of the attachment.
          type: string
        AttachmentType:
          description: The type of attachment.
          type: string
        State:
          description: The state of the attachment.
          type: string
        EdgeLocation:
          description: The Region where the edge is located.
          type: string
        ResourceArn:
          description: The ARN of the Resource.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment that attachment is in.
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        Tags:
          description: Tags for the attachment.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        VpnConnectionArn:
          description: The ARN of the site-to-site VPN attachment.
          type: string
      required:
        - CoreNetworkId
        - VpnConnectionArn
      x-stackql-resource-name: site_to_site_vpn_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
    TransitGatewayPeering:
      type: object
      properties:
        CoreNetworkId:
          description: The Id of the core network that you want to peer a transit gateway to.
          type: string
        CoreNetworkArn:
          description: The ARN (Amazon Resource Name) of the core network that you want to peer a transit gateway to.
          type: string
        TransitGatewayArn:
          description: The ARN (Amazon Resource Name) of the transit gateway that you will peer to a core network
          type: string
        TransitGatewayPeeringAttachmentId:
          description: The ID of the TransitGatewayPeeringAttachment
          type: string
        PeeringId:
          description: The Id of the transit gateway peering
          type: string
        State:
          description: The state of the transit gateway peering
          type: string
        EdgeLocation:
          description: The location of the transit gateway peering
          type: string
        ResourceArn:
          description: The ARN (Amazon Resource Name) of the resource that you will peer to a core network
          type: string
        OwnerAccountId:
          description: Peering owner account Id
          type: string
        PeeringType:
          description: Peering type (TransitGatewayPeering)
          type: string
        CreatedAt:
          description: The creation time of the transit gateway peering
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - CoreNetworkId
        - TransitGatewayArn
      x-stackql-resource-name: transit_gateway_peering
      x-stackql-primaryIdentifier:
        - PeeringId
    TransitGatewayRegistration:
      type: object
      properties:
        GlobalNetworkId:
          description: The ID of the global network.
          type: string
        TransitGatewayArn:
          description: The Amazon Resource Name (ARN) of the transit gateway.
          type: string
      required:
        - GlobalNetworkId
        - TransitGatewayArn
      x-stackql-resource-name: transit_gateway_registration
      x-stackql-primaryIdentifier:
        - GlobalNetworkId
        - TransitGatewayArn
    TransitGatewayRouteTableAttachment:
      type: object
      properties:
        PeeringId:
          description: The Id of peering between transit gateway and core network.
          type: string
        TransitGatewayRouteTableArn:
          description: The Arn of transit gateway route table.
          type: string
        CoreNetworkId:
          description: The ID of a core network where you're creating a site-to-site VPN attachment.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: The ID of the attachment.
          type: string
        OwnerAccountId:
          description: Owner account of the attachment.
          type: string
        AttachmentType:
          description: The type of attachment.
          type: string
        State:
          description: The state of the attachment.
          type: string
        EdgeLocation:
          description: The Region where the edge is located.
          type: string
        ResourceArn:
          description: The ARN of the Resource.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment that attachment is in.
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - PeeringId
        - TransitGatewayRouteTableArn
      x-stackql-resource-name: transit_gateway_route_table_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
    VpcOptions:
      description: Vpc options of the attachment.
      type: object
      properties:
        Ipv6Support:
          description: 'Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable'
          type: boolean
          default: false
        ApplianceModeSupport:
          description: 'Indicates whether to enable ApplianceModeSupport Support for Vpc Attachment. Valid Values: true | false'
          type: boolean
          default: false
      additionalProperties: false
    VpcAttachment:
      type: object
      properties:
        CoreNetworkId:
          description: The ID of a core network for the VPC attachment.
          type: string
        CoreNetworkArn:
          description: The ARN of a core network for the VPC attachment.
          type: string
        AttachmentId:
          description: Id of the attachment.
          type: string
        OwnerAccountId:
          description: Owner account of the attachment.
          type: string
        AttachmentType:
          description: Attachment type.
          type: string
        State:
          description: State of the attachment.
          type: string
        EdgeLocation:
          description: The Region where the edge is located.
          type: string
        VpcArn:
          description: The ARN of the VPC.
          type: string
        ResourceArn:
          description: The ARN of the Resource.
          type: string
        AttachmentPolicyRuleNumber:
          description: The policy rule number associated with the attachment.
          type: integer
        SegmentName:
          description: The name of the segment attachment..
          type: string
        ProposedSegmentChange:
          description: The attachment to move from one segment to another.
          $ref: '#/components/schemas/ProposedSegmentChange'
        Tags:
          description: Tags for the attachment.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        CreatedAt:
          description: Creation time of the attachment.
          type: string
        UpdatedAt:
          description: Last update time of the attachment.
          type: string
        SubnetArns:
          description: Subnet Arn list
          type: array
          x-insertionOrder: false
          items:
            type: string
        Options:
          description: Vpc options of the attachment.
          $ref: '#/components/schemas/VpcOptions'
      required:
        - CoreNetworkId
        - VpcArn
        - SubnetArns
      x-stackql-resource-name: vpc_attachment
      x-stackql-primaryIdentifier:
        - AttachmentId
  x-stackQL-resources:
    connect_attachments:
      name: connect_attachments
      id: aws.networkmanager.connect_attachments
      x-cfn-schema-name: ConnectAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::ConnectAttachment'
    connect_attachment:
      name: connect_attachment
      id: aws.networkmanager.connect_attachment
      x-cfn-schema-name: ConnectAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.Tags') as proposed_segment_change_tags,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.AttachmentPolicyRuleNumber') as proposed_segment_change_attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.SegmentName') as proposed_segment_change_segment_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.TransportAttachmentId') as transport_attachment_id,
              JSON_EXTRACT(Properties, '$.Options.Protocol') as options_protocol
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::ConnectAttachment'
    connect_peers:
      name: connect_peers
      id: aws.networkmanager.connect_peers
      x-cfn-schema-name: ConnectPeer
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectPeerId') as connect_peer_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::ConnectPeer'
    connect_peer:
      name: connect_peer
      id: aws.networkmanager.connect_peer
      x-cfn-schema-name: ConnectPeer
      x-type: get
      x-identifiers:
        - ConnectPeerId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PeerAddress') as peer_address,
              JSON_EXTRACT(Properties, '$.CoreNetworkAddress') as core_network_address,
              JSON_EXTRACT(Properties, '$.BgpOptions.PeerAsn') as bgp_options_peer_asn,
              JSON_EXTRACT(Properties, '$.InsideCidrBlocks') as inside_cidr_blocks,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.ConnectAttachmentId') as connect_attachment_id,
              JSON_EXTRACT(Properties, '$.ConnectPeerId') as connect_peer_id,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Configuration.CoreNetworkAddress') as configuration_core_network_address,
              JSON_EXTRACT(Properties, '$.Configuration.PeerAddress') as configuration_peer_address,
              JSON_EXTRACT(Properties, '$.Configuration.InsideCidrBlocks') as configuration_inside_cidr_blocks,
              JSON_EXTRACT(Properties, '$.Configuration.Protocol') as configuration_protocol,
              JSON_EXTRACT(Properties, '$.Configuration.BgpConfigurations') as configuration_bgp_configurations,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::ConnectPeer'
    core_networks:
      name: core_networks
      id: aws.networkmanager.core_networks
      x-cfn-schema-name: CoreNetwork
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::CoreNetwork'
    core_network:
      name: core_network
      id: aws.networkmanager.core_network
      x-cfn-schema-name: CoreNetwork
      x-type: get
      x-identifiers:
        - CoreNetworkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Segments') as segments,
              JSON_EXTRACT(Properties, '$.Edges') as edges,
              JSON_EXTRACT(Properties, '$.OwnerAccount') as owner_account,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::CoreNetwork'
    customer_gateway_associations:
      name: customer_gateway_associations
      id: aws.networkmanager.customer_gateway_associations
      x-cfn-schema-name: CustomerGatewayAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.CustomerGatewayArn') as customer_gateway_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::CustomerGatewayAssociation'
    customer_gateway_association:
      name: customer_gateway_association
      id: aws.networkmanager.customer_gateway_association
      x-cfn-schema-name: CustomerGatewayAssociation
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - CustomerGatewayArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.CustomerGatewayArn') as customer_gateway_arn,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::CustomerGatewayAssociation'
    devices:
      name: devices
      id: aws.networkmanager.devices
      x-cfn-schema-name: Device
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Device'
    device:
      name: device
      id: aws.networkmanager.device
      x-cfn-schema-name: Device
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - DeviceId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeviceArn') as device_arn,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.Location.Address') as location_address,
              JSON_EXTRACT(Properties, '$.Location.Latitude') as location_latitude,
              JSON_EXTRACT(Properties, '$.Location.Longitude') as location_longitude,
              JSON_EXTRACT(Properties, '$.Model') as model,
              JSON_EXTRACT(Properties, '$.SerialNumber') as serial_number,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Vendor') as vendor
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Device'
    global_networks:
      name: global_networks
      id: aws.networkmanager.global_networks
      x-cfn-schema-name: GlobalNetwork
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::GlobalNetwork'
    global_network:
      name: global_network
      id: aws.networkmanager.global_network
      x-cfn-schema-name: GlobalNetwork
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::GlobalNetwork'
    links:
      name: links
      id: aws.networkmanager.links
      x-cfn-schema-name: Link
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Link'
    link:
      name: link
      id: aws.networkmanager.link
      x-cfn-schema-name: Link
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - LinkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LinkArn') as link_arn,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id,
              JSON_EXTRACT(Properties, '$.Bandwidth.DownloadSpeed') as bandwidth_download_speed,
              JSON_EXTRACT(Properties, '$.Bandwidth.UploadSpeed') as bandwidth_upload_speed,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Link'
    link_associations:
      name: link_associations
      id: aws.networkmanager.link_associations
      x-cfn-schema-name: LinkAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::LinkAssociation'
    link_association:
      name: link_association
      id: aws.networkmanager.link_association
      x-cfn-schema-name: LinkAssociation
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - DeviceId
        - LinkId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.DeviceId') as device_id,
              JSON_EXTRACT(Properties, '$.LinkId') as link_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::LinkAssociation'
    sites:
      name: sites
      id: aws.networkmanager.sites
      x-cfn-schema-name: Site
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::Site'
    site:
      name: site
      id: aws.networkmanager.site
      x-cfn-schema-name: Site
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - SiteId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SiteArn') as site_arn,
              JSON_EXTRACT(Properties, '$.SiteId') as site_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.Location.Address') as location_address,
              JSON_EXTRACT(Properties, '$.Location.Latitude') as location_latitude,
              JSON_EXTRACT(Properties, '$.Location.Longitude') as location_longitude
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::Site'
    site_to_site_vpn_attachments:
      name: site_to_site_vpn_attachments
      id: aws.networkmanager.site_to_site_vpn_attachments
      x-cfn-schema-name: SiteToSiteVpnAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::SiteToSiteVpnAttachment'
    site_to_site_vpn_attachment:
      name: site_to_site_vpn_attachment
      id: aws.networkmanager.site_to_site_vpn_attachment
      x-cfn-schema-name: SiteToSiteVpnAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.Tags') as proposed_segment_change_tags,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.AttachmentPolicyRuleNumber') as proposed_segment_change_attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.SegmentName') as proposed_segment_change_segment_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.VpnConnectionArn') as vpn_connection_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::SiteToSiteVpnAttachment'
    transit_gateway_peerings:
      name: transit_gateway_peerings
      id: aws.networkmanager.transit_gateway_peerings
      x-cfn-schema-name: TransitGatewayPeering
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PeeringId') as peering_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayPeering'
    transit_gateway_peering:
      name: transit_gateway_peering
      id: aws.networkmanager.transit_gateway_peering
      x-cfn-schema-name: TransitGatewayPeering
      x-type: get
      x-identifiers:
        - PeeringId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.TransitGatewayArn') as transit_gateway_arn,
              JSON_EXTRACT(Properties, '$.TransitGatewayPeeringAttachmentId') as transit_gateway_peering_attachment_id,
              JSON_EXTRACT(Properties, '$.PeeringId') as peering_id,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.PeeringType') as peering_type,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayPeering'
    transit_gateway_registrations:
      name: transit_gateway_registrations
      id: aws.networkmanager.transit_gateway_registrations
      x-cfn-schema-name: TransitGatewayRegistration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayArn') as transit_gateway_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRegistration'
    transit_gateway_registration:
      name: transit_gateway_registration
      id: aws.networkmanager.transit_gateway_registration
      x-cfn-schema-name: TransitGatewayRegistration
      x-type: get
      x-identifiers:
        - GlobalNetworkId
        - TransitGatewayArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GlobalNetworkId') as global_network_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayArn') as transit_gateway_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRegistration'
    transit_gateway_route_table_attachments:
      name: transit_gateway_route_table_attachments
      id: aws.networkmanager.transit_gateway_route_table_attachments
      x-cfn-schema-name: TransitGatewayRouteTableAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRouteTableAttachment'
    transit_gateway_route_table_attachment:
      name: transit_gateway_route_table_attachment
      id: aws.networkmanager.transit_gateway_route_table_attachment
      x-cfn-schema-name: TransitGatewayRouteTableAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PeeringId') as peering_id,
              JSON_EXTRACT(Properties, '$.TransitGatewayRouteTableArn') as transit_gateway_route_table_arn,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.Tags') as proposed_segment_change_tags,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.AttachmentPolicyRuleNumber') as proposed_segment_change_attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.SegmentName') as proposed_segment_change_segment_name,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::TransitGatewayRouteTableAttachment'
    vpc_attachments:
      name: vpc_attachments
      id: aws.networkmanager.vpc_attachments
      x-cfn-schema-name: VpcAttachment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkManager::VpcAttachment'
    vpc_attachment:
      name: vpc_attachment
      id: aws.networkmanager.vpc_attachment
      x-cfn-schema-name: VpcAttachment
      x-type: get
      x-identifiers:
        - AttachmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CoreNetworkId') as core_network_id,
              JSON_EXTRACT(Properties, '$.CoreNetworkArn') as core_network_arn,
              JSON_EXTRACT(Properties, '$.AttachmentId') as attachment_id,
              JSON_EXTRACT(Properties, '$.OwnerAccountId') as owner_account_id,
              JSON_EXTRACT(Properties, '$.AttachmentType') as attachment_type,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.EdgeLocation') as edge_location,
              JSON_EXTRACT(Properties, '$.VpcArn') as vpc_arn,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.AttachmentPolicyRuleNumber') as attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.SegmentName') as segment_name,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.Tags') as proposed_segment_change_tags,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.AttachmentPolicyRuleNumber') as proposed_segment_change_attachment_policy_rule_number,
              JSON_EXTRACT(Properties, '$.ProposedSegmentChange.SegmentName') as proposed_segment_change_segment_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.SubnetArns') as subnet_arns,
              JSON_EXTRACT(Properties, '$.Options.Ipv6Support') as options_ipv6_support,
              JSON_EXTRACT(Properties, '$.Options.ApplianceModeSupport') as options_appliance_mode_support
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkManager::VpcAttachment'
