openapi: 3.0.0
info:
  title: MSK
  version: 1.0.0
paths: {}
components:
  schemas:
    SecretArnList:
      type: array
      x-insertionOrder: false
      items:
        type: string
    BatchScramSecret:
      type: object
      properties:
        ClusterArn:
          type: string
        SecretArnList:
          $ref: '#/components/schemas/SecretArnList'
      required:
        - ClusterArn
      x-stackql-resource-name: batch_scram_secret
      x-stackql-primaryIdentifier:
        - ClusterArn
    S3:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        Prefix:
          type: string
        Bucket:
          type: string
      required:
        - Enabled
    BrokerLogs:
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/S3'
        CloudWatchLogs:
          $ref: '#/components/schemas/CloudWatchLogs'
        Firehose:
          $ref: '#/components/schemas/Firehose'
    NodeExporter:
      type: object
      additionalProperties: false
      properties:
        EnabledInBroker:
          type: boolean
      required:
        - EnabledInBroker
    EncryptionInfo:
      type: object
      additionalProperties: false
      properties:
        EncryptionAtRest:
          $ref: '#/components/schemas/EncryptionAtRest'
        EncryptionInTransit:
          $ref: '#/components/schemas/EncryptionInTransit'
    Firehose:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        DeliveryStream:
          type: string
      required:
        - Enabled
    OpenMonitoring:
      type: object
      additionalProperties: false
      properties:
        Prometheus:
          $ref: '#/components/schemas/Prometheus'
      required:
        - Prometheus
    Prometheus:
      type: object
      additionalProperties: false
      properties:
        JmxExporter:
          $ref: '#/components/schemas/JmxExporter'
        NodeExporter:
          $ref: '#/components/schemas/NodeExporter'
    CloudWatchLogs:
      type: object
      additionalProperties: false
      properties:
        LogGroup:
          type: string
        Enabled:
          type: boolean
      required:
        - Enabled
    EBSStorageInfo:
      type: object
      additionalProperties: false
      properties:
        VolumeSize:
          type: integer
          minimum: 1
          maximum: 16384
        ProvisionedThroughput:
          $ref: '#/components/schemas/ProvisionedThroughput'
    ProvisionedThroughput:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        VolumeThroughput:
          type: integer
    PublicAccess:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
          minLength: 7
          maxLength: 23
    VpcConnectivity:
      type: object
      additionalProperties: false
      properties:
        ClientAuthentication:
          $ref: '#/components/schemas/VpcConnectivityClientAuthentication'
    ConfigurationInfo:
      type: object
      additionalProperties: false
      properties:
        Revision:
          type: integer
        Arn:
          type: string
      required:
        - Revision
        - Arn
    BrokerNodeGroupInfo:
      type: object
      additionalProperties: false
      properties:
        StorageInfo:
          $ref: '#/components/schemas/StorageInfo'
        ConnectivityInfo:
          $ref: '#/components/schemas/ConnectivityInfo'
        SecurityGroups:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        BrokerAZDistribution:
          type: string
          minLength: 6
          maxLength: 9
        ClientSubnets:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        InstanceType:
          type: string
          minLength: 5
          maxLength: 32
      required:
        - ClientSubnets
        - InstanceType
    EncryptionAtRest:
      type: object
      additionalProperties: false
      properties:
        DataVolumeKMSKeyId:
          type: string
      required:
        - DataVolumeKMSKeyId
    JmxExporter:
      type: object
      additionalProperties: false
      properties:
        EnabledInBroker:
          type: boolean
      required:
        - EnabledInBroker
    StorageInfo:
      type: object
      additionalProperties: false
      properties:
        EBSStorageInfo:
          $ref: '#/components/schemas/EBSStorageInfo'
    ConnectivityInfo:
      type: object
      additionalProperties: false
      properties:
        PublicAccess:
          $ref: '#/components/schemas/PublicAccess'
        VpcConnectivity:
          $ref: '#/components/schemas/VpcConnectivity'
    VpcConnectivityTls:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    VpcConnectivitySasl:
      type: object
      additionalProperties: false
      properties:
        Scram:
          $ref: '#/components/schemas/VpcConnectivityScram'
        Iam:
          $ref: '#/components/schemas/VpcConnectivityIam'
    VpcConnectivityScram:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    VpcConnectivityIam:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Tls:
      type: object
      additionalProperties: false
      properties:
        CertificateAuthorityArnList:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Enabled:
          type: boolean
    Sasl:
      type: object
      additionalProperties: false
      properties:
        Iam:
          $ref: '#/components/schemas/Iam'
      required:
        - Iam
    Scram:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Iam:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Unauthenticated:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    ClientAuthentication:
      type: object
      properties:
        Sasl:
          $ref: '#/components/schemas/Sasl'
      additionalProperties: false
      required:
        - Sasl
    VpcConnectivityClientAuthentication:
      type: object
      additionalProperties: false
      properties:
        Tls:
          $ref: '#/components/schemas/VpcConnectivityTls'
        Sasl:
          $ref: '#/components/schemas/VpcConnectivitySasl'
    LoggingInfo:
      type: object
      additionalProperties: false
      properties:
        BrokerLogs:
          $ref: '#/components/schemas/BrokerLogs'
      required:
        - BrokerLogs
    EncryptionInTransit:
      type: object
      additionalProperties: false
      properties:
        InCluster:
          type: boolean
        ClientBroker:
          type: string
          enum:
            - TLS
            - TLS_PLAINTEXT
            - PLAINTEXT
    Cluster:
      type: object
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/BrokerNodeGroupInfo'
        EnhancedMonitoring:
          type: string
          minLength: 7
          maxLength: 23
          enum:
            - DEFAULT
            - PER_BROKER
            - PER_TOPIC_PER_BROKER
            - PER_TOPIC_PER_PARTITION
        KafkaVersion:
          type: string
          minLength: 1
          maxLength: 128
        NumberOfBrokerNodes:
          type: integer
        EncryptionInfo:
          $ref: '#/components/schemas/EncryptionInfo'
        OpenMonitoring:
          $ref: '#/components/schemas/OpenMonitoring'
        ClusterName:
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          type: string
        CurrentVersion:
          description: The current version of the MSK cluster
          type: string
        ClientAuthentication:
          $ref: '#/components/schemas/ClientAuthentication'
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        ConfigurationInfo:
          $ref: '#/components/schemas/ConfigurationInfo'
        StorageMode:
          type: string
          minLength: 5
          maxLength: 6
          enum:
            - LOCAL
            - TIERED
      required:
        - BrokerNodeGroupInfo
        - KafkaVersion
        - NumberOfBrokerNodes
        - ClusterName
      x-stackql-resource-name: cluster
      x-stackql-primaryIdentifier:
        - Arn
    KafkaVersionsList:
      type: array
      items:
        type: string
    Configuration:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        ServerProperties:
          type: string
        KafkaVersionsList:
          $ref: '#/components/schemas/KafkaVersionsList'
        Arn:
          type: string
      required:
        - ServerProperties
        - Name
      x-stackql-resource-name: configuration
      x-stackql-primaryIdentifier:
        - Arn
    VpcConfig:
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        SubnetIds:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
      required:
        - SubnetIds
    ServerlessCluster:
      type: object
      properties:
        Arn:
          type: string
        ClusterName:
          type: string
          minLength: 1
          maxLength: 64
        VpcConfigs:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/VpcConfig'
        ClientAuthentication:
          $ref: '#/components/schemas/ClientAuthentication'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
      required:
        - ClusterName
        - VpcConfigs
        - ClientAuthentication
      x-stackql-resource-name: serverless_cluster
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    batch_scram_secrets:
      name: batch_scram_secrets
      id: aws.msk.batch_scram_secrets
      x-cfn-schema-name: BatchScramSecret
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
    batch_scram_secret:
      name: batch_scram_secret
      id: aws.msk.batch_scram_secret
      x-cfn-schema-name: BatchScramSecret
      x-type: get
      x-identifiers:
        - ClusterArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
    clusters:
      name: clusters
      id: aws.msk.clusters
      x-cfn-schema-name: Cluster
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Cluster'
    cluster:
      name: cluster
      id: aws.msk.cluster
      x-cfn-schema-name: Cluster
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo.StorageInfo') as broker_node_group_info_storage_info,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo.ConnectivityInfo') as broker_node_group_info_connectivity_info,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo.SecurityGroups') as broker_node_group_info_security_groups,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo.BrokerAZDistribution') as broker_node_group_info_broker_az_distribution,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo.ClientSubnets') as broker_node_group_info_client_subnets,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo.InstanceType') as broker_node_group_info_instance_type,
              JSON_EXTRACT(Properties, '$.EnhancedMonitoring') as enhanced_monitoring,
              JSON_EXTRACT(Properties, '$.KafkaVersion') as kafka_version,
              JSON_EXTRACT(Properties, '$.NumberOfBrokerNodes') as number_of_broker_nodes,
              JSON_EXTRACT(Properties, '$.EncryptionInfo.EncryptionAtRest') as encryption_info_encryption_at_rest,
              JSON_EXTRACT(Properties, '$.EncryptionInfo.EncryptionInTransit') as encryption_info_encryption_in_transit,
              JSON_EXTRACT(Properties, '$.OpenMonitoring.Prometheus') as open_monitoring_prometheus,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(Properties, '$.ClientAuthentication.Sasl') as client_authentication_sasl,
              JSON_EXTRACT(Properties, '$.LoggingInfo.BrokerLogs') as logging_info_broker_logs,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ConfigurationInfo.Revision') as configuration_info_revision,
              JSON_EXTRACT(Properties, '$.ConfigurationInfo.Arn') as configuration_info_arn,
              JSON_EXTRACT(Properties, '$.StorageMode') as storage_mode
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Cluster'
    configurations:
      name: configurations
      id: aws.msk.configurations
      x-cfn-schema-name: Configuration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Configuration'
    configuration:
      name: configuration
      id: aws.msk.configuration
      x-cfn-schema-name: Configuration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ServerProperties') as server_properties,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Configuration'
    serverless_clusters:
      name: serverless_clusters
      id: aws.msk.serverless_clusters
      x-cfn-schema-name: ServerlessCluster
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
    serverless_cluster:
      name: serverless_cluster
      id: aws.msk.serverless_cluster
      x-cfn-schema-name: ServerlessCluster
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.VpcConfigs') as vpc_configs,
              JSON_EXTRACT(Properties, '$.ClientAuthentication.Sasl') as client_authentication_sasl,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
