openapi: 3.0.0
info:
  title: MSK
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    SecretArnList:
      type: array
      x-insertionOrder: false
      items:
        type: string
    BatchScramSecret:
      type: object
      properties:
        ClusterArn:
          type: string
        SecretArnList:
          $ref: '#/components/schemas/SecretArnList'
      required:
        - ClusterArn
      x-stackql-resource-name: batch_scram_secret
      description: Resource Type definition for AWS::MSK::BatchScramSecret
      x-type-name: AWS::MSK::BatchScramSecret
      x-stackql-primary-identifier:
        - ClusterArn
      x-create-only-properties:
        - ClusterArn
      x-required-properties:
        - ClusterArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - kafka:BatchAssociateScramSecret
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
        delete:
          - kafka:BatchDisassociateScramSecret
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
        list:
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
        read:
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
        update:
          - kafka:BatchAssociateScramSecret
          - kafka:BatchDisassociateScramSecret
          - kafka:ListScramSecrets
          - kms:CreateGrant
          - kms:DescribeKey
          - secretsmanager:GetSecretValue
    S3:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        Prefix:
          type: string
        Bucket:
          type: string
      required:
        - Enabled
    BrokerLogs:
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/S3'
        CloudWatchLogs:
          $ref: '#/components/schemas/CloudWatchLogs'
        Firehose:
          $ref: '#/components/schemas/Firehose'
    NodeExporter:
      type: object
      additionalProperties: false
      properties:
        EnabledInBroker:
          type: boolean
      required:
        - EnabledInBroker
    EncryptionInfo:
      type: object
      additionalProperties: false
      properties:
        EncryptionAtRest:
          $ref: '#/components/schemas/EncryptionAtRest'
        EncryptionInTransit:
          $ref: '#/components/schemas/EncryptionInTransit'
    Firehose:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        DeliveryStream:
          type: string
      required:
        - Enabled
    OpenMonitoring:
      type: object
      additionalProperties: false
      properties:
        Prometheus:
          $ref: '#/components/schemas/Prometheus'
      required:
        - Prometheus
    Prometheus:
      type: object
      additionalProperties: false
      properties:
        JmxExporter:
          $ref: '#/components/schemas/JmxExporter'
        NodeExporter:
          $ref: '#/components/schemas/NodeExporter'
    CloudWatchLogs:
      type: object
      additionalProperties: false
      properties:
        LogGroup:
          type: string
        Enabled:
          type: boolean
      required:
        - Enabled
    EBSStorageInfo:
      type: object
      additionalProperties: false
      properties:
        VolumeSize:
          type: integer
          minimum: 1
          maximum: 16384
        ProvisionedThroughput:
          $ref: '#/components/schemas/ProvisionedThroughput'
    ProvisionedThroughput:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        VolumeThroughput:
          type: integer
    PublicAccess:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
          minLength: 7
          maxLength: 23
    VpcConnectivity:
      type: object
      additionalProperties: false
      properties:
        ClientAuthentication:
          $ref: '#/components/schemas/VpcConnectivityClientAuthentication'
    ConfigurationInfo:
      type: object
      additionalProperties: false
      properties:
        Revision:
          type: integer
        Arn:
          type: string
      required:
        - Revision
        - Arn
    BrokerNodeGroupInfo:
      type: object
      additionalProperties: false
      properties:
        StorageInfo:
          $ref: '#/components/schemas/StorageInfo'
        ConnectivityInfo:
          $ref: '#/components/schemas/ConnectivityInfo'
        SecurityGroups:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        BrokerAZDistribution:
          type: string
          minLength: 6
          maxLength: 9
        ClientSubnets:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        InstanceType:
          type: string
          minLength: 5
          maxLength: 32
      required:
        - ClientSubnets
        - InstanceType
    EncryptionAtRest:
      type: object
      additionalProperties: false
      properties:
        DataVolumeKMSKeyId:
          type: string
      required:
        - DataVolumeKMSKeyId
    JmxExporter:
      type: object
      additionalProperties: false
      properties:
        EnabledInBroker:
          type: boolean
      required:
        - EnabledInBroker
    StorageInfo:
      type: object
      additionalProperties: false
      properties:
        EBSStorageInfo:
          $ref: '#/components/schemas/EBSStorageInfo'
    ConnectivityInfo:
      type: object
      additionalProperties: false
      properties:
        PublicAccess:
          $ref: '#/components/schemas/PublicAccess'
        VpcConnectivity:
          $ref: '#/components/schemas/VpcConnectivity'
    VpcConnectivityTls:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    VpcConnectivitySasl:
      type: object
      additionalProperties: false
      properties:
        Scram:
          $ref: '#/components/schemas/VpcConnectivityScram'
        Iam:
          $ref: '#/components/schemas/VpcConnectivityIam'
    VpcConnectivityScram:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    VpcConnectivityIam:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Tls:
      type: object
      additionalProperties: false
      properties:
        CertificateAuthorityArnList:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Enabled:
          type: boolean
    Sasl:
      type: object
      additionalProperties: false
      properties:
        Iam:
          $ref: '#/components/schemas/Iam'
      required:
        - Iam
    Scram:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Iam:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    Unauthenticated:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
      required:
        - Enabled
    ClientAuthentication:
      type: object
      properties:
        Sasl:
          $ref: '#/components/schemas/Sasl'
      additionalProperties: false
      required:
        - Sasl
    VpcConnectivityClientAuthentication:
      type: object
      additionalProperties: false
      properties:
        Tls:
          $ref: '#/components/schemas/VpcConnectivityTls'
        Sasl:
          $ref: '#/components/schemas/VpcConnectivitySasl'
    LoggingInfo:
      type: object
      additionalProperties: false
      properties:
        BrokerLogs:
          $ref: '#/components/schemas/BrokerLogs'
      required:
        - BrokerLogs
    EncryptionInTransit:
      type: object
      additionalProperties: false
      properties:
        InCluster:
          type: boolean
        ClientBroker:
          type: string
          enum:
            - TLS
            - TLS_PLAINTEXT
            - PLAINTEXT
    Cluster:
      type: object
      properties:
        BrokerNodeGroupInfo:
          $ref: '#/components/schemas/BrokerNodeGroupInfo'
        EnhancedMonitoring:
          type: string
          minLength: 7
          maxLength: 23
          enum:
            - DEFAULT
            - PER_BROKER
            - PER_TOPIC_PER_BROKER
            - PER_TOPIC_PER_PARTITION
        KafkaVersion:
          type: string
          minLength: 1
          maxLength: 128
        NumberOfBrokerNodes:
          type: integer
        EncryptionInfo:
          $ref: '#/components/schemas/EncryptionInfo'
        OpenMonitoring:
          $ref: '#/components/schemas/OpenMonitoring'
        ClusterName:
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          type: string
        CurrentVersion:
          description: The current version of the MSK cluster
          type: string
        ClientAuthentication:
          $ref: '#/components/schemas/ClientAuthentication'
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
        ConfigurationInfo:
          $ref: '#/components/schemas/ConfigurationInfo'
        StorageMode:
          type: string
          minLength: 5
          maxLength: 6
          enum:
            - LOCAL
            - TIERED
      required:
        - BrokerNodeGroupInfo
        - KafkaVersion
        - NumberOfBrokerNodes
        - ClusterName
      x-stackql-resource-name: cluster
      description: Resource Type definition for AWS::MSK::Cluster
      x-type-name: AWS::MSK::Cluster
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - BrokerNodeGroupInfo/BrokerAZDistribution
        - BrokerNodeGroupInfo/ClientSubnets
        - BrokerNodeGroupInfo/SecurityGroups
        - EncryptionInfo/EncryptionAtRest
        - EncryptionInfo/EncryptionInTransit/InCluster
        - ClusterName
      x-read-only-properties:
        - Arn
      x-required-properties:
        - BrokerNodeGroupInfo
        - KafkaVersion
        - NumberOfBrokerNodes
        - ClusterName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - kafka:TagResource
          - kafka:UntagResource
          - kafka:ListTagsForResource
      x-required-permissions:
        create:
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - kms:CreateGrant
          - kms:DescribeKey
          - kafka:CreateCluster
          - kafka:DescribeCluster
          - kafka:TagResource
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - firehose:TagDeliveryStream
          - acm-pca:GetCertificateAuthorityCertificate
        update:
          - kafka:UpdateMonitoring
          - kafka:UpdateClusterKafkaVersion
          - kafka:UpdateClusterConfiguration
          - kafka:UpdateBrokerType
          - kafka:UpdateBrokerCount
          - kafka:UpdateBrokerStorage
          - kafka:UpdateStorage
          - kafka:UpdateSecurity
          - kafka:UpdateConnectivity
          - kafka:DescribeCluster
          - kafka:DescribeClusterOperation
          - kafka:TagResource
          - kafka:UntagResource
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - ec2:DescribeSecurityGroups
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - kms:DescribeKey
          - kms:CreateGrant
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - firehose:TagDeliveryStream
          - acm-pca:GetCertificateAuthorityCertificate
        delete:
          - kafka:DeleteCluster
          - kafka:DescribeCluster
        list:
          - kafka:ListClusters
        read:
          - kafka:DescribeCluster
    ClusterPolicy:
      type: object
      properties:
        Policy:
          description: A policy document containing permissions to add to the specified cluster.
          type: object
        ClusterArn:
          description: The arn of the cluster for the resource policy.
          type: string
          pattern: ^arn:[\w-]+:kafka:[\w-]+:\d+:cluster.*\Z
        CurrentVersion:
          description: The current version of the policy attached to the specified cluster
          type: string
          pattern: ^(K)([a-zA-Z0-9]+)\Z
      required:
        - Policy
        - ClusterArn
      x-stackql-resource-name: cluster_policy
      description: Resource Type definition for AWS::MSK::ClusterPolicy
      x-type-name: AWS::MSK::ClusterPolicy
      x-stackql-primary-identifier:
        - ClusterArn
      x-create-only-properties:
        - ClusterArn
      x-read-only-properties:
        - CurrentVersion
      x-required-properties:
        - Policy
        - ClusterArn
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - kafka:PutClusterPolicy
          - kafka:GetClusterPolicy
        read:
          - kafka:GetClusterPolicy
        list:
          - kafka:GetClusterPolicy
        update:
          - kafka:PutClusterPolicy
          - kafka:GetClusterPolicy
        delete:
          - kafka:DeleteClusterPolicy
          - kafka:GetClusterPolicy
    KafkaVersionsList:
      type: array
      x-insertionOrder: false
      items:
        type: string
    LatestRevision:
      type: object
      additionalProperties: false
      properties:
        CreationTime:
          type: string
        Description:
          type: string
        Revision:
          type: integer
    Configuration:
      type: object
      properties:
        Name:
          type: string
        Description:
          type: string
        ServerProperties:
          type: string
        KafkaVersionsList:
          $ref: '#/components/schemas/KafkaVersionsList'
        Arn:
          type: string
        LatestRevision:
          $ref: '#/components/schemas/LatestRevision'
      required:
        - ServerProperties
        - Name
      x-stackql-resource-name: configuration
      description: Resource Type definition for AWS::MSK::Configuration
      x-type-name: AWS::MSK::Configuration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - KafkaVersionsList
        - Name
      x-write-only-properties:
        - ServerProperties
      x-read-only-properties:
        - Arn
        - LatestRevision/CreationTime
        - LatestRevision/Revision
        - LatestRevision/Description
      x-required-properties:
        - ServerProperties
        - Name
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - kafka:CreateConfiguration
          - Kafka:DescribeConfiguration
        delete:
          - kafka:DeleteConfiguration
          - kafka:DescribeConfiguration
        list:
          - kafka:ListConfigurations
        read:
          - kafka:DescribeConfiguration
        update:
          - kafka:UpdateConfiguration
          - kafka:DescribeConfiguration
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    TopicReplication:
      type: object
      additionalProperties: false
      properties:
        TopicsToReplicate:
          description: List of regular expression patterns indicating the topics to copy.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            type: string
            maxLength: 249
        TopicsToExclude:
          description: List of regular expression patterns indicating the topics that should not be replicated.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            type: string
            maxLength: 249
        CopyTopicConfigurations:
          description: Whether to periodically configure remote topics to match their corresponding upstream topics.
          type: boolean
        CopyAccessControlListsForTopics:
          description: Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
          type: boolean
        DetectAndCopyNewTopics:
          description: Whether to periodically check for new topics and partitions.
          type: boolean
        StartingPosition:
          description: Configuration for specifying the position in the topics to start replicating from.
          $ref: '#/components/schemas/ReplicationStartingPosition'
        TopicNameConfiguration:
          description: Configuration for specifying replicated topic names should be the same as their corresponding upstream topics or prefixed with source cluster alias.
          $ref: '#/components/schemas/ReplicationTopicNameConfiguration'
      required:
        - TopicsToReplicate
    ReplicationStartingPosition:
      description: Configuration for specifying the position in the topics to start replicating from.
      type: object
      additionalProperties: false
      properties:
        Type:
          $ref: '#/components/schemas/ReplicationStartingPositionType'
      required: []
    ReplicationStartingPositionType:
      description: The type of replication starting position.
      type: string
      enum:
        - LATEST
        - EARLIEST
    ReplicationTopicNameConfiguration:
      description: Configuration for specifying replicated topic names should be the same as their corresponding upstream topics or prefixed with source cluster alias.
      type: object
      additionalProperties: false
      properties:
        Type:
          $ref: '#/components/schemas/ReplicationTopicNameConfigurationType'
      required: []
    ReplicationTopicNameConfigurationType:
      description: The type of replicated topic name.
      type: string
      enum:
        - PREFIXED_WITH_SOURCE_CLUSTER_ALIAS
        - IDENTICAL
    ConsumerGroupReplication:
      description: Configuration relating to consumer group replication.
      type: object
      additionalProperties: false
      properties:
        ConsumerGroupsToReplicate:
          description: List of regular expression patterns indicating the consumer groups to copy.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 100
          items:
            type: string
            maxLength: 256
        ConsumerGroupsToExclude:
          description: List of regular expression patterns indicating the consumer groups that should not be replicated.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 100
          items:
            type: string
            maxLength: 256
        SynchroniseConsumerGroupOffsets:
          description: Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
          type: boolean
        DetectAndCopyNewConsumerGroups:
          description: Whether to periodically check for new consumer groups.
          type: boolean
      required:
        - ConsumerGroupsToReplicate
    ReplicationInfo:
      description: Specifies configuration for replication between a source and target Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        SourceKafkaClusterArn:
          description: Amazon Resource Name of the source Kafka cluster.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
        TargetKafkaClusterArn:
          description: Amazon Resource Name of the target Kafka cluster.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
        TargetCompressionType:
          description: The type of compression to use writing records to target Kafka cluster.
          type: string
          enum:
            - NONE
            - GZIP
            - SNAPPY
            - LZ4
            - ZSTD
        TopicReplication:
          description: Configuration relating to topic replication.
          $ref: '#/components/schemas/TopicReplication'
        ConsumerGroupReplication:
          description: Configuration relating to consumer group replication.
          $ref: '#/components/schemas/ConsumerGroupReplication'
      required:
        - SourceKafkaClusterArn
        - TargetKafkaClusterArn
        - TopicReplication
        - ConsumerGroupReplication
        - TargetCompressionType
    AmazonMskCluster:
      description: Details of an Amazon MSK cluster.
      type: object
      additionalProperties: false
      properties:
        MskClusterArn:
          description: The ARN of an Amazon MSK cluster.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
      required:
        - MskClusterArn
    KafkaClusterClientVpcConfig:
      description: Details of an Amazon VPC which has network connectivity to the Kafka cluster.
      type: object
      additionalProperties: false
      properties:
        SecurityGroupIds:
          description: The AWS security groups to associate with the elastic network interfaces in order to specify what the replicator has access to. If a security group is not specified, the default security group associated with the VPC is used.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 16
          items:
            type: string
        SubnetIds:
          description: The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 2
          maxItems: 3
          items:
            type: string
      required:
        - SubnetIds
    KafkaCluster:
      description: Details of a Kafka cluster for replication.
      type: object
      additionalProperties: false
      properties:
        AmazonMskCluster:
          description: Details of an Amazon MSK cluster. Exactly one of AmazonMskCluster is required.
          $ref: '#/components/schemas/AmazonMskCluster'
        VpcConfig:
          description: Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
          $ref: '#/components/schemas/KafkaClusterClientVpcConfig'
      required:
        - AmazonMskCluster
        - VpcConfig
    Replicator:
      type: object
      properties:
        ReplicatorArn:
          description: Amazon Resource Name for the created replicator.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
        ReplicatorName:
          description: The name of the replicator.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[0-9A-Za-z][0-9A-Za-z-]{0,}$
        CurrentVersion:
          description: The current version of the MSK replicator.
          type: string
        Description:
          description: A summary description of the replicator.
          type: string
          maxLength: 1024
        KafkaClusters:
          description: Specifies a list of Kafka clusters which are targets of the replicator.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 2
          maxItems: 2
          items:
            $ref: '#/components/schemas/KafkaCluster'
        ReplicationInfoList:
          description: A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/ReplicationInfo'
        ServiceExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role used by the replicator to access external resources.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn):iam:.*
        Tags:
          description: A collection of tags associated with a resource
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ReplicatorName
        - ReplicationInfoList
        - KafkaClusters
        - ServiceExecutionRoleArn
      x-stackql-resource-name: replicator
      description: Resource Type definition for AWS::MSK::Replicator
      x-type-name: AWS::MSK::Replicator
      x-stackql-primary-identifier:
        - ReplicatorArn
      x-stackql-additional-identifiers:
        - - ReplicatorName
      x-create-only-properties:
        - ReplicatorName
        - Description
        - KafkaClusters
        - ServiceExecutionRoleArn
        - ReplicationInfoList/*/SourceKafkaClusterArn
        - ReplicationInfoList/*/TargetKafkaClusterArn
        - ReplicationInfoList/*/TargetCompressionType
        - ReplicationInfoList/*/TopicReplication/StartingPosition
        - ReplicationInfoList/*/TopicReplication/TopicNameConfiguration
      x-read-only-properties:
        - ReplicatorArn
      x-required-properties:
        - ReplicatorName
        - ReplicationInfoList
        - KafkaClusters
        - ServiceExecutionRoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - kafka:UntagResource
          - kafka:ListTagsForResource
          - kafka:TagResource
      x-required-permissions:
        create:
          - ec2:CreateNetworkInterface
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - kafka:CreateReplicator
          - kafka:CreateReplicatorReference
          - kafka:DescribeClusterV2
          - kafka:DescribeReplicator
          - kafka:GetBootstrapBrokers
          - kafka:ListTagsForResource
          - kafka:TagResource
        read:
          - kafka:DescribeReplicator
          - kafka:ListTagsForResource
        update:
          - kafka:DescribeReplicator
          - kafka:ListTagsForResource
          - kafka:TagResource
          - kafka:UntagResource
          - kafka:UpdateReplicationInfo
        delete:
          - kafka:DeleteReplicator
          - kafka:DescribeReplicator
          - kafka:ListTagsForResource
          - kafka:UntagResource
        list:
          - kafka:ListReplicators
    VpcConfig:
      type: object
      additionalProperties: false
      properties:
        SecurityGroups:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        SubnetIds:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
      required:
        - SubnetIds
    ServerlessCluster:
      type: object
      properties:
        Arn:
          type: string
        ClusterName:
          type: string
          minLength: 1
          maxLength: 64
        VpcConfigs:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/VpcConfig'
        ClientAuthentication:
          $ref: '#/components/schemas/ClientAuthentication'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
          additionalProperties: false
      required:
        - ClusterName
        - VpcConfigs
        - ClientAuthentication
      x-stackql-resource-name: serverless_cluster
      description: Resource Type definition for AWS::MSK::ServerlessCluster
      x-type-name: AWS::MSK::ServerlessCluster
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ClusterName
        - VpcConfigs
        - ClientAuthentication
        - Tags
      x-read-only-properties:
        - Arn
      x-required-properties:
        - ClusterName
        - VpcConfigs
        - ClientAuthentication
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - kafka:CreateClusterV2
          - kafka:TagResource
          - kafka:DescribeClusterV2
          - ec2:CreateVpcEndpoint
          - ec2:CreateTags
          - ec2:DescribeVpcAttribute
          - ec2:DescribeSubnets
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeVpcs
          - ec2:DescribeSecurityGroups
        read:
          - kafka:DescribeClusterV2
        delete:
          - kafka:DeleteCluster
          - kafka:DescribeClusterV2
          - ec2:DeleteVpcEndpoints
        list:
          - kafka:ListClustersV2
    Authentication:
      type: string
      description: The type of private link authentication
      minLength: 3
      maxLength: 10
      enum:
        - SASL_IAM
        - SASL_SCRAM
        - TLS
    ClientSubnets:
      type: array
      uniqueItems: false
      x-insertionOrder: false
      items:
        type: string
        pattern: ^(subnet-)([a-z0-9]+)\Z
    SecurityGroups:
      type: array
      uniqueItems: false
      x-insertionOrder: false
      items:
        type: string
        pattern: ^(sg-)([a-z0-9]+)\Z
    Tags:
      type: object
      description: A key-value pair to associate with a resource.
      x-patternProperties:
        ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
          type: string
      additionalProperties: false
    VpcId:
      type: string
      pattern: ^(vpc-)([a-z0-9]+)\Z
    VpcConnection:
      type: object
      properties:
        Arn:
          type: string
        Authentication:
          $ref: '#/components/schemas/Authentication'
        ClientSubnets:
          $ref: '#/components/schemas/ClientSubnets'
        TargetClusterArn:
          description: The Amazon Resource Name (ARN) of the target cluster
          type: string
          pattern: ^arn:[\w-]+:kafka:[\w-]+:\d+:cluster.*\Z
        SecurityGroups:
          $ref: '#/components/schemas/SecurityGroups'
        Tags:
          $ref: '#/components/schemas/Tags'
        VpcId:
          $ref: '#/components/schemas/VpcId'
      required:
        - Authentication
        - ClientSubnets
        - SecurityGroups
        - TargetClusterArn
        - VpcId
      x-stackql-resource-name: vpc_connection
      description: Resource Type definition for AWS::MSK::VpcConnection
      x-type-name: AWS::MSK::VpcConnection
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ClientSubnets
        - Authentication
        - SecurityGroups
        - TargetClusterArn
        - VpcId
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Authentication
        - ClientSubnets
        - SecurityGroups
        - TargetClusterArn
        - VpcId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - kafka:TagResource
          - kafka:UntagResource
          - kafka:ListTagsForResource
      x-required-permissions:
        create:
          - ec2:CreateVpcEndpoint
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - ec2:DescribeVpcs
          - ec2:DescribeVpcEndpoints
          - ec2:AcceptVpcEndpointConnections
          - ec2:RejectVpcEndpointConnections
          - ec2:DescribeVpcEndpointConnections
          - ec2:CreateTags
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - kafka:CreateVpcConnection
          - kafka:DescribeVpcConnection
          - kafka:TagResource
          - kms:CreateGrant
          - kms:DescribeKey
        read:
          - kafka:DescribeVpcConnection
          - kms:CreateGrant
          - kms:DescribeKey
        update:
          - kafka:DescribeVpcConnection
          - kms:CreateGrant
          - kms:DescribeKey
          - kafka:TagResource
          - kafka:UntagResource
        delete:
          - ec2:DeleteVpcEndpoint
          - ec2:DeleteVpcEndpoints
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeVpcEndpointConnections
          - kafka:DeleteVpcConnection
          - kafka:DescribeVpcConnection
          - kms:CreateGrant
          - kms:DescribeKey
        list:
          - kafka:ListVpcConnections
          - kms:CreateGrant
          - kms:DescribeKey
    CreateBatchScramSecretRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ClusterArn:
              type: string
            SecretArnList:
              $ref: '#/components/schemas/SecretArnList'
          x-stackQL-stringOnly: true
      x-title: CreateBatchScramSecretRequest
      type: object
      required: []
    CreateClusterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            BrokerNodeGroupInfo:
              $ref: '#/components/schemas/BrokerNodeGroupInfo'
            EnhancedMonitoring:
              type: string
              minLength: 7
              maxLength: 23
              enum:
                - DEFAULT
                - PER_BROKER
                - PER_TOPIC_PER_BROKER
                - PER_TOPIC_PER_PARTITION
            KafkaVersion:
              type: string
              minLength: 1
              maxLength: 128
            NumberOfBrokerNodes:
              type: integer
            EncryptionInfo:
              $ref: '#/components/schemas/EncryptionInfo'
            OpenMonitoring:
              $ref: '#/components/schemas/OpenMonitoring'
            ClusterName:
              type: string
              minLength: 1
              maxLength: 64
            Arn:
              type: string
            CurrentVersion:
              description: The current version of the MSK cluster
              type: string
            ClientAuthentication:
              $ref: '#/components/schemas/ClientAuthentication'
            LoggingInfo:
              $ref: '#/components/schemas/LoggingInfo'
            Tags:
              type: object
              description: A key-value pair to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
            ConfigurationInfo:
              $ref: '#/components/schemas/ConfigurationInfo'
            StorageMode:
              type: string
              minLength: 5
              maxLength: 6
              enum:
                - LOCAL
                - TIERED
          x-stackQL-stringOnly: true
      x-title: CreateClusterRequest
      type: object
      required: []
    CreateClusterPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Policy:
              description: A policy document containing permissions to add to the specified cluster.
              type: object
            ClusterArn:
              description: The arn of the cluster for the resource policy.
              type: string
              pattern: ^arn:[\w-]+:kafka:[\w-]+:\d+:cluster.*\Z
            CurrentVersion:
              description: The current version of the policy attached to the specified cluster
              type: string
              pattern: ^(K)([a-zA-Z0-9]+)\Z
          x-stackQL-stringOnly: true
      x-title: CreateClusterPolicyRequest
      type: object
      required: []
    CreateConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              type: string
            Description:
              type: string
            ServerProperties:
              type: string
            KafkaVersionsList:
              $ref: '#/components/schemas/KafkaVersionsList'
            Arn:
              type: string
            LatestRevision:
              $ref: '#/components/schemas/LatestRevision'
          x-stackQL-stringOnly: true
      x-title: CreateConfigurationRequest
      type: object
      required: []
    CreateReplicatorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ReplicatorArn:
              description: Amazon Resource Name for the created replicator.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn):kafka:.*
            ReplicatorName:
              description: The name of the replicator.
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^[0-9A-Za-z][0-9A-Za-z-]{0,}$
            CurrentVersion:
              description: The current version of the MSK replicator.
              type: string
            Description:
              description: A summary description of the replicator.
              type: string
              maxLength: 1024
            KafkaClusters:
              description: Specifies a list of Kafka clusters which are targets of the replicator.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              minItems: 2
              maxItems: 2
              items:
                $ref: '#/components/schemas/KafkaCluster'
            ReplicationInfoList:
              description: A list of replication configurations, where each configuration targets a given source cluster to target cluster replication flow.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              minItems: 1
              maxItems: 1
              items:
                $ref: '#/components/schemas/ReplicationInfo'
            ServiceExecutionRoleArn:
              description: The Amazon Resource Name (ARN) of the IAM role used by the replicator to access external resources.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn):iam:.*
            Tags:
              description: A collection of tags associated with a resource
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateReplicatorRequest
      type: object
      required: []
    CreateServerlessClusterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            ClusterName:
              type: string
              minLength: 1
              maxLength: 64
            VpcConfigs:
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/VpcConfig'
            ClientAuthentication:
              $ref: '#/components/schemas/ClientAuthentication'
            Tags:
              type: object
              description: A key-value pair to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateServerlessClusterRequest
      type: object
      required: []
    CreateVpcConnectionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            Authentication:
              $ref: '#/components/schemas/Authentication'
            ClientSubnets:
              $ref: '#/components/schemas/ClientSubnets'
            TargetClusterArn:
              description: The Amazon Resource Name (ARN) of the target cluster
              type: string
              pattern: ^arn:[\w-]+:kafka:[\w-]+:\d+:cluster.*\Z
            SecurityGroups:
              $ref: '#/components/schemas/SecurityGroups'
            Tags:
              $ref: '#/components/schemas/Tags'
            VpcId:
              $ref: '#/components/schemas/VpcId'
          x-stackQL-stringOnly: true
      x-title: CreateVpcConnectionRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    batch_scram_secrets:
      name: batch_scram_secrets
      id: aws.msk.batch_scram_secrets
      x-cfn-schema-name: BatchScramSecret
      x-cfn-type-name: AWS::MSK::BatchScramSecret
      x-identifiers:
        - ClusterArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__BatchScramSecret&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::BatchScramSecret"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::BatchScramSecret"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::BatchScramSecret"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/batch_scram_secrets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/batch_scram_secrets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/batch_scram_secrets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.SecretArnList') as secret_arn_list
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ClusterArn') as cluster_arn,
                JSON_EXTRACT(detail.Properties, '$.SecretArnList') as secret_arn_list
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::BatchScramSecret'
                AND detail.data__TypeName = 'AWS::MSK::BatchScramSecret'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                  json_extract_path_text(Properties, 'SecretArnList') as secret_arn_list
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
                  AND data__Identifier = '<ClusterArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ClusterArn') as cluster_arn,
                    json_extract_path_text(detail.Properties, 'SecretArnList') as secret_arn_list
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::BatchScramSecret'
                    AND detail.data__TypeName = 'AWS::MSK::BatchScramSecret'
                    AND listing.region = 'us-east-1'
    batch_scram_secrets_list_only:
      name: batch_scram_secrets_list_only
      id: aws.msk.batch_scram_secrets_list_only
      x-cfn-schema-name: BatchScramSecret
      x-cfn-type-name: AWS::MSK::BatchScramSecret
      x-identifiers:
        - ClusterArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::BatchScramSecret'
                AND region = 'us-east-1'
    clusters:
      name: clusters
      id: aws.msk.clusters
      x-cfn-schema-name: Cluster
      x-cfn-type-name: AWS::MSK::Cluster
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Cluster&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Cluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Cluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Cluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/clusters/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BrokerNodeGroupInfo') as broker_node_group_info,
              JSON_EXTRACT(Properties, '$.EnhancedMonitoring') as enhanced_monitoring,
              JSON_EXTRACT(Properties, '$.KafkaVersion') as kafka_version,
              JSON_EXTRACT(Properties, '$.NumberOfBrokerNodes') as number_of_broker_nodes,
              JSON_EXTRACT(Properties, '$.EncryptionInfo') as encryption_info,
              JSON_EXTRACT(Properties, '$.OpenMonitoring') as open_monitoring,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(Properties, '$.ClientAuthentication') as client_authentication,
              JSON_EXTRACT(Properties, '$.LoggingInfo') as logging_info,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ConfigurationInfo') as configuration_info,
              JSON_EXTRACT(Properties, '$.StorageMode') as storage_mode
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Cluster'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.BrokerNodeGroupInfo') as broker_node_group_info,
                JSON_EXTRACT(detail.Properties, '$.EnhancedMonitoring') as enhanced_monitoring,
                JSON_EXTRACT(detail.Properties, '$.KafkaVersion') as kafka_version,
                JSON_EXTRACT(detail.Properties, '$.NumberOfBrokerNodes') as number_of_broker_nodes,
                JSON_EXTRACT(detail.Properties, '$.EncryptionInfo') as encryption_info,
                JSON_EXTRACT(detail.Properties, '$.OpenMonitoring') as open_monitoring,
                JSON_EXTRACT(detail.Properties, '$.ClusterName') as cluster_name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CurrentVersion') as current_version,
                JSON_EXTRACT(detail.Properties, '$.ClientAuthentication') as client_authentication,
                JSON_EXTRACT(detail.Properties, '$.LoggingInfo') as logging_info,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationInfo') as configuration_info,
                JSON_EXTRACT(detail.Properties, '$.StorageMode') as storage_mode
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::Cluster'
                AND detail.data__TypeName = 'AWS::MSK::Cluster'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'BrokerNodeGroupInfo') as broker_node_group_info,
                  json_extract_path_text(Properties, 'EnhancedMonitoring') as enhanced_monitoring,
                  json_extract_path_text(Properties, 'KafkaVersion') as kafka_version,
                  json_extract_path_text(Properties, 'NumberOfBrokerNodes') as number_of_broker_nodes,
                  json_extract_path_text(Properties, 'EncryptionInfo') as encryption_info,
                  json_extract_path_text(Properties, 'OpenMonitoring') as open_monitoring,
                  json_extract_path_text(Properties, 'ClusterName') as cluster_name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CurrentVersion') as current_version,
                  json_extract_path_text(Properties, 'ClientAuthentication') as client_authentication,
                  json_extract_path_text(Properties, 'LoggingInfo') as logging_info,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ConfigurationInfo') as configuration_info,
                  json_extract_path_text(Properties, 'StorageMode') as storage_mode
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Cluster'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'BrokerNodeGroupInfo') as broker_node_group_info,
                    json_extract_path_text(detail.Properties, 'EnhancedMonitoring') as enhanced_monitoring,
                    json_extract_path_text(detail.Properties, 'KafkaVersion') as kafka_version,
                    json_extract_path_text(detail.Properties, 'NumberOfBrokerNodes') as number_of_broker_nodes,
                    json_extract_path_text(detail.Properties, 'EncryptionInfo') as encryption_info,
                    json_extract_path_text(detail.Properties, 'OpenMonitoring') as open_monitoring,
                    json_extract_path_text(detail.Properties, 'ClusterName') as cluster_name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CurrentVersion') as current_version,
                    json_extract_path_text(detail.Properties, 'ClientAuthentication') as client_authentication,
                    json_extract_path_text(detail.Properties, 'LoggingInfo') as logging_info,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ConfigurationInfo') as configuration_info,
                    json_extract_path_text(detail.Properties, 'StorageMode') as storage_mode
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::Cluster'
                    AND detail.data__TypeName = 'AWS::MSK::Cluster'
                    AND listing.region = 'us-east-1'
    clusters_list_only:
      name: clusters_list_only
      id: aws.msk.clusters_list_only
      x-cfn-schema-name: Cluster
      x-cfn-type-name: AWS::MSK::Cluster
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Cluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Cluster'
                AND region = 'us-east-1'
    cluster_tags:
      name: cluster_tags
      id: aws.msk.cluster_tags
      x-cfn-schema-name: Cluster
      x-cfn-type-name: AWS::MSK::Cluster
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.BrokerNodeGroupInfo') as broker_node_group_info,
              JSON_EXTRACT(detail.Properties, '$.EnhancedMonitoring') as enhanced_monitoring,
              JSON_EXTRACT(detail.Properties, '$.KafkaVersion') as kafka_version,
              JSON_EXTRACT(detail.Properties, '$.NumberOfBrokerNodes') as number_of_broker_nodes,
              JSON_EXTRACT(detail.Properties, '$.EncryptionInfo') as encryption_info,
              JSON_EXTRACT(detail.Properties, '$.OpenMonitoring') as open_monitoring,
              JSON_EXTRACT(detail.Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(detail.Properties, '$.ClientAuthentication') as client_authentication,
              JSON_EXTRACT(detail.Properties, '$.LoggingInfo') as logging_info,
              JSON_EXTRACT(detail.Properties, '$.ConfigurationInfo') as configuration_info,
              JSON_EXTRACT(detail.Properties, '$.StorageMode') as storage_mode
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::MSK::Cluster'
              AND detail.data__TypeName = 'AWS::MSK::Cluster'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'BrokerNodeGroupInfo') as broker_node_group_info,
                json_extract_path_text(detail.Properties, 'EnhancedMonitoring') as enhanced_monitoring,
                json_extract_path_text(detail.Properties, 'KafkaVersion') as kafka_version,
                json_extract_path_text(detail.Properties, 'NumberOfBrokerNodes') as number_of_broker_nodes,
                json_extract_path_text(detail.Properties, 'EncryptionInfo') as encryption_info,
                json_extract_path_text(detail.Properties, 'OpenMonitoring') as open_monitoring,
                json_extract_path_text(detail.Properties, 'ClusterName') as cluster_name,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CurrentVersion') as current_version,
                json_extract_path_text(detail.Properties, 'ClientAuthentication') as client_authentication,
                json_extract_path_text(detail.Properties, 'LoggingInfo') as logging_info,
                json_extract_path_text(detail.Properties, 'ConfigurationInfo') as configuration_info,
                json_extract_path_text(detail.Properties, 'StorageMode') as storage_mode
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::MSK::Cluster'
                AND detail.data__TypeName = 'AWS::MSK::Cluster'
                AND listing.region = 'us-east-1'
    cluster_policies:
      name: cluster_policies
      id: aws.msk.cluster_policies
      x-cfn-schema-name: ClusterPolicy
      x-cfn-type-name: AWS::MSK::ClusterPolicy
      x-identifiers:
        - ClusterArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ClusterPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::ClusterPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::ClusterPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::ClusterPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cluster_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Policy') as policy,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
              AND data__Identifier = '<ClusterArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Policy') as policy,
                JSON_EXTRACT(detail.Properties, '$.ClusterArn') as cluster_arn,
                JSON_EXTRACT(detail.Properties, '$.CurrentVersion') as current_version
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::ClusterPolicy'
                AND detail.data__TypeName = 'AWS::MSK::ClusterPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Policy') as policy,
                  json_extract_path_text(Properties, 'ClusterArn') as cluster_arn,
                  json_extract_path_text(Properties, 'CurrentVersion') as current_version
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
                  AND data__Identifier = '<ClusterArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Policy') as policy,
                    json_extract_path_text(detail.Properties, 'ClusterArn') as cluster_arn,
                    json_extract_path_text(detail.Properties, 'CurrentVersion') as current_version
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::ClusterPolicy'
                    AND detail.data__TypeName = 'AWS::MSK::ClusterPolicy'
                    AND listing.region = 'us-east-1'
    cluster_policies_list_only:
      name: cluster_policies_list_only
      id: aws.msk.cluster_policies_list_only
      x-cfn-schema-name: ClusterPolicy
      x-cfn-type-name: AWS::MSK::ClusterPolicy
      x-identifiers:
        - ClusterArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ClusterArn') as cluster_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ClusterArn') as cluster_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ClusterPolicy'
                AND region = 'us-east-1'
    configurations:
      name: configurations
      id: aws.msk.configurations
      x-cfn-schema-name: Configuration
      x-cfn-type-name: AWS::MSK::Configuration
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Configuration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Configuration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Configuration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Configuration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ServerProperties') as server_properties,
              JSON_EXTRACT(Properties, '$.KafkaVersionsList') as kafka_versions_list,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.LatestRevision') as latest_revision
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Configuration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ServerProperties') as server_properties,
                JSON_EXTRACT(detail.Properties, '$.KafkaVersionsList') as kafka_versions_list,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.LatestRevision') as latest_revision
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::Configuration'
                AND detail.data__TypeName = 'AWS::MSK::Configuration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ServerProperties') as server_properties,
                  json_extract_path_text(Properties, 'KafkaVersionsList') as kafka_versions_list,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'LatestRevision') as latest_revision
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Configuration'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ServerProperties') as server_properties,
                    json_extract_path_text(detail.Properties, 'KafkaVersionsList') as kafka_versions_list,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'LatestRevision') as latest_revision
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::Configuration'
                    AND detail.data__TypeName = 'AWS::MSK::Configuration'
                    AND listing.region = 'us-east-1'
    configurations_list_only:
      name: configurations_list_only
      id: aws.msk.configurations_list_only
      x-cfn-schema-name: Configuration
      x-cfn-type-name: AWS::MSK::Configuration
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Configuration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Configuration'
                AND region = 'us-east-1'
    replicators:
      name: replicators
      id: aws.msk.replicators
      x-cfn-schema-name: Replicator
      x-cfn-type-name: AWS::MSK::Replicator
      x-identifiers:
        - ReplicatorArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Replicator&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Replicator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Replicator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::Replicator"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/replicators/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/replicators/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/replicators/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ReplicatorArn') as replicator_arn,
              JSON_EXTRACT(Properties, '$.ReplicatorName') as replicator_name,
              JSON_EXTRACT(Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KafkaClusters') as kafka_clusters,
              JSON_EXTRACT(Properties, '$.ReplicationInfoList') as replication_info_list,
              JSON_EXTRACT(Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Replicator'
              AND data__Identifier = '<ReplicatorArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ReplicatorArn') as replicator_arn,
                JSON_EXTRACT(detail.Properties, '$.ReplicatorName') as replicator_name,
                JSON_EXTRACT(detail.Properties, '$.CurrentVersion') as current_version,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KafkaClusters') as kafka_clusters,
                JSON_EXTRACT(detail.Properties, '$.ReplicationInfoList') as replication_info_list,
                JSON_EXTRACT(detail.Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::Replicator'
                AND detail.data__TypeName = 'AWS::MSK::Replicator'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ReplicatorArn') as replicator_arn,
                  json_extract_path_text(Properties, 'ReplicatorName') as replicator_name,
                  json_extract_path_text(Properties, 'CurrentVersion') as current_version,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KafkaClusters') as kafka_clusters,
                  json_extract_path_text(Properties, 'ReplicationInfoList') as replication_info_list,
                  json_extract_path_text(Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::Replicator'
                  AND data__Identifier = '<ReplicatorArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ReplicatorArn') as replicator_arn,
                    json_extract_path_text(detail.Properties, 'ReplicatorName') as replicator_name,
                    json_extract_path_text(detail.Properties, 'CurrentVersion') as current_version,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KafkaClusters') as kafka_clusters,
                    json_extract_path_text(detail.Properties, 'ReplicationInfoList') as replication_info_list,
                    json_extract_path_text(detail.Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::Replicator'
                    AND detail.data__TypeName = 'AWS::MSK::Replicator'
                    AND listing.region = 'us-east-1'
    replicators_list_only:
      name: replicators_list_only
      id: aws.msk.replicators_list_only
      x-cfn-schema-name: Replicator
      x-cfn-type-name: AWS::MSK::Replicator
      x-identifiers:
        - ReplicatorArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicatorArn') as replicator_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Replicator'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicatorArn') as replicator_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::Replicator'
                AND region = 'us-east-1'
    replicator_tags:
      name: replicator_tags
      id: aws.msk.replicator_tags
      x-cfn-schema-name: Replicator
      x-cfn-type-name: AWS::MSK::Replicator
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ReplicatorArn') as replicator_arn,
              JSON_EXTRACT(detail.Properties, '$.ReplicatorName') as replicator_name,
              JSON_EXTRACT(detail.Properties, '$.CurrentVersion') as current_version,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KafkaClusters') as kafka_clusters,
              JSON_EXTRACT(detail.Properties, '$.ReplicationInfoList') as replication_info_list,
              JSON_EXTRACT(detail.Properties, '$.ServiceExecutionRoleArn') as service_execution_role_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::MSK::Replicator'
              AND detail.data__TypeName = 'AWS::MSK::Replicator'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ReplicatorArn') as replicator_arn,
                json_extract_path_text(detail.Properties, 'ReplicatorName') as replicator_name,
                json_extract_path_text(detail.Properties, 'CurrentVersion') as current_version,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KafkaClusters') as kafka_clusters,
                json_extract_path_text(detail.Properties, 'ReplicationInfoList') as replication_info_list,
                json_extract_path_text(detail.Properties, 'ServiceExecutionRoleArn') as service_execution_role_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::MSK::Replicator'
                AND detail.data__TypeName = 'AWS::MSK::Replicator'
                AND listing.region = 'us-east-1'
    serverless_clusters:
      name: serverless_clusters
      id: aws.msk.serverless_clusters
      x-cfn-schema-name: ServerlessCluster
      x-cfn-type-name: AWS::MSK::ServerlessCluster
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ServerlessCluster&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::ServerlessCluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::ServerlessCluster"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/serverless_clusters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/serverless_clusters/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(Properties, '$.VpcConfigs') as vpc_configs,
              JSON_EXTRACT(Properties, '$.ClientAuthentication') as client_authentication,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ClusterName') as cluster_name,
                JSON_EXTRACT(detail.Properties, '$.VpcConfigs') as vpc_configs,
                JSON_EXTRACT(detail.Properties, '$.ClientAuthentication') as client_authentication,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND detail.data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ClusterName') as cluster_name,
                  json_extract_path_text(Properties, 'VpcConfigs') as vpc_configs,
                  json_extract_path_text(Properties, 'ClientAuthentication') as client_authentication,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ClusterName') as cluster_name,
                    json_extract_path_text(detail.Properties, 'VpcConfigs') as vpc_configs,
                    json_extract_path_text(detail.Properties, 'ClientAuthentication') as client_authentication,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::ServerlessCluster'
                    AND detail.data__TypeName = 'AWS::MSK::ServerlessCluster'
                    AND listing.region = 'us-east-1'
    serverless_clusters_list_only:
      name: serverless_clusters_list_only
      id: aws.msk.serverless_clusters_list_only
      x-cfn-schema-name: ServerlessCluster
      x-cfn-type-name: AWS::MSK::ServerlessCluster
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND region = 'us-east-1'
    serverless_cluster_tags:
      name: serverless_cluster_tags
      id: aws.msk.serverless_cluster_tags
      x-cfn-schema-name: ServerlessCluster
      x-cfn-type-name: AWS::MSK::ServerlessCluster
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.ClusterName') as cluster_name,
              JSON_EXTRACT(detail.Properties, '$.VpcConfigs') as vpc_configs,
              JSON_EXTRACT(detail.Properties, '$.ClientAuthentication') as client_authentication
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::MSK::ServerlessCluster'
              AND detail.data__TypeName = 'AWS::MSK::ServerlessCluster'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'ClusterName') as cluster_name,
                json_extract_path_text(detail.Properties, 'VpcConfigs') as vpc_configs,
                json_extract_path_text(detail.Properties, 'ClientAuthentication') as client_authentication
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND detail.data__TypeName = 'AWS::MSK::ServerlessCluster'
                AND listing.region = 'us-east-1'
    vpc_connections:
      name: vpc_connections
      id: aws.msk.vpc_connections
      x-cfn-schema-name: VpcConnection
      x-cfn-type-name: AWS::MSK::VpcConnection
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__VpcConnection&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::VpcConnection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::VpcConnection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::MSK::VpcConnection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/vpc_connections/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/vpc_connections/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/vpc_connections/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Authentication') as authentication,
              JSON_EXTRACT(Properties, '$.ClientSubnets') as client_subnets,
              JSON_EXTRACT(Properties, '$.TargetClusterArn') as target_cluster_arn,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::VpcConnection'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Authentication') as authentication,
                JSON_EXTRACT(detail.Properties, '$.ClientSubnets') as client_subnets,
                JSON_EXTRACT(detail.Properties, '$.TargetClusterArn') as target_cluster_arn,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroups') as security_groups,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::MSK::VpcConnection'
                AND detail.data__TypeName = 'AWS::MSK::VpcConnection'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Authentication') as authentication,
                  json_extract_path_text(Properties, 'ClientSubnets') as client_subnets,
                  json_extract_path_text(Properties, 'TargetClusterArn') as target_cluster_arn,
                  json_extract_path_text(Properties, 'SecurityGroups') as security_groups,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'VpcId') as vpc_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MSK::VpcConnection'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Authentication') as authentication,
                    json_extract_path_text(detail.Properties, 'ClientSubnets') as client_subnets,
                    json_extract_path_text(detail.Properties, 'TargetClusterArn') as target_cluster_arn,
                    json_extract_path_text(detail.Properties, 'SecurityGroups') as security_groups,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'VpcId') as vpc_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::MSK::VpcConnection'
                    AND detail.data__TypeName = 'AWS::MSK::VpcConnection'
                    AND listing.region = 'us-east-1'
    vpc_connections_list_only:
      name: vpc_connections_list_only
      id: aws.msk.vpc_connections_list_only
      x-cfn-schema-name: VpcConnection
      x-cfn-type-name: AWS::MSK::VpcConnection
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::VpcConnection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MSK::VpcConnection'
                AND region = 'us-east-1'
    vpc_connection_tags:
      name: vpc_connection_tags
      id: aws.msk.vpc_connection_tags
      x-cfn-schema-name: VpcConnection
      x-cfn-type-name: AWS::MSK::VpcConnection
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Authentication') as authentication,
              JSON_EXTRACT(detail.Properties, '$.ClientSubnets') as client_subnets,
              JSON_EXTRACT(detail.Properties, '$.TargetClusterArn') as target_cluster_arn,
              JSON_EXTRACT(detail.Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::MSK::VpcConnection'
              AND detail.data__TypeName = 'AWS::MSK::VpcConnection'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Authentication') as authentication,
                json_extract_path_text(detail.Properties, 'ClientSubnets') as client_subnets,
                json_extract_path_text(detail.Properties, 'TargetClusterArn') as target_cluster_arn,
                json_extract_path_text(detail.Properties, 'SecurityGroups') as security_groups,
                json_extract_path_text(detail.Properties, 'VpcId') as vpc_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::MSK::VpcConnection'
                AND detail.data__TypeName = 'AWS::MSK::VpcConnection'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__BatchScramSecret&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateBatchScramSecret
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateBatchScramSecretRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Cluster&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCluster
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ClusterPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateClusterPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateClusterPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Configuration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Replicator&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateReplicator
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateReplicatorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ServerlessCluster&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateServerlessCluster
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateServerlessClusterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__VpcConnection&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateVpcConnection
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateVpcConnectionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
