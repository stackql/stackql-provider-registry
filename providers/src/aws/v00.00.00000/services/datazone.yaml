openapi: 3.0.0
info:
  title: DataZone
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AccountId:
      type: string
      maxLength: 12
      minLength: 12
      pattern: ^\d{12}$
    DataAccessRole:
      type: string
      description: The data access role included in the configuration details of the AWS Glue data source.
      pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]{1,128}$
    DataSourceConfigurationInput:
      description: Specifies the configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
      oneOf:
        - type: object
          title: GlueRunConfiguration
          properties:
            GlueRunConfiguration:
              $ref: '#/components/schemas/GlueRunConfigurationInput'
          additionalProperties: false
        - type: object
          title: RedshiftRunConfiguration
          properties:
            RedshiftRunConfiguration:
              $ref: '#/components/schemas/RedshiftRunConfigurationInput'
          additionalProperties: false
    DataSourceStatus:
      type: string
      description: The status of the data source.
      enum:
        - CREATING
        - FAILED_CREATION
        - READY
        - UPDATING
        - FAILED_UPDATE
        - RUNNING
        - DELETING
        - FAILED_DELETION
    EnableSetting:
      type: string
      description: Specifies whether the data source is enabled.
      enum:
        - ENABLED
        - DISABLED
    FilterExpression:
      type: object
      description: The search filter expression.
      properties:
        Type:
          $ref: '#/components/schemas/FilterExpressionType'
        Expression:
          type: string
          maxLength: 2048
          minLength: 1
      required:
        - Expression
        - Type
      additionalProperties: false
    FilterExpressionType:
      type: string
      description: The search filter expression type.
      enum:
        - INCLUDE
        - EXCLUDE
    FormName:
      type: string
      description: The name of the metadata form.
      maxLength: 128
      minLength: 1
      pattern: ^(?![0-9_])\w+$|^_\w*[a-zA-Z0-9]\w*$
    FormInput:
      type: object
      description: The details of a metadata form.
      properties:
        FormName:
          description: The name of the metadata form.
          $ref: '#/components/schemas/FormName'
        TypeIdentifier:
          type: string
          description: The ID of the metadata form type.
          maxLength: 385
          minLength: 1
          pattern: ^(?!\.)[\w\.]*\w$
        TypeRevision:
          description: The revision of the metadata form type.
          $ref: '#/components/schemas/TypeRevision'
        Content:
          type: string
          description: The content of the metadata form.
          maxLength: 75000
      required:
        - FormName
      additionalProperties: false
    GlueRunConfigurationInput:
      type: object
      properties:
        DataAccessRole:
          description: The data access role included in the configuration details of the AWS Glue data source.
          $ref: '#/components/schemas/DataAccessRole'
        RelationalFilterConfigurations:
          type: array
          description: The relational filter configurations included in the configuration details of the AWS Glue data source.
          items:
            $ref: '#/components/schemas/RelationalFilterConfiguration'
          x-insertionOrder: false
      required:
        - RelationalFilterConfigurations
      additionalProperties: false
    RecommendationConfiguration:
      type: object
      description: The recommendation to be updated as part of the UpdateDataSource action.
      properties:
        EnableBusinessNameGeneration:
          type: boolean
          description: Specifies whether automatic business name generation is to be enabled or not as part of the recommendation configuration.
      additionalProperties: false
    RedshiftClusterStorage:
      type: object
      description: The name of an Amazon Redshift cluster.
      properties:
        ClusterName:
          type: string
          description: The name of an Amazon Redshift cluster.
          maxLength: 63
          minLength: 1
          pattern: ^[0-9a-z].[a-z0-9\-]*$
      required:
        - ClusterName
      additionalProperties: false
    RedshiftCredentialConfiguration:
      type: object
      description: The ARN of a secret manager for an Amazon Redshift cluster.
      properties:
        SecretManagerArn:
          type: string
          description: The ARN of a secret manager for an Amazon Redshift cluster.
          maxLength: 256
          pattern: ^arn:aws[^:]*:secretsmanager:[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]:\d{12}:secret:.*$
      required:
        - SecretManagerArn
      additionalProperties: false
    RedshiftRunConfigurationInput:
      type: object
      description: The configuration details of the Amazon Redshift data source.
      properties:
        DataAccessRole:
          description: The data access role included in the configuration details of the Amazon Redshift data source.
          $ref: '#/components/schemas/DataAccessRole'
        RelationalFilterConfigurations:
          $ref: '#/components/schemas/RelationalFilterConfigurations'
        RedshiftCredentialConfiguration:
          description: The details of the credentials required to access an Amazon Redshift cluster.
          $ref: '#/components/schemas/RedshiftCredentialConfiguration'
        RedshiftStorage:
          description: The details of the Amazon Redshift storage as part of the configuration of an Amazon Redshift data source run.
          $ref: '#/components/schemas/RedshiftStorage'
      required:
        - RedshiftCredentialConfiguration
        - RedshiftStorage
        - RelationalFilterConfigurations
      additionalProperties: false
    RedshiftServerlessStorage:
      type: object
      description: The details of the Amazon Redshift Serverless workgroup storage.
      properties:
        WorkgroupName:
          type: string
          description: The name of the Amazon Redshift Serverless workgroup.
          maxLength: 64
          minLength: 3
          pattern: ^[a-z0-9-]+$
      required:
        - WorkgroupName
      additionalProperties: false
    RedshiftStorage:
      description: The details of the Amazon Redshift storage as part of the configuration of an Amazon Redshift data source run.
      oneOf:
        - type: object
          title: RedshiftClusterSource
          description: The details of the Amazon Redshift cluster source.
          properties:
            RedshiftClusterSource:
              $ref: '#/components/schemas/RedshiftClusterStorage'
          required:
            - RedshiftClusterSource
          additionalProperties: false
        - type: object
          title: RedshiftServerlessSource
          description: The details of the Amazon Redshift Serverless workgroup source.
          properties:
            RedshiftServerlessSource:
              $ref: '#/components/schemas/RedshiftServerlessStorage'
          required:
            - RedshiftServerlessSource
          additionalProperties: false
    Region:
      type: string
      maxLength: 16
      minLength: 4
      pattern: '[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]'
    RelationalFilterConfiguration:
      type: object
      description: The relational filter configuration for the data source.
      properties:
        DatabaseName:
          type: string
          description: The database name specified in the relational filter configuration for the data source.
          maxLength: 128
          minLength: 1
        SchemaName:
          type: string
          description: The schema name specified in the relational filter configuration for the data source.
          maxLength: 128
          minLength: 1
        FilterExpressions:
          type: array
          description: The filter expressions specified in the relational filter configuration for the data source.
          items:
            $ref: '#/components/schemas/FilterExpression'
          x-insertionOrder: false
      required:
        - DatabaseName
      additionalProperties: false
    RelationalFilterConfigurations:
      type: array
      description: The relational filter configurations included in the configuration details of the Amazon Redshift data source.
      items:
        $ref: '#/components/schemas/RelationalFilterConfiguration'
      x-insertionOrder: false
    ScheduleConfiguration:
      type: object
      description: The schedule of the data source runs.
      properties:
        Timezone:
          description: The timezone of the data source run.
          $ref: '#/components/schemas/Timezone'
        Schedule:
          type: string
          description: The schedule of the data source runs.
          maxLength: 256
          minLength: 1
          pattern: cron\((\b[0-5]?[0-9]\b) (\b2[0-3]\b|\b[0-1]?[0-9]\b) (.*){1,5} (.*){1,5} (.*){1,5} (.*){1,5}\)
      additionalProperties: false
    Timezone:
      type: string
    TypeRevision:
      type: string
      description: The revision of the metadata form type.
      maxLength: 64
      minLength: 1
    DataSource:
      type: object
      properties:
        AssetFormsInput:
          type: array
          description: The metadata forms that are to be attached to the assets that this data source works with.
          items:
            $ref: '#/components/schemas/FormInput'
          maxItems: 10
          minItems: 0
          x-insertionOrder: false
        CreatedAt:
          type: string
          description: The timestamp of when the data source was created.
          format: date-time
        Description:
          type: string
          description: The description of the data source.
          maxLength: 2048
        DomainId:
          type: string
          description: The ID of the Amazon DataZone domain where the data source is created.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        DomainIdentifier:
          type: string
          description: The ID of the Amazon DataZone domain where the data source is created.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        EnableSetting:
          description: Specifies whether the data source is enabled.
          $ref: '#/components/schemas/EnableSetting'
        EnvironmentId:
          type: string
          description: The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        EnvironmentIdentifier:
          description: The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
          type: string
        Id:
          type: string
          description: The unique identifier of the data source.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Configuration:
          description: Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
          $ref: '#/components/schemas/DataSourceConfigurationInput'
        LastRunAssetCount:
          description: The number of assets created by the data source during its last run.
          type: number
        LastRunAt:
          type: string
          description: The timestamp that specifies when the data source was last run.
        LastRunStatus:
          description: The status of the last run of this data source.
          type: string
        Name:
          type: string
          description: The name of the data source.
          maxLength: 256
          minLength: 1
        ProjectId:
          type: string
          description: The ID of the Amazon DataZone project to which the data source is added.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        ProjectIdentifier:
          type: string
          description: The identifier of the Amazon DataZone project in which you want to add the data source.
        PublishOnImport:
          type: boolean
          description: Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.
        Recommendation:
          $ref: '#/components/schemas/RecommendationConfiguration'
          description: Specifies whether the business name generation is to be enabled for this data source.
        Schedule:
          description: The schedule of the data source runs.
          $ref: '#/components/schemas/ScheduleConfiguration'
        Status:
          description: The status of the data source.
          $ref: '#/components/schemas/DataSourceStatus'
        Type:
          type: string
          description: The type of the data source.
          maxLength: 256
          minLength: 1
        UpdatedAt:
          type: string
          description: The timestamp of when this data source was updated.
          format: date-time
      required:
        - Name
        - DomainIdentifier
        - ProjectIdentifier
        - EnvironmentIdentifier
        - Type
      x-stackql-resource-name: data_source
      description: Definition of AWS::DataZone::DataSource Resource Type
      x-type-name: AWS::DataZone::DataSource
      x-stackql-primary-identifier:
        - DomainId
        - Id
      x-create-only-properties:
        - EnvironmentIdentifier
        - DomainIdentifier
        - ProjectIdentifier
        - Type
      x-write-only-properties:
        - AssetFormsInput
        - EnvironmentIdentifier
        - DomainIdentifier
        - Configuration
        - ProjectIdentifier
      x-read-only-properties:
        - CreatedAt
        - DomainId
        - EnvironmentId
        - Id
        - LastRunAssetCount
        - LastRunAt
        - LastRunStatus
        - ProjectId
        - Status
        - UpdatedAt
      x-required-properties:
        - Name
        - DomainIdentifier
        - ProjectIdentifier
        - EnvironmentIdentifier
        - Type
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - datazone:CreateDataSource
          - iam:PassRole
          - datazone:GetDataSource
          - datazone:DeleteDataSource
        read:
          - datazone:GetDataSource
        update:
          - datazone:UpdateDataSource
          - datazone:GetDataSource
          - datazone:DeleteDataSource
        delete:
          - datazone:DeleteDataSource
          - datazone:GetDataSource
        list:
          - datazone:ListDataSources
    AuthType:
      type: string
      description: The type of single sign-on in Amazon DataZone.
      enum:
        - IAM_IDC
        - DISABLED
    DomainStatus:
      type: string
      description: The status of the Amazon DataZone domain.
      enum:
        - CREATING
        - AVAILABLE
        - CREATION_FAILED
        - DELETING
        - DELETED
        - DELETION_FAILED
    SingleSignOn:
      type: object
      description: The single-sign on configuration of the Amazon DataZone domain.
      properties:
        Type:
          $ref: '#/components/schemas/AuthType'
        UserAssignment:
          $ref: '#/components/schemas/UserAssignment'
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with the domain.
      type: object
      properties:
        Key:
          type: string
          description: The key name of the tag.
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: The value for the tag.
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    UserAssignment:
      type: string
      description: The single sign-on user assignment in Amazon DataZone.
      enum:
        - AUTOMATIC
        - MANUAL
    Domain:
      type: object
      properties:
        Arn:
          type: string
          description: The ARN of the Amazon DataZone domain.
          pattern: ^arn:aws(|-cn|-us-gov):datazone:\w+(?:-\w+)+:\d{12}:domain/dzd[-_][a-zA-Z0-9_-]{1,36}$
        CreatedAt:
          type: string
          description: The timestamp of when the Amazon DataZone domain was last updated.
          format: date-time
        Description:
          type: string
          description: The description of the Amazon DataZone domain.
        DomainExecutionRole:
          type: string
          description: The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
          pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$
        Id:
          type: string
          description: The id of the Amazon DataZone domain.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        KmsKeyIdentifier:
          type: string
          maxLength: 1024
          description: The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
          minLength: 1
          pattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
        LastUpdatedAt:
          type: string
          description: The timestamp of when the Amazon DataZone domain was last updated.
          format: date-time
        ManagedAccountId:
          type: string
          description: The identifier of the AWS account that manages the domain.
        Name:
          type: string
          description: The name of the Amazon DataZone domain.
        PortalUrl:
          type: string
          description: The URL of the data portal for this Amazon DataZone domain.
        SingleSignOn:
          $ref: '#/components/schemas/SingleSignOn'
          description: The single-sign on configuration of the Amazon DataZone domain.
        Status:
          $ref: '#/components/schemas/DomainStatus'
          description: The status of the Amazon DataZone domain.
        Tags:
          type: array
          description: The tags specified for the Amazon DataZone domain.
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DomainExecutionRole
        - Name
      x-stackql-resource-name: domain
      description: A domain is an organizing entity for connecting together assets, users, and their projects
      x-type-name: AWS::DataZone::Domain
      x-stackql-primary-identifier:
        - Id
      x-stackql-additional-identifiers:
        - - Name
      x-create-only-properties:
        - KmsKeyIdentifier
      x-read-only-properties:
        - Arn
        - CreatedAt
        - Id
        - LastUpdatedAt
        - ManagedAccountId
        - PortalUrl
        - Status
      x-required-properties:
        - DomainExecutionRole
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - datazone:CreateDomain
          - datazone:UpdateDomain
          - datazone:GetDomain
          - datazone:TagResource
          - sso:CreateManagedApplicationInstance
          - sso:DeleteManagedApplicationInstance
          - sso:PutApplicationAssignmentConfiguration
        read:
          - datazone:GetDomain
        update:
          - datazone:UpdateDomain
          - datazone:GetDomain
          - datazone:TagResource
          - datazone:UntagResource
          - sso:CreateManagedApplicationInstance
          - sso:DeleteManagedApplicationInstance
          - sso:PutApplicationAssignmentConfiguration
        delete:
          - datazone:DeleteDomain
          - datazone:GetDomain
        list:
          - datazone:ListDomains
    EnvironmentParameter:
      type: object
      description: The parameter details of an environment profile.
      properties:
        Name:
          type: string
          description: The name of an environment profile parameter.
        Value:
          type: string
          description: The value of an environment profile parameter.
      additionalProperties: false
    EnvironmentStatus:
      type: string
      description: The status of the Amazon DataZone environment.
      enum:
        - ACTIVE
        - CREATING
        - UPDATING
        - DELETING
        - CREATE_FAILED
        - UPDATE_FAILED
        - DELETE_FAILED
        - VALIDATION_FAILED
        - SUSPENDED
        - DISABLED
        - EXPIRED
        - DELETED
        - INACCESSIBLE
    Environment:
      type: object
      properties:
        AwsAccountId:
          type: string
          description: The AWS account in which the Amazon DataZone environment is created.
          pattern: ^\d{12}$
        AwsAccountRegion:
          type: string
          description: The AWS region in which the Amazon DataZone environment is created.
          pattern: ^[a-z]{2}-[a-z]{4,10}-\d$
        CreatedAt:
          type: string
          description: The timestamp of when the environment was created.
          format: date-time
        CreatedBy:
          type: string
          description: The Amazon DataZone user who created the environment.
        Description:
          type: string
          description: The description of the Amazon DataZone environment.
          maxLength: 2048
        DomainId:
          type: string
          description: The identifier of the Amazon DataZone domain in which the environment is created.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        DomainIdentifier:
          type: string
          description: The identifier of the Amazon DataZone domain in which the environment would be created.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        EnvironmentBlueprintId:
          type: string
          description: The ID of the blueprint with which the Amazon DataZone environment was created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        EnvironmentProfileId:
          type: string
          description: The ID of the environment profile with which the Amazon DataZone environment was created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        EnvironmentProfileIdentifier:
          type: string
          description: The ID of the environment profile with which the Amazon DataZone environment would be created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        GlossaryTerms:
          type: array
          x-insertionOrder: false
          description: The glossary terms that can be used in the Amazon DataZone environment.
          items:
            type: string
            pattern: ^[a-zA-Z0-9_-]{1,36}$
          maxItems: 20
          minItems: 1
        Id:
          type: string
          description: The ID of the Amazon DataZone environment.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Name:
          type: string
          description: The name of the environment.
          maxLength: 64
          minLength: 1
          pattern: ^[\w -]+$
        ProjectId:
          type: string
          description: The ID of the Amazon DataZone project in which the environment is created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        ProjectIdentifier:
          type: string
          description: The ID of the Amazon DataZone project in which the environment would be created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Provider:
          type: string
          description: The provider of the Amazon DataZone environment.
        Status:
          $ref: '#/components/schemas/EnvironmentStatus'
          description: The status of the Amazon DataZone environment.
        UpdatedAt:
          type: string
          description: The timestamp of when the environment was updated.
          format: date-time
        UserParameters:
          type: array
          x-insertionOrder: false
          description: The user parameters of the Amazon DataZone environment.
          items:
            $ref: '#/components/schemas/EnvironmentParameter'
      required:
        - EnvironmentProfileIdentifier
        - Name
        - ProjectIdentifier
        - DomainIdentifier
      x-stackql-resource-name: environment
      description: Definition of AWS::DataZone::Environment Resource Type
      x-type-name: AWS::DataZone::Environment
      x-stackql-primary-identifier:
        - DomainId
        - Id
      x-stackql-additional-identifiers:
        - - DomainIdentifier
      x-create-only-properties:
        - DomainIdentifier
        - EnvironmentProfileIdentifier
        - ProjectIdentifier
        - UserParameters
      x-write-only-properties:
        - EnvironmentProfileIdentifier
        - ProjectIdentifier
        - DomainIdentifier
      x-read-only-properties:
        - AwsAccountId
        - AwsAccountRegion
        - CreatedAt
        - CreatedBy
        - DomainId
        - EnvironmentBlueprintId
        - EnvironmentProfileId
        - Id
        - ProjectId
        - Provider
        - Status
        - UpdatedAt
      x-required-properties:
        - EnvironmentProfileIdentifier
        - Name
        - ProjectIdentifier
        - DomainIdentifier
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - datazone:CreateEnvironment
          - datazone:GetEnvironment
          - datazone:DeleteEnvironment
        read:
          - datazone:GetEnvironment
        update:
          - datazone:UpdateEnvironment
          - datazone:GetEnvironment
          - datazone:DeleteEnvironment
        delete:
          - datazone:DeleteEnvironment
          - datazone:GetEnvironment
        list:
          - datazone:ListEnvironments
    RegionalParameter:
      additionalProperties: false
      type: object
      properties:
        Parameters:
          $ref: '#/components/schemas/Parameter'
        Region:
          pattern: ^[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]$
          type: string
    Parameter:
      x-patternProperties:
        .+:
          type: string
      additionalProperties: false
      type: object
    EnvironmentBlueprintConfiguration:
      type: object
      properties:
        RegionalParameters:
          uniqueItems: true
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/RegionalParameter'
        ProvisioningRoleArn:
          pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$
          type: string
        DomainId:
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
          type: string
        CreatedAt:
          format: date-time
          type: string
        EnabledRegions:
          minItems: 0
          x-insertionOrder: false
          type: array
          items:
            minLength: 4
            pattern: ^[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]$
            type: string
            maxLength: 16
        EnvironmentBlueprintIdentifier:
          pattern: ^[a-zA-Z0-9_-]{1,36}$
          type: string
        EnvironmentBlueprintId:
          pattern: ^[a-zA-Z0-9_-]{1,36}$
          type: string
        UpdatedAt:
          format: date-time
          type: string
        DomainIdentifier:
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
          type: string
        ManageAccessRoleArn:
          pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$
          type: string
      required:
        - DomainIdentifier
        - EnvironmentBlueprintIdentifier
        - EnabledRegions
      x-stackql-resource-name: environment_blueprint_configuration
      description: Definition of AWS::DataZone::EnvironmentBlueprintConfiguration Resource Type
      x-type-name: AWS::DataZone::EnvironmentBlueprintConfiguration
      x-stackql-primary-identifier:
        - DomainId
        - EnvironmentBlueprintId
      x-stackql-additional-identifiers:
        - - DomainIdentifier
          - EnvironmentBlueprintIdentifier
      x-create-only-properties:
        - DomainIdentifier
        - EnvironmentBlueprintIdentifier
      x-write-only-properties:
        - DomainIdentifier
        - EnvironmentBlueprintIdentifier
      x-read-only-properties:
        - CreatedAt
        - DomainId
        - EnvironmentBlueprintId
        - UpdatedAt
      x-required-properties:
        - DomainIdentifier
        - EnvironmentBlueprintIdentifier
        - EnabledRegions
      x-tagging:
        taggable: false
      x-required-permissions:
        read:
          - datazone:GetEnvironmentBlueprintConfiguration
        create:
          - datazone:ListEnvironmentBlueprints
          - iam:PassRole
          - datazone:GetEnvironmentBlueprintConfiguration
          - datazone:PutEnvironmentBlueprintConfiguration
        update:
          - datazone:DeleteEnvironmentBlueprintConfiguration
          - iam:PassRole
          - datazone:GetEnvironmentBlueprintConfiguration
          - datazone:PutEnvironmentBlueprintConfiguration
        list:
          - datazone:ListEnvironmentBlueprintConfigurations
        delete:
          - datazone:GetEnvironmentBlueprintConfiguration
          - datazone:DeleteEnvironmentBlueprintConfiguration
    EnvironmentProfile:
      type: object
      properties:
        AwsAccountId:
          description: The AWS account in which the Amazon DataZone environment is created.
          type: string
          pattern: ^\d{12}$
        AwsAccountRegion:
          description: The AWS region in which this environment profile is created.
          type: string
          pattern: ^[a-z]{2}-[a-z]{4,10}-\d$
        CreatedAt:
          description: The timestamp of when this environment profile was created.
          type: string
          format: date-time
        CreatedBy:
          description: The Amazon DataZone user who created this environment profile.
          type: string
        Description:
          description: The description of this Amazon DataZone environment profile.
          type: string
          maxLength: 2048
        DomainId:
          description: The ID of the Amazon DataZone domain in which this environment profile is created.
          type: string
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        DomainIdentifier:
          description: The ID of the Amazon DataZone domain in which this environment profile is created.
          type: string
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        EnvironmentBlueprintId:
          description: The ID of the blueprint with which this environment profile is created.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        EnvironmentBlueprintIdentifier:
          description: The ID of the blueprint with which this environment profile is created.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Id:
          description: The ID of this Amazon DataZone environment profile.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Name:
          description: The name of this Amazon DataZone environment profile.
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[\w -]+$
        ProjectId:
          description: The identifier of the project in which to create the environment profile.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        ProjectIdentifier:
          description: The identifier of the project in which to create the environment profile.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        UpdatedAt:
          description: The timestamp of when this environment profile was updated.
          type: string
          format: date-time
        UserParameters:
          description: The user parameters of this Amazon DataZone environment profile.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/EnvironmentParameter'
      required:
        - EnvironmentBlueprintIdentifier
        - ProjectIdentifier
        - DomainIdentifier
        - AwsAccountId
        - AwsAccountRegion
        - Name
      x-stackql-resource-name: environment_profile
      description: AWS Datazone Environment Profile is pre-configured set of resources and blueprints that provide reusable templates for creating environments.
      x-type-name: AWS::DataZone::EnvironmentProfile
      x-stackql-primary-identifier:
        - DomainId
        - Id
      x-stackql-additional-identifiers:
        - - DomainIdentifier
      x-create-only-properties:
        - DomainIdentifier
        - EnvironmentBlueprintIdentifier
        - ProjectIdentifier
      x-write-only-properties:
        - EnvironmentBlueprintIdentifier
        - ProjectIdentifier
        - DomainIdentifier
      x-read-only-properties:
        - CreatedAt
        - CreatedBy
        - DomainId
        - EnvironmentBlueprintId
        - Id
        - ProjectId
        - UpdatedAt
      x-required-properties:
        - EnvironmentBlueprintIdentifier
        - ProjectIdentifier
        - DomainIdentifier
        - AwsAccountId
        - AwsAccountRegion
        - Name
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - datazone:CreateEnvironmentProfile
          - datazone:GetEnvironmentProfile
        read:
          - datazone:GetEnvironmentProfile
        update:
          - datazone:UpdateEnvironmentProfile
          - datazone:GetEnvironmentProfile
        delete:
          - datazone:DeleteEnvironmentProfile
          - datazone:GetEnvironmentProfile
        list:
          - datazone:ListEnvironmentProfiles
    Project:
      type: object
      properties:
        CreatedAt:
          description: The timestamp of when the project was created.
          type: string
          format: date-time
        CreatedBy:
          description: The Amazon DataZone user who created the project.
          type: string
        Description:
          description: The description of the Amazon DataZone project.
          type: string
          maxLength: 2048
        DomainId:
          description: The identifier of the Amazon DataZone domain in which the project was created.
          type: string
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        DomainIdentifier:
          description: The ID of the Amazon DataZone domain in which this project is created.
          type: string
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        GlossaryTerms:
          description: The glossary terms that can be used in this Amazon DataZone project.
          type: array
          x-insertionOrder: false
          items:
            type: string
            pattern: ^[a-zA-Z0-9_-]{1,36}$
          maxItems: 20
          minItems: 1
        Id:
          description: The ID of the Amazon DataZone project.
          type: string
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        LastUpdatedAt:
          description: The timestamp of when the project was last updated.
          type: string
          format: date-time
        Name:
          description: The name of the Amazon DataZone project.
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[\w -]+$
      required:
        - DomainIdentifier
        - Name
      x-stackql-resource-name: project
      description: Amazon DataZone projects are business use case–based groupings of people, assets (data), and tools used to simplify access to the AWS analytics.
      x-type-name: AWS::DataZone::Project
      x-stackql-primary-identifier:
        - DomainId
        - Id
      x-stackql-additional-identifiers:
        - - DomainIdentifier
      x-create-only-properties:
        - DomainIdentifier
      x-write-only-properties:
        - DomainIdentifier
      x-read-only-properties:
        - Id
        - CreatedAt
        - CreatedBy
        - DomainId
        - LastUpdatedAt
      x-required-properties:
        - DomainIdentifier
        - Name
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - datazone:CreateProject
          - datazone:GetProject
        read:
          - datazone:GetProject
        update:
          - datazone:UpdateProject
          - datazone:GetProject
        delete:
          - datazone:DeleteProject
          - datazone:GetProject
        list:
          - datazone:ListProjects
    SubscriptionTargetForm:
      type: object
      description: The details of the subscription target configuration.
      properties:
        FormName:
          type: string
          description: The form name included in the subscription target configuration.
          maxLength: 128
          minLength: 1
          pattern: ^(?![0-9_])\w+$|^_\w*[a-zA-Z0-9]\w*$
        Content:
          type: string
          description: The content of the subscription target configuration.
      required:
        - Content
        - FormName
      additionalProperties: false
    SubscriptionTarget:
      type: object
      properties:
        ApplicableAssetTypes:
          type: array
          description: The asset types that can be included in the subscription target.
          x-insertionOrder: false
          items:
            type: string
            maxLength: 256
            minLength: 1
            pattern: ^[^\.]*
        AuthorizedPrincipals:
          type: array
          description: The authorized principals of the subscription target.
          x-insertionOrder: false
          items:
            type: string
            pattern: ^[a-zA-Z0-9:/_-]*$
          maxItems: 10
          minItems: 1
        CreatedAt:
          type: string
          description: The timestamp of when the subscription target was created.
          format: date-time
        CreatedBy:
          type: string
          description: The Amazon DataZone user who created the subscription target.
        DomainId:
          type: string
          description: The ID of the Amazon DataZone domain in which subscription target is created.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        DomainIdentifier:
          type: string
          description: The ID of the Amazon DataZone domain in which subscription target would be created.
          pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
        EnvironmentId:
          type: string
          description: The ID of the environment in which subscription target is created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        EnvironmentIdentifier:
          type: string
          description: The ID of the environment in which subscription target would be created.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Id:
          type: string
          description: The ID of the subscription target.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        ManageAccessRole:
          type: string
          description: The manage access role that is used to create the subscription target.
        Name:
          type: string
          description: The name of the subscription target.
          maxLength: 256
          minLength: 1
        ProjectId:
          type: string
          description: The identifier of the project specified in the subscription target.
          pattern: ^[a-zA-Z0-9_-]{1,36}$
        Provider:
          type: string
          description: The provider of the subscription target.
        SubscriptionTargetConfig:
          type: array
          description: The configuration of the subscription target.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SubscriptionTargetForm'
        Type:
          type: string
          description: The type of the subscription target.
        UpdatedAt:
          type: string
          description: The timestamp of when the subscription target was updated.
          format: date-time
        UpdatedBy:
          type: string
          description: The Amazon DataZone user who updated the subscription target.
      required:
        - ApplicableAssetTypes
        - AuthorizedPrincipals
        - DomainIdentifier
        - EnvironmentIdentifier
        - ManageAccessRole
        - Name
        - SubscriptionTargetConfig
        - Type
      x-stackql-resource-name: subscription_target
      description: Subscription targets enables one to access the data to which you have subscribed in your projects.
      x-type-name: AWS::DataZone::SubscriptionTarget
      x-stackql-primary-identifier:
        - DomainId
        - EnvironmentId
        - Id
      x-create-only-properties:
        - Type
        - DomainIdentifier
        - EnvironmentIdentifier
      x-write-only-properties:
        - DomainIdentifier
        - EnvironmentIdentifier
      x-read-only-properties:
        - CreatedAt
        - CreatedBy
        - DomainId
        - EnvironmentId
        - Id
        - ProjectId
        - UpdatedAt
        - UpdatedBy
      x-required-properties:
        - ApplicableAssetTypes
        - AuthorizedPrincipals
        - DomainIdentifier
        - EnvironmentIdentifier
        - ManageAccessRole
        - Name
        - SubscriptionTargetConfig
        - Type
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - datazone:CreateSubscriptionTarget
          - datazone:GetSubscriptionTarget
          - iam:PassRole
        read:
          - datazone:GetSubscriptionTarget
        update:
          - datazone:UpdateSubscriptionTarget
          - datazone:GetSubscriptionTarget
          - iam:PassRole
        delete:
          - datazone:DeleteSubscriptionTarget
        list:
          - datazone:ListSubscriptionTargets
    CreateDataSourceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AssetFormsInput:
              type: array
              description: The metadata forms that are to be attached to the assets that this data source works with.
              items:
                $ref: '#/components/schemas/FormInput'
              maxItems: 10
              minItems: 0
              x-insertionOrder: false
            CreatedAt:
              type: string
              description: The timestamp of when the data source was created.
              format: date-time
            Description:
              type: string
              description: The description of the data source.
              maxLength: 2048
            DomainId:
              type: string
              description: The ID of the Amazon DataZone domain where the data source is created.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            DomainIdentifier:
              type: string
              description: The ID of the Amazon DataZone domain where the data source is created.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            EnableSetting:
              description: Specifies whether the data source is enabled.
              $ref: '#/components/schemas/EnableSetting'
            EnvironmentId:
              type: string
              description: The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            EnvironmentIdentifier:
              description: The unique identifier of the Amazon DataZone environment to which the data source publishes assets.
              type: string
            Id:
              type: string
              description: The unique identifier of the data source.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Configuration:
              description: Configuration of the data source. It can be set to either glueRunConfiguration or redshiftRunConfiguration.
              $ref: '#/components/schemas/DataSourceConfigurationInput'
            LastRunAssetCount:
              description: The number of assets created by the data source during its last run.
              type: number
            LastRunAt:
              type: string
              description: The timestamp that specifies when the data source was last run.
            LastRunStatus:
              description: The status of the last run of this data source.
              type: string
            Name:
              type: string
              description: The name of the data source.
              maxLength: 256
              minLength: 1
            ProjectId:
              type: string
              description: The ID of the Amazon DataZone project to which the data source is added.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            ProjectIdentifier:
              type: string
              description: The identifier of the Amazon DataZone project in which you want to add the data source.
            PublishOnImport:
              type: boolean
              description: Specifies whether the assets that this data source creates in the inventory are to be also automatically published to the catalog.
            Recommendation:
              $ref: '#/components/schemas/RecommendationConfiguration'
              description: Specifies whether the business name generation is to be enabled for this data source.
            Schedule:
              description: The schedule of the data source runs.
              $ref: '#/components/schemas/ScheduleConfiguration'
            Status:
              description: The status of the data source.
              $ref: '#/components/schemas/DataSourceStatus'
            Type:
              type: string
              description: The type of the data source.
              maxLength: 256
              minLength: 1
            UpdatedAt:
              type: string
              description: The timestamp of when this data source was updated.
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreateDataSourceRequest
      type: object
      required: []
    CreateDomainRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              description: The ARN of the Amazon DataZone domain.
              pattern: ^arn:aws(|-cn|-us-gov):datazone:\w+(?:-\w+)+:\d{12}:domain/dzd[-_][a-zA-Z0-9_-]{1,36}$
            CreatedAt:
              type: string
              description: The timestamp of when the Amazon DataZone domain was last updated.
              format: date-time
            Description:
              type: string
              description: The description of the Amazon DataZone domain.
            DomainExecutionRole:
              type: string
              description: The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.
              pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$
            Id:
              type: string
              description: The id of the Amazon DataZone domain.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            KmsKeyIdentifier:
              type: string
              maxLength: 1024
              description: The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.
              minLength: 1
              pattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
            LastUpdatedAt:
              type: string
              description: The timestamp of when the Amazon DataZone domain was last updated.
              format: date-time
            ManagedAccountId:
              type: string
              description: The identifier of the AWS account that manages the domain.
            Name:
              type: string
              description: The name of the Amazon DataZone domain.
            PortalUrl:
              type: string
              description: The URL of the data portal for this Amazon DataZone domain.
            SingleSignOn:
              $ref: '#/components/schemas/SingleSignOn'
              description: The single-sign on configuration of the Amazon DataZone domain.
            Status:
              $ref: '#/components/schemas/DomainStatus'
              description: The status of the Amazon DataZone domain.
            Tags:
              type: array
              description: The tags specified for the Amazon DataZone domain.
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateDomainRequest
      type: object
      required: []
    CreateEnvironmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AwsAccountId:
              type: string
              description: The AWS account in which the Amazon DataZone environment is created.
              pattern: ^\d{12}$
            AwsAccountRegion:
              type: string
              description: The AWS region in which the Amazon DataZone environment is created.
              pattern: ^[a-z]{2}-[a-z]{4,10}-\d$
            CreatedAt:
              type: string
              description: The timestamp of when the environment was created.
              format: date-time
            CreatedBy:
              type: string
              description: The Amazon DataZone user who created the environment.
            Description:
              type: string
              description: The description of the Amazon DataZone environment.
              maxLength: 2048
            DomainId:
              type: string
              description: The identifier of the Amazon DataZone domain in which the environment is created.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            DomainIdentifier:
              type: string
              description: The identifier of the Amazon DataZone domain in which the environment would be created.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            EnvironmentBlueprintId:
              type: string
              description: The ID of the blueprint with which the Amazon DataZone environment was created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            EnvironmentProfileId:
              type: string
              description: The ID of the environment profile with which the Amazon DataZone environment was created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            EnvironmentProfileIdentifier:
              type: string
              description: The ID of the environment profile with which the Amazon DataZone environment would be created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            GlossaryTerms:
              type: array
              x-insertionOrder: false
              description: The glossary terms that can be used in the Amazon DataZone environment.
              items:
                type: string
                pattern: ^[a-zA-Z0-9_-]{1,36}$
              maxItems: 20
              minItems: 1
            Id:
              type: string
              description: The ID of the Amazon DataZone environment.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Name:
              type: string
              description: The name of the environment.
              maxLength: 64
              minLength: 1
              pattern: ^[\w -]+$
            ProjectId:
              type: string
              description: The ID of the Amazon DataZone project in which the environment is created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            ProjectIdentifier:
              type: string
              description: The ID of the Amazon DataZone project in which the environment would be created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Provider:
              type: string
              description: The provider of the Amazon DataZone environment.
            Status:
              $ref: '#/components/schemas/EnvironmentStatus'
              description: The status of the Amazon DataZone environment.
            UpdatedAt:
              type: string
              description: The timestamp of when the environment was updated.
              format: date-time
            UserParameters:
              type: array
              x-insertionOrder: false
              description: The user parameters of the Amazon DataZone environment.
              items:
                $ref: '#/components/schemas/EnvironmentParameter'
          x-stackQL-stringOnly: true
      x-title: CreateEnvironmentRequest
      type: object
      required: []
    CreateEnvironmentBlueprintConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RegionalParameters:
              uniqueItems: true
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/RegionalParameter'
            ProvisioningRoleArn:
              pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$
              type: string
            DomainId:
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
              type: string
            CreatedAt:
              format: date-time
              type: string
            EnabledRegions:
              minItems: 0
              x-insertionOrder: false
              type: array
              items:
                minLength: 4
                pattern: ^[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]$
                type: string
                maxLength: 16
            EnvironmentBlueprintIdentifier:
              pattern: ^[a-zA-Z0-9_-]{1,36}$
              type: string
            EnvironmentBlueprintId:
              pattern: ^[a-zA-Z0-9_-]{1,36}$
              type: string
            UpdatedAt:
              format: date-time
              type: string
            DomainIdentifier:
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
              type: string
            ManageAccessRoleArn:
              pattern: ^arn:aws[^:]*:iam::\d{12}:(role|role/service-role)/[\w+=,.@-]*$
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateEnvironmentBlueprintConfigurationRequest
      type: object
      required: []
    CreateEnvironmentProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AwsAccountId:
              description: The AWS account in which the Amazon DataZone environment is created.
              type: string
              pattern: ^\d{12}$
            AwsAccountRegion:
              description: The AWS region in which this environment profile is created.
              type: string
              pattern: ^[a-z]{2}-[a-z]{4,10}-\d$
            CreatedAt:
              description: The timestamp of when this environment profile was created.
              type: string
              format: date-time
            CreatedBy:
              description: The Amazon DataZone user who created this environment profile.
              type: string
            Description:
              description: The description of this Amazon DataZone environment profile.
              type: string
              maxLength: 2048
            DomainId:
              description: The ID of the Amazon DataZone domain in which this environment profile is created.
              type: string
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            DomainIdentifier:
              description: The ID of the Amazon DataZone domain in which this environment profile is created.
              type: string
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            EnvironmentBlueprintId:
              description: The ID of the blueprint with which this environment profile is created.
              type: string
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            EnvironmentBlueprintIdentifier:
              description: The ID of the blueprint with which this environment profile is created.
              type: string
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Id:
              description: The ID of this Amazon DataZone environment profile.
              type: string
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Name:
              description: The name of this Amazon DataZone environment profile.
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[\w -]+$
            ProjectId:
              description: The identifier of the project in which to create the environment profile.
              type: string
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            ProjectIdentifier:
              description: The identifier of the project in which to create the environment profile.
              type: string
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            UpdatedAt:
              description: The timestamp of when this environment profile was updated.
              type: string
              format: date-time
            UserParameters:
              description: The user parameters of this Amazon DataZone environment profile.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/EnvironmentParameter'
          x-stackQL-stringOnly: true
      x-title: CreateEnvironmentProfileRequest
      type: object
      required: []
    CreateProjectRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CreatedAt:
              description: The timestamp of when the project was created.
              type: string
              format: date-time
            CreatedBy:
              description: The Amazon DataZone user who created the project.
              type: string
            Description:
              description: The description of the Amazon DataZone project.
              type: string
              maxLength: 2048
            DomainId:
              description: The identifier of the Amazon DataZone domain in which the project was created.
              type: string
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            DomainIdentifier:
              description: The ID of the Amazon DataZone domain in which this project is created.
              type: string
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            GlossaryTerms:
              description: The glossary terms that can be used in this Amazon DataZone project.
              type: array
              x-insertionOrder: false
              items:
                type: string
                pattern: ^[a-zA-Z0-9_-]{1,36}$
              maxItems: 20
              minItems: 1
            Id:
              description: The ID of the Amazon DataZone project.
              type: string
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            LastUpdatedAt:
              description: The timestamp of when the project was last updated.
              type: string
              format: date-time
            Name:
              description: The name of the Amazon DataZone project.
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[\w -]+$
          x-stackQL-stringOnly: true
      x-title: CreateProjectRequest
      type: object
      required: []
    CreateSubscriptionTargetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicableAssetTypes:
              type: array
              description: The asset types that can be included in the subscription target.
              x-insertionOrder: false
              items:
                type: string
                maxLength: 256
                minLength: 1
                pattern: ^[^\.]*
            AuthorizedPrincipals:
              type: array
              description: The authorized principals of the subscription target.
              x-insertionOrder: false
              items:
                type: string
                pattern: ^[a-zA-Z0-9:/_-]*$
              maxItems: 10
              minItems: 1
            CreatedAt:
              type: string
              description: The timestamp of when the subscription target was created.
              format: date-time
            CreatedBy:
              type: string
              description: The Amazon DataZone user who created the subscription target.
            DomainId:
              type: string
              description: The ID of the Amazon DataZone domain in which subscription target is created.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            DomainIdentifier:
              type: string
              description: The ID of the Amazon DataZone domain in which subscription target would be created.
              pattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$
            EnvironmentId:
              type: string
              description: The ID of the environment in which subscription target is created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            EnvironmentIdentifier:
              type: string
              description: The ID of the environment in which subscription target would be created.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Id:
              type: string
              description: The ID of the subscription target.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            ManageAccessRole:
              type: string
              description: The manage access role that is used to create the subscription target.
            Name:
              type: string
              description: The name of the subscription target.
              maxLength: 256
              minLength: 1
            ProjectId:
              type: string
              description: The identifier of the project specified in the subscription target.
              pattern: ^[a-zA-Z0-9_-]{1,36}$
            Provider:
              type: string
              description: The provider of the subscription target.
            SubscriptionTargetConfig:
              type: array
              description: The configuration of the subscription target.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SubscriptionTargetForm'
            Type:
              type: string
              description: The type of the subscription target.
            UpdatedAt:
              type: string
              description: The timestamp of when the subscription target was updated.
              format: date-time
            UpdatedBy:
              type: string
              description: The Amazon DataZone user who updated the subscription target.
          x-stackQL-stringOnly: true
      x-title: CreateSubscriptionTargetRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    data_sources:
      name: data_sources
      id: aws.datazone.data_sources
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::DataZone::DataSource
      x-identifiers:
        - DomainId
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataSource&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::DataSource'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::DataSource'
                AND region = 'us-east-1'
    data_source:
      name: data_source
      id: aws.datazone.data_source
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::DataZone::DataSource
      x-identifiers:
        - DomainId
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/data_source/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AssetFormsInput') as asset_forms_input,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.DomainIdentifier') as domain_identifier,
              JSON_EXTRACT(Properties, '$.EnableSetting') as enable_setting,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.LastRunAssetCount') as last_run_asset_count,
              JSON_EXTRACT(Properties, '$.LastRunAt') as last_run_at,
              JSON_EXTRACT(Properties, '$.LastRunStatus') as last_run_status,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,
              JSON_EXTRACT(Properties, '$.ProjectIdentifier') as project_identifier,
              JSON_EXTRACT(Properties, '$.PublishOnImport') as publish_on_import,
              JSON_EXTRACT(Properties, '$.Recommendation') as recommendation,
              JSON_EXTRACT(Properties, '$.Schedule') as schedule,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::DataSource'
              AND data__Identifier = '<DomainId>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AssetFormsInput') as asset_forms_input,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'DomainIdentifier') as domain_identifier,
                json_extract_path_text(Properties, 'EnableSetting') as enable_setting,
                json_extract_path_text(Properties, 'EnvironmentId') as environment_id,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Configuration') as configuration,
                json_extract_path_text(Properties, 'LastRunAssetCount') as last_run_asset_count,
                json_extract_path_text(Properties, 'LastRunAt') as last_run_at,
                json_extract_path_text(Properties, 'LastRunStatus') as last_run_status,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ProjectId') as project_id,
                json_extract_path_text(Properties, 'ProjectIdentifier') as project_identifier,
                json_extract_path_text(Properties, 'PublishOnImport') as publish_on_import,
                json_extract_path_text(Properties, 'Recommendation') as recommendation,
                json_extract_path_text(Properties, 'Schedule') as schedule,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::DataSource'
                AND data__Identifier = '<DomainId>|<Id>'
                AND region = 'us-east-1'
    domains:
      name: domains
      id: aws.datazone.domains
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::DataZone::Domain
      x-identifiers:
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::Domain'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::Domain'
                AND region = 'us-east-1'
    domain:
      name: domain
      id: aws.datazone.domain
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::DataZone::Domain
      x-identifiers:
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/domain/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DomainExecutionRole') as domain_execution_role,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.KmsKeyIdentifier') as kms_key_identifier,
              JSON_EXTRACT(Properties, '$.LastUpdatedAt') as last_updated_at,
              JSON_EXTRACT(Properties, '$.ManagedAccountId') as managed_account_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PortalUrl') as portal_url,
              JSON_EXTRACT(Properties, '$.SingleSignOn') as single_sign_on,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::Domain'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DomainExecutionRole') as domain_execution_role,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'KmsKeyIdentifier') as kms_key_identifier,
                json_extract_path_text(Properties, 'LastUpdatedAt') as last_updated_at,
                json_extract_path_text(Properties, 'ManagedAccountId') as managed_account_id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'PortalUrl') as portal_url,
                json_extract_path_text(Properties, 'SingleSignOn') as single_sign_on,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::Domain'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    environments:
      name: environments
      id: aws.datazone.environments
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::DataZone::Environment
      x-identifiers:
        - DomainId
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Environment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/environments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/environments/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::Environment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::Environment'
                AND region = 'us-east-1'
    environment:
      name: environment
      id: aws.datazone.environment
      x-cfn-schema-name: Environment
      x-cfn-type-name: AWS::DataZone::Environment
      x-identifiers:
        - DomainId
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Environment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/environment/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,
              JSON_EXTRACT(Properties, '$.AwsAccountRegion') as aws_account_region,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.DomainIdentifier') as domain_identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentBlueprintId') as environment_blueprint_id,
              JSON_EXTRACT(Properties, '$.EnvironmentProfileId') as environment_profile_id,
              JSON_EXTRACT(Properties, '$.EnvironmentProfileIdentifier') as environment_profile_identifier,
              JSON_EXTRACT(Properties, '$.GlossaryTerms') as glossary_terms,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,
              JSON_EXTRACT(Properties, '$.ProjectIdentifier') as project_identifier,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.UserParameters') as user_parameters
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::Environment'
              AND data__Identifier = '<DomainId>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AwsAccountId') as aws_account_id,
                json_extract_path_text(Properties, 'AwsAccountRegion') as aws_account_region,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'CreatedBy') as created_by,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'DomainIdentifier') as domain_identifier,
                json_extract_path_text(Properties, 'EnvironmentBlueprintId') as environment_blueprint_id,
                json_extract_path_text(Properties, 'EnvironmentProfileId') as environment_profile_id,
                json_extract_path_text(Properties, 'EnvironmentProfileIdentifier') as environment_profile_identifier,
                json_extract_path_text(Properties, 'GlossaryTerms') as glossary_terms,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ProjectId') as project_id,
                json_extract_path_text(Properties, 'ProjectIdentifier') as project_identifier,
                json_extract_path_text(Properties, 'Provider') as provider,
                json_extract_path_text(Properties, 'Status') as status,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'UserParameters') as user_parameters
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::Environment'
                AND data__Identifier = '<DomainId>|<Id>'
                AND region = 'us-east-1'
    environment_blueprint_configurations:
      name: environment_blueprint_configurations
      id: aws.datazone.environment_blueprint_configurations
      x-cfn-schema-name: EnvironmentBlueprintConfiguration
      x-cfn-type-name: AWS::DataZone::EnvironmentBlueprintConfiguration
      x-identifiers:
        - DomainId
        - EnvironmentBlueprintId
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EnvironmentBlueprintConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::EnvironmentBlueprintConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::EnvironmentBlueprintConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/environment_blueprint_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/environment_blueprint_configurations/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.EnvironmentBlueprintId') as environment_blueprint_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::EnvironmentBlueprintConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'EnvironmentBlueprintId') as environment_blueprint_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::EnvironmentBlueprintConfiguration'
                AND region = 'us-east-1'
    environment_blueprint_configuration:
      name: environment_blueprint_configuration
      id: aws.datazone.environment_blueprint_configuration
      x-cfn-schema-name: EnvironmentBlueprintConfiguration
      x-cfn-type-name: AWS::DataZone::EnvironmentBlueprintConfiguration
      x-identifiers:
        - DomainId
        - EnvironmentBlueprintId
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::EnvironmentBlueprintConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/environment_blueprint_configuration/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RegionalParameters') as regional_parameters,
              JSON_EXTRACT(Properties, '$.ProvisioningRoleArn') as provisioning_role_arn,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.EnabledRegions') as enabled_regions,
              JSON_EXTRACT(Properties, '$.EnvironmentBlueprintIdentifier') as environment_blueprint_identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentBlueprintId') as environment_blueprint_id,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.DomainIdentifier') as domain_identifier,
              JSON_EXTRACT(Properties, '$.ManageAccessRoleArn') as manage_access_role_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::EnvironmentBlueprintConfiguration'
              AND data__Identifier = '<DomainId>|<EnvironmentBlueprintId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'RegionalParameters') as regional_parameters,
                json_extract_path_text(Properties, 'ProvisioningRoleArn') as provisioning_role_arn,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'EnabledRegions') as enabled_regions,
                json_extract_path_text(Properties, 'EnvironmentBlueprintIdentifier') as environment_blueprint_identifier,
                json_extract_path_text(Properties, 'EnvironmentBlueprintId') as environment_blueprint_id,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'DomainIdentifier') as domain_identifier,
                json_extract_path_text(Properties, 'ManageAccessRoleArn') as manage_access_role_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::EnvironmentBlueprintConfiguration'
                AND data__Identifier = '<DomainId>|<EnvironmentBlueprintId>'
                AND region = 'us-east-1'
    environment_profiles:
      name: environment_profiles
      id: aws.datazone.environment_profiles
      x-cfn-schema-name: EnvironmentProfile
      x-cfn-type-name: AWS::DataZone::EnvironmentProfile
      x-identifiers:
        - DomainId
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EnvironmentProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::EnvironmentProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::EnvironmentProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/environment_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/environment_profiles/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::EnvironmentProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::EnvironmentProfile'
                AND region = 'us-east-1'
    environment_profile:
      name: environment_profile
      id: aws.datazone.environment_profile
      x-cfn-schema-name: EnvironmentProfile
      x-cfn-type-name: AWS::DataZone::EnvironmentProfile
      x-identifiers:
        - DomainId
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::EnvironmentProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/environment_profile/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AwsAccountId') as aws_account_id,
              JSON_EXTRACT(Properties, '$.AwsAccountRegion') as aws_account_region,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.DomainIdentifier') as domain_identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentBlueprintId') as environment_blueprint_id,
              JSON_EXTRACT(Properties, '$.EnvironmentBlueprintIdentifier') as environment_blueprint_identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,
              JSON_EXTRACT(Properties, '$.ProjectIdentifier') as project_identifier,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.UserParameters') as user_parameters
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::EnvironmentProfile'
              AND data__Identifier = '<DomainId>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AwsAccountId') as aws_account_id,
                json_extract_path_text(Properties, 'AwsAccountRegion') as aws_account_region,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'CreatedBy') as created_by,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'DomainIdentifier') as domain_identifier,
                json_extract_path_text(Properties, 'EnvironmentBlueprintId') as environment_blueprint_id,
                json_extract_path_text(Properties, 'EnvironmentBlueprintIdentifier') as environment_blueprint_identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ProjectId') as project_id,
                json_extract_path_text(Properties, 'ProjectIdentifier') as project_identifier,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'UserParameters') as user_parameters
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::EnvironmentProfile'
                AND data__Identifier = '<DomainId>|<Id>'
                AND region = 'us-east-1'
    projects:
      name: projects
      id: aws.datazone.projects
      x-cfn-schema-name: Project
      x-cfn-type-name: AWS::DataZone::Project
      x-identifiers:
        - DomainId
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Project&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::Project'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::Project'
                AND region = 'us-east-1'
    project:
      name: project
      id: aws.datazone.project
      x-cfn-schema-name: Project
      x-cfn-type-name: AWS::DataZone::Project
      x-identifiers:
        - DomainId
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/project/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.DomainIdentifier') as domain_identifier,
              JSON_EXTRACT(Properties, '$.GlossaryTerms') as glossary_terms,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastUpdatedAt') as last_updated_at,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::Project'
              AND data__Identifier = '<DomainId>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'CreatedBy') as created_by,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'DomainIdentifier') as domain_identifier,
                json_extract_path_text(Properties, 'GlossaryTerms') as glossary_terms,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'LastUpdatedAt') as last_updated_at,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::Project'
                AND data__Identifier = '<DomainId>|<Id>'
                AND region = 'us-east-1'
    subscription_targets:
      name: subscription_targets
      id: aws.datazone.subscription_targets
      x-cfn-schema-name: SubscriptionTarget
      x-cfn-type-name: AWS::DataZone::SubscriptionTarget
      x-identifiers:
        - DomainId
        - EnvironmentId
        - Id
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SubscriptionTarget&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::SubscriptionTarget"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::SubscriptionTarget"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/subscription_targets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/subscription_targets/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::SubscriptionTarget'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'EnvironmentId') as environment_id,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DataZone::SubscriptionTarget'
                AND region = 'us-east-1'
    subscription_target:
      name: subscription_target
      id: aws.datazone.subscription_target
      x-cfn-schema-name: SubscriptionTarget
      x-cfn-type-name: AWS::DataZone::SubscriptionTarget
      x-identifiers:
        - DomainId
        - EnvironmentId
        - Id
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DataZone::SubscriptionTarget"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/subscription_target/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicableAssetTypes') as applicable_asset_types,
              JSON_EXTRACT(Properties, '$.AuthorizedPrincipals') as authorized_principals,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.CreatedBy') as created_by,
              JSON_EXTRACT(Properties, '$.DomainId') as domain_id,
              JSON_EXTRACT(Properties, '$.DomainIdentifier') as domain_identifier,
              JSON_EXTRACT(Properties, '$.EnvironmentId') as environment_id,
              JSON_EXTRACT(Properties, '$.EnvironmentIdentifier') as environment_identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ManageAccessRole') as manage_access_role,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ProjectId') as project_id,
              JSON_EXTRACT(Properties, '$.Provider') as provider,
              JSON_EXTRACT(Properties, '$.SubscriptionTargetConfig') as subscription_target_config,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.UpdatedBy') as updated_by
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::SubscriptionTarget'
              AND data__Identifier = '<DomainId>|<EnvironmentId>|<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ApplicableAssetTypes') as applicable_asset_types,
                json_extract_path_text(Properties, 'AuthorizedPrincipals') as authorized_principals,
                json_extract_path_text(Properties, 'CreatedAt') as created_at,
                json_extract_path_text(Properties, 'CreatedBy') as created_by,
                json_extract_path_text(Properties, 'DomainId') as domain_id,
                json_extract_path_text(Properties, 'DomainIdentifier') as domain_identifier,
                json_extract_path_text(Properties, 'EnvironmentId') as environment_id,
                json_extract_path_text(Properties, 'EnvironmentIdentifier') as environment_identifier,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'ManageAccessRole') as manage_access_role,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'ProjectId') as project_id,
                json_extract_path_text(Properties, 'Provider') as provider,
                json_extract_path_text(Properties, 'SubscriptionTargetConfig') as subscription_target_config,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(Properties, 'UpdatedBy') as updated_by
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DataZone::SubscriptionTarget'
                AND data__Identifier = '<DomainId>|<EnvironmentId>|<Id>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataSource&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataSource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataSourceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDomain
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Environment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnvironment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EnvironmentBlueprintConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnvironmentBlueprintConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentBlueprintConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EnvironmentProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnvironmentProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnvironmentProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Project&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProject
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SubscriptionTarget&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSubscriptionTarget
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionTargetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
