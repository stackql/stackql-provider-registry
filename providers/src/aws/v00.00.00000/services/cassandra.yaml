openapi: 3.0.0
info:
  title: Cassandra
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: A key-value pair to apply to the resource
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    ReplicationSpecification:
      type: object
      additionalProperties: false
      properties:
        ReplicationStrategy:
          type: string
          enum:
            - SINGLE_REGION
            - MULTI_REGION
        RegionList:
          $ref: '#/components/schemas/RegionList'
      default:
        properties:
          ReplicationStrategy:
            type: string
            x-const: SINGLE_REGION
      x-dependencies:
        RegionList:
          - ReplicationStrategy
    RegionList:
      type: array
      items:
        type: string
        enum:
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
      uniqueItems: true
      x-insertionOrder: false
      minItems: 2
      maxItems: 6
    Keyspace:
      type: object
      properties:
        KeyspaceName:
          description: Name for Cassandra keyspace
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        Tags:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        ReplicationSpecification:
          $ref: '#/components/schemas/ReplicationSpecification'
        ClientSideTimestampsEnabled:
          type: boolean
          description: Indicates whether client-side timestamps are enabled (true) or disabled (false) for all tables in the keyspace. To add a Region to a single-Region keyspace with at least one table, the value must be set to true. After you enabled client-side timestamps for a table, you can’t disable it again.
      required: []
      x-stackql-resource-name: keyspace
      description: Resource schema for AWS::Cassandra::Keyspace
      x-type-name: AWS::Cassandra::Keyspace
      x-stackql-primary-identifier:
        - KeyspaceName
      x-create-only-properties:
        - KeyspaceName
      x-required-properties: []
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - cassandra:UntagResource
          - cassandra:UntagMultiRegionResource
      x-required-permissions:
        create:
          - cassandra:Create
          - cassandra:CreateMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - iam:CreateServiceLinkedRole
        read:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
        update:
          - cassandra:Alter
          - cassandra:AlterMultiRegionResource
          - cassandra:Modify
          - cassandra:ModifyMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - cassandra:UntagResource
          - cassandra:UntagMultiRegionResource
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:PutMetricAlarm
          - iam:CreateServiceLinkedRole
        delete:
          - cassandra:Drop
          - cassandra:DropMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
        list:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
    Column:
      type: object
      properties:
        ColumnName:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        ColumnType:
          type: string
      required:
        - ColumnName
        - ColumnType
      additionalProperties: false
    ClusteringKeyColumn:
      type: object
      properties:
        Column:
          $ref: '#/components/schemas/Column'
        OrderBy:
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
      additionalProperties: false
      required:
        - Column
    ProvisionedThroughput:
      description: Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits
      type: object
      properties:
        ReadCapacityUnits:
          type: integer
          minimum: 1
        WriteCapacityUnits:
          type: integer
          minimum: 1
      additionalProperties: false
      required:
        - ReadCapacityUnits
        - WriteCapacityUnits
    Mode:
      description: Capacity mode for the specified table
      type: string
      enum:
        - PROVISIONED
        - ON_DEMAND
      default: ON_DEMAND
    BillingMode:
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/Mode'
        ProvisionedThroughput:
          $ref: '#/components/schemas/ProvisionedThroughput'
      required:
        - Mode
      additionalProperties: false
    EncryptionSpecification:
      description: Represents the settings used to enable server-side encryption
      type: object
      properties:
        EncryptionType:
          $ref: '#/components/schemas/EncryptionType'
        KmsKeyIdentifier:
          $ref: '#/components/schemas/KmsKeyIdentifier'
      required:
        - EncryptionType
      additionalProperties: false
    EncryptionType:
      description: Server-side encryption type
      type: string
      enum:
        - AWS_OWNED_KMS_KEY
        - CUSTOMER_MANAGED_KMS_KEY
      default: AWS_OWNED_KMS_KEY
    KmsKeyIdentifier:
      description: 'The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. '
      type: string
    AutoScalingSpecification:
      description: Represents the read and write settings used for AutoScaling.
      type: object
      properties:
        WriteCapacityAutoScaling:
          $ref: '#/components/schemas/AutoScalingSetting'
        ReadCapacityAutoScaling:
          $ref: '#/components/schemas/AutoScalingSetting'
      additionalProperties: false
    AutoScalingSetting:
      description: Represents configuration for auto scaling.
      type: object
      properties:
        AutoScalingDisabled:
          type: boolean
          default: false
        MinimumUnits:
          type: integer
          minimum: 1
        MaximumUnits:
          type: integer
          minimum: 1
        ScalingPolicy:
          $ref: '#/components/schemas/ScalingPolicy'
      additionalProperties: false
    ScalingPolicy:
      description: Represents scaling policy.
      type: object
      properties:
        TargetTrackingScalingPolicyConfiguration:
          $ref: '#/components/schemas/TargetTrackingScalingPolicyConfiguration'
      additionalProperties: false
    TargetTrackingScalingPolicyConfiguration:
      description: Represents configuration for target tracking scaling policy.
      type: object
      properties:
        DisableScaleIn:
          type: boolean
          default: 'false'
        ScaleInCooldown:
          type: integer
          default: 0
        ScaleOutCooldown:
          type: integer
          default: 0
        TargetValue:
          type: integer
      required:
        - TargetValue
      additionalProperties: false
    ReplicaSpecification:
      description: Represents replica specifications.
      type: object
      properties:
        Region:
          type: string
          minLength: 2
          maxLength: 25
        ReadCapacityUnits:
          type: integer
        ReadCapacityAutoScaling:
          $ref: '#/components/schemas/AutoScalingSetting'
      required:
        - Region
      additionalProperties: false
    Table:
      type: object
      properties:
        KeyspaceName:
          description: Name for Cassandra keyspace
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        TableName:
          description: Name for Cassandra table
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        RegularColumns:
          description: Non-key columns of the table
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Column'
        PartitionKeyColumns:
          description: Partition key columns of the table
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Column'
        ClusteringKeyColumns:
          description: Clustering key columns of the table
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ClusteringKeyColumn'
        BillingMode:
          $ref: '#/components/schemas/BillingMode'
        PointInTimeRecoveryEnabled:
          description: Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
          type: boolean
        ClientSideTimestampsEnabled:
          description: Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
          type: boolean
        Tags:
          description: An array of key-value pairs to apply to this resource
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        DefaultTimeToLive:
          description: Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
          type: integer
          minimum: 0
        EncryptionSpecification:
          $ref: '#/components/schemas/EncryptionSpecification'
        AutoScalingSpecifications:
          $ref: '#/components/schemas/AutoScalingSpecification'
        ReplicaSpecifications:
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ReplicaSpecification'
      required:
        - KeyspaceName
        - PartitionKeyColumns
      x-stackql-resource-name: table
      description: Resource schema for AWS::Cassandra::Table
      x-type-name: AWS::Cassandra::Table
      x-stackql-primary-identifier:
        - KeyspaceName
        - TableName
      x-create-only-properties:
        - KeyspaceName
        - TableName
        - PartitionKeyColumns
        - ClusteringKeyColumns
        - ClientSideTimestampsEnabled
      x-write-only-properties:
        - AutoScalingSpecifications
        - ReplicaSpecifications
      x-required-properties:
        - KeyspaceName
        - PartitionKeyColumns
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - cassandra:UntagResource
          - cassandra:UntagMultiRegionResource
      x-required-permissions:
        create:
          - cassandra:Create
          - cassandra:CreateMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        read:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        update:
          - cassandra:Alter
          - cassandra:AlterMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - cassandra:TagResource
          - cassandra:TagMultiRegionResource
          - cassandra:UntagResource
          - cassandra:UntagMultiRegionResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:Encrypt
          - kms:Decrypt
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        delete:
          - cassandra:Drop
          - cassandra:DropMultiRegionResource
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
        list:
          - cassandra:Select
          - cassandra:SelectMultiRegionResource
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:RegisterScalableTarget
          - application-autoscaling:PutScalingPolicy
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarms
          - cloudwatch:GetMetricData
          - cloudwatch:PutMetricAlarm
    Field:
      type: object
      properties:
        FieldName:
          type: string
        FieldType:
          type: string
      required:
        - FieldName
        - FieldType
      additionalProperties: false
    Type:
      type: object
      properties:
        KeyspaceName:
          description: Name of the Keyspace which contains the User-Defined Type.
          type: string
        TypeName:
          description: Name of the User-Defined Type.
          type: string
        Fields:
          description: Field definitions of the User-Defined Type
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Field'
        DirectReferringTables:
          description: List of Tables that directly reference the User-Defined Type in their columns.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        DirectParentTypes:
          description: List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        MaxNestingDepth:
          description: Maximum nesting depth of the User-Defined Type across the field types.
          type: integer
        LastModifiedTimestamp:
          description: Timestamp of the last time the User-Defined Type's meta data was modified.
          type: number
        KeyspaceArn:
          description: ARN of the Keyspace which contains the User-Defined Type.
          type: string
      required:
        - KeyspaceName
        - TypeName
        - Fields
      x-stackql-resource-name: type
      description: Resource schema for AWS::Cassandra::Type
      x-type-name: AWS::Cassandra::Type
      x-stackql-primary-identifier:
        - KeyspaceName
        - TypeName
      x-create-only-properties:
        - KeyspaceName
        - TypeName
        - Fields
      x-read-only-properties:
        - DirectReferringTables
        - DirectParentTypes
        - MaxNestingDepth
        - LastModifiedTimestamp
        - KeyspaceArn
      x-required-properties:
        - KeyspaceName
        - TypeName
        - Fields
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - cassandra:Create
          - cassandra:Select
        read:
          - cassandra:Select
        delete:
          - cassandra:Drop
          - cassandra:Select
        list:
          - cassandra:Select
    CreateKeyspaceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            KeyspaceName:
              description: Name for Cassandra keyspace
              type: string
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
            Tags:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
            ReplicationSpecification:
              $ref: '#/components/schemas/ReplicationSpecification'
            ClientSideTimestampsEnabled:
              type: boolean
              description: Indicates whether client-side timestamps are enabled (true) or disabled (false) for all tables in the keyspace. To add a Region to a single-Region keyspace with at least one table, the value must be set to true. After you enabled client-side timestamps for a table, you can’t disable it again.
          x-stackQL-stringOnly: true
      x-title: CreateKeyspaceRequest
      type: object
      required: []
    CreateTableRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            KeyspaceName:
              description: Name for Cassandra keyspace
              type: string
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
            TableName:
              description: Name for Cassandra table
              type: string
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
            RegularColumns:
              description: Non-key columns of the table
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Column'
            PartitionKeyColumns:
              description: Partition key columns of the table
              type: array
              minItems: 1
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/Column'
            ClusteringKeyColumns:
              description: Clustering key columns of the table
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/ClusteringKeyColumn'
            BillingMode:
              $ref: '#/components/schemas/BillingMode'
            PointInTimeRecoveryEnabled:
              description: Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
              type: boolean
            ClientSideTimestampsEnabled:
              description: Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
              type: boolean
            Tags:
              description: An array of key-value pairs to apply to this resource
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
            DefaultTimeToLive:
              description: Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
              type: integer
              minimum: 0
            EncryptionSpecification:
              $ref: '#/components/schemas/EncryptionSpecification'
            AutoScalingSpecifications:
              $ref: '#/components/schemas/AutoScalingSpecification'
            ReplicaSpecifications:
              type: array
              minItems: 1
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/ReplicaSpecification'
          x-stackQL-stringOnly: true
      x-title: CreateTableRequest
      type: object
      required: []
    CreateTypeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            KeyspaceName:
              description: Name of the Keyspace which contains the User-Defined Type.
              type: string
            TypeName:
              description: Name of the User-Defined Type.
              type: string
            Fields:
              description: Field definitions of the User-Defined Type
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Field'
            DirectReferringTables:
              description: List of Tables that directly reference the User-Defined Type in their columns.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            DirectParentTypes:
              description: List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            MaxNestingDepth:
              description: Maximum nesting depth of the User-Defined Type across the field types.
              type: integer
            LastModifiedTimestamp:
              description: Timestamp of the last time the User-Defined Type's meta data was modified.
              type: number
            KeyspaceArn:
              description: ARN of the Keyspace which contains the User-Defined Type.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateTypeRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    keyspaces:
      name: keyspaces
      id: aws.cassandra.keyspaces
      x-cfn-schema-name: Keyspace
      x-cfn-type-name: AWS::Cassandra::Keyspace
      x-identifiers:
        - KeyspaceName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Keyspace&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Keyspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Keyspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Keyspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/keyspaces/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/keyspaces/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/keyspaces/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ReplicationSpecification') as replication_specification,
              JSON_EXTRACT(Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
              AND data__Identifier = '<KeyspaceName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.KeyspaceName') as keyspace_name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ReplicationSpecification') as replication_specification,
                JSON_EXTRACT(detail.Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cassandra::Keyspace'
                AND detail.data__TypeName = 'AWS::Cassandra::Keyspace'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ReplicationSpecification') as replication_specification,
                  json_extract_path_text(Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
                  AND data__Identifier = '<KeyspaceName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'KeyspaceName') as keyspace_name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ReplicationSpecification') as replication_specification,
                    json_extract_path_text(detail.Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cassandra::Keyspace'
                    AND detail.data__TypeName = 'AWS::Cassandra::Keyspace'
                    AND listing.region = 'us-east-1'
    keyspaces_list_only:
      name: keyspaces_list_only
      id: aws.cassandra.keyspaces_list_only
      x-cfn-schema-name: Keyspace
      x-cfn-type-name: AWS::Cassandra::Keyspace
      x-identifiers:
        - KeyspaceName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
                AND region = 'us-east-1'
    keyspace_tags:
      name: keyspace_tags
      id: aws.cassandra.keyspace_tags
      x-cfn-schema-name: Keyspace
      x-cfn-type-name: AWS::Cassandra::Keyspace
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(detail.Properties, '$.ReplicationSpecification') as replication_specification,
              JSON_EXTRACT(detail.Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Cassandra::Keyspace'
              AND detail.data__TypeName = 'AWS::Cassandra::Keyspace'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(detail.Properties, 'ReplicationSpecification') as replication_specification,
                json_extract_path_text(detail.Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Cassandra::Keyspace'
                AND detail.data__TypeName = 'AWS::Cassandra::Keyspace'
                AND listing.region = 'us-east-1'
    tables:
      name: tables
      id: aws.cassandra.tables
      x-cfn-schema-name: Table
      x-cfn-type-name: AWS::Cassandra::Table
      x-identifiers:
        - KeyspaceName
        - TableName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Table&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Table"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Table"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Table"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/tables/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TableName') as table_name,
              JSON_EXTRACT(Properties, '$.RegularColumns') as regular_columns,
              JSON_EXTRACT(Properties, '$.PartitionKeyColumns') as partition_key_columns,
              JSON_EXTRACT(Properties, '$.ClusteringKeyColumns') as clustering_key_columns,
              JSON_EXTRACT(Properties, '$.BillingMode') as billing_mode,
              JSON_EXTRACT(Properties, '$.PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
              JSON_EXTRACT(Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.DefaultTimeToLive') as default_time_to_live,
              JSON_EXTRACT(Properties, '$.EncryptionSpecification') as encryption_specification,
              JSON_EXTRACT(Properties, '$.AutoScalingSpecifications') as auto_scaling_specifications,
              JSON_EXTRACT(Properties, '$.ReplicaSpecifications') as replica_specifications
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Table'
              AND data__Identifier = '<KeyspaceName>|<TableName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.KeyspaceName') as keyspace_name,
                JSON_EXTRACT(detail.Properties, '$.TableName') as table_name,
                JSON_EXTRACT(detail.Properties, '$.RegularColumns') as regular_columns,
                JSON_EXTRACT(detail.Properties, '$.PartitionKeyColumns') as partition_key_columns,
                JSON_EXTRACT(detail.Properties, '$.ClusteringKeyColumns') as clustering_key_columns,
                JSON_EXTRACT(detail.Properties, '$.BillingMode') as billing_mode,
                JSON_EXTRACT(detail.Properties, '$.PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
                JSON_EXTRACT(detail.Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.DefaultTimeToLive') as default_time_to_live,
                JSON_EXTRACT(detail.Properties, '$.EncryptionSpecification') as encryption_specification,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingSpecifications') as auto_scaling_specifications,
                JSON_EXTRACT(detail.Properties, '$.ReplicaSpecifications') as replica_specifications
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cassandra::Table'
                AND detail.data__TypeName = 'AWS::Cassandra::Table'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                  json_extract_path_text(Properties, 'TableName') as table_name,
                  json_extract_path_text(Properties, 'RegularColumns') as regular_columns,
                  json_extract_path_text(Properties, 'PartitionKeyColumns') as partition_key_columns,
                  json_extract_path_text(Properties, 'ClusteringKeyColumns') as clustering_key_columns,
                  json_extract_path_text(Properties, 'BillingMode') as billing_mode,
                  json_extract_path_text(Properties, 'PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
                  json_extract_path_text(Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'DefaultTimeToLive') as default_time_to_live,
                  json_extract_path_text(Properties, 'EncryptionSpecification') as encryption_specification,
                  json_extract_path_text(Properties, 'AutoScalingSpecifications') as auto_scaling_specifications,
                  json_extract_path_text(Properties, 'ReplicaSpecifications') as replica_specifications
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Table'
                  AND data__Identifier = '<KeyspaceName>|<TableName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'KeyspaceName') as keyspace_name,
                    json_extract_path_text(detail.Properties, 'TableName') as table_name,
                    json_extract_path_text(detail.Properties, 'RegularColumns') as regular_columns,
                    json_extract_path_text(detail.Properties, 'PartitionKeyColumns') as partition_key_columns,
                    json_extract_path_text(detail.Properties, 'ClusteringKeyColumns') as clustering_key_columns,
                    json_extract_path_text(detail.Properties, 'BillingMode') as billing_mode,
                    json_extract_path_text(detail.Properties, 'PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
                    json_extract_path_text(detail.Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'DefaultTimeToLive') as default_time_to_live,
                    json_extract_path_text(detail.Properties, 'EncryptionSpecification') as encryption_specification,
                    json_extract_path_text(detail.Properties, 'AutoScalingSpecifications') as auto_scaling_specifications,
                    json_extract_path_text(detail.Properties, 'ReplicaSpecifications') as replica_specifications
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cassandra::Table'
                    AND detail.data__TypeName = 'AWS::Cassandra::Table'
                    AND listing.region = 'us-east-1'
    tables_list_only:
      name: tables_list_only
      id: aws.cassandra.tables_list_only
      x-cfn-schema-name: Table
      x-cfn-type-name: AWS::Cassandra::Table
      x-identifiers:
        - KeyspaceName
        - TableName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TableName') as table_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Table'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(Properties, 'TableName') as table_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Table'
                AND region = 'us-east-1'
    table_tags:
      name: table_tags
      id: aws.cassandra.table_tags
      x-cfn-schema-name: Table
      x-cfn-type-name: AWS::Cassandra::Table
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(detail.Properties, '$.TableName') as table_name,
              JSON_EXTRACT(detail.Properties, '$.RegularColumns') as regular_columns,
              JSON_EXTRACT(detail.Properties, '$.PartitionKeyColumns') as partition_key_columns,
              JSON_EXTRACT(detail.Properties, '$.ClusteringKeyColumns') as clustering_key_columns,
              JSON_EXTRACT(detail.Properties, '$.BillingMode') as billing_mode,
              JSON_EXTRACT(detail.Properties, '$.PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
              JSON_EXTRACT(detail.Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
              JSON_EXTRACT(detail.Properties, '$.DefaultTimeToLive') as default_time_to_live,
              JSON_EXTRACT(detail.Properties, '$.EncryptionSpecification') as encryption_specification,
              JSON_EXTRACT(detail.Properties, '$.AutoScalingSpecifications') as auto_scaling_specifications,
              JSON_EXTRACT(detail.Properties, '$.ReplicaSpecifications') as replica_specifications
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Cassandra::Table'
              AND detail.data__TypeName = 'AWS::Cassandra::Table'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(detail.Properties, 'TableName') as table_name,
                json_extract_path_text(detail.Properties, 'RegularColumns') as regular_columns,
                json_extract_path_text(detail.Properties, 'PartitionKeyColumns') as partition_key_columns,
                json_extract_path_text(detail.Properties, 'ClusteringKeyColumns') as clustering_key_columns,
                json_extract_path_text(detail.Properties, 'BillingMode') as billing_mode,
                json_extract_path_text(detail.Properties, 'PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
                json_extract_path_text(detail.Properties, 'ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
                json_extract_path_text(detail.Properties, 'DefaultTimeToLive') as default_time_to_live,
                json_extract_path_text(detail.Properties, 'EncryptionSpecification') as encryption_specification,
                json_extract_path_text(detail.Properties, 'AutoScalingSpecifications') as auto_scaling_specifications,
                json_extract_path_text(detail.Properties, 'ReplicaSpecifications') as replica_specifications
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Cassandra::Table'
                AND detail.data__TypeName = 'AWS::Cassandra::Table'
                AND listing.region = 'us-east-1'
    types:
      name: types
      id: aws.cassandra.types
      x-cfn-schema-name: Type
      x-cfn-type-name: AWS::Cassandra::Type
      x-identifiers:
        - KeyspaceName
        - TypeName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Type&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Type"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Cassandra::Type"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/types/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/types/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.DirectReferringTables') as direct_referring_tables,
              JSON_EXTRACT(Properties, '$.DirectParentTypes') as direct_parent_types,
              JSON_EXTRACT(Properties, '$.MaxNestingDepth') as max_nesting_depth,
              JSON_EXTRACT(Properties, '$.LastModifiedTimestamp') as last_modified_timestamp,
              JSON_EXTRACT(Properties, '$.KeyspaceArn') as keyspace_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Type'
              AND data__Identifier = '<KeyspaceName>|<TypeName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.KeyspaceName') as keyspace_name,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.Fields') as fields,
                JSON_EXTRACT(detail.Properties, '$.DirectReferringTables') as direct_referring_tables,
                JSON_EXTRACT(detail.Properties, '$.DirectParentTypes') as direct_parent_types,
                JSON_EXTRACT(detail.Properties, '$.MaxNestingDepth') as max_nesting_depth,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTimestamp') as last_modified_timestamp,
                JSON_EXTRACT(detail.Properties, '$.KeyspaceArn') as keyspace_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Cassandra::Type'
                AND detail.data__TypeName = 'AWS::Cassandra::Type'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'Fields') as fields,
                  json_extract_path_text(Properties, 'DirectReferringTables') as direct_referring_tables,
                  json_extract_path_text(Properties, 'DirectParentTypes') as direct_parent_types,
                  json_extract_path_text(Properties, 'MaxNestingDepth') as max_nesting_depth,
                  json_extract_path_text(Properties, 'LastModifiedTimestamp') as last_modified_timestamp,
                  json_extract_path_text(Properties, 'KeyspaceArn') as keyspace_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Type'
                  AND data__Identifier = '<KeyspaceName>|<TypeName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'KeyspaceName') as keyspace_name,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'Fields') as fields,
                    json_extract_path_text(detail.Properties, 'DirectReferringTables') as direct_referring_tables,
                    json_extract_path_text(detail.Properties, 'DirectParentTypes') as direct_parent_types,
                    json_extract_path_text(detail.Properties, 'MaxNestingDepth') as max_nesting_depth,
                    json_extract_path_text(detail.Properties, 'LastModifiedTimestamp') as last_modified_timestamp,
                    json_extract_path_text(detail.Properties, 'KeyspaceArn') as keyspace_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Cassandra::Type'
                    AND detail.data__TypeName = 'AWS::Cassandra::Type'
                    AND listing.region = 'us-east-1'
    types_list_only:
      name: types_list_only
      id: aws.cassandra.types_list_only
      x-cfn-schema-name: Type
      x-cfn-type-name: AWS::Cassandra::Type
      x-identifiers:
        - KeyspaceName
        - TypeName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Type'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KeyspaceName') as keyspace_name,
                json_extract_path_text(Properties, 'TypeName') as type_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Type'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Keyspace&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateKeyspace
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateKeyspaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Table&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTable
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Type&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateType
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTypeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
