openapi: 3.0.0
info:
  title: Cassandra
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to apply to the resource
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    Keyspace:
      type: object
      properties:
        KeyspaceName:
          description: Name for Cassandra keyspace
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        Tags:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
      required: []
      x-stackql-resource-name: keyspace
      x-stackql-primaryIdentifier:
        - KeyspaceName
    Column:
      type: object
      properties:
        ColumnName:
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        ColumnType:
          type: string
      required:
        - ColumnName
        - ColumnType
      additionalProperties: false
    ClusteringKeyColumn:
      type: object
      properties:
        Column:
          $ref: '#/components/schemas/Column'
        OrderBy:
          type: string
          enum:
            - ASC
            - DESC
          default: ASC
      additionalProperties: false
      required:
        - Column
    ProvisionedThroughput:
      description: Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits
      type: object
      properties:
        ReadCapacityUnits:
          type: integer
          minimum: 1
        WriteCapacityUnits:
          type: integer
          minimum: 1
      additionalProperties: false
      required:
        - ReadCapacityUnits
        - WriteCapacityUnits
    Mode:
      description: Capacity mode for the specified table
      type: string
      enum:
        - PROVISIONED
        - ON_DEMAND
      default: ON_DEMAND
    BillingMode:
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/Mode'
        ProvisionedThroughput:
          $ref: '#/components/schemas/ProvisionedThroughput'
      required:
        - Mode
      additionalProperties: false
    EncryptionSpecification:
      description: Represents the settings used to enable server-side encryption
      type: object
      properties:
        EncryptionType:
          $ref: '#/components/schemas/EncryptionType'
        KmsKeyIdentifier:
          $ref: '#/components/schemas/KmsKeyIdentifier'
      required:
        - EncryptionType
      additionalProperties: false
    EncryptionType:
      description: Server-side encryption type
      type: string
      enum:
        - AWS_OWNED_KMS_KEY
        - CUSTOMER_MANAGED_KMS_KEY
      default: AWS_OWNED_KMS_KEY
    KmsKeyIdentifier:
      description: 'The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. '
      type: string
    Table:
      type: object
      properties:
        KeyspaceName:
          description: Name for Cassandra keyspace
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        TableName:
          description: Name for Cassandra table
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$
        RegularColumns:
          description: Non-key columns of the table
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Column'
        PartitionKeyColumns:
          description: Partition key columns of the table
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Column'
        ClusteringKeyColumns:
          description: Clustering key columns of the table
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/ClusteringKeyColumn'
        BillingMode:
          $ref: '#/components/schemas/BillingMode'
        PointInTimeRecoveryEnabled:
          description: Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
          type: boolean
        ClientSideTimestampsEnabled:
          description: Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
          type: boolean
        Tags:
          description: An array of key-value pairs to apply to this resource
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        DefaultTimeToLive:
          description: Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
          type: integer
          minimum: 0
        EncryptionSpecification:
          $ref: '#/components/schemas/EncryptionSpecification'
      required:
        - KeyspaceName
        - PartitionKeyColumns
      x-stackql-resource-name: table
      x-stackql-primaryIdentifier:
        - KeyspaceName
        - TableName
  x-stackQL-resources:
    keyspaces:
      name: keyspaces
      id: aws.cassandra.keyspaces
      x-cfn-schema-name: Keyspace
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
    keyspace:
      name: keyspace
      id: aws.cassandra.keyspace
      x-cfn-schema-name: Keyspace
      x-type: get
      x-identifiers:
        - KeyspaceName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Keyspace'
    tables:
      name: tables
      id: aws.cassandra.tables
      x-cfn-schema-name: Table
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TableName') as table_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Cassandra::Table'
    table:
      name: table
      id: aws.cassandra.table
      x-cfn-schema-name: Table
      x-type: get
      x-identifiers:
        - KeyspaceName
        - TableName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KeyspaceName') as keyspace_name,
              JSON_EXTRACT(Properties, '$.TableName') as table_name,
              JSON_EXTRACT(Properties, '$.RegularColumns') as regular_columns,
              JSON_EXTRACT(Properties, '$.PartitionKeyColumns') as partition_key_columns,
              JSON_EXTRACT(Properties, '$.ClusteringKeyColumns') as clustering_key_columns,
              JSON_EXTRACT(Properties, '$.BillingMode.Mode') as billing_mode_mode,
              JSON_EXTRACT(Properties, '$.BillingMode.ProvisionedThroughput') as billing_mode_provisioned_throughput,
              JSON_EXTRACT(Properties, '$.PointInTimeRecoveryEnabled') as point_in_time_recovery_enabled,
              JSON_EXTRACT(Properties, '$.ClientSideTimestampsEnabled') as client_side_timestamps_enabled,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.DefaultTimeToLive') as default_time_to_live,
              JSON_EXTRACT(Properties, '$.EncryptionSpecification.EncryptionType') as encryption_specification_encryption_type,
              JSON_EXTRACT(Properties, '$.EncryptionSpecification.KmsKeyIdentifier') as encryption_specification_kms_key_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Cassandra::Table'
