openapi: 3.0.0
info:
  title: DynamoDB
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    StreamSpecification:
      description: Represents the DynamoDB Streams configuration for a table in DynamoDB.
      additionalProperties: false
      type: object
      properties:
        StreamViewType:
          description: |-
            When an item in the table is modified, ``StreamViewType`` determines what information is written to the stream for this table. Valid values for ``StreamViewType`` are:
              +   ``KEYS_ONLY`` - Only the key attributes of the modified item are written to the stream.
              +   ``NEW_IMAGE`` - The entire item, as it appears after it was modified, is written to the stream.
              +   ``OLD_IMAGE`` - The entire item, as it appeared before it was modified, is written to the stream.
              +   ``NEW_AND_OLD_IMAGES`` - Both the new and the old item images of the item are written to the stream.
          type: string
        ResourcePolicy:
          description: |-
            Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table's streams. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource.
             In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
          $ref: '#/components/schemas/ResourcePolicy'
      required:
        - StreamViewType
    ResourcePolicy:
      description: |-
        Creates or updates a resource-based policy document that contains the permissions for DDB resources, such as a table, its indexes, and stream. Resource-based policies let you define access permissions by specifying who has access to each resource, and the actions they are allowed to perform on each resource.
         In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
         While defining resource-based policies in your CFNshort templates, the following considerations apply:
          +  The maximum size supported for a resource-based policy document in JSON format is 20 KB. DDB counts whitespaces when calculating the size of a policy against this limit. 
          +  Resource-based policies don't support [drift detection](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html#). If you update a policy outside of the CFNshort stack template, you'll need to update the CFNshort stack with the changes.
          +  Resource-based policies don't support out-of-band changes. If you add, update, or delete a policy outside of the CFNshort template, the change won't be overwritten if there are no changes to the policy within the template.
         For example, say that your template contains a resource-based policy, which you later update outside of the template. If you don't make any changes to the policy in the template, the updated policy in DDB won’t be synced with the policy in the template.
         Conversely, say that your template doesn’t contain a resource-based policy, but you add a policy outside of the template. This policy won’t be removed from DDB as long as you don’t add it to the template. When you add a policy to the template and update the stack, the existing policy in DDB will be updated to match the one defined in the template.
          
         For a full list of all considerations, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
      additionalProperties: false
      type: object
      properties:
        PolicyDocument:
          description: >-
            A resource-based policy document that contains permissions to add to the specified DDB table, index, or both. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy
            examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
          type: object
      required:
        - PolicyDocument
    ReplicaStreamSpecification:
      type: object
      additionalProperties: false
      properties:
        ResourcePolicy:
          $ref: '#/components/schemas/ResourcePolicy'
      required:
        - ResourcePolicy
    KinesisStreamSpecification:
      description: The Kinesis Data Streams configuration for the specified table.
      additionalProperties: false
      type: object
      properties:
        ApproximateCreationDateTimePrecision:
          description: The precision for the time and date that the stream was created.
          type: string
          enum:
            - MICROSECOND
            - MILLISECOND
        StreamArn:
          x-relationshipRef:
            typeName: AWS::Kinesis::Stream
            propertyPath: /properties/Arn
          description: |-
            The ARN for a specific Kinesis data stream.
             Length Constraints: Minimum length of 37. Maximum length of 1024.
          type: string
      required:
        - StreamArn
    KeySchema:
      description: |-
        Represents *a single element* of a key schema. A key schema specifies the attributes that make up the primary key of a table, or the key attributes of an index.
         A ``KeySchemaElement`` represents exactly one attribute of the primary key. For example, a simple primary key would be represented by one ``KeySchemaElement`` (for the partition key). A composite primary key would require one ``KeySchemaElement`` for the partition key, and another ``KeySchemaElement`` for the sort key.
         A ``KeySchemaElement`` must be a scalar, top-level attribute (not a nested attribute). The data type must be one of String, Number, or Binary. The attribute cannot be nested within a List or a Map.
      additionalProperties: false
      type: object
      properties:
        KeyType:
          description: |-
            The role that this key attribute will assume:
              +   ``HASH`` - partition key
              +   ``RANGE`` - sort key
              
              The partition key of an item is also known as its *hash attribute*. The term "hash attribute" derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.
             The sort key of an item is also known as its *range attribute*. The term "range attribute" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.
          type: string
        AttributeName:
          description: The name of a key attribute.
          type: string
      required:
        - KeyType
        - AttributeName
    PointInTimeRecoverySpecification:
      description: The settings used to enable point in time recovery.
      additionalProperties: false
      type: object
      properties:
        PointInTimeRecoveryEnabled:
          description: Indicates whether point in time recovery is enabled (true) or disabled (false) on the table.
          type: boolean
        RecoveryPeriodInDays:
          maximum: 35
          description: ''
          type: integer
          minimum: 1
      x-dependencies:
        RecoveryPeriodInDays:
          - PointInTimeRecoveryEnabled
    ReplicaSpecification:
      type: object
      additionalProperties: false
      properties:
        Region:
          type: string
        GlobalSecondaryIndexes:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ReplicaGlobalSecondaryIndexSpecification'
        ContributorInsightsSpecification:
          $ref: '#/components/schemas/ContributorInsightsSpecification'
        PointInTimeRecoverySpecification:
          $ref: '#/components/schemas/PointInTimeRecoverySpecification'
        TableClass:
          type: string
        DeletionProtectionEnabled:
          type: boolean
        SSESpecification:
          $ref: '#/components/schemas/ReplicaSSESpecification'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
        ReadProvisionedThroughputSettings:
          $ref: '#/components/schemas/ReadProvisionedThroughputSettings'
        ReadOnDemandThroughputSettings:
          $ref: '#/components/schemas/ReadOnDemandThroughputSettings'
        KinesisStreamSpecification:
          $ref: '#/components/schemas/KinesisStreamSpecification'
        ResourcePolicy:
          $ref: '#/components/schemas/ResourcePolicy'
        ReplicaStreamSpecification:
          $ref: '#/components/schemas/ReplicaStreamSpecification'
      required:
        - Region
    TimeToLiveSpecification:
      description: Represents the settings used to enable or disable Time to Live (TTL) for the specified table.
      additionalProperties: false
      type: object
      properties:
        Enabled:
          description: Indicates whether TTL is to be enabled (true) or disabled (false) on the table.
          type: boolean
        AttributeName:
          description: |-
            The name of the TTL attribute used to store the expiration time for items in the table.
               +  The ``AttributeName`` property is required when enabling the TTL, or when TTL is already enabled.
              +  To update this property, you must first disable TTL and then enable TTL with the new attribute name.
          type: string
      required:
        - Enabled
    LocalSecondaryIndex:
      description: Represents the properties of a local secondary index. A local secondary index can only be created when its parent table is created.
      additionalProperties: false
      type: object
      properties:
        IndexName:
          description: The name of the local secondary index. The name must be unique among all other indexes on this table.
          type: string
        Projection:
          description: Represents attributes that are copied (projected) from the table into the local secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
          $ref: '#/components/schemas/Projection'
        KeySchema:
          uniqueItems: true
          description: |-
            The complete key schema for the local secondary index, consisting of one or more pairs of attribute names and key types:
              +   ``HASH`` - partition key
              +   ``RANGE`` - sort key
              
              The partition key of an item is also known as its *hash attribute*. The term "hash attribute" derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.
             The sort key of an item is also known as its *range attribute*. The term "range attribute" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.
          type: array
          items:
            $ref: '#/components/schemas/KeySchema'
      required:
        - IndexName
        - Projection
        - KeySchema
    GlobalSecondaryIndex:
      description: Represents the properties of a global secondary index.
      additionalProperties: false
      type: object
      properties:
        IndexName:
          description: The name of the global secondary index. The name must be unique among all other indexes on this table.
          type: string
        OnDemandThroughput:
          description: The maximum number of read and write units for the specified global secondary index. If you use this parameter, you must specify ``MaxReadRequestUnits``, ``MaxWriteRequestUnits``, or both.
          $ref: '#/components/schemas/OnDemandThroughput'
        ContributorInsightsSpecification:
          description: The settings used to enable or disable CloudWatch Contributor Insights for the specified global secondary index.
          $ref: '#/components/schemas/ContributorInsightsSpecification'
        Projection:
          description: Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
          $ref: '#/components/schemas/Projection'
        ProvisionedThroughput:
          description: |-
            Represents the provisioned throughput settings for the specified global secondary index.
             For current minimum and maximum provisioned throughput values, see [Service, Account, and Table Quotas](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the *Amazon DynamoDB Developer Guide*.
          $ref: '#/components/schemas/ProvisionedThroughput'
        KeySchema:
          uniqueItems: true
          description: |-
            The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:
              +   ``HASH`` - partition key
              +   ``RANGE`` - sort key
              
              The partition key of an item is also known as its *hash attribute*. The term "hash attribute" derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.
             The sort key of an item is also known as its *range attribute*. The term "range attribute" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.
          type: array
          items:
            $ref: '#/components/schemas/KeySchema'
        WarmThroughput:
          description: Represents the warm throughput value (in read units per second and write units per second) for the specified secondary index. If you use this parameter, you must specify ``ReadUnitsPerSecond``, ``WriteUnitsPerSecond``, or both.
          $ref: '#/components/schemas/WarmThroughput'
      required:
        - IndexName
        - Projection
        - KeySchema
    SSESpecification:
      description: Represents the settings used to enable server-side encryption.
      additionalProperties: false
      type: object
      properties:
        SSEEnabled:
          description: Indicates whether server-side encryption is done using an AWS managed key or an AWS owned key. If enabled (true), server-side encryption type is set to ``KMS`` and an AWS managed key is used (KMS charges apply). If disabled (false) or not specified, server-side encryption is set to AWS owned key.
          type: boolean
        SSEType:
          description: |-
            Server-side encryption type. The only supported value is:
              +   ``KMS`` - Server-side encryption that uses KMSlong. The key is stored in your account and is managed by KMS (KMS charges apply).
          type: string
        KMSMasterKeyId:
          anyOf:
            - relationshipRef:
                typeName: AWS::KMS::Key
                propertyPath: /properties/Arn
            - relationshipRef:
                typeName: AWS::KMS::Key
                propertyPath: /properties/KeyId
            - relationshipRef:
                typeName: AWS::KMS::Alias
                propertyPath: /properties/AliasName
          description: The KMS key that should be used for the KMS encryption. To specify a key, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. Note that you should only provide this parameter if the key is different from the default DynamoDB key ``alias/aws/dynamodb``.
          type: string
      required:
        - SSEEnabled
    ReplicaSSESpecification:
      type: object
      additionalProperties: false
      properties:
        KMSMasterKeyId:
          type: string
          anyOf:
            - relationshipRef:
                typeName: AWS::KMS::Key
                propertyPath: /properties/Arn
            - relationshipRef:
                typeName: AWS::KMS::Key
                propertyPath: /properties/KeyId
            - relationshipRef:
                typeName: AWS::KMS::Alias
                propertyPath: /properties/AliasName
      required:
        - KMSMasterKeyId
    AttributeDefinition:
      description: Represents an attribute for describing the schema for the table and indexes.
      additionalProperties: false
      type: object
      properties:
        AttributeType:
          description: |-
            The data type for the attribute, where:
              +   ``S`` - the attribute is of type String
              +   ``N`` - the attribute is of type Number
              +   ``B`` - the attribute is of type Binary
          type: string
        AttributeName:
          description: A name for the attribute.
          type: string
      required:
        - AttributeName
        - AttributeType
    Tag:
      description: |-
        Describes a tag. A tag is a key-value pair. You can add up to 50 tags to a single DynamoDB table. 
          AWS-assigned tag names and values are automatically assigned the ``aws:`` prefix, which the user cannot assign. AWS-assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix ``user:`` in the Cost Allocation Report. You cannot backdate the application of a tag.
         For an overview on tagging DynamoDB resources, see [Tagging for DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Tagging.html) in the *Amazon DynamoDB Developer Guide*.
      additionalProperties: false
      type: object
      properties:
        Value:
          description: The value of the tag. Tag values are case-sensitive and can be null.
          type: string
        Key:
          description: The key of the tag. Tag keys are case sensitive. Each DynamoDB table can only have up to one tag with the same key. If you try to add an existing tag (same key), the existing tag value will be updated to the new value.
          type: string
      required:
        - Value
        - Key
    Projection:
      description: Represents attributes that are copied (projected) from the table into an index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
      additionalProperties: false
      type: object
      properties:
        NonKeyAttributes:
          uniqueItems: false
          description: |-
            Represents the non-key attribute names which will be projected into the index.
             For local secondary indexes, the total count of ``NonKeyAttributes`` summed across all of the local secondary indexes, must not exceed 100. If you project the same attribute into two different indexes, this counts as two distinct attributes when determining the total.
          type: array
          items:
            type: string
        ProjectionType:
          description: |-
            The set of attributes that are projected into the index:
              +   ``KEYS_ONLY`` - Only the index and primary keys are projected into the index.
              +   ``INCLUDE`` - In addition to the attributes described in ``KEYS_ONLY``, the secondary index will include other non-key attributes that you specify.
              +   ``ALL`` - All of the table attributes are projected into the index.
              
             When using the DynamoDB console, ``ALL`` is selected by default.
          type: string
    ReplicaGlobalSecondaryIndexSpecification:
      type: object
      additionalProperties: false
      properties:
        IndexName:
          type: string
          minLength: 3
          maxLength: 255
        ContributorInsightsSpecification:
          $ref: '#/components/schemas/ContributorInsightsSpecification'
        ReadProvisionedThroughputSettings:
          $ref: '#/components/schemas/ReadProvisionedThroughputSettings'
        ReadOnDemandThroughputSettings:
          $ref: '#/components/schemas/ReadOnDemandThroughputSettings'
      required:
        - IndexName
    ContributorInsightsSpecification:
      description: The settings used to enable or disable CloudWatch Contributor Insights.
      additionalProperties: false
      type: object
      properties:
        Enabled:
          description: Indicates whether CloudWatch Contributor Insights are to be enabled (true) or disabled (false).
          type: boolean
      required:
        - Enabled
    ReadProvisionedThroughputSettings:
      type: object
      additionalProperties: false
      properties:
        ReadCapacityUnits:
          type: integer
          minimum: 1
        ReadCapacityAutoScalingSettings:
          $ref: '#/components/schemas/CapacityAutoScalingSettings'
    WriteProvisionedThroughputSettings:
      type: object
      additionalProperties: false
      properties:
        WriteCapacityAutoScalingSettings:
          $ref: '#/components/schemas/CapacityAutoScalingSettings'
    ReadOnDemandThroughputSettings:
      type: object
      additionalProperties: false
      properties:
        MaxReadRequestUnits:
          type: integer
          minimum: 1
    WriteOnDemandThroughputSettings:
      type: object
      additionalProperties: false
      properties:
        MaxWriteRequestUnits:
          type: integer
          minimum: 1
    CapacityAutoScalingSettings:
      type: object
      additionalProperties: false
      properties:
        MinCapacity:
          type: integer
          minimum: 1
        MaxCapacity:
          type: integer
          minimum: 1
        SeedCapacity:
          type: integer
          minimum: 1
        TargetTrackingScalingPolicyConfiguration:
          $ref: '#/components/schemas/TargetTrackingScalingPolicyConfiguration'
      required:
        - MinCapacity
        - MaxCapacity
        - TargetTrackingScalingPolicyConfiguration
    TargetTrackingScalingPolicyConfiguration:
      type: object
      additionalProperties: false
      properties:
        DisableScaleIn:
          type: boolean
        ScaleInCooldown:
          type: integer
          minimum: 0
        ScaleOutCooldown:
          type: integer
          minimum: 0
        TargetValue:
          type: number
          format: double
      required:
        - TargetValue
    WarmThroughput:
      anyOf:
        - required:
            - ReadUnitsPerSecond
        - required:
            - WriteUnitsPerSecond
      description: Provides visibility into the number of read and write operations your table or secondary index can instantaneously support. The settings can be modified using the ``UpdateTable`` operation to meet the throughput requirements of an upcoming peak event.
      additionalProperties: false
      type: object
      properties:
        ReadUnitsPerSecond:
          description: Represents the number of read operations your base table can instantaneously support.
          type: integer
          minimum: 1
        WriteUnitsPerSecond:
          description: Represents the number of write operations your base table can instantaneously support.
          type: integer
          minimum: 1
    GlobalTable:
      type: object
      properties:
        Arn:
          type: string
        StreamArn:
          type: string
        AttributeDefinitions:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AttributeDefinition'
          minItems: 1
        BillingMode:
          type: string
        GlobalSecondaryIndexes:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/GlobalSecondaryIndex'
        KeySchema:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/KeySchema'
          minItems: 1
          maxItems: 2
        LocalSecondaryIndexes:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/LocalSecondaryIndex'
        PointInTimeRecoverySpecification:
          $ref: '#/components/schemas/PointInTimeRecoverySpecification'
        WriteProvisionedThroughputSettings:
          $ref: '#/components/schemas/WriteProvisionedThroughputSettings'
        WriteOnDemandThroughputSettings:
          $ref: '#/components/schemas/WriteOnDemandThroughputSettings'
        WarmThroughput:
          $ref: '#/components/schemas/WarmThroughput'
        Replicas:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ReplicaSpecification'
          minItems: 1
        SSESpecification:
          $ref: '#/components/schemas/SSESpecification'
        StreamSpecification:
          $ref: '#/components/schemas/StreamSpecification'
        TableName:
          type: string
        TableId:
          type: string
        TimeToLiveSpecification:
          $ref: '#/components/schemas/TimeToLiveSpecification'
      required:
        - KeySchema
        - AttributeDefinitions
        - Replicas
      x-stackql-resource-name: global_table
      description: 'Version: None. Resource Type definition for AWS::DynamoDB::GlobalTable'
      x-type-name: AWS::DynamoDB::GlobalTable
      x-stackql-primary-identifier:
        - TableName
      x-stackql-additional-identifiers:
        - - Arn
        - - StreamArn
      x-create-only-properties:
        - LocalSecondaryIndexes
        - TableName
        - KeySchema
      x-write-only-properties:
        - Replicas/*/ReadProvisionedThroughputSettings/ReadCapacityAutoScalingSettings/SeedCapacity
        - Replicas/*/GlobalSecondaryIndexes/*/ReadProvisionedThroughputSettings/ReadCapacityAutoScalingSettings/SeedCapacity
        - WriteProvisionedThroughputSettings/WriteCapacityAutoScalingSettings/SeedCapacity
        - GlobalSecondaryIndexes/*/WriteProvisionedThroughputSettings/WriteCapacityAutoScalingSettings/SeedCapacity
      x-read-only-properties:
        - Arn
        - StreamArn
        - TableId
      x-required-properties:
        - KeySchema
        - AttributeDefinitions
        - Replicas
      x-required-permissions:
        create:
          - dynamodb:CreateTable
          - dynamodb:CreateTableReplica
          - dynamodb:Describe*
          - dynamodb:UpdateTimeToLive
          - dynamodb:UpdateContributorInsights
          - dynamodb:UpdateContinuousBackups
          - dynamodb:ListTagsOfResource
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:UpdateItem
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
          - dynamodb:TagResource
          - dynamodb:EnableKinesisStreamingDestination
          - dynamodb:DisableKinesisStreamingDestination
          - dynamodb:UpdateTableReplicaAutoScaling
          - dynamodb:TagResource
          - dynamodb:GetResourcePolicy
          - dynamodb:PutResourcePolicy
          - application-autoscaling:DeleteScalingPolicy
          - application-autoscaling:DeleteScheduledAction
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:Describe*
          - application-autoscaling:PutScalingPolicy
          - application-autoscaling:PutScheduledAction
          - application-autoscaling:RegisterScalableTarget
          - kinesis:ListStreams
          - kinesis:DescribeStream
          - kinesis:PutRecords
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:Decrypt
          - kms:RevokeGrant
          - cloudwatch:PutMetricData
          - iam:CreateServiceLinkedRole
        read:
          - dynamodb:Describe*
          - dynamodb:GetResourcePolicy
          - application-autoscaling:Describe*
          - cloudwatch:PutMetricData
          - dynamodb:ListTagsOfResource
          - kms:DescribeKey
        update:
          - dynamodb:Describe*
          - dynamodb:CreateTableReplica
          - dynamodb:UpdateTable
          - dynamodb:UpdateTimeToLive
          - dynamodb:UpdateContinuousBackups
          - dynamodb:UpdateContributorInsights
          - dynamodb:ListTagsOfResource
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:UpdateItem
          - dynamodb:PutItem
          - dynamodb:GetItem
          - dynamodb:DeleteItem
          - dynamodb:BatchWriteItem
          - dynamodb:DeleteTable
          - dynamodb:DeleteTableReplica
          - dynamodb:UpdateItem
          - dynamodb:TagResource
          - dynamodb:UntagResource
          - dynamodb:EnableKinesisStreamingDestination
          - dynamodb:DisableKinesisStreamingDestination
          - dynamodb:UpdateTableReplicaAutoScaling
          - dynamodb:UpdateKinesisStreamingDestination
          - dynamodb:GetResourcePolicy
          - dynamodb:PutResourcePolicy
          - dynamodb:DeleteResourcePolicy
          - application-autoscaling:DeleteScalingPolicy
          - application-autoscaling:DeleteScheduledAction
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:Describe*
          - application-autoscaling:PutScalingPolicy
          - application-autoscaling:PutScheduledAction
          - application-autoscaling:RegisterScalableTarget
          - kinesis:ListStreams
          - kinesis:DescribeStream
          - kinesis:PutRecords
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:RevokeGrant
          - cloudwatch:PutMetricData
        delete:
          - dynamodb:Describe*
          - dynamodb:DeleteTable
          - application-autoscaling:DeleteScalingPolicy
          - application-autoscaling:DeleteScheduledAction
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:Describe*
          - application-autoscaling:PutScalingPolicy
          - application-autoscaling:PutScheduledAction
          - application-autoscaling:RegisterScalableTarget
        list:
          - dynamodb:ListTables
          - cloudwatch:PutMetricData
    OnDemandThroughput:
      description: Sets the maximum number of read and write units for the specified on-demand table. If you use this property, you must specify ``MaxReadRequestUnits``, ``MaxWriteRequestUnits``, or both.
      additionalProperties: false
      type: object
      properties:
        MaxReadRequestUnits:
          description: |-
            Maximum number of read request units for the specified table.
             To specify a maximum ``OnDemandThroughput`` on your table, set the value of ``MaxReadRequestUnits`` as greater than or equal to 1. To remove the maximum ``OnDemandThroughput`` that is currently set on your table, set the value of ``MaxReadRequestUnits`` to -1.
          type: integer
          minimum: 1
        MaxWriteRequestUnits:
          description: |-
            Maximum number of write request units for the specified table.
             To specify a maximum ``OnDemandThroughput`` on your table, set the value of ``MaxWriteRequestUnits`` as greater than or equal to 1. To remove the maximum ``OnDemandThroughput`` that is currently set on your table, set the value of ``MaxWriteRequestUnits`` to -1.
          type: integer
          minimum: 1
    InputFormatOptions:
      description: The format options for the data that was imported into the target table. There is one value, CsvOption.
      additionalProperties: false
      type: object
      properties:
        Csv:
          description: The options for imported source files in CSV format. The values are Delimiter and HeaderList.
          $ref: '#/components/schemas/Csv'
    Csv:
      description: The options for imported source files in CSV format. The values are Delimiter and HeaderList.
      additionalProperties: false
      type: object
      properties:
        Delimiter:
          description: The delimiter used for separating items in the CSV file being imported.
          type: string
        HeaderList:
          uniqueItems: true
          description: List of the headers used to specify a common header for all source CSV files being imported. If this field is specified then the first line of each CSV file is treated as data instead of the header. If this field is not specified the the first line of each CSV file is treated as the header.
          type: array
          items:
            type: string
    ImportSourceSpecification:
      description: Specifies the properties of data being imported from the S3 bucket source to the table.
      additionalProperties: false
      type: object
      properties:
        S3BucketSource:
          description: The S3 bucket that provides the source for the import.
          $ref: '#/components/schemas/S3BucketSource'
        InputFormat:
          description: The format of the source data. Valid values for ``ImportFormat`` are ``CSV``, ``DYNAMODB_JSON`` or ``ION``.
          type: string
        InputFormatOptions:
          description: Additional properties that specify how the input is formatted,
          $ref: '#/components/schemas/InputFormatOptions'
        InputCompressionType:
          description: Type of compression to be used on the input coming from the imported table.
          type: string
      required:
        - S3BucketSource
        - InputFormat
    ProvisionedThroughput:
      description: Throughput for the specified table, which consists of values for ``ReadCapacityUnits`` and ``WriteCapacityUnits``. For more information about the contents of a provisioned throughput structure, see [Table ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html).
      additionalProperties: false
      type: object
      properties:
        WriteCapacityUnits:
          description: |-
            The maximum number of writes consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*.
             If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
          type: integer
        ReadCapacityUnits:
          description: |-
            The maximum number of strongly consistent reads consumed per second before DynamoDB returns a ``ThrottlingException``. For more information, see [Specifying Read and Write Requirements](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html) in the *Amazon DynamoDB Developer Guide*.
             If read/write capacity mode is ``PAY_PER_REQUEST`` the value is set to 0.
          type: integer
      required:
        - WriteCapacityUnits
        - ReadCapacityUnits
    S3BucketSource:
      description: The S3 bucket that is being imported from.
      additionalProperties: false
      type: object
      properties:
        S3Bucket:
          x-relationshipRef:
            typeName: AWS::S3::Bucket
            propertyPath: /properties/BucketName
          description: The S3 bucket that is being imported from.
          type: string
        S3KeyPrefix:
          description: The key prefix shared by all S3 Objects that are being imported.
          type: string
        S3BucketOwner:
          description: The account number of the S3 bucket that is being imported from. If the bucket is owned by the requester this is optional.
          type: string
      required:
        - S3Bucket
    DeprecatedKeySchema:
      description: ''
      additionalProperties: false
      type: object
      properties:
        HashKeyElement:
          $ref: '#/components/schemas/DeprecatedHashKeyElement'
      required:
        - HashKeyElement
    DeprecatedHashKeyElement:
      description: ''
      additionalProperties: false
      type: object
      properties:
        AttributeType:
          type: string
        AttributeName:
          type: string
      required:
        - AttributeType
        - AttributeName
    Table:
      type: object
      properties:
        OnDemandThroughput:
          description: Sets the maximum number of read and write units for the specified on-demand table. If you use this property, you must specify ``MaxReadRequestUnits``, ``MaxWriteRequestUnits``, or both.
          $ref: '#/components/schemas/OnDemandThroughput'
        SSESpecification:
          description: Specifies the settings to enable server-side encryption.
          $ref: '#/components/schemas/SSESpecification'
        KinesisStreamSpecification:
          description: The Kinesis Data Streams configuration for the specified table.
          $ref: '#/components/schemas/KinesisStreamSpecification'
        StreamSpecification:
          description: The settings for the DDB table stream, which capture changes to items stored in the table.
          $ref: '#/components/schemas/StreamSpecification'
        ContributorInsightsSpecification:
          description: The settings used to enable or disable CloudWatch Contributor Insights for the specified table.
          $ref: '#/components/schemas/ContributorInsightsSpecification'
        ImportSourceSpecification:
          description: |-
            Specifies the properties of data being imported from the S3 bucket source to the" table.
              If you specify the ``ImportSourceSpecification`` property, and also specify either the ``StreamSpecification``, the ``TableClass`` property, the ``DeletionProtectionEnabled`` property, or the ``WarmThroughput`` property, the IAM entity creating/updating stack must have ``UpdateTable`` permission.
          $ref: '#/components/schemas/ImportSourceSpecification'
        PointInTimeRecoverySpecification:
          description: The settings used to enable point in time recovery.
          $ref: '#/components/schemas/PointInTimeRecoverySpecification'
        ProvisionedThroughput:
          description: |-
            Throughput for the specified table, which consists of values for ``ReadCapacityUnits`` and ``WriteCapacityUnits``. For more information about the contents of a provisioned throughput structure, see [Amazon DynamoDB Table ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html). 
             If you set ``BillingMode`` as ``PROVISIONED``, you must specify this property. If you set ``BillingMode`` as ``PAY_PER_REQUEST``, you cannot specify this property.
          $ref: '#/components/schemas/ProvisionedThroughput'
        WarmThroughput:
          description: Represents the warm throughput (in read units per second and write units per second) for creating a table.
          $ref: '#/components/schemas/WarmThroughput'
        TableName:
          description: |-
            A name for the table. If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the table name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
              If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
          type: string
        AttributeDefinitions:
          uniqueItems: true
          description: |-
            A list of attributes that describe the key schema for the table and indexes.
             This property is required to create a DDB table.
             Update requires: [Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt). Replacement if you edit an existing AttributeDefinition.
          type: array
          items:
            $ref: '#/components/schemas/AttributeDefinition'
        BillingMode:
          description: |-
            Specify how you are charged for read and write throughput and how you manage capacity.
             Valid values include:
              +   ``PROVISIONED`` - We recommend using ``PROVISIONED`` for predictable workloads. ``PROVISIONED`` sets the billing mode to [Provisioned Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
              +   ``PAY_PER_REQUEST`` - We recommend using ``PAY_PER_REQUEST`` for unpredictable workloads. ``PAY_PER_REQUEST`` sets the billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
              
             If not specified, the default is ``PROVISIONED``.
          type: string
        GlobalSecondaryIndexes:
          uniqueItems: false
          description: |-
            Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes.
              If you update a table to include a new global secondary index, CFNlong initiates the index creation and then proceeds with the stack update. CFNlong doesn't wait for the index to complete creation because the backfilling phase can take a long time, depending on the size of the table. You can't use the index or update the table until the index's status is ``ACTIVE``. You can track its status by using the DynamoDB [DescribeTable](https://docs.aws.amazon.com/cli/latest/reference/dynamodb/describe-table.html) command.
             If you add or delete an index during an update, we recommend that you don't update any other resources. If your stack fails to update and is rolled back while adding a new index, you must manually delete the index. 
             Updates are not supported. The following are exceptions:
              +  If you update either the contributor insights specification or the provisioned throughput values of global secondary indexes, you can update the table without interruption.
              +  You can delete or add one global secondary index without interruption. If you do both in the same update (for example, by changing the index's logical ID), the update fails.
          type: array
          items:
            $ref: '#/components/schemas/GlobalSecondaryIndex'
        ResourcePolicy:
          description: >-
            A resource-based policy document that contains permissions to add to the specified table. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy
            examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
             When you attach a resource-based policy while creating a table, the policy creation is *strongly consistent*. For information about the considerations that you should keep in mind while attaching a resource-based policy, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
          $ref: '#/components/schemas/ResourcePolicy'
        KeySchema:
          oneOf:
            - uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/KeySchema'
            - type: object
          description: Specifies the attributes that make up the primary key for the table. The attributes in the ``KeySchema`` property must also be defined in the ``AttributeDefinitions`` property.
        LocalSecondaryIndexes:
          uniqueItems: false
          description: Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.
          type: array
          items:
            $ref: '#/components/schemas/LocalSecondaryIndex'
        Arn:
          description: ''
          type: string
        StreamArn:
          description: ''
          type: string
        DeletionProtectionEnabled:
          description: Determines if a table is protected from deletion. When enabled, the table cannot be deleted by any user or process. This setting is disabled by default. For more information, see [Using deletion protection](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.Basics.html#WorkingWithTables.Basics.DeletionProtection) in the *Developer Guide*.
          type: boolean
        TableClass:
          description: The table class of the new table. Valid values are ``STANDARD`` and ``STANDARD_INFREQUENT_ACCESS``.
          type: string
        Tags:
          uniqueItems: false
          description: |-
            An array of key-value pairs to apply to this resource.
             For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        TimeToLiveSpecification:
          description: |-
            Specifies the Time to Live (TTL) settings for the table.
              For detailed information about the limits in DynamoDB, see [Limits in Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide.
          $ref: '#/components/schemas/TimeToLiveSpecification'
      required:
        - KeySchema
      x-stackql-resource-name: table
      description: |-
        The ``AWS::DynamoDB::Table`` resource creates a DDB table. For more information, see [CreateTable](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_CreateTable.html) in the *API Reference*.
         You should be aware of the following behaviors when working with DDB tables:
          +   CFNlong typically creates DDB tables in parallel. However, if your template includes multiple DDB tables with indexes, you must declare dependencies so that the tables are created sequentially. DDBlong limits the number of tables with secondary indexes that are in the creating state. If you create multiple tables with indexes at the same time, DDB returns an error and the stack operation fails. For an example, see [DynamoDB Table with a DependsOn Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html#aws-resource-dynamodb-table--examples--DynamoDB_Table_with_a_DependsOn_Attribute).
          
           Our guidance is to use the latest schema documented for your CFNlong templates. This schema supports the provisioning of all table settings below. When using this schema in your CFNlong templates, please ensure that your Identity and Access Management (IAM) policies are updated with appropriate permissions to allow for the authorization of these setting changes.
      x-type-name: AWS::DynamoDB::Table
      x-stackql-primary-identifier:
        - TableName
      x-create-only-properties:
        - TableName
        - ImportSourceSpecification
      x-conditional-create-only-properties:
        - KeySchema
      x-write-only-properties:
        - ImportSourceSpecification
      x-read-only-properties:
        - Arn
        - StreamArn
      x-required-properties:
        - KeySchema
      x-tagging:
        permissions:
          - dynamodb:TagResource
          - dynamodb:UntagResource
          - dynamodb:ListTagsOfResource
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
      x-required-permissions:
        read:
          - dynamodb:DescribeTable
          - dynamodb:DescribeContinuousBackups
          - dynamodb:DescribeContributorInsights
          - dynamodb:DescribeKinesisStreamingDestination
          - dynamodb:ListTagsOfResource
          - dynamodb:GetResourcePolicy
        create:
          - dynamodb:CreateTable
          - dynamodb:DescribeImport
          - dynamodb:DescribeTable
          - dynamodb:DescribeTimeToLive
          - dynamodb:UpdateTimeToLive
          - dynamodb:UpdateContributorInsights
          - dynamodb:UpdateContinuousBackups
          - dynamodb:DescribeContinuousBackups
          - dynamodb:DescribeContributorInsights
          - dynamodb:EnableKinesisStreamingDestination
          - dynamodb:DisableKinesisStreamingDestination
          - dynamodb:DescribeKinesisStreamingDestination
          - dynamodb:ImportTable
          - dynamodb:ListTagsOfResource
          - dynamodb:TagResource
          - dynamodb:UpdateTable
          - dynamodb:GetResourcePolicy
          - dynamodb:PutResourcePolicy
          - kinesis:DescribeStream
          - kinesis:PutRecords
          - iam:CreateServiceLinkedRole
          - kms:CreateGrant
          - kms:Decrypt
          - kms:DescribeKey
          - kms:ListAliases
          - kms:Encrypt
          - kms:RevokeGrant
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:PutLogEvents
          - logs:PutRetentionPolicy
          - s3:GetObject
          - s3:GetObjectMetadata
          - s3:ListBucket
        update:
          - dynamodb:UpdateTable
          - dynamodb:DescribeTable
          - dynamodb:DescribeTimeToLive
          - dynamodb:UpdateTimeToLive
          - dynamodb:UpdateContinuousBackups
          - dynamodb:UpdateContributorInsights
          - dynamodb:UpdateKinesisStreamingDestination
          - dynamodb:DescribeContinuousBackups
          - dynamodb:DescribeKinesisStreamingDestination
          - dynamodb:ListTagsOfResource
          - dynamodb:TagResource
          - dynamodb:UntagResource
          - dynamodb:DescribeContributorInsights
          - dynamodb:EnableKinesisStreamingDestination
          - dynamodb:DisableKinesisStreamingDestination
          - dynamodb:GetResourcePolicy
          - dynamodb:PutResourcePolicy
          - dynamodb:DeleteResourcePolicy
          - kinesis:DescribeStream
          - kinesis:PutRecords
          - iam:CreateServiceLinkedRole
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:RevokeGrant
        list:
          - dynamodb:ListTables
        delete:
          - dynamodb:DeleteTable
          - dynamodb:DescribeTable
    CreateGlobalTableRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            StreamArn:
              type: string
            AttributeDefinitions:
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/AttributeDefinition'
              minItems: 1
            BillingMode:
              type: string
            GlobalSecondaryIndexes:
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/GlobalSecondaryIndex'
            KeySchema:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/KeySchema'
              minItems: 1
              maxItems: 2
            LocalSecondaryIndexes:
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/LocalSecondaryIndex'
            PointInTimeRecoverySpecification:
              $ref: '#/components/schemas/PointInTimeRecoverySpecification'
            WriteProvisionedThroughputSettings:
              $ref: '#/components/schemas/WriteProvisionedThroughputSettings'
            WriteOnDemandThroughputSettings:
              $ref: '#/components/schemas/WriteOnDemandThroughputSettings'
            WarmThroughput:
              $ref: '#/components/schemas/WarmThroughput'
            Replicas:
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ReplicaSpecification'
              minItems: 1
            SSESpecification:
              $ref: '#/components/schemas/SSESpecification'
            StreamSpecification:
              $ref: '#/components/schemas/StreamSpecification'
            TableName:
              type: string
            TableId:
              type: string
            TimeToLiveSpecification:
              $ref: '#/components/schemas/TimeToLiveSpecification'
          x-stackQL-stringOnly: true
      x-title: CreateGlobalTableRequest
      type: object
      required: []
    CreateTableRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            OnDemandThroughput:
              description: Sets the maximum number of read and write units for the specified on-demand table. If you use this property, you must specify ``MaxReadRequestUnits``, ``MaxWriteRequestUnits``, or both.
              $ref: '#/components/schemas/OnDemandThroughput'
            SSESpecification:
              description: Specifies the settings to enable server-side encryption.
              $ref: '#/components/schemas/SSESpecification'
            KinesisStreamSpecification:
              description: The Kinesis Data Streams configuration for the specified table.
              $ref: '#/components/schemas/KinesisStreamSpecification'
            StreamSpecification:
              description: The settings for the DDB table stream, which capture changes to items stored in the table.
              $ref: '#/components/schemas/StreamSpecification'
            ContributorInsightsSpecification:
              description: The settings used to enable or disable CloudWatch Contributor Insights for the specified table.
              $ref: '#/components/schemas/ContributorInsightsSpecification'
            ImportSourceSpecification:
              description: |-
                Specifies the properties of data being imported from the S3 bucket source to the" table.
                  If you specify the ``ImportSourceSpecification`` property, and also specify either the ``StreamSpecification``, the ``TableClass`` property, the ``DeletionProtectionEnabled`` property, or the ``WarmThroughput`` property, the IAM entity creating/updating stack must have ``UpdateTable`` permission.
              $ref: '#/components/schemas/ImportSourceSpecification'
            PointInTimeRecoverySpecification:
              description: The settings used to enable point in time recovery.
              $ref: '#/components/schemas/PointInTimeRecoverySpecification'
            ProvisionedThroughput:
              description: |-
                Throughput for the specified table, which consists of values for ``ReadCapacityUnits`` and ``WriteCapacityUnits``. For more information about the contents of a provisioned throughput structure, see [Amazon DynamoDB Table ProvisionedThroughput](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ProvisionedThroughput.html). 
                 If you set ``BillingMode`` as ``PROVISIONED``, you must specify this property. If you set ``BillingMode`` as ``PAY_PER_REQUEST``, you cannot specify this property.
              $ref: '#/components/schemas/ProvisionedThroughput'
            WarmThroughput:
              description: Represents the warm throughput (in read units per second and write units per second) for creating a table.
              $ref: '#/components/schemas/WarmThroughput'
            TableName:
              description: |-
                A name for the table. If you don't specify a name, CFNlong generates a unique physical ID and uses that ID for the table name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
                  If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
              type: string
            AttributeDefinitions:
              uniqueItems: true
              description: |-
                A list of attributes that describe the key schema for the table and indexes.
                 This property is required to create a DDB table.
                 Update requires: [Some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt). Replacement if you edit an existing AttributeDefinition.
              type: array
              items:
                $ref: '#/components/schemas/AttributeDefinition'
            BillingMode:
              description: |-
                Specify how you are charged for read and write throughput and how you manage capacity.
                 Valid values include:
                  +   ``PROVISIONED`` - We recommend using ``PROVISIONED`` for predictable workloads. ``PROVISIONED`` sets the billing mode to [Provisioned Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.ProvisionedThroughput.Manual).
                  +   ``PAY_PER_REQUEST`` - We recommend using ``PAY_PER_REQUEST`` for unpredictable workloads. ``PAY_PER_REQUEST`` sets the billing mode to [On-Demand Mode](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadWriteCapacityMode.html#HowItWorks.OnDemand).
                  
                 If not specified, the default is ``PROVISIONED``.
              type: string
            GlobalSecondaryIndexes:
              uniqueItems: false
              description: |-
                Global secondary indexes to be created on the table. You can create up to 20 global secondary indexes.
                  If you update a table to include a new global secondary index, CFNlong initiates the index creation and then proceeds with the stack update. CFNlong doesn't wait for the index to complete creation because the backfilling phase can take a long time, depending on the size of the table. You can't use the index or update the table until the index's status is ``ACTIVE``. You can track its status by using the DynamoDB [DescribeTable](https://docs.aws.amazon.com/cli/latest/reference/dynamodb/describe-table.html) command.
                 If you add or delete an index during an update, we recommend that you don't update any other resources. If your stack fails to update and is rolled back while adding a new index, you must manually delete the index. 
                 Updates are not supported. The following are exceptions:
                  +  If you update either the contributor insights specification or the provisioned throughput values of global secondary indexes, you can update the table without interruption.
                  +  You can delete or add one global secondary index without interruption. If you do both in the same update (for example, by changing the index's logical ID), the update fails.
              type: array
              items:
                $ref: '#/components/schemas/GlobalSecondaryIndex'
            ResourcePolicy:
              description: >-
                A resource-based policy document that contains permissions to add to the specified table. In a CFNshort template, you can provide the policy in JSON or YAML format because CFNshort converts YAML to JSON before submitting it to DDB. For more information about resource-based policies, see [Using resource-based policies for](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/access-control-resource-based.html) and [Resource-based policy
                examples](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-examples.html).
                 When you attach a resource-based policy while creating a table, the policy creation is *strongly consistent*. For information about the considerations that you should keep in mind while attaching a resource-based policy, see [Resource-based policy considerations](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/rbac-considerations.html).
              $ref: '#/components/schemas/ResourcePolicy'
            KeySchema:
              oneOf:
                - uniqueItems: true
                  type: array
                  items:
                    $ref: '#/components/schemas/KeySchema'
                - type: object
              description: Specifies the attributes that make up the primary key for the table. The attributes in the ``KeySchema`` property must also be defined in the ``AttributeDefinitions`` property.
            LocalSecondaryIndexes:
              uniqueItems: false
              description: Local secondary indexes to be created on the table. You can create up to 5 local secondary indexes. Each index is scoped to a given hash key value. The size of each hash key can be up to 10 gigabytes.
              type: array
              items:
                $ref: '#/components/schemas/LocalSecondaryIndex'
            Arn:
              description: ''
              type: string
            StreamArn:
              description: ''
              type: string
            DeletionProtectionEnabled:
              description: Determines if a table is protected from deletion. When enabled, the table cannot be deleted by any user or process. This setting is disabled by default. For more information, see [Using deletion protection](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithTables.Basics.html#WorkingWithTables.Basics.DeletionProtection) in the *Developer Guide*.
              type: boolean
            TableClass:
              description: The table class of the new table. Valid values are ``STANDARD`` and ``STANDARD_INFREQUENT_ACCESS``.
              type: string
            Tags:
              uniqueItems: false
              description: |-
                An array of key-value pairs to apply to this resource.
                 For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            TimeToLiveSpecification:
              description: |-
                Specifies the Time to Live (TTL) settings for the table.
                  For detailed information about the limits in DynamoDB, see [Limits in Amazon DynamoDB](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the Amazon DynamoDB Developer Guide.
              $ref: '#/components/schemas/TimeToLiveSpecification'
          x-stackQL-stringOnly: true
      x-title: CreateTableRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    global_tables:
      name: global_tables
      id: aws.dynamodb.global_tables
      x-cfn-schema-name: GlobalTable
      x-cfn-type-name: AWS::DynamoDB::GlobalTable
      x-identifiers:
        - TableName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__GlobalTable&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DynamoDB::GlobalTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DynamoDB::GlobalTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DynamoDB::GlobalTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/global_tables/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/global_tables/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/global_tables/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.StreamArn') as stream_arn,
              JSON_EXTRACT(Properties, '$.AttributeDefinitions') as attribute_definitions,
              JSON_EXTRACT(Properties, '$.BillingMode') as billing_mode,
              JSON_EXTRACT(Properties, '$.GlobalSecondaryIndexes') as global_secondary_indexes,
              JSON_EXTRACT(Properties, '$.KeySchema') as key_schema,
              JSON_EXTRACT(Properties, '$.LocalSecondaryIndexes') as local_secondary_indexes,
              JSON_EXTRACT(Properties, '$.PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
              JSON_EXTRACT(Properties, '$.WriteProvisionedThroughputSettings') as write_provisioned_throughput_settings,
              JSON_EXTRACT(Properties, '$.WriteOnDemandThroughputSettings') as write_on_demand_throughput_settings,
              JSON_EXTRACT(Properties, '$.WarmThroughput') as warm_throughput,
              JSON_EXTRACT(Properties, '$.Replicas') as replicas,
              JSON_EXTRACT(Properties, '$.SSESpecification') as sse_specification,
              JSON_EXTRACT(Properties, '$.StreamSpecification') as stream_specification,
              JSON_EXTRACT(Properties, '$.TableName') as table_name,
              JSON_EXTRACT(Properties, '$.TableId') as table_id,
              JSON_EXTRACT(Properties, '$.TimeToLiveSpecification') as time_to_live_specification
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DynamoDB::GlobalTable'
              AND data__Identifier = '<TableName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.StreamArn') as stream_arn,
                JSON_EXTRACT(detail.Properties, '$.AttributeDefinitions') as attribute_definitions,
                JSON_EXTRACT(detail.Properties, '$.BillingMode') as billing_mode,
                JSON_EXTRACT(detail.Properties, '$.GlobalSecondaryIndexes') as global_secondary_indexes,
                JSON_EXTRACT(detail.Properties, '$.KeySchema') as key_schema,
                JSON_EXTRACT(detail.Properties, '$.LocalSecondaryIndexes') as local_secondary_indexes,
                JSON_EXTRACT(detail.Properties, '$.PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                JSON_EXTRACT(detail.Properties, '$.WriteProvisionedThroughputSettings') as write_provisioned_throughput_settings,
                JSON_EXTRACT(detail.Properties, '$.WriteOnDemandThroughputSettings') as write_on_demand_throughput_settings,
                JSON_EXTRACT(detail.Properties, '$.WarmThroughput') as warm_throughput,
                JSON_EXTRACT(detail.Properties, '$.Replicas') as replicas,
                JSON_EXTRACT(detail.Properties, '$.SSESpecification') as sse_specification,
                JSON_EXTRACT(detail.Properties, '$.StreamSpecification') as stream_specification,
                JSON_EXTRACT(detail.Properties, '$.TableName') as table_name,
                JSON_EXTRACT(detail.Properties, '$.TableId') as table_id,
                JSON_EXTRACT(detail.Properties, '$.TimeToLiveSpecification') as time_to_live_specification
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DynamoDB::GlobalTable'
                AND detail.data__TypeName = 'AWS::DynamoDB::GlobalTable'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'StreamArn') as stream_arn,
                  json_extract_path_text(Properties, 'AttributeDefinitions') as attribute_definitions,
                  json_extract_path_text(Properties, 'BillingMode') as billing_mode,
                  json_extract_path_text(Properties, 'GlobalSecondaryIndexes') as global_secondary_indexes,
                  json_extract_path_text(Properties, 'KeySchema') as key_schema,
                  json_extract_path_text(Properties, 'LocalSecondaryIndexes') as local_secondary_indexes,
                  json_extract_path_text(Properties, 'PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                  json_extract_path_text(Properties, 'WriteProvisionedThroughputSettings') as write_provisioned_throughput_settings,
                  json_extract_path_text(Properties, 'WriteOnDemandThroughputSettings') as write_on_demand_throughput_settings,
                  json_extract_path_text(Properties, 'WarmThroughput') as warm_throughput,
                  json_extract_path_text(Properties, 'Replicas') as replicas,
                  json_extract_path_text(Properties, 'SSESpecification') as sse_specification,
                  json_extract_path_text(Properties, 'StreamSpecification') as stream_specification,
                  json_extract_path_text(Properties, 'TableName') as table_name,
                  json_extract_path_text(Properties, 'TableId') as table_id,
                  json_extract_path_text(Properties, 'TimeToLiveSpecification') as time_to_live_specification
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DynamoDB::GlobalTable'
                  AND data__Identifier = '<TableName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'StreamArn') as stream_arn,
                    json_extract_path_text(detail.Properties, 'AttributeDefinitions') as attribute_definitions,
                    json_extract_path_text(detail.Properties, 'BillingMode') as billing_mode,
                    json_extract_path_text(detail.Properties, 'GlobalSecondaryIndexes') as global_secondary_indexes,
                    json_extract_path_text(detail.Properties, 'KeySchema') as key_schema,
                    json_extract_path_text(detail.Properties, 'LocalSecondaryIndexes') as local_secondary_indexes,
                    json_extract_path_text(detail.Properties, 'PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                    json_extract_path_text(detail.Properties, 'WriteProvisionedThroughputSettings') as write_provisioned_throughput_settings,
                    json_extract_path_text(detail.Properties, 'WriteOnDemandThroughputSettings') as write_on_demand_throughput_settings,
                    json_extract_path_text(detail.Properties, 'WarmThroughput') as warm_throughput,
                    json_extract_path_text(detail.Properties, 'Replicas') as replicas,
                    json_extract_path_text(detail.Properties, 'SSESpecification') as sse_specification,
                    json_extract_path_text(detail.Properties, 'StreamSpecification') as stream_specification,
                    json_extract_path_text(detail.Properties, 'TableName') as table_name,
                    json_extract_path_text(detail.Properties, 'TableId') as table_id,
                    json_extract_path_text(detail.Properties, 'TimeToLiveSpecification') as time_to_live_specification
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DynamoDB::GlobalTable'
                    AND detail.data__TypeName = 'AWS::DynamoDB::GlobalTable'
                    AND listing.region = 'us-east-1'
    global_tables_list_only:
      name: global_tables_list_only
      id: aws.dynamodb.global_tables_list_only
      x-cfn-schema-name: GlobalTable
      x-cfn-type-name: AWS::DynamoDB::GlobalTable
      x-identifiers:
        - TableName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TableName') as table_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DynamoDB::GlobalTable'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TableName') as table_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DynamoDB::GlobalTable'
                AND region = 'us-east-1'
    tables:
      name: tables
      id: aws.dynamodb.tables
      x-cfn-schema-name: Table
      x-cfn-type-name: AWS::DynamoDB::Table
      x-identifiers:
        - TableName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Table&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DynamoDB::Table"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DynamoDB::Table"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DynamoDB::Table"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/tables/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/tables/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/tables/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.OnDemandThroughput') as on_demand_throughput,
              JSON_EXTRACT(Properties, '$.SSESpecification') as sse_specification,
              JSON_EXTRACT(Properties, '$.KinesisStreamSpecification') as kinesis_stream_specification,
              JSON_EXTRACT(Properties, '$.StreamSpecification') as stream_specification,
              JSON_EXTRACT(Properties, '$.ContributorInsightsSpecification') as contributor_insights_specification,
              JSON_EXTRACT(Properties, '$.ImportSourceSpecification') as import_source_specification,
              JSON_EXTRACT(Properties, '$.PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
              JSON_EXTRACT(Properties, '$.ProvisionedThroughput') as provisioned_throughput,
              JSON_EXTRACT(Properties, '$.WarmThroughput') as warm_throughput,
              JSON_EXTRACT(Properties, '$.TableName') as table_name,
              JSON_EXTRACT(Properties, '$.AttributeDefinitions') as attribute_definitions,
              JSON_EXTRACT(Properties, '$.BillingMode') as billing_mode,
              JSON_EXTRACT(Properties, '$.GlobalSecondaryIndexes') as global_secondary_indexes,
              JSON_EXTRACT(Properties, '$.ResourcePolicy') as resource_policy,
              JSON_EXTRACT(Properties, '$.KeySchema') as key_schema,
              JSON_EXTRACT(Properties, '$.LocalSecondaryIndexes') as local_secondary_indexes,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.StreamArn') as stream_arn,
              JSON_EXTRACT(Properties, '$.DeletionProtectionEnabled') as deletion_protection_enabled,
              JSON_EXTRACT(Properties, '$.TableClass') as table_class,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TimeToLiveSpecification') as time_to_live_specification
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DynamoDB::Table'
              AND data__Identifier = '<TableName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.OnDemandThroughput') as on_demand_throughput,
                JSON_EXTRACT(detail.Properties, '$.SSESpecification') as sse_specification,
                JSON_EXTRACT(detail.Properties, '$.KinesisStreamSpecification') as kinesis_stream_specification,
                JSON_EXTRACT(detail.Properties, '$.StreamSpecification') as stream_specification,
                JSON_EXTRACT(detail.Properties, '$.ContributorInsightsSpecification') as contributor_insights_specification,
                JSON_EXTRACT(detail.Properties, '$.ImportSourceSpecification') as import_source_specification,
                JSON_EXTRACT(detail.Properties, '$.PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                JSON_EXTRACT(detail.Properties, '$.ProvisionedThroughput') as provisioned_throughput,
                JSON_EXTRACT(detail.Properties, '$.WarmThroughput') as warm_throughput,
                JSON_EXTRACT(detail.Properties, '$.TableName') as table_name,
                JSON_EXTRACT(detail.Properties, '$.AttributeDefinitions') as attribute_definitions,
                JSON_EXTRACT(detail.Properties, '$.BillingMode') as billing_mode,
                JSON_EXTRACT(detail.Properties, '$.GlobalSecondaryIndexes') as global_secondary_indexes,
                JSON_EXTRACT(detail.Properties, '$.ResourcePolicy') as resource_policy,
                JSON_EXTRACT(detail.Properties, '$.KeySchema') as key_schema,
                JSON_EXTRACT(detail.Properties, '$.LocalSecondaryIndexes') as local_secondary_indexes,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.StreamArn') as stream_arn,
                JSON_EXTRACT(detail.Properties, '$.DeletionProtectionEnabled') as deletion_protection_enabled,
                JSON_EXTRACT(detail.Properties, '$.TableClass') as table_class,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TimeToLiveSpecification') as time_to_live_specification
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DynamoDB::Table'
                AND detail.data__TypeName = 'AWS::DynamoDB::Table'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'OnDemandThroughput') as on_demand_throughput,
                  json_extract_path_text(Properties, 'SSESpecification') as sse_specification,
                  json_extract_path_text(Properties, 'KinesisStreamSpecification') as kinesis_stream_specification,
                  json_extract_path_text(Properties, 'StreamSpecification') as stream_specification,
                  json_extract_path_text(Properties, 'ContributorInsightsSpecification') as contributor_insights_specification,
                  json_extract_path_text(Properties, 'ImportSourceSpecification') as import_source_specification,
                  json_extract_path_text(Properties, 'PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                  json_extract_path_text(Properties, 'ProvisionedThroughput') as provisioned_throughput,
                  json_extract_path_text(Properties, 'WarmThroughput') as warm_throughput,
                  json_extract_path_text(Properties, 'TableName') as table_name,
                  json_extract_path_text(Properties, 'AttributeDefinitions') as attribute_definitions,
                  json_extract_path_text(Properties, 'BillingMode') as billing_mode,
                  json_extract_path_text(Properties, 'GlobalSecondaryIndexes') as global_secondary_indexes,
                  json_extract_path_text(Properties, 'ResourcePolicy') as resource_policy,
                  json_extract_path_text(Properties, 'KeySchema') as key_schema,
                  json_extract_path_text(Properties, 'LocalSecondaryIndexes') as local_secondary_indexes,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'StreamArn') as stream_arn,
                  json_extract_path_text(Properties, 'DeletionProtectionEnabled') as deletion_protection_enabled,
                  json_extract_path_text(Properties, 'TableClass') as table_class,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TimeToLiveSpecification') as time_to_live_specification
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DynamoDB::Table'
                  AND data__Identifier = '<TableName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'OnDemandThroughput') as on_demand_throughput,
                    json_extract_path_text(detail.Properties, 'SSESpecification') as sse_specification,
                    json_extract_path_text(detail.Properties, 'KinesisStreamSpecification') as kinesis_stream_specification,
                    json_extract_path_text(detail.Properties, 'StreamSpecification') as stream_specification,
                    json_extract_path_text(detail.Properties, 'ContributorInsightsSpecification') as contributor_insights_specification,
                    json_extract_path_text(detail.Properties, 'ImportSourceSpecification') as import_source_specification,
                    json_extract_path_text(detail.Properties, 'PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                    json_extract_path_text(detail.Properties, 'ProvisionedThroughput') as provisioned_throughput,
                    json_extract_path_text(detail.Properties, 'WarmThroughput') as warm_throughput,
                    json_extract_path_text(detail.Properties, 'TableName') as table_name,
                    json_extract_path_text(detail.Properties, 'AttributeDefinitions') as attribute_definitions,
                    json_extract_path_text(detail.Properties, 'BillingMode') as billing_mode,
                    json_extract_path_text(detail.Properties, 'GlobalSecondaryIndexes') as global_secondary_indexes,
                    json_extract_path_text(detail.Properties, 'ResourcePolicy') as resource_policy,
                    json_extract_path_text(detail.Properties, 'KeySchema') as key_schema,
                    json_extract_path_text(detail.Properties, 'LocalSecondaryIndexes') as local_secondary_indexes,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'StreamArn') as stream_arn,
                    json_extract_path_text(detail.Properties, 'DeletionProtectionEnabled') as deletion_protection_enabled,
                    json_extract_path_text(detail.Properties, 'TableClass') as table_class,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TimeToLiveSpecification') as time_to_live_specification
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DynamoDB::Table'
                    AND detail.data__TypeName = 'AWS::DynamoDB::Table'
                    AND listing.region = 'us-east-1'
    tables_list_only:
      name: tables_list_only
      id: aws.dynamodb.tables_list_only
      x-cfn-schema-name: Table
      x-cfn-type-name: AWS::DynamoDB::Table
      x-identifiers:
        - TableName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TableName') as table_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DynamoDB::Table'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TableName') as table_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DynamoDB::Table'
                AND region = 'us-east-1'
    table_tags:
      name: table_tags
      id: aws.dynamodb.table_tags
      x-cfn-schema-name: Table
      x-cfn-type-name: AWS::DynamoDB::Table
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.OnDemandThroughput') as on_demand_throughput,
              JSON_EXTRACT(detail.Properties, '$.SSESpecification') as sse_specification,
              JSON_EXTRACT(detail.Properties, '$.KinesisStreamSpecification') as kinesis_stream_specification,
              JSON_EXTRACT(detail.Properties, '$.StreamSpecification') as stream_specification,
              JSON_EXTRACT(detail.Properties, '$.ContributorInsightsSpecification') as contributor_insights_specification,
              JSON_EXTRACT(detail.Properties, '$.ImportSourceSpecification') as import_source_specification,
              JSON_EXTRACT(detail.Properties, '$.PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
              JSON_EXTRACT(detail.Properties, '$.ProvisionedThroughput') as provisioned_throughput,
              JSON_EXTRACT(detail.Properties, '$.WarmThroughput') as warm_throughput,
              JSON_EXTRACT(detail.Properties, '$.TableName') as table_name,
              JSON_EXTRACT(detail.Properties, '$.AttributeDefinitions') as attribute_definitions,
              JSON_EXTRACT(detail.Properties, '$.BillingMode') as billing_mode,
              JSON_EXTRACT(detail.Properties, '$.GlobalSecondaryIndexes') as global_secondary_indexes,
              JSON_EXTRACT(detail.Properties, '$.ResourcePolicy') as resource_policy,
              JSON_EXTRACT(detail.Properties, '$.KeySchema') as key_schema,
              JSON_EXTRACT(detail.Properties, '$.LocalSecondaryIndexes') as local_secondary_indexes,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.StreamArn') as stream_arn,
              JSON_EXTRACT(detail.Properties, '$.DeletionProtectionEnabled') as deletion_protection_enabled,
              JSON_EXTRACT(detail.Properties, '$.TableClass') as table_class,
              JSON_EXTRACT(detail.Properties, '$.TimeToLiveSpecification') as time_to_live_specification
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::DynamoDB::Table'
              AND detail.data__TypeName = 'AWS::DynamoDB::Table'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'OnDemandThroughput') as on_demand_throughput,
                json_extract_path_text(detail.Properties, 'SSESpecification') as sse_specification,
                json_extract_path_text(detail.Properties, 'KinesisStreamSpecification') as kinesis_stream_specification,
                json_extract_path_text(detail.Properties, 'StreamSpecification') as stream_specification,
                json_extract_path_text(detail.Properties, 'ContributorInsightsSpecification') as contributor_insights_specification,
                json_extract_path_text(detail.Properties, 'ImportSourceSpecification') as import_source_specification,
                json_extract_path_text(detail.Properties, 'PointInTimeRecoverySpecification') as point_in_time_recovery_specification,
                json_extract_path_text(detail.Properties, 'ProvisionedThroughput') as provisioned_throughput,
                json_extract_path_text(detail.Properties, 'WarmThroughput') as warm_throughput,
                json_extract_path_text(detail.Properties, 'TableName') as table_name,
                json_extract_path_text(detail.Properties, 'AttributeDefinitions') as attribute_definitions,
                json_extract_path_text(detail.Properties, 'BillingMode') as billing_mode,
                json_extract_path_text(detail.Properties, 'GlobalSecondaryIndexes') as global_secondary_indexes,
                json_extract_path_text(detail.Properties, 'ResourcePolicy') as resource_policy,
                json_extract_path_text(detail.Properties, 'KeySchema') as key_schema,
                json_extract_path_text(detail.Properties, 'LocalSecondaryIndexes') as local_secondary_indexes,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'StreamArn') as stream_arn,
                json_extract_path_text(detail.Properties, 'DeletionProtectionEnabled') as deletion_protection_enabled,
                json_extract_path_text(detail.Properties, 'TableClass') as table_class,
                json_extract_path_text(detail.Properties, 'TimeToLiveSpecification') as time_to_live_specification
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::DynamoDB::Table'
                AND detail.data__TypeName = 'AWS::DynamoDB::Table'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__GlobalTable&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGlobalTable
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGlobalTableRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Table&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTable
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTableRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
