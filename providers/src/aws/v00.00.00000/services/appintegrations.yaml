openapi: 3.0.0
info:
  title: AppIntegrations
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      properties:
        Key:
          description: A key to identify the tag.
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          description: Corresponding tag value for the key.
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    ExternalUrlConfig:
      type: object
      additionalProperties: false
      required:
        - AccessUrl
      properties:
        AccessUrl:
          type: string
          pattern: ^\w+\:\/\/.*$
          minLength: 1
          maxLength: 1000
        ApprovedOrigins:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ApprovedOrigins'
          minItems: 0
          maxItems: 50
    ApprovedOrigins:
      type: string
      pattern: ^\w+\:\/\/.*$
      minLength: 1
      maxLength: 1000
    Permissions:
      type: string
      pattern: ^[a-zA-Z0-9\/\._\-\*]+$
      minLength: 1
      maxLength: 255
    Application:
      type: object
      properties:
        Name:
          description: The name of the application.
          type: string
          pattern: ^[a-zA-Z0-9\/\._ \-]+$
          minLength: 1
          maxLength: 255
        Id:
          description: The id of the application.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        Namespace:
          description: The namespace of the application.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        Description:
          description: The application description.
          type: string
          minLength: 1
          maxLength: 1000
        ApplicationArn:
          description: The Amazon Resource Name (ARN) of the application.
          pattern: ^arn:aws[-a-z0-9]*:app-integrations:[-a-z0-9]*:[0-9]{12}:application/[-a-zA-Z0-9]*
          type: string
          minLength: 1
          maxLength: 2048
        ApplicationSourceConfig:
          description: Application source config
          type: object
          additionalProperties: false
          properties:
            ExternalUrlConfig:
              $ref: '#/components/schemas/ExternalUrlConfig'
          required:
            - ExternalUrlConfig
        Permissions:
          description: The configuration of events or requests that the application has access to.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Permissions'
          minItems: 0
          maxItems: 150
        Tags:
          description: The tags (keys and values) associated with the application.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
      required:
        - Name
        - Namespace
        - Description
        - ApplicationSourceConfig
      x-stackql-resource-name: application
      description: Resource Type definition for AWS:AppIntegrations::Application
      x-type-name: AWS::AppIntegrations::Application
      x-stackql-primary-identifier:
        - ApplicationArn
      x-read-only-properties:
        - ApplicationArn
        - Id
      x-required-properties:
        - Name
        - Namespace
        - Description
        - ApplicationSourceConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - app-integrations:TagResource
          - app-integrations:UntagResource
      x-required-permissions:
        create:
          - app-integrations:CreateApplication
          - app-integrations:TagResource
        read:
          - app-integrations:GetApplication
        list:
          - app-integrations:ListApplications
          - app-integrations:ListTagsForResource
        update:
          - app-integrations:GetApplication
          - app-integrations:UpdateApplication
          - app-integrations:TagResource
          - app-integrations:UntagResource
        delete:
          - app-integrations:DeleteApplication
    ScheduleConfig:
      type: object
      properties:
        FirstExecutionFrom:
          description: The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        Object:
          description: The name of the object to pull from the data source.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        ScheduleExpression:
          description: How often the data should be pulled from data source.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - ScheduleExpression
    FileConfiguration:
      description: The configuration for what files should be pulled from the source.
      type: object
      properties:
        Folders:
          description: Identifiers for the source folders to pull all files from recursively.
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 200
        Filters:
          description: Restrictions for what files should be pulled from the source.
          type: object
          x-patternProperties:
            ^[A-Za-z]:
              type: array
              minItems: 1
              maxItems: 2048
              items:
                type: string
                maxLength: 255
                minLength: 1
          additionalProperties: false
      additionalProperties: false
      required:
        - Folders
    ObjectConfiguration:
      description: The configuration for what data should be pulled from the source.
      type: object
      x-patternProperties:
        ^.+$:
          type: object
          patternProperties:
            ^[A-Za-z]:
              type: array
              minItems: 1
              maxItems: 2048
              items:
                type: string
                maxLength: 255
                minLength: 1
          additionalProperties: false
      additionalProperties: false
    DataIntegration:
      type: object
      properties:
        Description:
          description: The data integration description.
          type: string
          minLength: 1
          maxLength: 1000
        Id:
          description: The unique identifer of the data integration.
          type: string
          pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
          minLength: 1
          maxLength: 255
        DataIntegrationArn:
          description: The Amazon Resource Name (ARN) of the data integration.
          type: string
          pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
          minLength: 1
          maxLength: 2048
        Name:
          description: The name of the data integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        KmsKey:
          description: The KMS key of the data integration.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        ScheduleConfig:
          description: The name of the data and how often it should be pulled from the source.
          $ref: '#/components/schemas/ScheduleConfig'
        SourceURI:
          description: The URI of the data source.
          type: string
          pattern: ^(\w+\:\/\/[\w.-]+[\w/!@#+=.-]+$)|(\w+\:\/\/[\w.-]+[\w/!@#+=.-]+[\w/!@#+=.-]+[\w/!@#+=.,-]+$)
          minLength: 1
          maxLength: 1000
        Tags:
          description: The tags (keys and values) associated with the data integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
        FileConfiguration:
          description: The configuration for what files should be pulled from the source.
          $ref: '#/components/schemas/FileConfiguration'
        ObjectConfiguration:
          description: The configuration for what data should be pulled from the source.
          $ref: '#/components/schemas/ObjectConfiguration'
      required:
        - Name
        - KmsKey
        - SourceURI
      x-stackql-resource-name: data_integration
      description: Resource Type definition for AWS::AppIntegrations::DataIntegration
      x-type-name: AWS::AppIntegrations::DataIntegration
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - KmsKey
        - ScheduleConfig
        - SourceURI
      x-read-only-properties:
        - Id
        - DataIntegrationArn
      x-required-properties:
        - Name
        - KmsKey
        - SourceURI
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - app-integrations:TagResource
          - app-integrations:UntagResource
      x-required-permissions:
        create:
          - app-integrations:CreateDataIntegration
          - app-integrations:TagResource
          - appflow:DescribeConnectorProfiles
          - appflow:CreateFlow
          - appflow:DeleteFlow
          - appflow:DescribeConnectorEntity
          - appflow:UseConnectorProfile
          - appflow:TagResource
          - appflow:UntagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:ListGrants
          - kms:ListKeys
          - s3:GetBucketNotification
          - s3:PutBucketNotification
          - s3:GetEncryptionConfiguration
        read:
          - app-integrations:GetDataIntegration
          - app-integrations:ListTagsForResource
        list:
          - app-integrations:ListDataIntegrations
        update:
          - app-integrations:GetDataIntegration
          - app-integrations:UpdateDataIntegration
          - app-integrations:TagResource
          - app-integrations:UntagResource
          - appflow:DescribeConnectorProfiles
          - appflow:DeleteFlow
          - appflow:DescribeConnectorEntity
          - appflow:UseConnectorProfile
          - appflow:TagResource
          - appflow:UntagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:ListGrants
          - kms:ListKeys
        delete:
          - app-integrations:DeleteDataIntegration
          - app-integrations:UntagResource
          - appflow:CreateFlow
          - appflow:DeleteFlow
          - appflow:DescribeConnectorEntity
          - appflow:UseConnectorProfile
          - appflow:TagResource
          - appflow:UntagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:ListGrants
          - kms:ListKeys
    EventFilter:
      type: object
      properties:
        Source:
          description: The source of the events.
          type: string
          pattern: ^aws\.partner\/.*$
          minLength: 1
          maxLength: 256
      additionalProperties: false
      required:
        - Source
    Metadata:
      type: object
      properties:
        Key:
          description: A key to identify the metadata.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        Value:
          description: Corresponding metadata value for the key.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - Key
        - Value
    EventIntegration:
      type: object
      properties:
        Description:
          description: The event integration description.
          type: string
          minLength: 1
          maxLength: 1000
        EventIntegrationArn:
          description: The Amazon Resource Name (ARN) of the event integration.
          type: string
          pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
          minLength: 1
          maxLength: 2048
        Name:
          description: The name of the event integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        EventBridgeBus:
          description: The Amazon Eventbridge bus for the event integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        EventFilter:
          description: The EventFilter (source) associated with the event integration.
          $ref: '#/components/schemas/EventFilter'
        Tags:
          description: The tags (keys and values) associated with the event integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
      required:
        - Name
        - EventBridgeBus
        - EventFilter
      x-stackql-resource-name: event_integration
      description: Resource Type definition for AWS::AppIntegrations::EventIntegration
      x-type-name: AWS::AppIntegrations::EventIntegration
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - EventBridgeBus
        - EventFilter
      x-read-only-properties:
        - EventIntegrationArn
      x-required-properties:
        - Name
        - EventBridgeBus
        - EventFilter
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - app-integrations:TagResource
          - app-integrations:UntagResource
      x-required-permissions:
        create:
          - app-integrations:CreateEventIntegration
          - app-integrations:TagResource
        read:
          - app-integrations:GetEventIntegration
          - app-integrations:ListTagsForResource
        list:
          - app-integrations:ListEventIntegrations
        update:
          - app-integrations:GetEventIntegration
          - app-integrations:UpdateEventIntegration
          - app-integrations:TagResource
          - app-integrations:UntagResource
        delete:
          - app-integrations:DeleteEventIntegration
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the application.
              type: string
              pattern: ^[a-zA-Z0-9\/\._ \-]+$
              minLength: 1
              maxLength: 255
            Id:
              description: The id of the application.
              type: string
              pattern: ^[a-zA-Z0-9/\._\-]+$
              minLength: 1
              maxLength: 255
            Namespace:
              description: The namespace of the application.
              type: string
              pattern: ^[a-zA-Z0-9/\._\-]+$
              minLength: 1
              maxLength: 255
            Description:
              description: The application description.
              type: string
              minLength: 1
              maxLength: 1000
            ApplicationArn:
              description: The Amazon Resource Name (ARN) of the application.
              pattern: ^arn:aws[-a-z0-9]*:app-integrations:[-a-z0-9]*:[0-9]{12}:application/[-a-zA-Z0-9]*
              type: string
              minLength: 1
              maxLength: 2048
            ApplicationSourceConfig:
              description: Application source config
              type: object
              additionalProperties: false
              properties:
                ExternalUrlConfig:
                  $ref: '#/components/schemas/ExternalUrlConfig'
              required:
                - ExternalUrlConfig
            Permissions:
              description: The configuration of events or requests that the application has access to.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Permissions'
              minItems: 0
              maxItems: 150
            Tags:
              description: The tags (keys and values) associated with the application.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 200
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
    CreateDataIntegrationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              description: The data integration description.
              type: string
              minLength: 1
              maxLength: 1000
            Id:
              description: The unique identifer of the data integration.
              type: string
              pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
              minLength: 1
              maxLength: 255
            DataIntegrationArn:
              description: The Amazon Resource Name (ARN) of the data integration.
              type: string
              pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
              minLength: 1
              maxLength: 2048
            Name:
              description: The name of the data integration.
              type: string
              pattern: ^[a-zA-Z0-9/\._\-]+$
              minLength: 1
              maxLength: 255
            KmsKey:
              description: The KMS key of the data integration.
              type: string
              pattern: .*\S.*
              minLength: 1
              maxLength: 255
            ScheduleConfig:
              description: The name of the data and how often it should be pulled from the source.
              $ref: '#/components/schemas/ScheduleConfig'
            SourceURI:
              description: The URI of the data source.
              type: string
              pattern: ^(\w+\:\/\/[\w.-]+[\w/!@#+=.-]+$)|(\w+\:\/\/[\w.-]+[\w/!@#+=.-]+[\w/!@#+=.-]+[\w/!@#+=.,-]+$)
              minLength: 1
              maxLength: 1000
            Tags:
              description: The tags (keys and values) associated with the data integration.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 200
            FileConfiguration:
              description: The configuration for what files should be pulled from the source.
              $ref: '#/components/schemas/FileConfiguration'
            ObjectConfiguration:
              description: The configuration for what data should be pulled from the source.
              $ref: '#/components/schemas/ObjectConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateDataIntegrationRequest
      type: object
      required: []
    CreateEventIntegrationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              description: The event integration description.
              type: string
              minLength: 1
              maxLength: 1000
            EventIntegrationArn:
              description: The Amazon Resource Name (ARN) of the event integration.
              type: string
              pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
              minLength: 1
              maxLength: 2048
            Name:
              description: The name of the event integration.
              type: string
              pattern: ^[a-zA-Z0-9/\._\-]+$
              minLength: 1
              maxLength: 255
            EventBridgeBus:
              description: The Amazon Eventbridge bus for the event integration.
              type: string
              pattern: ^[a-zA-Z0-9/\._\-]+$
              minLength: 1
              maxLength: 255
            EventFilter:
              description: The EventFilter (source) associated with the event integration.
              $ref: '#/components/schemas/EventFilter'
            Tags:
              description: The tags (keys and values) associated with the event integration.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 200
          x-stackQL-stringOnly: true
      x-title: CreateEventIntegrationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.appintegrations.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::AppIntegrations::Application
      x-identifiers:
        - ApplicationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ApplicationSourceConfig') as application_source_config,
              JSON_EXTRACT(Properties, '$.Permissions') as permissions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::Application'
              AND data__Identifier = '<ApplicationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Namespace') as namespace,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ApplicationArn') as application_arn,
                JSON_EXTRACT(detail.Properties, '$.ApplicationSourceConfig') as application_source_config,
                JSON_EXTRACT(detail.Properties, '$.Permissions') as permissions,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppIntegrations::Application'
                AND detail.data__TypeName = 'AWS::AppIntegrations::Application'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Namespace') as namespace,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                  json_extract_path_text(Properties, 'ApplicationSourceConfig') as application_source_config,
                  json_extract_path_text(Properties, 'Permissions') as permissions,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::Application'
                  AND data__Identifier = '<ApplicationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Namespace') as namespace,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ApplicationArn') as application_arn,
                    json_extract_path_text(detail.Properties, 'ApplicationSourceConfig') as application_source_config,
                    json_extract_path_text(detail.Properties, 'Permissions') as permissions,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppIntegrations::Application'
                    AND detail.data__TypeName = 'AWS::AppIntegrations::Application'
                    AND listing.region = 'us-east-1'
    applications_list_only:
      name: applications_list_only
      id: aws.appintegrations.applications_list_only
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::AppIntegrations::Application
      x-identifiers:
        - ApplicationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::Application'
                AND region = 'us-east-1'
    application_tags:
      name: application_tags
      id: aws.appintegrations.application_tags
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::AppIntegrations::Application
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(detail.Properties, '$.ApplicationSourceConfig') as application_source_config,
              JSON_EXTRACT(detail.Properties, '$.Permissions') as permissions
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppIntegrations::Application'
              AND detail.data__TypeName = 'AWS::AppIntegrations::Application'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Namespace') as namespace,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(detail.Properties, 'ApplicationSourceConfig') as application_source_config,
                json_extract_path_text(detail.Properties, 'Permissions') as permissions
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppIntegrations::Application'
                AND detail.data__TypeName = 'AWS::AppIntegrations::Application'
                AND listing.region = 'us-east-1'
    data_integrations:
      name: data_integrations
      id: aws.appintegrations.data_integrations
      x-cfn-schema-name: DataIntegration
      x-cfn-type-name: AWS::AppIntegrations::DataIntegration
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataIntegration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::DataIntegration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::DataIntegration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::DataIntegration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_integrations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_integrations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_integrations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DataIntegrationArn') as data_integration_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(Properties, '$.ScheduleConfig') as schedule_config,
              JSON_EXTRACT(Properties, '$.SourceURI') as source_uri,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.FileConfiguration') as file_configuration,
              JSON_EXTRACT(Properties, '$.ObjectConfiguration') as object_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.DataIntegrationArn') as data_integration_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.KmsKey') as kms_key,
                JSON_EXTRACT(detail.Properties, '$.ScheduleConfig') as schedule_config,
                JSON_EXTRACT(detail.Properties, '$.SourceURI') as source_uri,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.FileConfiguration') as file_configuration,
                JSON_EXTRACT(detail.Properties, '$.ObjectConfiguration') as object_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND detail.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'DataIntegrationArn') as data_integration_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'KmsKey') as kms_key,
                  json_extract_path_text(Properties, 'ScheduleConfig') as schedule_config,
                  json_extract_path_text(Properties, 'SourceURI') as source_uri,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'FileConfiguration') as file_configuration,
                  json_extract_path_text(Properties, 'ObjectConfiguration') as object_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'DataIntegrationArn') as data_integration_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'KmsKey') as kms_key,
                    json_extract_path_text(detail.Properties, 'ScheduleConfig') as schedule_config,
                    json_extract_path_text(detail.Properties, 'SourceURI') as source_uri,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'FileConfiguration') as file_configuration,
                    json_extract_path_text(detail.Properties, 'ObjectConfiguration') as object_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                    AND detail.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                    AND listing.region = 'us-east-1'
    data_integrations_list_only:
      name: data_integrations_list_only
      id: aws.appintegrations.data_integrations_list_only
      x-cfn-schema-name: DataIntegration
      x-cfn-type-name: AWS::AppIntegrations::DataIntegration
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND region = 'us-east-1'
    data_integration_tags:
      name: data_integration_tags
      id: aws.appintegrations.data_integration_tags
      x-cfn-schema-name: DataIntegration
      x-cfn-type-name: AWS::AppIntegrations::DataIntegration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.DataIntegrationArn') as data_integration_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(detail.Properties, '$.ScheduleConfig') as schedule_config,
              JSON_EXTRACT(detail.Properties, '$.SourceURI') as source_uri,
              JSON_EXTRACT(detail.Properties, '$.FileConfiguration') as file_configuration,
              JSON_EXTRACT(detail.Properties, '$.ObjectConfiguration') as object_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
              AND detail.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'DataIntegrationArn') as data_integration_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'KmsKey') as kms_key,
                json_extract_path_text(detail.Properties, 'ScheduleConfig') as schedule_config,
                json_extract_path_text(detail.Properties, 'SourceURI') as source_uri,
                json_extract_path_text(detail.Properties, 'FileConfiguration') as file_configuration,
                json_extract_path_text(detail.Properties, 'ObjectConfiguration') as object_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND detail.data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND listing.region = 'us-east-1'
    event_integrations:
      name: event_integrations
      id: aws.appintegrations.event_integrations
      x-cfn-schema-name: EventIntegration
      x-cfn-type-name: AWS::AppIntegrations::EventIntegration
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EventIntegration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::EventIntegration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::EventIntegration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppIntegrations::EventIntegration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/event_integrations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/event_integrations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/event_integrations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EventIntegrationArn') as event_integration_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.EventBridgeBus') as event_bridge_bus,
              JSON_EXTRACT(Properties, '$.EventFilter') as event_filter,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EventIntegrationArn') as event_integration_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.EventBridgeBus') as event_bridge_bus,
                JSON_EXTRACT(detail.Properties, '$.EventFilter') as event_filter,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND detail.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EventIntegrationArn') as event_integration_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'EventBridgeBus') as event_bridge_bus,
                  json_extract_path_text(Properties, 'EventFilter') as event_filter,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EventIntegrationArn') as event_integration_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'EventBridgeBus') as event_bridge_bus,
                    json_extract_path_text(detail.Properties, 'EventFilter') as event_filter,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                    AND detail.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                    AND listing.region = 'us-east-1'
    event_integrations_list_only:
      name: event_integrations_list_only
      id: aws.appintegrations.event_integrations_list_only
      x-cfn-schema-name: EventIntegration
      x-cfn-type-name: AWS::AppIntegrations::EventIntegration
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND region = 'us-east-1'
    event_integration_tags:
      name: event_integration_tags
      id: aws.appintegrations.event_integration_tags
      x-cfn-schema-name: EventIntegration
      x-cfn-type-name: AWS::AppIntegrations::EventIntegration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EventIntegrationArn') as event_integration_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.EventBridgeBus') as event_bridge_bus,
              JSON_EXTRACT(detail.Properties, '$.EventFilter') as event_filter
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
              AND detail.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EventIntegrationArn') as event_integration_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'EventBridgeBus') as event_bridge_bus,
                json_extract_path_text(detail.Properties, 'EventFilter') as event_filter
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND detail.data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataIntegration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataIntegration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataIntegrationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EventIntegration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEventIntegration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEventIntegrationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
