openapi: 3.0.0
info:
  title: AppIntegrations
  version: 1.0.0
paths: {}
components:
  schemas:
    ScheduleConfig:
      type: object
      properties:
        FirstExecutionFrom:
          description: The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        Object:
          description: The name of the object to pull from the data source.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        ScheduleExpression:
          description: How often the data should be pulled from data source.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - FirstExecutionFrom
        - Object
        - ScheduleExpression
    Tag:
      type: object
      properties:
        Key:
          description: A key to identify the tag.
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          description: Corresponding tag value for the key.
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    DataIntegration:
      type: object
      properties:
        Description:
          description: The data integration description.
          type: string
          minLength: 1
          maxLength: 1000
        Id:
          description: The unique identifer of the data integration.
          type: string
          pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
          minLength: 1
          maxLength: 255
        DataIntegrationArn:
          description: The Amazon Resource Name (ARN) of the data integration.
          type: string
          pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
          minLength: 1
          maxLength: 2048
        Name:
          description: The name of the data integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        KmsKey:
          description: The KMS key of the data integration.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        ScheduleConfig:
          description: The name of the data and how often it should be pulled from the source.
          $ref: '#/components/schemas/ScheduleConfig'
        SourceURI:
          description: The URI of the data source.
          type: string
          pattern: ^\w+\:\/\/\w+\/[\w/!@#+=.-]+$
          minLength: 1
          maxLength: 255
        Tags:
          description: The tags (keys and values) associated with the data integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
      required:
        - Name
        - KmsKey
        - ScheduleConfig
        - SourceURI
      x-stackql-resource-name: data_integration
      x-stackql-primaryIdentifier:
        - Id
    EventFilter:
      type: object
      properties:
        Source:
          description: The source of the events.
          type: string
          pattern: ^aws\.partner\/.*$
          minLength: 1
          maxLength: 256
      additionalProperties: false
      required:
        - Source
    Metadata:
      type: object
      properties:
        Key:
          description: A key to identify the metadata.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        Value:
          description: Corresponding metadata value for the key.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - Key
        - Value
    EventIntegration:
      type: object
      properties:
        Description:
          description: The event integration description.
          type: string
          minLength: 1
          maxLength: 1000
        EventIntegrationArn:
          description: The Amazon Resource Name (ARN) of the event integration.
          type: string
          pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
          minLength: 1
          maxLength: 2048
        Name:
          description: The name of the event integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        EventBridgeBus:
          description: The Amazon Eventbridge bus for the event integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        EventFilter:
          description: The EventFilter (source) associated with the event integration.
          $ref: '#/components/schemas/EventFilter'
        Tags:
          description: The tags (keys and values) associated with the event integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
      required:
        - Name
        - EventBridgeBus
        - EventFilter
      x-stackql-resource-name: event_integration
      x-stackql-primaryIdentifier:
        - Name
  x-stackQL-resources:
    data_integrations:
      name: data_integrations
      id: aws.appintegrations.data_integrations
      x-cfn-schema-name: DataIntegration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
    data_integration:
      name: data_integration
      id: aws.appintegrations.data_integration
      x-cfn-schema-name: DataIntegration
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DataIntegrationArn') as data_integration_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(Properties, '$.ScheduleConfig.FirstExecutionFrom') as schedule_config_first_execution_from,
              JSON_EXTRACT(Properties, '$.ScheduleConfig.Object') as schedule_config_object,
              JSON_EXTRACT(Properties, '$.ScheduleConfig.ScheduleExpression') as schedule_config_schedule_expression,
              JSON_EXTRACT(Properties, '$.SourceURI') as source_ur_i,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
    event_integrations:
      name: event_integrations
      id: aws.appintegrations.event_integrations
      x-cfn-schema-name: EventIntegration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
    event_integration:
      name: event_integration
      id: aws.appintegrations.event_integration
      x-cfn-schema-name: EventIntegration
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EventIntegrationArn') as event_integration_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.EventBridgeBus') as event_bridge_bus,
              JSON_EXTRACT(Properties, '$.EventFilter.Source') as event_filter_source,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
