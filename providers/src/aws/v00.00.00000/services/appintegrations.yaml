openapi: 3.0.0
info:
  title: AppIntegrations
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          description: A key to identify the tag.
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          description: Corresponding tag value for the key.
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    ExternalUrlConfig:
      type: object
      additionalProperties: false
      required:
        - AccessUrl
        - ApprovedOrigins
      properties:
        AccessUrl:
          type: string
          pattern: ^\w+\:\/\/.*$
          minLength: 1
          maxLength: 1000
        ApprovedOrigins:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ApprovedOrigins'
          minItems: 0
          maxItems: 50
    ApprovedOrigins:
      type: string
      pattern: ^\w+\:\/\/.*$
      minLength: 1
      maxLength: 1000
    Permissions:
      type: string
      pattern: ^[a-zA-Z0-9\/\._\-\*]+$
      minLength: 1
      maxLength: 255
    Application:
      type: object
      properties:
        Name:
          description: The name of the application.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        Id:
          description: The id of the application.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        Namespace:
          description: The namespace of the application.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        Description:
          description: The application description.
          type: string
          minLength: 1
          maxLength: 1000
        ApplicationArn:
          description: The Amazon Resource Name (ARN) of the application.
          pattern: ^arn:aws[-a-z0-9]*:app-integrations:[-a-z0-9]*:[0-9]{12}:application/[-a-zA-Z0-9]*
          type: string
          minLength: 1
          maxLength: 2048
        ApplicationSourceConfig:
          description: Application source config
          type: object
          additionalProperties: false
          properties:
            ExternalUrlConfig:
              $ref: '#/components/schemas/ExternalUrlConfig'
          required:
            - ExternalUrlConfig
        Permissions:
          description: The configuration of events or requests that the application has access to.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Permissions'
          minItems: 0
          maxItems: 150
        Tags:
          description: The tags (keys and values) associated with the application.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
      required:
        - Name
        - Description
        - ApplicationSourceConfig
      x-stackql-resource-name: application
      description: Resource Type definition for AWS:AppIntegrations::Application
      x-type-name: AWS::AppIntegrations::Application
      x-stackql-primary-identifier:
        - ApplicationArn
      x-read-only-properties:
        - ApplicationArn
        - Id
      x-required-properties:
        - Name
        - Description
        - ApplicationSourceConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - app-integrations:CreateApplication
          - app-integrations:TagResource
        read:
          - app-integrations:GetApplication
        list:
          - app-integrations:ListApplications
          - app-integrations:ListTagsForResource
        update:
          - app-integrations:GetApplication
          - app-integrations:UpdateApplication
          - app-integrations:TagResource
          - app-integrations:UntagResource
        delete:
          - app-integrations:DeleteApplication
    ScheduleConfig:
      type: object
      properties:
        FirstExecutionFrom:
          description: The start date for objects to import in the first flow run. Epoch or ISO timestamp format is supported.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        Object:
          description: The name of the object to pull from the data source.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        ScheduleExpression:
          description: How often the data should be pulled from data source.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - ScheduleExpression
    FileConfiguration:
      description: The configuration for what files should be pulled from the source.
      type: object
      properties:
        Folders:
          description: Identifiers for the source folders to pull all files from recursively.
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: string
            pattern: .*\S.*
            minLength: 1
            maxLength: 200
        Filters:
          description: Restrictions for what files should be pulled from the source.
          type: object
          x-patternProperties:
            ^[A-Za-z]:
              type: array
              minItems: 1
              maxItems: 2048
              items:
                type: string
                maxLength: 255
                minLength: 1
          additionalProperties: false
      additionalProperties: false
      required:
        - Folders
    ObjectConfiguration:
      description: The configuration for what data should be pulled from the source.
      type: object
      x-patternProperties:
        ^.+$:
          type: object
          patternProperties:
            ^[A-Za-z]:
              type: array
              minItems: 1
              maxItems: 2048
              items:
                type: string
                maxLength: 255
                minLength: 1
          additionalProperties: false
      additionalProperties: false
    DataIntegration:
      type: object
      properties:
        Description:
          description: The data integration description.
          type: string
          minLength: 1
          maxLength: 1000
        Id:
          description: The unique identifer of the data integration.
          type: string
          pattern: '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
          minLength: 1
          maxLength: 255
        DataIntegrationArn:
          description: The Amazon Resource Name (ARN) of the data integration.
          type: string
          pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
          minLength: 1
          maxLength: 2048
        Name:
          description: The name of the data integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        KmsKey:
          description: The KMS key of the data integration.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        ScheduleConfig:
          description: The name of the data and how often it should be pulled from the source.
          $ref: '#/components/schemas/ScheduleConfig'
        SourceURI:
          description: The URI of the data source.
          type: string
          pattern: ^(\w+\:\/\/[\w.-]+[\w/!@#+=.-]+$)|(\w+\:\/\/[\w.-]+[\w/!@#+=.-]+[\w/!@#+=.-]+[\w/!@#+=.,-]+$)
          minLength: 1
          maxLength: 1000
        Tags:
          description: The tags (keys and values) associated with the data integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
        FileConfiguration:
          description: The configuration for what files should be pulled from the source.
          $ref: '#/components/schemas/FileConfiguration'
        ObjectConfiguration:
          description: The configuration for what data should be pulled from the source.
          $ref: '#/components/schemas/ObjectConfiguration'
      required:
        - Name
        - KmsKey
        - SourceURI
      x-stackql-resource-name: data_integration
      description: Resource Type definition for AWS::AppIntegrations::DataIntegration
      x-type-name: AWS::AppIntegrations::DataIntegration
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - KmsKey
        - ScheduleConfig
        - SourceURI
      x-read-only-properties:
        - Id
        - DataIntegrationArn
      x-required-properties:
        - Name
        - KmsKey
        - SourceURI
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - app-integrations:CreateDataIntegration
          - app-integrations:TagResource
          - appflow:DescribeConnectorProfiles
          - appflow:CreateFlow
          - appflow:DeleteFlow
          - appflow:DescribeConnectorEntity
          - appflow:UseConnectorProfile
          - appflow:TagResource
          - appflow:UntagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:ListGrants
          - kms:ListKeys
          - s3:GetBucketNotification
          - s3:PutBucketNotification
          - s3:GetEncryptionConfiguration
        read:
          - app-integrations:GetDataIntegration
          - app-integrations:ListTagsForResource
        list:
          - app-integrations:ListDataIntegrations
        update:
          - app-integrations:GetDataIntegration
          - app-integrations:UpdateDataIntegration
          - app-integrations:TagResource
          - app-integrations:UntagResource
          - appflow:DescribeConnectorProfiles
          - appflow:DeleteFlow
          - appflow:DescribeConnectorEntity
          - appflow:UseConnectorProfile
          - appflow:TagResource
          - appflow:UntagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:ListGrants
          - kms:ListKeys
        delete:
          - app-integrations:DeleteDataIntegration
          - app-integrations:UntagResource
          - appflow:CreateFlow
          - appflow:DeleteFlow
          - appflow:DescribeConnectorEntity
          - appflow:UseConnectorProfile
          - appflow:TagResource
          - appflow:UntagResource
          - kms:CreateGrant
          - kms:DescribeKey
          - kms:ListAliases
          - kms:ListGrants
          - kms:ListKeys
    EventFilter:
      type: object
      properties:
        Source:
          description: The source of the events.
          type: string
          pattern: ^aws\.partner\/.*$
          minLength: 1
          maxLength: 256
      additionalProperties: false
      required:
        - Source
    Metadata:
      type: object
      properties:
        Key:
          description: A key to identify the metadata.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
        Value:
          description: Corresponding metadata value for the key.
          type: string
          pattern: .*\S.*
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - Key
        - Value
    EventIntegration:
      type: object
      properties:
        Description:
          description: The event integration description.
          type: string
          minLength: 1
          maxLength: 1000
        EventIntegrationArn:
          description: The Amazon Resource Name (ARN) of the event integration.
          type: string
          pattern: ^arn:aws[-a-z]*:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
          minLength: 1
          maxLength: 2048
        Name:
          description: The name of the event integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        EventBridgeBus:
          description: The Amazon Eventbridge bus for the event integration.
          type: string
          pattern: ^[a-zA-Z0-9/\._\-]+$
          minLength: 1
          maxLength: 255
        EventFilter:
          description: The EventFilter (source) associated with the event integration.
          $ref: '#/components/schemas/EventFilter'
        Tags:
          description: The tags (keys and values) associated with the event integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 200
      required:
        - Name
        - EventBridgeBus
        - EventFilter
      x-stackql-resource-name: event_integration
      description: Resource Type definition for AWS::AppIntegrations::EventIntegration
      x-type-name: AWS::AppIntegrations::EventIntegration
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
        - EventBridgeBus
        - EventFilter
      x-read-only-properties:
        - EventIntegrationArn
      x-required-properties:
        - Name
        - EventBridgeBus
        - EventFilter
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - app-integrations:CreateEventIntegration
          - app-integrations:TagResource
        read:
          - app-integrations:GetEventIntegration
          - app-integrations:ListTagsForResource
        list:
          - app-integrations:ListEventIntegrations
        update:
          - app-integrations:GetEventIntegration
          - app-integrations:UpdateEventIntegration
          - app-integrations:TagResource
          - app-integrations:UntagResource
        delete:
          - app-integrations:DeleteEventIntegration
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.appintegrations.applications
      x-cfn-schema-name: Application
      x-type: list
      x-identifiers:
        - ApplicationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::Application'
                AND region = 'us-east-1'
    application:
      name: application
      id: aws.appintegrations.application
      x-cfn-schema-name: Application
      x-type: get
      x-identifiers:
        - ApplicationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Namespace') as namespace,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ApplicationSourceConfig') as application_source_config,
              JSON_EXTRACT(Properties, '$.Permissions') as permissions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::Application'
              AND data__Identifier = '<ApplicationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Namespace') as namespace,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(Properties, 'ApplicationSourceConfig') as application_source_config,
                json_extract_path_text(Properties, 'Permissions') as permissions,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::Application'
                AND data__Identifier = '<ApplicationArn>'
                AND region = 'us-east-1'
    data_integrations:
      name: data_integrations
      id: aws.appintegrations.data_integrations
      x-cfn-schema-name: DataIntegration
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND region = 'us-east-1'
    data_integration:
      name: data_integration
      id: aws.appintegrations.data_integration
      x-cfn-schema-name: DataIntegration
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DataIntegrationArn') as data_integration_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.KmsKey') as kms_key,
              JSON_EXTRACT(Properties, '$.ScheduleConfig') as schedule_config,
              JSON_EXTRACT(Properties, '$.SourceURI') as source_uri,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.FileConfiguration') as file_configuration,
              JSON_EXTRACT(Properties, '$.ObjectConfiguration') as object_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DataIntegrationArn') as data_integration_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'KmsKey') as kms_key,
                json_extract_path_text(Properties, 'ScheduleConfig') as schedule_config,
                json_extract_path_text(Properties, 'SourceURI') as source_uri,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'FileConfiguration') as file_configuration,
                json_extract_path_text(Properties, 'ObjectConfiguration') as object_configuration
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::DataIntegration'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    event_integrations:
      name: event_integrations
      id: aws.appintegrations.event_integrations
      x-cfn-schema-name: EventIntegration
      x-type: list
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND region = 'us-east-1'
    event_integration:
      name: event_integration
      id: aws.appintegrations.event_integration
      x-cfn-schema-name: EventIntegration
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EventIntegrationArn') as event_integration_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.EventBridgeBus') as event_bridge_bus,
              JSON_EXTRACT(Properties, '$.EventFilter') as event_filter,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'EventIntegrationArn') as event_integration_arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'EventBridgeBus') as event_bridge_bus,
                json_extract_path_text(Properties, 'EventFilter') as event_filter,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppIntegrations::EventIntegration'
                AND data__Identifier = '<Name>'
                AND region = 'us-east-1'
