openapi: 3.0.0
info:
  title: Comprehend
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    TaskConfig:
      type: object
      properties:
        LanguageCode:
          type: string
          enum:
            - en
            - es
            - fr
            - it
            - de
            - pt
        DocumentClassificationConfig:
          $ref: '#/components/schemas/DocumentClassificationConfig'
        EntityRecognitionConfig:
          $ref: '#/components/schemas/EntityRecognitionConfig'
      required:
        - LanguageCode
      additionalProperties: false
    DataSecurityConfig:
      type: object
      properties:
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        DataLakeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
      required: []
      additionalProperties: false
    VpcConfig:
      type: object
      properties:
        SecurityGroupIds:
          type: array
          items:
            type: string
            pattern: '[-0-9a-zA-Z]+'
            minLength: 1
            maxLength: 32
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 5
        Subnets:
          type: array
          items:
            type: string
            pattern: '[-0-9a-zA-Z]+'
            minLength: 1
            maxLength: 32
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 16
      required:
        - SecurityGroupIds
        - Subnets
      additionalProperties: false
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    EntityTypesListItem:
      type: object
      properties:
        Type:
          type: string
          pattern: ^(?![^\n\r\t,]*\\n|\\r|\\t)[^\n\r\t,]+$
          minLength: 1
          maxLength: 64
      additionalProperties: false
      required:
        - Type
    EntityRecognitionConfig:
      type: object
      properties:
        EntityTypes:
          type: array
          items:
            $ref: '#/components/schemas/EntityTypesListItem'
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 25
      additionalProperties: false
    DocumentClassificationConfig:
      type: object
      properties:
        Mode:
          type: string
          enum:
            - MULTI_CLASS
            - MULTI_LABEL
        Labels:
          type: array
          items:
            type: string
            maxLength: 5000
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 1000
      additionalProperties: false
      required:
        - Mode
    Flywheel:
      type: object
      properties:
        ActiveModelArn:
          type: string
          pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:(document-classifier|entity-recognizer)/[a-zA-Z0-9](-*[a-zA-Z0-9])*(/version/[a-zA-Z0-9](-*[a-zA-Z0-9])*)?
          maxLength: 256
        DataAccessRoleArn:
          type: string
          pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
          minLength: 20
          maxLength: 2048
        DataLakeS3Uri:
          type: string
          pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
          maxLength: 512
        DataSecurityConfig:
          $ref: '#/components/schemas/DataSecurityConfig'
        FlywheelName:
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        ModelType:
          type: string
          enum:
            - DOCUMENT_CLASSIFIER
            - ENTITY_RECOGNIZER
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
        TaskConfig:
          $ref: '#/components/schemas/TaskConfig'
        Arn:
          type: string
          pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:flywheel/[a-zA-Z0-9](-*[a-zA-Z0-9])*
          minLength: 1
          maxLength: 256
      required:
        - FlywheelName
        - DataAccessRoleArn
        - DataLakeS3Uri
      x-stackql-resource-name: flywheel
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    flywheels:
      name: flywheels
      id: aws.comprehend.flywheels
      x-cfn-schema-name: Flywheel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Comprehend::Flywheel'
    flywheel:
      name: flywheel
      id: aws.comprehend.flywheel
      x-cfn-schema-name: Flywheel
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ActiveModelArn') as active_model_arn,
              JSON_EXTRACT(Properties, '$.DataAccessRoleArn') as data_access_role_arn,
              JSON_EXTRACT(Properties, '$.DataLakeS3Uri') as data_lake_s3_uri,
              JSON_EXTRACT(Properties, '$.DataSecurityConfig.ModelKmsKeyId') as data_security_config_model_kms_key_id,
              JSON_EXTRACT(Properties, '$.DataSecurityConfig.VolumeKmsKeyId') as data_security_config_volume_kms_key_id,
              JSON_EXTRACT(Properties, '$.DataSecurityConfig.DataLakeKmsKeyId') as data_security_config_data_lake_kms_key_id,
              JSON_EXTRACT(Properties, '$.DataSecurityConfig.VpcConfig') as data_security_config_vpc_config,
              JSON_EXTRACT(Properties, '$.FlywheelName') as flywheel_name,
              JSON_EXTRACT(Properties, '$.ModelType') as model_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TaskConfig.LanguageCode') as task_config_language_code,
              JSON_EXTRACT(Properties, '$.TaskConfig.DocumentClassificationConfig') as task_config_document_classification_config,
              JSON_EXTRACT(Properties, '$.TaskConfig.EntityRecognitionConfig') as task_config_entity_recognition_config,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Comprehend::Flywheel'
