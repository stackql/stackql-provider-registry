openapi: 3.0.0
info:
  title: Comprehend
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    DocumentClassifierInputDataConfig:
      type: object
      properties:
        AugmentedManifests:
          type: array
          items:
            $ref: '#/components/schemas/AugmentedManifestsListItem'
          x-insertionOrder: false
          uniqueItems: true
        DataFormat:
          type: string
          enum:
            - COMPREHEND_CSV
            - AUGMENTED_MANIFEST
        LabelDelimiter:
          type: string
          pattern: ^[ ~!@#$%^*\-_+=|\\:;\t>?/]$
          minLength: 1
          maxLength: 1
        DocumentType:
          type: string
          enum:
            - PLAIN_TEXT_DOCUMENT
            - SEMI_STRUCTURED_DOCUMENT
        Documents:
          $ref: '#/components/schemas/DocumentClassifierDocuments'
        DocumentReaderConfig:
          $ref: '#/components/schemas/DocumentReaderConfig'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
        TestS3Uri:
          $ref: '#/components/schemas/S3Uri'
      required: []
      additionalProperties: false
    AugmentedManifestsListItem:
      type: object
      properties:
        AttributeNames:
          type: array
          items:
            type: string
            pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 63
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
        Split:
          type: string
          enum:
            - TRAIN
            - TEST
      required:
        - AttributeNames
        - S3Uri
      additionalProperties: false
    DocumentClassifierDocuments:
      type: object
      properties:
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
        TestS3Uri:
          $ref: '#/components/schemas/S3Uri'
      required:
        - S3Uri
      additionalProperties: false
    DocumentReaderConfig:
      type: object
      properties:
        DocumentReadAction:
          type: string
          enum:
            - TEXTRACT_DETECT_DOCUMENT_TEXT
            - TEXTRACT_ANALYZE_DOCUMENT
        DocumentReadMode:
          type: string
          enum:
            - SERVICE_DEFAULT
            - FORCE_DOCUMENT_READ_ACTION
        FeatureTypes:
          type: array
          items:
            type: string
            enum:
              - TABLES
              - FORMS
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 2
      required:
        - DocumentReadAction
      additionalProperties: false
    DocumentClassifierOutputDataConfig:
      type: object
      properties:
        KmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        S3Uri:
          $ref: '#/components/schemas/S3Uri'
      required: []
      additionalProperties: false
    VpcConfig:
      type: object
      properties:
        SecurityGroupIds:
          type: array
          items:
            type: string
            pattern: '[-0-9a-zA-Z]+'
            minLength: 1
            maxLength: 32
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 5
        Subnets:
          type: array
          items:
            type: string
            pattern: '[-0-9a-zA-Z]+'
            minLength: 1
            maxLength: 32
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 16
      required:
        - SecurityGroupIds
        - Subnets
      additionalProperties: false
    S3Uri:
      type: string
      pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
      maxLength: 1024
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
    DocumentClassifier:
      type: object
      properties:
        DataAccessRoleArn:
          type: string
          pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
          minLength: 20
          maxLength: 2048
        InputDataConfig:
          $ref: '#/components/schemas/DocumentClassifierInputDataConfig'
        OutputDataConfig:
          $ref: '#/components/schemas/DocumentClassifierOutputDataConfig'
        LanguageCode:
          type: string
          enum:
            - en
            - es
            - fr
            - it
            - de
            - pt
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        ModelPolicy:
          type: string
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          minLength: 1
          maxLength: 20000
        DocumentClassifierName:
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        Mode:
          type: string
          enum:
            - MULTI_CLASS
            - MULTI_LABEL
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
        VersionName:
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
        Arn:
          type: string
          pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*(/version/[a-zA-Z0-9](-*[a-zA-Z0-9])*)?
          minLength: 1
          maxLength: 256
      required:
        - DocumentClassifierName
        - DataAccessRoleArn
        - InputDataConfig
        - LanguageCode
      x-stackql-resource-name: document_classifier
      description: Document Classifier enables training document classifier models.
      x-type-name: AWS::Comprehend::DocumentClassifier
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DataAccessRoleArn
        - InputDataConfig
        - OutputDataConfig
        - LanguageCode
        - ModelKmsKeyId
        - DocumentClassifierName
        - VersionName
        - Mode
        - VolumeKmsKeyId
        - VpcConfig
      x-read-only-properties:
        - Arn
      x-required-properties:
        - DocumentClassifierName
        - DataAccessRoleArn
        - InputDataConfig
        - LanguageCode
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - comprehend:TagResource
          - comprehend:UntagResource
      x-required-permissions:
        create:
          - iam:PassRole
          - comprehend:CreateDocumentClassifier
          - comprehend:DescribeDocumentClassifier
          - comprehend:DescribeResourcePolicy
          - comprehend:ListTagsForResource
          - textract:DetectDocumentText
        read:
          - comprehend:DescribeDocumentClassifier
          - comprehend:DescribeResourcePolicy
          - comprehend:ListTagsForResource
        update:
          - iam:PassRole
          - comprehend:PutResourcePolicy
          - comprehend:DeleteResourcePolicy
          - comprehend:DescribeResourcePolicy
          - comprehend:DescribeDocumentClassifier
          - comprehend:ListTagsForResource
          - comprehend:TagResource
          - comprehend:UntagResource
        delete:
          - comprehend:DescribeDocumentClassifier
          - comprehend:DeleteDocumentClassifier
        list:
          - comprehend:ListDocumentClassifiers
    TaskConfig:
      type: object
      properties:
        LanguageCode:
          type: string
          enum:
            - en
            - es
            - fr
            - it
            - de
            - pt
        DocumentClassificationConfig:
          $ref: '#/components/schemas/DocumentClassificationConfig'
        EntityRecognitionConfig:
          $ref: '#/components/schemas/EntityRecognitionConfig'
      required:
        - LanguageCode
      additionalProperties: false
    DataSecurityConfig:
      type: object
      properties:
        ModelKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        VolumeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        DataLakeKmsKeyId:
          $ref: '#/components/schemas/KmsKeyId'
        VpcConfig:
          $ref: '#/components/schemas/VpcConfig'
      required: []
      additionalProperties: false
    EntityTypesListItem:
      type: object
      properties:
        Type:
          type: string
          pattern: ^(?![^\n\r\t,]*\\n|\\r|\\t)[^\n\r\t,]+$
          minLength: 1
          maxLength: 64
      additionalProperties: false
      required:
        - Type
    EntityRecognitionConfig:
      type: object
      properties:
        EntityTypes:
          type: array
          items:
            $ref: '#/components/schemas/EntityTypesListItem'
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 25
      additionalProperties: false
    DocumentClassificationConfig:
      type: object
      properties:
        Mode:
          type: string
          enum:
            - MULTI_CLASS
            - MULTI_LABEL
        Labels:
          type: array
          items:
            type: string
            maxLength: 5000
          x-insertionOrder: false
          uniqueItems: true
          maxItems: 1000
      additionalProperties: false
      required:
        - Mode
    Flywheel:
      type: object
      properties:
        ActiveModelArn:
          type: string
          pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:(document-classifier|entity-recognizer)/[a-zA-Z0-9](-*[a-zA-Z0-9])*(/version/[a-zA-Z0-9](-*[a-zA-Z0-9])*)?
          maxLength: 256
        DataAccessRoleArn:
          type: string
          pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
          minLength: 20
          maxLength: 2048
        DataLakeS3Uri:
          type: string
          pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
          maxLength: 512
        DataSecurityConfig:
          $ref: '#/components/schemas/DataSecurityConfig'
        FlywheelName:
          type: string
          pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
          minLength: 1
          maxLength: 63
        ModelType:
          type: string
          enum:
            - DOCUMENT_CLASSIFIER
            - ENTITY_RECOGNIZER
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
        TaskConfig:
          $ref: '#/components/schemas/TaskConfig'
        Arn:
          type: string
          pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:flywheel/[a-zA-Z0-9](-*[a-zA-Z0-9])*
          minLength: 1
          maxLength: 256
      required:
        - FlywheelName
        - DataAccessRoleArn
        - DataLakeS3Uri
      x-stackql-resource-name: flywheel
      description: The AWS::Comprehend::Flywheel resource creates an Amazon Comprehend Flywheel that enables customer to train their model.
      x-type-name: AWS::Comprehend::Flywheel
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - FlywheelName
        - ModelType
        - DataLakeS3Uri
        - TaskConfig
      x-read-only-properties:
        - Arn
      x-required-properties:
        - FlywheelName
        - DataAccessRoleArn
        - DataLakeS3Uri
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:PassRole
          - comprehend:CreateFlywheel
          - comprehend:DescribeFlywheel
          - comprehend:ListTagsForResource
        read:
          - comprehend:DescribeFlywheel
          - comprehend:ListTagsForResource
        update:
          - iam:PassRole
          - comprehend:DescribeFlywheel
          - comprehend:UpdateFlywheel
          - comprehend:ListTagsForResource
          - comprehend:TagResource
          - comprehend:UntagResource
        delete:
          - comprehend:DeleteFlywheel
          - comprehend:DescribeFlywheel
        list:
          - comprehend:ListFlywheels
    CreateDocumentClassifierRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DataAccessRoleArn:
              type: string
              pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
              minLength: 20
              maxLength: 2048
            InputDataConfig:
              $ref: '#/components/schemas/DocumentClassifierInputDataConfig'
            OutputDataConfig:
              $ref: '#/components/schemas/DocumentClassifierOutputDataConfig'
            LanguageCode:
              type: string
              enum:
                - en
                - es
                - fr
                - it
                - de
                - pt
            ModelKmsKeyId:
              $ref: '#/components/schemas/KmsKeyId'
            ModelPolicy:
              type: string
              pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
              minLength: 1
              maxLength: 20000
            DocumentClassifierName:
              type: string
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
              minLength: 1
              maxLength: 63
            Mode:
              type: string
              enum:
                - MULTI_CLASS
                - MULTI_LABEL
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
            VersionName:
              type: string
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
              minLength: 1
              maxLength: 63
            VolumeKmsKeyId:
              $ref: '#/components/schemas/KmsKeyId'
            VpcConfig:
              $ref: '#/components/schemas/VpcConfig'
            Arn:
              type: string
              pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*(/version/[a-zA-Z0-9](-*[a-zA-Z0-9])*)?
              minLength: 1
              maxLength: 256
          x-stackQL-stringOnly: true
      x-title: CreateDocumentClassifierRequest
      type: object
      required: []
    CreateFlywheelRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ActiveModelArn:
              type: string
              pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:(document-classifier|entity-recognizer)/[a-zA-Z0-9](-*[a-zA-Z0-9])*(/version/[a-zA-Z0-9](-*[a-zA-Z0-9])*)?
              maxLength: 256
            DataAccessRoleArn:
              type: string
              pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
              minLength: 20
              maxLength: 2048
            DataLakeS3Uri:
              type: string
              pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
              maxLength: 512
            DataSecurityConfig:
              $ref: '#/components/schemas/DataSecurityConfig'
            FlywheelName:
              type: string
              pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$
              minLength: 1
              maxLength: 63
            ModelType:
              type: string
              enum:
                - DOCUMENT_CLASSIFIER
                - ENTITY_RECOGNIZER
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
            TaskConfig:
              $ref: '#/components/schemas/TaskConfig'
            Arn:
              type: string
              pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:flywheel/[a-zA-Z0-9](-*[a-zA-Z0-9])*
              minLength: 1
              maxLength: 256
          x-stackQL-stringOnly: true
      x-title: CreateFlywheelRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    document_classifiers:
      name: document_classifiers
      id: aws.comprehend.document_classifiers
      x-cfn-schema-name: DocumentClassifier
      x-cfn-type-name: AWS::Comprehend::DocumentClassifier
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DocumentClassifier&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Comprehend::DocumentClassifier"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Comprehend::DocumentClassifier"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Comprehend::DocumentClassifier"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/document_classifiers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/document_classifiers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/document_classifiers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DataAccessRoleArn') as data_access_role_arn,
              JSON_EXTRACT(Properties, '$.InputDataConfig') as input_data_config,
              JSON_EXTRACT(Properties, '$.OutputDataConfig') as output_data_config,
              JSON_EXTRACT(Properties, '$.LanguageCode') as language_code,
              JSON_EXTRACT(Properties, '$.ModelKmsKeyId') as model_kms_key_id,
              JSON_EXTRACT(Properties, '$.ModelPolicy') as model_policy,
              JSON_EXTRACT(Properties, '$.DocumentClassifierName') as document_classifier_name,
              JSON_EXTRACT(Properties, '$.Mode') as mode,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VersionName') as version_name,
              JSON_EXTRACT(Properties, '$.VolumeKmsKeyId') as volume_kms_key_id,
              JSON_EXTRACT(Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Comprehend::DocumentClassifier'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DataAccessRoleArn') as data_access_role_arn,
                JSON_EXTRACT(detail.Properties, '$.InputDataConfig') as input_data_config,
                JSON_EXTRACT(detail.Properties, '$.OutputDataConfig') as output_data_config,
                JSON_EXTRACT(detail.Properties, '$.LanguageCode') as language_code,
                JSON_EXTRACT(detail.Properties, '$.ModelKmsKeyId') as model_kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.ModelPolicy') as model_policy,
                JSON_EXTRACT(detail.Properties, '$.DocumentClassifierName') as document_classifier_name,
                JSON_EXTRACT(detail.Properties, '$.Mode') as mode,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.VersionName') as version_name,
                JSON_EXTRACT(detail.Properties, '$.VolumeKmsKeyId') as volume_kms_key_id,
                JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                AND detail.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DataAccessRoleArn') as data_access_role_arn,
                  json_extract_path_text(Properties, 'InputDataConfig') as input_data_config,
                  json_extract_path_text(Properties, 'OutputDataConfig') as output_data_config,
                  json_extract_path_text(Properties, 'LanguageCode') as language_code,
                  json_extract_path_text(Properties, 'ModelKmsKeyId') as model_kms_key_id,
                  json_extract_path_text(Properties, 'ModelPolicy') as model_policy,
                  json_extract_path_text(Properties, 'DocumentClassifierName') as document_classifier_name,
                  json_extract_path_text(Properties, 'Mode') as mode,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'VersionName') as version_name,
                  json_extract_path_text(Properties, 'VolumeKmsKeyId') as volume_kms_key_id,
                  json_extract_path_text(Properties, 'VpcConfig') as vpc_config,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DataAccessRoleArn') as data_access_role_arn,
                    json_extract_path_text(detail.Properties, 'InputDataConfig') as input_data_config,
                    json_extract_path_text(detail.Properties, 'OutputDataConfig') as output_data_config,
                    json_extract_path_text(detail.Properties, 'LanguageCode') as language_code,
                    json_extract_path_text(detail.Properties, 'ModelKmsKeyId') as model_kms_key_id,
                    json_extract_path_text(detail.Properties, 'ModelPolicy') as model_policy,
                    json_extract_path_text(detail.Properties, 'DocumentClassifierName') as document_classifier_name,
                    json_extract_path_text(detail.Properties, 'Mode') as mode,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'VersionName') as version_name,
                    json_extract_path_text(detail.Properties, 'VolumeKmsKeyId') as volume_kms_key_id,
                    json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                    AND detail.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                    AND listing.region = 'us-east-1'
    document_classifiers_list_only:
      name: document_classifiers_list_only
      id: aws.comprehend.document_classifiers_list_only
      x-cfn-schema-name: DocumentClassifier
      x-cfn-type-name: AWS::Comprehend::DocumentClassifier
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Comprehend::DocumentClassifier'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                AND region = 'us-east-1'
    document_classifier_tags:
      name: document_classifier_tags
      id: aws.comprehend.document_classifier_tags
      x-cfn-schema-name: DocumentClassifier
      x-cfn-type-name: AWS::Comprehend::DocumentClassifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DataAccessRoleArn') as data_access_role_arn,
              JSON_EXTRACT(detail.Properties, '$.InputDataConfig') as input_data_config,
              JSON_EXTRACT(detail.Properties, '$.OutputDataConfig') as output_data_config,
              JSON_EXTRACT(detail.Properties, '$.LanguageCode') as language_code,
              JSON_EXTRACT(detail.Properties, '$.ModelKmsKeyId') as model_kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.ModelPolicy') as model_policy,
              JSON_EXTRACT(detail.Properties, '$.DocumentClassifierName') as document_classifier_name,
              JSON_EXTRACT(detail.Properties, '$.Mode') as mode,
              JSON_EXTRACT(detail.Properties, '$.VersionName') as version_name,
              JSON_EXTRACT(detail.Properties, '$.VolumeKmsKeyId') as volume_kms_key_id,
              JSON_EXTRACT(detail.Properties, '$.VpcConfig') as vpc_config,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
              AND detail.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DataAccessRoleArn') as data_access_role_arn,
                json_extract_path_text(detail.Properties, 'InputDataConfig') as input_data_config,
                json_extract_path_text(detail.Properties, 'OutputDataConfig') as output_data_config,
                json_extract_path_text(detail.Properties, 'LanguageCode') as language_code,
                json_extract_path_text(detail.Properties, 'ModelKmsKeyId') as model_kms_key_id,
                json_extract_path_text(detail.Properties, 'ModelPolicy') as model_policy,
                json_extract_path_text(detail.Properties, 'DocumentClassifierName') as document_classifier_name,
                json_extract_path_text(detail.Properties, 'Mode') as mode,
                json_extract_path_text(detail.Properties, 'VersionName') as version_name,
                json_extract_path_text(detail.Properties, 'VolumeKmsKeyId') as volume_kms_key_id,
                json_extract_path_text(detail.Properties, 'VpcConfig') as vpc_config,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                AND detail.data__TypeName = 'AWS::Comprehend::DocumentClassifier'
                AND listing.region = 'us-east-1'
    flywheels:
      name: flywheels
      id: aws.comprehend.flywheels
      x-cfn-schema-name: Flywheel
      x-cfn-type-name: AWS::Comprehend::Flywheel
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Flywheel&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Comprehend::Flywheel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Comprehend::Flywheel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Comprehend::Flywheel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/flywheels/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/flywheels/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/flywheels/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ActiveModelArn') as active_model_arn,
              JSON_EXTRACT(Properties, '$.DataAccessRoleArn') as data_access_role_arn,
              JSON_EXTRACT(Properties, '$.DataLakeS3Uri') as data_lake_s3_uri,
              JSON_EXTRACT(Properties, '$.DataSecurityConfig') as data_security_config,
              JSON_EXTRACT(Properties, '$.FlywheelName') as flywheel_name,
              JSON_EXTRACT(Properties, '$.ModelType') as model_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TaskConfig') as task_config,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Comprehend::Flywheel'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ActiveModelArn') as active_model_arn,
                JSON_EXTRACT(detail.Properties, '$.DataAccessRoleArn') as data_access_role_arn,
                JSON_EXTRACT(detail.Properties, '$.DataLakeS3Uri') as data_lake_s3_uri,
                JSON_EXTRACT(detail.Properties, '$.DataSecurityConfig') as data_security_config,
                JSON_EXTRACT(detail.Properties, '$.FlywheelName') as flywheel_name,
                JSON_EXTRACT(detail.Properties, '$.ModelType') as model_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TaskConfig') as task_config,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Comprehend::Flywheel'
                AND detail.data__TypeName = 'AWS::Comprehend::Flywheel'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ActiveModelArn') as active_model_arn,
                  json_extract_path_text(Properties, 'DataAccessRoleArn') as data_access_role_arn,
                  json_extract_path_text(Properties, 'DataLakeS3Uri') as data_lake_s3_uri,
                  json_extract_path_text(Properties, 'DataSecurityConfig') as data_security_config,
                  json_extract_path_text(Properties, 'FlywheelName') as flywheel_name,
                  json_extract_path_text(Properties, 'ModelType') as model_type,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TaskConfig') as task_config,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Comprehend::Flywheel'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ActiveModelArn') as active_model_arn,
                    json_extract_path_text(detail.Properties, 'DataAccessRoleArn') as data_access_role_arn,
                    json_extract_path_text(detail.Properties, 'DataLakeS3Uri') as data_lake_s3_uri,
                    json_extract_path_text(detail.Properties, 'DataSecurityConfig') as data_security_config,
                    json_extract_path_text(detail.Properties, 'FlywheelName') as flywheel_name,
                    json_extract_path_text(detail.Properties, 'ModelType') as model_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TaskConfig') as task_config,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Comprehend::Flywheel'
                    AND detail.data__TypeName = 'AWS::Comprehend::Flywheel'
                    AND listing.region = 'us-east-1'
    flywheels_list_only:
      name: flywheels_list_only
      id: aws.comprehend.flywheels_list_only
      x-cfn-schema-name: Flywheel
      x-cfn-type-name: AWS::Comprehend::Flywheel
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Comprehend::Flywheel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Comprehend::Flywheel'
                AND region = 'us-east-1'
    flywheel_tags:
      name: flywheel_tags
      id: aws.comprehend.flywheel_tags
      x-cfn-schema-name: Flywheel
      x-cfn-type-name: AWS::Comprehend::Flywheel
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ActiveModelArn') as active_model_arn,
              JSON_EXTRACT(detail.Properties, '$.DataAccessRoleArn') as data_access_role_arn,
              JSON_EXTRACT(detail.Properties, '$.DataLakeS3Uri') as data_lake_s3_uri,
              JSON_EXTRACT(detail.Properties, '$.DataSecurityConfig') as data_security_config,
              JSON_EXTRACT(detail.Properties, '$.FlywheelName') as flywheel_name,
              JSON_EXTRACT(detail.Properties, '$.ModelType') as model_type,
              JSON_EXTRACT(detail.Properties, '$.TaskConfig') as task_config,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Comprehend::Flywheel'
              AND detail.data__TypeName = 'AWS::Comprehend::Flywheel'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ActiveModelArn') as active_model_arn,
                json_extract_path_text(detail.Properties, 'DataAccessRoleArn') as data_access_role_arn,
                json_extract_path_text(detail.Properties, 'DataLakeS3Uri') as data_lake_s3_uri,
                json_extract_path_text(detail.Properties, 'DataSecurityConfig') as data_security_config,
                json_extract_path_text(detail.Properties, 'FlywheelName') as flywheel_name,
                json_extract_path_text(detail.Properties, 'ModelType') as model_type,
                json_extract_path_text(detail.Properties, 'TaskConfig') as task_config,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Comprehend::Flywheel'
                AND detail.data__TypeName = 'AWS::Comprehend::Flywheel'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DocumentClassifier&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDocumentClassifier
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDocumentClassifierRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Flywheel&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFlywheel
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFlywheelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
