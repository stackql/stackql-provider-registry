openapi: 3.0.0
info:
  title: QBusiness
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ApplicationStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
        - UPDATING
    AttachmentsConfiguration:
      type: object
      properties:
        AttachmentsControlMode:
          $ref: '#/components/schemas/AttachmentsControlMode'
      required:
        - AttachmentsControlMode
      additionalProperties: false
    AttachmentsControlMode:
      type: string
      enum:
        - ENABLED
        - DISABLED
    AutoSubscriptionConfiguration:
      type: object
      properties:
        AutoSubscribe:
          $ref: '#/components/schemas/AutoSubscriptionStatus'
        DefaultSubscriptionType:
          $ref: '#/components/schemas/SubscriptionType'
      required:
        - AutoSubscribe
      additionalProperties: false
    AutoSubscriptionStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    EncryptionConfiguration:
      type: object
      properties:
        KmsKeyId:
          type: string
          maxLength: 2048
          minLength: 1
      additionalProperties: false
    IdentityType:
      type: string
      enum:
        - AWS_IAM_IDP_SAML
        - AWS_IAM_IDP_OIDC
        - AWS_IAM_IDC
        - AWS_QUICKSIGHT_IDP
    PersonalizationConfiguration:
      type: object
      properties:
        PersonalizationControlMode:
          $ref: '#/components/schemas/PersonalizationControlMode'
      required:
        - PersonalizationControlMode
      additionalProperties: false
    PersonalizationControlMode:
      type: string
      enum:
        - ENABLED
        - DISABLED
    QAppsConfiguration:
      type: object
      properties:
        QAppsControlMode:
          $ref: '#/components/schemas/QAppsControlMode'
      required:
        - QAppsControlMode
      additionalProperties: false
    QAppsControlMode:
      type: string
      enum:
        - ENABLED
        - DISABLED
    QuickSightConfiguration:
      type: object
      properties:
        ClientNamespace:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9._-]*$
      required:
        - ClientNamespace
      additionalProperties: false
    SubscriptionType:
      type: string
      enum:
        - Q_LITE
        - Q_BUSINESS
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    Application:
      type: object
      properties:
        ApplicationArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        AttachmentsConfiguration:
          $ref: '#/components/schemas/AttachmentsConfiguration'
        AutoSubscriptionConfiguration:
          $ref: '#/components/schemas/AutoSubscriptionConfiguration'
        ClientIdsForOIDC:
          type: array
          items:
            type: string
            maxLength: 255
            minLength: 1
            pattern: ^[a-zA-Z0-9_.:/()*?=-]*$
        CreatedAt:
          type: string
          format: date-time
        Description:
          type: string
          maxLength: 1000
          minLength: 0
          pattern: ^[\s\S]*$
        DisplayName:
          type: string
          maxLength: 1000
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        IamIdentityProviderArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws:iam::\d{12}:(oidc-provider|saml-provider)/[a-zA-Z0-9_\.\/@\-]+$
        IdentityCenterApplicationArn:
          type: string
          maxLength: 1224
          minLength: 10
          pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}$
        IdentityCenterInstanceArn:
          type: string
          maxLength: 1224
          minLength: 10
          pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$
        IdentityType:
          $ref: '#/components/schemas/IdentityType'
        PersonalizationConfiguration:
          $ref: '#/components/schemas/PersonalizationConfiguration'
        QAppsConfiguration:
          $ref: '#/components/schemas/QAppsConfiguration'
        QuickSightConfiguration:
          $ref: '#/components/schemas/QuickSightConfiguration'
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        Status:
          $ref: '#/components/schemas/ApplicationStatus'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        UpdatedAt:
          type: string
          format: date-time
      required:
        - DisplayName
      x-stackql-resource-name: application
      description: Definition of AWS::QBusiness::Application Resource Type
      x-type-name: AWS::QBusiness::Application
      x-stackql-primary-identifier:
        - ApplicationId
      x-create-only-properties:
        - ClientIdsForOIDC
        - EncryptionConfiguration
        - IamIdentityProviderArn
        - IdentityType
        - QuickSightConfiguration
      x-write-only-properties:
        - IdentityCenterInstanceArn
      x-read-only-properties:
        - ApplicationArn
        - ApplicationId
        - CreatedAt
        - IdentityCenterApplicationArn
        - Status
        - UpdatedAt
      x-required-properties:
        - DisplayName
      x-tagging:
        taggable: true
        tagUpdatable: true
        tagOnCreate: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - qbusiness:UntagResource
          - qbusiness:TagResource
          - qbusiness:ListTagsForResource
      x-required-permissions:
        create:
          - iam:GetSAMLProvider
          - iam:PassRole
          - kms:CreateGrant
          - kms:DescribeKey
          - qbusiness:CreateApplication
          - qbusiness:GetApplication
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UpdateApplication
          - quicksight:DescribeAccountSubscription
          - quicksight:ListNamespaces
          - sso:CreateApplication
          - sso:DeleteApplication
          - sso:DescribeInstance
          - sso:PutApplicationAccessScope
          - sso:PutApplicationAuthenticationMethod
          - sso:PutApplicationGrant
        read:
          - qbusiness:GetApplication
          - qbusiness:ListTagsForResource
        update:
          - iam:PassRole
          - qbusiness:GetApplication
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdateApplication
          - sso:CreateApplication
          - sso:DeleteApplication
          - sso:DescribeInstance
          - sso:PutApplicationAccessScope
          - sso:PutApplicationAuthenticationMethod
          - sso:PutApplicationGrant
        delete:
          - kms:RetireGrant
          - qbusiness:DeleteApplication
          - qbusiness:GetApplication
          - sso:DeleteApplication
        list:
          - qbusiness:ListApplications
    ActionConfiguration:
      type: object
      properties:
        Action:
          type: string
          pattern: ^qbusiness:[a-zA-Z]+$
        FilterConfiguration:
          $ref: '#/components/schemas/ActionFilterConfiguration'
      required:
        - Action
      additionalProperties: false
    ActionFilterConfiguration:
      type: object
      properties:
        DocumentAttributeFilter:
          $ref: '#/components/schemas/AttributeFilter'
      required:
        - DocumentAttributeFilter
      additionalProperties: false
    AttributeFilter:
      type: object
      properties:
        AndAllFilters:
          type: array
          items:
            $ref: '#/components/schemas/AttributeFilter'
        OrAllFilters:
          type: array
          items:
            $ref: '#/components/schemas/AttributeFilter'
        NotFilter:
          $ref: '#/components/schemas/AttributeFilter'
        EqualsTo:
          $ref: '#/components/schemas/DocumentAttribute'
        ContainsAll:
          $ref: '#/components/schemas/DocumentAttribute'
        ContainsAny:
          $ref: '#/components/schemas/DocumentAttribute'
        GreaterThan:
          $ref: '#/components/schemas/DocumentAttribute'
        GreaterThanOrEquals:
          $ref: '#/components/schemas/DocumentAttribute'
        LessThan:
          $ref: '#/components/schemas/DocumentAttribute'
        LessThanOrEquals:
          $ref: '#/components/schemas/DocumentAttribute'
      additionalProperties: false
    DocumentAttribute:
      type: object
      properties:
        Name:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[a-zA-Z0-9_][a-zA-Z0-9_-]*$
        Value:
          $ref: '#/components/schemas/DocumentAttributeValue'
      required:
        - Name
        - Value
      additionalProperties: false
    DocumentAttributeValue:
      oneOf:
        - type: object
          title: StringValue
          properties:
            StringValue:
              type: string
              maxLength: 2048
          required:
            - StringValue
          additionalProperties: false
        - type: object
          title: StringListValue
          properties:
            StringListValue:
              type: array
              x-insertionOrder: true
              items:
                type: string
                maxLength: 2048
                minLength: 1
          required:
            - StringListValue
          additionalProperties: false
        - type: object
          title: LongValue
          properties:
            LongValue:
              type: number
          required:
            - LongValue
          additionalProperties: false
        - type: object
          title: DateValue
          properties:
            DateValue:
              type: string
              format: date-time
          required:
            - DateValue
          additionalProperties: false
    Unit:
      type: object
      additionalProperties: false
    DataAccessor:
      type: object
      properties:
        ActionConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/ActionConfiguration'
          maxItems: 10
          minItems: 1
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        CreatedAt:
          type: string
          format: date-time
        DataAccessorArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        DataAccessorId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        IdcApplicationArn:
          type: string
          maxLength: 1224
          minLength: 10
          pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}$
        Principal:
          type: string
          maxLength: 1284
          minLength: 1
          pattern: ^arn:aws:iam::[0-9]{12}:role/[a-zA-Z0-9_/+=,.@-]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        UpdatedAt:
          type: string
          format: date-time
      required:
        - ApplicationId
        - ActionConfigurations
        - DisplayName
        - Principal
      x-stackql-resource-name: data_accessor
      description: Definition of AWS::QBusiness::DataAccessor Resource Type
      x-type-name: AWS::QBusiness::DataAccessor
      x-stackql-primary-identifier:
        - ApplicationId
        - DataAccessorId
      x-create-only-properties:
        - ApplicationId
        - Principal
      x-read-only-properties:
        - CreatedAt
        - DataAccessorArn
        - DataAccessorId
        - IdcApplicationArn
        - UpdatedAt
      x-required-properties:
        - ApplicationId
        - ActionConfigurations
        - DisplayName
        - Principal
      x-tagging:
        taggable: true
        tagUpdatable: true
        tagOnCreate: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - qbusiness:UntagResource
          - qbusiness:TagResource
          - qbusiness:ListTagsForResource
      x-required-permissions:
        create:
          - qbusiness:CreateDataAccessor
          - qbusiness:GetDataAccessor
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - sso:CreateApplication
          - sso:PutApplicationAuthenticationMethod
          - sso:PutApplicationGrant
          - sso:PutApplicationAccessScope
        read:
          - qbusiness:GetDataAccessor
          - qbusiness:ListTagsForResource
        update:
          - qbusiness:GetDataAccessor
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdateDataAccessor
        delete:
          - qbusiness:DeleteDataAccessor
          - qbusiness:GetDataAccessor
          - sso:DeleteApplication
        list:
          - qbusiness:ListDataAccessors
    AttributeValueOperator:
      type: string
      enum:
        - DELETE
    DataSourceStatus:
      type: string
      enum:
        - PENDING_CREATION
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
        - UPDATING
    DataSourceVpcConfiguration:
      type: object
      properties:
        SubnetIds:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 200
            minLength: 1
            pattern: ^[-0-9a-zA-Z]+$
        SecurityGroupIds:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 200
            minLength: 1
            pattern: ^[-0-9a-zA-Z]+$
          maxItems: 10
          minItems: 1
      required:
        - SecurityGroupIds
        - SubnetIds
      additionalProperties: false
    DocumentAttributeCondition:
      type: object
      properties:
        Key:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[a-zA-Z0-9_][a-zA-Z0-9_-]*$
        Operator:
          $ref: '#/components/schemas/DocumentEnrichmentConditionOperator'
        Value:
          $ref: '#/components/schemas/DocumentAttributeValue'
      required:
        - Key
        - Operator
      additionalProperties: false
    DocumentAttributeTarget:
      type: object
      properties:
        Key:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[a-zA-Z0-9_][a-zA-Z0-9_-]*$
        Value:
          $ref: '#/components/schemas/DocumentAttributeValue'
        AttributeValueOperator:
          $ref: '#/components/schemas/AttributeValueOperator'
      required:
        - Key
      additionalProperties: false
    DocumentContentOperator:
      type: string
      enum:
        - DELETE
    DocumentEnrichmentConditionOperator:
      type: string
      enum:
        - GREATER_THAN
        - GREATER_THAN_OR_EQUALS
        - LESS_THAN
        - LESS_THAN_OR_EQUALS
        - EQUALS
        - NOT_EQUALS
        - CONTAINS
        - NOT_CONTAINS
        - EXISTS
        - NOT_EXISTS
        - BEGINS_WITH
    ImageExtractionStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ImageExtractionConfiguration:
      type: object
      properties:
        ImageExtractionStatus:
          $ref: '#/components/schemas/ImageExtractionStatus'
      required:
        - ImageExtractionStatus
      additionalProperties: false
    MediaExtractionConfiguration:
      type: object
      properties:
        ImageExtractionConfiguration:
          $ref: '#/components/schemas/ImageExtractionConfiguration'
      additionalProperties: false
    DocumentEnrichmentConfiguration:
      type: object
      properties:
        InlineConfigurations:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/InlineDocumentEnrichmentConfiguration'
          maxItems: 100
          minItems: 1
        PreExtractionHookConfiguration:
          $ref: '#/components/schemas/HookConfiguration'
        PostExtractionHookConfiguration:
          $ref: '#/components/schemas/HookConfiguration'
      additionalProperties: false
    HookConfiguration:
      type: object
      properties:
        InvocationCondition:
          $ref: '#/components/schemas/DocumentAttributeCondition'
        LambdaArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws[a-zA-Z-]*:lambda:[a-z-]*-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?$
        S3BucketName:
          type: string
          maxLength: 63
          minLength: 1
          pattern: ^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
      additionalProperties: false
    InlineDocumentEnrichmentConfiguration:
      type: object
      properties:
        Condition:
          $ref: '#/components/schemas/DocumentAttributeCondition'
        Target:
          $ref: '#/components/schemas/DocumentAttributeTarget'
        DocumentContentOperator:
          $ref: '#/components/schemas/DocumentContentOperator'
      additionalProperties: false
    DataSource:
      type: object
      properties:
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        Configuration: {}
        CreatedAt:
          type: string
          format: date-time
        DataSourceArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        DataSourceId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        Description:
          type: string
          maxLength: 1000
          minLength: 0
          pattern: ^[\s\S]*$
        DisplayName:
          type: string
          maxLength: 1000
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        DocumentEnrichmentConfiguration:
          $ref: '#/components/schemas/DocumentEnrichmentConfiguration'
        MediaExtractionConfiguration:
          $ref: '#/components/schemas/MediaExtractionConfiguration'
        IndexId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        Status:
          $ref: '#/components/schemas/DataSourceStatus'
        SyncSchedule:
          type: string
          maxLength: 998
          pattern: ^[\s\S]*$
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        Type:
          type: string
          maxLength: 2048
          minLength: 1
        UpdatedAt:
          type: string
          format: date-time
        VpcConfiguration:
          $ref: '#/components/schemas/DataSourceVpcConfiguration'
      required:
        - ApplicationId
        - IndexId
        - Configuration
        - DisplayName
      x-stackql-resource-name: data_source
      description: Definition of AWS::QBusiness::DataSource Resource Type
      x-type-name: AWS::QBusiness::DataSource
      x-stackql-primary-identifier:
        - ApplicationId
        - DataSourceId
        - IndexId
      x-create-only-properties:
        - ApplicationId
        - IndexId
      x-read-only-properties:
        - CreatedAt
        - DataSourceArn
        - DataSourceId
        - Status
        - Type
        - UpdatedAt
      x-required-properties:
        - ApplicationId
        - IndexId
        - Configuration
        - DisplayName
      x-tagging:
        taggable: true
      x-required-permissions:
        create:
          - iam:PassRole
          - qbusiness:CreateDataSource
          - qbusiness:GetDataSource
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
        read:
          - qbusiness:GetDataSource
          - qbusiness:ListTagsForResource
        update:
          - iam:PassRole
          - qbusiness:GetDataSource
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdateDataSource
        delete:
          - qbusiness:DeleteDataSource
          - qbusiness:GetDataSource
        list:
          - qbusiness:ListDataSources
    AttributeType:
      type: string
      enum:
        - STRING
        - STRING_LIST
        - NUMBER
        - DATE
    DocumentAttributeConfiguration:
      type: object
      properties:
        Name:
          type: string
          maxLength: 30
          minLength: 1
          pattern: ^[a-zA-Z0-9_][a-zA-Z0-9_-]*$
        Type:
          $ref: '#/components/schemas/AttributeType'
        Search:
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    IndexCapacityConfiguration:
      type: object
      properties:
        Units:
          type: number
          minimum: 1
      additionalProperties: false
    IndexStatistics:
      type: object
      properties:
        TextDocumentStatistics:
          $ref: '#/components/schemas/TextDocumentStatistics'
      additionalProperties: false
    IndexStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
        - UPDATING
    IndexType:
      type: string
      enum:
        - ENTERPRISE
        - STARTER
    Status:
      type: string
      enum:
        - ENABLED
        - DISABLED
    TextDocumentStatistics:
      type: object
      properties:
        IndexedTextBytes:
          type: number
          minimum: 0
        IndexedTextDocumentCount:
          type: number
          minimum: 0
      additionalProperties: false
    Index:
      type: object
      properties:
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        CapacityConfiguration:
          $ref: '#/components/schemas/IndexCapacityConfiguration'
        CreatedAt:
          type: string
          format: date-time
        Description:
          type: string
          maxLength: 1000
          minLength: 0
          pattern: ^[\s\S]*$
        DisplayName:
          type: string
          maxLength: 1000
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        DocumentAttributeConfigurations:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DocumentAttributeConfiguration'
          maxItems: 500
          minItems: 1
        IndexArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        IndexId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        IndexStatistics:
          $ref: '#/components/schemas/IndexStatistics'
        Type:
          $ref: '#/components/schemas/IndexType'
        Status:
          $ref: '#/components/schemas/IndexStatus'
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        UpdatedAt:
          type: string
          format: date-time
      required:
        - ApplicationId
        - DisplayName
      x-stackql-resource-name: index
      description: Definition of AWS::QBusiness::Index Resource Type
      x-type-name: AWS::QBusiness::Index
      x-stackql-primary-identifier:
        - ApplicationId
        - IndexId
      x-create-only-properties:
        - ApplicationId
        - Type
      x-read-only-properties:
        - CreatedAt
        - IndexArn
        - IndexId
        - IndexStatistics
        - Status
        - UpdatedAt
      x-required-properties:
        - ApplicationId
        - DisplayName
      x-tagging:
        taggable: true
      x-required-permissions:
        create:
          - qbusiness:CreateIndex
          - qbusiness:GetIndex
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UpdateIndex
        read:
          - qbusiness:GetIndex
          - qbusiness:ListTagsForResource
        update:
          - qbusiness:GetIndex
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdateIndex
        delete:
          - qbusiness:DeleteIndex
          - qbusiness:GetIndex
        list:
          - qbusiness:ListIndices
    Permission:
      type: object
      properties:
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        StatementId:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
        Actions:
          type: array
          items:
            type: string
            pattern: ^qbusiness:[a-zA-Z]+$
          maxItems: 10
          minItems: 1
        Principal:
          type: string
          maxLength: 1284
          minLength: 1
          pattern: ^arn:aws:iam::[0-9]{12}:role/[a-zA-Z0-9_/+=,.@-]+$
      required:
        - ApplicationId
        - StatementId
        - Actions
        - Principal
      x-stackql-resource-name: permission
      description: Definition of AWS::QBusiness::Permission Resource Type
      x-type-name: AWS::QBusiness::Permission
      x-stackql-primary-identifier:
        - ApplicationId
        - StatementId
      x-create-only-properties:
        - ApplicationId
        - StatementId
        - Actions
        - Principal
      x-required-properties:
        - ApplicationId
        - StatementId
        - Actions
        - Principal
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - qbusiness:AssociatePermission
          - qbusiness:PutResourcePolicy
        read:
          - qbusiness:GetPolicy
        delete:
          - qbusiness:DisassociatePermission
          - qbusiness:PutResourcePolicy
        list:
          - qbusiness:GetPolicy
    APISchema:
      oneOf:
        - type: object
          title: Payload
          properties:
            Payload:
              type: string
          required:
            - Payload
          additionalProperties: false
        - type: object
          title: S3
          properties:
            S3:
              $ref: '#/components/schemas/S3'
          required:
            - S3
          additionalProperties: false
    APISchemaType:
      type: string
      enum:
        - OPEN_API_V3
    BasicAuthConfiguration:
      type: object
      properties:
        SecretArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
      required:
        - RoleArn
        - SecretArn
      additionalProperties: false
    CustomPluginConfiguration:
      type: object
      properties:
        Description:
          type: string
          maxLength: 200
          minLength: 1
        ApiSchemaType:
          $ref: '#/components/schemas/APISchemaType'
        ApiSchema:
          $ref: '#/components/schemas/APISchema'
      required:
        - ApiSchema
        - ApiSchemaType
        - Description
      additionalProperties: false
    NoAuthConfiguration:
      type: object
      additionalProperties: false
    OAuth2ClientCredentialConfiguration:
      type: object
      properties:
        SecretArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        AuthorizationUrl:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^(https?|ftp|file)://([^\s]*)$
        TokenUrl:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^(https?|ftp|file)://([^\s]*)$
      required:
        - RoleArn
        - SecretArn
      additionalProperties: false
    PluginAuthConfiguration:
      oneOf:
        - type: object
          title: BasicAuthConfiguration
          properties:
            BasicAuthConfiguration:
              $ref: '#/components/schemas/BasicAuthConfiguration'
          required:
            - BasicAuthConfiguration
          additionalProperties: false
        - type: object
          title: OAuth2ClientCredentialConfiguration
          properties:
            OAuth2ClientCredentialConfiguration:
              $ref: '#/components/schemas/OAuth2ClientCredentialConfiguration'
          required:
            - OAuth2ClientCredentialConfiguration
          additionalProperties: false
        - type: object
          title: NoAuthConfiguration
          properties:
            NoAuthConfiguration:
              $ref: '#/components/schemas/NoAuthConfiguration'
          required:
            - NoAuthConfiguration
          additionalProperties: false
    PluginBuildStatus:
      type: string
      enum:
        - READY
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
    PluginState:
      type: string
      enum:
        - ENABLED
        - DISABLED
    PluginType:
      type: string
      enum:
        - SERVICE_NOW
        - SALESFORCE
        - JIRA
        - ZENDESK
        - CUSTOM
        - QUICKSIGHT
        - SERVICENOW_NOW_PLATFORM
        - JIRA_CLOUD
        - SALESFORCE_CRM
        - ZENDESK_SUITE
        - ATLASSIAN_CONFLUENCE
        - GOOGLE_CALENDAR
        - MICROSOFT_TEAMS
        - MICROSOFT_EXCHANGE
        - PAGERDUTY_ADVANCE
        - SMARTSHEET
        - ASANA
    S3:
      type: object
      properties:
        Bucket:
          type: string
          maxLength: 63
          minLength: 1
          pattern: ^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$
        Key:
          type: string
          maxLength: 1024
          minLength: 1
      required:
        - Bucket
        - Key
      additionalProperties: false
    Plugin:
      type: object
      properties:
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        AuthConfiguration:
          $ref: '#/components/schemas/PluginAuthConfiguration'
        BuildStatus:
          $ref: '#/components/schemas/PluginBuildStatus'
        CreatedAt:
          type: string
          format: date-time
        CustomPluginConfiguration:
          $ref: '#/components/schemas/CustomPluginConfiguration'
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        PluginArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        PluginId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        ServerUrl:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^(https?|ftp|file)://([^\s]*)$
        State:
          $ref: '#/components/schemas/PluginState'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        Type:
          $ref: '#/components/schemas/PluginType'
        UpdatedAt:
          type: string
          format: date-time
      required:
        - AuthConfiguration
        - DisplayName
        - Type
      x-stackql-resource-name: plugin
      description: Definition of AWS::QBusiness::Plugin Resource Type
      x-type-name: AWS::QBusiness::Plugin
      x-stackql-primary-identifier:
        - ApplicationId
        - PluginId
      x-create-only-properties:
        - ApplicationId
        - Type
      x-read-only-properties:
        - BuildStatus
        - CreatedAt
        - PluginArn
        - PluginId
        - UpdatedAt
      x-required-properties:
        - AuthConfiguration
        - DisplayName
        - Type
      x-tagging:
        taggable: true
        tagUpdatable: true
        tagOnCreate: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - qbusiness:UntagResource
          - qbusiness:TagResource
          - qbusiness:ListTagsForResource
      x-required-permissions:
        create:
          - iam:PassRole
          - qbusiness:CreatePlugin
          - qbusiness:GetPlugin
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
        read:
          - qbusiness:GetPlugin
          - qbusiness:ListTagsForResource
        update:
          - iam:PassRole
          - qbusiness:GetPlugin
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdatePlugin
        delete:
          - qbusiness:DeletePlugin
          - qbusiness:GetPlugin
        list:
          - qbusiness:ListPlugins
    KendraIndexConfiguration:
      type: object
      properties:
        IndexId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
      required:
        - IndexId
      additionalProperties: false
    NativeIndexConfiguration:
      type: object
      properties:
        IndexId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
      required:
        - IndexId
      additionalProperties: false
    RetrieverConfiguration:
      oneOf:
        - type: object
          title: NativeIndexConfiguration
          properties:
            NativeIndexConfiguration:
              $ref: '#/components/schemas/NativeIndexConfiguration'
          required:
            - NativeIndexConfiguration
          additionalProperties: false
        - type: object
          title: KendraIndexConfiguration
          properties:
            KendraIndexConfiguration:
              $ref: '#/components/schemas/KendraIndexConfiguration'
          required:
            - KendraIndexConfiguration
          additionalProperties: false
    RetrieverStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - FAILED
    RetrieverType:
      type: string
      enum:
        - NATIVE_INDEX
        - KENDRA_INDEX
    Retriever:
      type: object
      properties:
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        Configuration:
          $ref: '#/components/schemas/RetrieverConfiguration'
        CreatedAt:
          type: string
          format: date-time
        DisplayName:
          type: string
          maxLength: 1000
          minLength: 1
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
        RetrieverArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        RetrieverId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        Status:
          $ref: '#/components/schemas/RetrieverStatus'
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        Type:
          $ref: '#/components/schemas/RetrieverType'
        UpdatedAt:
          type: string
          format: date-time
      required:
        - ApplicationId
        - Configuration
        - DisplayName
        - Type
      x-stackql-resource-name: retriever
      description: Definition of AWS::QBusiness::Retriever Resource Type
      x-type-name: AWS::QBusiness::Retriever
      x-stackql-primary-identifier:
        - ApplicationId
        - RetrieverId
      x-create-only-properties:
        - ApplicationId
        - Type
      x-read-only-properties:
        - CreatedAt
        - RetrieverArn
        - RetrieverId
        - Status
        - UpdatedAt
      x-required-properties:
        - ApplicationId
        - Configuration
        - DisplayName
        - Type
      x-tagging:
        taggable: true
      x-required-permissions:
        create:
          - iam:PassRole
          - qbusiness:CreateRetriever
          - qbusiness:GetRetriever
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
        read:
          - qbusiness:GetRetriever
          - qbusiness:ListTagsForResource
        update:
          - iam:PassRole
          - qbusiness:GetRetriever
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdateRetriever
        delete:
          - qbusiness:DeleteRetriever
          - qbusiness:GetRetriever
        list:
          - qbusiness:ListRetrievers
    IdentityProviderConfiguration:
      oneOf:
        - type: object
          title: SamlConfiguration
          properties:
            SamlConfiguration:
              $ref: '#/components/schemas/SamlProviderConfiguration'
          required:
            - SamlConfiguration
          additionalProperties: false
        - type: object
          title: OpenIDConnectConfiguration
          properties:
            OpenIDConnectConfiguration:
              $ref: '#/components/schemas/OpenIDConnectProviderConfiguration'
          required:
            - OpenIDConnectConfiguration
          additionalProperties: false
    OpenIDConnectProviderConfiguration:
      type: object
      properties:
        SecretsArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        SecretsRole:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
      required:
        - SecretsArn
        - SecretsRole
      additionalProperties: false
    SamlProviderConfiguration:
      type: object
      properties:
        AuthenticationUrl:
          type: string
          maxLength: 1284
          minLength: 1
          pattern: ^https://.*$
      required:
        - AuthenticationUrl
      additionalProperties: false
    WebExperienceSamplePromptsControlMode:
      type: string
      enum:
        - ENABLED
        - DISABLED
    WebExperienceStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
        - PENDING_AUTH_CONFIG
    Origin:
      type: string
      maxLength: 64
      minLength: 1
      pattern: ^(http:\/\/|https:\/\/)[a-zA-Z0-9-_.]+(?::[0-9]{1,5})?$
    CustomizationConfiguration:
      type: object
      properties:
        CustomCSSUrl:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^(https?://[a-zA-Z0-9-_.+%/]+\.css)?$
        LogoUrl:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^(https?://[a-zA-Z0-9-_.+%/]+\.(svg|png))?$
        FontUrl:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^(https?://[a-zA-Z0-9-_.+%/]+\.(ttf|woff|woff2|otf))?$
        FaviconUrl:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^(https?://[a-zA-Z0-9-_.+%/]+\.(svg|ico))?$
      additionalProperties: false
    WebExperience:
      type: object
      properties:
        ApplicationId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
        CreatedAt:
          type: string
          format: date-time
        DefaultEndpoint:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^(https?|ftp|file)://([^\s]*)$
        IdentityProviderConfiguration:
          $ref: '#/components/schemas/IdentityProviderConfiguration'
        RoleArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        SamplePromptsControlMode:
          $ref: '#/components/schemas/WebExperienceSamplePromptsControlMode'
        Status:
          $ref: '#/components/schemas/WebExperienceStatus'
        Subtitle:
          type: string
          maxLength: 500
          minLength: 0
          pattern: ^[\s\S]*$
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        Title:
          type: string
          maxLength: 500
          minLength: 0
          pattern: ^[\s\S]*$
        UpdatedAt:
          type: string
          format: date-time
        WebExperienceArn:
          type: string
          maxLength: 1284
          minLength: 0
          pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
        WebExperienceId:
          type: string
          maxLength: 36
          minLength: 36
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
        WelcomeMessage:
          type: string
          maxLength: 300
          minLength: 0
        Origins:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Origin'
          maxItems: 10
          minItems: 0
        CustomizationConfiguration:
          $ref: '#/components/schemas/CustomizationConfiguration'
      required:
        - ApplicationId
      x-stackql-resource-name: web_experience
      description: Definition of AWS::QBusiness::WebExperience Resource Type
      x-type-name: AWS::QBusiness::WebExperience
      x-stackql-primary-identifier:
        - ApplicationId
        - WebExperienceId
      x-create-only-properties:
        - ApplicationId
      x-read-only-properties:
        - CreatedAt
        - DefaultEndpoint
        - Status
        - UpdatedAt
        - WebExperienceArn
        - WebExperienceId
      x-required-properties:
        - ApplicationId
      x-tagging:
        taggable: true
      x-required-permissions:
        create:
          - iam:PassRole
          - qbusiness:CreateWebExperience
          - qbusiness:GetWebExperience
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - sso:PutApplicationGrant
          - sso:UpdateApplication
        read:
          - qbusiness:GetWebExperience
          - qbusiness:ListTagsForResource
        update:
          - iam:PassRole
          - qbusiness:GetWebExperience
          - qbusiness:ListTagsForResource
          - qbusiness:TagResource
          - qbusiness:UntagResource
          - qbusiness:UpdateWebExperience
          - sso:PutApplicationGrant
          - sso:UpdateApplication
        delete:
          - qbusiness:DeleteWebExperience
          - qbusiness:GetWebExperience
        list:
          - qbusiness:ListWebExperiences
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            AttachmentsConfiguration:
              $ref: '#/components/schemas/AttachmentsConfiguration'
            AutoSubscriptionConfiguration:
              $ref: '#/components/schemas/AutoSubscriptionConfiguration'
            ClientIdsForOIDC:
              type: array
              items:
                type: string
                maxLength: 255
                minLength: 1
                pattern: ^[a-zA-Z0-9_.:/()*?=-]*$
            CreatedAt:
              type: string
              format: date-time
            Description:
              type: string
              maxLength: 1000
              minLength: 0
              pattern: ^[\s\S]*$
            DisplayName:
              type: string
              maxLength: 1000
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
            EncryptionConfiguration:
              $ref: '#/components/schemas/EncryptionConfiguration'
            IamIdentityProviderArn:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:aws:iam::\d{12}:(oidc-provider|saml-provider)/[a-zA-Z0-9_\.\/@\-]+$
            IdentityCenterApplicationArn:
              type: string
              maxLength: 1224
              minLength: 10
              pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}$
            IdentityCenterInstanceArn:
              type: string
              maxLength: 1224
              minLength: 10
              pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$
            IdentityType:
              $ref: '#/components/schemas/IdentityType'
            PersonalizationConfiguration:
              $ref: '#/components/schemas/PersonalizationConfiguration'
            QAppsConfiguration:
              $ref: '#/components/schemas/QAppsConfiguration'
            QuickSightConfiguration:
              $ref: '#/components/schemas/QuickSightConfiguration'
            RoleArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            Status:
              $ref: '#/components/schemas/ApplicationStatus'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            UpdatedAt:
              type: string
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
    CreateDataAccessorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ActionConfigurations:
              type: array
              items:
                $ref: '#/components/schemas/ActionConfiguration'
              maxItems: 10
              minItems: 1
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            CreatedAt:
              type: string
              format: date-time
            DataAccessorArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            DataAccessorId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
            IdcApplicationArn:
              type: string
              maxLength: 1224
              minLength: 10
              pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso::\d{12}:application/(sso)?ins-[a-zA-Z0-9-.]{16}/apl-[a-zA-Z0-9]{16}$
            Principal:
              type: string
              maxLength: 1284
              minLength: 1
              pattern: ^arn:aws:iam::[0-9]{12}:role/[a-zA-Z0-9_/+=,.@-]+$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            UpdatedAt:
              type: string
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreateDataAccessorRequest
      type: object
      required: []
    CreateDataSourceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            Configuration: {}
            CreatedAt:
              type: string
              format: date-time
            DataSourceArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            DataSourceId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            Description:
              type: string
              maxLength: 1000
              minLength: 0
              pattern: ^[\s\S]*$
            DisplayName:
              type: string
              maxLength: 1000
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
            DocumentEnrichmentConfiguration:
              $ref: '#/components/schemas/DocumentEnrichmentConfiguration'
            MediaExtractionConfiguration:
              $ref: '#/components/schemas/MediaExtractionConfiguration'
            IndexId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            RoleArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            Status:
              $ref: '#/components/schemas/DataSourceStatus'
            SyncSchedule:
              type: string
              maxLength: 998
              pattern: ^[\s\S]*$
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            Type:
              type: string
              maxLength: 2048
              minLength: 1
            UpdatedAt:
              type: string
              format: date-time
            VpcConfiguration:
              $ref: '#/components/schemas/DataSourceVpcConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateDataSourceRequest
      type: object
      required: []
    CreateIndexRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            CapacityConfiguration:
              $ref: '#/components/schemas/IndexCapacityConfiguration'
            CreatedAt:
              type: string
              format: date-time
            Description:
              type: string
              maxLength: 1000
              minLength: 0
              pattern: ^[\s\S]*$
            DisplayName:
              type: string
              maxLength: 1000
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
            DocumentAttributeConfigurations:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/DocumentAttributeConfiguration'
              maxItems: 500
              minItems: 1
            IndexArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            IndexId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            IndexStatistics:
              $ref: '#/components/schemas/IndexStatistics'
            Type:
              $ref: '#/components/schemas/IndexType'
            Status:
              $ref: '#/components/schemas/IndexStatus'
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            UpdatedAt:
              type: string
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreateIndexRequest
      type: object
      required: []
    CreatePermissionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            StatementId:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
            Actions:
              type: array
              items:
                type: string
                pattern: ^qbusiness:[a-zA-Z]+$
              maxItems: 10
              minItems: 1
            Principal:
              type: string
              maxLength: 1284
              minLength: 1
              pattern: ^arn:aws:iam::[0-9]{12}:role/[a-zA-Z0-9_/+=,.@-]+$
          x-stackQL-stringOnly: true
      x-title: CreatePermissionRequest
      type: object
      required: []
    CreatePluginRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            AuthConfiguration:
              $ref: '#/components/schemas/PluginAuthConfiguration'
            BuildStatus:
              $ref: '#/components/schemas/PluginBuildStatus'
            CreatedAt:
              type: string
              format: date-time
            CustomPluginConfiguration:
              $ref: '#/components/schemas/CustomPluginConfiguration'
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
            PluginArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            PluginId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            ServerUrl:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^(https?|ftp|file)://([^\s]*)$
            State:
              $ref: '#/components/schemas/PluginState'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            Type:
              $ref: '#/components/schemas/PluginType'
            UpdatedAt:
              type: string
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreatePluginRequest
      type: object
      required: []
    CreateRetrieverRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            Configuration:
              $ref: '#/components/schemas/RetrieverConfiguration'
            CreatedAt:
              type: string
              format: date-time
            DisplayName:
              type: string
              maxLength: 1000
              minLength: 1
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$
            RetrieverArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            RetrieverId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            RoleArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            Status:
              $ref: '#/components/schemas/RetrieverStatus'
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            Type:
              $ref: '#/components/schemas/RetrieverType'
            UpdatedAt:
              type: string
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreateRetrieverRequest
      type: object
      required: []
    CreateWebExperienceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ApplicationId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]{35}$
            CreatedAt:
              type: string
              format: date-time
            DefaultEndpoint:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^(https?|ftp|file)://([^\s]*)$
            IdentityProviderConfiguration:
              $ref: '#/components/schemas/IdentityProviderConfiguration'
            RoleArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            SamplePromptsControlMode:
              $ref: '#/components/schemas/WebExperienceSamplePromptsControlMode'
            Status:
              $ref: '#/components/schemas/WebExperienceStatus'
            Subtitle:
              type: string
              maxLength: 500
              minLength: 0
              pattern: ^[\s\S]*$
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            Title:
              type: string
              maxLength: 500
              minLength: 0
              pattern: ^[\s\S]*$
            UpdatedAt:
              type: string
              format: date-time
            WebExperienceArn:
              type: string
              maxLength: 1284
              minLength: 0
              pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
            WebExperienceId:
              type: string
              maxLength: 36
              minLength: 36
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9-]*$
            WelcomeMessage:
              type: string
              maxLength: 300
              minLength: 0
            Origins:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Origin'
              maxItems: 10
              minItems: 0
            CustomizationConfiguration:
              $ref: '#/components/schemas/CustomizationConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateWebExperienceRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.qbusiness.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::QBusiness::Application
      x-identifiers:
        - ApplicationId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.AttachmentsConfiguration') as attachments_configuration,
              JSON_EXTRACT(Properties, '$.AutoSubscriptionConfiguration') as auto_subscription_configuration,
              JSON_EXTRACT(Properties, '$.ClientIdsForOIDC') as client_ids_for_oid_c,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.EncryptionConfiguration') as encryption_configuration,
              JSON_EXTRACT(Properties, '$.IamIdentityProviderArn') as iam_identity_provider_arn,
              JSON_EXTRACT(Properties, '$.IdentityCenterApplicationArn') as identity_center_application_arn,
              JSON_EXTRACT(Properties, '$.IdentityCenterInstanceArn') as identity_center_instance_arn,
              JSON_EXTRACT(Properties, '$.IdentityType') as identity_type,
              JSON_EXTRACT(Properties, '$.PersonalizationConfiguration') as personalization_configuration,
              JSON_EXTRACT(Properties, '$.QAppsConfiguration') as q_apps_configuration,
              JSON_EXTRACT(Properties, '$.QuickSightConfiguration') as quick_sight_configuration,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Application'
              AND data__Identifier = '<ApplicationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationArn') as application_arn,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.AttachmentsConfiguration') as attachments_configuration,
                JSON_EXTRACT(detail.Properties, '$.AutoSubscriptionConfiguration') as auto_subscription_configuration,
                JSON_EXTRACT(detail.Properties, '$.ClientIdsForOIDC') as client_ids_for_oid_c,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.EncryptionConfiguration') as encryption_configuration,
                JSON_EXTRACT(detail.Properties, '$.IamIdentityProviderArn') as iam_identity_provider_arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityCenterApplicationArn') as identity_center_application_arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityCenterInstanceArn') as identity_center_instance_arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityType') as identity_type,
                JSON_EXTRACT(detail.Properties, '$.PersonalizationConfiguration') as personalization_configuration,
                JSON_EXTRACT(detail.Properties, '$.QAppsConfiguration') as q_apps_configuration,
                JSON_EXTRACT(detail.Properties, '$.QuickSightConfiguration') as quick_sight_configuration,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::Application'
                AND detail.data__TypeName = 'AWS::QBusiness::Application'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationArn') as application_arn,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'AttachmentsConfiguration') as attachments_configuration,
                  json_extract_path_text(Properties, 'AutoSubscriptionConfiguration') as auto_subscription_configuration,
                  json_extract_path_text(Properties, 'ClientIdsForOIDC') as client_ids_for_oid_c,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'EncryptionConfiguration') as encryption_configuration,
                  json_extract_path_text(Properties, 'IamIdentityProviderArn') as iam_identity_provider_arn,
                  json_extract_path_text(Properties, 'IdentityCenterApplicationArn') as identity_center_application_arn,
                  json_extract_path_text(Properties, 'IdentityCenterInstanceArn') as identity_center_instance_arn,
                  json_extract_path_text(Properties, 'IdentityType') as identity_type,
                  json_extract_path_text(Properties, 'PersonalizationConfiguration') as personalization_configuration,
                  json_extract_path_text(Properties, 'QAppsConfiguration') as q_apps_configuration,
                  json_extract_path_text(Properties, 'QuickSightConfiguration') as quick_sight_configuration,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Application'
                  AND data__Identifier = '<ApplicationId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationArn') as application_arn,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'AttachmentsConfiguration') as attachments_configuration,
                    json_extract_path_text(detail.Properties, 'AutoSubscriptionConfiguration') as auto_subscription_configuration,
                    json_extract_path_text(detail.Properties, 'ClientIdsForOIDC') as client_ids_for_oid_c,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'EncryptionConfiguration') as encryption_configuration,
                    json_extract_path_text(detail.Properties, 'IamIdentityProviderArn') as iam_identity_provider_arn,
                    json_extract_path_text(detail.Properties, 'IdentityCenterApplicationArn') as identity_center_application_arn,
                    json_extract_path_text(detail.Properties, 'IdentityCenterInstanceArn') as identity_center_instance_arn,
                    json_extract_path_text(detail.Properties, 'IdentityType') as identity_type,
                    json_extract_path_text(detail.Properties, 'PersonalizationConfiguration') as personalization_configuration,
                    json_extract_path_text(detail.Properties, 'QAppsConfiguration') as q_apps_configuration,
                    json_extract_path_text(detail.Properties, 'QuickSightConfiguration') as quick_sight_configuration,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::Application'
                    AND detail.data__TypeName = 'AWS::QBusiness::Application'
                    AND listing.region = 'us-east-1'
    applications_list_only:
      name: applications_list_only
      id: aws.qbusiness.applications_list_only
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::QBusiness::Application
      x-identifiers:
        - ApplicationId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Application'
                AND region = 'us-east-1'
    application_tags:
      name: application_tags
      id: aws.qbusiness.application_tags
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::QBusiness::Application
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationArn') as application_arn,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.AttachmentsConfiguration') as attachments_configuration,
              JSON_EXTRACT(detail.Properties, '$.AutoSubscriptionConfiguration') as auto_subscription_configuration,
              JSON_EXTRACT(detail.Properties, '$.ClientIdsForOIDC') as client_ids_for_oid_c,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.EncryptionConfiguration') as encryption_configuration,
              JSON_EXTRACT(detail.Properties, '$.IamIdentityProviderArn') as iam_identity_provider_arn,
              JSON_EXTRACT(detail.Properties, '$.IdentityCenterApplicationArn') as identity_center_application_arn,
              JSON_EXTRACT(detail.Properties, '$.IdentityCenterInstanceArn') as identity_center_instance_arn,
              JSON_EXTRACT(detail.Properties, '$.IdentityType') as identity_type,
              JSON_EXTRACT(detail.Properties, '$.PersonalizationConfiguration') as personalization_configuration,
              JSON_EXTRACT(detail.Properties, '$.QAppsConfiguration') as q_apps_configuration,
              JSON_EXTRACT(detail.Properties, '$.QuickSightConfiguration') as quick_sight_configuration,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::Application'
              AND detail.data__TypeName = 'AWS::QBusiness::Application'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationArn') as application_arn,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'AttachmentsConfiguration') as attachments_configuration,
                json_extract_path_text(detail.Properties, 'AutoSubscriptionConfiguration') as auto_subscription_configuration,
                json_extract_path_text(detail.Properties, 'ClientIdsForOIDC') as client_ids_for_oid_c,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'EncryptionConfiguration') as encryption_configuration,
                json_extract_path_text(detail.Properties, 'IamIdentityProviderArn') as iam_identity_provider_arn,
                json_extract_path_text(detail.Properties, 'IdentityCenterApplicationArn') as identity_center_application_arn,
                json_extract_path_text(detail.Properties, 'IdentityCenterInstanceArn') as identity_center_instance_arn,
                json_extract_path_text(detail.Properties, 'IdentityType') as identity_type,
                json_extract_path_text(detail.Properties, 'PersonalizationConfiguration') as personalization_configuration,
                json_extract_path_text(detail.Properties, 'QAppsConfiguration') as q_apps_configuration,
                json_extract_path_text(detail.Properties, 'QuickSightConfiguration') as quick_sight_configuration,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::Application'
                AND detail.data__TypeName = 'AWS::QBusiness::Application'
                AND listing.region = 'us-east-1'
    data_accessors:
      name: data_accessors
      id: aws.qbusiness.data_accessors
      x-cfn-schema-name: DataAccessor
      x-cfn-type-name: AWS::QBusiness::DataAccessor
      x-identifiers:
        - ApplicationId
        - DataAccessorId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataAccessor&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::DataAccessor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::DataAccessor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::DataAccessor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_accessors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_accessors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_accessors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ActionConfigurations') as action_configurations,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.DataAccessorArn') as data_accessor_arn,
              JSON_EXTRACT(Properties, '$.DataAccessorId') as data_accessor_id,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.IdcApplicationArn') as idc_application_arn,
              JSON_EXTRACT(Properties, '$.Principal') as principal,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::DataAccessor'
              AND data__Identifier = '<ApplicationId>|<DataAccessorId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ActionConfigurations') as action_configurations,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.DataAccessorArn') as data_accessor_arn,
                JSON_EXTRACT(detail.Properties, '$.DataAccessorId') as data_accessor_id,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.IdcApplicationArn') as idc_application_arn,
                JSON_EXTRACT(detail.Properties, '$.Principal') as principal,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::DataAccessor'
                AND detail.data__TypeName = 'AWS::QBusiness::DataAccessor'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ActionConfigurations') as action_configurations,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'DataAccessorArn') as data_accessor_arn,
                  json_extract_path_text(Properties, 'DataAccessorId') as data_accessor_id,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'IdcApplicationArn') as idc_application_arn,
                  json_extract_path_text(Properties, 'Principal') as principal,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::DataAccessor'
                  AND data__Identifier = '<ApplicationId>|<DataAccessorId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ActionConfigurations') as action_configurations,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'DataAccessorArn') as data_accessor_arn,
                    json_extract_path_text(detail.Properties, 'DataAccessorId') as data_accessor_id,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'IdcApplicationArn') as idc_application_arn,
                    json_extract_path_text(detail.Properties, 'Principal') as principal,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::DataAccessor'
                    AND detail.data__TypeName = 'AWS::QBusiness::DataAccessor'
                    AND listing.region = 'us-east-1'
    data_accessors_list_only:
      name: data_accessors_list_only
      id: aws.qbusiness.data_accessors_list_only
      x-cfn-schema-name: DataAccessor
      x-cfn-type-name: AWS::QBusiness::DataAccessor
      x-identifiers:
        - ApplicationId
        - DataAccessorId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.DataAccessorId') as data_accessor_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::DataAccessor'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'DataAccessorId') as data_accessor_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::DataAccessor'
                AND region = 'us-east-1'
    data_accessor_tags:
      name: data_accessor_tags
      id: aws.qbusiness.data_accessor_tags
      x-cfn-schema-name: DataAccessor
      x-cfn-type-name: AWS::QBusiness::DataAccessor
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ActionConfigurations') as action_configurations,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.DataAccessorArn') as data_accessor_arn,
              JSON_EXTRACT(detail.Properties, '$.DataAccessorId') as data_accessor_id,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.IdcApplicationArn') as idc_application_arn,
              JSON_EXTRACT(detail.Properties, '$.Principal') as principal,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::DataAccessor'
              AND detail.data__TypeName = 'AWS::QBusiness::DataAccessor'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ActionConfigurations') as action_configurations,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'DataAccessorArn') as data_accessor_arn,
                json_extract_path_text(detail.Properties, 'DataAccessorId') as data_accessor_id,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'IdcApplicationArn') as idc_application_arn,
                json_extract_path_text(detail.Properties, 'Principal') as principal,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::DataAccessor'
                AND detail.data__TypeName = 'AWS::QBusiness::DataAccessor'
                AND listing.region = 'us-east-1'
    data_sources:
      name: data_sources
      id: aws.qbusiness.data_sources
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::QBusiness::DataSource
      x-identifiers:
        - ApplicationId
        - DataSourceId
        - IndexId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataSource&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.DataSourceArn') as data_source_arn,
              JSON_EXTRACT(Properties, '$.DataSourceId') as data_source_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.DocumentEnrichmentConfiguration') as document_enrichment_configuration,
              JSON_EXTRACT(Properties, '$.MediaExtractionConfiguration') as media_extraction_configuration,
              JSON_EXTRACT(Properties, '$.IndexId') as index_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.SyncSchedule') as sync_schedule,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.VpcConfiguration') as vpc_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::DataSource'
              AND data__Identifier = '<ApplicationId>|<DataSourceId>|<IndexId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.DataSourceArn') as data_source_arn,
                JSON_EXTRACT(detail.Properties, '$.DataSourceId') as data_source_id,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.DocumentEnrichmentConfiguration') as document_enrichment_configuration,
                JSON_EXTRACT(detail.Properties, '$.MediaExtractionConfiguration') as media_extraction_configuration,
                JSON_EXTRACT(detail.Properties, '$.IndexId') as index_id,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.SyncSchedule') as sync_schedule,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.VpcConfiguration') as vpc_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::DataSource'
                AND detail.data__TypeName = 'AWS::QBusiness::DataSource'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'Configuration') as configuration,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'DataSourceArn') as data_source_arn,
                  json_extract_path_text(Properties, 'DataSourceId') as data_source_id,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'DocumentEnrichmentConfiguration') as document_enrichment_configuration,
                  json_extract_path_text(Properties, 'MediaExtractionConfiguration') as media_extraction_configuration,
                  json_extract_path_text(Properties, 'IndexId') as index_id,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'SyncSchedule') as sync_schedule,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'VpcConfiguration') as vpc_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::DataSource'
                  AND data__Identifier = '<ApplicationId>|<DataSourceId>|<IndexId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'DataSourceArn') as data_source_arn,
                    json_extract_path_text(detail.Properties, 'DataSourceId') as data_source_id,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'DocumentEnrichmentConfiguration') as document_enrichment_configuration,
                    json_extract_path_text(detail.Properties, 'MediaExtractionConfiguration') as media_extraction_configuration,
                    json_extract_path_text(detail.Properties, 'IndexId') as index_id,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'SyncSchedule') as sync_schedule,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'VpcConfiguration') as vpc_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::DataSource'
                    AND detail.data__TypeName = 'AWS::QBusiness::DataSource'
                    AND listing.region = 'us-east-1'
    data_sources_list_only:
      name: data_sources_list_only
      id: aws.qbusiness.data_sources_list_only
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::QBusiness::DataSource
      x-identifiers:
        - ApplicationId
        - DataSourceId
        - IndexId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.DataSourceId') as data_source_id,
              JSON_EXTRACT(Properties, '$.IndexId') as index_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::DataSource'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'DataSourceId') as data_source_id,
                json_extract_path_text(Properties, 'IndexId') as index_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::DataSource'
                AND region = 'us-east-1'
    data_source_tags:
      name: data_source_tags
      id: aws.qbusiness.data_source_tags
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::QBusiness::DataSource
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.DataSourceArn') as data_source_arn,
              JSON_EXTRACT(detail.Properties, '$.DataSourceId') as data_source_id,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.DocumentEnrichmentConfiguration') as document_enrichment_configuration,
              JSON_EXTRACT(detail.Properties, '$.MediaExtractionConfiguration') as media_extraction_configuration,
              JSON_EXTRACT(detail.Properties, '$.IndexId') as index_id,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.SyncSchedule') as sync_schedule,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(detail.Properties, '$.VpcConfiguration') as vpc_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::DataSource'
              AND detail.data__TypeName = 'AWS::QBusiness::DataSource'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'DataSourceArn') as data_source_arn,
                json_extract_path_text(detail.Properties, 'DataSourceId') as data_source_id,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'DocumentEnrichmentConfiguration') as document_enrichment_configuration,
                json_extract_path_text(detail.Properties, 'MediaExtractionConfiguration') as media_extraction_configuration,
                json_extract_path_text(detail.Properties, 'IndexId') as index_id,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'SyncSchedule') as sync_schedule,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(detail.Properties, 'VpcConfiguration') as vpc_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::DataSource'
                AND detail.data__TypeName = 'AWS::QBusiness::DataSource'
                AND listing.region = 'us-east-1'
    indices:
      name: indices
      id: aws.qbusiness.indices
      x-cfn-schema-name: Index
      x-cfn-type-name: AWS::QBusiness::Index
      x-identifiers:
        - ApplicationId
        - IndexId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Index&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Index"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Index"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Index"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/indices/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/indices/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/indices/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.CapacityConfiguration') as capacity_configuration,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.DocumentAttributeConfigurations') as document_attribute_configurations,
              JSON_EXTRACT(Properties, '$.IndexArn') as index_arn,
              JSON_EXTRACT(Properties, '$.IndexId') as index_id,
              JSON_EXTRACT(Properties, '$.IndexStatistics') as index_statistics,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Index'
              AND data__Identifier = '<ApplicationId>|<IndexId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.CapacityConfiguration') as capacity_configuration,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.DocumentAttributeConfigurations') as document_attribute_configurations,
                JSON_EXTRACT(detail.Properties, '$.IndexArn') as index_arn,
                JSON_EXTRACT(detail.Properties, '$.IndexId') as index_id,
                JSON_EXTRACT(detail.Properties, '$.IndexStatistics') as index_statistics,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::Index'
                AND detail.data__TypeName = 'AWS::QBusiness::Index'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'CapacityConfiguration') as capacity_configuration,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'DocumentAttributeConfigurations') as document_attribute_configurations,
                  json_extract_path_text(Properties, 'IndexArn') as index_arn,
                  json_extract_path_text(Properties, 'IndexId') as index_id,
                  json_extract_path_text(Properties, 'IndexStatistics') as index_statistics,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Index'
                  AND data__Identifier = '<ApplicationId>|<IndexId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'CapacityConfiguration') as capacity_configuration,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'DocumentAttributeConfigurations') as document_attribute_configurations,
                    json_extract_path_text(detail.Properties, 'IndexArn') as index_arn,
                    json_extract_path_text(detail.Properties, 'IndexId') as index_id,
                    json_extract_path_text(detail.Properties, 'IndexStatistics') as index_statistics,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::Index'
                    AND detail.data__TypeName = 'AWS::QBusiness::Index'
                    AND listing.region = 'us-east-1'
    indices_list_only:
      name: indices_list_only
      id: aws.qbusiness.indices_list_only
      x-cfn-schema-name: Index
      x-cfn-type-name: AWS::QBusiness::Index
      x-identifiers:
        - ApplicationId
        - IndexId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.IndexId') as index_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Index'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'IndexId') as index_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Index'
                AND region = 'us-east-1'
    index_tags:
      name: index_tags
      id: aws.qbusiness.index_tags
      x-cfn-schema-name: Index
      x-cfn-type-name: AWS::QBusiness::Index
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.CapacityConfiguration') as capacity_configuration,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.DocumentAttributeConfigurations') as document_attribute_configurations,
              JSON_EXTRACT(detail.Properties, '$.IndexArn') as index_arn,
              JSON_EXTRACT(detail.Properties, '$.IndexId') as index_id,
              JSON_EXTRACT(detail.Properties, '$.IndexStatistics') as index_statistics,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::Index'
              AND detail.data__TypeName = 'AWS::QBusiness::Index'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'CapacityConfiguration') as capacity_configuration,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'DocumentAttributeConfigurations') as document_attribute_configurations,
                json_extract_path_text(detail.Properties, 'IndexArn') as index_arn,
                json_extract_path_text(detail.Properties, 'IndexId') as index_id,
                json_extract_path_text(detail.Properties, 'IndexStatistics') as index_statistics,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::Index'
                AND detail.data__TypeName = 'AWS::QBusiness::Index'
                AND listing.region = 'us-east-1'
    permissions:
      name: permissions
      id: aws.qbusiness.permissions
      x-cfn-schema-name: Permission
      x-cfn-type-name: AWS::QBusiness::Permission
      x-identifiers:
        - ApplicationId
        - StatementId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Permission&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Permission"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Permission"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/permissions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.StatementId') as statement_id,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.Principal') as principal
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Permission'
              AND data__Identifier = '<ApplicationId>|<StatementId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.StatementId') as statement_id,
                JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
                JSON_EXTRACT(detail.Properties, '$.Principal') as principal
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::Permission'
                AND detail.data__TypeName = 'AWS::QBusiness::Permission'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'StatementId') as statement_id,
                  json_extract_path_text(Properties, 'Actions') as actions,
                  json_extract_path_text(Properties, 'Principal') as principal
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Permission'
                  AND data__Identifier = '<ApplicationId>|<StatementId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'StatementId') as statement_id,
                    json_extract_path_text(detail.Properties, 'Actions') as actions,
                    json_extract_path_text(detail.Properties, 'Principal') as principal
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::Permission'
                    AND detail.data__TypeName = 'AWS::QBusiness::Permission'
                    AND listing.region = 'us-east-1'
    permissions_list_only:
      name: permissions_list_only
      id: aws.qbusiness.permissions_list_only
      x-cfn-schema-name: Permission
      x-cfn-type-name: AWS::QBusiness::Permission
      x-identifiers:
        - ApplicationId
        - StatementId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.StatementId') as statement_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Permission'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'StatementId') as statement_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Permission'
                AND region = 'us-east-1'
    plugins:
      name: plugins
      id: aws.qbusiness.plugins
      x-cfn-schema-name: Plugin
      x-cfn-type-name: AWS::QBusiness::Plugin
      x-identifiers:
        - ApplicationId
        - PluginId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Plugin&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Plugin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Plugin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Plugin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/plugins/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/plugins/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/plugins/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.AuthConfiguration') as auth_configuration,
              JSON_EXTRACT(Properties, '$.BuildStatus') as build_status,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.CustomPluginConfiguration') as custom_plugin_configuration,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.PluginArn') as plugin_arn,
              JSON_EXTRACT(Properties, '$.PluginId') as plugin_id,
              JSON_EXTRACT(Properties, '$.ServerUrl') as server_url,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Plugin'
              AND data__Identifier = '<ApplicationId>|<PluginId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.AuthConfiguration') as auth_configuration,
                JSON_EXTRACT(detail.Properties, '$.BuildStatus') as build_status,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.CustomPluginConfiguration') as custom_plugin_configuration,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.PluginArn') as plugin_arn,
                JSON_EXTRACT(detail.Properties, '$.PluginId') as plugin_id,
                JSON_EXTRACT(detail.Properties, '$.ServerUrl') as server_url,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::Plugin'
                AND detail.data__TypeName = 'AWS::QBusiness::Plugin'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'AuthConfiguration') as auth_configuration,
                  json_extract_path_text(Properties, 'BuildStatus') as build_status,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'CustomPluginConfiguration') as custom_plugin_configuration,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'PluginArn') as plugin_arn,
                  json_extract_path_text(Properties, 'PluginId') as plugin_id,
                  json_extract_path_text(Properties, 'ServerUrl') as server_url,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Plugin'
                  AND data__Identifier = '<ApplicationId>|<PluginId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'AuthConfiguration') as auth_configuration,
                    json_extract_path_text(detail.Properties, 'BuildStatus') as build_status,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'CustomPluginConfiguration') as custom_plugin_configuration,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'PluginArn') as plugin_arn,
                    json_extract_path_text(detail.Properties, 'PluginId') as plugin_id,
                    json_extract_path_text(detail.Properties, 'ServerUrl') as server_url,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::Plugin'
                    AND detail.data__TypeName = 'AWS::QBusiness::Plugin'
                    AND listing.region = 'us-east-1'
    plugins_list_only:
      name: plugins_list_only
      id: aws.qbusiness.plugins_list_only
      x-cfn-schema-name: Plugin
      x-cfn-type-name: AWS::QBusiness::Plugin
      x-identifiers:
        - ApplicationId
        - PluginId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.PluginId') as plugin_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Plugin'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'PluginId') as plugin_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Plugin'
                AND region = 'us-east-1'
    plugin_tags:
      name: plugin_tags
      id: aws.qbusiness.plugin_tags
      x-cfn-schema-name: Plugin
      x-cfn-type-name: AWS::QBusiness::Plugin
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.AuthConfiguration') as auth_configuration,
              JSON_EXTRACT(detail.Properties, '$.BuildStatus') as build_status,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.CustomPluginConfiguration') as custom_plugin_configuration,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.PluginArn') as plugin_arn,
              JSON_EXTRACT(detail.Properties, '$.PluginId') as plugin_id,
              JSON_EXTRACT(detail.Properties, '$.ServerUrl') as server_url,
              JSON_EXTRACT(detail.Properties, '$.State') as state,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::Plugin'
              AND detail.data__TypeName = 'AWS::QBusiness::Plugin'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'AuthConfiguration') as auth_configuration,
                json_extract_path_text(detail.Properties, 'BuildStatus') as build_status,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'CustomPluginConfiguration') as custom_plugin_configuration,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'PluginArn') as plugin_arn,
                json_extract_path_text(detail.Properties, 'PluginId') as plugin_id,
                json_extract_path_text(detail.Properties, 'ServerUrl') as server_url,
                json_extract_path_text(detail.Properties, 'State') as state,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::Plugin'
                AND detail.data__TypeName = 'AWS::QBusiness::Plugin'
                AND listing.region = 'us-east-1'
    retrievers:
      name: retrievers
      id: aws.qbusiness.retrievers
      x-cfn-schema-name: Retriever
      x-cfn-type-name: AWS::QBusiness::Retriever
      x-identifiers:
        - ApplicationId
        - RetrieverId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Retriever&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Retriever"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Retriever"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::Retriever"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/retrievers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/retrievers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/retrievers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.RetrieverArn') as retriever_arn,
              JSON_EXTRACT(Properties, '$.RetrieverId') as retriever_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Retriever'
              AND data__Identifier = '<ApplicationId>|<RetrieverId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.RetrieverArn') as retriever_arn,
                JSON_EXTRACT(detail.Properties, '$.RetrieverId') as retriever_id,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::Retriever'
                AND detail.data__TypeName = 'AWS::QBusiness::Retriever'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'Configuration') as configuration,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'RetrieverArn') as retriever_arn,
                  json_extract_path_text(Properties, 'RetrieverId') as retriever_id,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::Retriever'
                  AND data__Identifier = '<ApplicationId>|<RetrieverId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'RetrieverArn') as retriever_arn,
                    json_extract_path_text(detail.Properties, 'RetrieverId') as retriever_id,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::Retriever'
                    AND detail.data__TypeName = 'AWS::QBusiness::Retriever'
                    AND listing.region = 'us-east-1'
    retrievers_list_only:
      name: retrievers_list_only
      id: aws.qbusiness.retrievers_list_only
      x-cfn-schema-name: Retriever
      x-cfn-type-name: AWS::QBusiness::Retriever
      x-identifiers:
        - ApplicationId
        - RetrieverId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.RetrieverId') as retriever_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Retriever'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'RetrieverId') as retriever_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::Retriever'
                AND region = 'us-east-1'
    retriever_tags:
      name: retriever_tags
      id: aws.qbusiness.retriever_tags
      x-cfn-schema-name: Retriever
      x-cfn-type-name: AWS::QBusiness::Retriever
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.RetrieverArn') as retriever_arn,
              JSON_EXTRACT(detail.Properties, '$.RetrieverId') as retriever_id,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::Retriever'
              AND detail.data__TypeName = 'AWS::QBusiness::Retriever'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'RetrieverArn') as retriever_arn,
                json_extract_path_text(detail.Properties, 'RetrieverId') as retriever_id,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::Retriever'
                AND detail.data__TypeName = 'AWS::QBusiness::Retriever'
                AND listing.region = 'us-east-1'
    web_experiences:
      name: web_experiences
      id: aws.qbusiness.web_experiences
      x-cfn-schema-name: WebExperience
      x-cfn-type-name: AWS::QBusiness::WebExperience
      x-identifiers:
        - ApplicationId
        - WebExperienceId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__WebExperience&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::WebExperience"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::WebExperience"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::QBusiness::WebExperience"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/web_experiences/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/web_experiences/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/web_experiences/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.DefaultEndpoint') as default_endpoint,
              JSON_EXTRACT(Properties, '$.IdentityProviderConfiguration') as identity_provider_configuration,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.SamplePromptsControlMode') as sample_prompts_control_mode,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Subtitle') as subtitle,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Title') as title,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.WebExperienceArn') as web_experience_arn,
              JSON_EXTRACT(Properties, '$.WebExperienceId') as web_experience_id,
              JSON_EXTRACT(Properties, '$.WelcomeMessage') as welcome_message,
              JSON_EXTRACT(Properties, '$.Origins') as origins,
              JSON_EXTRACT(Properties, '$.CustomizationConfiguration') as customization_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::WebExperience'
              AND data__Identifier = '<ApplicationId>|<WebExperienceId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.DefaultEndpoint') as default_endpoint,
                JSON_EXTRACT(detail.Properties, '$.IdentityProviderConfiguration') as identity_provider_configuration,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.SamplePromptsControlMode') as sample_prompts_control_mode,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Subtitle') as subtitle,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Title') as title,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.WebExperienceArn') as web_experience_arn,
                JSON_EXTRACT(detail.Properties, '$.WebExperienceId') as web_experience_id,
                JSON_EXTRACT(detail.Properties, '$.WelcomeMessage') as welcome_message,
                JSON_EXTRACT(detail.Properties, '$.Origins') as origins,
                JSON_EXTRACT(detail.Properties, '$.CustomizationConfiguration') as customization_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::QBusiness::WebExperience'
                AND detail.data__TypeName = 'AWS::QBusiness::WebExperience'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'DefaultEndpoint') as default_endpoint,
                  json_extract_path_text(Properties, 'IdentityProviderConfiguration') as identity_provider_configuration,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'SamplePromptsControlMode') as sample_prompts_control_mode,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Subtitle') as subtitle,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Title') as title,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'WebExperienceArn') as web_experience_arn,
                  json_extract_path_text(Properties, 'WebExperienceId') as web_experience_id,
                  json_extract_path_text(Properties, 'WelcomeMessage') as welcome_message,
                  json_extract_path_text(Properties, 'Origins') as origins,
                  json_extract_path_text(Properties, 'CustomizationConfiguration') as customization_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::QBusiness::WebExperience'
                  AND data__Identifier = '<ApplicationId>|<WebExperienceId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'DefaultEndpoint') as default_endpoint,
                    json_extract_path_text(detail.Properties, 'IdentityProviderConfiguration') as identity_provider_configuration,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'SamplePromptsControlMode') as sample_prompts_control_mode,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Subtitle') as subtitle,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Title') as title,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'WebExperienceArn') as web_experience_arn,
                    json_extract_path_text(detail.Properties, 'WebExperienceId') as web_experience_id,
                    json_extract_path_text(detail.Properties, 'WelcomeMessage') as welcome_message,
                    json_extract_path_text(detail.Properties, 'Origins') as origins,
                    json_extract_path_text(detail.Properties, 'CustomizationConfiguration') as customization_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::QBusiness::WebExperience'
                    AND detail.data__TypeName = 'AWS::QBusiness::WebExperience'
                    AND listing.region = 'us-east-1'
    web_experiences_list_only:
      name: web_experiences_list_only
      id: aws.qbusiness.web_experiences_list_only
      x-cfn-schema-name: WebExperience
      x-cfn-type-name: AWS::QBusiness::WebExperience
      x-identifiers:
        - ApplicationId
        - WebExperienceId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.WebExperienceId') as web_experience_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::WebExperience'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id,
                json_extract_path_text(Properties, 'WebExperienceId') as web_experience_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::QBusiness::WebExperience'
                AND region = 'us-east-1'
    web_experience_tags:
      name: web_experience_tags
      id: aws.qbusiness.web_experience_tags
      x-cfn-schema-name: WebExperience
      x-cfn-type-name: AWS::QBusiness::WebExperience
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.DefaultEndpoint') as default_endpoint,
              JSON_EXTRACT(detail.Properties, '$.IdentityProviderConfiguration') as identity_provider_configuration,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.SamplePromptsControlMode') as sample_prompts_control_mode,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.Subtitle') as subtitle,
              JSON_EXTRACT(detail.Properties, '$.Title') as title,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(detail.Properties, '$.WebExperienceArn') as web_experience_arn,
              JSON_EXTRACT(detail.Properties, '$.WebExperienceId') as web_experience_id,
              JSON_EXTRACT(detail.Properties, '$.WelcomeMessage') as welcome_message,
              JSON_EXTRACT(detail.Properties, '$.Origins') as origins,
              JSON_EXTRACT(detail.Properties, '$.CustomizationConfiguration') as customization_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::QBusiness::WebExperience'
              AND detail.data__TypeName = 'AWS::QBusiness::WebExperience'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'DefaultEndpoint') as default_endpoint,
                json_extract_path_text(detail.Properties, 'IdentityProviderConfiguration') as identity_provider_configuration,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'SamplePromptsControlMode') as sample_prompts_control_mode,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'Subtitle') as subtitle,
                json_extract_path_text(detail.Properties, 'Title') as title,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(detail.Properties, 'WebExperienceArn') as web_experience_arn,
                json_extract_path_text(detail.Properties, 'WebExperienceId') as web_experience_id,
                json_extract_path_text(detail.Properties, 'WelcomeMessage') as welcome_message,
                json_extract_path_text(detail.Properties, 'Origins') as origins,
                json_extract_path_text(detail.Properties, 'CustomizationConfiguration') as customization_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::QBusiness::WebExperience'
                AND detail.data__TypeName = 'AWS::QBusiness::WebExperience'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataAccessor&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataAccessor
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataAccessorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataSource&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataSource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataSourceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Index&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIndex
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIndexRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Permission&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePermission
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePermissionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Plugin&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePlugin
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePluginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Retriever&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRetriever
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRetrieverRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__WebExperience&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWebExperience
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWebExperienceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
