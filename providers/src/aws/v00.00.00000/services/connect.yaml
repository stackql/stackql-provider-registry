openapi: 3.0.0
info:
  title: Connect
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: The key name of the tag. You can specify a value that is 1 to 128 Unicode characters
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: The value for the tag. . You can specify a value that is maximum of 256 Unicode characters
          maxLength: 256
      required:
        - Key
        - Value
    AgentStatus:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        AgentStatusArn:
          description: The Amazon Resource Name (ARN) of the agent status.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-state/[-a-zA-Z0-9]*$
        Description:
          description: The description of the status.
          type: string
          minLength: 1
          maxLength: 250
        Name:
          description: The name of the status.
          type: string
          minLength: 1
          maxLength: 127
        DisplayOrder:
          description: The display order of the status.
          type: integer
          minimum: 1
          maximum: 50
        State:
          type: string
          description: The state of the status.
          enum:
            - ENABLED
            - DISABLED
        Type:
          type: string
          description: The type of agent status.
          enum:
            - ROUTABLE
            - CUSTOM
            - OFFLINE
        ResetOrderNumber:
          type: boolean
          description: A number indicating the reset order of the agent status.
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        LastModifiedRegion:
          description: Last modified region.
          type: string
          pattern: '[a-z]{2}(-[a-z]+){1,2}(-[0-9])?'
        LastModifiedTime:
          description: Last modified time.
          type: number
      required:
        - InstanceArn
        - Name
        - State
      x-stackql-resource-name: agent_status
      description: Resource Type definition for AWS::Connect::AgentStatus
      x-type-name: AWS::Connect::AgentStatus
      x-stackql-primary-identifier:
        - AgentStatusArn
      x-read-only-properties:
        - AgentStatusArn
        - LastModifiedRegion
        - LastModifiedTime
      x-required-properties:
        - InstanceArn
        - Name
        - State
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateAgentStatus
          - connect:TagResource
          - connect:ListAgentStatuses
        read:
          - connect:DescribeAgentStatus
        delete: []
        update:
          - connect:UpdateAgentStatus
          - connect:UntagResource
          - connect:TagResource
        list:
          - connect:ListAgentStatuses
    Origin:
      description: Domain name to be added to the allowlist of instance
      type: string
      maxLength: 267
    InstanceId:
      description: Amazon Connect instance identifier
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
      minLength: 1
      maxLength: 100
    ApprovedOrigin:
      type: object
      properties:
        Origin:
          $ref: '#/components/schemas/Origin'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
      required:
        - Origin
        - InstanceId
      x-stackql-resource-name: approved_origin
      description: Resource Type definition for AWS::Connect::ApprovedOrigin
      x-type-name: AWS::Connect::ApprovedOrigin
      x-stackql-primary-identifier:
        - InstanceId
        - Origin
      x-create-only-properties:
        - InstanceId
        - Origin
      x-required-properties:
        - Origin
        - InstanceId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - connect:AssociateApprovedOrigin
          - connect:ListApprovedOrigins
        read:
          - connect:ListApprovedOrigins
        update: []
        delete:
          - connect:DisassociateApprovedOrigin
          - connect:ListApprovedOrigins
        list:
          - connect:ListApprovedOrigins
    ContactFlow:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 256
        ContactFlowArn:
          description: The identifier of the contact flow (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 500
        Name:
          description: The name of the contact flow.
          type: string
          minLength: 1
          maxLength: 127
        Content:
          description: The content of the contact flow in JSON format.
          type: string
          minLength: 1
          maxLength: 256000
        Description:
          description: The description of the contact flow.
          type: string
          maxLength: 500
        State:
          type: string
          description: The state of the contact flow.
          enum:
            - ACTIVE
            - ARCHIVED
        Type:
          description: The type of the contact flow.
          type: string
          enum:
            - CONTACT_FLOW
            - CUSTOMER_QUEUE
            - CUSTOMER_HOLD
            - CUSTOMER_WHISPER
            - AGENT_HOLD
            - AGENT_WHISPER
            - OUTBOUND_WHISPER
            - AGENT_TRANSFER
            - QUEUE_TRANSFER
            - CAMPAIGN
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Content
        - Name
        - Type
      x-stackql-resource-name: contact_flow
      description: Resource Type definition for AWS::Connect::ContactFlow
      x-type-name: AWS::Connect::ContactFlow
      x-stackql-primary-identifier:
        - ContactFlowArn
      x-create-only-properties:
        - Type
      x-read-only-properties:
        - ContactFlowArn
      x-required-properties:
        - InstanceArn
        - Content
        - Name
        - Type
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - connect:ListTagsForResource
          - connect:UntagResource
          - connect:TagResource
      x-required-permissions:
        create:
          - connect:CreateContactFlow
          - connect:TagResource
        read:
          - connect:DescribeContactFlow
        delete:
          - connect:DeleteContactFlow
          - connect:UntagResource
        update:
          - connect:UpdateContactFlowMetadata
          - connect:UpdateContactFlowContent
          - connect:TagResource
          - connect:UntagResource
        list:
          - connect:ListContactFlows
    ContactFlowModule:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 256
        ContactFlowModuleArn:
          description: The identifier of the contact flow module (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/flow-module/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 256
        Name:
          description: The name of the contact flow module.
          type: string
          minLength: 1
          maxLength: 127
          pattern: .*\S.*
        Content:
          description: The content of the contact flow module in JSON format.
          type: string
          minLength: 1
          maxLength: 256000
        Description:
          description: The description of the contact flow module.
          type: string
          maxLength: 500
          pattern: .*\S.*
        State:
          type: string
          description: The state of the contact flow module.
          maxLength: 500
        Status:
          type: string
          description: The status of the contact flow module.
          maxLength: 500
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Name
        - Content
      x-stackql-resource-name: contact_flow_module
      description: Resource Type definition for AWS::Connect::ContactFlowModule.
      x-type-name: AWS::Connect::ContactFlowModule
      x-stackql-primary-identifier:
        - ContactFlowModuleArn
      x-read-only-properties:
        - ContactFlowModuleArn
        - Status
      x-required-properties:
        - InstanceArn
        - Name
        - Content
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - connect:ListTagsForResource
          - connect:UntagResource
          - connect:TagResource
      x-required-permissions:
        create:
          - connect:CreateContactFlowModule
          - connect:TagResource
        read:
          - connect:DescribeContactFlowModule
        delete:
          - connect:DeleteContactFlowModule
          - connect:UntagResource
        update:
          - connect:UpdateContactFlowModuleMetadata
          - connect:UpdateContactFlowModuleContent
          - connect:TagResource
          - connect:UntagResource
        list:
          - connect:ListContactFlowModules
    EmailAddress:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          minLength: 1
          maxLength: 250
        EmailAddressArn:
          description: The identifier of the email address.
          type: string
          pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/email-address/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        Description:
          description: A description for the email address.
          type: string
          pattern: (^[\S].*[\S]$)|(^[\S]$)
          minLength: 1
          maxLength: 250
        EmailAddress:
          description: Email address to be created for this instance
          type: string
          pattern: ([^\s@]+@[^\s@]+\.[^\s@]+)
          minLength: 1
          maxLength: 255
        DisplayName:
          description: The display name for the email address.
          type: string
          pattern: (^[\S].*[\S]$)|(^[\S]$)
          minLength: 0
          maxLength: 256
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - EmailAddress
      x-stackql-resource-name: email_address
      description: Resource Type definition for AWS::Connect::EmailAddress
      x-type-name: AWS::Connect::EmailAddress
      x-stackql-primary-identifier:
        - EmailAddressArn
      x-create-only-properties:
        - EmailAddress
      x-read-only-properties:
        - EmailAddressArn
      x-required-properties:
        - InstanceArn
        - EmailAddress
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - connect:TagResource
          - connect:UntagResource
      x-required-permissions:
        create:
          - connect:CreateEmailAddress
          - connect:TagResource
          - connect:ListIntegrationAssociations
          - ses:GetEmailIdentity
          - ses:DescribeReceiptRule
          - ses:UpdateReceiptRule
          - iam:PassRole
        read:
          - connect:DescribeEmailAddress
        update:
          - connect:UpdateEmailAddressMetadata
          - connect:TagResource
          - connect:UntagResource
        delete:
          - connect:DeleteEmailAddress
          - connect:UntagResource
          - iam:PassRole
          - ses:DescribeReceiptRule
          - ses:UpdateReceiptRule
        list:
          - connect:DescribeEmailAddress
          - connect:SearchEmailAddresses
    RefId:
      description: The identifier to reference the item.
      type: string
      pattern: ^[a-zA-Z0-9._-]{1,40}$
    Weight:
      description: The item weight used for scoring.
      type: number
      minimum: 0
      maximum: 100
    Score:
      description: The score of an answer option.
      type: integer
      minimum: 0
      maximum: 10
    EvaluationFormBaseItem:
      description: An item at the root level. All items must be sections.
      type: object
      additionalProperties: false
      properties:
        Section:
          description: A subsection or inner section of an item.
          $ref: '#/components/schemas/EvaluationFormSection'
      required:
        - Section
    EvaluationFormItem:
      description: Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
      type: object
      additionalProperties: false
      properties:
        Section:
          description: The information of the section.
          $ref: '#/components/schemas/EvaluationFormSection'
        Question:
          description: The information of the question.
          $ref: '#/components/schemas/EvaluationFormQuestion'
    EvaluationFormSection:
      description: Information about a section from an evaluation form. A section can contain sections and/or questions. Evaluation forms can only contain sections and subsections (two level nesting).
      type: object
      additionalProperties: false
      properties:
        Title:
          description: |-
            The title of the section.
              *Length Constraints*: Minimum length of 1. Maximum length of 128.
          type: string
          minLength: 1
          maxLength: 128
        Instructions:
          description: The instructions of the section.
          type: string
          maxLength: 1024
        RefId:
          description: |-
            The identifier of the section. An identifier must be unique within the evaluation form.
              *Length Constraints*: Minimum length of 1. Maximum length of 40.
          $ref: '#/components/schemas/RefId'
        Items:
          description: |-
            The items of the section.
              *Minimum*: 1
          type: array
          x-insertionOrder: true
          minItems: 1
          maxItems: 200
          items:
            $ref: '#/components/schemas/EvaluationFormItem'
        Weight:
          description: |-
            The scoring weight of the section.
              *Minimum*: 0 
              *Maximum*: 100
          $ref: '#/components/schemas/Weight'
      required:
        - RefId
        - Title
    EvaluationFormNumericQuestionOption:
      description: Information about the option range used for scoring in numeric questions.
      type: object
      additionalProperties: false
      properties:
        MinValue:
          description: The minimum answer value of the range option.
          type: integer
        MaxValue:
          description: The maximum answer value of the range option.
          type: integer
        Score:
          description: |-
            The score assigned to answer values within the range option.
              *Minimum*: 0
              *Maximum*: 10
          $ref: '#/components/schemas/Score'
        AutomaticFail:
          description: The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
          type: boolean
      required:
        - MinValue
        - MaxValue
    NumericQuestionPropertyValueAutomation:
      description: Information about the property value used in automation of a numeric questions.
      type: object
      additionalProperties: false
      properties:
        Label:
          description: The property label of the automation.
          type: string
          enum:
            - OVERALL_CUSTOMER_SENTIMENT_SCORE
            - OVERALL_AGENT_SENTIMENT_SCORE
            - NON_TALK_TIME
            - NON_TALK_TIME_PERCENTAGE
            - NUMBER_OF_INTERRUPTIONS
            - CONTACT_DURATION
            - AGENT_INTERACTION_DURATION
            - CUSTOMER_HOLD_TIME
      required:
        - Label
    EvaluationFormNumericQuestionAutomation:
      description: Information about the automation configuration in numeric questions.
      type: object
      additionalProperties: false
      properties:
        PropertyValue:
          description: The property value of the automation.
          $ref: '#/components/schemas/NumericQuestionPropertyValueAutomation'
      required:
        - PropertyValue
    EvaluationFormNumericQuestionProperties:
      description: Information about properties for a numeric question in an evaluation form.
      type: object
      additionalProperties: false
      properties:
        MinValue:
          description: The minimum answer value.
          type: integer
        MaxValue:
          description: The maximum answer value.
          type: integer
        Options:
          description: The scoring options of the numeric question.
          type: array
          x-insertionOrder: true
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/EvaluationFormNumericQuestionOption'
        Automation:
          description: The automation properties of the numeric question.
          $ref: '#/components/schemas/EvaluationFormNumericQuestionAutomation'
      required:
        - MinValue
        - MaxValue
    EvaluationFormSingleSelectQuestionAutomationOption:
      description: The automation options of the single select question.
      type: object
      additionalProperties: false
      properties:
        RuleCategory:
          description: The automation option based on a rule category for the single select question.
          $ref: '#/components/schemas/SingleSelectQuestionRuleCategoryAutomation'
      required:
        - RuleCategory
    SingleSelectQuestionRuleCategoryAutomation:
      description: |-
        Information about the automation option based on a rule category for a single select question.
          *Length Constraints*: Minimum length of 1. Maximum length of 50.
      type: object
      additionalProperties: false
      properties:
        Category:
          description: |-
            The category name, as defined in Rules.
              *Minimum*: 1
              *Maximum*: 50
          type: string
          minLength: 1
          maxLength: 50
        Condition:
          description: |-
            The condition to apply for the automation option. If the condition is PRESENT, then the option is applied when the contact data includes the category. Similarly, if the condition is NOT_PRESENT, then the option is applied when the contact data does not include the category.
              *Allowed values*: ``PRESENT`` | ``NOT_PRESENT`` 
              *Maximum*: 50
          type: string
          enum:
            - PRESENT
            - NOT_PRESENT
        OptionRefId:
          description: |-
            The identifier of the answer option. An identifier must be unique within the question.
              *Length Constraints*: Minimum length of 1. Maximum length of 40.
          $ref: '#/components/schemas/RefId'
      required:
        - Category
        - Condition
        - OptionRefId
    EvaluationFormSingleSelectQuestionAutomation:
      description: Information about the automation configuration in single select questions. Automation options are evaluated in order, and the first matched option is applied. If no automation option matches, and there is a default option, then the default option is applied.
      type: object
      additionalProperties: false
      properties:
        Options:
          description: |-
            The automation options of the single select question.
              *Minimum*: 1
              *Maximum*: 20
          type: array
          x-insertionOrder: true
          minItems: 1
          maxItems: 20
          items:
            $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionAutomationOption'
        DefaultOptionRefId:
          description: |-
            The identifier of the default answer option, when none of the automation options match the criteria.
              *Length Constraints*: Minimum length of 1. Maximum length of 40.
          $ref: '#/components/schemas/RefId'
      required:
        - Options
    EvaluationFormSingleSelectQuestionOption:
      description: Information about the automation configuration in single select questions.
      type: object
      additionalProperties: false
      properties:
        RefId:
          description: |-
            The identifier of the answer option. An identifier must be unique within the question.
              *Length Constraints*: Minimum length of 1. Maximum length of 40.
          $ref: '#/components/schemas/RefId'
        Text:
          description: |-
            The title of the answer option.
              *Length Constraints*: Minimum length of 1. Maximum length of 128.
          type: string
          minLength: 1
          maxLength: 128
        Score:
          description: |-
            The score assigned to the answer option.
              *Minimum*: 0
              *Maximum*: 10
          $ref: '#/components/schemas/Score'
        AutomaticFail:
          description: The flag to mark the option as automatic fail. If an automatic fail answer is provided, the overall evaluation gets a score of 0.
          type: boolean
      required:
        - RefId
        - Text
    EvaluationFormSingleSelectQuestionProperties:
      description: Information about the options in single select questions.
      type: object
      additionalProperties: false
      properties:
        Options:
          description: |-
            The answer options of the single select question.
              *Minimum*: 2
              *Maximum*: 256
          type: array
          x-insertionOrder: true
          minItems: 2
          maxItems: 256
          items:
            $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionOption'
        DisplayAs:
          description: |-
            The display mode of the single select question.
              *Allowed values*: ``DROPDOWN`` | ``RADIO``
          type: string
          enum:
            - DROPDOWN
            - RADIO
        Automation:
          description: The display mode of the single select question.
          $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionAutomation'
      required:
        - Options
    EvaluationFormQuestionTypeProperties:
      description: Information about properties for a question in an evaluation form. The question type properties must be either for a numeric question or a single select question.
      type: object
      additionalProperties: false
      properties:
        Numeric:
          description: The properties of the numeric question.
          $ref: '#/components/schemas/EvaluationFormNumericQuestionProperties'
        SingleSelect:
          description: The properties of the numeric question.
          $ref: '#/components/schemas/EvaluationFormSingleSelectQuestionProperties'
    EvaluationFormQuestion:
      description: Information about a question from an evaluation form.
      type: object
      additionalProperties: false
      properties:
        Title:
          description: |-
            The title of the question.
              *Length Constraints*: Minimum length of 1. Maximum length of 350.
          type: string
          minLength: 1
          maxLength: 350
        Instructions:
          description: |-
            The instructions of the section.
              *Length Constraints*: Minimum length of 0. Maximum length of 1024.
          type: string
          maxLength: 1024
        RefId:
          description: |-
            The identifier of the question. An identifier must be unique within the evaluation form.
              *Length Constraints*: Minimum length of 1. Maximum length of 40.
          $ref: '#/components/schemas/RefId'
        NotApplicableEnabled:
          description: The flag to enable not applicable answers to the question.
          type: boolean
        QuestionType:
          description: |-
            The type of the question.
              *Allowed values*: ``NUMERIC`` | ``SINGLESELECT`` | ``TEXT``
          type: string
          enum:
            - NUMERIC
            - SINGLESELECT
            - TEXT
        QuestionTypeProperties:
          description: The properties of the type of question. Text questions do not have to define question type properties.
          $ref: '#/components/schemas/EvaluationFormQuestionTypeProperties'
        Weight:
          description: |-
            The scoring weight of the section.
              *Minimum*: 0
              *Maximum*: 100
          $ref: '#/components/schemas/Weight'
      required:
        - RefId
        - Title
        - QuestionType
    ScoringStrategy:
      description: A scoring strategy of the evaluation form.
      type: object
      additionalProperties: false
      properties:
        Mode:
          description: |-
            The scoring mode of the evaluation form.
              *Allowed values*: ``QUESTION_ONLY`` | ``SECTION_ONLY``
          type: string
          enum:
            - QUESTION_ONLY
            - SECTION_ONLY
        Status:
          description: |-
            The scoring status of the evaluation form.
              *Allowed values*: ``ENABLED`` | ``DISABLED``
          type: string
          enum:
            - ENABLED
            - DISABLED
      required:
        - Mode
        - Status
    EvaluationForm:
      type: object
      properties:
        Title:
          description: A title of the evaluation form.
          type: string
          minLength: 1
          maxLength: 128
        Description:
          description: |-
            The description of the evaluation form.
              *Length Constraints*: Minimum length of 0. Maximum length of 1024.
          type: string
          maxLength: 1024
        EvaluationFormArn:
          description: ''
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/evaluation-form/[-a-zA-Z0-9]*$
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Items:
          description: |-
            Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
              *Minimum size*: 1
              *Maximum size*: 100
          type: array
          x-insertionOrder: true
          minItems: 1
          maxItems: 200
          items:
            $ref: '#/components/schemas/EvaluationFormBaseItem'
        ScoringStrategy:
          description: A scoring strategy of the evaluation form.
          $ref: '#/components/schemas/ScoringStrategy'
        Status:
          description: |-
            The status of the evaluation form.
              *Allowed values*: ``DRAFT`` | ``ACTIVE``
          type: string
          default: DRAFT
          enum:
            - DRAFT
            - ACTIVE
        Tags:
          description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Title
        - InstanceArn
        - Items
        - Status
      x-stackql-resource-name: evaluation_form
      description: Creates an evaluation form for the specified CON instance.
      x-type-name: AWS::Connect::EvaluationForm
      x-stackql-primary-identifier:
        - EvaluationFormArn
      x-read-only-properties:
        - EvaluationFormArn
      x-required-properties:
        - Title
        - InstanceArn
        - Items
        - Status
      x-tagging:
        taggable: true
        tagOnCreate: false
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - connect:ListTagsForResource
          - connect:UntagResource
          - connect:TagResource
      x-required-permissions:
        create:
          - connect:CreateEvaluationForm
          - connect:ActivateEvaluationForm
          - connect:TagResource
        read:
          - connect:DescribeEvaluationForm
          - connect:ListEvaluationFormVersions
        list:
          - connect:ListEvaluationForms
        update:
          - connect:UpdateEvaluationForm
          - connect:ListEvaluationFormVersions
          - connect:ActivateEvaluationForm
          - connect:DeactivateEvaluationForm
          - connect:TagResource
          - connect:UntagResource
        delete:
          - connect:DeleteEvaluationForm
          - connect:UntagResource
    HoursOfOperationTimeSlice:
      description: The start time or end time for an hours of operation.
      type: object
      additionalProperties: false
      properties:
        Hours:
          type: integer
          description: The hours.
          minimum: 0
          maximum: 23
        Minutes:
          type: integer
          description: The minutes.
          minimum: 0
          maximum: 59
      required:
        - Hours
        - Minutes
    HoursOfOperationConfig:
      description: Contains information about the hours of operation.
      type: object
      additionalProperties: false
      properties:
        Day:
          type: string
          description: The day that the hours of operation applies to.
          enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
        StartTime:
          description: The start time that your contact center opens.
          $ref: '#/components/schemas/HoursOfOperationTimeSlice'
        EndTime:
          description: The end time that your contact center closes.
          $ref: '#/components/schemas/HoursOfOperationTimeSlice'
      required:
        - Day
        - StartTime
        - EndTime
    OverrideTimeSlice:
      description: The start time or end time for an an hours of operation override.
      type: object
      additionalProperties: false
      properties:
        Hours:
          type: integer
          description: The hours.
          minimum: 0
          maximum: 23
        Minutes:
          type: integer
          description: The minutes.
          minimum: 0
          maximum: 59
      required:
        - Hours
        - Minutes
    HoursOfOperationOverrideConfig:
      description: Contains information about the hours of operation override.
      type: object
      additionalProperties: false
      properties:
        Day:
          type: string
          description: The day that the hours of operation override applies to.
          enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
        StartTime:
          description: The new start time that your contact center opens for the overriden days.
          $ref: '#/components/schemas/OverrideTimeSlice'
        EndTime:
          description: The new end time that your contact center closes for the overriden days.
          $ref: '#/components/schemas/OverrideTimeSlice'
      required:
        - Day
        - StartTime
        - EndTime
    HoursOfOperationOverride:
      description: Overrides attached to the hours of operation.
      type: object
      additionalProperties: false
      properties:
        OverrideName:
          $ref: '#/components/schemas/OverrideName'
        OverrideDescription:
          $ref: '#/components/schemas/OverrideDescription'
        EffectiveFrom:
          $ref: '#/components/schemas/EffectiveFrom'
        EffectiveTill:
          $ref: '#/components/schemas/EffectiveTill'
        OverrideConfig:
          $ref: '#/components/schemas/OverrideConfig'
        HoursOfOperationOverrideId:
          $ref: '#/components/schemas/HoursOfOperationOverrideId'
      required:
        - OverrideName
        - EffectiveFrom
        - EffectiveTill
        - OverrideConfig
    OverrideName:
      description: The name of the hours of operation override.
      type: string
      minLength: 1
      maxLength: 127
    OverrideDescription:
      description: The description of the hours of operation override.
      type: string
      minLength: 1
      maxLength: 250
    EffectiveFrom:
      description: The date from which the hours of operation override would be effective.
      type: string
      pattern: ^\d{4}-\d{2}-\d{2}$
    EffectiveTill:
      description: The date till which the hours of operation override would be effective.
      type: string
      pattern: ^\d{4}-\d{2}-\d{2}$
    OverrideConfig:
      description: 'Configuration information for the hours of operation override: day, start time, and end time.'
      type: array
      maxItems: 100
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/HoursOfOperationOverrideConfig'
    HoursOfOperationOverrideId:
      description: The Resource Identifier for the hours of operation override.
      type: string
      pattern: ^[-a-zA-Z0-9]*$
    HoursOfOperation:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the hours of operation.
          type: string
          minLength: 1
          maxLength: 127
        Description:
          description: The description of the hours of operation.
          type: string
          minLength: 1
          maxLength: 250
        TimeZone:
          description: The time zone of the hours of operation.
          type: string
        Config:
          description: 'Configuration information for the hours of operation: day, start time, and end time.'
          type: array
          maxItems: 100
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/HoursOfOperationConfig'
        HoursOfOperationArn:
          description: The Amazon Resource Name (ARN) for the hours of operation.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/operating-hours/[-a-zA-Z0-9]*$
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        HoursOfOperationOverrides:
          description: One or more hours of operation overrides assigned to an hour of operation.
          type: array
          maxItems: 50
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/HoursOfOperationOverride'
      required:
        - InstanceArn
        - Name
        - TimeZone
        - Config
      x-stackql-resource-name: hours_of_operation
      description: Resource Type definition for AWS::Connect::HoursOfOperation
      x-type-name: AWS::Connect::HoursOfOperation
      x-stackql-primary-identifier:
        - HoursOfOperationArn
      x-read-only-properties:
        - HoursOfOperationArn
      x-required-properties:
        - InstanceArn
        - Name
        - TimeZone
        - Config
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - connect:TagResource
          - connect:UntagResource
      x-required-permissions:
        create:
          - connect:CreateHoursOfOperation
          - connect:TagResource
          - connect:CreateHoursOfOperationOverride
        read:
          - connect:DescribeHoursOfOperation
          - connect:ListHoursOfOperationOverrides
        delete:
          - connect:DeleteHoursOfOperation
          - connect:UntagResource
        update:
          - connect:UpdateHoursOfOperation
          - connect:CreateHoursOfOperationOverride
          - connect:UpdateHoursOfOperationOverride
          - connect:DeleteHoursOfOperationOverride
          - connect:ListHoursOfOperationOverrides
          - connect:TagResource
          - connect:UntagResource
        list:
          - connect:ListHoursOfOperations
    InboundCalls:
      description: Mandatory element which enables inbound calls on new instance.
      type: boolean
    OutboundCalls:
      description: Mandatory element which enables outbound calls on new instance.
      type: boolean
    ContactflowLogs:
      description: Boolean flag which enables CONTACTFLOW_LOGS on an instance.
      type: boolean
    ContactLens:
      description: Boolean flag which enables CONTACT_LENS on an instance.
      type: boolean
    AutoResolveBestVoices:
      description: Boolean flag which enables AUTO_RESOLVE_BEST_VOICES on an instance.
      type: boolean
    UseCustomTTSVoices:
      description: Boolean flag which enables USE_CUSTOM_TTS_VOICES on an instance.
      type: boolean
    EarlyMedia:
      description: Boolean flag which enables EARLY_MEDIA on an instance.
      type: boolean
    Attributes:
      type: object
      additionalProperties: false
      properties:
        InboundCalls:
          $ref: '#/components/schemas/InboundCalls'
        OutboundCalls:
          $ref: '#/components/schemas/OutboundCalls'
        ContactflowLogs:
          $ref: '#/components/schemas/ContactflowLogs'
        ContactLens:
          $ref: '#/components/schemas/ContactLens'
        AutoResolveBestVoices:
          $ref: '#/components/schemas/AutoResolveBestVoices'
        UseCustomTTSVoices:
          $ref: '#/components/schemas/UseCustomTTSVoices'
        EarlyMedia:
          $ref: '#/components/schemas/EarlyMedia'
      required:
        - InboundCalls
        - OutboundCalls
    Instance:
      type: object
      properties:
        Id:
          description: An instanceId is automatically generated on creation and assigned as the unique identifier.
          type: string
        Arn:
          description: An instanceArn is automatically generated on creation based on instanceId.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        IdentityManagementType:
          description: Specifies the type of directory integration for new instance.
          type: string
          enum:
            - SAML
            - CONNECT_MANAGED
            - EXISTING_DIRECTORY
        InstanceAlias:
          description: Alias of the new directory created as part of new instance creation.
          type: string
          pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$
          minLength: 1
          maxLength: 62
        CreatedTime:
          description: Timestamp of instance creation logged as part of instance creation.
          type: string
          format: date-time
        ServiceRole:
          description: Service linked role created as part of instance creation.
          type: string
        InstanceStatus:
          description: Specifies the creation status of new instance.
          type: string
          enum:
            - CREATION_IN_PROGRESS
            - CREATION_FAILED
            - ACTIVE
        DirectoryId:
          description: Existing directoryId user wants to map to the new Connect instance.
          type: string
          pattern: ^d-[0-9a-f]{10}$
          minLength: 12
          maxLength: 12
        Attributes:
          description: The attributes for the instance.
          $ref: '#/components/schemas/Attributes'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - IdentityManagementType
        - Attributes
      x-stackql-resource-name: instance
      description: Resource Type definition for AWS::Connect::Instance
      x-type-name: AWS::Connect::Instance
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DirectoryId
        - InstanceAlias
        - IdentityManagementType
      x-write-only-properties:
        - DirectoryId
      x-read-only-properties:
        - Id
        - Arn
        - ServiceRole
        - CreatedTime
        - InstanceStatus
      x-required-properties:
        - IdentityManagementType
        - Attributes
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateInstance
          - connect:DescribeInstance
          - connect:UpdateInstanceAttribute
          - connect:TagResource
          - ds:CheckAlias
          - ds:CreateAlias
          - ds:AuthorizeApplication
          - ds:UnauthorizeApplication
          - ds:CreateIdentityPoolDirectory
          - ds:CreateDirectory
          - ds:DescribeDirectories
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - logs:CreateLogGroup
        read:
          - connect:DescribeInstance
          - connect:ListInstanceAttributes
          - ds:DescribeDirectories
        update:
          - connect:ListInstanceAttributes
          - connect:UpdateInstanceAttribute
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - connect:TagResource
          - connect:UntagResource
        delete:
          - connect:DeleteInstance
          - connect:DescribeInstance
          - connect:UntagResource
          - ds:DeleteDirectory
          - ds:UnauthorizeApplication
          - ds:DescribeDirectories
        list:
          - connect:ListInstances
          - connect:ListInstanceAttributes
          - ds:DescribeDirectories
    KinesisStreamArn:
      description: An ARN is a unique AWS resource identifier.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:kinesis:[-a-z0-9]*:[0-9]{12}:stream/[-a-zA-Z0-9_.]*$
    FirehoseDeliveryStreamArn:
      description: An ARN is a unique AWS resource identifier.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:firehose:[-a-z0-9]*:[0-9]{12}:deliverystream/[-a-zA-Z0-9_.]*$
    AssociationId:
      description: An associationID is automatically generated when a storage config is associated with an instance
      type: string
      pattern: ^[-a-z0-9]*$
      minLength: 1
      maxLength: 100
    InstanceStorageResourceType:
      description: Specifies the type of storage resource available for the instance
      type: string
      enum:
        - CHAT_TRANSCRIPTS
        - CALL_RECORDINGS
        - SCHEDULED_REPORTS
        - MEDIA_STREAMS
        - CONTACT_TRACE_RECORDS
        - AGENT_EVENTS
    StorageType:
      description: Specifies the storage type to be associated with the instance
      type: string
      enum:
        - S3
        - KINESIS_VIDEO_STREAM
        - KINESIS_STREAM
        - KINESIS_FIREHOSE
    BucketName:
      description: A name for the S3 Bucket
      type: string
      minLength: 1
      maxLength: 128
    Hours:
      description: Number of hours
      type: number
    Prefix:
      description: Prefixes are used to infer logical hierarchy
      type: string
      minLength: 1
      maxLength: 128
    EncryptionType:
      description: Specifies default encryption using AWS KMS-Managed Keys
      type: string
      enum:
        - KMS
    KeyId:
      description: Specifies the encryption key id
      type: string
      minLength: 1
      maxLength: 128
    EncryptionConfig:
      type: object
      additionalProperties: false
      properties:
        EncryptionType:
          $ref: '#/components/schemas/EncryptionType'
        KeyId:
          $ref: '#/components/schemas/KeyId'
      required:
        - EncryptionType
        - KeyId
    S3Config:
      type: object
      additionalProperties: false
      properties:
        BucketName:
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          $ref: '#/components/schemas/Prefix'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
        - BucketName
        - BucketPrefix
    KinesisVideoStreamConfig:
      type: object
      additionalProperties: false
      properties:
        Prefix:
          $ref: '#/components/schemas/Prefix'
        RetentionPeriodHours:
          $ref: '#/components/schemas/Hours'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
        - Prefix
        - RetentionPeriodHours
        - EncryptionConfig
    KinesisStreamConfig:
      type: object
      additionalProperties: false
      properties:
        StreamArn:
          $ref: '#/components/schemas/KinesisStreamArn'
      required:
        - StreamArn
    KinesisFirehoseConfig:
      type: object
      additionalProperties: false
      properties:
        FirehoseArn:
          $ref: '#/components/schemas/FirehoseDeliveryStreamArn'
      required:
        - FirehoseArn
    InstanceStorageConfig:
      type: object
      properties:
        InstanceArn:
          description: Connect Instance ID with which the storage config will be associated
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        ResourceType:
          $ref: '#/components/schemas/InstanceStorageResourceType'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        StorageType:
          $ref: '#/components/schemas/StorageType'
        S3Config:
          $ref: '#/components/schemas/S3Config'
        KinesisVideoStreamConfig:
          $ref: '#/components/schemas/KinesisVideoStreamConfig'
        KinesisStreamConfig:
          $ref: '#/components/schemas/KinesisStreamConfig'
        KinesisFirehoseConfig:
          $ref: '#/components/schemas/KinesisFirehoseConfig'
      required:
        - InstanceArn
        - ResourceType
        - StorageType
      x-stackql-resource-name: instance_storage_config
      description: Resource Type definition for AWS::Connect::InstanceStorageConfig
      x-type-name: AWS::Connect::InstanceStorageConfig
      x-stackql-primary-identifier:
        - InstanceArn
        - AssociationId
        - ResourceType
      x-create-only-properties:
        - InstanceArn
        - ResourceType
      x-read-only-properties:
        - AssociationId
      x-required-properties:
        - InstanceArn
        - ResourceType
        - StorageType
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - connect:AssociateInstanceStorageConfig
          - connect:DescribeInstance
          - ds:DescribeDirectories
          - s3:GetBucketAcl
          - s3:GetBucketLocation
          - iam:PutRolePolicy
          - kinesis:DescribeStream
          - kms:DescribeKey
          - kms:CreateGrant
          - firehose:DescribeDeliveryStream
        read:
          - connect:DescribeInstanceStorageConfig
          - connect:ListInstanceStorageConfigs
          - connect:DescribeInstance
          - ds:DescribeDirectories
          - s3:GetBucketAcl
          - s3:GetBucketLocation
        update:
          - connect:UpdateInstanceStorageConfig
          - ds:DescribeDirectories
          - s3:GetBucketAcl
          - s3:GetBucketLocation
          - kinesis:DescribeStream
          - iam:PutRolePolicy
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:RetireGrant
          - firehose:DescribeDeliveryStream
        delete:
          - connect:DisassociateInstanceStorageConfig
          - connect:DescribeInstance
          - s3:GetBucketAcl
          - s3:GetBucketLocation
          - kms:RetireGrant
        list:
          - connect:DescribeInstance
          - connect:ListInstanceStorageConfigs
          - ds:DescribeDirectories
    IntegrationArn:
      description: ARN of Integration being associated with the instance
      type: string
      minLength: 1
      maxLength: 140
    IntegrationType:
      description: Specifies the integration type to be associated with the instance
      type: string
      enum:
        - LEX_BOT
        - LAMBDA_FUNCTION
        - APPLICATION
    IntegrationAssociationId:
      description: Identifier of the association with Connect Instance
      type: string
      pattern: ^[a-zA-Z]{1}(?:-?[a-zA-Z0-9])*$
    IntegrationAssociation:
      type: object
      properties:
        IntegrationAssociationId:
          $ref: '#/components/schemas/IntegrationAssociationId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        IntegrationArn:
          $ref: '#/components/schemas/IntegrationArn'
        IntegrationType:
          $ref: '#/components/schemas/IntegrationType'
      required:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      x-stackql-resource-name: integration_association
      description: Resource Type definition for AWS::Connect::IntegrationAssociation
      x-type-name: AWS::Connect::IntegrationAssociation
      x-stackql-primary-identifier:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      x-create-only-properties:
        - InstanceId
        - IntegrationArn
        - IntegrationType
      x-read-only-properties:
        - IntegrationAssociationId
      x-required-properties:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - connect:DescribeInstance
          - ds:DescribeDirectories
          - app-integrations:CreateEventIntegrationAssociation
          - mobiletargeting:GetApp
          - cases:GetDomain
          - wisdom:GetAssistant
          - wisdom:GetKnowledgeBase
          - wisdom:TagResource
          - voiceid:DescribeDomain
          - events:PutTargets
          - events:PutRule
          - connect:AssociateBot
          - connect:AssociateLambdaFunction
          - connect:CreateIntegrationAssociation
          - connect:ListBots
          - connect:ListLambdaFunctions
          - connect:ListIntegrationAssociations
          - lambda:addPermission
          - lex:GetBot
          - lex:DescribeBotAlias
          - lex:CreateResourcePolicy
          - lex:UpdateResourcePolicy
          - lex:CreateResourcePolicyStatement
          - lambda:AddPermission
          - app-integrations:GetApplication
          - app-integrations:CreateApplicationAssociation
          - iam:AttachRolePolicy
          - iam:CreateServiceLinkedRole
          - iam:GetRolePolicy
          - iam:PutRolePolicy
        read:
          - connect:ListBots
          - connect:ListLambdaFunctions
          - connect:ListIntegrationAssociations
        update: []
        delete:
          - connect:DescribeInstance
          - ds:DescribeDirectories
          - app-integrations:DeleteEventIntegrationAssociation
          - app-integrations:DeleteApplicationAssociation
          - events:ListTargetsByRule
          - events:RemoveTargets
          - events:DeleteRule
          - connect:DisassociateBot
          - connect:DisassociateLambdaFunction
          - connect:DeleteIntegrationAssociation
          - connect:ListBots
          - connect:ListLambdaFunctions
          - connect:ListIntegrationAssociations
          - lex:DeleteResourcePolicy
          - lex:DeleteResourcePolicyStatement
          - lambda:RemovePermission
          - iam:GetRolePolicy
          - iam:DeleteRolePolicy
          - iam:PutRolePolicy
        list:
          - connect:ListBots
          - connect:ListLambdaFunctions
          - connect:ListIntegrationAssociations
    PhoneNumber:
      description: The phone number in E.164 format.
      type: string
      pattern: ^\+[1-9]\d{1,14}$
    StringList:
      description: Predefined attribute values of type string list.
      type: array
      minItems: 1
      maxItems: 128
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/Value'
    Value:
      type: string
      description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
      minLength: 0
      maxLength: 256
    PredefinedAttribute:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the predefined attribute.
          type: string
          minLength: 1
          maxLength: 64
        Values:
          description: The values of a predefined attribute.
          type: object
          properties:
            StringList:
              $ref: '#/components/schemas/StringList'
          additionalProperties: false
        LastModifiedRegion:
          description: Last modified region.
          type: string
          pattern: '[a-z]{2}(-[a-z]+){1,2}(-[0-9])?'
        LastModifiedTime:
          description: Last modified time.
          type: number
      required:
        - InstanceArn
        - Name
        - Values
      x-stackql-resource-name: predefined_attribute
      description: Resource Type definition for AWS::Connect::PredefinedAttribute
      x-type-name: AWS::Connect::PredefinedAttribute
      x-stackql-primary-identifier:
        - InstanceArn
        - Name
      x-create-only-properties:
        - InstanceArn
        - Name
      x-read-only-properties:
        - LastModifiedRegion
        - LastModifiedTime
      x-required-properties:
        - InstanceArn
        - Name
        - Values
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - connect:CreatePredefinedAttribute
        read:
          - connect:DescribePredefinedAttribute
        delete:
          - connect:DeletePredefinedAttribute
        update:
          - connect:UpdatePredefinedAttribute
        list:
          - connect:ListPredefinedAttributes
    Prompt:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the prompt.
          type: string
          minLength: 1
          maxLength: 127
        Description:
          description: The description of the prompt.
          type: string
          minLength: 1
          maxLength: 250
        S3Uri:
          description: S3 URI of the customer's audio file for creating prompts resource..
          type: string
          minLength: 1
          maxLength: 2000
          pattern: s3://\S+/.+|https://\S+\.s3(\.\S+)?\.amazonaws\.com/\S+
        PromptArn:
          description: The Amazon Resource Name (ARN) for the prompt.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/prompt/[-a-zA-Z0-9]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Name
      x-stackql-resource-name: prompt
      description: Resource Type definition for AWS::Connect::Prompt
      x-type-name: AWS::Connect::Prompt
      x-stackql-primary-identifier:
        - PromptArn
      x-write-only-properties:
        - S3Uri
      x-read-only-properties:
        - PromptArn
      x-required-properties:
        - InstanceArn
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreatePrompt
          - connect:TagResource
          - s3:GetObject
          - kms:Decrypt
          - s3:GetObjectAcl
        read:
          - connect:DescribePrompt
        update:
          - connect:UpdatePrompt
          - connect:TagResource
          - connect:UntagResource
        delete:
          - connect:DeletePrompt
        list:
          - connect:ListPrompts
    OutboundCallerIdName:
      description: The caller ID name.
      type: string
      minLength: 1
      maxLength: 255
    OutboundCallerIdNumberArn:
      description: The caller ID number.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:phone-number/[-a-zA-Z0-9]*$
    OutboundFlowArn:
      description: The outbound whisper flow to be used during an outbound call.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
      minLength: 1
      maxLength: 500
    OutboundEmailAddressId:
      description: The email address connect resource ID.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/email-address/[-a-zA-Z0-9]*$
    Key:
      description: A valid security key in PEM format.
      type: string
      minLength: 1
      maxLength: 1024
    OutboundCallerConfig:
      description: The outbound caller ID name, number, and outbound whisper flow.
      type: object
      additionalProperties: false
      properties:
        OutboundCallerIdName:
          $ref: '#/components/schemas/OutboundCallerIdName'
        OutboundCallerIdNumberArn:
          $ref: '#/components/schemas/OutboundCallerIdNumberArn'
        OutboundFlowArn:
          $ref: '#/components/schemas/OutboundFlowArn'
    OutboundEmailConfig:
      description: The outbound email address ID.
      type: object
      additionalProperties: false
      properties:
        OutboundEmailAddressId:
          $ref: '#/components/schemas/OutboundEmailAddressId'
    QuickConnectArn:
      description: The Amazon Resource Name (ARN) for the quick connect.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/transfer-destination/[-a-zA-Z0-9]*$
    Queue:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Description:
          description: The description of the queue.
          type: string
          minLength: 1
          maxLength: 250
        HoursOfOperationArn:
          description: The identifier for the hours of operation.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/operating-hours/[-a-zA-Z0-9]*$
        MaxContacts:
          description: The maximum number of contacts that can be in the queue before it is considered full.
          type: integer
          minimum: 0
        Name:
          description: The name of the queue.
          type: string
          minLength: 1
          maxLength: 127
        OutboundCallerConfig:
          description: The outbound caller ID name, number, and outbound whisper flow.
          $ref: '#/components/schemas/OutboundCallerConfig'
        OutboundEmailConfig:
          description: The outbound email address ID.
          $ref: '#/components/schemas/OutboundEmailConfig'
        QueueArn:
          description: The Amazon Resource Name (ARN) for the queue.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/queue/[-a-zA-Z0-9]*$
        Status:
          description: The status of the queue.
          type: string
          enum:
            - ENABLED
            - DISABLED
        QuickConnectArns:
          description: The quick connects available to agents who are working the queue.
          type: array
          minItems: 1
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/QuickConnectArn'
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        Type:
          type: string
          description: The type of queue.
          enum:
            - STANDARD
            - AGENT
      required:
        - InstanceArn
        - HoursOfOperationArn
        - Name
      x-stackql-resource-name: queue
      description: Resource Type definition for AWS::Connect::Queue
      x-type-name: AWS::Connect::Queue
      x-stackql-primary-identifier:
        - QueueArn
      x-read-only-properties:
        - QueueArn
        - Type
      x-required-properties:
        - InstanceArn
        - HoursOfOperationArn
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - connect:TagResource
          - connect:UntagResource
      x-required-permissions:
        create:
          - connect:CreateQueue
          - connect:TagResource
        read:
          - connect:DescribeQueue
          - connect:ListQueueQuickConnects
        delete:
          - connect:DeleteQueue
          - connect:UntagResource
        update:
          - connect:UpdateQueueHoursOfOperation
          - connect:UpdateQueueMaxContacts
          - connect:UpdateQueueName
          - connect:UpdateQueueOutboundCallerConfig
          - connect:UpdateQueueOutboundEmailConfig
          - connect:UpdateQueueStatus
          - connect:AssociateQueueQuickConnects
          - connect:DisassociateQueueQuickConnects
          - connect:TagResource
          - connect:UntagResource
        list:
          - connect:ListQueues
          - connect:ListQueueQuickConnects
    ContactFlowArn:
      description: The identifier of the contact flow.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
    QueueArn:
      description: The Amazon Resource Name (ARN) for the queue.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/queue/[-a-zA-Z0-9]*$
    UserArn:
      description: The Amazon Resource Name (ARN) of the user.
      type: string
      pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent/[-a-zA-Z0-9]*$
    PhoneNumberQuickConnectConfig:
      description: The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
      type: object
      additionalProperties: false
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
      required:
        - PhoneNumber
    QueueQuickConnectConfig:
      description: The queue configuration. This is required only if QuickConnectType is QUEUE.
      type: object
      additionalProperties: false
      properties:
        ContactFlowArn:
          $ref: '#/components/schemas/ContactFlowArn'
        QueueArn:
          $ref: '#/components/schemas/QueueArn'
      required:
        - ContactFlowArn
        - QueueArn
    UserQuickConnectConfig:
      description: The user configuration. This is required only if QuickConnectType is USER.
      type: object
      additionalProperties: false
      properties:
        ContactFlowArn:
          $ref: '#/components/schemas/ContactFlowArn'
        UserArn:
          $ref: '#/components/schemas/UserArn'
      required:
        - ContactFlowArn
        - UserArn
    QuickConnectConfig:
      description: Configuration settings for the quick connect.
      type: object
      additionalProperties: false
      properties:
        QuickConnectType:
          $ref: '#/components/schemas/QuickConnectType'
        PhoneConfig:
          $ref: '#/components/schemas/PhoneNumberQuickConnectConfig'
        QueueConfig:
          $ref: '#/components/schemas/QueueQuickConnectConfig'
        UserConfig:
          $ref: '#/components/schemas/UserQuickConnectConfig'
      required:
        - QuickConnectType
    QuickConnectType:
      description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
      type: string
      enum:
        - PHONE_NUMBER
        - QUEUE
        - USER
    QuickConnect:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the quick connect.
          type: string
          minLength: 1
          maxLength: 127
        Description:
          description: The description of the quick connect.
          type: string
          minLength: 1
          maxLength: 250
        QuickConnectConfig:
          description: Configuration settings for the quick connect.
          $ref: '#/components/schemas/QuickConnectConfig'
        QuickConnectArn:
          description: The Amazon Resource Name (ARN) for the quick connect.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/transfer-destination/[-a-zA-Z0-9]*$
        Tags:
          type: array
          maxItems: 200
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
        QuickConnectType:
          description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
          type: string
          enum:
            - PHONE_NUMBER
            - QUEUE
            - USER
      required:
        - Name
        - InstanceArn
        - QuickConnectConfig
      x-stackql-resource-name: quick_connect
      description: Resource Type definition for AWS::Connect::QuickConnect
      x-type-name: AWS::Connect::QuickConnect
      x-stackql-primary-identifier:
        - QuickConnectArn
      x-read-only-properties:
        - QuickConnectArn
        - QuickConnectType
      x-required-properties:
        - Name
        - InstanceArn
        - QuickConnectConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateQuickConnect
          - connect:TagResource
        read:
          - connect:DescribeQuickConnect
        delete:
          - connect:DeleteQuickConnect
          - connect:UntagResource
        update:
          - connect:UpdateQuickConnectName
          - connect:UpdateQuickConnectConfig
          - connect:TagResource
          - connect:UntagResource
        list:
          - connect:ListQuickConnects
    Channel:
      description: The channels that agents can handle in the Contact Control Panel (CCP).
      type: string
      enum:
        - VOICE
        - CHAT
        - TASK
    Concurrency:
      description: The number of contacts an agent can have on a channel simultaneously.
      type: integer
      minimum: 1
      maximum: 10
    BehaviorType:
      description: Specifies the other channels that can be routed to an agent handling their current channel.
      type: string
      enum:
        - ROUTE_CURRENT_CHANNEL_ONLY
        - ROUTE_ANY_CHANNEL
    CrossChannelBehavior:
      description: Defines the cross-channel routing behavior that allows an agent working on a contact in one channel to be offered a contact from a different channel.
      type: object
      additionalProperties: false
      properties:
        BehaviorType:
          $ref: '#/components/schemas/BehaviorType'
      required:
        - BehaviorType
    MediaConcurrency:
      description: Contains information about which channels are supported, and how many contacts an agent can have on a channel simultaneously.
      type: object
      additionalProperties: false
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
        Concurrency:
          $ref: '#/components/schemas/Concurrency'
        CrossChannelBehavior:
          $ref: '#/components/schemas/CrossChannelBehavior'
      required:
        - Channel
        - Concurrency
    Delay:
      description: The delay, in seconds, a contact should wait in the queue before they are routed to an available agent.
      type: integer
      minimum: 0
      maximum: 9999
    Priority:
      description: The order in which contacts are to be handled for the queue.
      type: integer
      minimum: 1
      maximum: 99
    RoutingProfileQueueReference:
      description: Contains the channel and queue identifier for a routing profile.
      type: object
      additionalProperties: false
      properties:
        Channel:
          $ref: '#/components/schemas/Channel'
        QueueArn:
          $ref: '#/components/schemas/QueueArn'
      required:
        - Channel
        - QueueArn
    RoutingProfileQueueConfig:
      description: Contains information about the queue and channel for which priority and delay can be set.
      type: object
      additionalProperties: false
      properties:
        Delay:
          $ref: '#/components/schemas/Delay'
        Priority:
          $ref: '#/components/schemas/Priority'
        QueueReference:
          $ref: '#/components/schemas/RoutingProfileQueueReference'
      required:
        - Delay
        - Priority
        - QueueReference
    RoutingProfile:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the routing profile.
          type: string
          minLength: 1
          maxLength: 127
        Description:
          description: The description of the routing profile.
          type: string
          minLength: 1
          maxLength: 250
        MediaConcurrencies:
          description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MediaConcurrency'
        DefaultOutboundQueueArn:
          description: The identifier of the default outbound queue for this routing profile.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/queue/[-a-zA-Z0-9]*$
        RoutingProfileArn:
          description: The Amazon Resource Name (ARN) of the routing profile.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/routing-profile/[-a-zA-Z0-9]*$
        QueueConfigs:
          description: The queues to associate with this routing profile.
          type: array
          minItems: 1
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RoutingProfileQueueConfig'
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        AgentAvailabilityTimer:
          type: string
          description: Whether agents with this routing profile will have their routing order calculated based on longest idle time or time since their last inbound contact.
          enum:
            - TIME_SINCE_LAST_ACTIVITY
            - TIME_SINCE_LAST_INBOUND
      required:
        - InstanceArn
        - Name
        - Description
        - MediaConcurrencies
        - DefaultOutboundQueueArn
      x-stackql-resource-name: routing_profile
      description: Resource Type definition for AWS::Connect::RoutingProfile
      x-type-name: AWS::Connect::RoutingProfile
      x-stackql-primary-identifier:
        - RoutingProfileArn
      x-read-only-properties:
        - RoutingProfileArn
      x-required-properties:
        - InstanceArn
        - Name
        - Description
        - MediaConcurrencies
        - DefaultOutboundQueueArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateRoutingProfile
          - connect:TagResource
        read:
          - connect:DescribeRoutingProfile
          - connect:ListRoutingProfileQueues
        delete:
          - connect:DeleteRoutingProfile
          - connect:UntagResource
        update:
          - connect:AssociateRoutingProfileQueues
          - connect:DisassociateRoutingProfileQueues
          - connect:UpdateRoutingProfileConcurrency
          - connect:UpdateRoutingProfileName
          - connect:UpdateRoutingProfileDefaultOutboundQueue
          - connect:UpdateRoutingProfileQueues
          - connect:TagResource
          - connect:UntagResource
          - connect:ListRoutingProfileQueues
          - connect:UpdateRoutingProfileAgentAvailabilityTimer
        list:
          - connect:ListRoutingProfiles
          - connect:ListRoutingProfileQueues
    FieldValue:
      description: the default value for the task template's field
      type: string
      minLength: 1
      maxLength: 4096
    Field:
      description: A task template field object.
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
        Description:
          description: The description of the task template's field
          type: string
          minLength: 0
          maxLength: 255
        Type:
          $ref: '#/components/schemas/FieldType'
        SingleSelectOptions:
          description: list of field options to be used with single select
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/FieldOption'
      additionalProperties: false
      required:
        - Id
        - Type
    Fields:
      description: An array of case fields
      type: array
      x-insertionOrder: true
      uniqueItems: true
      items:
        $ref: '#/components/schemas/Field'
      minItems: 1
      maxItems: 100
    NotificationRecipientType:
      description: The type of notification recipient.
      type: object
      properties:
        UserTags:
          description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }. CON users with the specified tags will be notified.'
          x-patternProperties:
            ^(?=.{1,128}$).+$:
              type: string
          additionalProperties: false
        UserArns:
          description: The Amazon Resource Name (ARN) of the user account.
          type: array
          minItems: 1
          maxItems: 5
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/UserArn'
      additionalProperties: false
    Reference:
      description: Information about the reference when the ``referenceType`` is ``URL``. Otherwise, null. (Supports variable injection in the ``Value`` field.)
      type: object
      properties:
        Value:
          type: string
          pattern: ^(/|https:)
          description: A valid value for the reference. For example, for a URL reference, a formatted URL that is displayed to an agent in the Contact Control Panel (CCP).
        Type:
          type: string
          enum:
            - URL
            - ATTACHMENT
            - NUMBER
            - STRING
            - DATE
            - EMAIL
          description: |-
            The type of the reference. ``DATE`` must be of type Epoch timestamp. 
              *Allowed values*: ``URL`` | ``ATTACHMENT`` | ``NUMBER`` | ``STRING`` | ``DATE`` | ``EMAIL``
      required:
        - Value
        - Type
      additionalProperties: false
    TaskAction:
      description: 'Information about the task action. This field is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``'
      type: object
      properties:
        Name:
          description: The name. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
          type: string
          minLength: 1
          maxLength: 512
        Description:
          description: The description. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
          type: string
          minLength: 0
          maxLength: 4096
        ContactFlowArn:
          description: The Amazon Resource Name (ARN) of the flow.
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
        References:
          description: Information about the reference when the ``referenceType`` is ``URL``. Otherwise, null. ``URL`` is the only accepted type. (Supports variable injection in the ``Value`` field.)
          x-patternProperties:
            ^(?=.{1,4096}$).+$:
              $ref: '#/components/schemas/Reference'
          additionalProperties: false
      required:
        - Name
        - ContactFlowArn
      additionalProperties: false
    SubmitAutoEvaluationAction:
      description: ''
      type: object
      properties:
        EvaluationFormArn:
          description: ''
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/evaluation-form/[-a-zA-Z0-9]*$
      required:
        - EvaluationFormArn
      additionalProperties: false
    EventBridgeAction:
      description: The EV action definition.
      type: object
      properties:
        Name:
          description: The name.
          type: string
          pattern: ^[a-zA-Z0-9._-]{1,100}$
      required:
        - Name
      additionalProperties: false
    AssignContactCategoryAction:
      description: The definition for assigning contact category action.
      type: object
    SendNotificationAction:
      description: Information about the send notification action.
      type: object
      properties:
        DeliveryMethod:
          description: |-
            Notification delivery method.
              *Allowed value*: ``EMAIL``
          type: string
          enum:
            - EMAIL
        Subject:
          description: The subject of the email if the delivery method is ``EMAIL``. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
          type: string
          minLength: 1
          maxLength: 200
        Content:
          description: Notification content. Supports variable injection. For more information, see [JSONPath reference](https://docs.aws.amazon.com/connect/latest/adminguide/contact-lens-variable-injection.html) in the *Administrators Guide*.
          type: string
          minLength: 1
          maxLength: 1024
        ContentType:
          description: |-
            Content type format.
              *Allowed value*: ``PLAIN_TEXT``
          type: string
          enum:
            - PLAIN_TEXT
        Recipient:
          $ref: '#/components/schemas/NotificationRecipientType'
          description: Notification recipient.
      required:
        - DeliveryMethod
        - Content
        - Recipient
        - ContentType
      additionalProperties: false
    CreateCaseAction:
      description: ''
      type: object
      properties:
        Fields:
          $ref: '#/components/schemas/Fields'
          description: ''
        TemplateId:
          description: ''
          type: string
          minLength: 1
          maxLength: 500
      required:
        - Fields
        - TemplateId
      additionalProperties: false
    UpdateCaseAction:
      description: ''
      type: object
      properties:
        Fields:
          $ref: '#/components/schemas/Fields'
          description: ''
      required:
        - Fields
      additionalProperties: false
    EndAssociatedTasksAction:
      description: The definition for ending associated task action.
      type: object
    AssignContactCategoryActions:
      description: This action will assign contact category when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/AssignContactCategoryAction'
      minItems: 1
      maxItems: 1
    EventBridgeActions:
      description: This action will send event bridge notification when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/EventBridgeAction'
      minItems: 1
      maxItems: 1
    RuleTriggerEventSource:
      description: The name of the event source.
      type: object
      properties:
        EventSourceName:
          description: The name of the event source.
          type: string
          enum:
            - OnContactEvaluationSubmit
            - OnPostCallAnalysisAvailable
            - OnRealTimeCallAnalysisAvailable
            - OnRealTimeChatAnalysisAvailable
            - OnPostChatAnalysisAvailable
            - OnZendeskTicketCreate
            - OnZendeskTicketStatusUpdate
            - OnSalesforceCaseCreate
            - OnMetricDataUpdate
            - OnCaseCreate
            - OnCaseUpdate
        IntegrationAssociationArn:
          description: 'The Amazon Resource Name (ARN) of the integration association. ``IntegrationAssociationArn`` is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``'
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/integration-association/[-a-zA-Z0-9]*$
      required:
        - EventSourceName
      additionalProperties: false
    TaskActions:
      description: This action will generate a task when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/TaskAction'
      minItems: 1
      maxItems: 1
    SendNotificationActions:
      description: The action will send notification when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/SendNotificationAction'
      minItems: 1
      maxItems: 1
    CreateCaseActions:
      description: This action will create a case when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/CreateCaseAction'
      minItems: 1
      maxItems: 1
    UpdateCaseActions:
      description: This action will update a case when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/UpdateCaseAction'
      minItems: 1
      maxItems: 1
    EndAssociatedTasksActions:
      description: This action will end associated tasks when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/EndAssociatedTasksAction'
      minItems: 1
      maxItems: 1
    SubmitAutoEvaluationActions:
      description: This action will submit an auto contact evaluation when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/SubmitAutoEvaluationAction'
      minItems: 1
      maxItems: 1
    Actions:
      description: A list of actions to be run when the rule is triggered.
      type: object
      properties:
        AssignContactCategoryActions:
          $ref: '#/components/schemas/AssignContactCategoryActions'
          description: Information about the contact category action. The syntax can be empty, for example, ``{}``.
        EventBridgeActions:
          $ref: '#/components/schemas/EventBridgeActions'
          description: Information about the EV action.
        TaskActions:
          $ref: '#/components/schemas/TaskActions'
          description: 'Information about the task action. This field is required if ``TriggerEventSource`` is one of the following values: ``OnZendeskTicketCreate`` | ``OnZendeskTicketStatusUpdate`` | ``OnSalesforceCaseCreate``'
        SendNotificationActions:
          $ref: '#/components/schemas/SendNotificationActions'
          description: Information about the send notification action.
        CreateCaseActions:
          $ref: '#/components/schemas/CreateCaseActions'
          description: ''
        UpdateCaseActions:
          $ref: '#/components/schemas/UpdateCaseActions'
          description: ''
        EndAssociatedTasksActions:
          $ref: '#/components/schemas/EndAssociatedTasksActions'
          description: ''
        SubmitAutoEvaluationActions:
          $ref: '#/components/schemas/SubmitAutoEvaluationActions'
          description: ''
      additionalProperties: false
    Rule:
      type: object
      properties:
        Name:
          description: The name of the rule.
          type: string
          pattern: ^[a-zA-Z0-9._-]{1,200}$
        RuleArn:
          description: ''
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/rule/[-a-zA-Z0-9]*$
        InstanceArn:
          description: The Amazon Resource Name (ARN) of the instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        TriggerEventSource:
          description: The event source to trigger the rule.
          $ref: '#/components/schemas/RuleTriggerEventSource'
        Function:
          description: The conditions of the rule.
          type: string
        Actions:
          description: A list of actions to be run when the rule is triggered.
          $ref: '#/components/schemas/Actions'
        PublishStatus:
          description: |-
            The publish status of the rule.
              *Allowed values*: ``DRAFT`` | ``PUBLISHED``
          type: string
          enum:
            - DRAFT
            - PUBLISHED
        Tags:
          description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - InstanceArn
        - TriggerEventSource
        - Function
        - Actions
        - PublishStatus
      x-stackql-resource-name: rule
      description: Creates a rule for the specified CON instance.
      x-type-name: AWS::Connect::Rule
      x-stackql-primary-identifier:
        - RuleArn
      x-create-only-properties:
        - TriggerEventSource
        - InstanceArn
      x-read-only-properties:
        - RuleArn
      x-required-properties:
        - Name
        - InstanceArn
        - TriggerEventSource
        - Function
        - Actions
        - PublishStatus
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: false
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateRule
          - cases:GetTemplate
          - cases:ListFields
          - cases:ListFieldOptions
        read:
          - connect:DescribeRule
        delete:
          - connect:DeleteRule
          - connect:UntagResource
        update:
          - connect:UpdateRule
          - cases:GetTemplate
          - cases:ListFields
          - cases:ListFieldOptions
          - connect:TagResource
          - connect:UntagResource
    SecurityKey:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/Key'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
      required:
        - Key
        - InstanceId
      x-stackql-resource-name: security_key
      description: Resource Type definition for AWS::Connect::SecurityKey
      x-type-name: AWS::Connect::SecurityKey
      x-stackql-primary-identifier:
        - InstanceId
        - AssociationId
      x-create-only-properties:
        - InstanceId
        - Key
      x-read-only-properties:
        - AssociationId
      x-required-properties:
        - Key
        - InstanceId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - connect:AssociateSecurityKey
        read:
          - connect:ListSecurityKeys
        update: []
        delete:
          - connect:DisassociateSecurityKey
        list:
          - connect:ListSecurityKeys
    Permission:
      description: A permission associated with the security profile.
      type: string
      minLength: 1
      maxLength: 128
    ResourceName:
      description: A resource that a security profile applies tag or hierarchy restrictions to in Amazon Connect.
      type: string
      minLength: 1
      maxLength: 128
    ApplicationPermission:
      description: The permissions that the agent is granted on the application.
      type: string
      minLength: 1
      maxLength: 128
    Application:
      description: A third-party application's metadata.
      type: object
      properties:
        ApplicationPermissions:
          type: array
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
          description: The permissions that the agent is granted on the application
          items:
            $ref: '#/components/schemas/ApplicationPermission'
        Namespace:
          type: string
          description: Namespace of the application that you want to give access to.
          minLength: 1
          maxLength: 128
      required:
        - ApplicationPermissions
        - Namespace
      additionalProperties: false
    SecurityProfile:
      type: object
      properties:
        AllowedAccessControlTags:
          type: array
          maxItems: 2
          uniqueItems: true
          x-insertionOrder: false
          description: The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
          items:
            $ref: '#/components/schemas/Tag'
        Description:
          type: string
          minLength: 0
          maxLength: 250
          description: The description of the security profile.
        InstanceArn:
          type: string
          description: The identifier of the Amazon Connect instance.
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Permissions:
          type: array
          maxItems: 500
          uniqueItems: true
          x-insertionOrder: false
          description: Permissions assigned to the security profile.
          items:
            $ref: '#/components/schemas/Permission'
        SecurityProfileArn:
          type: string
          description: The Amazon Resource Name (ARN) for the security profile.
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/security-profile/[-a-zA-Z0-9]*$
        SecurityProfileName:
          type: string
          pattern: ^[ a-zA-Z0-9_@-]+$
          minLength: 1
          maxLength: 127
          description: The name of the security profile.
        TagRestrictedResources:
          type: array
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
          description: The list of resources that a security profile applies tag restrictions to in Amazon Connect.
          items:
            $ref: '#/components/schemas/ResourceName'
        HierarchyRestrictedResources:
          type: array
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
          description: The list of resources that a security profile applies hierarchy restrictions to in Amazon Connect.
          items:
            $ref: '#/components/schemas/ResourceName'
        AllowedAccessControlHierarchyGroupId:
          type: string
          pattern: ^[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 127
          description: The identifier of the hierarchy group that a security profile uses to restrict access to resources in Amazon Connect.
        Applications:
          type: array
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
          description: A list of third-party applications that the security profile will give access to.
          items:
            $ref: '#/components/schemas/Application'
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: The tags used to organize, track, or control access for this resource.
          items:
            $ref: '#/components/schemas/Tag'
        LastModifiedRegion:
          type: string
          pattern: '[a-z]{2}(-[a-z]+){1,2}(-[0-9])?'
          description: The AWS Region where this resource was last modified.
        LastModifiedTime:
          type: number
          description: The timestamp when this resource was last modified.
      required:
        - InstanceArn
        - SecurityProfileName
      x-stackql-resource-name: security_profile
      description: Resource Type definition for AWS::Connect::SecurityProfile
      x-type-name: AWS::Connect::SecurityProfile
      x-stackql-primary-identifier:
        - SecurityProfileArn
      x-create-only-properties:
        - SecurityProfileName
        - InstanceArn
      x-read-only-properties:
        - SecurityProfileArn
        - LastModifiedRegion
        - LastModifiedTime
      x-required-properties:
        - InstanceArn
        - SecurityProfileName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateSecurityProfile
          - connect:TagResource
        read:
          - connect:DescribeSecurityProfile
          - connect:ListSecurityProfileApplications
          - connect:ListSecurityProfilePermissions
        update:
          - connect:TagResource
          - connect:UpdateSecurityProfile
          - connect:UntagResource
        delete:
          - connect:DeleteSecurityProfile
          - connect:UntagResource
        list:
          - connect:ListSecurityProfiles
    Status:
      description: The status of the task template
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    FieldType:
      description: The type of the task template's field
      type: string
      enum:
        - NAME
        - DESCRIPTION
        - SCHEDULED_TIME
        - QUICK_CONNECT
        - URL
        - NUMBER
        - TEXT
        - TEXT_AREA
        - DATE_TIME
        - BOOLEAN
        - SINGLE_SELECT
        - EMAIL
        - EXPIRY_DURATION
        - SELF_ASSIGN
    FieldIdentifier:
      description: the identifier (name) for the task template field
      type: object
      properties:
        Name:
          description: The name of the task template field
          type: string
          minLength: 1
          maxLength: 100
      additionalProperties: false
      required:
        - Name
    FieldOption:
      description: Single select field identifier
      type: string
      pattern: ^[A-Za-z0-9](?:[A-Za-z0-9_.,\s-]*[A-Za-z0-9_.,-])?$
      minLength: 1
      maxLength: 100
    InvisibleFieldInfo:
      description: Invisible field info
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
      additionalProperties: false
      required:
        - Id
    InvisibleTaskTemplateFields:
      description: The list of the task template's invisible fields
      type: array
      maxItems: 50
      items:
        $ref: '#/components/schemas/InvisibleFieldInfo'
    ReadOnlyFieldInfo:
      description: ReadOnly field info
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
      additionalProperties: false
      required:
        - Id
    ReadOnlyTaskTemplateFields:
      description: The list of the task template's read only fields
      type: array
      maxItems: 50
      items:
        $ref: '#/components/schemas/ReadOnlyFieldInfo'
    RequiredFieldInfo:
      description: Required field info
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
      additionalProperties: false
      required:
        - Id
    RequiredTaskTemplateFields:
      description: The list of the task template's required fields
      type: array
      maxItems: 50
      items:
        $ref: '#/components/schemas/RequiredFieldInfo'
    DefaultFieldValue:
      description: the default value for the task template's field
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
      additionalProperties: false
      required:
        - Id
        - DefaultValue
    ClientToken:
      description: the client token string in uuid format
      type: string
      pattern: ^$|[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$
    TaskTemplate:
      type: object
      properties:
        Arn:
          description: The identifier (arn) of the task template.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/task-template/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$
        InstanceArn:
          description: The identifier (arn) of the instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the task template.
          type: string
          minLength: 1
          maxLength: 100
        Description:
          description: The description of the task template.
          type: string
          minLength: 0
          maxLength: 255
        ContactFlowArn:
          description: The identifier of the contact flow.
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
        SelfAssignContactFlowArn:
          description: The identifier of the contact flow.
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
        Constraints:
          description: The constraints for the task template
          type: object
          additionalProperties: false
          properties:
            InvisibleFields:
              $ref: '#/components/schemas/InvisibleTaskTemplateFields'
            RequiredFields:
              $ref: '#/components/schemas/RequiredTaskTemplateFields'
            ReadOnlyFields:
              $ref: '#/components/schemas/ReadOnlyTaskTemplateFields'
        Defaults:
          description: ''
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/DefaultFieldValue'
        Fields:
          description: The list of task template's fields
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Field'
        Status:
          $ref: '#/components/schemas/Status'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
      x-stackql-resource-name: task_template
      description: Resource Type definition for AWS::Connect::TaskTemplate.
      x-type-name: AWS::Connect::TaskTemplate
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - InstanceArn
      x-tagging:
        taggable: true
        tagOnCreate: false
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateTaskTemplate
          - connect:TagResource
        read:
          - connect:GetTaskTemplate
        list:
          - connect:ListTaskTemplates
        update:
          - connect:UpdateTaskTemplate
          - connect:TagResource
          - connect:UntagResource
        delete:
          - connect:DeleteTaskTemplate
          - connect:UntagResource
          - connect:GetTaskTemplate
    TrafficDistributionGroup:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance that has been replicated.
          type: string
          pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
          minLength: 1
          maxLength: 250
        TrafficDistributionGroupArn:
          description: The identifier of the traffic distribution group.
          type: string
          pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:traffic-distribution-group/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
        Description:
          description: A description for the traffic distribution group.
          type: string
          pattern: (^[\S].*[\S]$)|(^[\S]$)
          minLength: 1
          maxLength: 250
        Name:
          description: The name for the traffic distribution group.
          type: string
          pattern: (^[\S].*[\S]$)|(^[\S]$)
          minLength: 1
          maxLength: 128
        Status:
          description: The status of the traffic distribution group.
          type: string
          enum:
            - CREATION_IN_PROGRESS
            - ACTIVE
            - CREATION_FAILED
            - PENDING_DELETION
            - DELETION_FAILED
            - UPDATE_IN_PROGRESS
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
        IsDefault:
          description: If this is the default traffic distribution group.
          type: boolean
      required:
        - InstanceArn
        - Name
      x-stackql-resource-name: traffic_distribution_group
      description: Resource Type definition for AWS::Connect::TrafficDistributionGroup
      x-type-name: AWS::Connect::TrafficDistributionGroup
      x-stackql-primary-identifier:
        - TrafficDistributionGroupArn
      x-create-only-properties:
        - Description
        - Name
      x-read-only-properties:
        - TrafficDistributionGroupArn
        - Status
        - IsDefault
      x-required-properties:
        - InstanceArn
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateTrafficDistributionGroup
          - connect:DescribeTrafficDistributionGroup
          - connect:TagResource
        read:
          - connect:DescribeTrafficDistributionGroup
        update:
          - connect:TagResource
          - connect:UntagResource
        delete:
          - connect:DeleteTrafficDistributionGroup
          - connect:DescribeTrafficDistributionGroup
          - connect:UntagResource
        list:
          - connect:ListTrafficDistributionGroups
    FirstName:
      description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
      type: string
    LastName:
      description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
      type: string
    Email:
      description: The email address. If you are using SAML for identity management and include this parameter, an error is returned.
      type: string
    SecondaryEmail:
      description: The secondary email address. If you provide a secondary email, the user receives email notifications -- other than password reset notifications -- to this email address instead of to their primary email address.
      type: string
      pattern: (?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}
    Mobile:
      description: The mobile phone number.
      type: string
      pattern: ^\+[1-9]\d{1,14}$
    SecurityProfileArn:
      description: The identifier of the security profile for the user.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/security-profile/[-a-zA-Z0-9]*$
    AfterContactWorkTimeLimit:
      description: The After Call Work (ACW) timeout setting, in seconds.
      type: integer
      minimum: 0
    AutoAccept:
      description: The Auto accept setting.
      type: boolean
    DeskPhoneNumber:
      description: The phone number for the user's desk phone.
      type: string
    PhoneType:
      description: The phone type.
      type: string
      enum:
        - SOFT_PHONE
        - DESK_PHONE
    UserIdentityInfo:
      description: Contains information about the identity of a user.
      type: object
      additionalProperties: false
      properties:
        FirstName:
          $ref: '#/components/schemas/FirstName'
        LastName:
          $ref: '#/components/schemas/LastName'
        Email:
          $ref: '#/components/schemas/Email'
        SecondaryEmail:
          $ref: '#/components/schemas/SecondaryEmail'
        Mobile:
          $ref: '#/components/schemas/Mobile'
    UserPhoneConfig:
      description: Contains information about the phone configuration settings for a user.
      type: object
      additionalProperties: false
      properties:
        AfterContactWorkTimeLimit:
          $ref: '#/components/schemas/AfterContactWorkTimeLimit'
        AutoAccept:
          $ref: '#/components/schemas/AutoAccept'
        DeskPhoneNumber:
          $ref: '#/components/schemas/DeskPhoneNumber'
        PhoneType:
          $ref: '#/components/schemas/PhoneType'
      required:
        - PhoneType
    UserProficiency:
      description: Proficiency of a user.
      type: object
      additionalProperties: false
      properties:
        AttributeName:
          $ref: '#/components/schemas/AttributeName'
        AttributeValue:
          $ref: '#/components/schemas/AttributeValue'
        Level:
          $ref: '#/components/schemas/Level'
      required:
        - AttributeName
        - AttributeValue
        - Level
    AttributeName:
      description: The name of user's proficiency. You must use name of predefined attribute present in the Amazon Connect instance.
      type: string
      minLength: 1
      maxLength: 64
    AttributeValue:
      description: The value of user's proficiency. You must use value of predefined attribute present in the Amazon Connect instance.
      type: string
      minLength: 1
      maxLength: 64
    Level:
      description: The level of the proficiency. The valid values are 1, 2, 3, 4 and 5.
      type: number
      minimum: 1
      maximum: 5
    User:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        DirectoryUserId:
          description: The identifier of the user account in the directory used for identity management.
          type: string
        HierarchyGroupArn:
          description: The identifier of the hierarchy group for the user.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group/[-a-zA-Z0-9]*$
        Username:
          description: The user name for the account.
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[a-zA-Z0-9\_\-\.\@]+'
        Password:
          description: The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
          type: string
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$
        RoutingProfileArn:
          description: The identifier of the routing profile for the user.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/routing-profile/[-a-zA-Z0-9]*$
        IdentityInfo:
          description: The information about the identity of the user.
          $ref: '#/components/schemas/UserIdentityInfo'
        PhoneConfig:
          description: The phone settings for the user.
          $ref: '#/components/schemas/UserPhoneConfig'
        SecurityProfileArns:
          type: array
          minItems: 1
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
          description: One or more security profile arns for the user
          items:
            $ref: '#/components/schemas/SecurityProfileArn'
        UserArn:
          description: The Amazon Resource Name (ARN) for the user.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent/[-a-zA-Z0-9]*$
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
        UserProficiencies:
          description: One or more predefined attributes assigned to a user, with a level that indicates how skilled they are.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/UserProficiency'
      required:
        - InstanceArn
        - PhoneConfig
        - RoutingProfileArn
        - SecurityProfileArns
        - Username
      x-stackql-resource-name: user
      description: Resource Type definition for AWS::Connect::User
      x-type-name: AWS::Connect::User
      x-stackql-primary-identifier:
        - UserArn
      x-write-only-properties:
        - Password
      x-read-only-properties:
        - UserArn
      x-required-properties:
        - InstanceArn
        - PhoneConfig
        - RoutingProfileArn
        - SecurityProfileArns
        - Username
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateUser
          - connect:TagResource
          - connect:AssociateUserProficiencies
        read:
          - connect:DescribeUser
          - connect:ListUserProficiencies
        delete:
          - connect:DeleteUser
          - connect:UntagResource
        update:
          - connect:UpdateUserIdentityInfo
          - connect:UpdateUserPhoneConfig
          - connect:UpdateUserRoutingProfile
          - connect:UpdateUserSecurityProfiles
          - connect:UpdateUserHierarchy
          - connect:TagResource
          - connect:UntagResource
          - connect:AssociateUserProficiencies
          - connect:DisassociateUserProficiencies
          - connect:UpdateUserProficiencies
        list:
          - connect:ListUsers
    UserHierarchyGroupArn:
      description: The Amazon Resource Name (ARN) for the user hierarchy group.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group/[-a-zA-Z0-9]*$
    UserHierarchyGroup:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        UserHierarchyGroupArn:
          description: The Amazon Resource Name (ARN) for the user hierarchy group.
          $ref: '#/components/schemas/UserHierarchyGroupArn'
        ParentGroupArn:
          description: The Amazon Resource Name (ARN) for the parent user hierarchy group.
          $ref: '#/components/schemas/UserHierarchyGroupArn'
        Name:
          description: The name of the user hierarchy group.
          type: string
          minLength: 1
          maxLength: 100
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - InstanceArn
      x-stackql-resource-name: user_hierarchy_group
      description: Resource Type definition for AWS::Connect::UserHierarchyGroup
      x-type-name: AWS::Connect::UserHierarchyGroup
      x-stackql-primary-identifier:
        - UserHierarchyGroupArn
      x-create-only-properties:
        - ParentGroupArn
      x-read-only-properties:
        - UserHierarchyGroupArn
      x-required-properties:
        - Name
        - InstanceArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateUserHierarchyGroup
          - connect:TagResource
        read:
          - connect:DescribeUserHierarchyGroup
        delete:
          - connect:DeleteUserHierarchyGroup
          - connect:UntagResource
        update:
          - connect:UpdateUserHierarchyGroupName
          - connect:TagResource
          - connect:UntagResource
        list:
          - connect:ListUserHierarchyGroups
    Name:
      description: The name of the hierarchy level.
      type: string
    HierarchyLevelArn:
      description: The Amazon Resource Name (ARN) of the hierarchy level.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group-level/[-0-9]*$
    HierarchyLevelId:
      description: The identifier of the hierarchy level.
      type: string
    LevelOne:
      description: Information about level one.
      type: object
      additionalProperties: false
      properties:
        HierarchyLevelArn:
          $ref: '#/components/schemas/HierarchyLevelArn'
        HierarchyLevelId:
          $ref: '#/components/schemas/HierarchyLevelId'
        Name:
          $ref: '#/components/schemas/Name'
      required:
        - Name
    LevelTwo:
      description: Information about level two.
      type: object
      additionalProperties: false
      properties:
        HierarchyLevelArn:
          $ref: '#/components/schemas/HierarchyLevelArn'
        HierarchyLevelId:
          $ref: '#/components/schemas/HierarchyLevelId'
        Name:
          $ref: '#/components/schemas/Name'
      required:
        - Name
    LevelThree:
      description: Information about level three.
      type: object
      additionalProperties: false
      properties:
        HierarchyLevelArn:
          $ref: '#/components/schemas/HierarchyLevelArn'
        HierarchyLevelId:
          $ref: '#/components/schemas/HierarchyLevelId'
        Name:
          $ref: '#/components/schemas/Name'
      required:
        - Name
    LevelFour:
      description: Information about level four.
      type: object
      additionalProperties: false
      properties:
        HierarchyLevelArn:
          $ref: '#/components/schemas/HierarchyLevelArn'
        HierarchyLevelId:
          $ref: '#/components/schemas/HierarchyLevelId'
        Name:
          $ref: '#/components/schemas/Name'
      required:
        - Name
    LevelFive:
      description: Information about level five.
      type: object
      additionalProperties: false
      properties:
        HierarchyLevelArn:
          $ref: '#/components/schemas/HierarchyLevelArn'
        HierarchyLevelId:
          $ref: '#/components/schemas/HierarchyLevelId'
        Name:
          $ref: '#/components/schemas/Name'
      required:
        - Name
    UserHierarchyStructure:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        UserHierarchyStructureArn:
          description: The identifier of the User Hierarchy Structure.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/user-hierarchy-structure
        UserHierarchyStructure:
          description: Information about the hierarchy structure.
          type: object
          additionalProperties: false
          properties:
            LevelOne:
              $ref: '#/components/schemas/LevelOne'
            LevelTwo:
              $ref: '#/components/schemas/LevelTwo'
            LevelThree:
              $ref: '#/components/schemas/LevelThree'
            LevelFour:
              $ref: '#/components/schemas/LevelFour'
            LevelFive:
              $ref: '#/components/schemas/LevelFive'
      required:
        - InstanceArn
      x-stackql-resource-name: user_hierarchy_structure
      description: Resource Type definition for AWS::Connect::UserHierarchyStructure
      x-type-name: AWS::Connect::UserHierarchyStructure
      x-stackql-primary-identifier:
        - UserHierarchyStructureArn
      x-create-only-properties:
        - InstanceArn
      x-read-only-properties:
        - UserHierarchyStructureArn
      x-required-properties:
        - InstanceArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - connect:UpdateUserHierarchyStructure
        read:
          - connect:DescribeUserHierarchyStructure
        delete:
          - connect:UpdateUserHierarchyStructure
        update:
          - connect:UpdateUserHierarchyStructure
    View:
      type: object
      properties:
        InstanceArn:
          description: The Amazon Resource Name (ARN) of the instance.
          type: string
          minLength: 1
          maxLength: 100
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        ViewArn:
          description: The Amazon Resource Name (ARN) of the view.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/view/[-:$a-zA-Z0-9]*$
          minLength: 1
          maxLength: 255
        ViewId:
          description: The view id of the view.
          type: string
          minLength: 1
          maxLength: 500
          pattern: ^[a-zA-Z0-9\_\-:\/$]+$
        Name:
          description: The name of the view.
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^([\p{L}\p{N}_.:\/=+\-@]+[\p{L}\p{Z}\p{N}_.:\/=+\-@]*)$
        Description:
          description: The description of the view.
          type: string
          minLength: 0
          maxLength: 4096
          pattern: ^([\p{L}\p{N}_.:\/=+\-@,]+[\p{L}\p{Z}\p{N}_.:\/=+\-@,]*)$
        Template:
          description: The template of the view as JSON.
          type: object
        Actions:
          description: The actions of the view in an array.
          type: array
          x-insertionOrder: false
          maxItems: 1000
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^([\p{L}\p{N}_.:\/=+\-@]+[\p{L}\p{Z}\p{N}_.:\/=+\-@]*)$
        ViewContentSha256:
          description: The view content hash.
          type: string
          pattern: ^[a-zA-Z0-9]{64}$
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Template
        - Actions
        - Name
      x-stackql-resource-name: view
      description: Resource Type definition for AWS::Connect::View
      x-type-name: AWS::Connect::View
      x-stackql-primary-identifier:
        - ViewArn
      x-read-only-properties:
        - ViewArn
        - ViewId
        - ViewContentSha256
      x-required-properties:
        - InstanceArn
        - Template
        - Actions
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - connect:CreateView
          - connect:TagResource
        read:
          - connect:DescribeView
        delete:
          - connect:DeleteView
          - connect:UntagResource
        list:
          - connect:ListViews
        update:
          - connect:UpdateViewMetadata
          - connect:UpdateViewContent
          - connect:TagResource
          - connect:UntagResource
    ViewVersion:
      type: object
      properties:
        ViewArn:
          description: The Amazon Resource Name (ARN) of the view for which a version is being created.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/view/[-:a-zA-Z0-9]*$
          minLength: 1
          maxLength: 255
        ViewVersionArn:
          description: The Amazon Resource Name (ARN) of the created view version.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/view/[-:a-zA-Z0-9]*$
          minLength: 1
          maxLength: 255
        VersionDescription:
          description: The description for the view version.
          type: string
          minLength: 1
          maxLength: 4096
          pattern: ^([\p{L}\p{N}_.:\/=+\-@,]+[\p{L}\p{Z}\p{N}_.:\/=+\-@,]*)$
        ViewContentSha256:
          description: The view content hash to be checked.
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9]{64}$
        Version:
          description: The version of the view.
          type: integer
      required:
        - ViewArn
      x-stackql-resource-name: view_version
      description: Resource Type definition for AWS::Connect::ViewVersion
      x-type-name: AWS::Connect::ViewVersion
      x-stackql-primary-identifier:
        - ViewVersionArn
      x-create-only-properties:
        - ViewArn
        - ViewContentSha256
      x-read-only-properties:
        - ViewVersionArn
        - Version
      x-required-properties:
        - ViewArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - connect:CreateViewVersion
        read:
          - connect:DescribeView
        list:
          - connect:ListViewVersions
        update: []
        delete:
          - connect:DeleteViewVersion
    CreateAgentStatusRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            AgentStatusArn:
              description: The Amazon Resource Name (ARN) of the agent status.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-state/[-a-zA-Z0-9]*$
            Description:
              description: The description of the status.
              type: string
              minLength: 1
              maxLength: 250
            Name:
              description: The name of the status.
              type: string
              minLength: 1
              maxLength: 127
            DisplayOrder:
              description: The display order of the status.
              type: integer
              minimum: 1
              maximum: 50
            State:
              type: string
              description: The state of the status.
              enum:
                - ENABLED
                - DISABLED
            Type:
              type: string
              description: The type of agent status.
              enum:
                - ROUTABLE
                - CUSTOM
                - OFFLINE
            ResetOrderNumber:
              type: boolean
              description: A number indicating the reset order of the agent status.
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            LastModifiedRegion:
              description: Last modified region.
              type: string
              pattern: '[a-z]{2}(-[a-z]+){1,2}(-[0-9])?'
            LastModifiedTime:
              description: Last modified time.
              type: number
          x-stackQL-stringOnly: true
      x-title: CreateAgentStatusRequest
      type: object
      required: []
    CreateApprovedOriginRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Origin:
              $ref: '#/components/schemas/Origin'
            InstanceId:
              $ref: '#/components/schemas/InstanceId'
          x-stackQL-stringOnly: true
      x-title: CreateApprovedOriginRequest
      type: object
      required: []
    CreateContactFlowRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance (ARN).
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
              minLength: 1
              maxLength: 256
            ContactFlowArn:
              description: The identifier of the contact flow (ARN).
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
              minLength: 1
              maxLength: 500
            Name:
              description: The name of the contact flow.
              type: string
              minLength: 1
              maxLength: 127
            Content:
              description: The content of the contact flow in JSON format.
              type: string
              minLength: 1
              maxLength: 256000
            Description:
              description: The description of the contact flow.
              type: string
              maxLength: 500
            State:
              type: string
              description: The state of the contact flow.
              enum:
                - ACTIVE
                - ARCHIVED
            Type:
              description: The type of the contact flow.
              type: string
              enum:
                - CONTACT_FLOW
                - CUSTOMER_QUEUE
                - CUSTOMER_HOLD
                - CUSTOMER_WHISPER
                - AGENT_HOLD
                - AGENT_WHISPER
                - OUTBOUND_WHISPER
                - AGENT_TRANSFER
                - QUEUE_TRANSFER
                - CAMPAIGN
            Tags:
              description: One or more tags.
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateContactFlowRequest
      type: object
      required: []
    CreateContactFlowModuleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance (ARN).
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
              minLength: 1
              maxLength: 256
            ContactFlowModuleArn:
              description: The identifier of the contact flow module (ARN).
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/flow-module/[-a-zA-Z0-9]*$
              minLength: 1
              maxLength: 256
            Name:
              description: The name of the contact flow module.
              type: string
              minLength: 1
              maxLength: 127
              pattern: .*\S.*
            Content:
              description: The content of the contact flow module in JSON format.
              type: string
              minLength: 1
              maxLength: 256000
            Description:
              description: The description of the contact flow module.
              type: string
              maxLength: 500
              pattern: .*\S.*
            State:
              type: string
              description: The state of the contact flow module.
              maxLength: 500
            Status:
              type: string
              description: The status of the contact flow module.
              maxLength: 500
            Tags:
              description: One or more tags.
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateContactFlowModuleRequest
      type: object
      required: []
    CreateEmailAddressRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
              minLength: 1
              maxLength: 250
            EmailAddressArn:
              description: The identifier of the email address.
              type: string
              pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/email-address/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            Description:
              description: A description for the email address.
              type: string
              pattern: (^[\S].*[\S]$)|(^[\S]$)
              minLength: 1
              maxLength: 250
            EmailAddress:
              description: Email address to be created for this instance
              type: string
              pattern: ([^\s@]+@[^\s@]+\.[^\s@]+)
              minLength: 1
              maxLength: 255
            DisplayName:
              description: The display name for the email address.
              type: string
              pattern: (^[\S].*[\S]$)|(^[\S]$)
              minLength: 0
              maxLength: 256
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: One or more tags.
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateEmailAddressRequest
      type: object
      required: []
    CreateEvaluationFormRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Title:
              description: A title of the evaluation form.
              type: string
              minLength: 1
              maxLength: 128
            Description:
              description: |-
                The description of the evaluation form.
                  *Length Constraints*: Minimum length of 0. Maximum length of 1024.
              type: string
              maxLength: 1024
            EvaluationFormArn:
              description: ''
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/evaluation-form/[-a-zA-Z0-9]*$
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Items:
              description: |-
                Items that are part of the evaluation form. The total number of sections and questions must not exceed 100 each. Questions must be contained in a section.
                  *Minimum size*: 1
                  *Maximum size*: 100
              type: array
              x-insertionOrder: true
              minItems: 1
              maxItems: 200
              items:
                $ref: '#/components/schemas/EvaluationFormBaseItem'
            ScoringStrategy:
              description: A scoring strategy of the evaluation form.
              $ref: '#/components/schemas/ScoringStrategy'
            Status:
              description: |-
                The status of the evaluation form.
                  *Allowed values*: ``DRAFT`` | ``ACTIVE``
              type: string
              default: DRAFT
              enum:
                - DRAFT
                - ACTIVE
            Tags:
              description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateEvaluationFormRequest
      type: object
      required: []
    CreateHoursOfOperationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Name:
              description: The name of the hours of operation.
              type: string
              minLength: 1
              maxLength: 127
            Description:
              description: The description of the hours of operation.
              type: string
              minLength: 1
              maxLength: 250
            TimeZone:
              description: The time zone of the hours of operation.
              type: string
            Config:
              description: 'Configuration information for the hours of operation: day, start time, and end time.'
              type: array
              maxItems: 100
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/HoursOfOperationConfig'
            HoursOfOperationArn:
              description: The Amazon Resource Name (ARN) for the hours of operation.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/operating-hours/[-a-zA-Z0-9]*$
            Tags:
              description: One or more tags.
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            HoursOfOperationOverrides:
              description: One or more hours of operation overrides assigned to an hour of operation.
              type: array
              maxItems: 50
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/HoursOfOperationOverride'
          x-stackQL-stringOnly: true
      x-title: CreateHoursOfOperationRequest
      type: object
      required: []
    CreateInstanceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              description: An instanceId is automatically generated on creation and assigned as the unique identifier.
              type: string
            Arn:
              description: An instanceArn is automatically generated on creation based on instanceId.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            IdentityManagementType:
              description: Specifies the type of directory integration for new instance.
              type: string
              enum:
                - SAML
                - CONNECT_MANAGED
                - EXISTING_DIRECTORY
            InstanceAlias:
              description: Alias of the new directory created as part of new instance creation.
              type: string
              pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$
              minLength: 1
              maxLength: 62
            CreatedTime:
              description: Timestamp of instance creation logged as part of instance creation.
              type: string
              format: date-time
            ServiceRole:
              description: Service linked role created as part of instance creation.
              type: string
            InstanceStatus:
              description: Specifies the creation status of new instance.
              type: string
              enum:
                - CREATION_IN_PROGRESS
                - CREATION_FAILED
                - ACTIVE
            DirectoryId:
              description: Existing directoryId user wants to map to the new Connect instance.
              type: string
              pattern: ^d-[0-9a-f]{10}$
              minLength: 12
              maxLength: 12
            Attributes:
              description: The attributes for the instance.
              $ref: '#/components/schemas/Attributes'
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateInstanceRequest
      type: object
      required: []
    CreateInstanceStorageConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: Connect Instance ID with which the storage config will be associated
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            ResourceType:
              $ref: '#/components/schemas/InstanceStorageResourceType'
            AssociationId:
              $ref: '#/components/schemas/AssociationId'
            StorageType:
              $ref: '#/components/schemas/StorageType'
            S3Config:
              $ref: '#/components/schemas/S3Config'
            KinesisVideoStreamConfig:
              $ref: '#/components/schemas/KinesisVideoStreamConfig'
            KinesisStreamConfig:
              $ref: '#/components/schemas/KinesisStreamConfig'
            KinesisFirehoseConfig:
              $ref: '#/components/schemas/KinesisFirehoseConfig'
          x-stackQL-stringOnly: true
      x-title: CreateInstanceStorageConfigRequest
      type: object
      required: []
    CreateIntegrationAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IntegrationAssociationId:
              $ref: '#/components/schemas/IntegrationAssociationId'
            InstanceId:
              $ref: '#/components/schemas/InstanceId'
            IntegrationArn:
              $ref: '#/components/schemas/IntegrationArn'
            IntegrationType:
              $ref: '#/components/schemas/IntegrationType'
          x-stackQL-stringOnly: true
      x-title: CreateIntegrationAssociationRequest
      type: object
      required: []
    CreatePredefinedAttributeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Name:
              description: The name of the predefined attribute.
              type: string
              minLength: 1
              maxLength: 64
            Values:
              description: The values of a predefined attribute.
              type: object
              properties:
                StringList:
                  $ref: '#/components/schemas/StringList'
              additionalProperties: false
            LastModifiedRegion:
              description: Last modified region.
              type: string
              pattern: '[a-z]{2}(-[a-z]+){1,2}(-[0-9])?'
            LastModifiedTime:
              description: Last modified time.
              type: number
          x-stackQL-stringOnly: true
      x-title: CreatePredefinedAttributeRequest
      type: object
      required: []
    CreatePromptRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Name:
              description: The name of the prompt.
              type: string
              minLength: 1
              maxLength: 127
            Description:
              description: The description of the prompt.
              type: string
              minLength: 1
              maxLength: 250
            S3Uri:
              description: S3 URI of the customer's audio file for creating prompts resource..
              type: string
              minLength: 1
              maxLength: 2000
              pattern: s3://\S+/.+|https://\S+\.s3(\.\S+)?\.amazonaws\.com/\S+
            PromptArn:
              description: The Amazon Resource Name (ARN) for the prompt.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/prompt/[-a-zA-Z0-9]*$
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreatePromptRequest
      type: object
      required: []
    CreateQueueRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Description:
              description: The description of the queue.
              type: string
              minLength: 1
              maxLength: 250
            HoursOfOperationArn:
              description: The identifier for the hours of operation.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/operating-hours/[-a-zA-Z0-9]*$
            MaxContacts:
              description: The maximum number of contacts that can be in the queue before it is considered full.
              type: integer
              minimum: 0
            Name:
              description: The name of the queue.
              type: string
              minLength: 1
              maxLength: 127
            OutboundCallerConfig:
              description: The outbound caller ID name, number, and outbound whisper flow.
              $ref: '#/components/schemas/OutboundCallerConfig'
            OutboundEmailConfig:
              description: The outbound email address ID.
              $ref: '#/components/schemas/OutboundEmailConfig'
            QueueArn:
              description: The Amazon Resource Name (ARN) for the queue.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/queue/[-a-zA-Z0-9]*$
            Status:
              description: The status of the queue.
              type: string
              enum:
                - ENABLED
                - DISABLED
            QuickConnectArns:
              description: The quick connects available to agents who are working the queue.
              type: array
              minItems: 1
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/QuickConnectArn'
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            Type:
              type: string
              description: The type of queue.
              enum:
                - STANDARD
                - AGENT
          x-stackQL-stringOnly: true
      x-title: CreateQueueRequest
      type: object
      required: []
    CreateQuickConnectRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Name:
              description: The name of the quick connect.
              type: string
              minLength: 1
              maxLength: 127
            Description:
              description: The description of the quick connect.
              type: string
              minLength: 1
              maxLength: 250
            QuickConnectConfig:
              description: Configuration settings for the quick connect.
              $ref: '#/components/schemas/QuickConnectConfig'
            QuickConnectArn:
              description: The Amazon Resource Name (ARN) for the quick connect.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/transfer-destination/[-a-zA-Z0-9]*$
            Tags:
              type: array
              maxItems: 200
              uniqueItems: true
              x-insertionOrder: false
              description: One or more tags.
              items:
                $ref: '#/components/schemas/Tag'
            QuickConnectType:
              description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
              type: string
              enum:
                - PHONE_NUMBER
                - QUEUE
                - USER
          x-stackQL-stringOnly: true
      x-title: CreateQuickConnectRequest
      type: object
      required: []
    CreateRoutingProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Name:
              description: The name of the routing profile.
              type: string
              minLength: 1
              maxLength: 127
            Description:
              description: The description of the routing profile.
              type: string
              minLength: 1
              maxLength: 250
            MediaConcurrencies:
              description: The channels agents can handle in the Contact Control Panel (CCP) for this routing profile.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/MediaConcurrency'
            DefaultOutboundQueueArn:
              description: The identifier of the default outbound queue for this routing profile.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/queue/[-a-zA-Z0-9]*$
            RoutingProfileArn:
              description: The Amazon Resource Name (ARN) of the routing profile.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/routing-profile/[-a-zA-Z0-9]*$
            QueueConfigs:
              description: The queues to associate with this routing profile.
              type: array
              minItems: 1
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/RoutingProfileQueueConfig'
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            AgentAvailabilityTimer:
              type: string
              description: Whether agents with this routing profile will have their routing order calculated based on longest idle time or time since their last inbound contact.
              enum:
                - TIME_SINCE_LAST_ACTIVITY
                - TIME_SINCE_LAST_INBOUND
          x-stackQL-stringOnly: true
      x-title: CreateRoutingProfileRequest
      type: object
      required: []
    CreateRuleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name of the rule.
              type: string
              pattern: ^[a-zA-Z0-9._-]{1,200}$
            RuleArn:
              description: ''
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/rule/[-a-zA-Z0-9]*$
            InstanceArn:
              description: The Amazon Resource Name (ARN) of the instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            TriggerEventSource:
              description: The event source to trigger the rule.
              $ref: '#/components/schemas/RuleTriggerEventSource'
            Function:
              description: The conditions of the rule.
              type: string
            Actions:
              description: A list of actions to be run when the rule is triggered.
              $ref: '#/components/schemas/Actions'
            PublishStatus:
              description: |-
                The publish status of the rule.
                  *Allowed values*: ``DRAFT`` | ``PUBLISHED``
              type: string
              enum:
                - DRAFT
                - PUBLISHED
            Tags:
              description: 'The tags used to organize, track, or control access for this resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.'
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateRuleRequest
      type: object
      required: []
    CreateSecurityKeyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Key:
              $ref: '#/components/schemas/Key'
            InstanceId:
              $ref: '#/components/schemas/InstanceId'
            AssociationId:
              $ref: '#/components/schemas/AssociationId'
          x-stackQL-stringOnly: true
      x-title: CreateSecurityKeyRequest
      type: object
      required: []
    CreateSecurityProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AllowedAccessControlTags:
              type: array
              maxItems: 2
              uniqueItems: true
              x-insertionOrder: false
              description: The list of tags that a security profile uses to restrict access to resources in Amazon Connect.
              items:
                $ref: '#/components/schemas/Tag'
            Description:
              type: string
              minLength: 0
              maxLength: 250
              description: The description of the security profile.
            InstanceArn:
              type: string
              description: The identifier of the Amazon Connect instance.
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Permissions:
              type: array
              maxItems: 500
              uniqueItems: true
              x-insertionOrder: false
              description: Permissions assigned to the security profile.
              items:
                $ref: '#/components/schemas/Permission'
            SecurityProfileArn:
              type: string
              description: The Amazon Resource Name (ARN) for the security profile.
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/security-profile/[-a-zA-Z0-9]*$
            SecurityProfileName:
              type: string
              pattern: ^[ a-zA-Z0-9_@-]+$
              minLength: 1
              maxLength: 127
              description: The name of the security profile.
            TagRestrictedResources:
              type: array
              maxItems: 10
              uniqueItems: true
              x-insertionOrder: false
              description: The list of resources that a security profile applies tag restrictions to in Amazon Connect.
              items:
                $ref: '#/components/schemas/ResourceName'
            HierarchyRestrictedResources:
              type: array
              maxItems: 10
              uniqueItems: true
              x-insertionOrder: false
              description: The list of resources that a security profile applies hierarchy restrictions to in Amazon Connect.
              items:
                $ref: '#/components/schemas/ResourceName'
            AllowedAccessControlHierarchyGroupId:
              type: string
              pattern: ^[a-zA-Z0-9-]+$
              minLength: 0
              maxLength: 127
              description: The identifier of the hierarchy group that a security profile uses to restrict access to resources in Amazon Connect.
            Applications:
              type: array
              maxItems: 10
              uniqueItems: true
              x-insertionOrder: false
              description: A list of third-party applications that the security profile will give access to.
              items:
                $ref: '#/components/schemas/Application'
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: The tags used to organize, track, or control access for this resource.
              items:
                $ref: '#/components/schemas/Tag'
            LastModifiedRegion:
              type: string
              pattern: '[a-z]{2}(-[a-z]+){1,2}(-[0-9])?'
              description: The AWS Region where this resource was last modified.
            LastModifiedTime:
              type: number
              description: The timestamp when this resource was last modified.
          x-stackQL-stringOnly: true
      x-title: CreateSecurityProfileRequest
      type: object
      required: []
    CreateTaskTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The identifier (arn) of the task template.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/task-template/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$
            InstanceArn:
              description: The identifier (arn) of the instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            Name:
              description: The name of the task template.
              type: string
              minLength: 1
              maxLength: 100
            Description:
              description: The description of the task template.
              type: string
              minLength: 0
              maxLength: 255
            ContactFlowArn:
              description: The identifier of the contact flow.
              type: string
              pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
            SelfAssignContactFlowArn:
              description: The identifier of the contact flow.
              type: string
              pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
            Constraints:
              description: The constraints for the task template
              type: object
              additionalProperties: false
              properties:
                InvisibleFields:
                  $ref: '#/components/schemas/InvisibleTaskTemplateFields'
                RequiredFields:
                  $ref: '#/components/schemas/RequiredTaskTemplateFields'
                ReadOnlyFields:
                  $ref: '#/components/schemas/ReadOnlyTaskTemplateFields'
            Defaults:
              description: ''
              type: array
              maxItems: 50
              items:
                $ref: '#/components/schemas/DefaultFieldValue'
            Fields:
              description: The list of task template's fields
              type: array
              maxItems: 50
              items:
                $ref: '#/components/schemas/Field'
            Status:
              $ref: '#/components/schemas/Status'
            ClientToken:
              $ref: '#/components/schemas/ClientToken'
            Tags:
              description: One or more tags.
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateTaskTemplateRequest
      type: object
      required: []
    CreateTrafficDistributionGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance that has been replicated.
              type: string
              pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:instance/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
              minLength: 1
              maxLength: 250
            TrafficDistributionGroupArn:
              description: The identifier of the traffic distribution group.
              type: string
              pattern: ^arn:(aws|aws-us-gov):connect:[a-z]{2}-[a-z]+-[0-9]{1}:[0-9]{1,20}:traffic-distribution-group/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
            Description:
              description: A description for the traffic distribution group.
              type: string
              pattern: (^[\S].*[\S]$)|(^[\S]$)
              minLength: 1
              maxLength: 250
            Name:
              description: The name for the traffic distribution group.
              type: string
              pattern: (^[\S].*[\S]$)|(^[\S]$)
              minLength: 1
              maxLength: 128
            Status:
              description: The status of the traffic distribution group.
              type: string
              enum:
                - CREATION_IN_PROGRESS
                - ACTIVE
                - CREATION_FAILED
                - PENDING_DELETION
                - DELETION_FAILED
                - UPDATE_IN_PROGRESS
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: One or more tags.
              items:
                $ref: '#/components/schemas/Tag'
            IsDefault:
              description: If this is the default traffic distribution group.
              type: boolean
          x-stackQL-stringOnly: true
      x-title: CreateTrafficDistributionGroupRequest
      type: object
      required: []
    CreateUserRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            DirectoryUserId:
              description: The identifier of the user account in the directory used for identity management.
              type: string
            HierarchyGroupArn:
              description: The identifier of the hierarchy group for the user.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group/[-a-zA-Z0-9]*$
            Username:
              description: The user name for the account.
              type: string
              minLength: 1
              maxLength: 64
              pattern: '[a-zA-Z0-9\_\-\.\@]+'
            Password:
              description: The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
              type: string
              pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$
            RoutingProfileArn:
              description: The identifier of the routing profile for the user.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/routing-profile/[-a-zA-Z0-9]*$
            IdentityInfo:
              description: The information about the identity of the user.
              $ref: '#/components/schemas/UserIdentityInfo'
            PhoneConfig:
              description: The phone settings for the user.
              $ref: '#/components/schemas/UserPhoneConfig'
            SecurityProfileArns:
              type: array
              minItems: 1
              maxItems: 10
              uniqueItems: true
              x-insertionOrder: false
              description: One or more security profile arns for the user
              items:
                $ref: '#/components/schemas/SecurityProfileArn'
            UserArn:
              description: The Amazon Resource Name (ARN) for the user.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent/[-a-zA-Z0-9]*$
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: One or more tags.
              items:
                $ref: '#/components/schemas/Tag'
            UserProficiencies:
              description: One or more predefined attributes assigned to a user, with a level that indicates how skilled they are.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/UserProficiency'
          x-stackQL-stringOnly: true
      x-title: CreateUserRequest
      type: object
      required: []
    CreateUserHierarchyGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            UserHierarchyGroupArn:
              description: The Amazon Resource Name (ARN) for the user hierarchy group.
              $ref: '#/components/schemas/UserHierarchyGroupArn'
            ParentGroupArn:
              description: The Amazon Resource Name (ARN) for the parent user hierarchy group.
              $ref: '#/components/schemas/UserHierarchyGroupArn'
            Name:
              description: The name of the user hierarchy group.
              type: string
              minLength: 1
              maxLength: 100
            Tags:
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              description: One or more tags.
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateUserHierarchyGroupRequest
      type: object
      required: []
    CreateUserHierarchyStructureRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The identifier of the Amazon Connect instance.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            UserHierarchyStructureArn:
              description: The identifier of the User Hierarchy Structure.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/user-hierarchy-structure
            UserHierarchyStructure:
              description: Information about the hierarchy structure.
              type: object
              additionalProperties: false
              properties:
                LevelOne:
                  $ref: '#/components/schemas/LevelOne'
                LevelTwo:
                  $ref: '#/components/schemas/LevelTwo'
                LevelThree:
                  $ref: '#/components/schemas/LevelThree'
                LevelFour:
                  $ref: '#/components/schemas/LevelFour'
                LevelFive:
                  $ref: '#/components/schemas/LevelFive'
          x-stackQL-stringOnly: true
      x-title: CreateUserHierarchyStructureRequest
      type: object
      required: []
    CreateViewRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The Amazon Resource Name (ARN) of the instance.
              type: string
              minLength: 1
              maxLength: 100
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
            ViewArn:
              description: The Amazon Resource Name (ARN) of the view.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/view/[-:$a-zA-Z0-9]*$
              minLength: 1
              maxLength: 255
            ViewId:
              description: The view id of the view.
              type: string
              minLength: 1
              maxLength: 500
              pattern: ^[a-zA-Z0-9\_\-:\/$]+$
            Name:
              description: The name of the view.
              type: string
              minLength: 1
              maxLength: 512
              pattern: ^([\p{L}\p{N}_.:\/=+\-@]+[\p{L}\p{Z}\p{N}_.:\/=+\-@]*)$
            Description:
              description: The description of the view.
              type: string
              minLength: 0
              maxLength: 4096
              pattern: ^([\p{L}\p{N}_.:\/=+\-@,]+[\p{L}\p{Z}\p{N}_.:\/=+\-@,]*)$
            Template:
              description: The template of the view as JSON.
              type: object
            Actions:
              description: The actions of the view in an array.
              type: array
              x-insertionOrder: false
              maxItems: 1000
              items:
                type: string
                minLength: 1
                maxLength: 255
                pattern: ^([\p{L}\p{N}_.:\/=+\-@]+[\p{L}\p{Z}\p{N}_.:\/=+\-@]*)$
            ViewContentSha256:
              description: The view content hash.
              type: string
              pattern: ^[a-zA-Z0-9]{64}$
            Tags:
              description: One or more tags.
              type: array
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateViewRequest
      type: object
      required: []
    CreateViewVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ViewArn:
              description: The Amazon Resource Name (ARN) of the view for which a version is being created.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/view/[-:a-zA-Z0-9]*$
              minLength: 1
              maxLength: 255
            ViewVersionArn:
              description: The Amazon Resource Name (ARN) of the created view version.
              type: string
              pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/view/[-:a-zA-Z0-9]*$
              minLength: 1
              maxLength: 255
            VersionDescription:
              description: The description for the view version.
              type: string
              minLength: 1
              maxLength: 4096
              pattern: ^([\p{L}\p{N}_.:\/=+\-@,]+[\p{L}\p{Z}\p{N}_.:\/=+\-@,]*)$
            ViewContentSha256:
              description: The view content hash to be checked.
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[a-zA-Z0-9]{64}$
            Version:
              description: The version of the view.
              type: integer
          x-stackQL-stringOnly: true
      x-title: CreateViewVersionRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    agent_statuses:
      name: agent_statuses
      id: aws.connect.agent_statuses
      x-cfn-schema-name: AgentStatus
      x-cfn-type-name: AWS::Connect::AgentStatus
      x-identifiers:
        - AgentStatusArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AgentStatus&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::AgentStatus"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::AgentStatus"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/agent_statuses/methods/create_resource'
        delete: []
        update:
          - $ref: '#/components/x-stackQL-resources/agent_statuses/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.AgentStatusArn') as agent_status_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DisplayOrder') as display_order,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.ResetOrderNumber') as reset_order_number,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LastModifiedRegion') as last_modified_region,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::AgentStatus'
              AND data__Identifier = '<AgentStatusArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.AgentStatusArn') as agent_status_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.DisplayOrder') as display_order,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.ResetOrderNumber') as reset_order_number,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedRegion') as last_modified_region,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::AgentStatus'
                AND detail.data__TypeName = 'AWS::Connect::AgentStatus'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'AgentStatusArn') as agent_status_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'DisplayOrder') as display_order,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'ResetOrderNumber') as reset_order_number,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'LastModifiedRegion') as last_modified_region,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::AgentStatus'
                  AND data__Identifier = '<AgentStatusArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'AgentStatusArn') as agent_status_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'DisplayOrder') as display_order,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'ResetOrderNumber') as reset_order_number,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'LastModifiedRegion') as last_modified_region,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::AgentStatus'
                    AND detail.data__TypeName = 'AWS::Connect::AgentStatus'
                    AND listing.region = 'us-east-1'
    agent_statuses_list_only:
      name: agent_statuses_list_only
      id: aws.connect.agent_statuses_list_only
      x-cfn-schema-name: AgentStatus
      x-cfn-type-name: AWS::Connect::AgentStatus
      x-identifiers:
        - AgentStatusArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AgentStatusArn') as agent_status_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::AgentStatus'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AgentStatusArn') as agent_status_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::AgentStatus'
                AND region = 'us-east-1'
    agent_status_tags:
      name: agent_status_tags
      id: aws.connect.agent_status_tags
      x-cfn-schema-name: AgentStatus
      x-cfn-type-name: AWS::Connect::AgentStatus
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.AgentStatusArn') as agent_status_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.DisplayOrder') as display_order,
              JSON_EXTRACT(detail.Properties, '$.State') as state,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.ResetOrderNumber') as reset_order_number,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedRegion') as last_modified_region,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::AgentStatus'
              AND detail.data__TypeName = 'AWS::Connect::AgentStatus'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'AgentStatusArn') as agent_status_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'DisplayOrder') as display_order,
                json_extract_path_text(detail.Properties, 'State') as state,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'ResetOrderNumber') as reset_order_number,
                json_extract_path_text(detail.Properties, 'LastModifiedRegion') as last_modified_region,
                json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::AgentStatus'
                AND detail.data__TypeName = 'AWS::Connect::AgentStatus'
                AND listing.region = 'us-east-1'
    approved_origins:
      name: approved_origins
      id: aws.connect.approved_origins
      x-cfn-schema-name: ApprovedOrigin
      x-cfn-type-name: AWS::Connect::ApprovedOrigin
      x-identifiers:
        - InstanceId
        - Origin
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ApprovedOrigin&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ApprovedOrigin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ApprovedOrigin"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/approved_origins/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/approved_origins/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Origin') as origin,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ApprovedOrigin'
              AND data__Identifier = '<InstanceId>|<Origin>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Origin') as origin,
                JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::ApprovedOrigin'
                AND detail.data__TypeName = 'AWS::Connect::ApprovedOrigin'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Origin') as origin,
                  json_extract_path_text(Properties, 'InstanceId') as instance_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ApprovedOrigin'
                  AND data__Identifier = '<InstanceId>|<Origin>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Origin') as origin,
                    json_extract_path_text(detail.Properties, 'InstanceId') as instance_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::ApprovedOrigin'
                    AND detail.data__TypeName = 'AWS::Connect::ApprovedOrigin'
                    AND listing.region = 'us-east-1'
    approved_origins_list_only:
      name: approved_origins_list_only
      id: aws.connect.approved_origins_list_only
      x-cfn-schema-name: ApprovedOrigin
      x-cfn-type-name: AWS::Connect::ApprovedOrigin
      x-identifiers:
        - InstanceId
        - Origin
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.Origin') as origin
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ApprovedOrigin'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceId') as instance_id,
                json_extract_path_text(Properties, 'Origin') as origin
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ApprovedOrigin'
                AND region = 'us-east-1'
    contact_flows:
      name: contact_flows
      id: aws.connect.contact_flows
      x-cfn-schema-name: ContactFlow
      x-cfn-type-name: AWS::Connect::ContactFlow
      x-identifiers:
        - ContactFlowArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ContactFlow&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ContactFlow"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ContactFlow"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ContactFlow"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_flows/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_flows/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/contact_flows/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.ContactFlowArn') as contact_flow_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ContactFlow'
              AND data__Identifier = '<ContactFlowArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.ContactFlowArn') as contact_flow_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Content') as content,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::ContactFlow'
                AND detail.data__TypeName = 'AWS::Connect::ContactFlow'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'ContactFlowArn') as contact_flow_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Content') as content,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ContactFlow'
                  AND data__Identifier = '<ContactFlowArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'ContactFlowArn') as contact_flow_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Content') as content,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::ContactFlow'
                    AND detail.data__TypeName = 'AWS::Connect::ContactFlow'
                    AND listing.region = 'us-east-1'
    contact_flows_list_only:
      name: contact_flows_list_only
      id: aws.connect.contact_flows_list_only
      x-cfn-schema-name: ContactFlow
      x-cfn-type-name: AWS::Connect::ContactFlow
      x-identifiers:
        - ContactFlowArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactFlowArn') as contact_flow_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ContactFlow'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ContactFlowArn') as contact_flow_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ContactFlow'
                AND region = 'us-east-1'
    contact_flow_tags:
      name: contact_flow_tags
      id: aws.connect.contact_flow_tags
      x-cfn-schema-name: ContactFlow
      x-cfn-type-name: AWS::Connect::ContactFlow
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.ContactFlowArn') as contact_flow_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Content') as content,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.State') as state,
              JSON_EXTRACT(detail.Properties, '$.Type') as type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::ContactFlow'
              AND detail.data__TypeName = 'AWS::Connect::ContactFlow'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'ContactFlowArn') as contact_flow_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Content') as content,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'State') as state,
                json_extract_path_text(detail.Properties, 'Type') as type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::ContactFlow'
                AND detail.data__TypeName = 'AWS::Connect::ContactFlow'
                AND listing.region = 'us-east-1'
    contact_flow_modules:
      name: contact_flow_modules
      id: aws.connect.contact_flow_modules
      x-cfn-schema-name: ContactFlowModule
      x-cfn-type-name: AWS::Connect::ContactFlowModule
      x-identifiers:
        - ContactFlowModuleArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ContactFlowModule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ContactFlowModule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ContactFlowModule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ContactFlowModule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/contact_flow_modules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/contact_flow_modules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/contact_flow_modules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.ContactFlowModuleArn') as contact_flow_module_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ContactFlowModule'
              AND data__Identifier = '<ContactFlowModuleArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.ContactFlowModuleArn') as contact_flow_module_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Content') as content,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::ContactFlowModule'
                AND detail.data__TypeName = 'AWS::Connect::ContactFlowModule'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'ContactFlowModuleArn') as contact_flow_module_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Content') as content,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ContactFlowModule'
                  AND data__Identifier = '<ContactFlowModuleArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'ContactFlowModuleArn') as contact_flow_module_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Content') as content,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::ContactFlowModule'
                    AND detail.data__TypeName = 'AWS::Connect::ContactFlowModule'
                    AND listing.region = 'us-east-1'
    contact_flow_modules_list_only:
      name: contact_flow_modules_list_only
      id: aws.connect.contact_flow_modules_list_only
      x-cfn-schema-name: ContactFlowModule
      x-cfn-type-name: AWS::Connect::ContactFlowModule
      x-identifiers:
        - ContactFlowModuleArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactFlowModuleArn') as contact_flow_module_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ContactFlowModule'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ContactFlowModuleArn') as contact_flow_module_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ContactFlowModule'
                AND region = 'us-east-1'
    contact_flow_module_tags:
      name: contact_flow_module_tags
      id: aws.connect.contact_flow_module_tags
      x-cfn-schema-name: ContactFlowModule
      x-cfn-type-name: AWS::Connect::ContactFlowModule
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.ContactFlowModuleArn') as contact_flow_module_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Content') as content,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.State') as state,
              JSON_EXTRACT(detail.Properties, '$.Status') as status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::ContactFlowModule'
              AND detail.data__TypeName = 'AWS::Connect::ContactFlowModule'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'ContactFlowModuleArn') as contact_flow_module_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Content') as content,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'State') as state,
                json_extract_path_text(detail.Properties, 'Status') as status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::ContactFlowModule'
                AND detail.data__TypeName = 'AWS::Connect::ContactFlowModule'
                AND listing.region = 'us-east-1'
    email_addresses:
      name: email_addresses
      id: aws.connect.email_addresses
      x-cfn-schema-name: EmailAddress
      x-cfn-type-name: AWS::Connect::EmailAddress
      x-identifiers:
        - EmailAddressArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EmailAddress&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::EmailAddress"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::EmailAddress"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::EmailAddress"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/email_addresses/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/email_addresses/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/email_addresses/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.EmailAddressArn') as email_address_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EmailAddress') as email_address,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::EmailAddress'
              AND data__Identifier = '<EmailAddressArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.EmailAddressArn') as email_address_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EmailAddress') as email_address,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::EmailAddress'
                AND detail.data__TypeName = 'AWS::Connect::EmailAddress'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'EmailAddressArn') as email_address_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EmailAddress') as email_address,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::EmailAddress'
                  AND data__Identifier = '<EmailAddressArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'EmailAddressArn') as email_address_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EmailAddress') as email_address,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::EmailAddress'
                    AND detail.data__TypeName = 'AWS::Connect::EmailAddress'
                    AND listing.region = 'us-east-1'
    email_addresses_list_only:
      name: email_addresses_list_only
      id: aws.connect.email_addresses_list_only
      x-cfn-schema-name: EmailAddress
      x-cfn-type-name: AWS::Connect::EmailAddress
      x-identifiers:
        - EmailAddressArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EmailAddressArn') as email_address_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::EmailAddress'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EmailAddressArn') as email_address_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::EmailAddress'
                AND region = 'us-east-1'
    email_address_tags:
      name: email_address_tags
      id: aws.connect.email_address_tags
      x-cfn-schema-name: EmailAddress
      x-cfn-type-name: AWS::Connect::EmailAddress
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.EmailAddressArn') as email_address_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EmailAddress') as email_address,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::EmailAddress'
              AND detail.data__TypeName = 'AWS::Connect::EmailAddress'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'EmailAddressArn') as email_address_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EmailAddress') as email_address,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::EmailAddress'
                AND detail.data__TypeName = 'AWS::Connect::EmailAddress'
                AND listing.region = 'us-east-1'
    evaluation_forms:
      name: evaluation_forms
      id: aws.connect.evaluation_forms
      x-cfn-schema-name: EvaluationForm
      x-cfn-type-name: AWS::Connect::EvaluationForm
      x-identifiers:
        - EvaluationFormArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EvaluationForm&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::EvaluationForm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::EvaluationForm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::EvaluationForm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/evaluation_forms/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/evaluation_forms/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/evaluation_forms/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Title') as title,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EvaluationFormArn') as evaluation_form_arn,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Items') as items,
              JSON_EXTRACT(Properties, '$.ScoringStrategy') as scoring_strategy,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::EvaluationForm'
              AND data__Identifier = '<EvaluationFormArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Title') as title,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EvaluationFormArn') as evaluation_form_arn,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Items') as items,
                JSON_EXTRACT(detail.Properties, '$.ScoringStrategy') as scoring_strategy,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::EvaluationForm'
                AND detail.data__TypeName = 'AWS::Connect::EvaluationForm'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Title') as title,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EvaluationFormArn') as evaluation_form_arn,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Items') as items,
                  json_extract_path_text(Properties, 'ScoringStrategy') as scoring_strategy,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::EvaluationForm'
                  AND data__Identifier = '<EvaluationFormArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Title') as title,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EvaluationFormArn') as evaluation_form_arn,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Items') as items,
                    json_extract_path_text(detail.Properties, 'ScoringStrategy') as scoring_strategy,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::EvaluationForm'
                    AND detail.data__TypeName = 'AWS::Connect::EvaluationForm'
                    AND listing.region = 'us-east-1'
    evaluation_forms_list_only:
      name: evaluation_forms_list_only
      id: aws.connect.evaluation_forms_list_only
      x-cfn-schema-name: EvaluationForm
      x-cfn-type-name: AWS::Connect::EvaluationForm
      x-identifiers:
        - EvaluationFormArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EvaluationFormArn') as evaluation_form_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::EvaluationForm'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EvaluationFormArn') as evaluation_form_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::EvaluationForm'
                AND region = 'us-east-1'
    evaluation_form_tags:
      name: evaluation_form_tags
      id: aws.connect.evaluation_form_tags
      x-cfn-schema-name: EvaluationForm
      x-cfn-type-name: AWS::Connect::EvaluationForm
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Title') as title,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EvaluationFormArn') as evaluation_form_arn,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Items') as items,
              JSON_EXTRACT(detail.Properties, '$.ScoringStrategy') as scoring_strategy,
              JSON_EXTRACT(detail.Properties, '$.Status') as status
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::EvaluationForm'
              AND detail.data__TypeName = 'AWS::Connect::EvaluationForm'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Title') as title,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EvaluationFormArn') as evaluation_form_arn,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Items') as items,
                json_extract_path_text(detail.Properties, 'ScoringStrategy') as scoring_strategy,
                json_extract_path_text(detail.Properties, 'Status') as status
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::EvaluationForm'
                AND detail.data__TypeName = 'AWS::Connect::EvaluationForm'
                AND listing.region = 'us-east-1'
    hours_of_operations:
      name: hours_of_operations
      id: aws.connect.hours_of_operations
      x-cfn-schema-name: HoursOfOperation
      x-cfn-type-name: AWS::Connect::HoursOfOperation
      x-identifiers:
        - HoursOfOperationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__HoursOfOperation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::HoursOfOperation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::HoursOfOperation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::HoursOfOperation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/hours_of_operations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/hours_of_operations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/hours_of_operations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TimeZone') as time_zone,
              JSON_EXTRACT(Properties, '$.Config') as config,
              JSON_EXTRACT(Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.HoursOfOperationOverrides') as hours_of_operation_overrides
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::HoursOfOperation'
              AND data__Identifier = '<HoursOfOperationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.TimeZone') as time_zone,
                JSON_EXTRACT(detail.Properties, '$.Config') as config,
                JSON_EXTRACT(detail.Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.HoursOfOperationOverrides') as hours_of_operation_overrides
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::HoursOfOperation'
                AND detail.data__TypeName = 'AWS::Connect::HoursOfOperation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'TimeZone') as time_zone,
                  json_extract_path_text(Properties, 'Config') as config,
                  json_extract_path_text(Properties, 'HoursOfOperationArn') as hours_of_operation_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'HoursOfOperationOverrides') as hours_of_operation_overrides
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::HoursOfOperation'
                  AND data__Identifier = '<HoursOfOperationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'TimeZone') as time_zone,
                    json_extract_path_text(detail.Properties, 'Config') as config,
                    json_extract_path_text(detail.Properties, 'HoursOfOperationArn') as hours_of_operation_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'HoursOfOperationOverrides') as hours_of_operation_overrides
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::HoursOfOperation'
                    AND detail.data__TypeName = 'AWS::Connect::HoursOfOperation'
                    AND listing.region = 'us-east-1'
    hours_of_operations_list_only:
      name: hours_of_operations_list_only
      id: aws.connect.hours_of_operations_list_only
      x-cfn-schema-name: HoursOfOperation
      x-cfn-type-name: AWS::Connect::HoursOfOperation
      x-identifiers:
        - HoursOfOperationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.HoursOfOperationArn') as hours_of_operation_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::HoursOfOperation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'HoursOfOperationArn') as hours_of_operation_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::HoursOfOperation'
                AND region = 'us-east-1'
    hours_of_operation_tags:
      name: hours_of_operation_tags
      id: aws.connect.hours_of_operation_tags
      x-cfn-schema-name: HoursOfOperation
      x-cfn-type-name: AWS::Connect::HoursOfOperation
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.TimeZone') as time_zone,
              JSON_EXTRACT(detail.Properties, '$.Config') as config,
              JSON_EXTRACT(detail.Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
              JSON_EXTRACT(detail.Properties, '$.HoursOfOperationOverrides') as hours_of_operation_overrides
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::HoursOfOperation'
              AND detail.data__TypeName = 'AWS::Connect::HoursOfOperation'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'TimeZone') as time_zone,
                json_extract_path_text(detail.Properties, 'Config') as config,
                json_extract_path_text(detail.Properties, 'HoursOfOperationArn') as hours_of_operation_arn,
                json_extract_path_text(detail.Properties, 'HoursOfOperationOverrides') as hours_of_operation_overrides
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::HoursOfOperation'
                AND detail.data__TypeName = 'AWS::Connect::HoursOfOperation'
                AND listing.region = 'us-east-1'
    instances:
      name: instances
      id: aws.connect.instances
      x-cfn-schema-name: Instance
      x-cfn-type-name: AWS::Connect::Instance
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Instance&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Instance"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Instance"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Instance"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/instances/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/instances/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/instances/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.IdentityManagementType') as identity_management_type,
              JSON_EXTRACT(Properties, '$.InstanceAlias') as instance_alias,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(Properties, '$.InstanceStatus') as instance_status,
              JSON_EXTRACT(Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(Properties, '$.Attributes') as attributes,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Instance'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityManagementType') as identity_management_type,
                JSON_EXTRACT(detail.Properties, '$.InstanceAlias') as instance_alias,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.ServiceRole') as service_role,
                JSON_EXTRACT(detail.Properties, '$.InstanceStatus') as instance_status,
                JSON_EXTRACT(detail.Properties, '$.DirectoryId') as directory_id,
                JSON_EXTRACT(detail.Properties, '$.Attributes') as attributes,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::Instance'
                AND detail.data__TypeName = 'AWS::Connect::Instance'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'IdentityManagementType') as identity_management_type,
                  json_extract_path_text(Properties, 'InstanceAlias') as instance_alias,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'ServiceRole') as service_role,
                  json_extract_path_text(Properties, 'InstanceStatus') as instance_status,
                  json_extract_path_text(Properties, 'DirectoryId') as directory_id,
                  json_extract_path_text(Properties, 'Attributes') as attributes,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Instance'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'IdentityManagementType') as identity_management_type,
                    json_extract_path_text(detail.Properties, 'InstanceAlias') as instance_alias,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'ServiceRole') as service_role,
                    json_extract_path_text(detail.Properties, 'InstanceStatus') as instance_status,
                    json_extract_path_text(detail.Properties, 'DirectoryId') as directory_id,
                    json_extract_path_text(detail.Properties, 'Attributes') as attributes,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::Instance'
                    AND detail.data__TypeName = 'AWS::Connect::Instance'
                    AND listing.region = 'us-east-1'
    instances_list_only:
      name: instances_list_only
      id: aws.connect.instances_list_only
      x-cfn-schema-name: Instance
      x-cfn-type-name: AWS::Connect::Instance
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Instance'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Instance'
                AND region = 'us-east-1'
    instance_tags:
      name: instance_tags
      id: aws.connect.instance_tags
      x-cfn-schema-name: Instance
      x-cfn-type-name: AWS::Connect::Instance
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.IdentityManagementType') as identity_management_type,
              JSON_EXTRACT(detail.Properties, '$.InstanceAlias') as instance_alias,
              JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(detail.Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(detail.Properties, '$.InstanceStatus') as instance_status,
              JSON_EXTRACT(detail.Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(detail.Properties, '$.Attributes') as attributes
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::Instance'
              AND detail.data__TypeName = 'AWS::Connect::Instance'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'IdentityManagementType') as identity_management_type,
                json_extract_path_text(detail.Properties, 'InstanceAlias') as instance_alias,
                json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                json_extract_path_text(detail.Properties, 'ServiceRole') as service_role,
                json_extract_path_text(detail.Properties, 'InstanceStatus') as instance_status,
                json_extract_path_text(detail.Properties, 'DirectoryId') as directory_id,
                json_extract_path_text(detail.Properties, 'Attributes') as attributes
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::Instance'
                AND detail.data__TypeName = 'AWS::Connect::Instance'
                AND listing.region = 'us-east-1'
    instance_storage_configs:
      name: instance_storage_configs
      id: aws.connect.instance_storage_configs
      x-cfn-schema-name: InstanceStorageConfig
      x-cfn-type-name: AWS::Connect::InstanceStorageConfig
      x-identifiers:
        - InstanceArn
        - AssociationId
        - ResourceType
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InstanceStorageConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::InstanceStorageConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::InstanceStorageConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::InstanceStorageConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/instance_storage_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/instance_storage_configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/instance_storage_configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id,
              JSON_EXTRACT(Properties, '$.StorageType') as storage_type,
              JSON_EXTRACT(Properties, '$.S3Config') as s3_config,
              JSON_EXTRACT(Properties, '$.KinesisVideoStreamConfig') as kinesis_video_stream_config,
              JSON_EXTRACT(Properties, '$.KinesisStreamConfig') as kinesis_stream_config,
              JSON_EXTRACT(Properties, '$.KinesisFirehoseConfig') as kinesis_firehose_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::InstanceStorageConfig'
              AND data__Identifier = '<InstanceArn>|<AssociationId>|<ResourceType>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.ResourceType') as resource_type,
                JSON_EXTRACT(detail.Properties, '$.AssociationId') as association_id,
                JSON_EXTRACT(detail.Properties, '$.StorageType') as storage_type,
                JSON_EXTRACT(detail.Properties, '$.S3Config') as s3_config,
                JSON_EXTRACT(detail.Properties, '$.KinesisVideoStreamConfig') as kinesis_video_stream_config,
                JSON_EXTRACT(detail.Properties, '$.KinesisStreamConfig') as kinesis_stream_config,
                JSON_EXTRACT(detail.Properties, '$.KinesisFirehoseConfig') as kinesis_firehose_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::InstanceStorageConfig'
                AND detail.data__TypeName = 'AWS::Connect::InstanceStorageConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'ResourceType') as resource_type,
                  json_extract_path_text(Properties, 'AssociationId') as association_id,
                  json_extract_path_text(Properties, 'StorageType') as storage_type,
                  json_extract_path_text(Properties, 'S3Config') as s3_config,
                  json_extract_path_text(Properties, 'KinesisVideoStreamConfig') as kinesis_video_stream_config,
                  json_extract_path_text(Properties, 'KinesisStreamConfig') as kinesis_stream_config,
                  json_extract_path_text(Properties, 'KinesisFirehoseConfig') as kinesis_firehose_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::InstanceStorageConfig'
                  AND data__Identifier = '<InstanceArn>|<AssociationId>|<ResourceType>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'ResourceType') as resource_type,
                    json_extract_path_text(detail.Properties, 'AssociationId') as association_id,
                    json_extract_path_text(detail.Properties, 'StorageType') as storage_type,
                    json_extract_path_text(detail.Properties, 'S3Config') as s3_config,
                    json_extract_path_text(detail.Properties, 'KinesisVideoStreamConfig') as kinesis_video_stream_config,
                    json_extract_path_text(detail.Properties, 'KinesisStreamConfig') as kinesis_stream_config,
                    json_extract_path_text(detail.Properties, 'KinesisFirehoseConfig') as kinesis_firehose_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::InstanceStorageConfig'
                    AND detail.data__TypeName = 'AWS::Connect::InstanceStorageConfig'
                    AND listing.region = 'us-east-1'
    instance_storage_configs_list_only:
      name: instance_storage_configs_list_only
      id: aws.connect.instance_storage_configs_list_only
      x-cfn-schema-name: InstanceStorageConfig
      x-cfn-type-name: AWS::Connect::InstanceStorageConfig
      x-identifiers:
        - InstanceArn
        - AssociationId
        - ResourceType
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::InstanceStorageConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'AssociationId') as association_id,
                json_extract_path_text(Properties, 'ResourceType') as resource_type
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::InstanceStorageConfig'
                AND region = 'us-east-1'
    integration_associations:
      name: integration_associations
      id: aws.connect.integration_associations
      x-cfn-schema-name: IntegrationAssociation
      x-cfn-type-name: AWS::Connect::IntegrationAssociation
      x-identifiers:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IntegrationAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::IntegrationAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::IntegrationAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/integration_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/integration_associations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IntegrationAssociationId') as integration_association_id,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.IntegrationArn') as integration_arn,
              JSON_EXTRACT(Properties, '$.IntegrationType') as integration_type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::IntegrationAssociation'
              AND data__Identifier = '<InstanceId>|<IntegrationType>|<IntegrationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IntegrationAssociationId') as integration_association_id,
                JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id,
                JSON_EXTRACT(detail.Properties, '$.IntegrationArn') as integration_arn,
                JSON_EXTRACT(detail.Properties, '$.IntegrationType') as integration_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::IntegrationAssociation'
                AND detail.data__TypeName = 'AWS::Connect::IntegrationAssociation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IntegrationAssociationId') as integration_association_id,
                  json_extract_path_text(Properties, 'InstanceId') as instance_id,
                  json_extract_path_text(Properties, 'IntegrationArn') as integration_arn,
                  json_extract_path_text(Properties, 'IntegrationType') as integration_type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::IntegrationAssociation'
                  AND data__Identifier = '<InstanceId>|<IntegrationType>|<IntegrationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IntegrationAssociationId') as integration_association_id,
                    json_extract_path_text(detail.Properties, 'InstanceId') as instance_id,
                    json_extract_path_text(detail.Properties, 'IntegrationArn') as integration_arn,
                    json_extract_path_text(detail.Properties, 'IntegrationType') as integration_type
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::IntegrationAssociation'
                    AND detail.data__TypeName = 'AWS::Connect::IntegrationAssociation'
                    AND listing.region = 'us-east-1'
    integration_associations_list_only:
      name: integration_associations_list_only
      id: aws.connect.integration_associations_list_only
      x-cfn-schema-name: IntegrationAssociation
      x-cfn-type-name: AWS::Connect::IntegrationAssociation
      x-identifiers:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.IntegrationType') as integration_type,
              JSON_EXTRACT(Properties, '$.IntegrationArn') as integration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::IntegrationAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceId') as instance_id,
                json_extract_path_text(Properties, 'IntegrationType') as integration_type,
                json_extract_path_text(Properties, 'IntegrationArn') as integration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::IntegrationAssociation'
                AND region = 'us-east-1'
    predefined_attributes:
      name: predefined_attributes
      id: aws.connect.predefined_attributes
      x-cfn-schema-name: PredefinedAttribute
      x-cfn-type-name: AWS::Connect::PredefinedAttribute
      x-identifiers:
        - InstanceArn
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PredefinedAttribute&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::PredefinedAttribute"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::PredefinedAttribute"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::PredefinedAttribute"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/predefined_attributes/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/predefined_attributes/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/predefined_attributes/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Values') as _values,
              JSON_EXTRACT(Properties, '$.LastModifiedRegion') as last_modified_region,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::PredefinedAttribute'
              AND data__Identifier = '<InstanceArn>|<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Values') as _values,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedRegion') as last_modified_region,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::PredefinedAttribute'
                AND detail.data__TypeName = 'AWS::Connect::PredefinedAttribute'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Values') as _values,
                  json_extract_path_text(Properties, 'LastModifiedRegion') as last_modified_region,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::PredefinedAttribute'
                  AND data__Identifier = '<InstanceArn>|<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Values') as _values,
                    json_extract_path_text(detail.Properties, 'LastModifiedRegion') as last_modified_region,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::PredefinedAttribute'
                    AND detail.data__TypeName = 'AWS::Connect::PredefinedAttribute'
                    AND listing.region = 'us-east-1'
    predefined_attributes_list_only:
      name: predefined_attributes_list_only
      id: aws.connect.predefined_attributes_list_only
      x-cfn-schema-name: PredefinedAttribute
      x-cfn-type-name: AWS::Connect::PredefinedAttribute
      x-identifiers:
        - InstanceArn
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::PredefinedAttribute'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::PredefinedAttribute'
                AND region = 'us-east-1'
    prompts:
      name: prompts
      id: aws.connect.prompts
      x-cfn-schema-name: Prompt
      x-cfn-type-name: AWS::Connect::Prompt
      x-identifiers:
        - PromptArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Prompt&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Prompt"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Prompt"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Prompt"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/prompts/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/prompts/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/prompts/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.S3Uri') as s3_uri,
              JSON_EXTRACT(Properties, '$.PromptArn') as prompt_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Prompt'
              AND data__Identifier = '<PromptArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.S3Uri') as s3_uri,
                JSON_EXTRACT(detail.Properties, '$.PromptArn') as prompt_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::Prompt'
                AND detail.data__TypeName = 'AWS::Connect::Prompt'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'S3Uri') as s3_uri,
                  json_extract_path_text(Properties, 'PromptArn') as prompt_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Prompt'
                  AND data__Identifier = '<PromptArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'S3Uri') as s3_uri,
                    json_extract_path_text(detail.Properties, 'PromptArn') as prompt_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::Prompt'
                    AND detail.data__TypeName = 'AWS::Connect::Prompt'
                    AND listing.region = 'us-east-1'
    prompts_list_only:
      name: prompts_list_only
      id: aws.connect.prompts_list_only
      x-cfn-schema-name: Prompt
      x-cfn-type-name: AWS::Connect::Prompt
      x-identifiers:
        - PromptArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PromptArn') as prompt_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Prompt'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PromptArn') as prompt_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Prompt'
                AND region = 'us-east-1'
    prompt_tags:
      name: prompt_tags
      id: aws.connect.prompt_tags
      x-cfn-schema-name: Prompt
      x-cfn-type-name: AWS::Connect::Prompt
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.S3Uri') as s3_uri,
              JSON_EXTRACT(detail.Properties, '$.PromptArn') as prompt_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::Prompt'
              AND detail.data__TypeName = 'AWS::Connect::Prompt'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'S3Uri') as s3_uri,
                json_extract_path_text(detail.Properties, 'PromptArn') as prompt_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::Prompt'
                AND detail.data__TypeName = 'AWS::Connect::Prompt'
                AND listing.region = 'us-east-1'
    queues:
      name: queues
      id: aws.connect.queues
      x-cfn-schema-name: Queue
      x-cfn-type-name: AWS::Connect::Queue
      x-identifiers:
        - QueueArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Queue&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Queue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Queue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Queue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/queues/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/queues/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/queues/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
              JSON_EXTRACT(Properties, '$.MaxContacts') as max_contacts,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.OutboundCallerConfig') as outbound_caller_config,
              JSON_EXTRACT(Properties, '$.OutboundEmailConfig') as outbound_email_config,
              JSON_EXTRACT(Properties, '$.QueueArn') as queue_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.QuickConnectArns') as quick_connect_arns,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Queue'
              AND data__Identifier = '<QueueArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
                JSON_EXTRACT(detail.Properties, '$.MaxContacts') as max_contacts,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.OutboundCallerConfig') as outbound_caller_config,
                JSON_EXTRACT(detail.Properties, '$.OutboundEmailConfig') as outbound_email_config,
                JSON_EXTRACT(detail.Properties, '$.QueueArn') as queue_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.QuickConnectArns') as quick_connect_arns,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Type') as type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::Queue'
                AND detail.data__TypeName = 'AWS::Connect::Queue'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'HoursOfOperationArn') as hours_of_operation_arn,
                  json_extract_path_text(Properties, 'MaxContacts') as max_contacts,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'OutboundCallerConfig') as outbound_caller_config,
                  json_extract_path_text(Properties, 'OutboundEmailConfig') as outbound_email_config,
                  json_extract_path_text(Properties, 'QueueArn') as queue_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'QuickConnectArns') as quick_connect_arns,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Queue'
                  AND data__Identifier = '<QueueArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'HoursOfOperationArn') as hours_of_operation_arn,
                    json_extract_path_text(detail.Properties, 'MaxContacts') as max_contacts,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'OutboundCallerConfig') as outbound_caller_config,
                    json_extract_path_text(detail.Properties, 'OutboundEmailConfig') as outbound_email_config,
                    json_extract_path_text(detail.Properties, 'QueueArn') as queue_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'QuickConnectArns') as quick_connect_arns,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Type') as type
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::Queue'
                    AND detail.data__TypeName = 'AWS::Connect::Queue'
                    AND listing.region = 'us-east-1'
    queues_list_only:
      name: queues_list_only
      id: aws.connect.queues_list_only
      x-cfn-schema-name: Queue
      x-cfn-type-name: AWS::Connect::Queue
      x-identifiers:
        - QueueArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.QueueArn') as queue_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Queue'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'QueueArn') as queue_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Queue'
                AND region = 'us-east-1'
    queue_tags:
      name: queue_tags
      id: aws.connect.queue_tags
      x-cfn-schema-name: Queue
      x-cfn-type-name: AWS::Connect::Queue
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
              JSON_EXTRACT(detail.Properties, '$.MaxContacts') as max_contacts,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.OutboundCallerConfig') as outbound_caller_config,
              JSON_EXTRACT(detail.Properties, '$.OutboundEmailConfig') as outbound_email_config,
              JSON_EXTRACT(detail.Properties, '$.QueueArn') as queue_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.QuickConnectArns') as quick_connect_arns,
              JSON_EXTRACT(detail.Properties, '$.Type') as type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::Queue'
              AND detail.data__TypeName = 'AWS::Connect::Queue'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'HoursOfOperationArn') as hours_of_operation_arn,
                json_extract_path_text(detail.Properties, 'MaxContacts') as max_contacts,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'OutboundCallerConfig') as outbound_caller_config,
                json_extract_path_text(detail.Properties, 'OutboundEmailConfig') as outbound_email_config,
                json_extract_path_text(detail.Properties, 'QueueArn') as queue_arn,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'QuickConnectArns') as quick_connect_arns,
                json_extract_path_text(detail.Properties, 'Type') as type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::Queue'
                AND detail.data__TypeName = 'AWS::Connect::Queue'
                AND listing.region = 'us-east-1'
    quick_connects:
      name: quick_connects
      id: aws.connect.quick_connects
      x-cfn-schema-name: QuickConnect
      x-cfn-type-name: AWS::Connect::QuickConnect
      x-identifiers:
        - QuickConnectArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__QuickConnect&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::QuickConnect"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::QuickConnect"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::QuickConnect"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/quick_connects/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/quick_connects/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/quick_connects/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.QuickConnectConfig') as quick_connect_config,
              JSON_EXTRACT(Properties, '$.QuickConnectArn') as quick_connect_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.QuickConnectType') as quick_connect_type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::QuickConnect'
              AND data__Identifier = '<QuickConnectArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.QuickConnectConfig') as quick_connect_config,
                JSON_EXTRACT(detail.Properties, '$.QuickConnectArn') as quick_connect_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.QuickConnectType') as quick_connect_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::QuickConnect'
                AND detail.data__TypeName = 'AWS::Connect::QuickConnect'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'QuickConnectConfig') as quick_connect_config,
                  json_extract_path_text(Properties, 'QuickConnectArn') as quick_connect_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'QuickConnectType') as quick_connect_type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::QuickConnect'
                  AND data__Identifier = '<QuickConnectArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'QuickConnectConfig') as quick_connect_config,
                    json_extract_path_text(detail.Properties, 'QuickConnectArn') as quick_connect_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'QuickConnectType') as quick_connect_type
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::QuickConnect'
                    AND detail.data__TypeName = 'AWS::Connect::QuickConnect'
                    AND listing.region = 'us-east-1'
    quick_connects_list_only:
      name: quick_connects_list_only
      id: aws.connect.quick_connects_list_only
      x-cfn-schema-name: QuickConnect
      x-cfn-type-name: AWS::Connect::QuickConnect
      x-identifiers:
        - QuickConnectArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.QuickConnectArn') as quick_connect_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::QuickConnect'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'QuickConnectArn') as quick_connect_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::QuickConnect'
                AND region = 'us-east-1'
    quick_connect_tags:
      name: quick_connect_tags
      id: aws.connect.quick_connect_tags
      x-cfn-schema-name: QuickConnect
      x-cfn-type-name: AWS::Connect::QuickConnect
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.QuickConnectConfig') as quick_connect_config,
              JSON_EXTRACT(detail.Properties, '$.QuickConnectArn') as quick_connect_arn,
              JSON_EXTRACT(detail.Properties, '$.QuickConnectType') as quick_connect_type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::QuickConnect'
              AND detail.data__TypeName = 'AWS::Connect::QuickConnect'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'QuickConnectConfig') as quick_connect_config,
                json_extract_path_text(detail.Properties, 'QuickConnectArn') as quick_connect_arn,
                json_extract_path_text(detail.Properties, 'QuickConnectType') as quick_connect_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::QuickConnect'
                AND detail.data__TypeName = 'AWS::Connect::QuickConnect'
                AND listing.region = 'us-east-1'
    routing_profiles:
      name: routing_profiles
      id: aws.connect.routing_profiles
      x-cfn-schema-name: RoutingProfile
      x-cfn-type-name: AWS::Connect::RoutingProfile
      x-identifiers:
        - RoutingProfileArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RoutingProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::RoutingProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::RoutingProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::RoutingProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/routing_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/routing_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/routing_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.MediaConcurrencies') as media_concurrencies,
              JSON_EXTRACT(Properties, '$.DefaultOutboundQueueArn') as default_outbound_queue_arn,
              JSON_EXTRACT(Properties, '$.RoutingProfileArn') as routing_profile_arn,
              JSON_EXTRACT(Properties, '$.QueueConfigs') as queue_configs,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AgentAvailabilityTimer') as agent_availability_timer
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::RoutingProfile'
              AND data__Identifier = '<RoutingProfileArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.MediaConcurrencies') as media_concurrencies,
                JSON_EXTRACT(detail.Properties, '$.DefaultOutboundQueueArn') as default_outbound_queue_arn,
                JSON_EXTRACT(detail.Properties, '$.RoutingProfileArn') as routing_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.QueueConfigs') as queue_configs,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AgentAvailabilityTimer') as agent_availability_timer
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::RoutingProfile'
                AND detail.data__TypeName = 'AWS::Connect::RoutingProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'MediaConcurrencies') as media_concurrencies,
                  json_extract_path_text(Properties, 'DefaultOutboundQueueArn') as default_outbound_queue_arn,
                  json_extract_path_text(Properties, 'RoutingProfileArn') as routing_profile_arn,
                  json_extract_path_text(Properties, 'QueueConfigs') as queue_configs,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AgentAvailabilityTimer') as agent_availability_timer
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::RoutingProfile'
                  AND data__Identifier = '<RoutingProfileArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'MediaConcurrencies') as media_concurrencies,
                    json_extract_path_text(detail.Properties, 'DefaultOutboundQueueArn') as default_outbound_queue_arn,
                    json_extract_path_text(detail.Properties, 'RoutingProfileArn') as routing_profile_arn,
                    json_extract_path_text(detail.Properties, 'QueueConfigs') as queue_configs,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AgentAvailabilityTimer') as agent_availability_timer
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::RoutingProfile'
                    AND detail.data__TypeName = 'AWS::Connect::RoutingProfile'
                    AND listing.region = 'us-east-1'
    routing_profiles_list_only:
      name: routing_profiles_list_only
      id: aws.connect.routing_profiles_list_only
      x-cfn-schema-name: RoutingProfile
      x-cfn-type-name: AWS::Connect::RoutingProfile
      x-identifiers:
        - RoutingProfileArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RoutingProfileArn') as routing_profile_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::RoutingProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RoutingProfileArn') as routing_profile_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::RoutingProfile'
                AND region = 'us-east-1'
    routing_profile_tags:
      name: routing_profile_tags
      id: aws.connect.routing_profile_tags
      x-cfn-schema-name: RoutingProfile
      x-cfn-type-name: AWS::Connect::RoutingProfile
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.MediaConcurrencies') as media_concurrencies,
              JSON_EXTRACT(detail.Properties, '$.DefaultOutboundQueueArn') as default_outbound_queue_arn,
              JSON_EXTRACT(detail.Properties, '$.RoutingProfileArn') as routing_profile_arn,
              JSON_EXTRACT(detail.Properties, '$.QueueConfigs') as queue_configs,
              JSON_EXTRACT(detail.Properties, '$.AgentAvailabilityTimer') as agent_availability_timer
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::RoutingProfile'
              AND detail.data__TypeName = 'AWS::Connect::RoutingProfile'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'MediaConcurrencies') as media_concurrencies,
                json_extract_path_text(detail.Properties, 'DefaultOutboundQueueArn') as default_outbound_queue_arn,
                json_extract_path_text(detail.Properties, 'RoutingProfileArn') as routing_profile_arn,
                json_extract_path_text(detail.Properties, 'QueueConfigs') as queue_configs,
                json_extract_path_text(detail.Properties, 'AgentAvailabilityTimer') as agent_availability_timer
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::RoutingProfile'
                AND detail.data__TypeName = 'AWS::Connect::RoutingProfile'
                AND listing.region = 'us-east-1'
    rules:
      name: rules
      id: aws.connect.rules
      x-cfn-schema-name: Rule
      x-cfn-type-name: AWS::Connect::Rule
      x-identifiers:
        - RuleArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Rule&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Rule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Rule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::Rule"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/rules/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/rules/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/rules/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleArn') as rule_arn,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TriggerEventSource') as trigger_event_source,
              JSON_EXTRACT(Properties, '$.Function') as function,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.PublishStatus') as publish_status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Rule'
              AND data__Identifier = '<RuleArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'RuleArn') as rule_arn,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'TriggerEventSource') as trigger_event_source,
                json_extract_path_text(Properties, 'Function') as function,
                json_extract_path_text(Properties, 'Actions') as actions,
                json_extract_path_text(Properties, 'PublishStatus') as publish_status,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Rule'
                AND data__Identifier = '<RuleArn>'
                AND region = 'us-east-1'
    security_keys:
      name: security_keys
      id: aws.connect.security_keys
      x-cfn-schema-name: SecurityKey
      x-cfn-type-name: AWS::Connect::SecurityKey
      x-identifiers:
        - InstanceId
        - AssociationId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SecurityKey&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::SecurityKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::SecurityKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/security_keys/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/security_keys/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Key') as key,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::SecurityKey'
              AND data__Identifier = '<InstanceId>|<AssociationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Key') as key,
                JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id,
                JSON_EXTRACT(detail.Properties, '$.AssociationId') as association_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::SecurityKey'
                AND detail.data__TypeName = 'AWS::Connect::SecurityKey'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Key') as key,
                  json_extract_path_text(Properties, 'InstanceId') as instance_id,
                  json_extract_path_text(Properties, 'AssociationId') as association_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::SecurityKey'
                  AND data__Identifier = '<InstanceId>|<AssociationId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Key') as key,
                    json_extract_path_text(detail.Properties, 'InstanceId') as instance_id,
                    json_extract_path_text(detail.Properties, 'AssociationId') as association_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::SecurityKey'
                    AND detail.data__TypeName = 'AWS::Connect::SecurityKey'
                    AND listing.region = 'us-east-1'
    security_keys_list_only:
      name: security_keys_list_only
      id: aws.connect.security_keys_list_only
      x-cfn-schema-name: SecurityKey
      x-cfn-type-name: AWS::Connect::SecurityKey
      x-identifiers:
        - InstanceId
        - AssociationId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::SecurityKey'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceId') as instance_id,
                json_extract_path_text(Properties, 'AssociationId') as association_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::SecurityKey'
                AND region = 'us-east-1'
    security_profiles:
      name: security_profiles
      id: aws.connect.security_profiles
      x-cfn-schema-name: SecurityProfile
      x-cfn-type-name: AWS::Connect::SecurityProfile
      x-identifiers:
        - SecurityProfileArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SecurityProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::SecurityProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::SecurityProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::SecurityProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/security_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/security_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/security_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AllowedAccessControlTags') as allowed_access_control_tags,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Permissions') as permissions,
              JSON_EXTRACT(Properties, '$.SecurityProfileArn') as security_profile_arn,
              JSON_EXTRACT(Properties, '$.SecurityProfileName') as security_profile_name,
              JSON_EXTRACT(Properties, '$.TagRestrictedResources') as tag_restricted_resources,
              JSON_EXTRACT(Properties, '$.HierarchyRestrictedResources') as hierarchy_restricted_resources,
              JSON_EXTRACT(Properties, '$.AllowedAccessControlHierarchyGroupId') as allowed_access_control_hierarchy_group_id,
              JSON_EXTRACT(Properties, '$.Applications') as applications,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LastModifiedRegion') as last_modified_region,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::SecurityProfile'
              AND data__Identifier = '<SecurityProfileArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AllowedAccessControlTags') as allowed_access_control_tags,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Permissions') as permissions,
                JSON_EXTRACT(detail.Properties, '$.SecurityProfileArn') as security_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.SecurityProfileName') as security_profile_name,
                JSON_EXTRACT(detail.Properties, '$.TagRestrictedResources') as tag_restricted_resources,
                JSON_EXTRACT(detail.Properties, '$.HierarchyRestrictedResources') as hierarchy_restricted_resources,
                JSON_EXTRACT(detail.Properties, '$.AllowedAccessControlHierarchyGroupId') as allowed_access_control_hierarchy_group_id,
                JSON_EXTRACT(detail.Properties, '$.Applications') as applications,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedRegion') as last_modified_region,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::SecurityProfile'
                AND detail.data__TypeName = 'AWS::Connect::SecurityProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AllowedAccessControlTags') as allowed_access_control_tags,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Permissions') as permissions,
                  json_extract_path_text(Properties, 'SecurityProfileArn') as security_profile_arn,
                  json_extract_path_text(Properties, 'SecurityProfileName') as security_profile_name,
                  json_extract_path_text(Properties, 'TagRestrictedResources') as tag_restricted_resources,
                  json_extract_path_text(Properties, 'HierarchyRestrictedResources') as hierarchy_restricted_resources,
                  json_extract_path_text(Properties, 'AllowedAccessControlHierarchyGroupId') as allowed_access_control_hierarchy_group_id,
                  json_extract_path_text(Properties, 'Applications') as applications,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'LastModifiedRegion') as last_modified_region,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::SecurityProfile'
                  AND data__Identifier = '<SecurityProfileArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AllowedAccessControlTags') as allowed_access_control_tags,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Permissions') as permissions,
                    json_extract_path_text(detail.Properties, 'SecurityProfileArn') as security_profile_arn,
                    json_extract_path_text(detail.Properties, 'SecurityProfileName') as security_profile_name,
                    json_extract_path_text(detail.Properties, 'TagRestrictedResources') as tag_restricted_resources,
                    json_extract_path_text(detail.Properties, 'HierarchyRestrictedResources') as hierarchy_restricted_resources,
                    json_extract_path_text(detail.Properties, 'AllowedAccessControlHierarchyGroupId') as allowed_access_control_hierarchy_group_id,
                    json_extract_path_text(detail.Properties, 'Applications') as applications,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'LastModifiedRegion') as last_modified_region,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::SecurityProfile'
                    AND detail.data__TypeName = 'AWS::Connect::SecurityProfile'
                    AND listing.region = 'us-east-1'
    security_profiles_list_only:
      name: security_profiles_list_only
      id: aws.connect.security_profiles_list_only
      x-cfn-schema-name: SecurityProfile
      x-cfn-type-name: AWS::Connect::SecurityProfile
      x-identifiers:
        - SecurityProfileArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SecurityProfileArn') as security_profile_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::SecurityProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SecurityProfileArn') as security_profile_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::SecurityProfile'
                AND region = 'us-east-1'
    security_profile_tags:
      name: security_profile_tags
      id: aws.connect.security_profile_tags
      x-cfn-schema-name: SecurityProfile
      x-cfn-type-name: AWS::Connect::SecurityProfile
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AllowedAccessControlTags') as allowed_access_control_tags,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Permissions') as permissions,
              JSON_EXTRACT(detail.Properties, '$.SecurityProfileArn') as security_profile_arn,
              JSON_EXTRACT(detail.Properties, '$.SecurityProfileName') as security_profile_name,
              JSON_EXTRACT(detail.Properties, '$.TagRestrictedResources') as tag_restricted_resources,
              JSON_EXTRACT(detail.Properties, '$.HierarchyRestrictedResources') as hierarchy_restricted_resources,
              JSON_EXTRACT(detail.Properties, '$.AllowedAccessControlHierarchyGroupId') as allowed_access_control_hierarchy_group_id,
              JSON_EXTRACT(detail.Properties, '$.Applications') as applications,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedRegion') as last_modified_region,
              JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::SecurityProfile'
              AND detail.data__TypeName = 'AWS::Connect::SecurityProfile'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AllowedAccessControlTags') as allowed_access_control_tags,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Permissions') as permissions,
                json_extract_path_text(detail.Properties, 'SecurityProfileArn') as security_profile_arn,
                json_extract_path_text(detail.Properties, 'SecurityProfileName') as security_profile_name,
                json_extract_path_text(detail.Properties, 'TagRestrictedResources') as tag_restricted_resources,
                json_extract_path_text(detail.Properties, 'HierarchyRestrictedResources') as hierarchy_restricted_resources,
                json_extract_path_text(detail.Properties, 'AllowedAccessControlHierarchyGroupId') as allowed_access_control_hierarchy_group_id,
                json_extract_path_text(detail.Properties, 'Applications') as applications,
                json_extract_path_text(detail.Properties, 'LastModifiedRegion') as last_modified_region,
                json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::SecurityProfile'
                AND detail.data__TypeName = 'AWS::Connect::SecurityProfile'
                AND listing.region = 'us-east-1'
    task_templates:
      name: task_templates
      id: aws.connect.task_templates
      x-cfn-schema-name: TaskTemplate
      x-cfn-type-name: AWS::Connect::TaskTemplate
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TaskTemplate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::TaskTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::TaskTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::TaskTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/task_templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/task_templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/task_templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ContactFlowArn') as contact_flow_arn,
              JSON_EXTRACT(Properties, '$.SelfAssignContactFlowArn') as self_assign_contact_flow_arn,
              JSON_EXTRACT(Properties, '$.Constraints') as constraints,
              JSON_EXTRACT(Properties, '$.Defaults') as defaults,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.ClientToken') as client_token,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::TaskTemplate'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ContactFlowArn') as contact_flow_arn,
                JSON_EXTRACT(detail.Properties, '$.SelfAssignContactFlowArn') as self_assign_contact_flow_arn,
                JSON_EXTRACT(detail.Properties, '$.Constraints') as constraints,
                JSON_EXTRACT(detail.Properties, '$.Defaults') as defaults,
                JSON_EXTRACT(detail.Properties, '$.Fields') as fields,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::TaskTemplate'
                AND detail.data__TypeName = 'AWS::Connect::TaskTemplate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ContactFlowArn') as contact_flow_arn,
                  json_extract_path_text(Properties, 'SelfAssignContactFlowArn') as self_assign_contact_flow_arn,
                  json_extract_path_text(Properties, 'Constraints') as constraints,
                  json_extract_path_text(Properties, 'Defaults') as defaults,
                  json_extract_path_text(Properties, 'Fields') as fields,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'ClientToken') as client_token,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::TaskTemplate'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ContactFlowArn') as contact_flow_arn,
                    json_extract_path_text(detail.Properties, 'SelfAssignContactFlowArn') as self_assign_contact_flow_arn,
                    json_extract_path_text(detail.Properties, 'Constraints') as constraints,
                    json_extract_path_text(detail.Properties, 'Defaults') as defaults,
                    json_extract_path_text(detail.Properties, 'Fields') as fields,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'ClientToken') as client_token,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::TaskTemplate'
                    AND detail.data__TypeName = 'AWS::Connect::TaskTemplate'
                    AND listing.region = 'us-east-1'
    task_templates_list_only:
      name: task_templates_list_only
      id: aws.connect.task_templates_list_only
      x-cfn-schema-name: TaskTemplate
      x-cfn-type-name: AWS::Connect::TaskTemplate
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::TaskTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::TaskTemplate'
                AND region = 'us-east-1'
    task_template_tags:
      name: task_template_tags
      id: aws.connect.task_template_tags
      x-cfn-schema-name: TaskTemplate
      x-cfn-type-name: AWS::Connect::TaskTemplate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ContactFlowArn') as contact_flow_arn,
              JSON_EXTRACT(detail.Properties, '$.SelfAssignContactFlowArn') as self_assign_contact_flow_arn,
              JSON_EXTRACT(detail.Properties, '$.Constraints') as constraints,
              JSON_EXTRACT(detail.Properties, '$.Defaults') as defaults,
              JSON_EXTRACT(detail.Properties, '$.Fields') as fields,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::TaskTemplate'
              AND detail.data__TypeName = 'AWS::Connect::TaskTemplate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ContactFlowArn') as contact_flow_arn,
                json_extract_path_text(detail.Properties, 'SelfAssignContactFlowArn') as self_assign_contact_flow_arn,
                json_extract_path_text(detail.Properties, 'Constraints') as constraints,
                json_extract_path_text(detail.Properties, 'Defaults') as defaults,
                json_extract_path_text(detail.Properties, 'Fields') as fields,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'ClientToken') as client_token
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::TaskTemplate'
                AND detail.data__TypeName = 'AWS::Connect::TaskTemplate'
                AND listing.region = 'us-east-1'
    traffic_distribution_groups:
      name: traffic_distribution_groups
      id: aws.connect.traffic_distribution_groups
      x-cfn-schema-name: TrafficDistributionGroup
      x-cfn-type-name: AWS::Connect::TrafficDistributionGroup
      x-identifiers:
        - TrafficDistributionGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TrafficDistributionGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::TrafficDistributionGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::TrafficDistributionGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::TrafficDistributionGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/traffic_distribution_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/traffic_distribution_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/traffic_distribution_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TrafficDistributionGroupArn') as traffic_distribution_group_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.IsDefault') as is_default
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
              AND data__Identifier = '<TrafficDistributionGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.TrafficDistributionGroupArn') as traffic_distribution_group_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.IsDefault') as is_default
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                AND detail.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'TrafficDistributionGroupArn') as traffic_distribution_group_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'IsDefault') as is_default
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                  AND data__Identifier = '<TrafficDistributionGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'TrafficDistributionGroupArn') as traffic_distribution_group_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'IsDefault') as is_default
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                    AND detail.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                    AND listing.region = 'us-east-1'
    traffic_distribution_groups_list_only:
      name: traffic_distribution_groups_list_only
      id: aws.connect.traffic_distribution_groups_list_only
      x-cfn-schema-name: TrafficDistributionGroup
      x-cfn-type-name: AWS::Connect::TrafficDistributionGroup
      x-identifiers:
        - TrafficDistributionGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TrafficDistributionGroupArn') as traffic_distribution_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TrafficDistributionGroupArn') as traffic_distribution_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                AND region = 'us-east-1'
    traffic_distribution_group_tags:
      name: traffic_distribution_group_tags
      id: aws.connect.traffic_distribution_group_tags
      x-cfn-schema-name: TrafficDistributionGroup
      x-cfn-type-name: AWS::Connect::TrafficDistributionGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.TrafficDistributionGroupArn') as traffic_distribution_group_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.IsDefault') as is_default
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
              AND detail.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'TrafficDistributionGroupArn') as traffic_distribution_group_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'IsDefault') as is_default
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                AND detail.data__TypeName = 'AWS::Connect::TrafficDistributionGroup'
                AND listing.region = 'us-east-1'
    users:
      name: users
      id: aws.connect.users
      x-cfn-schema-name: User
      x-cfn-type-name: AWS::Connect::User
      x-identifiers:
        - UserArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__User&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::User"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::User"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::User"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.DirectoryUserId') as directory_user_id,
              JSON_EXTRACT(Properties, '$.HierarchyGroupArn') as hierarchy_group_arn,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.RoutingProfileArn') as routing_profile_arn,
              JSON_EXTRACT(Properties, '$.IdentityInfo') as identity_info,
              JSON_EXTRACT(Properties, '$.PhoneConfig') as phone_config,
              JSON_EXTRACT(Properties, '$.SecurityProfileArns') as security_profile_arns,
              JSON_EXTRACT(Properties, '$.UserArn') as user_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UserProficiencies') as user_proficiencies
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::User'
              AND data__Identifier = '<UserArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.DirectoryUserId') as directory_user_id,
                JSON_EXTRACT(detail.Properties, '$.HierarchyGroupArn') as hierarchy_group_arn,
                JSON_EXTRACT(detail.Properties, '$.Username') as username,
                JSON_EXTRACT(detail.Properties, '$.Password') as password,
                JSON_EXTRACT(detail.Properties, '$.RoutingProfileArn') as routing_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityInfo') as identity_info,
                JSON_EXTRACT(detail.Properties, '$.PhoneConfig') as phone_config,
                JSON_EXTRACT(detail.Properties, '$.SecurityProfileArns') as security_profile_arns,
                JSON_EXTRACT(detail.Properties, '$.UserArn') as user_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UserProficiencies') as user_proficiencies
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::User'
                AND detail.data__TypeName = 'AWS::Connect::User'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'DirectoryUserId') as directory_user_id,
                  json_extract_path_text(Properties, 'HierarchyGroupArn') as hierarchy_group_arn,
                  json_extract_path_text(Properties, 'Username') as username,
                  json_extract_path_text(Properties, 'Password') as password,
                  json_extract_path_text(Properties, 'RoutingProfileArn') as routing_profile_arn,
                  json_extract_path_text(Properties, 'IdentityInfo') as identity_info,
                  json_extract_path_text(Properties, 'PhoneConfig') as phone_config,
                  json_extract_path_text(Properties, 'SecurityProfileArns') as security_profile_arns,
                  json_extract_path_text(Properties, 'UserArn') as user_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UserProficiencies') as user_proficiencies
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::User'
                  AND data__Identifier = '<UserArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'DirectoryUserId') as directory_user_id,
                    json_extract_path_text(detail.Properties, 'HierarchyGroupArn') as hierarchy_group_arn,
                    json_extract_path_text(detail.Properties, 'Username') as username,
                    json_extract_path_text(detail.Properties, 'Password') as password,
                    json_extract_path_text(detail.Properties, 'RoutingProfileArn') as routing_profile_arn,
                    json_extract_path_text(detail.Properties, 'IdentityInfo') as identity_info,
                    json_extract_path_text(detail.Properties, 'PhoneConfig') as phone_config,
                    json_extract_path_text(detail.Properties, 'SecurityProfileArns') as security_profile_arns,
                    json_extract_path_text(detail.Properties, 'UserArn') as user_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UserProficiencies') as user_proficiencies
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::User'
                    AND detail.data__TypeName = 'AWS::Connect::User'
                    AND listing.region = 'us-east-1'
    users_list_only:
      name: users_list_only
      id: aws.connect.users_list_only
      x-cfn-schema-name: User
      x-cfn-type-name: AWS::Connect::User
      x-identifiers:
        - UserArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserArn') as user_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::User'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserArn') as user_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::User'
                AND region = 'us-east-1'
    user_tags:
      name: user_tags
      id: aws.connect.user_tags
      x-cfn-schema-name: User
      x-cfn-type-name: AWS::Connect::User
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.DirectoryUserId') as directory_user_id,
              JSON_EXTRACT(detail.Properties, '$.HierarchyGroupArn') as hierarchy_group_arn,
              JSON_EXTRACT(detail.Properties, '$.Username') as username,
              JSON_EXTRACT(detail.Properties, '$.Password') as password,
              JSON_EXTRACT(detail.Properties, '$.RoutingProfileArn') as routing_profile_arn,
              JSON_EXTRACT(detail.Properties, '$.IdentityInfo') as identity_info,
              JSON_EXTRACT(detail.Properties, '$.PhoneConfig') as phone_config,
              JSON_EXTRACT(detail.Properties, '$.SecurityProfileArns') as security_profile_arns,
              JSON_EXTRACT(detail.Properties, '$.UserArn') as user_arn,
              JSON_EXTRACT(detail.Properties, '$.UserProficiencies') as user_proficiencies
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::User'
              AND detail.data__TypeName = 'AWS::Connect::User'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'DirectoryUserId') as directory_user_id,
                json_extract_path_text(detail.Properties, 'HierarchyGroupArn') as hierarchy_group_arn,
                json_extract_path_text(detail.Properties, 'Username') as username,
                json_extract_path_text(detail.Properties, 'Password') as password,
                json_extract_path_text(detail.Properties, 'RoutingProfileArn') as routing_profile_arn,
                json_extract_path_text(detail.Properties, 'IdentityInfo') as identity_info,
                json_extract_path_text(detail.Properties, 'PhoneConfig') as phone_config,
                json_extract_path_text(detail.Properties, 'SecurityProfileArns') as security_profile_arns,
                json_extract_path_text(detail.Properties, 'UserArn') as user_arn,
                json_extract_path_text(detail.Properties, 'UserProficiencies') as user_proficiencies
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::User'
                AND detail.data__TypeName = 'AWS::Connect::User'
                AND listing.region = 'us-east-1'
    user_hierarchy_groups:
      name: user_hierarchy_groups
      id: aws.connect.user_hierarchy_groups
      x-cfn-schema-name: UserHierarchyGroup
      x-cfn-type-name: AWS::Connect::UserHierarchyGroup
      x-identifiers:
        - UserHierarchyGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserHierarchyGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::UserHierarchyGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::UserHierarchyGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::UserHierarchyGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_hierarchy_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_hierarchy_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_hierarchy_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.UserHierarchyGroupArn') as user_hierarchy_group_arn,
              JSON_EXTRACT(Properties, '$.ParentGroupArn') as parent_group_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::UserHierarchyGroup'
              AND data__Identifier = '<UserHierarchyGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.UserHierarchyGroupArn') as user_hierarchy_group_arn,
                JSON_EXTRACT(detail.Properties, '$.ParentGroupArn') as parent_group_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                AND detail.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'UserHierarchyGroupArn') as user_hierarchy_group_arn,
                  json_extract_path_text(Properties, 'ParentGroupArn') as parent_group_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                  AND data__Identifier = '<UserHierarchyGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'UserHierarchyGroupArn') as user_hierarchy_group_arn,
                    json_extract_path_text(detail.Properties, 'ParentGroupArn') as parent_group_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                    AND detail.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                    AND listing.region = 'us-east-1'
    user_hierarchy_groups_list_only:
      name: user_hierarchy_groups_list_only
      id: aws.connect.user_hierarchy_groups_list_only
      x-cfn-schema-name: UserHierarchyGroup
      x-cfn-type-name: AWS::Connect::UserHierarchyGroup
      x-identifiers:
        - UserHierarchyGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserHierarchyGroupArn') as user_hierarchy_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::UserHierarchyGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserHierarchyGroupArn') as user_hierarchy_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                AND region = 'us-east-1'
    user_hierarchy_group_tags:
      name: user_hierarchy_group_tags
      id: aws.connect.user_hierarchy_group_tags
      x-cfn-schema-name: UserHierarchyGroup
      x-cfn-type-name: AWS::Connect::UserHierarchyGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.UserHierarchyGroupArn') as user_hierarchy_group_arn,
              JSON_EXTRACT(detail.Properties, '$.ParentGroupArn') as parent_group_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
              AND detail.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'UserHierarchyGroupArn') as user_hierarchy_group_arn,
                json_extract_path_text(detail.Properties, 'ParentGroupArn') as parent_group_arn,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                AND detail.data__TypeName = 'AWS::Connect::UserHierarchyGroup'
                AND listing.region = 'us-east-1'
    user_hierarchy_structures:
      name: user_hierarchy_structures
      id: aws.connect.user_hierarchy_structures
      x-cfn-schema-name: UserHierarchyStructure
      x-cfn-type-name: AWS::Connect::UserHierarchyStructure
      x-identifiers:
        - UserHierarchyStructureArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserHierarchyStructure&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::UserHierarchyStructure"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::UserHierarchyStructure"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::UserHierarchyStructure"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_hierarchy_structures/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_hierarchy_structures/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_hierarchy_structures/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.UserHierarchyStructureArn') as user_hierarchy_structure_arn,
              JSON_EXTRACT(Properties, '$.UserHierarchyStructure') as user_hierarchy_structure
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::UserHierarchyStructure'
              AND data__Identifier = '<UserHierarchyStructureArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'UserHierarchyStructureArn') as user_hierarchy_structure_arn,
                json_extract_path_text(Properties, 'UserHierarchyStructure') as user_hierarchy_structure
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::UserHierarchyStructure'
                AND data__Identifier = '<UserHierarchyStructureArn>'
                AND region = 'us-east-1'
    views:
      name: views
      id: aws.connect.views
      x-cfn-schema-name: View
      x-cfn-type-name: AWS::Connect::View
      x-identifiers:
        - ViewArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__View&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::View"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::View"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::View"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/views/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/views/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/views/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.ViewArn') as view_arn,
              JSON_EXTRACT(Properties, '$.ViewId') as view_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Template') as template,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.ViewContentSha256') as view_content_sha256,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::View'
              AND data__Identifier = '<ViewArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
                JSON_EXTRACT(detail.Properties, '$.ViewArn') as view_arn,
                JSON_EXTRACT(detail.Properties, '$.ViewId') as view_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Template') as template,
                JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
                JSON_EXTRACT(detail.Properties, '$.ViewContentSha256') as view_content_sha256,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::View'
                AND detail.data__TypeName = 'AWS::Connect::View'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                  json_extract_path_text(Properties, 'ViewArn') as view_arn,
                  json_extract_path_text(Properties, 'ViewId') as view_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Template') as template,
                  json_extract_path_text(Properties, 'Actions') as actions,
                  json_extract_path_text(Properties, 'ViewContentSha256') as view_content_sha256,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::View'
                  AND data__Identifier = '<ViewArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                    json_extract_path_text(detail.Properties, 'ViewArn') as view_arn,
                    json_extract_path_text(detail.Properties, 'ViewId') as view_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Template') as template,
                    json_extract_path_text(detail.Properties, 'Actions') as actions,
                    json_extract_path_text(detail.Properties, 'ViewContentSha256') as view_content_sha256,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::View'
                    AND detail.data__TypeName = 'AWS::Connect::View'
                    AND listing.region = 'us-east-1'
    views_list_only:
      name: views_list_only
      id: aws.connect.views_list_only
      x-cfn-schema-name: View
      x-cfn-type-name: AWS::Connect::View
      x-identifiers:
        - ViewArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ViewArn') as view_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::View'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ViewArn') as view_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::View'
                AND region = 'us-east-1'
    view_tags:
      name: view_tags
      id: aws.connect.view_tags
      x-cfn-schema-name: View
      x-cfn-type-name: AWS::Connect::View
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(detail.Properties, '$.ViewArn') as view_arn,
              JSON_EXTRACT(detail.Properties, '$.ViewId') as view_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Template') as template,
              JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
              JSON_EXTRACT(detail.Properties, '$.ViewContentSha256') as view_content_sha256
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Connect::View'
              AND detail.data__TypeName = 'AWS::Connect::View'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(detail.Properties, 'ViewArn') as view_arn,
                json_extract_path_text(detail.Properties, 'ViewId') as view_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Template') as template,
                json_extract_path_text(detail.Properties, 'Actions') as actions,
                json_extract_path_text(detail.Properties, 'ViewContentSha256') as view_content_sha256
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Connect::View'
                AND detail.data__TypeName = 'AWS::Connect::View'
                AND listing.region = 'us-east-1'
    view_versions:
      name: view_versions
      id: aws.connect.view_versions
      x-cfn-schema-name: ViewVersion
      x-cfn-type-name: AWS::Connect::ViewVersion
      x-identifiers:
        - ViewVersionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ViewVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ViewVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Connect::ViewVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/view_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/view_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ViewArn') as view_arn,
              JSON_EXTRACT(Properties, '$.ViewVersionArn') as view_version_arn,
              JSON_EXTRACT(Properties, '$.VersionDescription') as version_description,
              JSON_EXTRACT(Properties, '$.ViewContentSha256') as view_content_sha256,
              JSON_EXTRACT(Properties, '$.Version') as version
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ViewVersion'
              AND data__Identifier = '<ViewVersionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ViewArn') as view_arn,
                JSON_EXTRACT(detail.Properties, '$.ViewVersionArn') as view_version_arn,
                JSON_EXTRACT(detail.Properties, '$.VersionDescription') as version_description,
                JSON_EXTRACT(detail.Properties, '$.ViewContentSha256') as view_content_sha256,
                JSON_EXTRACT(detail.Properties, '$.Version') as version
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Connect::ViewVersion'
                AND detail.data__TypeName = 'AWS::Connect::ViewVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ViewArn') as view_arn,
                  json_extract_path_text(Properties, 'ViewVersionArn') as view_version_arn,
                  json_extract_path_text(Properties, 'VersionDescription') as version_description,
                  json_extract_path_text(Properties, 'ViewContentSha256') as view_content_sha256,
                  json_extract_path_text(Properties, 'Version') as version
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ViewVersion'
                  AND data__Identifier = '<ViewVersionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ViewArn') as view_arn,
                    json_extract_path_text(detail.Properties, 'ViewVersionArn') as view_version_arn,
                    json_extract_path_text(detail.Properties, 'VersionDescription') as version_description,
                    json_extract_path_text(detail.Properties, 'ViewContentSha256') as view_content_sha256,
                    json_extract_path_text(detail.Properties, 'Version') as version
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Connect::ViewVersion'
                    AND detail.data__TypeName = 'AWS::Connect::ViewVersion'
                    AND listing.region = 'us-east-1'
    view_versions_list_only:
      name: view_versions_list_only
      id: aws.connect.view_versions_list_only
      x-cfn-schema-name: ViewVersion
      x-cfn-type-name: AWS::Connect::ViewVersion
      x-identifiers:
        - ViewVersionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ViewVersionArn') as view_version_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ViewVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ViewVersionArn') as view_version_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ViewVersion'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AgentStatus&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAgentStatus
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAgentStatusRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ApprovedOrigin&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApprovedOrigin
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApprovedOriginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ContactFlow&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateContactFlow
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateContactFlowRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ContactFlowModule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateContactFlowModule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateContactFlowModuleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EmailAddress&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEmailAddress
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEmailAddressRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EvaluationForm&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEvaluationForm
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEvaluationFormRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__HoursOfOperation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateHoursOfOperation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateHoursOfOperationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Instance&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInstance
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInstanceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InstanceStorageConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInstanceStorageConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInstanceStorageConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IntegrationAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIntegrationAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIntegrationAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PredefinedAttribute&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePredefinedAttribute
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePredefinedAttributeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Prompt&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePrompt
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePromptRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Queue&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateQueue
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateQueueRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__QuickConnect&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateQuickConnect
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateQuickConnectRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RoutingProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRoutingProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRoutingProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Rule&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRule
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRuleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SecurityKey&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSecurityKey
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSecurityKeyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SecurityProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSecurityProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSecurityProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TaskTemplate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTaskTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTaskTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TrafficDistributionGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTrafficDistributionGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTrafficDistributionGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__User&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUser
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserHierarchyGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserHierarchyGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserHierarchyGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserHierarchyStructure&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserHierarchyStructure
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserHierarchyStructureRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__View&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateView
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateViewRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ViewVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateViewVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateViewVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
