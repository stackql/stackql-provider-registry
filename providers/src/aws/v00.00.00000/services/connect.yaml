openapi: 3.0.0
info:
  title: Connect
  version: 1.0.0
paths: {}
components:
  schemas:
    Origin:
      description: Domain name to be added to the allowlist of instance
      type: string
      maxLength: 267
    InstanceId:
      description: Amazon Connect instance identifier
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
      minLength: 1
      maxLength: 100
    ApprovedOrigin:
      type: object
      properties:
        Origin:
          $ref: '#/components/schemas/Origin'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
      required:
        - Origin
        - InstanceId
      x-stackql-resource-name: approved_origin
      x-stackql-primaryIdentifier:
        - InstanceId
        - Origin
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is maximum of 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          maxLength: 256
      required:
        - Key
        - Value
    ContactFlow:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 256
        ContactFlowArn:
          description: The identifier of the contact flow (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 500
        Name:
          description: The name of the contact flow.
          type: string
          minLength: 1
          maxLength: 127
        Content:
          description: The content of the contact flow in JSON format.
          type: string
          minLength: 1
          maxLength: 256000
        Description:
          description: The description of the contact flow.
          type: string
          maxLength: 500
        State:
          type: string
          description: The state of the contact flow.
          enum:
            - ACTIVE
            - ARCHIVED
        Type:
          description: The type of the contact flow.
          type: string
          enum:
            - CONTACT_FLOW
            - CUSTOMER_QUEUE
            - CUSTOMER_HOLD
            - CUSTOMER_WHISPER
            - AGENT_HOLD
            - AGENT_WHISPER
            - OUTBOUND_WHISPER
            - AGENT_TRANSFER
            - QUEUE_TRANSFER
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Content
        - Name
        - Type
      x-stackql-resource-name: contact_flow
      x-stackql-primaryIdentifier:
        - ContactFlowArn
    ContactFlowModule:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 256
        ContactFlowModuleArn:
          description: The identifier of the contact flow module (ARN).
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/flow-module/[-a-zA-Z0-9]*$
          minLength: 1
          maxLength: 256
        Name:
          description: The name of the contact flow module.
          type: string
          minLength: 1
          maxLength: 127
          pattern: .*\S.*
        Content:
          description: The content of the contact flow module in JSON format.
          type: string
          minLength: 1
          maxLength: 256000
        Description:
          description: The description of the contact flow module.
          type: string
          maxLength: 500
          pattern: .*\S.*
        State:
          type: string
          description: The state of the contact flow module.
          enum:
            - ACTIVE
            - ARCHIVED
        Status:
          type: string
          description: The status of the contact flow module.
          enum:
            - PUBLISHED
            - SAVED
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Name
        - Content
      x-stackql-resource-name: contact_flow_module
      x-stackql-primaryIdentifier:
        - ContactFlowModuleArn
    HoursOfOperationTimeSlice:
      description: The start time or end time for an hours of operation.
      type: object
      additionalProperties: false
      properties:
        Hours:
          type: integer
          description: The hours.
          minimum: 0
          maximum: 23
        Minutes:
          type: integer
          description: The minutes.
          minimum: 0
          maximum: 59
      required:
        - Hours
        - Minutes
    HoursOfOperationConfig:
      description: Contains information about the hours of operation.
      type: object
      additionalProperties: false
      properties:
        Day:
          type: string
          description: The day that the hours of operation applies to.
          enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
        StartTime:
          description: The start time that your contact center opens.
          $ref: '#/components/schemas/HoursOfOperationTimeSlice'
        EndTime:
          description: The end time that your contact center closes.
          $ref: '#/components/schemas/HoursOfOperationTimeSlice'
      required:
        - Day
        - StartTime
        - EndTime
    HoursOfOperation:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the hours of operation.
          type: string
          minLength: 1
          maxLength: 127
        Description:
          description: The description of the hours of operation.
          type: string
          minLength: 1
          maxLength: 250
        TimeZone:
          description: The time zone of the hours of operation.
          type: string
        Config:
          description: 'Configuration information for the hours of operation: day, start time, and end time.'
          type: array
          maxItems: 100
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/HoursOfOperationConfig'
        HoursOfOperationArn:
          description: The Amazon Resource Name (ARN) for the hours of operation.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/operating-hours/[-a-zA-Z0-9]*$
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - Name
        - TimeZone
        - Config
      x-stackql-resource-name: hours_of_operation
      x-stackql-primaryIdentifier:
        - HoursOfOperationArn
    InboundCalls:
      description: Mandatory element which enables inbound calls on new instance.
      type: boolean
    OutboundCalls:
      description: Mandatory element which enables outbound calls on new instance.
      type: boolean
    ContactflowLogs:
      description: Boolean flag which enables CONTACTFLOW_LOGS on an instance.
      type: boolean
    ContactLens:
      description: Boolean flag which enables CONTACT_LENS on an instance.
      type: boolean
    AutoResolveBestVoices:
      description: Boolean flag which enables AUTO_RESOLVE_BEST_VOICES on an instance.
      type: boolean
    UseCustomTTSVoices:
      description: Boolean flag which enables USE_CUSTOM_TTS_VOICES on an instance.
      type: boolean
    EarlyMedia:
      description: Boolean flag which enables EARLY_MEDIA on an instance.
      type: boolean
    Attributes:
      type: object
      additionalProperties: false
      properties:
        InboundCalls:
          $ref: '#/components/schemas/InboundCalls'
        OutboundCalls:
          $ref: '#/components/schemas/OutboundCalls'
        ContactflowLogs:
          $ref: '#/components/schemas/ContactflowLogs'
        ContactLens:
          $ref: '#/components/schemas/ContactLens'
        AutoResolveBestVoices:
          $ref: '#/components/schemas/AutoResolveBestVoices'
        UseCustomTTSVoices:
          $ref: '#/components/schemas/UseCustomTTSVoices'
        EarlyMedia:
          $ref: '#/components/schemas/EarlyMedia'
      required:
        - InboundCalls
        - OutboundCalls
    Instance:
      type: object
      properties:
        Id:
          description: An instanceId is automatically generated on creation and assigned as the unique identifier.
          type: string
        Arn:
          description: An instanceArn is automatically generated on creation based on instanceId.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        IdentityManagementType:
          description: Specifies the type of directory integration for new instance.
          type: string
          enum:
            - SAML
            - CONNECT_MANAGED
            - EXISTING_DIRECTORY
        InstanceAlias:
          description: Alias of the new directory created as part of new instance creation.
          type: string
          pattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$
          minLength: 1
          maxLength: 62
        CreatedTime:
          description: Timestamp of instance creation logged as part of instance creation.
          type: string
          format: date-time
        ServiceRole:
          description: Service linked role created as part of instance creation.
          type: string
        InstanceStatus:
          description: Specifies the creation status of new instance.
          type: string
          enum:
            - CREATION_IN_PROGRESS
            - CREATION_FAILED
            - ACTIVE
        DirectoryId:
          description: Existing directoryId user wants to map to the new Connect instance.
          type: string
          pattern: ^d-[0-9a-f]{10}$
          minLength: 12
          maxLength: 12
        Attributes:
          description: The attributes for the instance.
          $ref: '#/components/schemas/Attributes'
      required:
        - IdentityManagementType
        - Attributes
      x-stackql-resource-name: instance
      x-stackql-primaryIdentifier:
        - Arn
    KinesisStreamArn:
      description: An ARN is a unique AWS resource identifier.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:kinesis:[-a-z0-9]*:[0-9]{12}:stream/[-a-zA-Z0-9_.]*$
    FirehoseDeliveryStreamArn:
      description: An ARN is a unique AWS resource identifier.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:firehose:[-a-z0-9]*:[0-9]{12}:deliverystream/[-a-zA-Z0-9_.]*$
    AssociationId:
      description: An associationID is automatically generated when a storage config is associated with an instance
      type: string
      pattern: ^[-a-z0-9]*$
      minLength: 1
      maxLength: 100
    InstanceStorageResourceType:
      description: Specifies the type of storage resource available for the instance
      type: string
      enum:
        - CHAT_TRANSCRIPTS
        - CALL_RECORDINGS
        - SCHEDULED_REPORTS
        - MEDIA_STREAMS
        - CONTACT_TRACE_RECORDS
        - AGENT_EVENTS
    StorageType:
      description: Specifies the storage type to be associated with the instance
      type: string
      enum:
        - S3
        - KINESIS_VIDEO_STREAM
        - KINESIS_STREAM
        - KINESIS_FIREHOSE
    BucketName:
      description: A name for the S3 Bucket
      type: string
      minLength: 1
      maxLength: 128
    Hours:
      description: Number of hours
      type: number
    Prefix:
      description: Prefixes are used to infer logical hierarchy
      type: string
      minLength: 1
      maxLength: 128
    EncryptionType:
      description: Specifies default encryption using AWS KMS-Managed Keys
      type: string
      enum:
        - KMS
    KeyId:
      description: Specifies the encryption key id
      type: string
      minLength: 1
      maxLength: 128
    EncryptionConfig:
      type: object
      additionalProperties: false
      properties:
        EncryptionType:
          $ref: '#/components/schemas/EncryptionType'
        KeyId:
          $ref: '#/components/schemas/KeyId'
      required:
        - EncryptionType
        - KeyId
    S3Config:
      type: object
      additionalProperties: false
      properties:
        BucketName:
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          $ref: '#/components/schemas/Prefix'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
        - BucketName
        - BucketPrefix
    KinesisVideoStreamConfig:
      type: object
      additionalProperties: false
      properties:
        Prefix:
          $ref: '#/components/schemas/Prefix'
        RetentionPeriodHours:
          $ref: '#/components/schemas/Hours'
        EncryptionConfig:
          $ref: '#/components/schemas/EncryptionConfig'
      required:
        - Prefix
        - RetentionPeriodHours
    KinesisStreamConfig:
      type: object
      additionalProperties: false
      properties:
        StreamArn:
          $ref: '#/components/schemas/KinesisStreamArn'
      required:
        - StreamArn
    KinesisFirehoseConfig:
      type: object
      additionalProperties: false
      properties:
        FirehoseArn:
          $ref: '#/components/schemas/FirehoseDeliveryStreamArn'
      required:
        - FirehoseArn
    InstanceStorageConfig:
      type: object
      properties:
        InstanceArn:
          description: Connect Instance ID with which the storage config will be associated
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        ResourceType:
          $ref: '#/components/schemas/InstanceStorageResourceType'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
        StorageType:
          $ref: '#/components/schemas/StorageType'
        S3Config:
          $ref: '#/components/schemas/S3Config'
        KinesisVideoStreamConfig:
          $ref: '#/components/schemas/KinesisVideoStreamConfig'
        KinesisStreamConfig:
          $ref: '#/components/schemas/KinesisStreamConfig'
        KinesisFirehoseConfig:
          $ref: '#/components/schemas/KinesisFirehoseConfig'
      required:
        - InstanceArn
        - ResourceType
        - StorageType
      x-stackql-resource-name: instance_storage_config
      x-stackql-primaryIdentifier:
        - InstanceArn
        - AssociationId
        - ResourceType
    IntegrationArn:
      description: ARN of Integration being associated with the instance
      type: string
      minLength: 1
      maxLength: 140
    IntegrationType:
      description: Specifies the integration type to be associated with the instance
      type: string
      enum:
        - LEX_BOT
        - LAMBDA_FUNCTION
    IntegrationAssociationId:
      description: Identifier of the association with Connect Instance
      type: string
      pattern: ^[a-zA-Z]{1}(?:-?[a-zA-Z0-9])*$
    IntegrationAssociation:
      type: object
      properties:
        IntegrationAssociationId:
          $ref: '#/components/schemas/IntegrationAssociationId'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        IntegrationArn:
          $ref: '#/components/schemas/IntegrationArn'
        IntegrationType:
          $ref: '#/components/schemas/IntegrationType'
      required:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      x-stackql-resource-name: integration_association
      x-stackql-primaryIdentifier:
        - InstanceId
        - IntegrationType
        - IntegrationArn
    PhoneNumber:
      description: The phone number in E.164 format.
      type: string
      pattern: ^\+[1-9]\d{1,14}$
    QuickConnectType:
      description: 'The type of quick connect. In the Amazon Connect console, when you create a quick connect, you are prompted to assign one of the following types: Agent (USER), External (PHONE_NUMBER), or Queue (QUEUE).'
      type: string
      enum:
        - PHONE_NUMBER
        - QUEUE
        - USER
    ContactFlowArn:
      description: The identifier of the contact flow.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
    QueueArn:
      description: The identifier for the queue.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/queue/[-a-zA-Z0-9]*$
    UserArn:
      description: The Amazon Resource Name (ARN) of the user.
      type: string
      pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent/[-a-zA-Z0-9]*$
    PhoneNumberQuickConnectConfig:
      description: The phone configuration. This is required only if QuickConnectType is PHONE_NUMBER.
      type: object
      additionalProperties: false
      properties:
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
      required:
        - PhoneNumber
    QueueQuickConnectConfig:
      description: The queue configuration. This is required only if QuickConnectType is QUEUE.
      type: object
      additionalProperties: false
      properties:
        ContactFlowArn:
          $ref: '#/components/schemas/ContactFlowArn'
        QueueArn:
          $ref: '#/components/schemas/QueueArn'
      required:
        - ContactFlowArn
        - QueueArn
    UserQuickConnectConfig:
      description: The user configuration. This is required only if QuickConnectType is USER.
      type: object
      additionalProperties: false
      properties:
        ContactFlowArn:
          $ref: '#/components/schemas/ContactFlowArn'
        UserArn:
          $ref: '#/components/schemas/UserArn'
      required:
        - ContactFlowArn
        - UserArn
    QuickConnectConfig:
      description: Configuration settings for the quick connect.
      type: object
      additionalProperties: false
      properties:
        QuickConnectType:
          $ref: '#/components/schemas/QuickConnectType'
        PhoneConfig:
          $ref: '#/components/schemas/PhoneNumberQuickConnectConfig'
        QueueConfig:
          $ref: '#/components/schemas/QueueQuickConnectConfig'
        UserConfig:
          $ref: '#/components/schemas/UserQuickConnectConfig'
      required:
        - QuickConnectType
    QuickConnect:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the quick connect.
          type: string
          minLength: 1
          maxLength: 127
        Description:
          description: The description of the quick connect.
          type: string
          minLength: 1
          maxLength: 250
        QuickConnectConfig:
          description: Configuration settings for the quick connect.
          $ref: '#/components/schemas/QuickConnectConfig'
        QuickConnectArn:
          description: The Amazon Resource Name (ARN) for the quick connect.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/transfer-destination/[-a-zA-Z0-9]*$
        Tags:
          type: array
          maxItems: 200
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - InstanceArn
        - QuickConnectConfig
      x-stackql-resource-name: quick_connect
      x-stackql-primaryIdentifier:
        - QuickConnectArn
    NotificationRecipientType:
      description: The type of notification recipient.
      type: object
      properties:
        UserTags:
          description: The collection of recipients who are identified by user tags
          x-patternProperties:
            ^(?=.{1,128}$).+$:
              type: string
          additionalProperties: false
        UserArns:
          description: The list of recipients by user arns.
          type: array
          minItems: 1
          maxItems: 5
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/UserArn'
      additionalProperties: false
    Reference:
      description: A contact reference.
      type: object
      properties:
        Value:
          type: string
          pattern: ^(/|https:)
        Type:
          type: string
          enum:
            - URL
            - ATTACHMENT
            - NUMBER
            - STRING
            - DATE
            - EMAIL
      required:
        - Value
        - Type
      additionalProperties: false
    TaskAction:
      description: The definition of task action.
      type: object
      properties:
        Name:
          description: The name which appears in the agent's Contact Control Panel (CCP).
          type: string
          minLength: 1
          maxLength: 512
        Description:
          description: The description which appears in the agent's Contact Control Panel (CCP).
          type: string
          minLength: 0
          maxLength: 4096
        ContactFlowArn:
          description: The Amazon Resource Name (ARN) of the contact flow.
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
        References:
          description: A formatted URL that is shown to an agent in the Contact Control Panel (CCP).
          x-patternProperties:
            ^(?=.{1,4096}$).+$:
              $ref: '#/components/schemas/Reference'
          additionalProperties: false
      required:
        - Name
        - ContactFlowArn
      additionalProperties: false
    EventBridgeAction:
      description: The definition for event bridge action.
      type: object
      properties:
        Name:
          description: The name of the event bridge action.
          type: string
          pattern: ^[a-zA-Z0-9._-]{1,100}$
      required:
        - Name
      additionalProperties: false
    AssignContactCategoryAction:
      description: The definition for assigning contact category action.
      type: object
    SendNotificationAction:
      description: The definition for sending notification action.
      type: object
      properties:
        DeliveryMethod:
          description: The means of delivery.
          type: string
          enum:
            - EMAIL
        Subject:
          description: The subject of notification.
          type: string
          minLength: 1
          maxLength: 200
        Content:
          description: The content of notification.
          type: string
          minLength: 1
          maxLength: 1024
        ContentType:
          description: The type of content.
          type: string
          enum:
            - PLAIN_TEXT
        Recipient:
          $ref: '#/components/schemas/NotificationRecipientType'
      required:
        - DeliveryMethod
        - Content
        - Recipient
        - ContentType
      additionalProperties: false
    AssignContactCategoryActions:
      description: This action will assign contact category when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/AssignContactCategoryAction'
      minItems: 1
      maxItems: 1
    EventBridgeActions:
      description: This action will send event bridge notification when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/EventBridgeAction'
      minItems: 1
      maxItems: 1
    RuleTriggerEventSource:
      description: The event source that will trigger the rule.
      type: object
      properties:
        EventSourceName:
          description: The name of event source.
          type: string
          enum:
            - OnPostCallAnalysisAvailable
            - OnRealTimeCallAnalysisAvailable
            - OnPostChatAnalysisAvailable
            - OnZendeskTicketCreate
            - OnZendeskTicketStatusUpdate
            - OnSalesforceCaseCreate
        IntegrationAssociationArn:
          description: The Amazon Resource Name (ARN) for the AppIntegration association.
          type: string
          pattern: ^$|arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/integration-association/[-a-zA-Z0-9]*$
      required:
        - EventSourceName
      additionalProperties: false
    TaskActions:
      description: This action will generate a task when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/TaskAction'
      minItems: 1
      maxItems: 1
    SendNotificationActions:
      description: The action will send notification when a rule is triggered.
      type: array
      x-insertionOrder: false
      uniqueItems: true
      items:
        $ref: '#/components/schemas/SendNotificationAction'
      minItems: 1
      maxItems: 1
    Actions:
      description: The list of actions that will be executed when a rule is triggered.
      type: object
      properties:
        AssignContactCategoryActions:
          $ref: '#/components/schemas/AssignContactCategoryActions'
        EventBridgeActions:
          $ref: '#/components/schemas/EventBridgeActions'
        TaskActions:
          $ref: '#/components/schemas/TaskActions'
        SendNotificationActions:
          $ref: '#/components/schemas/SendNotificationActions'
      additionalProperties: false
    Rule:
      type: object
      properties:
        Name:
          description: The name of the rule.
          type: string
          pattern: ^[a-zA-Z0-9._-]{1,200}$
        RuleArn:
          description: The Amazon Resource Name (ARN) of the rule.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/rule/[-a-zA-Z0-9]*$
        InstanceArn:
          description: The Amazon Resource Name (ARN) of the instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        TriggerEventSource:
          description: The event source that triggers the rule.
          $ref: '#/components/schemas/RuleTriggerEventSource'
        Function:
          description: The conditions of a rule.
          type: string
        Actions:
          description: The list of actions that will be executed when a rule is triggered.
          $ref: '#/components/schemas/Actions'
        PublishStatus:
          description: The publish status of a rule, either draft or published.
          type: string
          enum:
            - DRAFT
            - PUBLISHED
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - InstanceArn
        - TriggerEventSource
        - Function
        - Actions
        - PublishStatus
      x-stackql-resource-name: rule
      x-stackql-primaryIdentifier:
        - RuleArn
    Key:
      description: A valid security key in PEM format.
      type: string
      minLength: 1
      maxLength: 1024
    SecurityKey:
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/Key'
        InstanceId:
          $ref: '#/components/schemas/InstanceId'
        AssociationId:
          $ref: '#/components/schemas/AssociationId'
      required:
        - Key
        - InstanceId
      x-stackql-resource-name: security_key
      x-stackql-primaryIdentifier:
        - InstanceId
        - AssociationId
    Status:
      description: The status of the task template
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    FieldType:
      description: The type of the task template's field
      type: string
      enum:
        - NAME
        - DESCRIPTION
        - SCHEDULED_TIME
        - QUICK_CONNECT
        - URL
        - NUMBER
        - TEXT
        - TEXT_AREA
        - DATE_TIME
        - BOOLEAN
        - SINGLE_SELECT
        - EMAIL
    FieldIdentifier:
      description: the identifier (name) for the task template field
      type: object
      properties:
        Name:
          description: The name of the task template field
          type: string
          minLength: 1
          maxLength: 100
      additionalProperties: false
      required:
        - Name
    FieldOption:
      description: Single select field identifier
      type: string
      pattern: ^[A-Za-z0-9](?:[A-Za-z0-9_.,\s-]*[A-Za-z0-9_.,-])?$
      minLength: 1
      maxLength: 100
    Field:
      description: A task template field object.
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
        Description:
          description: The description of the task template's field
          type: string
          minLength: 0
          maxLength: 255
        Type:
          $ref: '#/components/schemas/FieldType'
        SingleSelectOptions:
          description: list of field options to be used with single select
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/FieldOption'
      additionalProperties: false
      required:
        - Id
        - Type
    InvisibleFieldInfo:
      description: Invisible field info
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
      additionalProperties: false
      required:
        - Id
    InvisibleTaskTemplateFields:
      description: The list of the task template's invisible fields
      type: array
      maxItems: 50
      items:
        $ref: '#/components/schemas/InvisibleFieldInfo'
    ReadOnlyFieldInfo:
      description: ReadOnly field info
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
      additionalProperties: false
      required:
        - Id
    ReadOnlyTaskTemplateFields:
      description: The list of the task template's read only fields
      type: array
      maxItems: 50
      items:
        $ref: '#/components/schemas/ReadOnlyFieldInfo'
    RequiredFieldInfo:
      description: Required field info
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
      additionalProperties: false
      required:
        - Id
    RequiredTaskTemplateFields:
      description: The list of the task template's required fields
      type: array
      maxItems: 50
      items:
        $ref: '#/components/schemas/RequiredFieldInfo'
    FieldValue:
      description: the default value for the task template's field
      type: string
      minLength: 1
      maxLength: 4096
    DefaultFieldValue:
      description: the default value for the task template's field
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/FieldIdentifier'
        DefaultValue:
          $ref: '#/components/schemas/FieldValue'
      additionalProperties: false
      required:
        - Id
        - DefaultValue
    ClientToken:
      description: the client token string in uuid format
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$
    TaskTemplate:
      type: object
      properties:
        Arn:
          description: The identifier (arn) of the task template.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/task-template/[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$
        InstanceArn:
          description: The identifier (arn) of the instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        Name:
          description: The name of the task template.
          type: string
          minLength: 1
          maxLength: 100
        Description:
          description: The description of the task template.
          type: string
          minLength: 0
          maxLength: 255
        ContactFlowArn:
          description: The identifier of the contact flow.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/contact-flow/[-a-zA-Z0-9]*$
        Constraints:
          description: The constraints for the task template
          type: object
          additionalProperties: false
          properties:
            InvisibleFields:
              $ref: '#/components/schemas/InvisibleTaskTemplateFields'
            RequiredFields:
              $ref: '#/components/schemas/RequiredTaskTemplateFields'
            ReadOnlyFields:
              $ref: '#/components/schemas/ReadOnlyTaskTemplateFields'
        Defaults:
          description: ''
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/DefaultFieldValue'
        Fields:
          description: The list of task template's fields
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Field'
        Status:
          $ref: '#/components/schemas/Status'
        ClientToken:
          $ref: '#/components/schemas/ClientToken'
        Tags:
          description: One or more tags.
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
      x-stackql-resource-name: task_template
      x-stackql-primaryIdentifier:
        - Arn
    FirstName:
      description: The first name. This is required if you are using Amazon Connect or SAML for identity management.
      type: string
    LastName:
      description: The last name. This is required if you are using Amazon Connect or SAML for identity management.
      type: string
    Email:
      description: The email address. If you are using SAML for identity management and include this parameter, an error is returned.
      type: string
    SecondaryEmail:
      description: The secondary email address. If you provide a secondary email, the user receives email notifications -- other than password reset notifications -- to this email address instead of to their primary email address.
      type: string
      pattern: (?=^.{0,265}$)[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,63}
    Mobile:
      description: The mobile phone number.
      type: string
      pattern: ^\+[1-9]\d{1,14}$
    SecurityProfileArn:
      description: The identifier of the security profile for the user.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/security-profile/[-a-zA-Z0-9]*$
    AfterContactWorkTimeLimit:
      description: The After Call Work (ACW) timeout setting, in seconds.
      type: integer
      minimum: 0
    AutoAccept:
      description: The Auto accept setting.
      type: boolean
    DeskPhoneNumber:
      description: The phone number for the user's desk phone.
      type: string
    PhoneType:
      description: The phone type.
      type: string
      enum:
        - SOFT_PHONE
        - DESK_PHONE
    UserIdentityInfo:
      description: Contains information about the identity of a user.
      type: object
      additionalProperties: false
      properties:
        FirstName:
          $ref: '#/components/schemas/FirstName'
        LastName:
          $ref: '#/components/schemas/LastName'
        Email:
          $ref: '#/components/schemas/Email'
        SecondaryEmail:
          $ref: '#/components/schemas/SecondaryEmail'
        Mobile:
          $ref: '#/components/schemas/Mobile'
    UserPhoneConfig:
      description: Contains information about the phone configuration settings for a user.
      type: object
      additionalProperties: false
      properties:
        AfterContactWorkTimeLimit:
          $ref: '#/components/schemas/AfterContactWorkTimeLimit'
        AutoAccept:
          $ref: '#/components/schemas/AutoAccept'
        DeskPhoneNumber:
          $ref: '#/components/schemas/DeskPhoneNumber'
        PhoneType:
          $ref: '#/components/schemas/PhoneType'
      required:
        - PhoneType
    User:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        DirectoryUserId:
          description: The identifier of the user account in the directory used for identity management.
          type: string
        HierarchyGroupArn:
          description: The identifier of the hierarchy group for the user.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group/[-a-zA-Z0-9]*$
        Username:
          description: The user name for the account.
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[a-zA-Z0-9\_\-\.\@]+'
        Password:
          description: The password for the user account. A password is required if you are using Amazon Connect for identity management. Otherwise, it is an error to include a password.
          type: string
          pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d\S]{8,64}$
        RoutingProfileArn:
          description: The identifier of the routing profile for the user.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/routing-profile/[-a-zA-Z0-9]*$
        IdentityInfo:
          description: The information about the identity of the user.
          $ref: '#/components/schemas/UserIdentityInfo'
        PhoneConfig:
          description: The phone settings for the user.
          $ref: '#/components/schemas/UserPhoneConfig'
        SecurityProfileArns:
          type: array
          minItems: 1
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
          description: One or more security profile arns for the user
          items:
            $ref: '#/components/schemas/SecurityProfileArn'
        UserArn:
          description: The Amazon Resource Name (ARN) for the user.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent/[-a-zA-Z0-9]*$
        Tags:
          type: array
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          description: One or more tags.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - InstanceArn
        - PhoneConfig
        - RoutingProfileArn
        - SecurityProfileArns
        - Username
      x-stackql-resource-name: user
      x-stackql-primaryIdentifier:
        - UserArn
    UserHierarchyGroupArn:
      description: The Amazon Resource Name (ARN) for the user hierarchy group.
      type: string
      pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*/agent-group/[-a-zA-Z0-9]*$
    UserHierarchyGroup:
      type: object
      properties:
        InstanceArn:
          description: The identifier of the Amazon Connect instance.
          type: string
          pattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$
        UserHierarchyGroupArn:
          description: The Amazon Resource Name (ARN) for the user hierarchy group.
          $ref: '#/components/schemas/UserHierarchyGroupArn'
        ParentGroupArn:
          description: The Amazon Resource Name (ARN) for the parent user hierarchy group.
          $ref: '#/components/schemas/UserHierarchyGroupArn'
        Name:
          description: The name of the user hierarchy group.
          type: string
          minLength: 1
          maxLength: 100
      required:
        - Name
        - InstanceArn
      x-stackql-resource-name: user_hierarchy_group
      x-stackql-primaryIdentifier:
        - UserHierarchyGroupArn
  x-stackQL-resources:
    approved_origins:
      name: approved_origins
      id: aws.connect.approved_origins
      x-cfn-schema-name: ApprovedOrigin
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.Origin') as origin
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ApprovedOrigin'
    approved_origin:
      name: approved_origin
      id: aws.connect.approved_origin
      x-cfn-schema-name: ApprovedOrigin
      x-type: get
      x-identifiers:
        - InstanceId
        - Origin
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ApprovedOrigin'
    contact_flows:
      name: contact_flows
      id: aws.connect.contact_flows
      x-cfn-schema-name: ContactFlow
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactFlowArn') as contact_flow_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ContactFlow'
    contact_flow:
      name: contact_flow
      id: aws.connect.contact_flow
      x-cfn-schema-name: ContactFlow
      x-type: get
      x-identifiers:
        - ContactFlowArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.ContactFlowArn') as contact_flow_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ContactFlow'
    contact_flow_modules:
      name: contact_flow_modules
      id: aws.connect.contact_flow_modules
      x-cfn-schema-name: ContactFlowModule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContactFlowModuleArn') as contact_flow_module_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::ContactFlowModule'
    contact_flow_module:
      name: contact_flow_module
      id: aws.connect.contact_flow_module
      x-cfn-schema-name: ContactFlowModule
      x-type: get
      x-identifiers:
        - ContactFlowModuleArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.ContactFlowModuleArn') as contact_flow_module_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::ContactFlowModule'
    hours_of_operations:
      name: hours_of_operations
      id: aws.connect.hours_of_operations
      x-cfn-schema-name: HoursOfOperation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.HoursOfOperationArn') as hours_of_operation_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::HoursOfOperation'
    hours_of_operation:
      name: hours_of_operation
      id: aws.connect.hours_of_operation
      x-cfn-schema-name: HoursOfOperation
      x-type: get
      x-identifiers:
        - HoursOfOperationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TimeZone') as time_zone,
              JSON_EXTRACT(Properties, '$.Config') as config,
              JSON_EXTRACT(Properties, '$.HoursOfOperationArn') as hours_of_operation_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::HoursOfOperation'
    instances:
      name: instances
      id: aws.connect.instances
      x-cfn-schema-name: Instance
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Instance'
    instance:
      name: instance
      id: aws.connect.instance
      x-cfn-schema-name: Instance
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.IdentityManagementType') as identity_management_type,
              JSON_EXTRACT(Properties, '$.InstanceAlias') as instance_alias,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(Properties, '$.InstanceStatus') as instance_status,
              JSON_EXTRACT(Properties, '$.DirectoryId') as directory_id,
              JSON_EXTRACT(Properties, '$.Attributes.InboundCalls') as attributes_inbound_calls,
              JSON_EXTRACT(Properties, '$.Attributes.OutboundCalls') as attributes_outbound_calls,
              JSON_EXTRACT(Properties, '$.Attributes.ContactflowLogs') as attributes_contactflow_logs,
              JSON_EXTRACT(Properties, '$.Attributes.ContactLens') as attributes_contact_lens,
              JSON_EXTRACT(Properties, '$.Attributes.AutoResolveBestVoices') as attributes_auto_resolve_best_voices,
              JSON_EXTRACT(Properties, '$.Attributes.UseCustomTTSVoices') as attributes_use_custom_tt_svoices,
              JSON_EXTRACT(Properties, '$.Attributes.EarlyMedia') as attributes_early_media
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Instance'
    instance_storage_configs:
      name: instance_storage_configs
      id: aws.connect.instance_storage_configs
      x-cfn-schema-name: InstanceStorageConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::InstanceStorageConfig'
    instance_storage_config:
      name: instance_storage_config
      id: aws.connect.instance_storage_config
      x-cfn-schema-name: InstanceStorageConfig
      x-type: get
      x-identifiers:
        - InstanceArn
        - AssociationId
        - ResourceType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.S3Config.BucketName') as s3_config_bucket_name,
              JSON_EXTRACT(Properties, '$.S3Config.BucketPrefix') as s3_config_bucket_prefix,
              JSON_EXTRACT(Properties, '$.S3Config.EncryptionConfig') as s3_config_encryption_config,
              JSON_EXTRACT(Properties, '$.KinesisVideoStreamConfig.Prefix') as kinesis_video_stream_config_prefix,
              JSON_EXTRACT(Properties, '$.KinesisVideoStreamConfig.RetentionPeriodHours') as kinesis_video_stream_config_retention_period_hours,
              JSON_EXTRACT(Properties, '$.KinesisVideoStreamConfig.EncryptionConfig') as kinesis_video_stream_config_encryption_config,
              JSON_EXTRACT(Properties, '$.KinesisStreamConfig.StreamArn') as kinesis_stream_config_stream_arn,
              JSON_EXTRACT(Properties, '$.KinesisFirehoseConfig.FirehoseArn') as kinesis_firehose_config_firehose_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::InstanceStorageConfig'
    integration_associations:
      name: integration_associations
      id: aws.connect.integration_associations
      x-cfn-schema-name: IntegrationAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.IntegrationType') as integration_type,
              JSON_EXTRACT(Properties, '$.IntegrationArn') as integration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::IntegrationAssociation'
    integration_association:
      name: integration_association
      id: aws.connect.integration_association
      x-cfn-schema-name: IntegrationAssociation
      x-type: get
      x-identifiers:
        - InstanceId
        - IntegrationType
        - IntegrationArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::IntegrationAssociation'
    quick_connects:
      name: quick_connects
      id: aws.connect.quick_connects
      x-cfn-schema-name: QuickConnect
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.QuickConnectArn') as quick_connect_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::QuickConnect'
    quick_connect:
      name: quick_connect
      id: aws.connect.quick_connect
      x-cfn-schema-name: QuickConnect
      x-type: get
      x-identifiers:
        - QuickConnectArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.QuickConnectConfig.QuickConnectType') as quick_connect_config_quick_connect_type,
              JSON_EXTRACT(Properties, '$.QuickConnectConfig.PhoneConfig') as quick_connect_config_phone_config,
              JSON_EXTRACT(Properties, '$.QuickConnectConfig.QueueConfig') as quick_connect_config_queue_config,
              JSON_EXTRACT(Properties, '$.QuickConnectConfig.UserConfig') as quick_connect_config_user_config,
              JSON_EXTRACT(Properties, '$.QuickConnectArn') as quick_connect_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::QuickConnect'
    rules:
      name: rules
      id: aws.connect.rules
      x-cfn-schema-name: Rule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleArn') as rule_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::Rule'
    rule:
      name: rule
      id: aws.connect.rule
      x-cfn-schema-name: Rule
      x-type: get
      x-identifiers:
        - RuleArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleArn') as rule_arn,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TriggerEventSource.EventSourceName') as trigger_event_source_event_source_name,
              JSON_EXTRACT(Properties, '$.TriggerEventSource.IntegrationAssociationArn') as trigger_event_source_integration_association_arn,
              JSON_EXTRACT(Properties, '$.Function') as function,
              JSON_EXTRACT(Properties, '$.Actions.AssignContactCategoryActions') as actions_assign_contact_category_actions,
              JSON_EXTRACT(Properties, '$.Actions.EventBridgeActions') as actions_event_bridge_actions,
              JSON_EXTRACT(Properties, '$.Actions.TaskActions') as actions_task_actions,
              JSON_EXTRACT(Properties, '$.Actions.SendNotificationActions') as actions_send_notification_actions,
              JSON_EXTRACT(Properties, '$.PublishStatus') as publish_status,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::Rule'
    security_keys:
      name: security_keys
      id: aws.connect.security_keys
      x-cfn-schema-name: SecurityKey
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.AssociationId') as association_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::SecurityKey'
    security_key:
      name: security_key
      id: aws.connect.security_key
      x-cfn-schema-name: SecurityKey
      x-type: get
      x-identifiers:
        - InstanceId
        - AssociationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::SecurityKey'
    task_templates:
      name: task_templates
      id: aws.connect.task_templates
      x-cfn-schema-name: TaskTemplate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::TaskTemplate'
    task_template:
      name: task_template
      id: aws.connect.task_template
      x-cfn-schema-name: TaskTemplate
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ContactFlowArn') as contact_flow_arn,
              JSON_EXTRACT(Properties, '$.Constraints') as constraints,
              JSON_EXTRACT(Properties, '$.Defaults') as defaults,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::TaskTemplate'
    users:
      name: users
      id: aws.connect.users
      x-cfn-schema-name: User
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserArn') as user_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::User'
    user:
      name: user
      id: aws.connect.user
      x-cfn-schema-name: User
      x-type: get
      x-identifiers:
        - UserArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.DirectoryUserId') as directory_user_id,
              JSON_EXTRACT(Properties, '$.HierarchyGroupArn') as hierarchy_group_arn,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.RoutingProfileArn') as routing_profile_arn,
              JSON_EXTRACT(Properties, '$.IdentityInfo.FirstName') as identity_info_first_name,
              JSON_EXTRACT(Properties, '$.IdentityInfo.LastName') as identity_info_last_name,
              JSON_EXTRACT(Properties, '$.IdentityInfo.Email') as identity_info_email,
              JSON_EXTRACT(Properties, '$.IdentityInfo.SecondaryEmail') as identity_info_secondary_email,
              JSON_EXTRACT(Properties, '$.IdentityInfo.Mobile') as identity_info_mobile,
              JSON_EXTRACT(Properties, '$.PhoneConfig.AfterContactWorkTimeLimit') as phone_config_after_contact_work_time_limit,
              JSON_EXTRACT(Properties, '$.PhoneConfig.AutoAccept') as phone_config_auto_accept,
              JSON_EXTRACT(Properties, '$.PhoneConfig.DeskPhoneNumber') as phone_config_desk_phone_number,
              JSON_EXTRACT(Properties, '$.PhoneConfig.PhoneType') as phone_config_phone_type,
              JSON_EXTRACT(Properties, '$.SecurityProfileArns') as security_profile_arns,
              JSON_EXTRACT(Properties, '$.UserArn') as user_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::User'
    user_hierarchy_groups:
      name: user_hierarchy_groups
      id: aws.connect.user_hierarchy_groups
      x-cfn-schema-name: UserHierarchyGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserHierarchyGroupArn') as user_hierarchy_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Connect::UserHierarchyGroup'
    user_hierarchy_group:
      name: user_hierarchy_group
      id: aws.connect.user_hierarchy_group
      x-cfn-schema-name: UserHierarchyGroup
      x-type: get
      x-identifiers:
        - UserHierarchyGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Connect::UserHierarchyGroup'
