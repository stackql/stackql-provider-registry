openapi: 3.0.0
info:
  title: MediaLive
  version: 1.0.0
paths: {}
components:
  schemas:
    MultiplexOutputDestination:
      description: Multiplex MediaConnect output destination settings.
      type: object
      properties:
        MultiplexMediaConnectOutputDestinationSettings:
          description: Multiplex MediaConnect output destination settings.
          properties:
            EntitlementArn:
              type: string
              description: The MediaConnect entitlement ARN available as a Flow source.
              minLength: 1
          additionalProperties: false
      additionalProperties: false
    MultiplexSettings:
      type: object
      description: A key-value pair to associate with a resource.
      properties:
        MaximumVideoBufferDelayMilliseconds:
          type: integer
          description: Maximum video buffer delay in milliseconds.
          minimum: 800
          maximum: 3000
        TransportStreamBitrate:
          type: integer
          description: Transport stream bit rate.
          minimum: 1000000
          maximum: 100000000
        TransportStreamId:
          type: integer
          description: Transport stream ID.
          minimum: 0
          maximum: 65535
        TransportStreamReservedBitrate:
          type: integer
          description: Transport stream reserved bit rate.
          minimum: 0
          maximum: 100000000
      required:
        - TransportStreamBitrate
        - TransportStreamId
      additionalProperties: false
    Tags:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
      additionalProperties: false
    Multiplex:
      type: object
      properties:
        Arn:
          type: string
          description: The unique arn of the multiplex.
        AvailabilityZones:
          description: A list of availability zones for the multiplex.
          type: array
          x-insertionOrder: false
          items:
            type: string
        Destinations:
          description: A list of the multiplex output destinations.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MultiplexOutputDestination'
        Id:
          type: string
          description: The unique id of the multiplex.
        MultiplexSettings:
          $ref: '#/components/schemas/MultiplexSettings'
          description: Configuration for a multiplex event.
        Name:
          type: string
          description: Name of multiplex.
        PipelinesRunningCount:
          type: integer
          description: The number of currently healthy pipelines.
        ProgramCount:
          type: integer
          description: The number of programs in the multiplex.
        State:
          type: string
          enum:
            - CREATING
            - CREATE_FAILED
            - IDLE
            - STARTING
            - RUNNING
            - RECOVERING
            - STOPPING
            - DELETING
            - DELETED
        Tags:
          description: A collection of key-value pairs.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tags'
      required:
        - AvailabilityZones
        - MultiplexSettings
        - Name
      x-stackql-resource-name: multiplex
      description: Resource schema for AWS::MediaLive::Multiplex
      x-type-name: AWS::MediaLive::Multiplex
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - AvailabilityZones
      x-read-only-properties:
        - Arn
        - Id
        - PipelinesRunningCount
        - ProgramCount
        - State
      x-required-properties:
        - AvailabilityZones
        - MultiplexSettings
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - medialive:CreateMultiplex
          - medialive:DescribeMultiplex
          - medialive:CreateTags
        read:
          - medialive:DescribeMultiplex
        update:
          - medialive:UpdateMultiplex
          - medialive:DescribeMultiplex
          - medialive:CreateTags
          - medialive:DeleteTags
        delete:
          - medialive:DeleteMultiplex
          - medialive:DescribeMultiplex
        list:
          - medialive:ListMultiplexes
    MultiplexProgramSettings:
      description: Multiplex Program settings configuration.
      type: object
      properties:
        PreferredChannelPipeline:
          type: string
          $ref: '#/components/schemas/PreferredChannelPipeline'
        ProgramNumber:
          type: integer
          description: Unique program number.
          minimum: 0
          maximum: 65535
        ServiceDescriptor:
          $ref: '#/components/schemas/MultiplexProgramServiceDescriptor'
          description: Transport stream service descriptor configuration for the Multiplex program.
        VideoSettings:
          $ref: '#/components/schemas/MultiplexVideoSettings'
          description: Program video settings configuration.
      required:
        - ProgramNumber
      additionalProperties: false
    PreferredChannelPipeline:
      type: string
      description: |
        Indicates which pipeline is preferred by the multiplex for program ingest.
        If set to \"PIPELINE_0\" or \"PIPELINE_1\" and an unhealthy ingest causes the multiplex to switch to the non-preferred pipeline,
        it will switch back once that ingest is healthy again. If set to \"CURRENTLY_ACTIVE\",
        it will not switch back to the other pipeline based on it recovering to a healthy state,
        it will only switch if the active pipeline becomes unhealthy.
      enum:
        - CURRENTLY_ACTIVE
        - PIPELINE_0
        - PIPELINE_1
    MultiplexProgramServiceDescriptor:
      description: Transport stream service descriptor configuration for the Multiplex program.
      type: object
      properties:
        ProviderName:
          type: string
          description: Name of the provider.
          minLength: 1
          maxLength: 256
        ServiceName:
          type: string
          description: Name of the service.
          minLength: 1
          maxLength: 256
      required:
        - ProviderName
        - ServiceName
      additionalProperties: false
    MultiplexVideoSettings:
      description: The video configuration for each program in a multiplex.
      type: object
      oneOf:
        - type: object
          properties:
            ConstantBitrate:
              type: integer
              description: |-
                The constant bitrate configuration for the video encode.
                When this field is defined, StatmuxSettings must be undefined.
              minimum: 100000
              maximum: 100000000
          required:
            - ConstantBitrate
          additionalProperties: false
        - type: object
          properties:
            StatmuxSettings:
              description: |-
                Statmux rate control settings.
                When this field is defined, ConstantBitrate must be undefined.
              $ref: '#/components/schemas/MultiplexStatmuxVideoSettings'
          required:
            - StatmuxSettings
          additionalProperties: false
    MultiplexStatmuxVideoSettings:
      description: Statmux rate control settings
      type: object
      properties:
        MaximumBitrate:
          type: integer
          description: Maximum statmux bitrate.
          minimum: 100000
          maximum: 100000000
        MinimumBitrate:
          type: integer
          description: Minimum statmux bitrate.
          minimum: 100000
          maximum: 100000000
        Priority:
          type: integer
          description: The purpose of the priority is to use a combination of the\nmultiplex rate control algorithm and the QVBR capability of the\nencoder to prioritize the video quality of some channels in a\nmultiplex over others.  Channels that have a higher priority will\nget higher video quality at the expense of the video quality of\nother channels in the multiplex with lower priority.
          minimum: -5
          maximum: 5
      additionalProperties: false
    MultiplexProgramPacketIdentifiersMap:
      description: Packet identifiers map for a given Multiplex program.
      type: object
      properties:
        AudioPids:
          type: array
          items:
            type: integer
          x-insertionOrder: true
        DvbSubPids:
          type: array
          items:
            type: integer
          x-insertionOrder: true
        DvbTeletextPid:
          type: integer
        EtvPlatformPid:
          type: integer
        EtvSignalPid:
          type: integer
        KlvDataPids:
          type: array
          items:
            type: integer
          x-insertionOrder: true
        PcrPid:
          type: integer
        PmtPid:
          type: integer
        PrivateMetadataPid:
          type: integer
        Scte27Pids:
          type: array
          items:
            type: integer
          x-insertionOrder: true
        Scte35Pid:
          type: integer
        TimedMetadataPid:
          type: integer
        VideoPid:
          type: integer
      additionalProperties: false
    MultiplexProgramPipelineDetail:
      description: The current source for one of the pipelines in the multiplex.
      type: object
      properties:
        ActiveChannelPipeline:
          type: string
          description: Identifies the channel pipeline that is currently active for the pipeline (identified by PipelineId) in the multiplex.
        PipelineId:
          type: string
          description: Identifies a specific pipeline in the multiplex.
      additionalProperties: false
    Multiplexprogram:
      type: object
      properties:
        ChannelId:
          type: string
          description: The MediaLive channel associated with the program.
        MultiplexId:
          type: string
          description: The ID of the multiplex that the program belongs to.
        MultiplexProgramSettings:
          description: The settings for this multiplex program.
          $ref: '#/components/schemas/MultiplexProgramSettings'
        PreferredChannelPipeline:
          description: The settings for this multiplex program.
          $ref: '#/components/schemas/PreferredChannelPipeline'
        PacketIdentifiersMap:
          $ref: '#/components/schemas/MultiplexProgramPacketIdentifiersMap'
          description: The packet identifier map for this multiplex program.
        PipelineDetails:
          description: Contains information about the current sources for the specified program in the specified multiplex. Keep in mind that each multiplex pipeline connects to both pipelines in a given source channel (the channel identified by the program). But only one of those channel pipelines is ever active at one time.
          type: array
          items:
            $ref: '#/components/schemas/MultiplexProgramPipelineDetail'
          x-insertionOrder: true
        ProgramName:
          type: string
          description: The name of the multiplex program.
      x-stackql-resource-name: multiplexprogram
      description: Resource schema for AWS::MediaLive::Multiplexprogram
      x-type-name: AWS::MediaLive::Multiplexprogram
      x-stackql-primary-identifier:
        - ProgramName
        - MultiplexId
      x-create-only-properties:
        - ProgramName
        - MultiplexId
      x-write-only-properties:
        - PreferredChannelPipeline
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - medialive:CreateMultiplexProgram
          - medialive:DescribeMultiplexProgram
        read:
          - medialive:DescribeMultiplexProgram
        update:
          - medialive:UpdateMultiplexProgram
          - medialive:DescribeMultiplexProgram
        delete:
          - medialive:DeleteMultiplexProgram
          - medialive:DescribeMultiplexProgram
        list:
          - medialive:ListMultiplexPrograms
  x-stackQL-resources:
    multiplexes:
      name: multiplexes
      id: aws.medialive.multiplexes
      x-cfn-schema-name: Multiplex
      x-type: list
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaLive::Multiplex'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaLive::Multiplex'
                AND region = 'us-east-1'
    multiplex:
      name: multiplex
      id: aws.medialive.multiplex
      x-cfn-schema-name: Multiplex
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(Properties, '$.Destinations') as destinations,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MultiplexSettings') as multiplex_settings,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PipelinesRunningCount') as pipelines_running_count,
              JSON_EXTRACT(Properties, '$.ProgramCount') as program_count,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaLive::Multiplex'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'AvailabilityZones') as availability_zones,
                json_extract_path_text(Properties, 'Destinations') as destinations,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'MultiplexSettings') as multiplex_settings,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'PipelinesRunningCount') as pipelines_running_count,
                json_extract_path_text(Properties, 'ProgramCount') as program_count,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaLive::Multiplex'
                AND data__Identifier = '<Id>'
                AND region = 'us-east-1'
    multiplexprograms:
      name: multiplexprograms
      id: aws.medialive.multiplexprograms
      x-cfn-schema-name: Multiplexprogram
      x-type: list
      x-identifiers:
        - ProgramName
        - MultiplexId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProgramName') as program_name,
              JSON_EXTRACT(Properties, '$.MultiplexId') as multiplex_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaLive::Multiplexprogram'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProgramName') as program_name,
                json_extract_path_text(Properties, 'MultiplexId') as multiplex_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::MediaLive::Multiplexprogram'
                AND region = 'us-east-1'
    multiplexprogram:
      name: multiplexprogram
      id: aws.medialive.multiplexprogram
      x-cfn-schema-name: Multiplexprogram
      x-type: get
      x-identifiers:
        - ProgramName
        - MultiplexId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ChannelId') as channel_id,
              JSON_EXTRACT(Properties, '$.MultiplexId') as multiplex_id,
              JSON_EXTRACT(Properties, '$.MultiplexProgramSettings') as multiplex_program_settings,
              JSON_EXTRACT(Properties, '$.PreferredChannelPipeline') as preferred_channel_pipeline,
              JSON_EXTRACT(Properties, '$.PacketIdentifiersMap') as packet_identifiers_map,
              JSON_EXTRACT(Properties, '$.PipelineDetails') as pipeline_details,
              JSON_EXTRACT(Properties, '$.ProgramName') as program_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaLive::Multiplexprogram'
              AND data__Identifier = '<ProgramName>|<MultiplexId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ChannelId') as channel_id,
                json_extract_path_text(Properties, 'MultiplexId') as multiplex_id,
                json_extract_path_text(Properties, 'MultiplexProgramSettings') as multiplex_program_settings,
                json_extract_path_text(Properties, 'PreferredChannelPipeline') as preferred_channel_pipeline,
                json_extract_path_text(Properties, 'PacketIdentifiersMap') as packet_identifiers_map,
                json_extract_path_text(Properties, 'PipelineDetails') as pipeline_details,
                json_extract_path_text(Properties, 'ProgramName') as program_name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::MediaLive::Multiplexprogram'
                AND data__Identifier = '<ProgramName>|<MultiplexId>'
                AND region = 'us-east-1'
