openapi: 3.0.0
info:
  title: AppFlow
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ConnectorProvisioningConfig:
      description: Contains information about the configuration of the connector being registered.
      type: object
      properties:
        Lambda:
          description: Contains information about the configuration of the lambda which is being registered as the connector.
          $ref: '#/components/schemas/LambdaConnectorProvisioningConfig'
      additionalProperties: false
    LambdaConnectorProvisioningConfig:
      description: Contains information about the configuration of the lambda which is being registered as the connector.
      type: object
      properties:
        LambdaArn:
          description: Lambda ARN of the connector being registered.
          type: string
          pattern: arn:*:.*:.*:[0-9]+:.*
          maxLength: 512
      required:
        - LambdaArn
      additionalProperties: false
    Connector:
      type: object
      properties:
        ConnectorLabel:
          description: ' The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.'
          type: string
          pattern: '[a-zA-Z0-9][\w!@#.-]+'
          maxLength: 512
        ConnectorArn:
          description: ' The arn of the connector. The arn is unique for each ConnectorRegistration in your AWS account.'
          type: string
          pattern: arn:.*:appflow:.*:[0-9]+:.*
          maxLength: 512
        ConnectorProvisioningType:
          description: 'The provisioning type of the connector. Currently the only supported value is LAMBDA. '
          type: string
          pattern: '[a-zA-Z0-9][\w!@#.-]+'
          maxLength: 256
          minLength: 1
        ConnectorProvisioningConfig:
          description: Contains information about the configuration of the connector being registered.
          $ref: '#/components/schemas/ConnectorProvisioningConfig'
        Description:
          description: A description about the connector that's being registered.
          type: string
          pattern: '[\s\w/!@#+=.-]*'
          maxLength: 2048
      required:
        - ConnectorProvisioningType
        - ConnectorProvisioningConfig
      x-stackql-resource-name: connector
      description: Resource schema for AWS::AppFlow::Connector
      x-type-name: AWS::AppFlow::Connector
      x-stackql-primary-identifier:
        - ConnectorLabel
      x-create-only-properties:
        - ConnectorLabel
      x-read-only-properties:
        - ConnectorArn
      x-required-properties:
        - ConnectorProvisioningType
        - ConnectorProvisioningConfig
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - appflow:RegisterConnector
          - lambda:InvokeFunction
        read:
          - appflow:DescribeConnector
        delete:
          - appflow:UnRegisterConnector
        list:
          - appflow:ListConnectors
        update:
          - appflow:UpdateConnectorRegistration
          - lambda:InvokeFunction
    ConnectorType:
      type: string
      enum:
        - SAPOData
        - Salesforce
        - Pardot
        - Singular
        - Slack
        - Redshift
        - S3
        - Marketo
        - Googleanalytics
        - Zendesk
        - Servicenow
        - Datadog
        - Trendmicro
        - Snowflake
        - Dynatrace
        - Infornexus
        - Amplitude
        - Veeva
        - CustomConnector
        - EventBridge
        - Upsolver
        - LookoutMetrics
    ConnectorProfileConfig:
      description: Connector specific configurations needed to create connector profile
      type: object
      properties:
        ConnectorProfileProperties:
          $ref: '#/components/schemas/ConnectorProfileProperties'
        ConnectorProfileCredentials:
          $ref: '#/components/schemas/ConnectorProfileCredentials'
    ConnectorProfileProperties:
      description: Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular
      type: object
      properties:
        Datadog:
          $ref: '#/components/schemas/DatadogConnectorProfileProperties'
        Dynatrace:
          $ref: '#/components/schemas/DynatraceConnectorProfileProperties'
        InforNexus:
          $ref: '#/components/schemas/InforNexusConnectorProfileProperties'
        Marketo:
          $ref: '#/components/schemas/MarketoConnectorProfileProperties'
        Redshift:
          $ref: '#/components/schemas/RedshiftConnectorProfileProperties'
        SAPOData:
          $ref: '#/components/schemas/SAPODataConnectorProfileProperties'
        Salesforce:
          $ref: '#/components/schemas/SalesforceConnectorProfileProperties'
        Pardot:
          $ref: '#/components/schemas/PardotConnectorProfileProperties'
        ServiceNow:
          $ref: '#/components/schemas/ServiceNowConnectorProfileProperties'
        Slack:
          $ref: '#/components/schemas/SlackConnectorProfileProperties'
        Snowflake:
          $ref: '#/components/schemas/SnowflakeConnectorProfileProperties'
        Veeva:
          $ref: '#/components/schemas/VeevaConnectorProfileProperties'
        Zendesk:
          $ref: '#/components/schemas/ZendeskConnectorProfileProperties'
        CustomConnector:
          $ref: '#/components/schemas/CustomConnectorProfileProperties'
    ConnectorProfileCredentials:
      description: Connector specific configuration needed to create connector profile based on Authentication mechanism
      type: object
      properties:
        Amplitude:
          $ref: '#/components/schemas/AmplitudeConnectorProfileCredentials'
        Datadog:
          $ref: '#/components/schemas/DatadogConnectorProfileCredentials'
        Dynatrace:
          $ref: '#/components/schemas/DynatraceConnectorProfileCredentials'
        GoogleAnalytics:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorProfileCredentials'
        InforNexus:
          $ref: '#/components/schemas/InforNexusConnectorProfileCredentials'
        Marketo:
          $ref: '#/components/schemas/MarketoConnectorProfileCredentials'
        Redshift:
          $ref: '#/components/schemas/RedshiftConnectorProfileCredentials'
        SAPOData:
          $ref: '#/components/schemas/SAPODataConnectorProfileCredentials'
        Salesforce:
          $ref: '#/components/schemas/SalesforceConnectorProfileCredentials'
        Pardot:
          $ref: '#/components/schemas/PardotConnectorProfileCredentials'
        ServiceNow:
          $ref: '#/components/schemas/ServiceNowConnectorProfileCredentials'
        Singular:
          $ref: '#/components/schemas/SingularConnectorProfileCredentials'
        Slack:
          $ref: '#/components/schemas/SlackConnectorProfileCredentials'
        Snowflake:
          $ref: '#/components/schemas/SnowflakeConnectorProfileCredentials'
        Trendmicro:
          $ref: '#/components/schemas/TrendmicroConnectorProfileCredentials'
        Veeva:
          $ref: '#/components/schemas/VeevaConnectorProfileCredentials'
        Zendesk:
          $ref: '#/components/schemas/ZendeskConnectorProfileCredentials'
        CustomConnector:
          $ref: '#/components/schemas/CustomConnectorProfileCredentials'
    AmplitudeConnectorProfileCredentials:
      type: object
      required:
        - ApiKey
        - SecretKey
      properties:
        ApiKey:
          description: A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
          $ref: '#/components/schemas/ApiKey'
        SecretKey:
          $ref: '#/components/schemas/SecretKey'
    DatadogConnectorProfileCredentials:
      type: object
      required:
        - ApiKey
        - ApplicationKey
      properties:
        ApiKey:
          description: A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
          $ref: '#/components/schemas/ApiKey'
        ApplicationKey:
          description: Application keys, in conjunction with your API key, give you full access to Datadog’s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.
          $ref: '#/components/schemas/ApplicationKey'
    DatadogConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the Datadog resource
          $ref: '#/components/schemas/InstanceUrl'
    DynatraceConnectorProfileCredentials:
      type: object
      required:
        - ApiToken
      properties:
        ApiToken:
          description: The API tokens used by Dynatrace API to authenticate various API calls.
          $ref: '#/components/schemas/ApiToken'
    DynatraceConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the Dynatrace resource
          $ref: '#/components/schemas/InstanceUrl'
    GoogleAnalyticsConnectorProfileCredentials:
      type: object
      required:
        - ClientId
        - ClientSecret
      properties:
        ClientId:
          description: The identiﬁer for the desired client.
          $ref: '#/components/schemas/ClientId'
        ClientSecret:
          description: The client secret used by the oauth client to authenticate to the authorization server.
          $ref: '#/components/schemas/ClientSecret'
        AccessToken:
          description: The credentials used to access protected resources.
          $ref: '#/components/schemas/AccessToken'
        RefreshToken:
          description: The credentials used to acquire new access tokens.
          $ref: '#/components/schemas/RefreshToken'
        ConnectorOAuthRequest:
          description: The oauth needed to request security tokens from the connector endpoint.
          $ref: '#/components/schemas/ConnectorOAuthRequest'
    InforNexusConnectorProfileCredentials:
      type: object
      required:
        - AccessKeyId
        - UserId
        - SecretAccessKey
        - Datakey
      properties:
        AccessKeyId:
          description: The Access Key portion of the credentials.
          $ref: '#/components/schemas/AccessKeyId'
        UserId:
          description: The identiﬁer for the user.
          $ref: '#/components/schemas/Username'
        SecretAccessKey:
          description: The secret key used to sign requests.
          $ref: '#/components/schemas/Key'
        Datakey:
          description: The encryption keys used to encrypt data.
          $ref: '#/components/schemas/Key'
    InforNexusConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the InforNexus resource
          $ref: '#/components/schemas/InstanceUrl'
    MarketoConnectorProfileCredentials:
      type: object
      required:
        - ClientId
        - ClientSecret
      properties:
        ClientId:
          description: The identiﬁer for the desired client.
          $ref: '#/components/schemas/ClientId'
        ClientSecret:
          description: The client secret used by the oauth client to authenticate to the authorization server.
          $ref: '#/components/schemas/ClientSecret'
        AccessToken:
          description: The credentials used to access protected resources.
          $ref: '#/components/schemas/AccessToken'
        ConnectorOAuthRequest:
          description: The oauth needed to request security tokens from the connector endpoint.
          $ref: '#/components/schemas/ConnectorOAuthRequest'
    MarketoConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the Marketo resource
          $ref: '#/components/schemas/InstanceUrl'
    RedshiftConnectorProfileCredentials:
      type: object
      properties:
        Username:
          description: The name of the user.
          $ref: '#/components/schemas/Username'
        Password:
          description: The password that corresponds to the username.
          $ref: '#/components/schemas/Password'
    RedshiftConnectorProfileProperties:
      type: object
      required:
        - BucketName
        - RoleArn
      properties:
        DatabaseUrl:
          description: The JDBC URL of the Amazon Redshift cluster.
          $ref: '#/components/schemas/DatabaseUrl'
        BucketName:
          description: The name of the Amazon S3 bucket associated with Redshift.
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          description: The object key for the destination bucket in which Amazon AppFlow will place the ﬁles.
          $ref: '#/components/schemas/BucketPrefix'
        RoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role.
          $ref: '#/components/schemas/RoleArn'
        IsRedshiftServerless:
          description: If Amazon AppFlow will connect to Amazon Redshift Serverless or Amazon Redshift cluster.
          type: boolean
        DataApiRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM role that grants Amazon AppFlow access to the data through the Amazon Redshift Data API.
          $ref: '#/components/schemas/DataApiRoleArn'
        ClusterIdentifier:
          description: The unique identifier of the Amazon Redshift cluster.
          $ref: '#/components/schemas/ClusterIdentifier'
        WorkgroupName:
          description: The name of the Amazon Redshift serverless workgroup
          $ref: '#/components/schemas/WorkgroupName'
        DatabaseName:
          description: The name of the Amazon Redshift database that will store the transferred data.
          $ref: '#/components/schemas/DatabaseName'
    SAPODataConnectorProfileCredentials:
      type: object
      properties:
        BasicAuthCredentials:
          $ref: '#/components/schemas/BasicAuthCredentials'
        OAuthCredentials:
          type: object
          properties:
            AccessToken:
              $ref: '#/components/schemas/AccessToken'
            RefreshToken:
              $ref: '#/components/schemas/RefreshToken'
            ConnectorOAuthRequest:
              $ref: '#/components/schemas/ConnectorOAuthRequest'
            ClientId:
              $ref: '#/components/schemas/ClientId'
            ClientSecret:
              $ref: '#/components/schemas/ClientSecret'
    SAPODataConnectorProfileProperties:
      type: object
      properties:
        ApplicationHostUrl:
          $ref: '#/components/schemas/ApplicationHostUrl'
        ApplicationServicePath:
          $ref: '#/components/schemas/ApplicationServicePath'
        PortNumber:
          $ref: '#/components/schemas/PortNumber'
        ClientNumber:
          $ref: '#/components/schemas/ClientNumber'
        LogonLanguage:
          $ref: '#/components/schemas/LogonLanguage'
        PrivateLinkServiceName:
          $ref: '#/components/schemas/PrivateLinkServiceName'
        OAuthProperties:
          $ref: '#/components/schemas/OAuthProperties'
        DisableSSO:
          description: If you set this parameter to true, Amazon AppFlow bypasses the single sign-on (SSO) settings in your SAP account when it accesses your SAP OData instance.
          type: boolean
    SalesforceConnectorProfileCredentials:
      type: object
      properties:
        AccessToken:
          description: The credentials used to access protected resources.
          $ref: '#/components/schemas/AccessToken'
        RefreshToken:
          description: The credentials used to acquire new access tokens.
          $ref: '#/components/schemas/RefreshToken'
        ConnectorOAuthRequest:
          description: The oauth needed to request security tokens from the connector endpoint.
          $ref: '#/components/schemas/ConnectorOAuthRequest'
        ClientCredentialsArn:
          description: The client credentials to fetch access token and refresh token.
          $ref: '#/components/schemas/ClientCredentialsArn'
        OAuth2GrantType:
          description: The grant types to fetch an access token
          $ref: '#/components/schemas/OAuth2GrantType'
        JwtToken:
          description: The credentials used to access your Salesforce records
          $ref: '#/components/schemas/JwtToken'
    SalesforceConnectorProfileProperties:
      type: object
      properties:
        InstanceUrl:
          description: The location of the Salesforce resource
          $ref: '#/components/schemas/InstanceUrl'
        isSandboxEnvironment:
          description: Indicates whether the connector profile applies to a sandbox or production environment
          type: boolean
        usePrivateLinkForMetadataAndAuthorization:
          description: Indicates whether to make Metadata And Authorization calls over Pivate Network
          type: boolean
    PardotConnectorProfileProperties:
      type: object
      required:
        - BusinessUnitId
      properties:
        InstanceUrl:
          description: The location of the Salesforce Pardot resource
          $ref: '#/components/schemas/InstanceUrl'
        IsSandboxEnvironment:
          description: Indicates whether the connector profile applies to a demo or production environment
          type: boolean
        BusinessUnitId:
          description: The Business unit id of Salesforce Pardot instance to be connected
          $ref: '#/components/schemas/BusinessUnitId'
    PardotConnectorProfileCredentials:
      type: object
      properties:
        AccessToken:
          description: The credentials used to access protected resources.
          $ref: '#/components/schemas/AccessToken'
        RefreshToken:
          description: The credentials used to acquire new access tokens.
          $ref: '#/components/schemas/RefreshToken'
        ConnectorOAuthRequest:
          description: The oauth needed to request security tokens from the connector endpoint.
          $ref: '#/components/schemas/ConnectorOAuthRequest'
        ClientCredentialsArn:
          description: The client credentials to fetch access token and refresh token.
          $ref: '#/components/schemas/ClientCredentialsArn'
    ServiceNowConnectorProfileCredentials:
      type: object
      properties:
        Username:
          description: The name of the user.
          $ref: '#/components/schemas/Username'
        Password:
          description: The password that corresponds to the username.
          $ref: '#/components/schemas/Password'
        OAuth2Credentials:
          description: The OAuth 2.0 credentials required to authenticate the user.
          $ref: '#/components/schemas/OAuth2Credentials'
    ServiceNowConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the ServiceNow resource
          $ref: '#/components/schemas/InstanceUrl'
    SingularConnectorProfileCredentials:
      type: object
      required:
        - ApiKey
      properties:
        ApiKey:
          description: A unique alphanumeric identiﬁer used to authenticate a user, developer, or calling program to your API.
          $ref: '#/components/schemas/ApiKey'
    SlackConnectorProfileCredentials:
      type: object
      required:
        - ClientId
        - ClientSecret
      properties:
        ClientId:
          description: The identiﬁer for the desired client.
          $ref: '#/components/schemas/ClientId'
        ClientSecret:
          description: The client secret used by the oauth client to authenticate to the authorization server.
          $ref: '#/components/schemas/ClientSecret'
        AccessToken:
          description: The credentials used to access protected resources.
          $ref: '#/components/schemas/AccessToken'
        ConnectorOAuthRequest:
          description: The oauth needed to request security tokens from the connector endpoint.
          $ref: '#/components/schemas/ConnectorOAuthRequest'
    SlackConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the Slack resource
          $ref: '#/components/schemas/InstanceUrl'
    SnowflakeConnectorProfileCredentials:
      type: object
      required:
        - Username
        - Password
      properties:
        Username:
          description: The name of the user.
          $ref: '#/components/schemas/Username'
        Password:
          description: The password that corresponds to the username.
          $ref: '#/components/schemas/Password'
    SnowflakeConnectorProfileProperties:
      type: object
      required:
        - Warehouse
        - Stage
        - BucketName
      properties:
        Warehouse:
          description: The name of the Snowﬂake warehouse.
          $ref: '#/components/schemas/Warehouse'
        Stage:
          description: |-
            The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the
            Snowﬂake account. This is written in the following format: < Database>< Schema><Stage Name>.
          $ref: '#/components/schemas/Stage'
        BucketName:
          description: The name of the Amazon S3 bucket associated with Snowﬂake.
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          description: The bucket prefix that refers to the Amazon S3 bucket associated with Snowﬂake.
          $ref: '#/components/schemas/BucketPrefix'
        PrivateLinkServiceName:
          description: The Snowﬂake Private Link service name to be used for private data transfers.
          $ref: '#/components/schemas/PrivateLinkServiceName'
        AccountName:
          description: The name of the account.
          $ref: '#/components/schemas/AccountName'
        Region:
          description: The region of the Snowﬂake account.
          $ref: '#/components/schemas/Region'
    TrendmicroConnectorProfileCredentials:
      type: object
      required:
        - ApiSecretKey
      properties:
        ApiSecretKey:
          description: The Secret Access Key portion of the credentials.
          $ref: '#/components/schemas/ApiSecretKey'
    VeevaConnectorProfileCredentials:
      type: object
      required:
        - Username
        - Password
      properties:
        Username:
          description: The name of the user.
          $ref: '#/components/schemas/Username'
        Password:
          description: The password that corresponds to the username.
          $ref: '#/components/schemas/Password'
    VeevaConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the Veeva resource
          $ref: '#/components/schemas/InstanceUrl'
    ZendeskConnectorProfileCredentials:
      type: object
      required:
        - ClientId
        - ClientSecret
      properties:
        ClientId:
          description: The identiﬁer for the desired client.
          $ref: '#/components/schemas/ClientId'
        ClientSecret:
          description: The client secret used by the oauth client to authenticate to the authorization server.
          $ref: '#/components/schemas/ClientSecret'
        AccessToken:
          description: The credentials used to access protected resources.
          $ref: '#/components/schemas/AccessToken'
        ConnectorOAuthRequest:
          description: The oauth needed to request security tokens from the connector endpoint.
          $ref: '#/components/schemas/ConnectorOAuthRequest'
    ZendeskConnectorProfileProperties:
      type: object
      required:
        - InstanceUrl
      properties:
        InstanceUrl:
          description: The location of the Zendesk resource
          $ref: '#/components/schemas/InstanceUrl'
    CustomConnectorProfileCredentials:
      type: object
      required:
        - AuthenticationType
      properties:
        AuthenticationType:
          $ref: '#/components/schemas/AuthenticationType'
        Basic:
          $ref: '#/components/schemas/BasicAuthCredentials'
        Oauth2:
          $ref: '#/components/schemas/OAuth2Credentials'
        ApiKey:
          $ref: '#/components/schemas/ApiKeyCredentials'
        Custom:
          $ref: '#/components/schemas/CustomAuthCredentials'
      additionalProperties: false
    CustomConnectorProfileProperties:
      type: object
      properties:
        ProfileProperties:
          $ref: '#/components/schemas/ProfileProperties'
        OAuth2Properties:
          $ref: '#/components/schemas/OAuth2Properties'
      additionalProperties: false
    ApiKeyCredentials:
      type: object
      required:
        - ApiKey
      properties:
        ApiKey:
          $ref: '#/components/schemas/ApiKey'
        ApiSecretKey:
          $ref: '#/components/schemas/ApiSecretKey'
      additionalProperties: false
    CustomAuthCredentials:
      type: object
      required:
        - CustomAuthenticationType
      properties:
        CustomAuthenticationType:
          $ref: '#/components/schemas/CustomAuthenticationType'
        CredentialsMap:
          $ref: '#/components/schemas/CredentialsMap'
      additionalProperties: false
    CredentialsMap:
      description: A map for properties for custom authentication.
      type: object
      x-patternProperties:
        ^[\w]{1,128}$:
          description: A string containing the value for the property
          type: string
          minLength: 1
          maxLength: 2048
          pattern: \S+
      required: []
      additionalProperties: false
    OAuth2Credentials:
      type: object
      properties:
        ClientId:
          $ref: '#/components/schemas/ClientId'
        ClientSecret:
          $ref: '#/components/schemas/ClientSecret'
        AccessToken:
          $ref: '#/components/schemas/AccessToken'
        RefreshToken:
          $ref: '#/components/schemas/RefreshToken'
        OAuthRequest:
          $ref: '#/components/schemas/ConnectorOAuthRequest'
      additionalProperties: false
    BasicAuthCredentials:
      type: object
      required:
        - Username
        - Password
      properties:
        Username:
          $ref: '#/components/schemas/Username'
        Password:
          $ref: '#/components/schemas/Password'
      additionalProperties: false
    AuthenticationType:
      type: string
      enum:
        - OAUTH2
        - APIKEY
        - BASIC
        - CUSTOM
    OAuth2Properties:
      type: object
      properties:
        TokenUrl:
          type: string
          minLength: 0
          maxLength: 256
          pattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]
        OAuth2GrantType:
          $ref: '#/components/schemas/OAuth2GrantType'
        TokenUrlCustomProperties:
          $ref: '#/components/schemas/TokenUrlCustomProperties'
      additionalProperties: false
    ProfileProperties:
      description: A map for properties for custom connector.
      type: object
      x-patternProperties:
        ^[\w]{1,256}$:
          description: A string containing the value for the property
          type: string
          minLength: 1
          maxLength: 2048
          pattern: \S+
      required: []
      additionalProperties: false
    OAuth2GrantType:
      type: string
      enum:
        - CLIENT_CREDENTIALS
        - AUTHORIZATION_CODE
        - JWT_BEARER
    TokenUrlCustomProperties:
      description: A map for properties for custom connector Token Url.
      type: object
      x-patternProperties:
        ^[\w]{1,128}$:
          description: A string containing the value for the property
          type: string
          minLength: 1
          maxLength: 2048
          pattern: \S+
      required: []
      additionalProperties: false
    CustomAuthenticationType:
      type: string
      pattern: \S+
      maxLength: 256
    ClientId:
      type: string
      pattern: \S+
      maxLength: 512
    ClientSecret:
      type: string
      pattern: \S+
      maxLength: 512
    InstanceUrl:
      type: string
      pattern: \S+
      maxLength: 256
    AccessToken:
      type: string
      pattern: \S+
      maxLength: 4096
    ApiKey:
      type: string
      pattern: \S+
      maxLength: 256
    ApiSecretKey:
      type: string
      pattern: \S+
      maxLength: 256
    ApiToken:
      type: string
      pattern: \S+
      maxLength: 256
    ApplicationKey:
      type: string
      pattern: \S+
      maxLength: 512
    AuthCode:
      type: string
      pattern: \S+
      maxLength: 4096
    BucketName:
      type: string
      minLength: 3
      maxLength: 63
      pattern: \S+
    BucketPrefix:
      type: string
      maxLength: 512
    Key:
      type: string
      pattern: \S+
      maxLength: 512
    DatabaseUrl:
      type: string
      pattern: \S+
      maxLength: 512
    RoleArn:
      type: string
      pattern: arn:aws:iam:.*:[0-9]+:.*
      maxLength: 512
    DataApiRoleArn:
      type: string
      pattern: arn:aws:iam:.*:[0-9]+:.*
      maxLength: 512
    ClusterIdentifier:
      type: string
      pattern: \S+
      maxLength: 512
    WorkgroupName:
      type: string
      pattern: \S+
      maxLength: 512
    DatabaseName:
      type: string
      pattern: \S+
      maxLength: 512
    Warehouse:
      type: string
      pattern: '[\s\w/!@#+=.-]*'
      maxLength: 512
    Stage:
      type: string
      pattern: \S+
      maxLength: 512
    PrivateLinkServiceName:
      type: string
      pattern: \S+
      maxLength: 512
    AccountName:
      type: string
      pattern: \S+
      maxLength: 512
    JwtToken:
      type: string
      pattern: ^[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.[A-Za-z0-9-_.+/=]*$
      maxLength: 8000
    RefreshToken:
      type: string
      pattern: \S+
      maxLength: 4096
    Region:
      type: string
      pattern: \S+
      maxLength: 64
    SecretKey:
      type: string
      pattern: \S+
      maxLength: 256
    AccessKeyId:
      type: string
      pattern: \S+
      maxLength: 256
    Username:
      type: string
      pattern: \S+
      maxLength: 512
    Password:
      type: string
      pattern: \S+
      maxLength: 512
    BusinessUnitId:
      type: string
      pattern: \S+
      maxLength: 18
    ConnectorOAuthRequest:
      type: object
      properties:
        AuthCode:
          description: The code provided by the connector when it has been authenticated via the connected app.
          type: string
        RedirectUri:
          description: |-
            The URL to which the authentication server redirects the browser after authorization has been
            granted.
          type: string
    ClientCredentialsArn:
      type: string
      pattern: arn:aws:secretsmanager:.*:[0-9]+:.*
      maxLength: 2048
    ApplicationHostUrl:
      type: string
      maxLength: 256
      pattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]
    ApplicationServicePath:
      type: string
      pattern: \S+
      maxLength: 512
    ClientNumber:
      type: string
      pattern: ^\d{3}$
      minLength: 3
      maxLength: 3
    LogonLanguage:
      type: string
      pattern: ^[a-zA-Z0-9_]*$
      maxLength: 2
    PortNumber:
      type: integer
      minimum: 1
      maximum: 65535
    OAuthProperties:
      type: object
      properties:
        AuthCodeUrl:
          type: string
          maxLength: 256
          pattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]
        TokenUrl:
          type: string
          maxLength: 256
          pattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]
        OAuthScopes:
          type: array
          uniqueItems: true
          items:
            type: string
            maxLength: 128
            pattern: '[/\w]*'
    ConnectorProfile:
      type: object
      properties:
        ConnectorProfileArn:
          description: Unique identifier for connector profile resources
          type: string
          pattern: arn:aws:appflow:.*:[0-9]+:.*
          maxLength: 512
        ConnectorLabel:
          description: The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for CUSTOMCONNECTOR connector type/.
          type: string
          pattern: '[\w!@#.-]+'
          maxLength: 256
        ConnectorProfileName:
          description: The maximum number of items to retrieve in a single batch.
          type: string
          pattern: '[\w/!@#+=.-]+'
          maxLength: 256
        KMSArn:
          description: The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
          type: string
          pattern: arn:aws:kms:.*:[0-9]+:.*
          maxLength: 2048
          minLength: 20
        ConnectorType:
          description: List of Saas providers that need connector profile to be created
          $ref: '#/components/schemas/ConnectorType'
        ConnectionMode:
          description: Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular
          type: string
          enum:
            - Public
            - Private
        ConnectorProfileConfig:
          description: Connector specific configurations needed to create connector profile
          $ref: '#/components/schemas/ConnectorProfileConfig'
        CredentialsArn:
          description: A unique Arn for Connector-Profile resource
          type: string
          pattern: arn:aws:.*:.*:[0-9]+:.*
          maxLength: 512
      required:
        - ConnectorProfileName
        - ConnectionMode
        - ConnectorType
      x-stackql-resource-name: connector_profile
      description: Resource Type definition for AWS::AppFlow::ConnectorProfile
      x-type-name: AWS::AppFlow::ConnectorProfile
      x-stackql-primary-identifier:
        - ConnectorProfileName
      x-create-only-properties:
        - ConnectorProfileName
        - ConnectorType
        - ConnectorLabel
      x-write-only-properties:
        - ConnectorProfileConfig
        - KMSArn
      x-read-only-properties:
        - ConnectorProfileArn
        - CredentialsArn
      x-required-properties:
        - ConnectorProfileName
        - ConnectionMode
        - ConnectorType
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - appflow:CreateConnectorProfile
          - kms:ListKeys
          - kms:DescribeKey
          - kms:ListAliases
          - kms:CreateGrant
          - kms:ListGrants
          - iam:PassRole
          - secretsmanager:CreateSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutResourcePolicy
        delete:
          - appflow:DeleteConnectorProfile
        list:
          - appflow:DescribeConnectorProfiles
        read:
          - appflow:DescribeConnectorProfiles
        update:
          - appflow:UpdateConnectorProfile
          - kms:ListKeys
          - kms:DescribeKey
          - kms:ListAliases
          - kms:CreateGrant
          - kms:ListGrants
          - iam:PassRole
          - secretsmanager:CreateSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutResourcePolicy
    TriggerConfig:
      description: Trigger settings of the flow.
      type: object
      properties:
        TriggerType:
          description: Trigger type of the flow
          $ref: '#/components/schemas/TriggerType'
        TriggerProperties:
          description: Details required based on the type of trigger
          $ref: '#/components/schemas/ScheduledTriggerProperties'
      required:
        - TriggerType
      additionalProperties: false
    SourceFlowConfig:
      description: Configurations of Source connector of the flow.
      type: object
      properties:
        ConnectorType:
          description: Type of source connector
          $ref: '#/components/schemas/ConnectorType'
        ApiVersion:
          description: The API version that the destination connector uses.
          $ref: '#/components/schemas/ApiVersion'
        ConnectorProfileName:
          description: Name of source connector profile
          $ref: '#/components/schemas/ConnectorProfileName'
        SourceConnectorProperties:
          description: Source connector details required to query a connector
          $ref: '#/components/schemas/SourceConnectorProperties'
        IncrementalPullConfig:
          description: Configuration for scheduled incremental data pull
          $ref: '#/components/schemas/IncrementalPullConfig'
      required:
        - ConnectorType
        - SourceConnectorProperties
      additionalProperties: false
    DestinationFlowConfig:
      description: Configurations of destination connector.
      type: object
      properties:
        ConnectorType:
          description: Destination connector type
          $ref: '#/components/schemas/ConnectorType'
        ApiVersion:
          description: The API version that the destination connector uses.
          $ref: '#/components/schemas/ApiVersion'
        ConnectorProfileName:
          description: Name of destination connector profile
          $ref: '#/components/schemas/ConnectorProfileName'
        DestinationConnectorProperties:
          description: Destination connector details
          $ref: '#/components/schemas/DestinationConnectorProperties'
      required:
        - ConnectorType
        - DestinationConnectorProperties
      additionalProperties: false
    Task:
      type: object
      properties:
        SourceFields:
          description: Source fields on which particular task will be applied
          type: array
          items:
            type: string
        ConnectorOperator:
          description: Operation to be performed on provided source fields
          $ref: '#/components/schemas/ConnectorOperator'
        DestinationField:
          description: A field value on which source field should be validated
          type: string
          maxLength: 256
        TaskType:
          description: Type of task
          $ref: '#/components/schemas/TaskType'
        TaskProperties:
          description: A Map used to store task related info
          type: array
          items:
            $ref: '#/components/schemas/TaskPropertiesObject'
      required:
        - SourceFields
        - TaskType
      additionalProperties: false
    Tag:
      description: A label for tagging AppFlow resources
      type: object
      properties:
        Key:
          description: A string used to identify this tag
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: A string containing the value for the tag
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    MetadataCatalogConfig:
      description: Configurations of metadata catalog of the flow.
      type: object
      properties:
        GlueDataCatalog:
          description: Configurations of glue data catalog of the flow.
          $ref: '#/components/schemas/GlueDataCatalog'
      additionalProperties: false
    GlueDataCatalog:
      description: Trigger settings of the flow.
      type: object
      properties:
        RoleArn:
          description: A string containing the value for the tag
          type: string
          minLength: 0
          maxLength: 512
          pattern: arn:aws:iam:.*:[0-9]+:.*
        DatabaseName:
          description: A string containing the value for the tag
          type: string
          minLength: 0
          maxLength: 255
          pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
        TablePrefix:
          description: A string containing the value for the tag
          type: string
          minLength: 0
          maxLength: 128
          pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF\t]*'
      required:
        - RoleArn
        - DatabaseName
        - TablePrefix
      additionalProperties: false
    DestinationConnectorProperties:
      description: Destination connector details
      type: object
      properties:
        Redshift:
          $ref: '#/components/schemas/RedshiftDestinationProperties'
        S3:
          $ref: '#/components/schemas/S3DestinationProperties'
        Salesforce:
          $ref: '#/components/schemas/SalesforceDestinationProperties'
        Snowflake:
          $ref: '#/components/schemas/SnowflakeDestinationProperties'
        EventBridge:
          $ref: '#/components/schemas/EventBridgeDestinationProperties'
        Upsolver:
          $ref: '#/components/schemas/UpsolverDestinationProperties'
        LookoutMetrics:
          $ref: '#/components/schemas/LookoutMetricsDestinationProperties'
        Marketo:
          $ref: '#/components/schemas/MarketoDestinationProperties'
        Zendesk:
          $ref: '#/components/schemas/ZendeskDestinationProperties'
        CustomConnector:
          $ref: '#/components/schemas/CustomConnectorDestinationProperties'
        SAPOData:
          $ref: '#/components/schemas/SAPODataDestinationProperties'
    IncrementalPullConfig:
      description: Configuration for scheduled incremental data pull
      type: object
      properties:
        DatetimeTypeFieldName:
          $ref: '#/components/schemas/DatetimeTypeFieldName'
    SourceConnectorProperties:
      description: Source connector details required to query a connector
      type: object
      properties:
        Amplitude:
          $ref: '#/components/schemas/AmplitudeSourceProperties'
        Datadog:
          $ref: '#/components/schemas/DatadogSourceProperties'
        Dynatrace:
          $ref: '#/components/schemas/DynatraceSourceProperties'
        GoogleAnalytics:
          $ref: '#/components/schemas/GoogleAnalyticsSourceProperties'
        InforNexus:
          $ref: '#/components/schemas/InforNexusSourceProperties'
        Marketo:
          $ref: '#/components/schemas/MarketoSourceProperties'
        S3:
          $ref: '#/components/schemas/S3SourceProperties'
        SAPOData:
          $ref: '#/components/schemas/SAPODataSourceProperties'
        Salesforce:
          $ref: '#/components/schemas/SalesforceSourceProperties'
        Pardot:
          $ref: '#/components/schemas/PardotSourceProperties'
        ServiceNow:
          $ref: '#/components/schemas/ServiceNowSourceProperties'
        Singular:
          $ref: '#/components/schemas/SingularSourceProperties'
        Slack:
          $ref: '#/components/schemas/SlackSourceProperties'
        Trendmicro:
          $ref: '#/components/schemas/TrendmicroSourceProperties'
        Veeva:
          $ref: '#/components/schemas/VeevaSourceProperties'
        Zendesk:
          $ref: '#/components/schemas/ZendeskSourceProperties'
        CustomConnector:
          $ref: '#/components/schemas/CustomConnectorSourceProperties'
    ConnectorOperator:
      description: Operation to be performed on provided source fields
      type: object
      properties:
        Amplitude:
          $ref: '#/components/schemas/AmplitudeConnectorOperator'
        Datadog:
          $ref: '#/components/schemas/DatadogConnectorOperator'
        Dynatrace:
          $ref: '#/components/schemas/DynatraceConnectorOperator'
        GoogleAnalytics:
          $ref: '#/components/schemas/GoogleAnalyticsConnectorOperator'
        InforNexus:
          $ref: '#/components/schemas/InforNexusConnectorOperator'
        Marketo:
          $ref: '#/components/schemas/MarketoConnectorOperator'
        S3:
          $ref: '#/components/schemas/S3ConnectorOperator'
        SAPOData:
          $ref: '#/components/schemas/SAPODataConnectorOperator'
        Salesforce:
          $ref: '#/components/schemas/SalesforceConnectorOperator'
        Pardot:
          $ref: '#/components/schemas/PardotConnectorOperator'
        ServiceNow:
          $ref: '#/components/schemas/ServiceNowConnectorOperator'
        Singular:
          $ref: '#/components/schemas/SingularConnectorOperator'
        Slack:
          $ref: '#/components/schemas/SlackConnectorOperator'
        Trendmicro:
          $ref: '#/components/schemas/TrendmicroConnectorOperator'
        Veeva:
          $ref: '#/components/schemas/VeevaConnectorOperator'
        Zendesk:
          $ref: '#/components/schemas/ZendeskConnectorOperator'
        CustomConnector:
          $ref: '#/components/schemas/Operator'
    ScheduledTriggerProperties:
      description: Details required for scheduled trigger type
      type: object
      properties:
        ScheduleExpression:
          type: string
          minLength: 1
          maxLength: 256
        DataPullMode:
          type: string
          enum:
            - Incremental
            - Complete
        ScheduleStartTime:
          type: number
        ScheduleEndTime:
          type: number
        FirstExecutionFrom:
          type: number
        TimeZone:
          type: string
          maxLength: 256
        ScheduleOffset:
          type: number
          minimum: 0
          maximum: 36000
        FlowErrorDeactivationThreshold:
          type: integer
          minimum: 1
          maximum: 100
      required:
        - ScheduleExpression
      additionalProperties: false
    CustomProperties:
      description: A map for properties for custom connector.
      type: object
      x-patternProperties:
        ^[\w]{1,2048}$:
          description: A string containing the value for the property
          type: string
          minLength: 1
          maxLength: 2048
          pattern: \S+
      required: []
      additionalProperties: false
    TriggerType:
      type: string
      enum:
        - Scheduled
        - Event
        - OnDemand
    Object:
      type: string
      maxLength: 512
      pattern: \S+
    EntityName:
      type: string
      maxLength: 1024
      pattern: \S+
    EnableDynamicFieldUpdate:
      type: boolean
    IncludeDeletedRecords:
      type: boolean
    IncludeAllVersions:
      type: boolean
    IncludeRenditions:
      type: boolean
    IncludeSourceFiles:
      type: boolean
    DocumentType:
      type: string
      maxLength: 512
      pattern: '[\s\w_-]+'
    UpsolverBucketName:
      type: string
      minLength: 16
      maxLength: 63
      pattern: ^(upsolver-appflow)\S*
    S3InputFormatConfig:
      type: object
      properties:
        S3InputFileType:
          type: string
          enum:
            - CSV
            - JSON
    ErrorHandlingConfig:
      type: object
      properties:
        FailOnFirstError:
          type: boolean
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        BucketName:
          $ref: '#/components/schemas/BucketName'
      additionalProperties: false
    SuccessResponseHandlingConfig:
      type: object
      properties:
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        BucketName:
          $ref: '#/components/schemas/BucketName'
      additionalProperties: false
    Name:
      type: string
      maxLength: 128
      pattern: \S+
    WriteOperationType:
      type: string
      enum:
        - INSERT
        - UPSERT
        - UPDATE
        - DELETE
    FileType:
      type: string
      enum:
        - CSV
        - JSON
        - PARQUET
    AggregationType:
      type: string
      enum:
        - None
        - SingleFile
    TargetFileSize:
      type: integer
    PreserveSourceDataTyping:
      type: boolean
    PrefixType:
      type: string
      enum:
        - FILENAME
        - PATH
        - PATH_AND_FILENAME
    PrefixFormat:
      type: string
      enum:
        - YEAR
        - MONTH
        - DAY
        - HOUR
        - MINUTE
    PathPrefixHierarchy:
      type: array
      items:
        $ref: '#/components/schemas/PathPrefix'
    PathPrefix:
      type: string
      enum:
        - EXECUTION_ID
        - SCHEMA_VERSION
    PrefixConfig:
      type: object
      properties:
        PrefixType:
          $ref: '#/components/schemas/PrefixType'
        PrefixFormat:
          $ref: '#/components/schemas/PrefixFormat'
        PathPrefixHierarchy:
          $ref: '#/components/schemas/PathPrefixHierarchy'
      additionalProperties: false
    AggregationConfig:
      type: object
      properties:
        AggregationType:
          $ref: '#/components/schemas/AggregationType'
        TargetFileSize:
          $ref: '#/components/schemas/TargetFileSize'
    S3OutputFormatConfig:
      type: object
      properties:
        FileType:
          $ref: '#/components/schemas/FileType'
        PrefixConfig:
          $ref: '#/components/schemas/PrefixConfig'
        AggregationConfig:
          $ref: '#/components/schemas/AggregationConfig'
        PreserveSourceDataTyping:
          $ref: '#/components/schemas/PreserveSourceDataTyping'
      additionalProperties: false
    UpsolverS3OutputFormatConfig:
      type: object
      properties:
        FileType:
          $ref: '#/components/schemas/FileType'
        PrefixConfig:
          $ref: '#/components/schemas/PrefixConfig'
        AggregationConfig:
          $ref: '#/components/schemas/AggregationConfig'
      required:
        - PrefixConfig
      additionalProperties: false
    ApiVersion:
      description: The API version that the connector will use.
      type: string
      pattern: \S+
      maxLength: 256
    ConnectorProfileName:
      description: Name of connector profile
      type: string
      pattern: '[\w/!@#+=.-]+'
      maxLength: 256
    AmplitudeSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    DatadogSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    DynatraceSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    GoogleAnalyticsSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    InforNexusSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    MarketoSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    S3SourceProperties:
      type: object
      properties:
        BucketName:
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        S3InputFormatConfig:
          $ref: '#/components/schemas/S3InputFormatConfig'
      required:
        - BucketName
        - BucketPrefix
      additionalProperties: false
    SAPODataSourceProperties:
      type: object
      properties:
        ObjectPath:
          $ref: '#/components/schemas/Object'
        parallelismConfig:
          $ref: '#/components/schemas/SAPODataParallelismConfig'
        paginationConfig:
          $ref: '#/components/schemas/SAPODataPaginationConfig'
      required:
        - ObjectPath
      additionalProperties: false
    SalesforceSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        EnableDynamicFieldUpdate:
          $ref: '#/components/schemas/EnableDynamicFieldUpdate'
        IncludeDeletedRecords:
          $ref: '#/components/schemas/IncludeDeletedRecords'
        DataTransferApi:
          $ref: '#/components/schemas/DataTransferApi'
      required:
        - Object
      additionalProperties: false
    PardotSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    ServiceNowSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    SingularSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    SlackSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    TrendmicroSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    VeevaSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
        IncludeSourceFiles:
          $ref: '#/components/schemas/IncludeSourceFiles'
        IncludeRenditions:
          $ref: '#/components/schemas/IncludeRenditions'
        IncludeAllVersions:
          $ref: '#/components/schemas/IncludeAllVersions'
      required:
        - Object
      additionalProperties: false
    ZendeskSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    CustomConnectorSourceProperties:
      type: object
      properties:
        EntityName:
          $ref: '#/components/schemas/EntityName'
        CustomProperties:
          $ref: '#/components/schemas/CustomProperties'
        DataTransferApi:
          type: object
          properties:
            Name:
              type: string
              maxLength: 64
              pattern: '[\w/-]+'
            Type:
              type: string
              enum:
                - SYNC
                - ASYNC
                - AUTOMATIC
          required:
            - Name
            - Type
          additionalProperties: false
      required:
        - EntityName
      additionalProperties: false
    CustomConnectorDestinationProperties:
      type: object
      properties:
        EntityName:
          $ref: '#/components/schemas/EntityName'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
        WriteOperationType:
          $ref: '#/components/schemas/WriteOperationType'
        IdFieldNames:
          description: List of fields used as ID when performing a write operation.
          type: array
          items:
            type: string
        CustomProperties:
          $ref: '#/components/schemas/CustomProperties'
      required:
        - EntityName
      additionalProperties: false
    ZendeskDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
        IdFieldNames:
          description: List of fields used as ID when performing a write operation.
          type: array
          items:
            type: string
        WriteOperationType:
          $ref: '#/components/schemas/WriteOperationType'
      required:
        - Object
      additionalProperties: false
    RedshiftDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        IntermediateBucketName:
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
        - Object
        - IntermediateBucketName
      additionalProperties: false
    S3DestinationProperties:
      type: object
      properties:
        BucketName:
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        S3OutputFormatConfig:
          $ref: '#/components/schemas/S3OutputFormatConfig'
      required:
        - BucketName
      additionalProperties: false
    SAPODataDestinationProperties:
      type: object
      properties:
        ObjectPath:
          $ref: '#/components/schemas/Object'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
        SuccessResponseHandlingConfig:
          $ref: '#/components/schemas/SuccessResponseHandlingConfig'
        IdFieldNames:
          description: List of fields used as ID when performing a write operation.
          type: array
          items:
            type: string
        WriteOperationType:
          $ref: '#/components/schemas/WriteOperationType'
      required:
        - ObjectPath
      additionalProperties: false
    SalesforceDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
        IdFieldNames:
          description: List of fields used as ID when performing a write operation.
          type: array
          items:
            type: string
        WriteOperationType:
          $ref: '#/components/schemas/WriteOperationType'
        DataTransferApi:
          $ref: '#/components/schemas/DataTransferApi'
      required:
        - Object
      additionalProperties: false
    SnowflakeDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        IntermediateBucketName:
          $ref: '#/components/schemas/BucketName'
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
        - Object
        - IntermediateBucketName
      additionalProperties: false
    EventBridgeDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
        - Object
      additionalProperties: false
    UpsolverDestinationProperties:
      type: object
      properties:
        BucketName:
          $ref: '#/components/schemas/UpsolverBucketName'
        BucketPrefix:
          $ref: '#/components/schemas/BucketPrefix'
        S3OutputFormatConfig:
          $ref: '#/components/schemas/UpsolverS3OutputFormatConfig'
      required:
        - BucketName
        - S3OutputFormatConfig
      additionalProperties: false
    LookoutMetricsDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      additionalProperties: false
    MarketoDestinationProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        ErrorHandlingConfig:
          $ref: '#/components/schemas/ErrorHandlingConfig'
      required:
        - Object
      additionalProperties: false
    DatetimeTypeFieldName:
      description: Name of the datetime/timestamp data type field to be used for importing incremental records from the source
      type: string
      maxLength: 256
    TaskType:
      type: string
      enum:
        - Arithmetic
        - Filter
        - Map
        - Map_all
        - Mask
        - Merge
        - Passthrough
        - Truncate
        - Validate
        - Partition
    OperatorPropertiesKeys:
      type: string
      enum:
        - VALUE
        - VALUES
        - DATA_TYPE
        - UPPER_BOUND
        - LOWER_BOUND
        - SOURCE_DATA_TYPE
        - DESTINATION_DATA_TYPE
        - VALIDATION_ACTION
        - MASK_VALUE
        - MASK_LENGTH
        - TRUNCATE_LENGTH
        - MATH_OPERATION_FIELDS_ORDER
        - CONCAT_FORMAT
        - SUBFIELD_CATEGORY_MAP
        - EXCLUDE_SOURCE_FIELDS_LIST
        - INCLUDE_NEW_FIELDS
        - ORDERED_PARTITION_KEYS_LIST
    TaskPropertiesObject:
      description: An object used to store task related info
      type: object
      properties:
        Key:
          $ref: '#/components/schemas/OperatorPropertiesKeys'
        Value:
          type: string
          maxLength: 2048
          pattern: .+
      required:
        - Key
        - Value
      additionalProperties: false
    AmplitudeConnectorOperator:
      type: string
      enum:
        - BETWEEN
    DatadogConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    DynatraceConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    GoogleAnalyticsConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
    InforNexusConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    MarketoConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    S3ConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SAPODataConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - CONTAINS
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SalesforceConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - CONTAINS
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    PardotConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - EQUAL_TO
        - NO_OP
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
    ServiceNowConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - CONTAINS
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SingularConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SlackConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - BETWEEN
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    TrendmicroConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    VeevaConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    ZendeskConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - GREATER_THAN
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    Operator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    Status:
      type: string
      enum:
        - Active
        - Draft
        - Errored
        - Suspended
    DataTransferApi:
      type: string
      enum:
        - AUTOMATIC
        - BULKV2
        - REST_SYNC
    SAPODataParallelismConfig:
      description: SAP Source connector parallelism factor
      type: object
      properties:
        maxParallelism:
          $ref: '#/components/schemas/SAPODataMaxParallelism'
      required:
        - maxParallelism
      additionalProperties: false
    SAPODataPaginationConfig:
      description: SAP Source connector page size
      type: object
      properties:
        maxPageSize:
          $ref: '#/components/schemas/SAPODataMaxPageSize'
      required:
        - maxPageSize
      additionalProperties: false
    SAPODataMaxParallelism:
      type: integer
      minimum: 1
      maximum: 10
    SAPODataMaxPageSize:
      type: integer
      minimum: 1
      maximum: 10000
    Flow:
      type: object
      properties:
        FlowArn:
          description: ARN identifier of the flow.
          type: string
          pattern: arn:aws:appflow:.*:[0-9]+:.*
          maxLength: 512
        FlowName:
          description: Name of the flow.
          type: string
          pattern: '[a-zA-Z0-9][\w!@#.-]+'
          maxLength: 256
          minLength: 1
        Description:
          description: Description of the flow.
          type: string
          pattern: '[\w!@#\-.?,\s]*'
          maxLength: 2048
        KMSArn:
          description: The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
          type: string
          pattern: arn:aws:kms:.*:[0-9]+:.*
          maxLength: 2048
          minLength: 20
        TriggerConfig:
          description: Trigger settings of the flow.
          $ref: '#/components/schemas/TriggerConfig'
        FlowStatus:
          description: Flow activation status for Scheduled- and Event-triggered flows
          type: string
          enum:
            - Active
            - Suspended
            - Draft
        SourceFlowConfig:
          description: Configurations of Source connector of the flow.
          $ref: '#/components/schemas/SourceFlowConfig'
        DestinationFlowConfigList:
          description: List of Destination connectors of the flow.
          type: array
          items:
            $ref: '#/components/schemas/DestinationFlowConfig'
        Tasks:
          description: List of tasks for the flow.
          type: array
          items:
            $ref: '#/components/schemas/Task'
        Tags:
          description: List of Tags.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        MetadataCatalogConfig:
          description: Configurations of metadata catalog of the flow.
          $ref: '#/components/schemas/MetadataCatalogConfig'
      required:
        - FlowName
        - Tasks
        - SourceFlowConfig
        - DestinationFlowConfigList
        - TriggerConfig
      x-stackql-resource-name: flow
      description: Resource schema for AWS::AppFlow::Flow.
      x-type-name: AWS::AppFlow::Flow
      x-stackql-primary-identifier:
        - FlowName
      x-create-only-properties:
        - FlowName
        - KMSArn
      x-read-only-properties:
        - FlowArn
      x-required-properties:
        - FlowName
        - Tasks
        - SourceFlowConfig
        - DestinationFlowConfigList
        - TriggerConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - appflow:CreateFlow
          - appflow:StartFlow
          - appflow:TagResource
          - appflow:ListTagsForResource
          - appflow:UseConnectorProfile
          - iam:PassRole
          - s3:ListAllMyBuckets
          - s3:GetBucketLocation
          - s3:GetBucketPolicy
          - kms:ListGrants
          - kms:ListKeys
          - kms:DescribeKey
          - kms:ListAliases
          - kms:CreateGrant
          - secretsmanager:CreateSecret
          - secretsmanager:PutResourcePolicy
        read:
          - appflow:DescribeFlow
          - appflow:ListTagsForResource
        update:
          - appflow:UpdateFlow
          - appflow:StartFlow
          - appflow:StopFlow
          - appflow:TagResource
          - appflow:UntagResource
          - appflow:ListTagsForResource
          - appflow:UseConnectorProfile
          - iam:PassRole
          - s3:ListAllMyBuckets
          - s3:GetBucketLocation
          - s3:GetBucketPolicy
          - kms:ListGrants
          - secretsmanager:CreateSecret
          - secretsmanager:PutResourcePolicy
        delete:
          - appflow:DeleteFlow
        list:
          - appflow:ListFlows
    CreateConnectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ConnectorLabel:
              description: ' The name of the connector. The name is unique for each ConnectorRegistration in your AWS account.'
              type: string
              pattern: '[a-zA-Z0-9][\w!@#.-]+'
              maxLength: 512
            ConnectorArn:
              description: ' The arn of the connector. The arn is unique for each ConnectorRegistration in your AWS account.'
              type: string
              pattern: arn:.*:appflow:.*:[0-9]+:.*
              maxLength: 512
            ConnectorProvisioningType:
              description: 'The provisioning type of the connector. Currently the only supported value is LAMBDA. '
              type: string
              pattern: '[a-zA-Z0-9][\w!@#.-]+'
              maxLength: 256
              minLength: 1
            ConnectorProvisioningConfig:
              description: Contains information about the configuration of the connector being registered.
              $ref: '#/components/schemas/ConnectorProvisioningConfig'
            Description:
              description: A description about the connector that's being registered.
              type: string
              pattern: '[\s\w/!@#+=.-]*'
              maxLength: 2048
          x-stackQL-stringOnly: true
      x-title: CreateConnectorRequest
      type: object
      required: []
    CreateConnectorProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ConnectorProfileArn:
              description: Unique identifier for connector profile resources
              type: string
              pattern: arn:aws:appflow:.*:[0-9]+:.*
              maxLength: 512
            ConnectorLabel:
              description: The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for CUSTOMCONNECTOR connector type/.
              type: string
              pattern: '[\w!@#.-]+'
              maxLength: 256
            ConnectorProfileName:
              description: The maximum number of items to retrieve in a single batch.
              type: string
              pattern: '[\w/!@#+=.-]+'
              maxLength: 256
            KMSArn:
              description: The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
              type: string
              pattern: arn:aws:kms:.*:[0-9]+:.*
              maxLength: 2048
              minLength: 20
            ConnectorType:
              description: List of Saas providers that need connector profile to be created
              $ref: '#/components/schemas/ConnectorType'
            ConnectionMode:
              description: Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular
              type: string
              enum:
                - Public
                - Private
            ConnectorProfileConfig:
              description: Connector specific configurations needed to create connector profile
              $ref: '#/components/schemas/ConnectorProfileConfig'
            CredentialsArn:
              description: A unique Arn for Connector-Profile resource
              type: string
              pattern: arn:aws:.*:.*:[0-9]+:.*
              maxLength: 512
          x-stackQL-stringOnly: true
      x-title: CreateConnectorProfileRequest
      type: object
      required: []
    CreateFlowRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FlowArn:
              description: ARN identifier of the flow.
              type: string
              pattern: arn:aws:appflow:.*:[0-9]+:.*
              maxLength: 512
            FlowName:
              description: Name of the flow.
              type: string
              pattern: '[a-zA-Z0-9][\w!@#.-]+'
              maxLength: 256
              minLength: 1
            Description:
              description: Description of the flow.
              type: string
              pattern: '[\w!@#\-.?,\s]*'
              maxLength: 2048
            KMSArn:
              description: The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.
              type: string
              pattern: arn:aws:kms:.*:[0-9]+:.*
              maxLength: 2048
              minLength: 20
            TriggerConfig:
              description: Trigger settings of the flow.
              $ref: '#/components/schemas/TriggerConfig'
            FlowStatus:
              description: Flow activation status for Scheduled- and Event-triggered flows
              type: string
              enum:
                - Active
                - Suspended
                - Draft
            SourceFlowConfig:
              description: Configurations of Source connector of the flow.
              $ref: '#/components/schemas/SourceFlowConfig'
            DestinationFlowConfigList:
              description: List of Destination connectors of the flow.
              type: array
              items:
                $ref: '#/components/schemas/DestinationFlowConfig'
            Tasks:
              description: List of tasks for the flow.
              type: array
              items:
                $ref: '#/components/schemas/Task'
            Tags:
              description: List of Tags.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            MetadataCatalogConfig:
              description: Configurations of metadata catalog of the flow.
              $ref: '#/components/schemas/MetadataCatalogConfig'
          x-stackQL-stringOnly: true
      x-title: CreateFlowRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    connectors:
      name: connectors
      id: aws.appflow.connectors
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::AppFlow::Connector
      x-identifiers:
        - ConnectorLabel
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Connector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::Connector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/connectors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ConnectorLabel') as connector_label,
              JSON_EXTRACT(Properties, '$.ConnectorArn') as connector_arn,
              JSON_EXTRACT(Properties, '$.ConnectorProvisioningType') as connector_provisioning_type,
              JSON_EXTRACT(Properties, '$.ConnectorProvisioningConfig') as connector_provisioning_config,
              JSON_EXTRACT(Properties, '$.Description') as description
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppFlow::Connector'
              AND data__Identifier = '<ConnectorLabel>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ConnectorLabel') as connector_label,
                JSON_EXTRACT(detail.Properties, '$.ConnectorArn') as connector_arn,
                JSON_EXTRACT(detail.Properties, '$.ConnectorProvisioningType') as connector_provisioning_type,
                JSON_EXTRACT(detail.Properties, '$.ConnectorProvisioningConfig') as connector_provisioning_config,
                JSON_EXTRACT(detail.Properties, '$.Description') as description
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppFlow::Connector'
                AND detail.data__TypeName = 'AWS::AppFlow::Connector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ConnectorLabel') as connector_label,
                  json_extract_path_text(Properties, 'ConnectorArn') as connector_arn,
                  json_extract_path_text(Properties, 'ConnectorProvisioningType') as connector_provisioning_type,
                  json_extract_path_text(Properties, 'ConnectorProvisioningConfig') as connector_provisioning_config,
                  json_extract_path_text(Properties, 'Description') as description
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppFlow::Connector'
                  AND data__Identifier = '<ConnectorLabel>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ConnectorLabel') as connector_label,
                    json_extract_path_text(detail.Properties, 'ConnectorArn') as connector_arn,
                    json_extract_path_text(detail.Properties, 'ConnectorProvisioningType') as connector_provisioning_type,
                    json_extract_path_text(detail.Properties, 'ConnectorProvisioningConfig') as connector_provisioning_config,
                    json_extract_path_text(detail.Properties, 'Description') as description
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppFlow::Connector'
                    AND detail.data__TypeName = 'AWS::AppFlow::Connector'
                    AND listing.region = 'us-east-1'
    connectors_list_only:
      name: connectors_list_only
      id: aws.appflow.connectors_list_only
      x-cfn-schema-name: Connector
      x-cfn-type-name: AWS::AppFlow::Connector
      x-identifiers:
        - ConnectorLabel
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectorLabel') as connector_label
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppFlow::Connector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectorLabel') as connector_label
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppFlow::Connector'
                AND region = 'us-east-1'
    connector_profiles:
      name: connector_profiles
      id: aws.appflow.connector_profiles
      x-cfn-schema-name: ConnectorProfile
      x-cfn-type-name: AWS::AppFlow::ConnectorProfile
      x-identifiers:
        - ConnectorProfileName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ConnectorProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::ConnectorProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::ConnectorProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::ConnectorProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/connector_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/connector_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/connector_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ConnectorProfileArn') as connector_profile_arn,
              JSON_EXTRACT(Properties, '$.ConnectorLabel') as connector_label,
              JSON_EXTRACT(Properties, '$.ConnectorProfileName') as connector_profile_name,
              JSON_EXTRACT(Properties, '$.KMSArn') as kms_arn,
              JSON_EXTRACT(Properties, '$.ConnectorType') as connector_type,
              JSON_EXTRACT(Properties, '$.ConnectionMode') as connection_mode,
              JSON_EXTRACT(Properties, '$.ConnectorProfileConfig') as connector_profile_config,
              JSON_EXTRACT(Properties, '$.CredentialsArn') as credentials_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppFlow::ConnectorProfile'
              AND data__Identifier = '<ConnectorProfileName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ConnectorProfileArn') as connector_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.ConnectorLabel') as connector_label,
                JSON_EXTRACT(detail.Properties, '$.ConnectorProfileName') as connector_profile_name,
                JSON_EXTRACT(detail.Properties, '$.KMSArn') as kms_arn,
                JSON_EXTRACT(detail.Properties, '$.ConnectorType') as connector_type,
                JSON_EXTRACT(detail.Properties, '$.ConnectionMode') as connection_mode,
                JSON_EXTRACT(detail.Properties, '$.ConnectorProfileConfig') as connector_profile_config,
                JSON_EXTRACT(detail.Properties, '$.CredentialsArn') as credentials_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppFlow::ConnectorProfile'
                AND detail.data__TypeName = 'AWS::AppFlow::ConnectorProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ConnectorProfileArn') as connector_profile_arn,
                  json_extract_path_text(Properties, 'ConnectorLabel') as connector_label,
                  json_extract_path_text(Properties, 'ConnectorProfileName') as connector_profile_name,
                  json_extract_path_text(Properties, 'KMSArn') as kms_arn,
                  json_extract_path_text(Properties, 'ConnectorType') as connector_type,
                  json_extract_path_text(Properties, 'ConnectionMode') as connection_mode,
                  json_extract_path_text(Properties, 'ConnectorProfileConfig') as connector_profile_config,
                  json_extract_path_text(Properties, 'CredentialsArn') as credentials_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppFlow::ConnectorProfile'
                  AND data__Identifier = '<ConnectorProfileName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ConnectorProfileArn') as connector_profile_arn,
                    json_extract_path_text(detail.Properties, 'ConnectorLabel') as connector_label,
                    json_extract_path_text(detail.Properties, 'ConnectorProfileName') as connector_profile_name,
                    json_extract_path_text(detail.Properties, 'KMSArn') as kms_arn,
                    json_extract_path_text(detail.Properties, 'ConnectorType') as connector_type,
                    json_extract_path_text(detail.Properties, 'ConnectionMode') as connection_mode,
                    json_extract_path_text(detail.Properties, 'ConnectorProfileConfig') as connector_profile_config,
                    json_extract_path_text(detail.Properties, 'CredentialsArn') as credentials_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppFlow::ConnectorProfile'
                    AND detail.data__TypeName = 'AWS::AppFlow::ConnectorProfile'
                    AND listing.region = 'us-east-1'
    connector_profiles_list_only:
      name: connector_profiles_list_only
      id: aws.appflow.connector_profiles_list_only
      x-cfn-schema-name: ConnectorProfile
      x-cfn-type-name: AWS::AppFlow::ConnectorProfile
      x-identifiers:
        - ConnectorProfileName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConnectorProfileName') as connector_profile_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppFlow::ConnectorProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConnectorProfileName') as connector_profile_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppFlow::ConnectorProfile'
                AND region = 'us-east-1'
    flows:
      name: flows
      id: aws.appflow.flows
      x-cfn-schema-name: Flow
      x-cfn-type-name: AWS::AppFlow::Flow
      x-identifiers:
        - FlowName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Flow&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::Flow"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::Flow"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AppFlow::Flow"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/flows/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/flows/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/flows/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FlowArn') as flow_arn,
              JSON_EXTRACT(Properties, '$.FlowName') as flow_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KMSArn') as kms_arn,
              JSON_EXTRACT(Properties, '$.TriggerConfig') as trigger_config,
              JSON_EXTRACT(Properties, '$.FlowStatus') as flow_status,
              JSON_EXTRACT(Properties, '$.SourceFlowConfig') as source_flow_config,
              JSON_EXTRACT(Properties, '$.DestinationFlowConfigList') as destination_flow_config_list,
              JSON_EXTRACT(Properties, '$.Tasks') as tasks,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.MetadataCatalogConfig') as metadata_catalog_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppFlow::Flow'
              AND data__Identifier = '<FlowName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FlowArn') as flow_arn,
                JSON_EXTRACT(detail.Properties, '$.FlowName') as flow_name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KMSArn') as kms_arn,
                JSON_EXTRACT(detail.Properties, '$.TriggerConfig') as trigger_config,
                JSON_EXTRACT(detail.Properties, '$.FlowStatus') as flow_status,
                JSON_EXTRACT(detail.Properties, '$.SourceFlowConfig') as source_flow_config,
                JSON_EXTRACT(detail.Properties, '$.DestinationFlowConfigList') as destination_flow_config_list,
                JSON_EXTRACT(detail.Properties, '$.Tasks') as tasks,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.MetadataCatalogConfig') as metadata_catalog_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AppFlow::Flow'
                AND detail.data__TypeName = 'AWS::AppFlow::Flow'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FlowArn') as flow_arn,
                  json_extract_path_text(Properties, 'FlowName') as flow_name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KMSArn') as kms_arn,
                  json_extract_path_text(Properties, 'TriggerConfig') as trigger_config,
                  json_extract_path_text(Properties, 'FlowStatus') as flow_status,
                  json_extract_path_text(Properties, 'SourceFlowConfig') as source_flow_config,
                  json_extract_path_text(Properties, 'DestinationFlowConfigList') as destination_flow_config_list,
                  json_extract_path_text(Properties, 'Tasks') as tasks,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'MetadataCatalogConfig') as metadata_catalog_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppFlow::Flow'
                  AND data__Identifier = '<FlowName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FlowArn') as flow_arn,
                    json_extract_path_text(detail.Properties, 'FlowName') as flow_name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KMSArn') as kms_arn,
                    json_extract_path_text(detail.Properties, 'TriggerConfig') as trigger_config,
                    json_extract_path_text(detail.Properties, 'FlowStatus') as flow_status,
                    json_extract_path_text(detail.Properties, 'SourceFlowConfig') as source_flow_config,
                    json_extract_path_text(detail.Properties, 'DestinationFlowConfigList') as destination_flow_config_list,
                    json_extract_path_text(detail.Properties, 'Tasks') as tasks,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'MetadataCatalogConfig') as metadata_catalog_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AppFlow::Flow'
                    AND detail.data__TypeName = 'AWS::AppFlow::Flow'
                    AND listing.region = 'us-east-1'
    flows_list_only:
      name: flows_list_only
      id: aws.appflow.flows_list_only
      x-cfn-schema-name: Flow
      x-cfn-type-name: AWS::AppFlow::Flow
      x-identifiers:
        - FlowName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FlowName') as flow_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppFlow::Flow'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FlowName') as flow_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppFlow::Flow'
                AND region = 'us-east-1'
    flow_tags:
      name: flow_tags
      id: aws.appflow.flow_tags
      x-cfn-schema-name: Flow
      x-cfn-type-name: AWS::AppFlow::Flow
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.FlowArn') as flow_arn,
              JSON_EXTRACT(detail.Properties, '$.FlowName') as flow_name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KMSArn') as kms_arn,
              JSON_EXTRACT(detail.Properties, '$.TriggerConfig') as trigger_config,
              JSON_EXTRACT(detail.Properties, '$.FlowStatus') as flow_status,
              JSON_EXTRACT(detail.Properties, '$.SourceFlowConfig') as source_flow_config,
              JSON_EXTRACT(detail.Properties, '$.DestinationFlowConfigList') as destination_flow_config_list,
              JSON_EXTRACT(detail.Properties, '$.Tasks') as tasks,
              JSON_EXTRACT(detail.Properties, '$.MetadataCatalogConfig') as metadata_catalog_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AppFlow::Flow'
              AND detail.data__TypeName = 'AWS::AppFlow::Flow'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'FlowArn') as flow_arn,
                json_extract_path_text(detail.Properties, 'FlowName') as flow_name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KMSArn') as kms_arn,
                json_extract_path_text(detail.Properties, 'TriggerConfig') as trigger_config,
                json_extract_path_text(detail.Properties, 'FlowStatus') as flow_status,
                json_extract_path_text(detail.Properties, 'SourceFlowConfig') as source_flow_config,
                json_extract_path_text(detail.Properties, 'DestinationFlowConfigList') as destination_flow_config_list,
                json_extract_path_text(detail.Properties, 'Tasks') as tasks,
                json_extract_path_text(detail.Properties, 'MetadataCatalogConfig') as metadata_catalog_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AppFlow::Flow'
                AND detail.data__TypeName = 'AWS::AppFlow::Flow'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Connector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConnector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConnectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ConnectorProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConnectorProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConnectorProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Flow&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFlow
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFlowRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
