openapi: 3.0.0
info:
  title: B2BI
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    CapabilityConfiguration:
      oneOf:
        - type: object
          title: Edi
          properties:
            Edi:
              $ref: '#/components/schemas/EdiConfiguration'
          required:
            - Edi
          additionalProperties: false
    CapabilityType:
      type: string
      enum:
        - edi
    EdiConfiguration:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/EdiType'
        InputLocation:
          $ref: '#/components/schemas/S3Location'
        OutputLocation:
          $ref: '#/components/schemas/S3Location'
        TransformerId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
      required:
        - InputLocation
        - OutputLocation
        - TransformerId
        - Type
      additionalProperties: false
    EdiType:
      oneOf:
        - type: object
          title: X12Details
          properties:
            X12Details:
              $ref: '#/components/schemas/X12Details'
          required:
            - X12Details
          additionalProperties: false
    S3Location:
      type: object
      properties:
        BucketName:
          type: string
          maxLength: 63
          minLength: 3
        Key:
          type: string
          maxLength: 1024
          minLength: 0
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    X12Details:
      type: object
      properties:
        TransactionSet:
          $ref: '#/components/schemas/X12TransactionSet'
        Version:
          $ref: '#/components/schemas/X12Version'
      additionalProperties: false
    X12TransactionSet:
      type: string
      enum:
        - X12_110
        - X12_180
        - X12_204
        - X12_210
        - X12_211
        - X12_214
        - X12_215
        - X12_259
        - X12_260
        - X12_266
        - X12_269
        - X12_270
        - X12_271
        - X12_274
        - X12_275
        - X12_276
        - X12_277
        - X12_278
        - X12_310
        - X12_315
        - X12_322
        - X12_404
        - X12_410
        - X12_417
        - X12_421
        - X12_426
        - X12_810
        - X12_820
        - X12_824
        - X12_830
        - X12_832
        - X12_834
        - X12_835
        - X12_837
        - X12_844
        - X12_846
        - X12_849
        - X12_850
        - X12_852
        - X12_855
        - X12_856
        - X12_860
        - X12_861
        - X12_864
        - X12_865
        - X12_869
        - X12_870
        - X12_940
        - X12_945
        - X12_990
        - X12_997
        - X12_999
        - X12_270_X279
        - X12_271_X279
        - X12_275_X210
        - X12_275_X211
        - X12_276_X212
        - X12_277_X212
        - X12_277_X214
        - X12_277_X364
        - X12_278_X217
        - X12_820_X218
        - X12_820_X306
        - X12_824_X186
        - X12_834_X220
        - X12_834_X307
        - X12_834_X318
        - X12_835_X221
        - X12_837_X222
        - X12_837_X223
        - X12_837_X224
        - X12_837_X291
        - X12_837_X292
        - X12_837_X298
        - X12_999_X231
    X12Version:
      type: string
      enum:
        - VERSION_4010
        - VERSION_4030
        - VERSION_5010
        - VERSION_5010_HIPAA
    Capability:
      type: object
      properties:
        CapabilityArn:
          type: string
          maxLength: 255
          minLength: 1
        CapabilityId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
        Configuration:
          $ref: '#/components/schemas/CapabilityConfiguration'
        CreatedAt:
          type: string
          format: date-time
        InstructionsDocuments:
          type: array
          items:
            $ref: '#/components/schemas/S3Location'
          maxItems: 5
          minItems: 0
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 254
          minLength: 1
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        Type:
          $ref: '#/components/schemas/CapabilityType'
      required:
        - Configuration
        - Name
        - Type
      x-stackql-resource-name: capability
      description: Definition of AWS::B2BI::Capability Resource Type
      x-type-name: AWS::B2BI::Capability
      x-stackql-primary-identifier:
        - CapabilityId
      x-create-only-properties:
        - Type
      x-read-only-properties:
        - CapabilityArn
        - CapabilityId
        - CreatedAt
        - ModifiedAt
      x-required-properties:
        - Configuration
        - Name
        - Type
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - b2bi:CreateCapability
          - b2bi:TagResource
          - events:ListRules
          - events:PutRule
          - events:PutTargets
          - logs:CreateLogDelivery
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:DescribeResourcePolicies
          - logs:ListLogDeliveries
          - logs:PutLogEvents
          - logs:PutResourcePolicy
          - s3:GetObject
          - s3:ListBucket
        read:
          - b2bi:GetCapability
          - b2bi:ListTagsForResource
        update:
          - b2bi:TagResource
          - b2bi:UntagResource
          - b2bi:UpdateCapability
        delete:
          - b2bi:DeleteCapability
        list:
          - b2bi:ListCapabilities
    Partnership:
      type: object
      properties:
        Capabilities:
          type: array
          items:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[a-zA-Z0-9_-]+$
        CreatedAt:
          type: string
          format: date-time
        Email:
          type: string
          maxLength: 254
          minLength: 5
          pattern: ^[\w\.\-]+@[\w\.\-]+$
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 254
          minLength: 1
        PartnershipArn:
          type: string
          maxLength: 255
          minLength: 1
        PartnershipId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
        Phone:
          type: string
          maxLength: 22
          minLength: 7
          pattern: ^\+?([0-9 \t\-()\/]{7,})(?:\s*(?:#|x\.?|ext\.?|extension) \t*(\d+))?$
        ProfileId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        TradingPartnerId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
      required:
        - Email
        - Name
        - ProfileId
      x-stackql-resource-name: partnership
      description: Definition of AWS::B2BI::Partnership Resource Type
      x-type-name: AWS::B2BI::Partnership
      x-stackql-primary-identifier:
        - PartnershipId
      x-create-only-properties:
        - Email
        - Phone
        - ProfileId
      x-read-only-properties:
        - CreatedAt
        - ModifiedAt
        - PartnershipArn
        - PartnershipId
        - TradingPartnerId
      x-required-properties:
        - Email
        - Name
        - ProfileId
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - b2bi:CreatePartnership
          - b2bi:TagResource
          - s3:PutObject
        read:
          - b2bi:GetPartnership
          - b2bi:ListTagsForResource
        update:
          - b2bi:TagResource
          - b2bi:UntagResource
          - b2bi:UpdatePartnership
        delete:
          - b2bi:DeletePartnership
        list:
          - b2bi:ListPartnerships
    Logging:
      type: string
      enum:
        - ENABLED
        - DISABLED
    Profile:
      type: object
      properties:
        BusinessName:
          type: string
          maxLength: 254
          minLength: 1
        CreatedAt:
          type: string
          format: date-time
        Email:
          type: string
          maxLength: 254
          minLength: 5
          pattern: ^[\w\.\-]+@[\w\.\-]+$
        LogGroupName:
          type: string
          maxLength: 512
          minLength: 1
        Logging:
          $ref: '#/components/schemas/Logging'
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 254
          minLength: 1
        Phone:
          type: string
          maxLength: 22
          minLength: 7
          pattern: ^\+?([0-9 \t\-()\/]{7,})(?:\s*(?:#|x\.?|ext\.?|extension) \t*(\d+))?$
        ProfileArn:
          type: string
          maxLength: 255
          minLength: 1
        ProfileId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
      required:
        - BusinessName
        - Logging
        - Name
        - Phone
      x-stackql-resource-name: profile
      description: Definition of AWS::B2BI::Profile Resource Type
      x-type-name: AWS::B2BI::Profile
      x-stackql-primary-identifier:
        - ProfileId
      x-create-only-properties:
        - Logging
      x-read-only-properties:
        - CreatedAt
        - LogGroupName
        - ModifiedAt
        - ProfileArn
        - ProfileId
      x-required-properties:
        - BusinessName
        - Logging
        - Name
        - Phone
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - b2bi:CreateProfile
          - b2bi:TagResource
          - logs:CreateLogDelivery
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:DescribeResourcePolicies
          - logs:ListLogDeliveries
          - logs:PutLogEvents
          - logs:PutResourcePolicy
        read:
          - b2bi:GetProfile
          - b2bi:ListTagsForResource
        update:
          - b2bi:TagResource
          - b2bi:UntagResource
          - b2bi:UpdateProfile
        delete:
          - b2bi:DeleteProfile
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
        list:
          - b2bi:ListProfiles
    FileFormat:
      type: string
      enum:
        - XML
        - JSON
    TransformerStatus:
      type: string
      enum:
        - active
        - inactive
    Transformer:
      type: object
      properties:
        CreatedAt:
          type: string
          format: date-time
        EdiType:
          $ref: '#/components/schemas/EdiType'
        FileFormat:
          $ref: '#/components/schemas/FileFormat'
        MappingTemplate:
          type: string
          maxLength: 350000
          minLength: 0
        ModifiedAt:
          type: string
          format: date-time
        Name:
          type: string
          maxLength: 254
          minLength: 1
        SampleDocument:
          type: string
          maxLength: 1024
          minLength: 0
        Status:
          $ref: '#/components/schemas/TransformerStatus'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
        TransformerArn:
          type: string
          maxLength: 255
          minLength: 1
        TransformerId:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]+$
      required:
        - EdiType
        - FileFormat
        - MappingTemplate
        - Name
        - Status
      x-stackql-resource-name: transformer
      description: Definition of AWS::B2BI::Transformer Resource Type
      x-type-name: AWS::B2BI::Transformer
      x-stackql-primary-identifier:
        - TransformerId
      x-read-only-properties:
        - CreatedAt
        - ModifiedAt
        - TransformerArn
        - TransformerId
      x-required-properties:
        - EdiType
        - FileFormat
        - MappingTemplate
        - Name
        - Status
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - b2bi:CreateTransformer
          - b2bi:TagResource
          - b2bi:UpdateTransformer
          - logs:CreateLogDelivery
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:DescribeLogGroups
          - logs:DescribeLogStreams
          - logs:DescribeResourcePolicies
          - logs:ListLogDeliveries
          - logs:PutLogEvents
          - logs:PutResourcePolicy
        read:
          - b2bi:GetTransformer
          - b2bi:ListTagsForResource
        update:
          - b2bi:TagResource
          - b2bi:UntagResource
          - b2bi:UpdateTransformer
        delete:
          - b2bi:DeleteTransformer
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
        list:
          - b2bi:ListTransformers
    CreateCapabilityRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CapabilityArn:
              type: string
              maxLength: 255
              minLength: 1
            CapabilityId:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
            Configuration:
              $ref: '#/components/schemas/CapabilityConfiguration'
            CreatedAt:
              type: string
              format: date-time
            InstructionsDocuments:
              type: array
              items:
                $ref: '#/components/schemas/S3Location'
              maxItems: 5
              minItems: 0
            ModifiedAt:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 254
              minLength: 1
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            Type:
              $ref: '#/components/schemas/CapabilityType'
          x-stackQL-stringOnly: true
      x-title: CreateCapabilityRequest
      type: object
      required: []
    CreatePartnershipRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Capabilities:
              type: array
              items:
                type: string
                maxLength: 64
                minLength: 1
                pattern: ^[a-zA-Z0-9_-]+$
            CreatedAt:
              type: string
              format: date-time
            Email:
              type: string
              maxLength: 254
              minLength: 5
              pattern: ^[\w\.\-]+@[\w\.\-]+$
            ModifiedAt:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 254
              minLength: 1
            PartnershipArn:
              type: string
              maxLength: 255
              minLength: 1
            PartnershipId:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
            Phone:
              type: string
              maxLength: 22
              minLength: 7
              pattern: ^\+?([0-9 \t\-()\/]{7,})(?:\s*(?:#|x\.?|ext\.?|extension) \t*(\d+))?$
            ProfileId:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            TradingPartnerId:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
          x-stackQL-stringOnly: true
      x-title: CreatePartnershipRequest
      type: object
      required: []
    CreateProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            BusinessName:
              type: string
              maxLength: 254
              minLength: 1
            CreatedAt:
              type: string
              format: date-time
            Email:
              type: string
              maxLength: 254
              minLength: 5
              pattern: ^[\w\.\-]+@[\w\.\-]+$
            LogGroupName:
              type: string
              maxLength: 512
              minLength: 1
            Logging:
              $ref: '#/components/schemas/Logging'
            ModifiedAt:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 254
              minLength: 1
            Phone:
              type: string
              maxLength: 22
              minLength: 7
              pattern: ^\+?([0-9 \t\-()\/]{7,})(?:\s*(?:#|x\.?|ext\.?|extension) \t*(\d+))?$
            ProfileArn:
              type: string
              maxLength: 255
              minLength: 1
            ProfileId:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
          x-stackQL-stringOnly: true
      x-title: CreateProfileRequest
      type: object
      required: []
    CreateTransformerRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CreatedAt:
              type: string
              format: date-time
            EdiType:
              $ref: '#/components/schemas/EdiType'
            FileFormat:
              $ref: '#/components/schemas/FileFormat'
            MappingTemplate:
              type: string
              maxLength: 350000
              minLength: 0
            ModifiedAt:
              type: string
              format: date-time
            Name:
              type: string
              maxLength: 254
              minLength: 1
            SampleDocument:
              type: string
              maxLength: 1024
              minLength: 0
            Status:
              $ref: '#/components/schemas/TransformerStatus'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
            TransformerArn:
              type: string
              maxLength: 255
              minLength: 1
            TransformerId:
              type: string
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9_-]+$
          x-stackQL-stringOnly: true
      x-title: CreateTransformerRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    capabilities:
      name: capabilities
      id: aws.b2bi.capabilities
      x-cfn-schema-name: Capability
      x-cfn-type-name: AWS::B2BI::Capability
      x-identifiers:
        - CapabilityId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Capability&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Capability"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Capability"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Capability"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/capabilities/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CapabilityArn') as capability_arn,
              JSON_EXTRACT(Properties, '$.CapabilityId') as capability_id,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.InstructionsDocuments') as instructions_documents,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Capability'
              AND data__Identifier = '<CapabilityId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.CapabilityId') as capability_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Capability'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CapabilityArn') as capability_arn,
                  json_extract_path_text(Properties, 'CapabilityId') as capability_id,
                  json_extract_path_text(Properties, 'Configuration') as configuration,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'InstructionsDocuments') as instructions_documents,
                  json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Type') as type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Capability'
                  AND data__Identifier = '<CapabilityId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'CapabilityId') as capability_id
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Capability'
                    AND region = 'us-east-1'
    partnerships:
      name: partnerships
      id: aws.b2bi.partnerships
      x-cfn-schema-name: Partnership
      x-cfn-type-name: AWS::B2BI::Partnership
      x-identifiers:
        - PartnershipId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Partnership&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Partnership"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Partnership"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Partnership"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/partnerships/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/partnerships/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/partnerships/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Email') as email,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PartnershipArn') as partnership_arn,
              JSON_EXTRACT(Properties, '$.PartnershipId') as partnership_id,
              JSON_EXTRACT(Properties, '$.Phone') as phone,
              JSON_EXTRACT(Properties, '$.ProfileId') as profile_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TradingPartnerId') as trading_partner_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Partnership'
              AND data__Identifier = '<PartnershipId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.PartnershipId') as partnership_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Partnership'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Capabilities') as capabilities,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Email') as email,
                  json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'PartnershipArn') as partnership_arn,
                  json_extract_path_text(Properties, 'PartnershipId') as partnership_id,
                  json_extract_path_text(Properties, 'Phone') as phone,
                  json_extract_path_text(Properties, 'ProfileId') as profile_id,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TradingPartnerId') as trading_partner_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Partnership'
                  AND data__Identifier = '<PartnershipId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'PartnershipId') as partnership_id
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Partnership'
                    AND region = 'us-east-1'
    profiles:
      name: profiles
      id: aws.b2bi.profiles
      x-cfn-schema-name: Profile
      x-cfn-type-name: AWS::B2BI::Profile
      x-identifiers:
        - ProfileId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Profile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Profile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Profile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Profile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BusinessName') as business_name,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Email') as email,
              JSON_EXTRACT(Properties, '$.LogGroupName') as log_group_name,
              JSON_EXTRACT(Properties, '$.Logging') as logging,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Phone') as phone,
              JSON_EXTRACT(Properties, '$.ProfileArn') as profile_arn,
              JSON_EXTRACT(Properties, '$.ProfileId') as profile_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Profile'
              AND data__Identifier = '<ProfileId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.ProfileId') as profile_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Profile'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'BusinessName') as business_name,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Email') as email,
                  json_extract_path_text(Properties, 'LogGroupName') as log_group_name,
                  json_extract_path_text(Properties, 'Logging') as logging,
                  json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Phone') as phone,
                  json_extract_path_text(Properties, 'ProfileArn') as profile_arn,
                  json_extract_path_text(Properties, 'ProfileId') as profile_id,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Profile'
                  AND data__Identifier = '<ProfileId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'ProfileId') as profile_id
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Profile'
                    AND region = 'us-east-1'
    transformers:
      name: transformers
      id: aws.b2bi.transformers
      x-cfn-schema-name: Transformer
      x-cfn-type-name: AWS::B2BI::Transformer
      x-identifiers:
        - TransformerId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Transformer&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Transformer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Transformer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::B2BI::Transformer"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/transformers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/transformers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/transformers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.EdiType') as edi_type,
              JSON_EXTRACT(Properties, '$.FileFormat') as file_format,
              JSON_EXTRACT(Properties, '$.MappingTemplate') as mapping_template,
              JSON_EXTRACT(Properties, '$.ModifiedAt') as modified_at,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SampleDocument') as sample_document,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TransformerArn') as transformer_arn,
              JSON_EXTRACT(Properties, '$.TransformerId') as transformer_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Transformer'
              AND data__Identifier = '<TransformerId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.TransformerId') as transformer_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Transformer'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'EdiType') as edi_type,
                  json_extract_path_text(Properties, 'FileFormat') as file_format,
                  json_extract_path_text(Properties, 'MappingTemplate') as mapping_template,
                  json_extract_path_text(Properties, 'ModifiedAt') as modified_at,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SampleDocument') as sample_document,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TransformerArn') as transformer_arn,
                  json_extract_path_text(Properties, 'TransformerId') as transformer_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::B2BI::Transformer'
                  AND data__Identifier = '<TransformerId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'TransformerId') as transformer_id
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::B2BI::Transformer'
                    AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Capability&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCapability
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCapabilityRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Partnership&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePartnership
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePartnershipRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Profile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Transformer&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTransformer
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTransformerRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
