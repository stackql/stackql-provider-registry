openapi: 3.0.0
info:
  title: Route53Resolver
  version: 1.0.0
paths: {}
components:
  schemas:
    Domains:
      description: An inline list of domains to use for this domain list.
      type: array
      uniqueItems: true
      items:
        description: FirewallDomainName
        type: string
        minLength: 1
        maxLength: 255
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Value
        - Key
    FirewallDomainList:
      type: object
      properties:
        Id:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
        Name:
          description: FirewallDomainListName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 1
          maxLength: 64
        DomainCount:
          description: Count
          type: integer
          minimum: 0
        Status:
          description: ResolverFirewallDomainList, possible values are COMPLETE, DELETING, UPDATING, COMPLETE_IMPORT_FAILED, IMPORTING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
          type: string
          enum:
            - COMPLETE
            - DELETING
            - UPDATING
            - COMPLETE_IMPORT_FAILED
            - IMPORTING
            - INACTIVE_OWNER_ACCOUNT_CLOSED
        StatusMessage:
          description: FirewallDomainListAssociationStatus
          type: string
        ManagedOwnerName:
          description: ServicePrincipal
          type: string
          minLength: 1
          maxLength: 512
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
        ModificationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
        Domains:
          $ref: '#/components/schemas/Domains'
        DomainFileUrl:
          description: S3 URL to import domains from.
          type: string
          minLength: 1
          maxLength: 1024
        Tags:
          description: Tags
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: firewall_domain_list
      x-stackql-primaryIdentifier:
        - Id
    FirewallRule:
      description: Firewall Rule associating the Rule Group to a Domain List
      type: object
      properties:
        FirewallDomainListId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        Priority:
          description: Rule Priority
          type: integer
        Action:
          description: Rule Action
          type: string
          enum:
            - ALLOW
            - BLOCK
            - ALERT
        BlockResponse:
          description: BlockResponse
          type: string
          enum:
            - NODATA
            - NXDOMAIN
            - OVERRIDE
        BlockOverrideDomain:
          description: BlockOverrideDomain
          type: string
          minLength: 1
          maxLength: 255
        BlockOverrideDnsType:
          description: BlockOverrideDnsType
          type: string
          enum:
            - CNAME
        BlockOverrideTtl:
          description: BlockOverrideTtl
          type: integer
          minimum: 0
          maximum: 604800
      required:
        - FirewallDomainListId
        - Priority
        - Action
      additionalProperties: false
    FirewallRuleGroup:
      type: object
      properties:
        Id:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
        Name:
          description: FirewallRuleGroupName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 1
          maxLength: 64
        RuleCount:
          description: Count
          type: integer
        Status:
          description: ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
          type: string
          enum:
            - COMPLETE
            - DELETING
            - UPDATING
            - INACTIVE_OWNER_ACCOUNT_CLOSED
        StatusMessage:
          description: FirewallRuleGroupStatus
          type: string
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
        ShareStatus:
          description: ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
          type: string
          enum:
            - NOT_SHARED
            - SHARED_WITH_ME
            - SHARED_BY_ME
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
        ModificationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
        FirewallRules:
          description: FirewallRules
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/FirewallRule'
        Tags:
          description: Tags
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: firewall_rule_group
      x-stackql-primaryIdentifier:
        - Id
    FirewallRuleGroupAssociation:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
        FirewallRuleGroupId:
          description: FirewallRuleGroupId
          type: string
          minLength: 1
          maxLength: 64
        VpcId:
          description: VpcId
          type: string
          minLength: 1
          maxLength: 64
        Name:
          description: FirewallRuleGroupAssociationName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 0
          maxLength: 64
        Priority:
          description: Priority
          type: integer
        MutationProtection:
          description: MutationProtectionStatus
          type: string
          enum:
            - ENABLED
            - DISABLED
        ManagedOwnerName:
          description: ServicePrincipal
          type: string
          minLength: 1
          maxLength: 512
        Status:
          description: ResolverFirewallRuleGroupAssociation, possible values are COMPLETE, DELETING, UPDATING, and INACTIVE_OWNER_ACCOUNT_CLOSED.
          type: string
          enum:
            - COMPLETE
            - DELETING
            - UPDATING
            - INACTIVE_OWNER_ACCOUNT_CLOSED
        StatusMessage:
          description: FirewallDomainListAssociationStatus
          type: string
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
        ModificationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
        Tags:
          description: Tags
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FirewallRuleGroupId
        - VpcId
        - Priority
      x-stackql-resource-name: firewall_rule_group_association
      x-stackql-primaryIdentifier:
        - Id
    ResolverConfig:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
        ResourceId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        AutodefinedReverse:
          description: ResolverAutodefinedReverseStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
          type: string
          enum:
            - ENABLING
            - ENABLED
            - DISABLING
            - DISABLED
        AutodefinedReverseFlag:
          description: Represents the desired status of AutodefinedReverse. The only supported value on creation is DISABLE. Deletion of this resource will return AutodefinedReverse to its default value (ENABLED).
          type: string
          enum:
            - DISABLE
      required:
        - ResourceId
        - AutodefinedReverseFlag
      x-stackql-resource-name: resolver_config
      x-stackql-primaryIdentifier:
        - Id
    ResolverDNSSECConfig:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
        ResourceId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        ValidationStatus:
          description: ResolverDNSSECValidationStatus, possible values are ENABLING, ENABLED, DISABLING AND DISABLED.
          type: string
          enum:
            - ENABLING
            - ENABLED
            - DISABLING
            - DISABLED
      x-stackql-resource-name: resolverdnssec_config
      x-stackql-primaryIdentifier:
        - Id
    IpAddressRequest:
      type: object
      additionalProperties: false
      properties:
        SubnetId:
          type: string
        Ipv6:
          type: string
        Ip:
          type: string
      required:
        - SubnetId
    ResolverEndpoint:
      type: object
      properties:
        IpAddresses:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/IpAddressRequest'
        ResolverEndpointId:
          type: string
        IpAddressCount:
          type: string
        OutpostArn:
          type: string
        PreferredInstanceType:
          type: string
        ResolverEndpointType:
          type: string
        Arn:
          type: string
        Direction:
          type: string
        HostVPCId:
          type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Name:
          type: string
      required:
        - IpAddresses
        - Direction
        - SecurityGroupIds
      x-stackql-resource-name: resolver_endpoint
      x-stackql-primaryIdentifier:
        - ResolverEndpointId
    ResolverQueryLoggingConfig:
      type: object
      properties:
        Id:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        OwnerId:
          description: AccountId
          type: string
          minLength: 12
          maxLength: 32
        Status:
          description: ResolverQueryLogConfigStatus, possible values are CREATING, CREATED, DELETED AND FAILED.
          type: string
          enum:
            - CREATING
            - CREATED
            - DELETING
            - FAILED
        ShareStatus:
          description: ShareStatus, possible values are NOT_SHARED, SHARED_WITH_ME, SHARED_BY_ME.
          type: string
          enum:
            - NOT_SHARED
            - SHARED_WITH_ME
            - SHARED_BY_ME
        AssociationCount:
          description: Count
          type: integer
        Arn:
          description: Arn
          type: string
          minLength: 1
          maxLength: 600
        Name:
          description: ResolverQueryLogConfigName
          type: string
          pattern: (?!^[0-9]+$)([a-zA-Z0-9\-_' ']+)
          minLength: 1
          maxLength: 64
        CreatorRequestId:
          description: The id of the creator request.
          type: string
          minLength: 1
          maxLength: 255
        DestinationArn:
          description: destination arn
          type: string
          minLength: 1
          maxLength: 600
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
      x-stackql-resource-name: resolver_query_logging_config
      x-stackql-primaryIdentifier:
        - Id
    ResolverQueryLoggingConfigAssociation:
      type: object
      properties:
        Id:
          description: Id
          type: string
          minLength: 1
          maxLength: 64
        ResolverQueryLogConfigId:
          description: ResolverQueryLogConfigId
          type: string
          minLength: 1
          maxLength: 64
        ResourceId:
          description: ResourceId
          type: string
          minLength: 1
          maxLength: 64
        Status:
          description: ResolverQueryLogConfigAssociationStatus
          type: string
          enum:
            - CREATING
            - ACTIVE
            - ACTION_NEEDED
            - DELETING
            - FAILED
            - OVERRIDDEN
        Error:
          description: ResolverQueryLogConfigAssociationError
          type: string
          enum:
            - NONE
            - DESTINATION_NOT_FOUND
            - ACCESS_DENIED
        ErrorMessage:
          description: ResolverQueryLogConfigAssociationErrorMessage
          type: string
        CreationTime:
          description: Rfc3339TimeString
          type: string
          minLength: 20
          maxLength: 40
      x-stackql-resource-name: resolver_query_logging_config_association
      x-stackql-primaryIdentifier:
        - Id
    TargetAddress:
      type: object
      additionalProperties: false
      properties:
        Ip:
          type: string
          description: 'One IP address that you want to forward DNS queries to. You can specify only IPv4 addresses. '
        Ipv6:
          type: string
          description: 'One IPv6 address that you want to forward DNS queries to. You can specify only IPv6 addresses. '
        Port:
          type: string
          description: 'The port at Ip that you want to forward DNS queries to. '
          minLength: 0
          maxLength: 65535
    ResolverRule:
      type: object
      properties:
        ResolverEndpointId:
          type: string
          description: The ID of the endpoint that the rule is associated with.
          minLength: 1
          maxLength: 64
        DomainName:
          type: string
          description: DNS queries for this domain name are forwarded to the IP addresses that are specified in TargetIps
          minLength: 1
          maxLength: 256
        Name:
          type: string
          description: The name for the Resolver rule
          minLength: 0
          maxLength: 64
        RuleType:
          type: string
          description: When you want to forward DNS queries for specified domain name to resolvers on your network, specify FORWARD. When you have a forwarding rule to forward DNS queries for a domain to your network and you want Resolver to process queries for a subdomain of that domain, specify SYSTEM.
          enum:
            - FORWARD
            - SYSTEM
            - RECURSIVE
        Tags:
          type: array
          description: An array of key-value pairs to apply to this resource.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        TargetIps:
          type: array
          description: An array that contains the IP addresses and ports that an outbound endpoint forwards DNS queries to. Typically, these are the IP addresses of DNS resolvers on your network. Specify IPv4 addresses. IPv6 is not supported.
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TargetAddress'
        Arn:
          type: string
          description: The Amazon Resource Name (ARN) of the resolver rule.
        ResolverRuleId:
          type: string
          description: The ID of the endpoint that the rule is associated with.
      required:
        - DomainName
        - RuleType
      x-stackql-resource-name: resolver_rule
      x-stackql-primaryIdentifier:
        - ResolverRuleId
    ResolverRuleAssociation:
      type: object
      properties:
        VPCId:
          description: The ID of the VPC that you associated the Resolver rule with.
          type: string
        ResolverRuleId:
          description: The ID of the Resolver rule that you associated with the VPC that is specified by VPCId.
          type: string
        ResolverRuleAssociationId:
          description: Primary Identifier for Resolver Rule Association
          type: string
        Name:
          description: The name of an association between a Resolver rule and a VPC.
          type: string
      required:
        - VPCId
        - ResolverRuleId
      x-stackql-resource-name: resolver_rule_association
      x-stackql-primaryIdentifier:
        - ResolverRuleAssociationId
  x-stackQL-resources:
    firewall_domain_lists:
      name: firewall_domain_lists
      id: aws.route53resolver.firewall_domain_lists
      x-cfn-schema-name: FirewallDomainList
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::FirewallDomainList'
    firewall_domain_list:
      name: firewall_domain_list
      id: aws.route53resolver.firewall_domain_list
      x-cfn-schema-name: FirewallDomainList
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DomainCount') as domain_count,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.ManagedOwnerName') as managed_owner_name,
              JSON_EXTRACT(Properties, '$.CreatorRequestId') as creator_request_id,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ModificationTime') as modification_time,
              JSON_EXTRACT(Properties, '$.DomainFileUrl') as domain_file_url,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::FirewallDomainList'
    firewall_rule_groups:
      name: firewall_rule_groups
      id: aws.route53resolver.firewall_rule_groups
      x-cfn-schema-name: FirewallRuleGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::FirewallRuleGroup'
    firewall_rule_group:
      name: firewall_rule_group
      id: aws.route53resolver.firewall_rule_group
      x-cfn-schema-name: FirewallRuleGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleCount') as rule_count,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.ShareStatus') as share_status,
              JSON_EXTRACT(Properties, '$.CreatorRequestId') as creator_request_id,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ModificationTime') as modification_time,
              JSON_EXTRACT(Properties, '$.FirewallRules') as firewall_rules,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::FirewallRuleGroup'
    firewall_rule_group_associations:
      name: firewall_rule_group_associations
      id: aws.route53resolver.firewall_rule_group_associations
      x-cfn-schema-name: FirewallRuleGroupAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::FirewallRuleGroupAssociation'
    firewall_rule_group_association:
      name: firewall_rule_group_association
      id: aws.route53resolver.firewall_rule_group_association
      x-cfn-schema-name: FirewallRuleGroupAssociation
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.FirewallRuleGroupId') as firewall_rule_group_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.MutationProtection') as mutation_protection,
              JSON_EXTRACT(Properties, '$.ManagedOwnerName') as managed_owner_name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.CreatorRequestId') as creator_request_id,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time,
              JSON_EXTRACT(Properties, '$.ModificationTime') as modification_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::FirewallRuleGroupAssociation'
    resolver_configs:
      name: resolver_configs
      id: aws.route53resolver.resolver_configs
      x-cfn-schema-name: ResolverConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverConfig'
    resolver_config:
      name: resolver_config
      id: aws.route53resolver.resolver_config
      x-cfn-schema-name: ResolverConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.AutodefinedReverse') as autodefined_reverse,
              JSON_EXTRACT(Properties, '$.AutodefinedReverseFlag') as autodefined_reverse_flag
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverConfig'
    resolverdnssec_configs:
      name: resolverdnssec_configs
      id: aws.route53resolver.resolverdnssec_configs
      x-cfn-schema-name: ResolverDNSSECConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverDNSSECConfig'
    resolverdnssec_config:
      name: resolverdnssec_config
      id: aws.route53resolver.resolverdnssec_config
      x-cfn-schema-name: ResolverDNSSECConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.ValidationStatus') as validation_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverDNSSECConfig'
    resolver_endpoints:
      name: resolver_endpoints
      id: aws.route53resolver.resolver_endpoints
      x-cfn-schema-name: ResolverEndpoint
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResolverEndpointId') as resolver_endpoint_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverEndpoint'
    resolver_endpoint:
      name: resolver_endpoint
      id: aws.route53resolver.resolver_endpoint
      x-cfn-schema-name: ResolverEndpoint
      x-type: get
      x-identifiers:
        - ResolverEndpointId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IpAddresses') as ip_addresses,
              JSON_EXTRACT(Properties, '$.ResolverEndpointId') as resolver_endpoint_id,
              JSON_EXTRACT(Properties, '$.IpAddressCount') as ip_address_count,
              JSON_EXTRACT(Properties, '$.OutpostArn') as outpost_arn,
              JSON_EXTRACT(Properties, '$.PreferredInstanceType') as preferred_instance_type,
              JSON_EXTRACT(Properties, '$.ResolverEndpointType') as resolver_endpoint_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Direction') as direction,
              JSON_EXTRACT(Properties, '$.HostVPCId') as host_vp_cid,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverEndpoint'
    resolver_query_logging_configs:
      name: resolver_query_logging_configs
      id: aws.route53resolver.resolver_query_logging_configs
      x-cfn-schema-name: ResolverQueryLoggingConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverQueryLoggingConfig'
    resolver_query_logging_config:
      name: resolver_query_logging_config
      id: aws.route53resolver.resolver_query_logging_config
      x-cfn-schema-name: ResolverQueryLoggingConfig
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.OwnerId') as owner_id,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.ShareStatus') as share_status,
              JSON_EXTRACT(Properties, '$.AssociationCount') as association_count,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.CreatorRequestId') as creator_request_id,
              JSON_EXTRACT(Properties, '$.DestinationArn') as destination_arn,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverQueryLoggingConfig'
    resolver_query_logging_config_associations:
      name: resolver_query_logging_config_associations
      id: aws.route53resolver.resolver_query_logging_config_associations
      x-cfn-schema-name: ResolverQueryLoggingConfigAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation'
    resolver_query_logging_config_association:
      name: resolver_query_logging_config_association
      id: aws.route53resolver.resolver_query_logging_config_association
      x-cfn-schema-name: ResolverQueryLoggingConfigAssociation
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ResolverQueryLogConfigId') as resolver_query_log_config_id,
              JSON_EXTRACT(Properties, '$.ResourceId') as resource_id,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Error') as error,
              JSON_EXTRACT(Properties, '$.ErrorMessage') as error_message,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation'
    resolver_rules:
      name: resolver_rules
      id: aws.route53resolver.resolver_rules
      x-cfn-schema-name: ResolverRule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResolverRuleId') as resolver_rule_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverRule'
    resolver_rule:
      name: resolver_rule
      id: aws.route53resolver.resolver_rule
      x-cfn-schema-name: ResolverRule
      x-type: get
      x-identifiers:
        - ResolverRuleId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResolverEndpointId') as resolver_endpoint_id,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RuleType') as rule_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TargetIps') as target_ips,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ResolverRuleId') as resolver_rule_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverRule'
    resolver_rule_associations:
      name: resolver_rule_associations
      id: aws.route53resolver.resolver_rule_associations
      x-cfn-schema-name: ResolverRuleAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResolverRuleAssociationId') as resolver_rule_association_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Route53Resolver::ResolverRuleAssociation'
    resolver_rule_association:
      name: resolver_rule_association
      id: aws.route53resolver.resolver_rule_association
      x-cfn-schema-name: ResolverRuleAssociation
      x-type: get
      x-identifiers:
        - ResolverRuleAssociationId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.VPCId') as v_pc_id,
              JSON_EXTRACT(Properties, '$.ResolverRuleId') as resolver_rule_id,
              JSON_EXTRACT(Properties, '$.ResolverRuleAssociationId') as resolver_rule_association_id,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Route53Resolver::ResolverRuleAssociation'
