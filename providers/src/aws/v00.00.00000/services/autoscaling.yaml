openapi: 3.0.0
info:
  title: AutoScaling
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AvailabilityZoneImpairmentPolicy:
      description: Describes an Availability Zone impairment policy.
      additionalProperties: false
      type: object
      properties:
        ZonalShiftEnabled:
          description: If ``true``, enable zonal shift for your Auto Scaling group.
          type: boolean
        ImpairedZoneHealthCheckBehavior:
          description: >-
            Specifies the health check behavior for the impaired Availability Zone in an active zonal shift. If you select ``Replace unhealthy``, instances that appear unhealthy will be replaced in all Availability Zones. If you select ``Ignore unhealthy``, instances will not be replaced in the Availability Zone with the active zonal shift. For more information, see [Auto Scaling group zonal shift](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-zonal-shift.html) in the
            *Amazon EC2 Auto Scaling User Guide*.
          type: string
          enum:
            - IgnoreUnhealthy
            - ReplaceUnhealthy
      required:
        - ImpairedZoneHealthCheckBehavior
        - ZonalShiftEnabled
    LifecycleHookSpecification:
      description: |-
        ``LifecycleHookSpecification`` specifies a lifecycle hook for the ``LifecycleHookSpecificationList`` property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource. A lifecycle hook specifies actions to perform when Amazon EC2 Auto Scaling launches or terminates instances. 
         For more information, see [Amazon EC2 Auto Scaling lifecycle hooks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/lifecycle-hooks.html) in the *Amazon EC2 Auto Scaling User Guide*. You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#aws-resource-as-lifecyclehook--examples) section of the ``AWS::AutoScaling::LifecycleHook`` resource.
      additionalProperties: false
      type: object
      properties:
        LifecycleHookName:
          description: The name of the lifecycle hook.
          type: string
        LifecycleTransition:
          description: |-
            The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.
              +  To create a lifecycle hook for scale-out events, specify ``autoscaling:EC2_INSTANCE_LAUNCHING``.
              +  To create a lifecycle hook for scale-in events, specify ``autoscaling:EC2_INSTANCE_TERMINATING``.
          type: string
        HeartbeatTimeout:
          description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from ``30`` to ``7200`` seconds. The default value is ``3600`` seconds (1 hour).
          type: integer
        NotificationMetadata:
          description: Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
          type: string
        DefaultResult:
          description: |-
            The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is ``ABANDON``.
             Valid values: ``CONTINUE`` | ``ABANDON``
          type: string
        NotificationTargetARN:
          description: The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling sends notifications to when an instance is in a wait state for the lifecycle hook. You can specify an Amazon SNS topic or an Amazon SQS queue.
          type: string
        RoleARN:
          description: |-
            The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target. For information about creating this role, see [Prepare to add a lifecycle hook to your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/prepare-for-lifecycle-notifications.html) in the *Amazon EC2 Auto Scaling User Guide*.
             Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue.
          type: string
      required:
        - LifecycleHookName
        - LifecycleTransition
    MemoryGiBPerVCpuRequest:
      description: '``MemoryGiBPerVCpuRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum amount of memory per vCPU for an instance type, in GiB.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The memory minimum in GiB.
          type: number
        Max:
          description: The memory maximum in GiB.
          type: number
    TotalLocalStorageGBRequest:
      description: '``TotalLocalStorageGBRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum total local storage size for an instance type, in GB.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The storage minimum in GB.
          type: number
        Max:
          description: The storage maximum in GB.
          type: number
    NetworkBandwidthGbpsRequest:
      description: |-
        ``NetworkBandwidthGbpsRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum network bandwidth for an instance type, in Gbps.
          Setting the minimum bandwidth does not guarantee that your instance will achieve the minimum bandwidth. Amazon EC2 will identify instance types that support the specified minimum bandwidth, but the actual bandwidth of your instance might go below the specified minimum at times. For more information, see [Available instance bandwidth](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-network-bandwidth.html#available-instance-bandwidth) in the *Amazon EC2 User Guide for Linux Instances*.
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The minimum amount of network bandwidth, in gigabits per second (Gbps).
          type: number
        Max:
          description: The maximum amount of network bandwidth, in gigabits per second (Gbps).
          type: number
    BaselineEbsBandwidthMbpsRequest:
      description: '``BaselineEbsBandwidthMbpsRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum baseline bandwidth performance for an instance type, in Mbps.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The minimum value in Mbps.
          type: integer
        Max:
          description: The maximum value in Mbps.
          type: integer
    NetworkInterfaceCountRequest:
      description: '``NetworkInterfaceCountRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of network interfaces for an instance type.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The minimum number of network interfaces.
          type: integer
        Max:
          description: The maximum number of network interfaces.
          type: integer
    VCpuCountRequest:
      description: '``VCpuCountRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of vCPUs for an instance type.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The minimum number of vCPUs.
          type: integer
        Max:
          description: The maximum number of vCPUs.
          type: integer
    PerformanceFactorReferenceRequest:
      description: ''
      additionalProperties: false
      type: object
      properties:
        InstanceFamily:
          description: ''
          type: string
    LaunchTemplate:
      description: |-
        Use this structure to specify the launch templates and instance types (overrides) for a mixed instances policy.
          ``LaunchTemplate`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
      additionalProperties: false
      type: object
      properties:
        LaunchTemplateSpecification:
          description: The launch template.
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        Overrides:
          uniqueItems: false
          description: Any properties that you specify override the same properties in the launch template.
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/LaunchTemplateOverrides'
      required:
        - LaunchTemplateSpecification
    LaunchTemplateOverrides:
      description: |-
        Use this structure to let Amazon EC2 Auto Scaling do the following when the Auto Scaling group has a mixed instances policy:
          +  Override the instance type that is specified in the launch template.
          +  Use multiple instance types.
          
         Specify the instance types that you want, or define your instance requirements instead and let Amazon EC2 Auto Scaling provision the available instance types that meet your requirements. This can provide Amazon EC2 Auto Scaling with a larger selection of instance types to choose from when fulfilling Spot and On-Demand capacities. You can view which instance types are matched before you apply the instance requirements to your Auto Scaling group.
         After you define your instance requirements, you don't have to keep updating these settings to get new EC2 instance types automatically. Amazon EC2 Auto Scaling uses the instance requirements of the Auto Scaling group to determine whether a new EC2 instance type can be used.
          ``LaunchTemplateOverrides`` is a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html) property type.
      additionalProperties: false
      type: object
      properties:
        LaunchTemplateSpecification:
          description: >-
            Provides a launch template for the specified instance type or set of instance requirements. For example, some instance types might require a launch template with a different AMI. If not provided, Amazon EC2 Auto Scaling uses the launch template that's specified in the ``LaunchTemplate`` definition. For more information, see [Specifying a different launch template for an instance
            type](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups-launch-template-overrides.html) in the *Amazon EC2 Auto Scaling User Guide*. 
             You can specify up to 20 launch templates per Auto Scaling group. The launch templates specified in the overrides and in the ``LaunchTemplate`` definition count towards this limit.
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        WeightedCapacity:
          description: >-
            If you provide a list of instance types to use, you can specify the number of capacity units provided by each instance type in terms of virtual CPUs, memory, storage, throughput, or other relative performance characteristic. When a Spot or On-Demand Instance is launched, the capacity units count toward the desired capacity. Amazon EC2 Auto Scaling launches instances until the desired capacity is totally fulfilled, even if this results in an overage. For example, if there are two
            units remaining to fulfill capacity, and Amazon EC2 Auto Scaling can only launch an instance with a ``WeightedCapacity`` of five units, the instance is launched, and the desired capacity is exceeded by three units. For more information, see [Configure instance weighting for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups-instance-weighting.html) in the *Amazon EC2 Auto Scaling User Guide*. Value must be in the
            range of 1-999. 
             If you specify a value for ``WeightedCapacity`` for one instance type, you must specify a value for ``WeightedCapacity`` for all of them.
              Every Auto Scaling group has three size parameters (``DesiredCapacity``, ``MaxSize``, and ``MinSize``). Usually, you set these sizes based on a specific number of instances. However, if you configure a mixed instances policy that defines weights for the instance types, you must specify these sizes with the same units that you use for weighting instances.
          type: string
        InstanceRequirements:
          description: |-
            The instance requirements. Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.
             You can specify up to four separate sets of instance requirements per Auto Scaling group. This is useful for provisioning instances from different Amazon Machine Images (AMIs) in the same Auto Scaling group. To do this, create the AMIs and create a new launch template for each AMI. Then, create a compatible set of instance requirements for each launch template. 
              If you specify ``InstanceRequirements``, you can't specify ``InstanceType``.
          $ref: '#/components/schemas/InstanceRequirements'
        InstanceType:
          description: |-
            The instance type, such as ``m3.xlarge``. You must specify an instance type that is supported in your requested Region and Availability Zones. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide for Linux Instances*.
             You can specify up to 40 instance types per Auto Scaling group.
          type: string
    CpuPerformanceFactorRequest:
      description: ''
      additionalProperties: false
      type: object
      properties:
        References:
          description: ''
          $ref: '#/components/schemas/PerformanceFactorReferenceSetRequest'
    MixedInstancesPolicy:
      description: |-
        Use this structure to launch multiple instance types and On-Demand Instances and Spot Instances within a single Auto Scaling group.
         A mixed instances policy contains information that Amazon EC2 Auto Scaling can use to launch instances and help optimize your costs. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.
         You can create a mixed instances policy for new and existing Auto Scaling groups. You must use a launch template to configure the policy. You cannot use a launch configuration.
         There are key differences between Spot Instances and On-Demand Instances:
          +  The price for Spot Instances varies based on demand
          +  Amazon EC2 can terminate an individual Spot Instance as the availability of, or price for, Spot Instances changes
          
         When a Spot Instance is terminated, Amazon EC2 Auto Scaling group attempts to launch a replacement instance to maintain the desired capacity for the group. 
          ``MixedInstancesPolicy`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource.
      additionalProperties: false
      type: object
      properties:
        InstancesDistribution:
          description: The instances distribution.
          $ref: '#/components/schemas/InstancesDistribution'
        LaunchTemplate:
          description: One or more launch templates and the instance types (overrides) that are used to launch EC2 instances to fulfill On-Demand and Spot capacities.
          $ref: '#/components/schemas/LaunchTemplate'
      required:
        - LaunchTemplate
    CapacityReservationIds:
      uniqueItems: true
      x-insertionOrder: true
      type: array
      items:
        type: string
    CapacityReservationResourceGroupArns:
      uniqueItems: true
      x-insertionOrder: true
      type: array
      items:
        type: string
    TagProperty:
      description: |-
        A structure that specifies a tag for the ``Tags`` property of [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource.
         For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide*. You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples) section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
         CloudFormation adds the following tags to all Auto Scaling groups and associated instances: 
          +  aws:cloudformation:stack-name
          +  aws:cloudformation:stack-id
          +  aws:cloudformation:logical-id
      additionalProperties: false
      type: object
      properties:
        Value:
          description: The tag value.
          type: string
        Key:
          description: The tag key.
          type: string
        PropagateAtLaunch:
          description: Set to ``true`` if you want CloudFormation to copy the tag to EC2 instances that are launched as part of the Auto Scaling group. Set to ``false`` if you want the tag attached only to the Auto Scaling group and not copied to any instances launched as part of the Auto Scaling group.
          type: boolean
      required:
        - Value
        - Key
        - PropagateAtLaunch
    LaunchTemplateSpecification:
      description: |-
        Specifies a launch template to use when provisioning EC2 instances for an Auto Scaling group.
         You must specify the following:
          +  The ID or the name of the launch template, but not both.
          +  The version of the launch template.
          
          ``LaunchTemplateSpecification`` is property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource. It is also a property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html) and [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property types.
         For information about creating a launch template, see [AWS::EC2::LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) and [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the *Amazon EC2 Auto Scaling User Guide*.
         For examples of launch templates, see [Create launch templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-ec2-launch-templates.html).
      additionalProperties: false
      type: object
      properties:
        LaunchTemplateName:
          description: |-
            The name of the launch template.
             You must specify the ``LaunchTemplateName`` or the ``LaunchTemplateID``, but not both.
          type: string
        Version:
          description: |-
            The version number of the launch template.
             Specifying ``$Latest`` or ``$Default`` for the template version number is not supported. However, you can specify ``LatestVersionNumber`` or ``DefaultVersionNumber`` using the ``Fn::GetAtt`` intrinsic function. For more information, see [Fn::GetAtt](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html).
              For an example of using the ``Fn::GetAtt`` function, see the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples) section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
          type: string
        LaunchTemplateId:
          description: |-
            The ID of the launch template.
             You must specify the ``LaunchTemplateID`` or the ``LaunchTemplateName``, but not both.
          type: string
      required:
        - Version
    InstancesDistribution:
      description: |-
        Use this structure to specify the distribution of On-Demand Instances and Spot Instances and the allocation strategies used to fulfill On-Demand and Spot capacities for a mixed instances policy.
         For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.
          ``InstancesDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup MixedInstancesPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-mixedinstancespolicy.html) property type.
      additionalProperties: false
      type: object
      properties:
        OnDemandAllocationStrategy:
          description: |-
            The allocation strategy to apply to your On-Demand Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify.
             The following lists the valid values:
              + lowest-price Uses price to determine which instance types are the highest priority, launching the lowest priced instance types within an Availability Zone first. This is the default value for Auto Scaling groups that specify InstanceRequirements. + prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling launches your highest priority instance types first. If all your On-Demand capacity cannot be fulfilled using your highest priority instance type, then Amazon EC2 Auto Scaling launches the remaining capacity using the second priority instance type, and so on. This is the default value for Auto Scaling groups that don't specify InstanceRequirements and cannot be used for groups that do.
          type: string
        OnDemandBaseCapacity:
          description: |-
            The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances. This base portion is launched first as your group scales.
             This number has the same unit of measurement as the group's desired capacity. If you change the default unit of measurement (number of instances) by specifying weighted capacity values in your launch template overrides list, or by changing the default desired capacity type setting of the group, you must specify this number using the same unit of measurement.
             Default: 0
              An update to this setting means a gradual replacement of instances to adjust the current On-Demand Instance levels. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
          type: integer
        OnDemandPercentageAboveBaseCapacity:
          description: |-
            Controls the percentages of On-Demand Instances and Spot Instances for your additional capacity beyond ``OnDemandBaseCapacity``. Expressed as a number (for example, 20 specifies 20% On-Demand Instances, 80% Spot Instances). If set to 100, only On-Demand Instances are used.
             Default: 100
              An update to this setting means a gradual replacement of instances to adjust the current On-Demand and Spot Instance levels for your additional capacity higher than the base capacity. When replacing instances, Amazon EC2 Auto Scaling launches new instances before terminating the previous ones.
          type: integer
        SpotInstancePools:
          description: |-
            The number of Spot Instance pools across which to allocate your Spot Instances. The Spot pools are determined from the different instance types in the overrides. Valid only when the ``SpotAllocationStrategy`` is ``lowest-price``. Value must be in the range of 1–20.
             Default: 2
          type: integer
        SpotAllocationStrategy:
          description: |-
            The allocation strategy to apply to your Spot Instances when they are launched. Possible instance types are determined by the launch template overrides that you specify.
             The following lists the valid values:
              + capacity-optimized Requests Spot Instances using pools that are optimally chosen based on the available Spot capacity. This strategy has the lowest risk of interruption. To give certain instance types a higher chance of launching first, use capacity-optimized-prioritized. + capacity-optimized-prioritized You set the order of instance types for the launch template overrides from highest to lowest priority (from first to last in the list). Amazon EC2 Auto Scaling honors the instance type priorities on a best effort basis but optimizes for capacity first. Note that if the On-Demand allocation strategy is set to prioritized, the same priority is applied when fulfilling On-Demand capacity. This is not a valid value for Auto Scaling groups that specify InstanceRequirements. + lowest-price Requests Spot Instances using the lowest priced pools within an Availability Zone, across the number of Spot pools that you specify for the SpotInstancePools property. To ensure that your desired capacity is met, you might receive Spot Instances from several pools. This is the default value, but it might lead to high interruption rates because this strategy only considers instance price and not available capacity. + price-capacity-optimized (recommended) The price and capacity optimized allocation strategy looks at both price and capacity to select the Spot Instance pools that are the least likely to be interrupted and have the lowest possible price.
          type: string
        SpotMaxPrice:
          description: |-
            The maximum price per unit hour that you are willing to pay for a Spot Instance. If your maximum price is lower than the Spot price for the instance types that you selected, your Spot Instances are not launched. We do not recommend specifying a maximum price because it can lead to increased interruptions. When Spot Instances launch, you pay the current Spot price. To remove a maximum price that you previously set, include the property but specify an empty string ("") for the value.
              If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify one.
              Valid Range: Minimum value of 0.001
          type: string
    AcceleratorCountRequest:
      description: '``AcceleratorCountRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum number of accelerators for an instance type.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The minimum value.
          type: integer
        Max:
          description: The maximum value.
          type: integer
    AvailabilityZoneDistribution:
      description: '``AvailabilityZoneDistribution`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource.'
      additionalProperties: false
      type: object
      properties:
        CapacityDistributionStrategy:
          description: |-
            If launches fail in an Availability Zone, the following strategies are available. The default is ``balanced-best-effort``. 
              +   ``balanced-only`` - If launches fail in an Availability Zone, Auto Scaling will continue to attempt to launch in the unhealthy zone to preserve a balanced distribution.
              +   ``balanced-best-effort`` - If launches fail in an Availability Zone, Auto Scaling will attempt to launch in another healthy Availability Zone instead.
          type: string
          enum:
            - balanced-best-effort
            - balanced-only
    NotificationConfiguration:
      description: |-
        A structure that specifies an Amazon SNS notification configuration for the ``NotificationConfigurations`` property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource.
         For an example template snippet, see [Configure Amazon EC2 Auto Scaling resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-ec2-auto-scaling.html).
         For more information, see [Get Amazon SNS notifications when your Auto Scaling group scales](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ASGettingNotifications.html) in the *Amazon EC2 Auto Scaling User Guide*.
      additionalProperties: false
      type: object
      properties:
        TopicARN:
          description: The Amazon Resource Name (ARN) of the Amazon SNS topic.
          type: array
          items:
            type: string
        NotificationTypes:
          uniqueItems: false
          description: |-
            A list of event types that send a notification. Event types can include any of the following types. 
              *Allowed values*:
              +   ``autoscaling:EC2_INSTANCE_LAUNCH`` 
              +   ``autoscaling:EC2_INSTANCE_LAUNCH_ERROR`` 
              +   ``autoscaling:EC2_INSTANCE_TERMINATE`` 
              +   ``autoscaling:EC2_INSTANCE_TERMINATE_ERROR`` 
              +   ``autoscaling:TEST_NOTIFICATION``
          x-insertionOrder: false
          type: array
          items:
            type: string
      required:
        - TopicARN
    MetricsCollection:
      description: |-
        ``MetricsCollection`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource that describes the group metrics that an Amazon EC2 Auto Scaling group sends to Amazon CloudWatch. These metrics describe the group rather than any of its instances. 
         For more information, see [Monitor CloudWatch metrics for your Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-monitoring.html) in the *Amazon EC2 Auto Scaling User Guide*. You can find a sample template snippet in the [Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html#aws-resource-autoscaling-autoscalinggroup--examples) section of the ``AWS::AutoScaling::AutoScalingGroup`` resource.
      additionalProperties: false
      type: object
      properties:
        Metrics:
          uniqueItems: false
          description: |-
            Identifies the metrics to enable.
             You can specify one or more of the following metrics:
              +   ``GroupMinSize`` 
              +   ``GroupMaxSize`` 
              +   ``GroupDesiredCapacity`` 
              +   ``GroupInServiceInstances`` 
              +   ``GroupPendingInstances`` 
              +   ``GroupStandbyInstances`` 
              +   ``GroupTerminatingInstances`` 
              +   ``GroupTotalInstances`` 
              +   ``GroupInServiceCapacity`` 
              +   ``GroupPendingCapacity`` 
              +   ``GroupStandbyCapacity`` 
              +   ``GroupTerminatingCapacity`` 
              +   ``GroupTotalCapacity`` 
              +   ``WarmPoolDesiredCapacity`` 
              +   ``WarmPoolWarmedCapacity`` 
              +   ``WarmPoolPendingCapacity`` 
              +   ``WarmPoolTerminatingCapacity`` 
              +   ``WarmPoolTotalCapacity`` 
              +   ``GroupAndWarmPoolDesiredCapacity`` 
              +   ``GroupAndWarmPoolTotalCapacity`` 
              
             If you specify ``Granularity`` and don't specify any metrics, all metrics are enabled.
             For more information, see [Amazon CloudWatch metrics for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-metrics.html) in the *Amazon EC2 Auto Scaling User Guide*.
          x-insertionOrder: false
          type: array
          items:
            type: string
        Granularity:
          description: The frequency at which Amazon EC2 Auto Scaling sends aggregated data to CloudWatch. The only valid value is ``1Minute``.
          type: string
      required:
        - Granularity
    MemoryMiBRequest:
      description: '``MemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum instance memory size for an instance type, in MiB.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The memory minimum in MiB.
          type: integer
        Max:
          description: The memory maximum in MiB.
          type: integer
    InstanceMaintenancePolicy:
      description: |-
        ``InstanceMaintenancePolicy`` is a property of the [AWS::AutoScaling::AutoScalingGroup](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-autoscaling-autoscalinggroup.html) resource.
         For more information, see [Instance maintenance policies](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html) in the *Amazon EC2 Auto Scaling User Guide*.
      additionalProperties: false
      type: object
      properties:
        MaxHealthyPercentage:
          description: |-
            Specifies the upper threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the maximum percentage of the group that can be in service and healthy, or pending, to support your workload when replacing instances. Value range is 100 to 200. To clear a previously set value, specify a value of ``-1``.
             Both ``MinHealthyPercentage`` and ``MaxHealthyPercentage`` must be specified, and the difference between them cannot be greater than 100. A large range increases the number of instances that can be replaced at the same time.
          type: integer
        MinHealthyPercentage:
          description: Specifies the lower threshold as a percentage of the desired capacity of the Auto Scaling group. It represents the minimum percentage of the group to keep in service, healthy, and ready to use to support your workload when replacing instances. Value range is 0 to 100. To clear a previously set value, specify a value of ``-1``.
          type: integer
      x-dependencies:
        MaxHealthyPercentage:
          - MinHealthyPercentage
        MinHealthyPercentage:
          - MaxHealthyPercentage
    BaselinePerformanceFactorsRequest:
      description: ''
      additionalProperties: false
      type: object
      properties:
        Cpu:
          description: ''
          $ref: '#/components/schemas/CpuPerformanceFactorRequest'
    PerformanceFactorReferenceSetRequest:
      uniqueItems: true
      x-insertionOrder: true
      type: array
      items:
        $ref: '#/components/schemas/PerformanceFactorReferenceRequest'
    AcceleratorTotalMemoryMiBRequest:
      description: '``AcceleratorTotalMemoryMiBRequest`` is a property of the ``InstanceRequirements`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplateOverrides](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplateoverrides.html) property type that describes the minimum and maximum total memory size for the accelerators for an instance type, in MiB.'
      additionalProperties: false
      type: object
      properties:
        Min:
          description: The memory minimum in MiB.
          type: integer
        Max:
          description: The memory maximum in MiB.
          type: integer
    TrafficSourceIdentifier:
      description: Identifying information for a traffic source.
      additionalProperties: false
      type: object
      properties:
        Type:
          description: |-
            Provides additional context for the value of ``Identifier``.
             The following lists the valid values:
              +   ``elb`` if ``Identifier`` is the name of a Classic Load Balancer.
              +   ``elbv2`` if ``Identifier`` is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.
              +   ``vpc-lattice`` if ``Identifier`` is the ARN of a VPC Lattice target group.
              
             Required if the identifier is the name of a Classic Load Balancer.
          type: string
        Identifier:
          description: |-
            Identifies the traffic source.
             For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.
             For example: 
              +  Application Load Balancer ARN: ``arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/1234567890123456`` 
              +  Classic Load Balancer name: ``my-classic-load-balancer`` 
              +  VPC Lattice ARN: ``arn:aws:vpc-lattice:us-west-2:123456789012:targetgroup/tg-1234567890123456`` 
              
             To get the ARN of a target group for a Application Load Balancer, Gateway Load Balancer, or Network Load Balancer, or the name of a Classic Load Balancer, use the Elastic Load Balancing [DescribeTargetGroups](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeTargetGroups.html) and [DescribeLoadBalancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html) API operations.
             To get the ARN of a target group for VPC Lattice, use the VPC Lattice [GetTargetGroup](https://docs.aws.amazon.com/vpc-lattice/latest/APIReference/API_GetTargetGroup.html) API operation.
          type: string
      required:
        - Identifier
        - Type
    InstanceRequirements:
      description: |-
        The attributes for the instance types for a mixed instances policy. Amazon EC2 Auto Scaling uses your specified requirements to identify instance types. Then, it uses your On-Demand and Spot allocation strategies to launch instances from these instance types.
         When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.
         To limit the list of instance types from which Amazon EC2 Auto Scaling can identify matching instance types, you can use one of the following parameters, but not both in the same request:
          +   ``AllowedInstanceTypes`` - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.
          +   ``ExcludedInstanceTypes`` - The instance types to exclude from the list, even if they match your specified attributes.
          
          You must specify ``VCpuCount`` and ``MemoryMiB``. All other attributes are optional. Any unspecified optional attribute is set to its default.
          For an example template, see [Configure Amazon EC2 Auto Scaling resources](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-ec2-auto-scaling.html).
         For more information, see [Creating an Auto Scaling group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html) in the *Amazon EC2 Auto Scaling User Guide*. For help determining which instance types match your attributes before you apply them to your Auto Scaling group, see [Preview instance types with specified attributes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements) in the *Amazon EC2 User Guide for Linux Instances*.
          ``InstanceRequirements`` is a property of the ``LaunchTemplateOverrides`` property of the [AWS::AutoScaling::AutoScalingGroup LaunchTemplate](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplate.html) property type.
      additionalProperties: false
      type: object
      properties:
        InstanceGenerations:
          uniqueItems: true
          description: |-
            Indicates whether current or previous generation instance types are included.
              +  For current generation instance types, specify ``current``. The current generation includes EC2 instance types currently recommended for use. This typically includes the latest two to three generations in each instance family. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the *Amazon EC2 User Guide for Linux Instances*.
              +  For previous generation instance types, specify ``previous``.
              
             Default: Any current or previous generation
          x-insertionOrder: false
          type: array
          items:
            type: string
        AcceleratorTypes:
          uniqueItems: true
          description: |-
            Lists the accelerator types that must be on an instance type.
              +  For instance types with GPU accelerators, specify ``gpu``.
              +  For instance types with FPGA accelerators, specify ``fpga``.
              +  For instance types with inference accelerators, specify ``inference``.
              
             Default: Any accelerator type
          x-insertionOrder: false
          type: array
          items:
            type: string
        MemoryGiBPerVCpu:
          description: |-
            The minimum and maximum amount of memory per vCPU for an instance type, in GiB.
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/MemoryGiBPerVCpuRequest'
        AcceleratorManufacturers:
          uniqueItems: true
          description: |-
            Indicates whether instance types must have accelerators by specific manufacturers.
              +  For instance types with NVIDIA devices, specify ``nvidia``.
              +  For instance types with AMD devices, specify ``amd``.
              +  For instance types with AWS devices, specify ``amazon-web-services``.
              +  For instance types with Xilinx devices, specify ``xilinx``.
              
             Default: Any manufacturer
          x-insertionOrder: false
          type: array
          items:
            type: string
        VCpuCount:
          description: The minimum and maximum number of vCPUs for an instance type.
          $ref: '#/components/schemas/VCpuCountRequest'
        LocalStorage:
          description: |-
            Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, see [Amazon EC2 instance store](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html) in the *Amazon EC2 User Guide for Linux Instances*.
             Default: ``included``
          type: string
        CpuManufacturers:
          uniqueItems: true
          description: |-
            Lists which specific CPU manufacturers to include.
              +  For instance types with Intel CPUs, specify ``intel``.
              +  For instance types with AMD CPUs, specify ``amd``.
              +  For instance types with AWS CPUs, specify ``amazon-web-services``.
              
              Don't confuse the CPU hardware manufacturer with the CPU hardware architecture. Instances will be launched with a compatible CPU architecture based on the Amazon Machine Image (AMI) that you specify in your launch template. 
              Default: Any manufacturer
          x-insertionOrder: false
          type: array
          items:
            type: string
        BareMetal:
          description: |-
            Indicates whether bare metal instance types are included, excluded, or required.
             Default: ``excluded``
          type: string
        RequireHibernateSupport:
          description: |-
            Indicates whether instance types must provide On-Demand Instance hibernation support.
             Default: ``false``
          type: boolean
        MaxSpotPriceAsPercentageOfOptimalOnDemandPrice:
          description: >-
            [Price protection] The price protection threshold for Spot Instances, as a percentage of an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest priced current generation instance types or, failing that, the lowest priced previous generation
            instance types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price exceeds your specified threshold.
             The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage.
             If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is based on the per-vCPU or per-memory price instead of the per instance price. 
              Only one of ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified. If you don't specify either, Amazon EC2 Auto Scaling will automatically apply optimal price protection to consistently select from a wide range of instance types. To indicate no price protection threshold for Spot Instances, meaning you want to consider all instance types that match your attributes, include one of these parameters and specify a high value, such as ``999999``.
          type: integer
        OnDemandMaxPricePercentageOverLowestPrice:
          description: >-
            [Price protection] The price protection threshold for On-Demand Instances, as a percentage higher than an identified On-Demand price. The identified On-Demand price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest priced current generation instance types or, failing that, the lowest priced previous
            generation instance types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price exceeds your specified threshold. 
             The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage.
             To turn off price protection, specify a high value, such as ``999999``. 
             If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is applied based on the per-vCPU or per-memory price instead of the per instance price. 
             Default: ``20``
          type: integer
        MemoryMiB:
          description: The minimum and maximum instance memory size for an instance type, in MiB.
          $ref: '#/components/schemas/MemoryMiBRequest'
        LocalStorageTypes:
          uniqueItems: true
          description: |-
            Indicates the type of local storage that is required.
              +  For instance types with hard disk drive (HDD) storage, specify ``hdd``.
              +  For instance types with solid state drive (SSD) storage, specify ``ssd``.
              
             Default: Any local storage type
          x-insertionOrder: false
          type: array
          items:
            type: string
        NetworkInterfaceCount:
          description: |-
            The minimum and maximum number of network interfaces for an instance type.
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/NetworkInterfaceCountRequest'
        ExcludedInstanceTypes:
          uniqueItems: true
          description: |-
            The instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (``*``), to exclude an instance family, type, size, or generation. The following are examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``. 
             For example, if you specify ``c5*``, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify ``m5a.*``, Amazon EC2 Auto Scaling will exclude all the M5a instance types, but not the M5n instance types.
              If you specify ``ExcludedInstanceTypes``, you can't specify ``AllowedInstanceTypes``.
              Default: No excluded instance types
          x-insertionOrder: true
          type: array
          items:
            type: string
        AllowedInstanceTypes:
          uniqueItems: true
          description: |-
            The instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes.
             You can use strings with one or more wild cards, represented by an asterisk (``*``), to allow an instance type, size, or generation. The following are examples: ``m5.8xlarge``, ``c5*.*``, ``m5a.*``, ``r*``, ``*3*``.
             For example, if you specify ``c5*``, Amazon EC2 Auto Scaling will allow the entire C5 instance family, which includes all C5a and C5n instance types. If you specify ``m5a.*``, Amazon EC2 Auto Scaling will allow all the M5a instance types, but not the M5n instance types.
              If you specify ``AllowedInstanceTypes``, you can't specify ``ExcludedInstanceTypes``.
              Default: All instance types
          x-insertionOrder: true
          type: array
          items:
            type: string
        AcceleratorCount:
          description: |-
            The minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips) for an instance type.
             To exclude accelerator-enabled instance types, set ``Max`` to ``0``.
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/AcceleratorCountRequest'
        NetworkBandwidthGbps:
          description: |-
            The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/NetworkBandwidthGbpsRequest'
        BaselinePerformanceFactors:
          description: ''
          $ref: '#/components/schemas/BaselinePerformanceFactorsRequest'
        BaselineEbsBandwidthMbps:
          description: |-
            The minimum and maximum baseline bandwidth performance for an instance type, in Mbps. For more information, see [Amazon EBS–optimized instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html) in the *Amazon EC2 User Guide for Linux Instances*.
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/BaselineEbsBandwidthMbpsRequest'
        SpotMaxPricePercentageOverLowestPrice:
          description: >-
            [Price protection] The price protection threshold for Spot Instances, as a percentage higher than an identified Spot price. The identified Spot price is the price of the lowest priced current generation C, M, or R instance type with your specified attributes. If no current generation C, M, or R instance type matches your attributes, then the identified price is from either the lowest priced current generation instance types or, failing that, the lowest priced previous generation
            instance types that match your attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price exceeds your specified threshold.
             The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. 
             If you set ``DesiredCapacityType`` to ``vcpu`` or ``memory-mib``, the price protection threshold is based on the per-vCPU or per-memory price instead of the per instance price. 
              Only one of ``SpotMaxPricePercentageOverLowestPrice`` or ``MaxSpotPriceAsPercentageOfOptimalOnDemandPrice`` can be specified. If you don't specify either, Amazon EC2 Auto Scaling will automatically apply optimal price protection to consistently select from a wide range of instance types. To indicate no price protection threshold for Spot Instances, meaning you want to consider all instance types that match your attributes, include one of these parameters and specify a high value, such as ``999999``.
          type: integer
        AcceleratorNames:
          uniqueItems: true
          description: |-
            Lists the accelerators that must be on an instance type.
              +  For instance types with NVIDIA A100 GPUs, specify ``a100``.
              +  For instance types with NVIDIA V100 GPUs, specify ``v100``.
              +  For instance types with NVIDIA K80 GPUs, specify ``k80``.
              +  For instance types with NVIDIA T4 GPUs, specify ``t4``.
              +  For instance types with NVIDIA M60 GPUs, specify ``m60``.
              +  For instance types with AMD Radeon Pro V520 GPUs, specify ``radeon-pro-v520``.
              +  For instance types with Xilinx VU9P FPGAs, specify ``vu9p``.
              
             Default: Any accelerator
          x-insertionOrder: false
          type: array
          items:
            type: string
        AcceleratorTotalMemoryMiB:
          description: |-
            The minimum and maximum total memory size for the accelerators on an instance type, in MiB.
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRequest'
        BurstablePerformance:
          description: |-
            Indicates whether burstable performance instance types are included, excluded, or required. For more information, see [Burstable performance instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the *Amazon EC2 User Guide for Linux Instances*.
             Default: ``excluded``
          type: string
        TotalLocalStorageGB:
          description: |-
            The minimum and maximum total local storage size for an instance type, in GB.
             Default: No minimum or maximum limits
          $ref: '#/components/schemas/TotalLocalStorageGBRequest'
      required:
        - MemoryMiB
        - VCpuCount
    CapacityReservationTarget:
      description: ''
      additionalProperties: false
      type: object
      properties:
        CapacityReservationIds:
          $ref: '#/components/schemas/CapacityReservationIds'
        CapacityReservationResourceGroupArns:
          $ref: '#/components/schemas/CapacityReservationResourceGroupArns'
    CapacityReservationSpecification:
      description: ''
      additionalProperties: false
      type: object
      properties:
        CapacityReservationPreference:
          type: string
        CapacityReservationTarget:
          $ref: '#/components/schemas/CapacityReservationTarget'
      required:
        - CapacityReservationPreference
    AutoScalingGroup:
      type: object
      properties:
        LifecycleHookSpecificationList:
          uniqueItems: false
          description: One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/LifecycleHookSpecification'
        LoadBalancerNames:
          uniqueItems: false
          description: A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the ``TargetGroupARNs`` property instead.
          x-insertionOrder: true
          type: array
          items:
            type: string
        LaunchConfigurationName:
          description: |-
            The name of the launch configuration to use to launch instances.
             Required only if you don't specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``InstanceId``.
          type: string
        ServiceLinkedRoleARN:
          description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named ``AWSServiceRoleForAutoScaling``, which it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the *Amazon EC2 Auto Scaling User Guide*.
          type: string
        AvailabilityZoneImpairmentPolicy:
          description: The Availability Zone impairment policy.
          $ref: '#/components/schemas/AvailabilityZoneImpairmentPolicy'
        TargetGroupARNs:
          uniqueItems: false
          description: >-
            The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in
            the *Amazon EC2 Auto Scaling User Guide*.
          x-insertionOrder: false
          type: array
          items:
            type: string
        Cooldown:
          description: |-
            *Only needed if you use simple scaling policies.* 
             The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-scaling-cooldowns.html) in the *Amazon EC2 Auto Scaling User Guide*.
             Default: ``300`` seconds
          type: string
        NotificationConfigurations:
          uniqueItems: false
          description: Configures an Auto Scaling group to send notifications when specified events take place.
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/NotificationConfiguration'
        DesiredCapacity:
          pattern: ^[0-9]+$
          description: |-
            The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure automatic scaling.
             The number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity when creating the stack, the default is the minimum size of the group.
             CloudFormation marks the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached. However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and your maximum price.
          type: string
        HealthCheckGracePeriod:
          description: >-
            The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the ``InService`` state. For more information, see [Set the health check grace period for an Auto Scaling
            group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html) in the *Amazon EC2 Auto Scaling User Guide*.
             Default: ``0`` seconds
          type: integer
        DefaultInstanceWarmup:
          description: |-
            The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the ``InService`` state. 
             During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html) in the *Amazon EC2 Auto Scaling User Guide*.
              To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, *even if it is set to 0 seconds*. To remove a value that you previously set, include the property but specify ``-1`` for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of ``0`` or other nominal value.
              Default: None
          type: integer
        SkipZonalShiftValidation:
          description: ''
          type: boolean
        NewInstancesProtectedFromScaleIn:
          description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see [Use instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html) in the *Amazon EC2 Auto Scaling User Guide*.
          type: boolean
        LaunchTemplate:
          description: |-
            Information used to specify the launch template and version to use to launch instances. You can alternatively associate a launch template to the Auto Scaling group by specifying a ``MixedInstancesPolicy``. For more information about creating launch templates, see [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the *Amazon EC2 Auto Scaling User Guide*.
             If you omit this property, you must specify ``MixedInstancesPolicy``, ``LaunchConfigurationName``, or ``InstanceId``.
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        MixedInstancesPolicy:
          description: |-
            An embedded object that specifies a mixed instances policy.
             The policy includes properties that not only define the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances (optional), and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance configuration information—the launch template and instance types. The policy can also include a weight for each instance type and different launch templates for individual instance types.
             For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.
          $ref: '#/components/schemas/MixedInstancesPolicy'
        VPCZoneIdentifier:
          uniqueItems: false
          description: |-
            A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created.
             If this resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html).
              When you update ``VPCZoneIdentifier``, this retains the same Auto Scaling group and replaces old instances with new ones, according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html).
              Required to launch instances into a nondefault VPC. If you specify ``VPCZoneIdentifier`` with ``AvailabilityZones``, the subnets that you specify for this property must reside in those Availability Zones.
          x-insertionOrder: false
          type: array
          items:
            type: string
        Tags:
          description: >-
            One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For
            more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide*.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/TagProperty'
        Context:
          description: Reserved.
          type: string
        CapacityRebalance:
          description: >-
            Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see [Use Capacity Rebalancing to handle Amazon EC2 Spot
            Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html) in the in the *Amazon EC2 Auto Scaling User Guide*.
          type: boolean
        InstanceId:
          description: |-
            The ID of the instance used to base the launch configuration on. For more information, see [Create an Auto Scaling group using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon EC2 Auto Scaling User Guide*.
             If you specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``LaunchConfigurationName``, don't specify ``InstanceId``.
          type: string
        AvailabilityZones:
          uniqueItems: false
          description: A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the ``VPCZoneIdentifier`` property, or for attaching a network interface when an existing network interface ID is specified in a launch template.
          x-insertionOrder: false
          type: array
          items:
            type: string
        NotificationConfiguration:
          description: ''
          $ref: '#/components/schemas/NotificationConfiguration'
        AvailabilityZoneDistribution:
          description: The instance capacity distribution across Availability Zones.
          $ref: '#/components/schemas/AvailabilityZoneDistribution'
        MetricsCollection:
          uniqueItems: false
          description: Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.
          x-insertionOrder: true
          type: array
          items:
            $ref: '#/components/schemas/MetricsCollection'
        InstanceMaintenancePolicy:
          description: An instance maintenance policy. For more information, see [Set instance maintenance policy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html) in the *Amazon EC2 Auto Scaling User Guide*.
          $ref: '#/components/schemas/InstanceMaintenancePolicy'
        MaxSize:
          pattern: ^[0-9]+$
          description: |-
            The maximum size of the group.
              With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above ``MaxSize`` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above ``MaxSize`` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).
          type: string
        MinSize:
          pattern: ^[0-9]+$
          description: The minimum size of the group.
          type: string
        TerminationPolicies:
          uniqueItems: false
          description: |-
            A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see [Configure termination policies for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html) in the *Amazon EC2 Auto Scaling User Guide*.
             Valid values: ``Default`` | ``AllocationStrategy`` | ``ClosestToNextInstanceHour`` | ``NewestInstance`` | ``OldestInstance`` | ``OldestLaunchConfiguration`` | ``OldestLaunchTemplate`` | ``arn:aws:lambda:region:account-id:function:my-function:my-alias``
          x-insertionOrder: true
          type: array
          items:
            type: string
        AutoScalingGroupName:
          description: |-
            The name of the Auto Scaling group. This name must be unique per Region per account.
             The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.
              You cannot use a colon (:) in the name.
          type: string
        TrafficSources:
          uniqueItems: true
          description: The traffic sources associated with this Auto Scaling group.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/TrafficSourceIdentifier'
        DesiredCapacityType:
          description: |-
            The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports ``DesiredCapacityType`` for attribute-based instance type selection only. For more information, see [Create a mixed instances group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-mixed-instances-group-attribute-based-instance-type-selection.html) in the *Amazon EC2 Auto Scaling User Guide*.
             By default, Amazon EC2 Auto Scaling specifies ``units``, which translates into number of instances.
             Valid values: ``units`` | ``vcpu`` | ``memory-mib``
          type: string
        PlacementGroup:
          description: |-
            The name of the placement group into which to launch your instances. For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide for Linux Instances*.
              A *cluster* placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.
          type: string
        CapacityReservationSpecification:
          description: ''
          $ref: '#/components/schemas/CapacityReservationSpecification'
        HealthCheckType:
          description: |-
            A comma-separated value string of one or more health check types.
             The valid values are ``EC2``, ``EBS``, ``ELB``, and ``VPC_LATTICE``. ``EC2`` is the default health check and cannot be disabled. For more information, see [Health checks for instances in an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html) in the *Amazon EC2 Auto Scaling User Guide*.
             Only specify ``EC2`` if you must clear a value that was previously set.
          type: string
        MaxInstanceLifetime:
          description: The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replace Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the *Amazon EC2 Auto Scaling User Guide*.
          type: integer
      required:
        - MinSize
        - MaxSize
      x-stackql-resource-name: auto_scaling_group
      description: |-
        The ``AWS::AutoScaling::AutoScalingGroup`` resource defines an Amazon EC2 Auto Scaling group, which is a collection of Amazon EC2 instances that are treated as a logical grouping for the purposes of automatic scaling and management. 
         For more information about Amazon EC2 Auto Scaling, see the [Amazon EC2 Auto Scaling User Guide](https://docs.aws.amazon.com/autoscaling/ec2/userguide/what-is-amazon-ec2-auto-scaling.html). 
          Amazon EC2 Auto Scaling configures instances launched as part of an Auto Scaling group using either a [launch template](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html) or a launch configuration. We strongly recommend that you do not use launch configurations. For more information, see [Launch configurations](https://docs.aws.amazon.com/autoscaling/ec2/userguide/launch-configurations.html) in the *Amazon EC2 Auto Scaling User Guide*.
         For help migrating from launch configurations to launch templates, see [Migrate CloudFormation stacks from launch configurations to launch templates](https://docs.aws.amazon.com/autoscaling/ec2/userguide/migrate-launch-configurations-with-cloudformation.html) in the *Amazon EC2 Auto Scaling User Guide*.
      x-type-name: AWS::AutoScaling::AutoScalingGroup
      x-stackql-primary-identifier:
        - AutoScalingGroupName
      x-create-only-properties:
        - InstanceId
        - AutoScalingGroupName
      x-conditional-create-only-properties:
        - LaunchConfigurationName
        - VPCZoneIdentifier
        - LaunchTemplate
        - MixedInstancesPolicy
      x-write-only-properties:
        - SkipZonalShiftValidation
        - InstanceId
      x-required-properties:
        - MinSize
        - MaxSize
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: true
      x-required-permissions:
        read:
          - autoscaling:Describe*
          - managed-fleets:Get*
        create:
          - autoscaling:CreateAutoScalingGroup
          - autoscaling:UpdateAutoScalingGroup
          - autoscaling:CreateOrUpdateTags
          - autoscaling:Describe*
          - autoscaling:EnableMetricsCollection
          - autoscaling:PutNotificationConfiguration
          - cloudwatch:PutMetricAlarm
          - ec2:Describe*
          - ec2:Get*
          - ec2:RunInstances
          - elasticloadbalancing:Describe*
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - managed-fleets:Get*
          - managed-fleets:CreateAutoScalingGroup
          - managed-fleets:UpdateAutoScalingGroup
          - ssm:Get*
          - vpc-lattice:DeregisterTargets
          - vpc-lattice:GetTargetGroup
          - vpc-lattice:ListTargets
          - vpc-lattice:RegisterTargets
        update:
          - autoscaling:UpdateAutoScalingGroup
          - autoscaling:CreateOrUpdateTags
          - autoscaling:DeleteTags
          - autoscaling:Describe*
          - autoscaling:EnableMetricsCollection
          - autoscaling:DisableMetricsCollection
          - autoscaling:PutNotificationConfiguration
          - autoscaling:DeleteNotificationConfiguration
          - autoscaling:DetachLoadBalancerTargetGroups
          - autoscaling:AttachLoadBalancerTargetGroups
          - autoscaling:AttachLoadBalancers
          - autoscaling:DetachLoadBalancers
          - autoscaling:AttachTrafficSources
          - autoscaling:DetachTrafficSources
          - autoscaling:DeleteLifecycleHook
          - autoscaling:PutLifecycleHook
          - cloudwatch:PutMetricAlarm
          - ec2:Describe*
          - ec2:Get*
          - ec2:RunInstances
          - elasticloadbalancing:Describe*
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - managed-fleets:Get*
          - managed-fleets:RegisterAutoScalingGroup
          - managed-fleets:DeregisterAutoScalingGroup
          - managed-fleets:UpdateAutoScalingGroup
          - ssm:Get*
          - vpc-lattice:DeregisterTargets
          - vpc-lattice:GetTargetGroup
          - vpc-lattice:ListTargets
          - vpc-lattice:RegisterTargets
        list:
          - autoscaling:Describe*
        delete:
          - autoscaling:DeleteAutoScalingGroup
          - autoscaling:UpdateAutoScalingGroup
          - autoscaling:Describe*
          - managed-fleets:Get*
          - managed-fleets:DeleteAutoScalingGroup
    MetadataOptions:
      description: MetadataOptions is a property of AWS::AutoScaling::LaunchConfiguration that describes metadata options for the instances.
      additionalProperties: false
      type: object
      properties:
        HttpPutResponseHopLimit:
          description: The desired HTTP PUT response hop limit for instance metadata requests.
          type: integer
        HttpTokens:
          description: The state of token usage for your instance metadata requests.
          type: string
        HttpEndpoint:
          description: This parameter enables or disables the HTTP metadata endpoint on your instances.
          type: string
    BlockDeviceMapping:
      description: BlockDeviceMapping is a property of AWS::AutoScaling::LaunchConfiguration that describes a block device mapping for an Auto Scaling group.
      additionalProperties: false
      type: object
      properties:
        Ebs:
          description: Parameters used to automatically set up EBS volumes when an instance is launched.
          $ref: '#/components/schemas/BlockDevice'
        NoDevice:
          description: Setting this value to true suppresses the specified device included in the block device mapping of the AMI.
          type: boolean
        VirtualName:
          description: The name of the virtual device.
          type: string
        DeviceName:
          description: 'The device name exposed to the EC2 instance (for example, /dev/sdh or xvdh). '
          type: string
      required:
        - DeviceName
    BlockDevice:
      description: BlockDevice is a subproperty of BlockDeviceMapping that describes an Amazon EBS volume.
      additionalProperties: false
      type: object
      properties:
        SnapshotId:
          description: The snapshot ID of the volume to use.
          type: string
        VolumeType:
          description: The volume type.
          type: string
        Encrypted:
          description: 'Specifies whether the volume should be encrypted. '
          type: boolean
        Throughput:
          description: The throughput (MiBps) to provision for a gp3 volume.
          type: integer
        Iops:
          description: 'The number of input/output (I/O) operations per second (IOPS) to provision for the volume. '
          type: integer
        VolumeSize:
          description: The volume size, in GiBs.
          type: integer
        DeleteOnTermination:
          description: 'Indicates whether the volume is deleted on instance termination. '
          type: boolean
    LaunchConfiguration:
      type: object
      properties:
        PlacementTenancy:
          description: The tenancy of the instance, either default or dedicated.
          type: string
        SecurityGroups:
          description: A list that contains the security groups to assign to the instances in the Auto Scaling group.
          x-insertionOrder: false
          type: array
          items:
            anyOf:
              - relationshipRef:
                  typeName: AWS::EC2::SecurityGroup
                  propertyPath: /properties/GroupId
              - relationshipRef:
                  typeName: AWS::EC2::SecurityGroup
                  propertyPath: /properties/Id
            type: string
        LaunchConfigurationName:
          minLength: 1
          description: The name of the launch configuration. This name must be unique per Region per account.
          type: string
          maxLength: 255
        MetadataOptions:
          description: The metadata options for the instances.
          $ref: '#/components/schemas/MetadataOptions'
        InstanceId:
          description: The ID of the Amazon EC2 instance you want to use to create the launch configuration.
          type: string
        UserData:
          description: The Base64-encoded user data to make available to the launched EC2 instances.
          type: string
          maxLength: 21847
        ClassicLinkVPCSecurityGroups:
          description: The IDs of one or more security groups for the VPC that you specified in the ClassicLinkVPCId property.
          x-insertionOrder: false
          type: array
          items:
            type: string
        BlockDeviceMappings:
          uniqueItems: true
          description: Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.
          x-insertionOrder: false
          type: array
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
        IamInstanceProfile:
          description: Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.
          type: string
        KernelId:
          description: Provides the ID of the kernel associated with the EC2 AMI.
          type: string
        AssociatePublicIpAddress:
          description: For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances.
          type: boolean
        ClassicLinkVPCId:
          description: The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to.
          type: string
        EbsOptimized:
          description: Specifies whether the launch configuration is optimized for EBS I/O (true) or not (false).
          type: boolean
        KeyName:
          description: Provides the name of the EC2 key pair.
          type: string
        SpotPrice:
          description: The maximum hourly price you are willing to pay for any Spot Instances launched to fulfill the request.
          type: string
        ImageId:
          description: Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.
          type: string
        InstanceType:
          description: Specifies the instance type of the EC2 instance.
          type: string
        RamDiskId:
          description: The ID of the RAM disk to select.
          type: string
        InstanceMonitoring:
          description: Controls whether instances in this group are launched with detailed (true) or basic (false) monitoring.
          type: boolean
      required:
        - ImageId
        - InstanceType
      x-stackql-resource-name: launch_configuration
      description: The AWS::AutoScaling::LaunchConfiguration resource specifies the launch configuration that can be used by an Auto Scaling group to configure Amazon EC2 instances.
      x-type-name: AWS::AutoScaling::LaunchConfiguration
      x-stackql-primary-identifier:
        - LaunchConfigurationName
      x-create-only-properties:
        - AssociatePublicIpAddress
        - BlockDeviceMappings
        - ClassicLinkVPCId
        - ClassicLinkVPCSecurityGroups
        - EbsOptimized
        - IamInstanceProfile
        - ImageId
        - InstanceId
        - InstanceMonitoring
        - InstanceType
        - KernelId
        - KeyName
        - LaunchConfigurationName
        - MetadataOptions
        - PlacementTenancy
        - RamDiskId
        - SecurityGroups
        - SpotPrice
        - UserData
      x-write-only-properties:
        - InstanceId
      x-required-properties:
        - ImageId
        - InstanceType
      x-tagging:
        taggable: false
      x-required-permissions:
        read:
          - autoscaling:DescribeLaunchConfigurations
        create:
          - autoscaling:CreateLaunchConfiguration
          - autoscaling:DescribeLaunchConfigurations
          - iam:PassRole
        list:
          - autoscaling:DescribeLaunchConfigurations
        delete:
          - autoscaling:DeleteLaunchConfiguration
          - autoscaling:DescribeLaunchConfigurations
    LifecycleHook:
      type: object
      properties:
        AutoScalingGroupName:
          description: The name of the Auto Scaling group for the lifecycle hook.
          type: string
        DefaultResult:
          description: The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are CONTINUE and ABANDON (default).
          type: string
        HeartbeatTimeout:
          description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour). If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the DefaultResult property.
          type: integer
        LifecycleHookName:
          description: The name of the lifecycle hook.
          type: string
          minLength: 1
          maxLength: 255
        LifecycleTransition:
          description: The instance state to which you want to attach the lifecycle hook.
          type: string
        NotificationMetadata:
          description: Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target.
          type: string
          minLength: 1
          maxLength: 1023
        NotificationTargetARN:
          description: 'The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. You can specify an Amazon SQS queue or an Amazon SNS topic. The notification message includes the following information: lifecycle action token, user account ID, Auto Scaling group name, lifecycle hook name, instance ID, lifecycle transition, and notification metadata.'
          type: string
        RoleARN:
          description: The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.
          type: string
      required:
        - LifecycleTransition
        - AutoScalingGroupName
      x-stackql-resource-name: lifecycle_hook
      description: Resource Type definition for AWS::AutoScaling::LifecycleHook
      x-type-name: AWS::AutoScaling::LifecycleHook
      x-stackql-primary-identifier:
        - AutoScalingGroupName
        - LifecycleHookName
      x-create-only-properties:
        - AutoScalingGroupName
        - LifecycleHookName
      x-required-properties:
        - LifecycleTransition
        - AutoScalingGroupName
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - autoscaling:PutLifecycleHook
          - autoscaling:DescribeLifecycleHooks
          - iam:PassRole
        read:
          - autoscaling:DescribeLifecycleHooks
        update:
          - autoscaling:PutLifecycleHook
          - autoscaling:DescribeLifecycleHooks
          - iam:PassRole
        delete:
          - autoscaling:DeleteLifecycleHook
          - autoscaling:DescribeLifecycleHooks
        list:
          - autoscaling:DescribeLifecycleHooks
    PredictiveScalingMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        CustomizedCapacityMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingCustomizedCapacityMetric'
        CustomizedLoadMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingCustomizedLoadMetric'
        CustomizedScalingMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingCustomizedScalingMetric'
        PredefinedLoadMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingPredefinedLoadMetric'
        TargetValue:
          type: number
        PredefinedScalingMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingPredefinedScalingMetric'
        PredefinedMetricPairSpecification:
          $ref: '#/components/schemas/PredictiveScalingPredefinedMetricPair'
      required:
        - TargetValue
    PredictiveScalingConfiguration:
      type: object
      additionalProperties: false
      properties:
        MetricSpecifications:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PredictiveScalingMetricSpecification'
        MaxCapacityBreachBehavior:
          type: string
        MaxCapacityBuffer:
          type: integer
        SchedulingBufferTime:
          type: integer
        Mode:
          type: string
      required:
        - MetricSpecifications
    CustomizedMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        Dimensions:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDimension'
        Metrics:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TargetTrackingMetricDataQuery'
        Statistic:
          type: string
        Unit:
          type: string
        Namespace:
          type: string
        Period:
          type: integer
      required: []
    TargetTrackingConfiguration:
      type: object
      additionalProperties: false
      properties:
        CustomizedMetricSpecification:
          $ref: '#/components/schemas/CustomizedMetricSpecification'
        TargetValue:
          type: number
        DisableScaleIn:
          type: boolean
        PredefinedMetricSpecification:
          $ref: '#/components/schemas/PredefinedMetricSpecification'
      required:
        - TargetValue
    PredictiveScalingPredefinedLoadMetric:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    StepAdjustment:
      type: object
      additionalProperties: false
      x-insertionOrder: false
      properties:
        MetricIntervalUpperBound:
          type: number
        MetricIntervalLowerBound:
          type: number
        ScalingAdjustment:
          type: integer
      required:
        - ScalingAdjustment
    PredictiveScalingPredefinedMetricPair:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    PredefinedMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    MetricDimension:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Name:
          type: string
      required:
        - Value
        - Name
    PredictiveScalingPredefinedScalingMetric:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    PredictiveScalingCustomizedLoadMetric:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
      required:
        - MetricDataQueries
    PredictiveScalingCustomizedCapacityMetric:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
      required:
        - MetricDataQueries
    PredictiveScalingCustomizedScalingMetric:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
      required:
        - MetricDataQueries
    Metric:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        Dimensions:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDimension'
        Namespace:
          type: string
      required:
        - MetricName
        - Namespace
    TargetTrackingMetricStat:
      type: object
      additionalProperties: false
      properties:
        Metric:
          $ref: '#/components/schemas/Metric'
        Stat:
          type: string
        Unit:
          type: string
        Period:
          type: integer
      required:
        - Stat
        - Metric
    MetricStat:
      type: object
      additionalProperties: false
      properties:
        Metric:
          $ref: '#/components/schemas/Metric'
        Stat:
          type: string
        Unit:
          type: string
      required:
        - Stat
        - Metric
    TargetTrackingMetricDataQuery:
      type: object
      additionalProperties: false
      properties:
        Label:
          type: string
        MetricStat:
          $ref: '#/components/schemas/TargetTrackingMetricStat'
        Id:
          type: string
        ReturnData:
          type: boolean
        Expression:
          type: string
        Period:
          type: integer
      required:
        - Id
    MetricDataQuery:
      type: object
      additionalProperties: false
      properties:
        Label:
          type: string
        MetricStat:
          $ref: '#/components/schemas/MetricStat'
        Id:
          type: string
        ReturnData:
          type: boolean
        Expression:
          type: string
      required:
        - Id
    ScalingPolicy:
      type: object
      properties:
        MetricAggregationType:
          description: The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. Valid only if the policy type is StepScaling.
          type: string
        PolicyName:
          type: string
        PolicyType:
          description: 'One of the following policy types: TargetTrackingScaling, StepScaling, SimpleScaling (default), PredictiveScaling'
          type: string
        PredictiveScalingConfiguration:
          description: A predictive scaling policy. Includes support for predefined metrics only.
          $ref: '#/components/schemas/PredictiveScalingConfiguration'
        ScalingAdjustment:
          description: The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value. Required if the policy type is SimpleScaling. (Not used with any other policy type.)
          type: integer
        Cooldown:
          description: The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group.
          type: string
        StepAdjustments:
          description: A set of adjustments that enable you to scale based on the size of the alarm breach. Required if the policy type is StepScaling. (Not used with any other policy type.)
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/StepAdjustment'
        AutoScalingGroupName:
          description: The name of the Auto Scaling group.
          type: string
        MinAdjustmentMagnitude:
          description: The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.
          type: integer
        TargetTrackingConfiguration:
          description: A target tracking scaling policy. Includes support for predefined or customized metrics.
          $ref: '#/components/schemas/TargetTrackingConfiguration'
        EstimatedInstanceWarmup:
          description: The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group. Valid only if the policy type is TargetTrackingScaling or StepScaling.
          type: integer
        AdjustmentType:
          description: Specifies how the scaling adjustment is interpreted. The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
          type: string
        Arn:
          description: The ARN of the AutoScaling scaling policy
          type: string
      required:
        - AutoScalingGroupName
      x-stackql-resource-name: scaling_policy
      description: The AWS::AutoScaling::ScalingPolicy resource specifies an Amazon EC2 Auto Scaling scaling policy so that the Auto Scaling group can scale the number of instances available for your application.
      x-type-name: AWS::AutoScaling::ScalingPolicy
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - AutoScalingGroupName
      x-read-only-properties:
        - PolicyName
        - Arn
      x-required-properties:
        - AutoScalingGroupName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - autoscaling:DescribePolicies
          - autoscaling:PutScalingPolicy
          - cloudwatch:GetMetricData
        read:
          - autoscaling:DescribePolicies
        update:
          - autoscaling:DescribePolicies
          - autoscaling:PutScalingPolicy
          - cloudwatch:GetMetricData
        delete:
          - autoscaling:DeletePolicy
          - autoscaling:DescribePolicies
        list:
          - autoscaling:DescribePolicies
    ScheduledAction:
      type: object
      properties:
        ScheduledActionName:
          description: Auto-generated unique identifier
          type: string
        MinSize:
          description: The minimum size of the Auto Scaling group.
          type: integer
        Recurrence:
          description: The recurring schedule for the action, in Unix cron syntax format. When StartTime and EndTime are specified with Recurrence , they form the boundaries of when the recurring action starts and stops.
          type: string
        TimeZone:
          description: The time zone for the cron expression.
          type: string
        EndTime:
          description: The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
          type: string
        AutoScalingGroupName:
          description: The name of the Auto Scaling group.
          type: string
        StartTime:
          description: The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
          type: string
        DesiredCapacity:
          description: The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain.
          type: integer
        MaxSize:
          description: The minimum size of the Auto Scaling group.
          type: integer
      required:
        - AutoScalingGroupName
      x-stackql-resource-name: scheduled_action
      description: The AWS::AutoScaling::ScheduledAction resource specifies an Amazon EC2 Auto Scaling scheduled action so that the Auto Scaling group can change the number of instances available for your application in response to predictable load changes.
      x-type-name: AWS::AutoScaling::ScheduledAction
      x-stackql-primary-identifier:
        - ScheduledActionName
        - AutoScalingGroupName
      x-create-only-properties:
        - AutoScalingGroupName
      x-read-only-properties:
        - ScheduledActionName
      x-required-properties:
        - AutoScalingGroupName
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - autoscaling:PutScheduledUpdateGroupAction
          - autoscaling:DescribeScheduledActions
        read:
          - autoscaling:DescribeScheduledActions
        update:
          - autoscaling:PutScheduledUpdateGroupAction
        delete:
          - autoscaling:DeleteScheduledAction
          - autoscaling:DescribeScheduledActions
        list:
          - autoscaling:DescribeScheduledActions
    InstanceReusePolicy:
      type: object
      additionalProperties: false
      properties:
        ReuseOnScaleIn:
          type: boolean
    WarmPool:
      type: object
      properties:
        AutoScalingGroupName:
          type: string
        MaxGroupPreparedCapacity:
          type: integer
        MinSize:
          type: integer
        PoolState:
          type: string
        InstanceReusePolicy:
          $ref: '#/components/schemas/InstanceReusePolicy'
      required:
        - AutoScalingGroupName
      x-stackql-resource-name: warm_pool
      description: Resource schema for AWS::AutoScaling::WarmPool.
      x-type-name: AWS::AutoScaling::WarmPool
      x-stackql-primary-identifier:
        - AutoScalingGroupName
      x-create-only-properties:
        - AutoScalingGroupName
      x-required-properties:
        - AutoScalingGroupName
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - autoscaling:PutWarmPool
          - autoscaling:DescribeWarmPool
          - autoscaling:DescribeAutoScalingGroups
        delete:
          - autoscaling:DeleteWarmPool
          - autoscaling:DescribeWarmPool
        read:
          - autoscaling:DescribeWarmPool
        update:
          - autoscaling:PutWarmPool
          - autoscaling:DescribeWarmPool
          - autoscaling:DescribeAutoScalingGroups
    CreateAutoScalingGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            LifecycleHookSpecificationList:
              uniqueItems: false
              description: One or more lifecycle hooks to add to the Auto Scaling group before instances are launched.
              x-insertionOrder: true
              type: array
              items:
                $ref: '#/components/schemas/LifecycleHookSpecification'
            LoadBalancerNames:
              uniqueItems: false
              description: A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the ``TargetGroupARNs`` property instead.
              x-insertionOrder: true
              type: array
              items:
                type: string
            LaunchConfigurationName:
              description: |-
                The name of the launch configuration to use to launch instances.
                 Required only if you don't specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``InstanceId``.
              type: string
            ServiceLinkedRoleARN:
              description: The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other AWS service on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named ``AWSServiceRoleForAutoScaling``, which it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the *Amazon EC2 Auto Scaling User Guide*.
              type: string
            AvailabilityZoneImpairmentPolicy:
              description: The Availability Zone impairment policy.
              $ref: '#/components/schemas/AvailabilityZoneImpairmentPolicy'
            TargetGroupARNs:
              uniqueItems: false
              description: >-
                The Amazon Resource Names (ARN) of the Elastic Load Balancing target groups to associate with the Auto Scaling group. Instances are registered as targets with the target groups. The target groups receive incoming traffic and route requests to one or more registered targets. For more information, see [Use Elastic Load Balancing to distribute traffic across the instances in your Auto Scaling
                group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the *Amazon EC2 Auto Scaling User Guide*.
              x-insertionOrder: false
              type: array
              items:
                type: string
            Cooldown:
              description: |-
                *Only needed if you use simple scaling policies.* 
                 The amount of time, in seconds, between one scaling activity ending and another one starting due to simple scaling policies. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-scaling-cooldowns.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 Default: ``300`` seconds
              type: string
            NotificationConfigurations:
              uniqueItems: false
              description: Configures an Auto Scaling group to send notifications when specified events take place.
              x-insertionOrder: true
              type: array
              items:
                $ref: '#/components/schemas/NotificationConfiguration'
            DesiredCapacity:
              pattern: ^[0-9]+$
              description: |-
                The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure automatic scaling.
                 The number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity when creating the stack, the default is the minimum size of the group.
                 CloudFormation marks the Auto Scaling group as successful (by setting its status to CREATE_COMPLETE) when the desired capacity is reached. However, if a maximum Spot price is set in the launch template or launch configuration that you specified, then desired capacity is not used as a criteria for success. Whether your request is fulfilled depends on Spot Instance capacity and your maximum price.
              type: string
            HealthCheckGracePeriod:
              description: >-
                The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service and marking it unhealthy due to a failed health check. This is useful if your instances do not immediately pass their health checks after they enter the ``InService`` state. For more information, see [Set the health check grace period for an Auto Scaling
                group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/health-check-grace-period.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 Default: ``0`` seconds
              type: integer
            DefaultInstanceWarmup:
              description: |-
                The amount of time, in seconds, until a new instance is considered to have finished initializing and resource consumption to become stable after it enters the ``InService`` state. 
                 During an instance refresh, Amazon EC2 Auto Scaling waits for the warm-up period after it replaces an instance before it moves on to replacing the next instance. Amazon EC2 Auto Scaling also waits for the warm-up period before aggregating the metrics for new instances with existing instances in the Amazon CloudWatch metrics that are used for scaling, resulting in more reliable usage data. For more information, see [Set the default instance warmup for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-default-instance-warmup.html) in the *Amazon EC2 Auto Scaling User Guide*.
                  To manage various warm-up settings at the group level, we recommend that you set the default instance warmup, *even if it is set to 0 seconds*. To remove a value that you previously set, include the property but specify ``-1`` for the value. However, we strongly recommend keeping the default instance warmup enabled by specifying a value of ``0`` or other nominal value.
                  Default: None
              type: integer
            SkipZonalShiftValidation:
              description: ''
              type: boolean
            NewInstancesProtectedFromScaleIn:
              description: Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see [Use instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-protection.html) in the *Amazon EC2 Auto Scaling User Guide*.
              type: boolean
            LaunchTemplate:
              description: |-
                Information used to specify the launch template and version to use to launch instances. You can alternatively associate a launch template to the Auto Scaling group by specifying a ``MixedInstancesPolicy``. For more information about creating launch templates, see [Create a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 If you omit this property, you must specify ``MixedInstancesPolicy``, ``LaunchConfigurationName``, or ``InstanceId``.
              $ref: '#/components/schemas/LaunchTemplateSpecification'
            MixedInstancesPolicy:
              description: |-
                An embedded object that specifies a mixed instances policy.
                 The policy includes properties that not only define the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances (optional), and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance configuration information—the launch template and instance types. The policy can also include a weight for each instance type and different launch templates for individual instance types.
                 For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-mixed-instances-groups.html) in the *Amazon EC2 Auto Scaling User Guide*.
              $ref: '#/components/schemas/MixedInstancesPolicy'
            VPCZoneIdentifier:
              uniqueItems: false
              description: |-
                A list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created.
                 If this resource specifies public subnets and is also in a VPC that is defined in the same stack template, you must use the [DependsOn attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html) to declare a dependency on the [VPC-gateway attachment](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpc-gateway-attachment.html).
                  When you update ``VPCZoneIdentifier``, this retains the same Auto Scaling group and replaces old instances with new ones, according to the specified subnets. You can optionally specify how CloudFormation handles these updates by using an [UpdatePolicy attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html).
                  Required to launch instances into a nondefault VPC. If you specify ``VPCZoneIdentifier`` with ``AvailabilityZones``, the subnets that you specify for this property must reside in those Availability Zones.
              x-insertionOrder: false
              type: array
              items:
                type: string
            Tags:
              description: >-
                One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group.
                For more information, see [Tag Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-tagging.html) in the *Amazon EC2 Auto Scaling User Guide*.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/TagProperty'
            Context:
              description: Reserved.
              type: string
            CapacityRebalance:
              description: >-
                Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see [Use Capacity Rebalancing to handle Amazon EC2 Spot
                Interruptions](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-capacity-rebalancing.html) in the in the *Amazon EC2 Auto Scaling User Guide*.
              type: boolean
            InstanceId:
              description: |-
                The ID of the instance used to base the launch configuration on. For more information, see [Create an Auto Scaling group using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 If you specify ``LaunchTemplate``, ``MixedInstancesPolicy``, or ``LaunchConfigurationName``, don't specify ``InstanceId``.
              type: string
            AvailabilityZones:
              uniqueItems: false
              description: A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the ``VPCZoneIdentifier`` property, or for attaching a network interface when an existing network interface ID is specified in a launch template.
              x-insertionOrder: false
              type: array
              items:
                type: string
            NotificationConfiguration:
              description: ''
              $ref: '#/components/schemas/NotificationConfiguration'
            AvailabilityZoneDistribution:
              description: The instance capacity distribution across Availability Zones.
              $ref: '#/components/schemas/AvailabilityZoneDistribution'
            MetricsCollection:
              uniqueItems: false
              description: Enables the monitoring of group metrics of an Auto Scaling group. By default, these metrics are disabled.
              x-insertionOrder: true
              type: array
              items:
                $ref: '#/components/schemas/MetricsCollection'
            InstanceMaintenancePolicy:
              description: An instance maintenance policy. For more information, see [Set instance maintenance policy](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-instance-maintenance-policy.html) in the *Amazon EC2 Auto Scaling User Guide*.
              $ref: '#/components/schemas/InstanceMaintenancePolicy'
            MaxSize:
              pattern: ^[0-9]+$
              description: |-
                The maximum size of the group.
                  With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above ``MaxSize`` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above ``MaxSize`` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).
              type: string
            MinSize:
              pattern: ^[0-9]+$
              description: The minimum size of the group.
              type: string
            TerminationPolicies:
              uniqueItems: false
              description: |-
                A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see [Configure termination policies for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-termination-policies.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 Valid values: ``Default`` | ``AllocationStrategy`` | ``ClosestToNextInstanceHour`` | ``NewestInstance`` | ``OldestInstance`` | ``OldestLaunchConfiguration`` | ``OldestLaunchTemplate`` | ``arn:aws:lambda:region:account-id:function:my-function:my-alias``
              x-insertionOrder: true
              type: array
              items:
                type: string
            AutoScalingGroupName:
              description: |-
                The name of the Auto Scaling group. This name must be unique per Region per account.
                 The name can contain any ASCII character 33 to 126 including most punctuation characters, digits, and upper and lowercased letters.
                  You cannot use a colon (:) in the name.
              type: string
            TrafficSources:
              uniqueItems: true
              description: The traffic sources associated with this Auto Scaling group.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/TrafficSourceIdentifier'
            DesiredCapacityType:
              description: |-
                The unit of measurement for the value specified for desired capacity. Amazon EC2 Auto Scaling supports ``DesiredCapacityType`` for attribute-based instance type selection only. For more information, see [Create a mixed instances group using attribute-based instance type selection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-mixed-instances-group-attribute-based-instance-type-selection.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 By default, Amazon EC2 Auto Scaling specifies ``units``, which translates into number of instances.
                 Valid values: ``units`` | ``vcpu`` | ``memory-mib``
              type: string
            PlacementGroup:
              description: |-
                The name of the placement group into which to launch your instances. For more information, see [Placement groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the *Amazon EC2 User Guide for Linux Instances*.
                  A *cluster* placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a cluster placement group.
              type: string
            CapacityReservationSpecification:
              description: ''
              $ref: '#/components/schemas/CapacityReservationSpecification'
            HealthCheckType:
              description: |-
                A comma-separated value string of one or more health check types.
                 The valid values are ``EC2``, ``EBS``, ``ELB``, and ``VPC_LATTICE``. ``EC2`` is the default health check and cannot be disabled. For more information, see [Health checks for instances in an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-health-checks.html) in the *Amazon EC2 Auto Scaling User Guide*.
                 Only specify ``EC2`` if you must clear a value that was previously set.
              type: string
            MaxInstanceLifetime:
              description: The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replace Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the *Amazon EC2 Auto Scaling User Guide*.
              type: integer
          x-stackQL-stringOnly: true
      x-title: CreateAutoScalingGroupRequest
      type: object
      required: []
    CreateLaunchConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PlacementTenancy:
              description: The tenancy of the instance, either default or dedicated.
              type: string
            SecurityGroups:
              description: A list that contains the security groups to assign to the instances in the Auto Scaling group.
              x-insertionOrder: false
              type: array
              items:
                anyOf:
                  - relationshipRef:
                      typeName: AWS::EC2::SecurityGroup
                      propertyPath: /properties/GroupId
                  - relationshipRef:
                      typeName: AWS::EC2::SecurityGroup
                      propertyPath: /properties/Id
                type: string
            LaunchConfigurationName:
              minLength: 1
              description: The name of the launch configuration. This name must be unique per Region per account.
              type: string
              maxLength: 255
            MetadataOptions:
              description: The metadata options for the instances.
              $ref: '#/components/schemas/MetadataOptions'
            InstanceId:
              description: The ID of the Amazon EC2 instance you want to use to create the launch configuration.
              type: string
            UserData:
              description: The Base64-encoded user data to make available to the launched EC2 instances.
              type: string
              maxLength: 21847
            ClassicLinkVPCSecurityGroups:
              description: The IDs of one or more security groups for the VPC that you specified in the ClassicLinkVPCId property.
              x-insertionOrder: false
              type: array
              items:
                type: string
            BlockDeviceMappings:
              uniqueItems: true
              description: Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.
              x-insertionOrder: false
              type: array
              items:
                $ref: '#/components/schemas/BlockDeviceMapping'
            IamInstanceProfile:
              description: Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.
              type: string
            KernelId:
              description: Provides the ID of the kernel associated with the EC2 AMI.
              type: string
            AssociatePublicIpAddress:
              description: For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances.
              type: boolean
            ClassicLinkVPCId:
              description: The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to.
              type: string
            EbsOptimized:
              description: Specifies whether the launch configuration is optimized for EBS I/O (true) or not (false).
              type: boolean
            KeyName:
              description: Provides the name of the EC2 key pair.
              type: string
            SpotPrice:
              description: The maximum hourly price you are willing to pay for any Spot Instances launched to fulfill the request.
              type: string
            ImageId:
              description: Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.
              type: string
            InstanceType:
              description: Specifies the instance type of the EC2 instance.
              type: string
            RamDiskId:
              description: The ID of the RAM disk to select.
              type: string
            InstanceMonitoring:
              description: Controls whether instances in this group are launched with detailed (true) or basic (false) monitoring.
              type: boolean
          x-stackQL-stringOnly: true
      x-title: CreateLaunchConfigurationRequest
      type: object
      required: []
    CreateLifecycleHookRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AutoScalingGroupName:
              description: The name of the Auto Scaling group for the lifecycle hook.
              type: string
            DefaultResult:
              description: The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are CONTINUE and ABANDON (default).
              type: string
            HeartbeatTimeout:
              description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour). If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the DefaultResult property.
              type: integer
            LifecycleHookName:
              description: The name of the lifecycle hook.
              type: string
              minLength: 1
              maxLength: 255
            LifecycleTransition:
              description: The instance state to which you want to attach the lifecycle hook.
              type: string
            NotificationMetadata:
              description: Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target.
              type: string
              minLength: 1
              maxLength: 1023
            NotificationTargetARN:
              description: 'The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. You can specify an Amazon SQS queue or an Amazon SNS topic. The notification message includes the following information: lifecycle action token, user account ID, Auto Scaling group name, lifecycle hook name, instance ID, lifecycle transition, and notification metadata.'
              type: string
            RoleARN:
              description: The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateLifecycleHookRequest
      type: object
      required: []
    CreateScalingPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MetricAggregationType:
              description: The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. Valid only if the policy type is StepScaling.
              type: string
            PolicyName:
              type: string
            PolicyType:
              description: 'One of the following policy types: TargetTrackingScaling, StepScaling, SimpleScaling (default), PredictiveScaling'
              type: string
            PredictiveScalingConfiguration:
              description: A predictive scaling policy. Includes support for predefined metrics only.
              $ref: '#/components/schemas/PredictiveScalingConfiguration'
            ScalingAdjustment:
              description: The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value. Required if the policy type is SimpleScaling. (Not used with any other policy type.)
              type: integer
            Cooldown:
              description: The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group.
              type: string
            StepAdjustments:
              description: A set of adjustments that enable you to scale based on the size of the alarm breach. Required if the policy type is StepScaling. (Not used with any other policy type.)
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/StepAdjustment'
            AutoScalingGroupName:
              description: The name of the Auto Scaling group.
              type: string
            MinAdjustmentMagnitude:
              description: The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.
              type: integer
            TargetTrackingConfiguration:
              description: A target tracking scaling policy. Includes support for predefined or customized metrics.
              $ref: '#/components/schemas/TargetTrackingConfiguration'
            EstimatedInstanceWarmup:
              description: The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group. Valid only if the policy type is TargetTrackingScaling or StepScaling.
              type: integer
            AdjustmentType:
              description: Specifies how the scaling adjustment is interpreted. The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
              type: string
            Arn:
              description: The ARN of the AutoScaling scaling policy
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateScalingPolicyRequest
      type: object
      required: []
    CreateScheduledActionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ScheduledActionName:
              description: Auto-generated unique identifier
              type: string
            MinSize:
              description: The minimum size of the Auto Scaling group.
              type: integer
            Recurrence:
              description: The recurring schedule for the action, in Unix cron syntax format. When StartTime and EndTime are specified with Recurrence , they form the boundaries of when the recurring action starts and stops.
              type: string
            TimeZone:
              description: The time zone for the cron expression.
              type: string
            EndTime:
              description: The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
              type: string
            AutoScalingGroupName:
              description: The name of the Auto Scaling group.
              type: string
            StartTime:
              description: The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
              type: string
            DesiredCapacity:
              description: The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain.
              type: integer
            MaxSize:
              description: The minimum size of the Auto Scaling group.
              type: integer
          x-stackQL-stringOnly: true
      x-title: CreateScheduledActionRequest
      type: object
      required: []
    CreateWarmPoolRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AutoScalingGroupName:
              type: string
            MaxGroupPreparedCapacity:
              type: integer
            MinSize:
              type: integer
            PoolState:
              type: string
            InstanceReusePolicy:
              $ref: '#/components/schemas/InstanceReusePolicy'
          x-stackQL-stringOnly: true
      x-title: CreateWarmPoolRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    auto_scaling_groups:
      name: auto_scaling_groups
      id: aws.autoscaling.auto_scaling_groups
      x-cfn-schema-name: AutoScalingGroup
      x-cfn-type-name: AWS::AutoScaling::AutoScalingGroup
      x-identifiers:
        - AutoScalingGroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AutoScalingGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::AutoScalingGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::AutoScalingGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::AutoScalingGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/auto_scaling_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/auto_scaling_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/auto_scaling_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
              JSON_EXTRACT(Properties, '$.LoadBalancerNames') as load_balancer_names,
              JSON_EXTRACT(Properties, '$.LaunchConfigurationName') as launch_configuration_name,
              JSON_EXTRACT(Properties, '$.ServiceLinkedRoleARN') as service_linked_role_arn,
              JSON_EXTRACT(Properties, '$.AvailabilityZoneImpairmentPolicy') as availability_zone_impairment_policy,
              JSON_EXTRACT(Properties, '$.TargetGroupARNs') as target_group_arns,
              JSON_EXTRACT(Properties, '$.Cooldown') as cooldown,
              JSON_EXTRACT(Properties, '$.NotificationConfigurations') as notification_configurations,
              JSON_EXTRACT(Properties, '$.DesiredCapacity') as desired_capacity,
              JSON_EXTRACT(Properties, '$.HealthCheckGracePeriod') as health_check_grace_period,
              JSON_EXTRACT(Properties, '$.DefaultInstanceWarmup') as default_instance_warmup,
              JSON_EXTRACT(Properties, '$.SkipZonalShiftValidation') as skip_zonal_shift_validation,
              JSON_EXTRACT(Properties, '$.NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
              JSON_EXTRACT(Properties, '$.LaunchTemplate') as launch_template,
              JSON_EXTRACT(Properties, '$.MixedInstancesPolicy') as mixed_instances_policy,
              JSON_EXTRACT(Properties, '$.VPCZoneIdentifier') as vpc_zone_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Context') as context,
              JSON_EXTRACT(Properties, '$.CapacityRebalance') as capacity_rebalance,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(Properties, '$.NotificationConfiguration') as notification_configuration,
              JSON_EXTRACT(Properties, '$.AvailabilityZoneDistribution') as availability_zone_distribution,
              JSON_EXTRACT(Properties, '$.MetricsCollection') as metrics_collection,
              JSON_EXTRACT(Properties, '$.InstanceMaintenancePolicy') as instance_maintenance_policy,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.TerminationPolicies') as termination_policies,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.TrafficSources') as traffic_sources,
              JSON_EXTRACT(Properties, '$.DesiredCapacityType') as desired_capacity_type,
              JSON_EXTRACT(Properties, '$.PlacementGroup') as placement_group,
              JSON_EXTRACT(Properties, '$.CapacityReservationSpecification') as capacity_reservation_specification,
              JSON_EXTRACT(Properties, '$.HealthCheckType') as health_check_type,
              JSON_EXTRACT(Properties, '$.MaxInstanceLifetime') as max_instance_lifetime
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
              AND data__Identifier = '<AutoScalingGroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
                JSON_EXTRACT(detail.Properties, '$.LoadBalancerNames') as load_balancer_names,
                JSON_EXTRACT(detail.Properties, '$.LaunchConfigurationName') as launch_configuration_name,
                JSON_EXTRACT(detail.Properties, '$.ServiceLinkedRoleARN') as service_linked_role_arn,
                JSON_EXTRACT(detail.Properties, '$.AvailabilityZoneImpairmentPolicy') as availability_zone_impairment_policy,
                JSON_EXTRACT(detail.Properties, '$.TargetGroupARNs') as target_group_arns,
                JSON_EXTRACT(detail.Properties, '$.Cooldown') as cooldown,
                JSON_EXTRACT(detail.Properties, '$.NotificationConfigurations') as notification_configurations,
                JSON_EXTRACT(detail.Properties, '$.DesiredCapacity') as desired_capacity,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckGracePeriod') as health_check_grace_period,
                JSON_EXTRACT(detail.Properties, '$.DefaultInstanceWarmup') as default_instance_warmup,
                JSON_EXTRACT(detail.Properties, '$.SkipZonalShiftValidation') as skip_zonal_shift_validation,
                JSON_EXTRACT(detail.Properties, '$.NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
                JSON_EXTRACT(detail.Properties, '$.LaunchTemplate') as launch_template,
                JSON_EXTRACT(detail.Properties, '$.MixedInstancesPolicy') as mixed_instances_policy,
                JSON_EXTRACT(detail.Properties, '$.VPCZoneIdentifier') as vpc_zone_identifier,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Context') as context,
                JSON_EXTRACT(detail.Properties, '$.CapacityRebalance') as capacity_rebalance,
                JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id,
                JSON_EXTRACT(detail.Properties, '$.AvailabilityZones') as availability_zones,
                JSON_EXTRACT(detail.Properties, '$.NotificationConfiguration') as notification_configuration,
                JSON_EXTRACT(detail.Properties, '$.AvailabilityZoneDistribution') as availability_zone_distribution,
                JSON_EXTRACT(detail.Properties, '$.MetricsCollection') as metrics_collection,
                JSON_EXTRACT(detail.Properties, '$.InstanceMaintenancePolicy') as instance_maintenance_policy,
                JSON_EXTRACT(detail.Properties, '$.MaxSize') as max_size,
                JSON_EXTRACT(detail.Properties, '$.MinSize') as min_size,
                JSON_EXTRACT(detail.Properties, '$.TerminationPolicies') as termination_policies,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
                JSON_EXTRACT(detail.Properties, '$.TrafficSources') as traffic_sources,
                JSON_EXTRACT(detail.Properties, '$.DesiredCapacityType') as desired_capacity_type,
                JSON_EXTRACT(detail.Properties, '$.PlacementGroup') as placement_group,
                JSON_EXTRACT(detail.Properties, '$.CapacityReservationSpecification') as capacity_reservation_specification,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckType') as health_check_type,
                JSON_EXTRACT(detail.Properties, '$.MaxInstanceLifetime') as max_instance_lifetime
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                AND detail.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
                  json_extract_path_text(Properties, 'LoadBalancerNames') as load_balancer_names,
                  json_extract_path_text(Properties, 'LaunchConfigurationName') as launch_configuration_name,
                  json_extract_path_text(Properties, 'ServiceLinkedRoleARN') as service_linked_role_arn,
                  json_extract_path_text(Properties, 'AvailabilityZoneImpairmentPolicy') as availability_zone_impairment_policy,
                  json_extract_path_text(Properties, 'TargetGroupARNs') as target_group_arns,
                  json_extract_path_text(Properties, 'Cooldown') as cooldown,
                  json_extract_path_text(Properties, 'NotificationConfigurations') as notification_configurations,
                  json_extract_path_text(Properties, 'DesiredCapacity') as desired_capacity,
                  json_extract_path_text(Properties, 'HealthCheckGracePeriod') as health_check_grace_period,
                  json_extract_path_text(Properties, 'DefaultInstanceWarmup') as default_instance_warmup,
                  json_extract_path_text(Properties, 'SkipZonalShiftValidation') as skip_zonal_shift_validation,
                  json_extract_path_text(Properties, 'NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
                  json_extract_path_text(Properties, 'LaunchTemplate') as launch_template,
                  json_extract_path_text(Properties, 'MixedInstancesPolicy') as mixed_instances_policy,
                  json_extract_path_text(Properties, 'VPCZoneIdentifier') as vpc_zone_identifier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Context') as context,
                  json_extract_path_text(Properties, 'CapacityRebalance') as capacity_rebalance,
                  json_extract_path_text(Properties, 'InstanceId') as instance_id,
                  json_extract_path_text(Properties, 'AvailabilityZones') as availability_zones,
                  json_extract_path_text(Properties, 'NotificationConfiguration') as notification_configuration,
                  json_extract_path_text(Properties, 'AvailabilityZoneDistribution') as availability_zone_distribution,
                  json_extract_path_text(Properties, 'MetricsCollection') as metrics_collection,
                  json_extract_path_text(Properties, 'InstanceMaintenancePolicy') as instance_maintenance_policy,
                  json_extract_path_text(Properties, 'MaxSize') as max_size,
                  json_extract_path_text(Properties, 'MinSize') as min_size,
                  json_extract_path_text(Properties, 'TerminationPolicies') as termination_policies,
                  json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                  json_extract_path_text(Properties, 'TrafficSources') as traffic_sources,
                  json_extract_path_text(Properties, 'DesiredCapacityType') as desired_capacity_type,
                  json_extract_path_text(Properties, 'PlacementGroup') as placement_group,
                  json_extract_path_text(Properties, 'CapacityReservationSpecification') as capacity_reservation_specification,
                  json_extract_path_text(Properties, 'HealthCheckType') as health_check_type,
                  json_extract_path_text(Properties, 'MaxInstanceLifetime') as max_instance_lifetime
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                  AND data__Identifier = '<AutoScalingGroupName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
                    json_extract_path_text(detail.Properties, 'LoadBalancerNames') as load_balancer_names,
                    json_extract_path_text(detail.Properties, 'LaunchConfigurationName') as launch_configuration_name,
                    json_extract_path_text(detail.Properties, 'ServiceLinkedRoleARN') as service_linked_role_arn,
                    json_extract_path_text(detail.Properties, 'AvailabilityZoneImpairmentPolicy') as availability_zone_impairment_policy,
                    json_extract_path_text(detail.Properties, 'TargetGroupARNs') as target_group_arns,
                    json_extract_path_text(detail.Properties, 'Cooldown') as cooldown,
                    json_extract_path_text(detail.Properties, 'NotificationConfigurations') as notification_configurations,
                    json_extract_path_text(detail.Properties, 'DesiredCapacity') as desired_capacity,
                    json_extract_path_text(detail.Properties, 'HealthCheckGracePeriod') as health_check_grace_period,
                    json_extract_path_text(detail.Properties, 'DefaultInstanceWarmup') as default_instance_warmup,
                    json_extract_path_text(detail.Properties, 'SkipZonalShiftValidation') as skip_zonal_shift_validation,
                    json_extract_path_text(detail.Properties, 'NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
                    json_extract_path_text(detail.Properties, 'LaunchTemplate') as launch_template,
                    json_extract_path_text(detail.Properties, 'MixedInstancesPolicy') as mixed_instances_policy,
                    json_extract_path_text(detail.Properties, 'VPCZoneIdentifier') as vpc_zone_identifier,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Context') as context,
                    json_extract_path_text(detail.Properties, 'CapacityRebalance') as capacity_rebalance,
                    json_extract_path_text(detail.Properties, 'InstanceId') as instance_id,
                    json_extract_path_text(detail.Properties, 'AvailabilityZones') as availability_zones,
                    json_extract_path_text(detail.Properties, 'NotificationConfiguration') as notification_configuration,
                    json_extract_path_text(detail.Properties, 'AvailabilityZoneDistribution') as availability_zone_distribution,
                    json_extract_path_text(detail.Properties, 'MetricsCollection') as metrics_collection,
                    json_extract_path_text(detail.Properties, 'InstanceMaintenancePolicy') as instance_maintenance_policy,
                    json_extract_path_text(detail.Properties, 'MaxSize') as max_size,
                    json_extract_path_text(detail.Properties, 'MinSize') as min_size,
                    json_extract_path_text(detail.Properties, 'TerminationPolicies') as termination_policies,
                    json_extract_path_text(detail.Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                    json_extract_path_text(detail.Properties, 'TrafficSources') as traffic_sources,
                    json_extract_path_text(detail.Properties, 'DesiredCapacityType') as desired_capacity_type,
                    json_extract_path_text(detail.Properties, 'PlacementGroup') as placement_group,
                    json_extract_path_text(detail.Properties, 'CapacityReservationSpecification') as capacity_reservation_specification,
                    json_extract_path_text(detail.Properties, 'HealthCheckType') as health_check_type,
                    json_extract_path_text(detail.Properties, 'MaxInstanceLifetime') as max_instance_lifetime
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                    AND detail.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                    AND listing.region = 'us-east-1'
    auto_scaling_groups_list_only:
      name: auto_scaling_groups_list_only
      id: aws.autoscaling.auto_scaling_groups_list_only
      x-cfn-schema-name: AutoScalingGroup
      x-cfn-type-name: AWS::AutoScaling::AutoScalingGroup
      x-identifiers:
        - AutoScalingGroupName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                AND region = 'us-east-1'
    auto_scaling_group_tags:
      name: auto_scaling_group_tags
      id: aws.autoscaling.auto_scaling_group_tags
      x-cfn-schema-name: AutoScalingGroup
      x-cfn-type-name: AWS::AutoScaling::AutoScalingGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
              JSON_EXTRACT(detail.Properties, '$.LoadBalancerNames') as load_balancer_names,
              JSON_EXTRACT(detail.Properties, '$.LaunchConfigurationName') as launch_configuration_name,
              JSON_EXTRACT(detail.Properties, '$.ServiceLinkedRoleARN') as service_linked_role_arn,
              JSON_EXTRACT(detail.Properties, '$.AvailabilityZoneImpairmentPolicy') as availability_zone_impairment_policy,
              JSON_EXTRACT(detail.Properties, '$.TargetGroupARNs') as target_group_arns,
              JSON_EXTRACT(detail.Properties, '$.Cooldown') as cooldown,
              JSON_EXTRACT(detail.Properties, '$.NotificationConfigurations') as notification_configurations,
              JSON_EXTRACT(detail.Properties, '$.DesiredCapacity') as desired_capacity,
              JSON_EXTRACT(detail.Properties, '$.HealthCheckGracePeriod') as health_check_grace_period,
              JSON_EXTRACT(detail.Properties, '$.DefaultInstanceWarmup') as default_instance_warmup,
              JSON_EXTRACT(detail.Properties, '$.SkipZonalShiftValidation') as skip_zonal_shift_validation,
              JSON_EXTRACT(detail.Properties, '$.NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
              JSON_EXTRACT(detail.Properties, '$.LaunchTemplate') as launch_template,
              JSON_EXTRACT(detail.Properties, '$.MixedInstancesPolicy') as mixed_instances_policy,
              JSON_EXTRACT(detail.Properties, '$.VPCZoneIdentifier') as vpc_zone_identifier,
              JSON_EXTRACT(detail.Properties, '$.Context') as context,
              JSON_EXTRACT(detail.Properties, '$.CapacityRebalance') as capacity_rebalance,
              JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(detail.Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(detail.Properties, '$.NotificationConfiguration') as notification_configuration,
              JSON_EXTRACT(detail.Properties, '$.AvailabilityZoneDistribution') as availability_zone_distribution,
              JSON_EXTRACT(detail.Properties, '$.MetricsCollection') as metrics_collection,
              JSON_EXTRACT(detail.Properties, '$.InstanceMaintenancePolicy') as instance_maintenance_policy,
              JSON_EXTRACT(detail.Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(detail.Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(detail.Properties, '$.TerminationPolicies') as termination_policies,
              JSON_EXTRACT(detail.Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(detail.Properties, '$.TrafficSources') as traffic_sources,
              JSON_EXTRACT(detail.Properties, '$.DesiredCapacityType') as desired_capacity_type,
              JSON_EXTRACT(detail.Properties, '$.PlacementGroup') as placement_group,
              JSON_EXTRACT(detail.Properties, '$.CapacityReservationSpecification') as capacity_reservation_specification,
              JSON_EXTRACT(detail.Properties, '$.HealthCheckType') as health_check_type,
              JSON_EXTRACT(detail.Properties, '$.MaxInstanceLifetime') as max_instance_lifetime
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
              AND detail.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
                json_extract_path_text(detail.Properties, 'LoadBalancerNames') as load_balancer_names,
                json_extract_path_text(detail.Properties, 'LaunchConfigurationName') as launch_configuration_name,
                json_extract_path_text(detail.Properties, 'ServiceLinkedRoleARN') as service_linked_role_arn,
                json_extract_path_text(detail.Properties, 'AvailabilityZoneImpairmentPolicy') as availability_zone_impairment_policy,
                json_extract_path_text(detail.Properties, 'TargetGroupARNs') as target_group_arns,
                json_extract_path_text(detail.Properties, 'Cooldown') as cooldown,
                json_extract_path_text(detail.Properties, 'NotificationConfigurations') as notification_configurations,
                json_extract_path_text(detail.Properties, 'DesiredCapacity') as desired_capacity,
                json_extract_path_text(detail.Properties, 'HealthCheckGracePeriod') as health_check_grace_period,
                json_extract_path_text(detail.Properties, 'DefaultInstanceWarmup') as default_instance_warmup,
                json_extract_path_text(detail.Properties, 'SkipZonalShiftValidation') as skip_zonal_shift_validation,
                json_extract_path_text(detail.Properties, 'NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
                json_extract_path_text(detail.Properties, 'LaunchTemplate') as launch_template,
                json_extract_path_text(detail.Properties, 'MixedInstancesPolicy') as mixed_instances_policy,
                json_extract_path_text(detail.Properties, 'VPCZoneIdentifier') as vpc_zone_identifier,
                json_extract_path_text(detail.Properties, 'Context') as context,
                json_extract_path_text(detail.Properties, 'CapacityRebalance') as capacity_rebalance,
                json_extract_path_text(detail.Properties, 'InstanceId') as instance_id,
                json_extract_path_text(detail.Properties, 'AvailabilityZones') as availability_zones,
                json_extract_path_text(detail.Properties, 'NotificationConfiguration') as notification_configuration,
                json_extract_path_text(detail.Properties, 'AvailabilityZoneDistribution') as availability_zone_distribution,
                json_extract_path_text(detail.Properties, 'MetricsCollection') as metrics_collection,
                json_extract_path_text(detail.Properties, 'InstanceMaintenancePolicy') as instance_maintenance_policy,
                json_extract_path_text(detail.Properties, 'MaxSize') as max_size,
                json_extract_path_text(detail.Properties, 'MinSize') as min_size,
                json_extract_path_text(detail.Properties, 'TerminationPolicies') as termination_policies,
                json_extract_path_text(detail.Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                json_extract_path_text(detail.Properties, 'TrafficSources') as traffic_sources,
                json_extract_path_text(detail.Properties, 'DesiredCapacityType') as desired_capacity_type,
                json_extract_path_text(detail.Properties, 'PlacementGroup') as placement_group,
                json_extract_path_text(detail.Properties, 'CapacityReservationSpecification') as capacity_reservation_specification,
                json_extract_path_text(detail.Properties, 'HealthCheckType') as health_check_type,
                json_extract_path_text(detail.Properties, 'MaxInstanceLifetime') as max_instance_lifetime
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                AND detail.data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
                AND listing.region = 'us-east-1'
    launch_configurations:
      name: launch_configurations
      id: aws.autoscaling.launch_configurations
      x-cfn-schema-name: LaunchConfiguration
      x-cfn-type-name: AWS::AutoScaling::LaunchConfiguration
      x-identifiers:
        - LaunchConfigurationName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LaunchConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::LaunchConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::LaunchConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/launch_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/launch_configurations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PlacementTenancy') as placement_tenancy,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.LaunchConfigurationName') as launch_configuration_name,
              JSON_EXTRACT(Properties, '$.MetadataOptions') as metadata_options,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.UserData') as user_data,
              JSON_EXTRACT(Properties, '$.ClassicLinkVPCSecurityGroups') as classic_link_vpc_security_groups,
              JSON_EXTRACT(Properties, '$.BlockDeviceMappings') as block_device_mappings,
              JSON_EXTRACT(Properties, '$.IamInstanceProfile') as iam_instance_profile,
              JSON_EXTRACT(Properties, '$.KernelId') as kernel_id,
              JSON_EXTRACT(Properties, '$.AssociatePublicIpAddress') as associate_public_ip_address,
              JSON_EXTRACT(Properties, '$.ClassicLinkVPCId') as classic_link_vpc_id,
              JSON_EXTRACT(Properties, '$.EbsOptimized') as ebs_optimized,
              JSON_EXTRACT(Properties, '$.KeyName') as key_name,
              JSON_EXTRACT(Properties, '$.SpotPrice') as spot_price,
              JSON_EXTRACT(Properties, '$.ImageId') as image_id,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.RamDiskId') as ram_disk_id,
              JSON_EXTRACT(Properties, '$.InstanceMonitoring') as instance_monitoring
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
              AND data__Identifier = '<LaunchConfigurationName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.PlacementTenancy') as placement_tenancy,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroups') as security_groups,
                JSON_EXTRACT(detail.Properties, '$.LaunchConfigurationName') as launch_configuration_name,
                JSON_EXTRACT(detail.Properties, '$.MetadataOptions') as metadata_options,
                JSON_EXTRACT(detail.Properties, '$.InstanceId') as instance_id,
                JSON_EXTRACT(detail.Properties, '$.UserData') as user_data,
                JSON_EXTRACT(detail.Properties, '$.ClassicLinkVPCSecurityGroups') as classic_link_vpc_security_groups,
                JSON_EXTRACT(detail.Properties, '$.BlockDeviceMappings') as block_device_mappings,
                JSON_EXTRACT(detail.Properties, '$.IamInstanceProfile') as iam_instance_profile,
                JSON_EXTRACT(detail.Properties, '$.KernelId') as kernel_id,
                JSON_EXTRACT(detail.Properties, '$.AssociatePublicIpAddress') as associate_public_ip_address,
                JSON_EXTRACT(detail.Properties, '$.ClassicLinkVPCId') as classic_link_vpc_id,
                JSON_EXTRACT(detail.Properties, '$.EbsOptimized') as ebs_optimized,
                JSON_EXTRACT(detail.Properties, '$.KeyName') as key_name,
                JSON_EXTRACT(detail.Properties, '$.SpotPrice') as spot_price,
                JSON_EXTRACT(detail.Properties, '$.ImageId') as image_id,
                JSON_EXTRACT(detail.Properties, '$.InstanceType') as instance_type,
                JSON_EXTRACT(detail.Properties, '$.RamDiskId') as ram_disk_id,
                JSON_EXTRACT(detail.Properties, '$.InstanceMonitoring') as instance_monitoring
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
                AND detail.data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'PlacementTenancy') as placement_tenancy,
                  json_extract_path_text(Properties, 'SecurityGroups') as security_groups,
                  json_extract_path_text(Properties, 'LaunchConfigurationName') as launch_configuration_name,
                  json_extract_path_text(Properties, 'MetadataOptions') as metadata_options,
                  json_extract_path_text(Properties, 'InstanceId') as instance_id,
                  json_extract_path_text(Properties, 'UserData') as user_data,
                  json_extract_path_text(Properties, 'ClassicLinkVPCSecurityGroups') as classic_link_vpc_security_groups,
                  json_extract_path_text(Properties, 'BlockDeviceMappings') as block_device_mappings,
                  json_extract_path_text(Properties, 'IamInstanceProfile') as iam_instance_profile,
                  json_extract_path_text(Properties, 'KernelId') as kernel_id,
                  json_extract_path_text(Properties, 'AssociatePublicIpAddress') as associate_public_ip_address,
                  json_extract_path_text(Properties, 'ClassicLinkVPCId') as classic_link_vpc_id,
                  json_extract_path_text(Properties, 'EbsOptimized') as ebs_optimized,
                  json_extract_path_text(Properties, 'KeyName') as key_name,
                  json_extract_path_text(Properties, 'SpotPrice') as spot_price,
                  json_extract_path_text(Properties, 'ImageId') as image_id,
                  json_extract_path_text(Properties, 'InstanceType') as instance_type,
                  json_extract_path_text(Properties, 'RamDiskId') as ram_disk_id,
                  json_extract_path_text(Properties, 'InstanceMonitoring') as instance_monitoring
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
                  AND data__Identifier = '<LaunchConfigurationName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'PlacementTenancy') as placement_tenancy,
                    json_extract_path_text(detail.Properties, 'SecurityGroups') as security_groups,
                    json_extract_path_text(detail.Properties, 'LaunchConfigurationName') as launch_configuration_name,
                    json_extract_path_text(detail.Properties, 'MetadataOptions') as metadata_options,
                    json_extract_path_text(detail.Properties, 'InstanceId') as instance_id,
                    json_extract_path_text(detail.Properties, 'UserData') as user_data,
                    json_extract_path_text(detail.Properties, 'ClassicLinkVPCSecurityGroups') as classic_link_vpc_security_groups,
                    json_extract_path_text(detail.Properties, 'BlockDeviceMappings') as block_device_mappings,
                    json_extract_path_text(detail.Properties, 'IamInstanceProfile') as iam_instance_profile,
                    json_extract_path_text(detail.Properties, 'KernelId') as kernel_id,
                    json_extract_path_text(detail.Properties, 'AssociatePublicIpAddress') as associate_public_ip_address,
                    json_extract_path_text(detail.Properties, 'ClassicLinkVPCId') as classic_link_vpc_id,
                    json_extract_path_text(detail.Properties, 'EbsOptimized') as ebs_optimized,
                    json_extract_path_text(detail.Properties, 'KeyName') as key_name,
                    json_extract_path_text(detail.Properties, 'SpotPrice') as spot_price,
                    json_extract_path_text(detail.Properties, 'ImageId') as image_id,
                    json_extract_path_text(detail.Properties, 'InstanceType') as instance_type,
                    json_extract_path_text(detail.Properties, 'RamDiskId') as ram_disk_id,
                    json_extract_path_text(detail.Properties, 'InstanceMonitoring') as instance_monitoring
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
                    AND detail.data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
                    AND listing.region = 'us-east-1'
    launch_configurations_list_only:
      name: launch_configurations_list_only
      id: aws.autoscaling.launch_configurations_list_only
      x-cfn-schema-name: LaunchConfiguration
      x-cfn-type-name: AWS::AutoScaling::LaunchConfiguration
      x-identifiers:
        - LaunchConfigurationName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LaunchConfigurationName') as launch_configuration_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LaunchConfigurationName') as launch_configuration_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
                AND region = 'us-east-1'
    lifecycle_hooks:
      name: lifecycle_hooks
      id: aws.autoscaling.lifecycle_hooks
      x-cfn-schema-name: LifecycleHook
      x-cfn-type-name: AWS::AutoScaling::LifecycleHook
      x-identifiers:
        - AutoScalingGroupName
        - LifecycleHookName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LifecycleHook&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::LifecycleHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::LifecycleHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::LifecycleHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/lifecycle_hooks/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/lifecycle_hooks/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/lifecycle_hooks/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.DefaultResult') as default_result,
              JSON_EXTRACT(Properties, '$.HeartbeatTimeout') as heartbeat_timeout,
              JSON_EXTRACT(Properties, '$.LifecycleHookName') as lifecycle_hook_name,
              JSON_EXTRACT(Properties, '$.LifecycleTransition') as lifecycle_transition,
              JSON_EXTRACT(Properties, '$.NotificationMetadata') as notification_metadata,
              JSON_EXTRACT(Properties, '$.NotificationTargetARN') as notification_target_arn,
              JSON_EXTRACT(Properties, '$.RoleARN') as role_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::LifecycleHook'
              AND data__Identifier = '<AutoScalingGroupName>|<LifecycleHookName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
                JSON_EXTRACT(detail.Properties, '$.DefaultResult') as default_result,
                JSON_EXTRACT(detail.Properties, '$.HeartbeatTimeout') as heartbeat_timeout,
                JSON_EXTRACT(detail.Properties, '$.LifecycleHookName') as lifecycle_hook_name,
                JSON_EXTRACT(detail.Properties, '$.LifecycleTransition') as lifecycle_transition,
                JSON_EXTRACT(detail.Properties, '$.NotificationMetadata') as notification_metadata,
                JSON_EXTRACT(detail.Properties, '$.NotificationTargetARN') as notification_target_arn,
                JSON_EXTRACT(detail.Properties, '$.RoleARN') as role_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AutoScaling::LifecycleHook'
                AND detail.data__TypeName = 'AWS::AutoScaling::LifecycleHook'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                  json_extract_path_text(Properties, 'DefaultResult') as default_result,
                  json_extract_path_text(Properties, 'HeartbeatTimeout') as heartbeat_timeout,
                  json_extract_path_text(Properties, 'LifecycleHookName') as lifecycle_hook_name,
                  json_extract_path_text(Properties, 'LifecycleTransition') as lifecycle_transition,
                  json_extract_path_text(Properties, 'NotificationMetadata') as notification_metadata,
                  json_extract_path_text(Properties, 'NotificationTargetARN') as notification_target_arn,
                  json_extract_path_text(Properties, 'RoleARN') as role_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::LifecycleHook'
                  AND data__Identifier = '<AutoScalingGroupName>|<LifecycleHookName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                    json_extract_path_text(detail.Properties, 'DefaultResult') as default_result,
                    json_extract_path_text(detail.Properties, 'HeartbeatTimeout') as heartbeat_timeout,
                    json_extract_path_text(detail.Properties, 'LifecycleHookName') as lifecycle_hook_name,
                    json_extract_path_text(detail.Properties, 'LifecycleTransition') as lifecycle_transition,
                    json_extract_path_text(detail.Properties, 'NotificationMetadata') as notification_metadata,
                    json_extract_path_text(detail.Properties, 'NotificationTargetARN') as notification_target_arn,
                    json_extract_path_text(detail.Properties, 'RoleARN') as role_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AutoScaling::LifecycleHook'
                    AND detail.data__TypeName = 'AWS::AutoScaling::LifecycleHook'
                    AND listing.region = 'us-east-1'
    lifecycle_hooks_list_only:
      name: lifecycle_hooks_list_only
      id: aws.autoscaling.lifecycle_hooks_list_only
      x-cfn-schema-name: LifecycleHook
      x-cfn-type-name: AWS::AutoScaling::LifecycleHook
      x-identifiers:
        - AutoScalingGroupName
        - LifecycleHookName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.LifecycleHookName') as lifecycle_hook_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::LifecycleHook'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                json_extract_path_text(Properties, 'LifecycleHookName') as lifecycle_hook_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::LifecycleHook'
                AND region = 'us-east-1'
    scaling_policies:
      name: scaling_policies
      id: aws.autoscaling.scaling_policies
      x-cfn-schema-name: ScalingPolicy
      x-cfn-type-name: AWS::AutoScaling::ScalingPolicy
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ScalingPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::ScalingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::ScalingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::ScalingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scaling_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scaling_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/scaling_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MetricAggregationType') as metric_aggregation_type,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyType') as policy_type,
              JSON_EXTRACT(Properties, '$.PredictiveScalingConfiguration') as predictive_scaling_configuration,
              JSON_EXTRACT(Properties, '$.ScalingAdjustment') as scaling_adjustment,
              JSON_EXTRACT(Properties, '$.Cooldown') as cooldown,
              JSON_EXTRACT(Properties, '$.StepAdjustments') as step_adjustments,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.MinAdjustmentMagnitude') as min_adjustment_magnitude,
              JSON_EXTRACT(Properties, '$.TargetTrackingConfiguration') as target_tracking_configuration,
              JSON_EXTRACT(Properties, '$.EstimatedInstanceWarmup') as estimated_instance_warmup,
              JSON_EXTRACT(Properties, '$.AdjustmentType') as adjustment_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MetricAggregationType') as metric_aggregation_type,
                JSON_EXTRACT(detail.Properties, '$.PolicyName') as policy_name,
                JSON_EXTRACT(detail.Properties, '$.PolicyType') as policy_type,
                JSON_EXTRACT(detail.Properties, '$.PredictiveScalingConfiguration') as predictive_scaling_configuration,
                JSON_EXTRACT(detail.Properties, '$.ScalingAdjustment') as scaling_adjustment,
                JSON_EXTRACT(detail.Properties, '$.Cooldown') as cooldown,
                JSON_EXTRACT(detail.Properties, '$.StepAdjustments') as step_adjustments,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
                JSON_EXTRACT(detail.Properties, '$.MinAdjustmentMagnitude') as min_adjustment_magnitude,
                JSON_EXTRACT(detail.Properties, '$.TargetTrackingConfiguration') as target_tracking_configuration,
                JSON_EXTRACT(detail.Properties, '$.EstimatedInstanceWarmup') as estimated_instance_warmup,
                JSON_EXTRACT(detail.Properties, '$.AdjustmentType') as adjustment_type,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
                AND detail.data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MetricAggregationType') as metric_aggregation_type,
                  json_extract_path_text(Properties, 'PolicyName') as policy_name,
                  json_extract_path_text(Properties, 'PolicyType') as policy_type,
                  json_extract_path_text(Properties, 'PredictiveScalingConfiguration') as predictive_scaling_configuration,
                  json_extract_path_text(Properties, 'ScalingAdjustment') as scaling_adjustment,
                  json_extract_path_text(Properties, 'Cooldown') as cooldown,
                  json_extract_path_text(Properties, 'StepAdjustments') as step_adjustments,
                  json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                  json_extract_path_text(Properties, 'MinAdjustmentMagnitude') as min_adjustment_magnitude,
                  json_extract_path_text(Properties, 'TargetTrackingConfiguration') as target_tracking_configuration,
                  json_extract_path_text(Properties, 'EstimatedInstanceWarmup') as estimated_instance_warmup,
                  json_extract_path_text(Properties, 'AdjustmentType') as adjustment_type,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MetricAggregationType') as metric_aggregation_type,
                    json_extract_path_text(detail.Properties, 'PolicyName') as policy_name,
                    json_extract_path_text(detail.Properties, 'PolicyType') as policy_type,
                    json_extract_path_text(detail.Properties, 'PredictiveScalingConfiguration') as predictive_scaling_configuration,
                    json_extract_path_text(detail.Properties, 'ScalingAdjustment') as scaling_adjustment,
                    json_extract_path_text(detail.Properties, 'Cooldown') as cooldown,
                    json_extract_path_text(detail.Properties, 'StepAdjustments') as step_adjustments,
                    json_extract_path_text(detail.Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                    json_extract_path_text(detail.Properties, 'MinAdjustmentMagnitude') as min_adjustment_magnitude,
                    json_extract_path_text(detail.Properties, 'TargetTrackingConfiguration') as target_tracking_configuration,
                    json_extract_path_text(detail.Properties, 'EstimatedInstanceWarmup') as estimated_instance_warmup,
                    json_extract_path_text(detail.Properties, 'AdjustmentType') as adjustment_type,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
                    AND detail.data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
                    AND listing.region = 'us-east-1'
    scaling_policies_list_only:
      name: scaling_policies_list_only
      id: aws.autoscaling.scaling_policies_list_only
      x-cfn-schema-name: ScalingPolicy
      x-cfn-type-name: AWS::AutoScaling::ScalingPolicy
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
                AND region = 'us-east-1'
    scheduled_actions:
      name: scheduled_actions
      id: aws.autoscaling.scheduled_actions
      x-cfn-schema-name: ScheduledAction
      x-cfn-type-name: AWS::AutoScaling::ScheduledAction
      x-identifiers:
        - ScheduledActionName
        - AutoScalingGroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ScheduledAction&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::ScheduledAction"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::ScheduledAction"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::ScheduledAction"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scheduled_actions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scheduled_actions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/scheduled_actions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ScheduledActionName') as scheduled_action_name,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.Recurrence') as recurrence,
              JSON_EXTRACT(Properties, '$.TimeZone') as time_zone,
              JSON_EXTRACT(Properties, '$.EndTime') as end_time,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(Properties, '$.DesiredCapacity') as desired_capacity,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::ScheduledAction'
              AND data__Identifier = '<ScheduledActionName>|<AutoScalingGroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ScheduledActionName') as scheduled_action_name,
                JSON_EXTRACT(detail.Properties, '$.MinSize') as min_size,
                JSON_EXTRACT(detail.Properties, '$.Recurrence') as recurrence,
                JSON_EXTRACT(detail.Properties, '$.TimeZone') as time_zone,
                JSON_EXTRACT(detail.Properties, '$.EndTime') as end_time,
                JSON_EXTRACT(detail.Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
                JSON_EXTRACT(detail.Properties, '$.StartTime') as start_time,
                JSON_EXTRACT(detail.Properties, '$.DesiredCapacity') as desired_capacity,
                JSON_EXTRACT(detail.Properties, '$.MaxSize') as max_size
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::AutoScaling::ScheduledAction'
                AND detail.data__TypeName = 'AWS::AutoScaling::ScheduledAction'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ScheduledActionName') as scheduled_action_name,
                  json_extract_path_text(Properties, 'MinSize') as min_size,
                  json_extract_path_text(Properties, 'Recurrence') as recurrence,
                  json_extract_path_text(Properties, 'TimeZone') as time_zone,
                  json_extract_path_text(Properties, 'EndTime') as end_time,
                  json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                  json_extract_path_text(Properties, 'StartTime') as start_time,
                  json_extract_path_text(Properties, 'DesiredCapacity') as desired_capacity,
                  json_extract_path_text(Properties, 'MaxSize') as max_size
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::ScheduledAction'
                  AND data__Identifier = '<ScheduledActionName>|<AutoScalingGroupName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ScheduledActionName') as scheduled_action_name,
                    json_extract_path_text(detail.Properties, 'MinSize') as min_size,
                    json_extract_path_text(detail.Properties, 'Recurrence') as recurrence,
                    json_extract_path_text(detail.Properties, 'TimeZone') as time_zone,
                    json_extract_path_text(detail.Properties, 'EndTime') as end_time,
                    json_extract_path_text(detail.Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                    json_extract_path_text(detail.Properties, 'StartTime') as start_time,
                    json_extract_path_text(detail.Properties, 'DesiredCapacity') as desired_capacity,
                    json_extract_path_text(detail.Properties, 'MaxSize') as max_size
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::AutoScaling::ScheduledAction'
                    AND detail.data__TypeName = 'AWS::AutoScaling::ScheduledAction'
                    AND listing.region = 'us-east-1'
    scheduled_actions_list_only:
      name: scheduled_actions_list_only
      id: aws.autoscaling.scheduled_actions_list_only
      x-cfn-schema-name: ScheduledAction
      x-cfn-type-name: AWS::AutoScaling::ScheduledAction
      x-identifiers:
        - ScheduledActionName
        - AutoScalingGroupName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ScheduledActionName') as scheduled_action_name,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::ScheduledAction'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ScheduledActionName') as scheduled_action_name,
                json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::ScheduledAction'
                AND region = 'us-east-1'
    warm_pools:
      name: warm_pools
      id: aws.autoscaling.warm_pools
      x-cfn-schema-name: WarmPool
      x-cfn-type-name: AWS::AutoScaling::WarmPool
      x-identifiers:
        - AutoScalingGroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__WarmPool&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::WarmPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::WarmPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::AutoScaling::WarmPool"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/warm_pools/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/warm_pools/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/warm_pools/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.MaxGroupPreparedCapacity') as max_group_prepared_capacity,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.PoolState') as pool_state,
              JSON_EXTRACT(Properties, '$.InstanceReusePolicy') as instance_reuse_policy
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::WarmPool'
              AND data__Identifier = '<AutoScalingGroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AutoScalingGroupName') as auto_scaling_group_name,
                json_extract_path_text(Properties, 'MaxGroupPreparedCapacity') as max_group_prepared_capacity,
                json_extract_path_text(Properties, 'MinSize') as min_size,
                json_extract_path_text(Properties, 'PoolState') as pool_state,
                json_extract_path_text(Properties, 'InstanceReusePolicy') as instance_reuse_policy
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::WarmPool'
                AND data__Identifier = '<AutoScalingGroupName>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AutoScalingGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAutoScalingGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAutoScalingGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LaunchConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLaunchConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLaunchConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LifecycleHook&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLifecycleHook
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLifecycleHookRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ScalingPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScalingPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScalingPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ScheduledAction&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScheduledAction
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateScheduledActionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__WarmPool&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWarmPool
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWarmPoolRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
