openapi: 3.0.0
info:
  title: AutoScaling
  version: 1.0.0
paths: {}
components:
  schemas:
    TagProperty:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
        PropagateAtLaunch:
          type: boolean
      required:
        - Value
        - Key
        - PropagateAtLaunch
    LaunchTemplateSpecification:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateName:
          type: string
        LaunchTemplateId:
          type: string
        Version:
          type: string
      required:
        - Version
    InstancesDistribution:
      type: object
      additionalProperties: false
      properties:
        OnDemandAllocationStrategy:
          type: string
        OnDemandBaseCapacity:
          type: integer
        OnDemandPercentageAboveBaseCapacity:
          type: integer
        SpotInstancePools:
          type: integer
        SpotAllocationStrategy:
          type: string
        SpotMaxPrice:
          type: string
    AcceleratorCountRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    LifecycleHookSpecification:
      type: object
      additionalProperties: false
      properties:
        LifecycleHookName:
          type: string
        LifecycleTransition:
          type: string
        HeartbeatTimeout:
          type: integer
        NotificationMetadata:
          type: string
        DefaultResult:
          type: string
        NotificationTargetARN:
          type: string
        RoleARN:
          type: string
      required:
        - LifecycleHookName
        - LifecycleTransition
    MemoryGiBPerVCpuRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    NotificationConfiguration:
      type: object
      additionalProperties: false
      properties:
        TopicARN:
          type: string
        NotificationTypes:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - TopicARN
    MetricsCollection:
      type: object
      additionalProperties: false
      properties:
        Granularity:
          type: string
        Metrics:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - Granularity
    TotalLocalStorageGBRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    MemoryMiBRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    NetworkBandwidthGbpsRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: number
        Min:
          type: number
    BaselineEbsBandwidthMbpsRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    NetworkInterfaceCountRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    VCpuCountRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    LaunchTemplate:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateSpecification:
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        Overrides:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/LaunchTemplateOverrides'
      required:
        - LaunchTemplateSpecification
    LaunchTemplateOverrides:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateSpecification:
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        WeightedCapacity:
          type: string
        InstanceRequirements:
          $ref: '#/components/schemas/InstanceRequirements'
        InstanceType:
          type: string
    AcceleratorTotalMemoryMiBRequest:
      type: object
      additionalProperties: false
      properties:
        Max:
          type: integer
        Min:
          type: integer
    MixedInstancesPolicy:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplate:
          $ref: '#/components/schemas/LaunchTemplate'
        InstancesDistribution:
          $ref: '#/components/schemas/InstancesDistribution'
      required:
        - LaunchTemplate
    InstanceRequirements:
      type: object
      additionalProperties: false
      properties:
        LocalStorageTypes:
          type: array
          uniqueItems: true
          items:
            type: string
        InstanceGenerations:
          type: array
          uniqueItems: true
          items:
            type: string
        NetworkInterfaceCount:
          $ref: '#/components/schemas/NetworkInterfaceCountRequest'
        AcceleratorTypes:
          type: array
          uniqueItems: true
          items:
            type: string
        MemoryGiBPerVCpu:
          $ref: '#/components/schemas/MemoryGiBPerVCpuRequest'
        AcceleratorManufacturers:
          type: array
          uniqueItems: true
          items:
            type: string
        ExcludedInstanceTypes:
          type: array
          uniqueItems: true
          items:
            type: string
        VCpuCount:
          $ref: '#/components/schemas/VCpuCountRequest'
        AllowedInstanceTypes:
          type: array
          uniqueItems: true
          items:
            type: string
        LocalStorage:
          type: string
        CpuManufacturers:
          type: array
          uniqueItems: true
          items:
            type: string
        AcceleratorCount:
          $ref: '#/components/schemas/AcceleratorCountRequest'
        NetworkBandwidthGbps:
          $ref: '#/components/schemas/NetworkBandwidthGbpsRequest'
        BareMetal:
          type: string
        RequireHibernateSupport:
          type: boolean
        BaselineEbsBandwidthMbps:
          $ref: '#/components/schemas/BaselineEbsBandwidthMbpsRequest'
        SpotMaxPricePercentageOverLowestPrice:
          type: integer
        AcceleratorNames:
          type: array
          uniqueItems: true
          items:
            type: string
        AcceleratorTotalMemoryMiB:
          $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRequest'
        OnDemandMaxPricePercentageOverLowestPrice:
          type: integer
        BurstablePerformance:
          type: string
        MemoryMiB:
          $ref: '#/components/schemas/MemoryMiBRequest'
        TotalLocalStorageGB:
          $ref: '#/components/schemas/TotalLocalStorageGBRequest'
    AutoScalingGroup:
      type: object
      properties:
        LifecycleHookSpecificationList:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/LifecycleHookSpecification'
        LoadBalancerNames:
          type: array
          uniqueItems: true
          items:
            type: string
        LaunchConfigurationName:
          type: string
        ServiceLinkedRoleARN:
          type: string
        TargetGroupARNs:
          type: array
          uniqueItems: true
          items:
            type: string
        Cooldown:
          type: string
        NotificationConfigurations:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/NotificationConfiguration'
        DesiredCapacity:
          type: string
        HealthCheckGracePeriod:
          type: integer
        DefaultInstanceWarmup:
          type: integer
        NewInstancesProtectedFromScaleIn:
          type: boolean
        LaunchTemplate:
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        MixedInstancesPolicy:
          $ref: '#/components/schemas/MixedInstancesPolicy'
        VPCZoneIdentifier:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TagProperty'
        Context:
          type: string
        LaunchTemplateSpecification:
          type: string
        CapacityRebalance:
          type: boolean
        InstanceId:
          type: string
        AvailabilityZones:
          type: array
          uniqueItems: false
          items:
            type: string
        MetricsCollection:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/MetricsCollection'
        MaxSize:
          type: string
        MinSize:
          type: string
        TerminationPolicies:
          type: array
          uniqueItems: true
          items:
            type: string
        AutoScalingGroupName:
          type: string
        Id:
          type: string
        DesiredCapacityType:
          type: string
        PlacementGroup:
          type: string
        HealthCheckType:
          type: string
        MaxInstanceLifetime:
          type: integer
      required:
        - MinSize
        - MaxSize
      x-stackql-resource-name: auto_scaling_group
      x-stackql-primaryIdentifier:
        - Id
    MetadataOptions:
      description: MetadataOptions is a property of AWS::AutoScaling::LaunchConfiguration that describes metadata options for the instances.
      type: object
      additionalProperties: false
      properties:
        HttpPutResponseHopLimit:
          description: The desired HTTP PUT response hop limit for instance metadata requests.
          type: integer
        HttpTokens:
          description: The state of token usage for your instance metadata requests.
          type: string
        HttpEndpoint:
          description: This parameter enables or disables the HTTP metadata endpoint on your instances.
          type: string
    BlockDeviceMapping:
      description: BlockDeviceMapping is a property of AWS::AutoScaling::LaunchConfiguration that describes a block device mapping for an Auto Scaling group.
      type: object
      additionalProperties: false
      properties:
        NoDevice:
          description: Setting this value to true suppresses the specified device included in the block device mapping of the AMI.
          type: boolean
        VirtualName:
          description: The name of the virtual device.
          type: string
        Ebs:
          description: Parameters used to automatically set up EBS volumes when an instance is launched.
          $ref: '#/components/schemas/BlockDevice'
        DeviceName:
          description: 'The device name exposed to the EC2 instance (for example, /dev/sdh or xvdh). '
          type: string
      required:
        - DeviceName
    BlockDevice:
      description: BlockDevice is a subproperty of BlockDeviceMapping that describes an Amazon EBS volume.
      type: object
      additionalProperties: false
      properties:
        SnapshotId:
          description: The snapshot ID of the volume to use.
          type: string
        VolumeType:
          description: The volume type.
          type: string
        Encrypted:
          description: 'Specifies whether the volume should be encrypted. '
          type: boolean
        Iops:
          description: 'The number of input/output (I/O) operations per second (IOPS) to provision for the volume. '
          type: integer
        VolumeSize:
          description: The volume size, in GiBs.
          type: integer
        DeleteOnTermination:
          description: 'Indicates whether the volume is deleted on instance termination. '
          type: boolean
        Throughput:
          description: The throughput (MiBps) to provision for a gp3 volume.
          type: integer
    LaunchConfiguration:
      type: object
      properties:
        AssociatePublicIpAddress:
          description: For Auto Scaling groups that are running in a virtual private cloud (VPC), specifies whether to assign a public IP address to the group's instances.
          type: boolean
        BlockDeviceMappings:
          description: Specifies how block devices are exposed to the instance. You can specify virtual devices and EBS volumes.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/BlockDeviceMapping'
        ClassicLinkVPCId:
          description: The ID of a ClassicLink-enabled VPC to link your EC2-Classic instances to.
          type: string
        ClassicLinkVPCSecurityGroups:
          description: The IDs of one or more security groups for the VPC that you specified in the ClassicLinkVPCId property.
          type: array
          x-insertionOrder: false
          items:
            type: string
        EbsOptimized:
          description: Specifies whether the launch configuration is optimized for EBS I/O (true) or not (false).
          type: boolean
        IamInstanceProfile:
          description: Provides the name or the Amazon Resource Name (ARN) of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.
          type: string
        ImageId:
          description: Provides the unique ID of the Amazon Machine Image (AMI) that was assigned during registration.
          type: string
        InstanceId:
          description: The ID of the Amazon EC2 instance you want to use to create the launch configuration.
          type: string
        InstanceMonitoring:
          description: Controls whether instances in this group are launched with detailed (true) or basic (false) monitoring.
          type: boolean
        InstanceType:
          description: Specifies the instance type of the EC2 instance.
          type: string
        KernelId:
          description: Provides the ID of the kernel associated with the EC2 AMI.
          type: string
        KeyName:
          description: Provides the name of the EC2 key pair.
          type: string
        LaunchConfigurationName:
          description: The name of the launch configuration. This name must be unique per Region per account.
          type: string
          minLength: 1
          maxLength: 255
        MetadataOptions:
          description: The metadata options for the instances.
          $ref: '#/components/schemas/MetadataOptions'
        PlacementTenancy:
          description: The tenancy of the instance, either default or dedicated.
          type: string
        RamDiskId:
          description: The ID of the RAM disk to select.
          type: string
        SecurityGroups:
          description: A list that contains the security groups to assign to the instances in the Auto Scaling group.
          type: array
          x-insertionOrder: false
          items:
            type: string
        SpotPrice:
          description: The maximum hourly price you are willing to pay for any Spot Instances launched to fulfill the request.
          type: string
        UserData:
          description: The Base64-encoded user data to make available to the launched EC2 instances.
          type: string
          maxLength: 21847
      required:
        - ImageId
        - InstanceType
      x-stackql-resource-name: launch_configuration
      x-stackql-primaryIdentifier:
        - LaunchConfigurationName
    LifecycleHook:
      type: object
      properties:
        AutoScalingGroupName:
          description: The name of the Auto Scaling group for the lifecycle hook.
          type: string
        DefaultResult:
          description: The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The valid values are CONTINUE and ABANDON (default).
          type: string
        HeartbeatTimeout:
          description: The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from 30 to 7200 seconds. The default value is 3600 seconds (1 hour). If the lifecycle hook times out, Amazon EC2 Auto Scaling performs the action that you specified in the DefaultResult property.
          type: integer
        LifecycleHookName:
          description: The name of the lifecycle hook.
          type: string
          minLength: 1
          maxLength: 255
        LifecycleTransition:
          description: The instance state to which you want to attach the lifecycle hook.
          type: string
        NotificationMetadata:
          description: Additional information that is included any time Amazon EC2 Auto Scaling sends a message to the notification target.
          type: string
          minLength: 1
          maxLength: 1023
        NotificationTargetARN:
          description: 'The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in the transition state for the lifecycle hook. You can specify an Amazon SQS queue or an Amazon SNS topic. The notification message includes the following information: lifecycle action token, user account ID, Auto Scaling group name, lifecycle hook name, instance ID, lifecycle transition, and notification metadata.'
          type: string
        RoleARN:
          description: The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target, for example, an Amazon SNS topic or an Amazon SQS queue.
          type: string
      required:
        - LifecycleTransition
        - AutoScalingGroupName
      x-stackql-resource-name: lifecycle_hook
      x-stackql-primaryIdentifier:
        - AutoScalingGroupName
        - LifecycleHookName
    PredictiveScalingMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        CustomizedCapacityMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingCustomizedCapacityMetric'
        CustomizedLoadMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingCustomizedLoadMetric'
        CustomizedScalingMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingCustomizedScalingMetric'
        PredefinedLoadMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingPredefinedLoadMetric'
        TargetValue:
          type: number
        PredefinedScalingMetricSpecification:
          $ref: '#/components/schemas/PredictiveScalingPredefinedScalingMetric'
        PredefinedMetricPairSpecification:
          $ref: '#/components/schemas/PredictiveScalingPredefinedMetricPair'
      required:
        - TargetValue
    PredictiveScalingConfiguration:
      type: object
      additionalProperties: false
      properties:
        MetricSpecifications:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PredictiveScalingMetricSpecification'
        MaxCapacityBreachBehavior:
          type: string
        MaxCapacityBuffer:
          type: integer
        SchedulingBufferTime:
          type: integer
        Mode:
          type: string
      required:
        - MetricSpecifications
    CustomizedMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        Dimensions:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/MetricDimension'
        Statistic:
          type: string
        Unit:
          type: string
        Namespace:
          type: string
      required:
        - MetricName
        - Statistic
        - Namespace
    TargetTrackingConfiguration:
      type: object
      additionalProperties: false
      properties:
        CustomizedMetricSpecification:
          $ref: '#/components/schemas/CustomizedMetricSpecification'
        TargetValue:
          type: number
        DisableScaleIn:
          type: boolean
        PredefinedMetricSpecification:
          $ref: '#/components/schemas/PredefinedMetricSpecification'
      required:
        - TargetValue
    PredictiveScalingPredefinedLoadMetric:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    StepAdjustment:
      type: object
      additionalProperties: false
      x-insertionOrder: false
      properties:
        MetricIntervalUpperBound:
          type: number
        MetricIntervalLowerBound:
          type: number
        ScalingAdjustment:
          type: integer
      required:
        - ScalingAdjustment
    PredictiveScalingPredefinedMetricPair:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    PredefinedMetricSpecification:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    MetricDimension:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Name:
          type: string
      required:
        - Value
        - Name
    PredictiveScalingPredefinedScalingMetric:
      type: object
      additionalProperties: false
      properties:
        ResourceLabel:
          type: string
        PredefinedMetricType:
          type: string
      required:
        - PredefinedMetricType
    PredictiveScalingCustomizedLoadMetric:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
      required:
        - MetricDataQueries
    PredictiveScalingCustomizedCapacityMetric:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
      required:
        - MetricDataQueries
    PredictiveScalingCustomizedScalingMetric:
      type: object
      additionalProperties: false
      properties:
        MetricDataQueries:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDataQuery'
      required:
        - MetricDataQueries
    Metric:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          type: string
        Dimensions:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDimension'
        Namespace:
          type: string
      required:
        - MetricName
        - Namespace
    MetricStat:
      type: object
      additionalProperties: false
      properties:
        Metric:
          $ref: '#/components/schemas/Metric'
        Stat:
          type: string
        Unit:
          type: string
      required:
        - Stat
        - Metric
    MetricDataQuery:
      type: object
      additionalProperties: false
      properties:
        Label:
          type: string
        MetricStat:
          $ref: '#/components/schemas/MetricStat'
        Id:
          type: string
        ReturnData:
          type: boolean
        Expression:
          type: string
      required:
        - Id
    ScalingPolicy:
      type: object
      properties:
        MetricAggregationType:
          description: The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. Valid only if the policy type is StepScaling.
          type: string
        PolicyName:
          type: string
        PolicyType:
          description: 'One of the following policy types: TargetTrackingScaling, StepScaling, SimpleScaling (default), PredictiveScaling'
          type: string
        PredictiveScalingConfiguration:
          description: A predictive scaling policy. Includes support for predefined metrics only.
          $ref: '#/components/schemas/PredictiveScalingConfiguration'
        ScalingAdjustment:
          description: The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value. Required if the policy type is SimpleScaling. (Not used with any other policy type.)
          type: integer
        Cooldown:
          description: The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group.
          type: string
        StepAdjustments:
          description: A set of adjustments that enable you to scale based on the size of the alarm breach. Required if the policy type is StepScaling. (Not used with any other policy type.)
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/StepAdjustment'
        AutoScalingGroupName:
          description: The name of the Auto Scaling group.
          type: string
        MinAdjustmentMagnitude:
          description: The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.
          type: integer
        TargetTrackingConfiguration:
          description: A target tracking scaling policy. Includes support for predefined or customized metrics.
          $ref: '#/components/schemas/TargetTrackingConfiguration'
        EstimatedInstanceWarmup:
          description: The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group. Valid only if the policy type is TargetTrackingScaling or StepScaling.
          type: integer
        AdjustmentType:
          description: Specifies how the scaling adjustment is interpreted. The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.
          type: string
        Arn:
          description: The ARN of the AutoScaling scaling policy
          type: string
      required:
        - AutoScalingGroupName
      x-stackql-resource-name: scaling_policy
      x-stackql-primaryIdentifier:
        - Arn
    ScheduledAction:
      type: object
      properties:
        ScheduledActionName:
          description: Auto-generated unique identifier
          type: string
        MinSize:
          description: The minimum size of the Auto Scaling group.
          type: integer
        Recurrence:
          description: The recurring schedule for the action, in Unix cron syntax format. When StartTime and EndTime are specified with Recurrence , they form the boundaries of when the recurring action starts and stops.
          type: string
        TimeZone:
          description: The time zone for the cron expression.
          type: string
        EndTime:
          description: The latest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
          type: string
        AutoScalingGroupName:
          description: The name of the Auto Scaling group.
          type: string
        StartTime:
          description: The earliest scheduled start time to return. If scheduled action names are provided, this parameter is ignored.
          type: string
        DesiredCapacity:
          description: The desired capacity is the initial capacity of the Auto Scaling group after the scheduled action runs and the capacity it attempts to maintain.
          type: integer
        MaxSize:
          description: The minimum size of the Auto Scaling group.
          type: integer
      required:
        - AutoScalingGroupName
      x-stackql-resource-name: scheduled_action
      x-stackql-primaryIdentifier:
        - ScheduledActionName
        - AutoScalingGroupName
    InstanceReusePolicy:
      type: object
      additionalProperties: false
      properties:
        ReuseOnScaleIn:
          type: boolean
    WarmPool:
      type: object
      properties:
        AutoScalingGroupName:
          type: string
        MaxGroupPreparedCapacity:
          type: integer
        MinSize:
          type: integer
        PoolState:
          type: string
        InstanceReusePolicy:
          $ref: '#/components/schemas/InstanceReusePolicy'
      required:
        - AutoScalingGroupName
      x-stackql-resource-name: warm_pool
      x-stackql-primaryIdentifier:
        - AutoScalingGroupName
  x-stackQL-resources:
    auto_scaling_groups:
      name: auto_scaling_groups
      id: aws.autoscaling.auto_scaling_groups
      x-cfn-schema-name: AutoScalingGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
    auto_scaling_group:
      name: auto_scaling_group
      id: aws.autoscaling.auto_scaling_group
      x-cfn-schema-name: AutoScalingGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LifecycleHookSpecificationList') as lifecycle_hook_specification_list,
              JSON_EXTRACT(Properties, '$.LoadBalancerNames') as load_balancer_names,
              JSON_EXTRACT(Properties, '$.LaunchConfigurationName') as launch_configuration_name,
              JSON_EXTRACT(Properties, '$.ServiceLinkedRoleARN') as service_linked_role_ar_n,
              JSON_EXTRACT(Properties, '$.TargetGroupARNs') as target_group_ar_ns,
              JSON_EXTRACT(Properties, '$.Cooldown') as cooldown,
              JSON_EXTRACT(Properties, '$.NotificationConfigurations') as notification_configurations,
              JSON_EXTRACT(Properties, '$.DesiredCapacity') as desired_capacity,
              JSON_EXTRACT(Properties, '$.HealthCheckGracePeriod') as health_check_grace_period,
              JSON_EXTRACT(Properties, '$.DefaultInstanceWarmup') as default_instance_warmup,
              JSON_EXTRACT(Properties, '$.NewInstancesProtectedFromScaleIn') as new_instances_protected_from_scale_in,
              JSON_EXTRACT(Properties, '$.LaunchTemplate.LaunchTemplateName') as launch_template_launch_template_name,
              JSON_EXTRACT(Properties, '$.LaunchTemplate.LaunchTemplateId') as launch_template_launch_template_id,
              JSON_EXTRACT(Properties, '$.LaunchTemplate.Version') as launch_template_version,
              JSON_EXTRACT(Properties, '$.MixedInstancesPolicy.LaunchTemplate') as mixed_instances_policy_launch_template,
              JSON_EXTRACT(Properties, '$.MixedInstancesPolicy.InstancesDistribution') as mixed_instances_policy_instances_distribution,
              JSON_EXTRACT(Properties, '$.VPCZoneIdentifier') as v_pc_zone_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Context') as context,
              JSON_EXTRACT(Properties, '$.LaunchTemplateSpecification') as launch_template_specification,
              JSON_EXTRACT(Properties, '$.CapacityRebalance') as capacity_rebalance,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.AvailabilityZones') as availability_zones,
              JSON_EXTRACT(Properties, '$.MetricsCollection') as metrics_collection,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.TerminationPolicies') as termination_policies,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DesiredCapacityType') as desired_capacity_type,
              JSON_EXTRACT(Properties, '$.PlacementGroup') as placement_group,
              JSON_EXTRACT(Properties, '$.HealthCheckType') as health_check_type,
              JSON_EXTRACT(Properties, '$.MaxInstanceLifetime') as max_instance_lifetime
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::AutoScalingGroup'
    launch_configurations:
      name: launch_configurations
      id: aws.autoscaling.launch_configurations
      x-cfn-schema-name: LaunchConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LaunchConfigurationName') as launch_configuration_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
    launch_configuration:
      name: launch_configuration
      id: aws.autoscaling.launch_configuration
      x-cfn-schema-name: LaunchConfiguration
      x-type: get
      x-identifiers:
        - LaunchConfigurationName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AssociatePublicIpAddress') as associate_public_ip_address,
              JSON_EXTRACT(Properties, '$.BlockDeviceMappings') as block_device_mappings,
              JSON_EXTRACT(Properties, '$.ClassicLinkVPCId') as classic_link_vp_cid,
              JSON_EXTRACT(Properties, '$.ClassicLinkVPCSecurityGroups') as classic_link_vp_csecurity_groups,
              JSON_EXTRACT(Properties, '$.EbsOptimized') as ebs_optimized,
              JSON_EXTRACT(Properties, '$.IamInstanceProfile') as iam_instance_profile,
              JSON_EXTRACT(Properties, '$.ImageId') as image_id,
              JSON_EXTRACT(Properties, '$.InstanceId') as instance_id,
              JSON_EXTRACT(Properties, '$.InstanceMonitoring') as instance_monitoring,
              JSON_EXTRACT(Properties, '$.InstanceType') as instance_type,
              JSON_EXTRACT(Properties, '$.KernelId') as kernel_id,
              JSON_EXTRACT(Properties, '$.KeyName') as key_name,
              JSON_EXTRACT(Properties, '$.LaunchConfigurationName') as launch_configuration_name,
              JSON_EXTRACT(Properties, '$.MetadataOptions.HttpPutResponseHopLimit') as metadata_options_http_put_response_hop_limit,
              JSON_EXTRACT(Properties, '$.MetadataOptions.HttpTokens') as metadata_options_http_tokens,
              JSON_EXTRACT(Properties, '$.MetadataOptions.HttpEndpoint') as metadata_options_http_endpoint,
              JSON_EXTRACT(Properties, '$.PlacementTenancy') as placement_tenancy,
              JSON_EXTRACT(Properties, '$.RamDiskId') as ram_disk_id,
              JSON_EXTRACT(Properties, '$.SecurityGroups') as security_groups,
              JSON_EXTRACT(Properties, '$.SpotPrice') as spot_price,
              JSON_EXTRACT(Properties, '$.UserData') as user_data
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::LaunchConfiguration'
    lifecycle_hooks:
      name: lifecycle_hooks
      id: aws.autoscaling.lifecycle_hooks
      x-cfn-schema-name: LifecycleHook
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.LifecycleHookName') as lifecycle_hook_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::LifecycleHook'
    lifecycle_hook:
      name: lifecycle_hook
      id: aws.autoscaling.lifecycle_hook
      x-cfn-schema-name: LifecycleHook
      x-type: get
      x-identifiers:
        - AutoScalingGroupName
        - LifecycleHookName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.DefaultResult') as default_result,
              JSON_EXTRACT(Properties, '$.HeartbeatTimeout') as heartbeat_timeout,
              JSON_EXTRACT(Properties, '$.LifecycleHookName') as lifecycle_hook_name,
              JSON_EXTRACT(Properties, '$.LifecycleTransition') as lifecycle_transition,
              JSON_EXTRACT(Properties, '$.NotificationMetadata') as notification_metadata,
              JSON_EXTRACT(Properties, '$.NotificationTargetARN') as notification_target_ar_n,
              JSON_EXTRACT(Properties, '$.RoleARN') as role_ar_n
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::LifecycleHook'
    scaling_policies:
      name: scaling_policies
      id: aws.autoscaling.scaling_policies
      x-cfn-schema-name: ScalingPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
    scaling_policy:
      name: scaling_policy
      id: aws.autoscaling.scaling_policy
      x-cfn-schema-name: ScalingPolicy
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MetricAggregationType') as metric_aggregation_type,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyType') as policy_type,
              JSON_EXTRACT(Properties, '$.PredictiveScalingConfiguration.MetricSpecifications') as predictive_scaling_configuration_metric_specifications,
              JSON_EXTRACT(Properties, '$.PredictiveScalingConfiguration.MaxCapacityBreachBehavior') as predictive_scaling_configuration_max_capacity_breach_behavior,
              JSON_EXTRACT(Properties, '$.PredictiveScalingConfiguration.MaxCapacityBuffer') as predictive_scaling_configuration_max_capacity_buffer,
              JSON_EXTRACT(Properties, '$.PredictiveScalingConfiguration.SchedulingBufferTime') as predictive_scaling_configuration_scheduling_buffer_time,
              JSON_EXTRACT(Properties, '$.PredictiveScalingConfiguration.Mode') as predictive_scaling_configuration_mode,
              JSON_EXTRACT(Properties, '$.ScalingAdjustment') as scaling_adjustment,
              JSON_EXTRACT(Properties, '$.Cooldown') as cooldown,
              JSON_EXTRACT(Properties, '$.StepAdjustments') as step_adjustments,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.MinAdjustmentMagnitude') as min_adjustment_magnitude,
              JSON_EXTRACT(Properties, '$.TargetTrackingConfiguration.CustomizedMetricSpecification') as target_tracking_configuration_customized_metric_specification,
              JSON_EXTRACT(Properties, '$.TargetTrackingConfiguration.TargetValue') as target_tracking_configuration_target_value,
              JSON_EXTRACT(Properties, '$.TargetTrackingConfiguration.DisableScaleIn') as target_tracking_configuration_disable_scale_in,
              JSON_EXTRACT(Properties, '$.TargetTrackingConfiguration.PredefinedMetricSpecification') as target_tracking_configuration_predefined_metric_specification,
              JSON_EXTRACT(Properties, '$.EstimatedInstanceWarmup') as estimated_instance_warmup,
              JSON_EXTRACT(Properties, '$.AdjustmentType') as adjustment_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::ScalingPolicy'
    scheduled_actions:
      name: scheduled_actions
      id: aws.autoscaling.scheduled_actions
      x-cfn-schema-name: ScheduledAction
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ScheduledActionName') as scheduled_action_name,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::ScheduledAction'
    scheduled_action:
      name: scheduled_action
      id: aws.autoscaling.scheduled_action
      x-cfn-schema-name: ScheduledAction
      x-type: get
      x-identifiers:
        - ScheduledActionName
        - AutoScalingGroupName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ScheduledActionName') as scheduled_action_name,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.Recurrence') as recurrence,
              JSON_EXTRACT(Properties, '$.TimeZone') as time_zone,
              JSON_EXTRACT(Properties, '$.EndTime') as end_time,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.StartTime') as start_time,
              JSON_EXTRACT(Properties, '$.DesiredCapacity') as desired_capacity,
              JSON_EXTRACT(Properties, '$.MaxSize') as max_size
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::ScheduledAction'
    warm_pools:
      name: warm_pools
      id: aws.autoscaling.warm_pools
      x-cfn-schema-name: WarmPool
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AutoScaling::WarmPool'
    warm_pool:
      name: warm_pool
      id: aws.autoscaling.warm_pool
      x-cfn-schema-name: WarmPool
      x-type: get
      x-identifiers:
        - AutoScalingGroupName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoScalingGroupName') as auto_scaling_group_name,
              JSON_EXTRACT(Properties, '$.MaxGroupPreparedCapacity') as max_group_prepared_capacity,
              JSON_EXTRACT(Properties, '$.MinSize') as min_size,
              JSON_EXTRACT(Properties, '$.PoolState') as pool_state,
              JSON_EXTRACT(Properties, '$.InstanceReusePolicy.ReuseOnScaleIn') as instance_reuse_policy_reuse_on_scale_in
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AutoScaling::WarmPool'
