openapi: 3.0.0
info:
  title: SecurityLake
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AwsLogSource:
      type: object
      properties:
        SourceName:
          type: string
          description: The name for a AWS source. This must be a Regionally unique value.
        SourceVersion:
          type: string
          pattern: ^(latest|[0-9]\.[0-9])$
          description: The version for a AWS source. This must be a Regionally unique value.
      description: Amazon Security Lake supports log and event collection for natively supported AWS services.
      additionalProperties: false
    EncryptionConfiguration:
      description: Provides encryption details of Amazon Security Lake object.
      type: object
      additionalProperties: false
      properties:
        KmsKeyId:
          description: The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
          type: string
    LifecycleConfiguration:
      description: Provides lifecycle details of Amazon Security Lake object.
      type: object
      additionalProperties: false
      properties:
        Expiration:
          $ref: '#/components/schemas/Expiration'
        Transitions:
          description: Provides data storage transition details of Amazon Security Lake object.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Transitions'
    Expiration:
      description: Provides data expiration details of Amazon Security Lake object.
      type: object
      additionalProperties: false
      properties:
        Days:
          $ref: '#/components/schemas/Days'
    Days:
      description: Number of days before data expires in the Amazon Security Lake object.
      type: integer
      minimum: 1
    Transitions:
      type: object
      additionalProperties: false
      properties:
        Days:
          description: Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object.
          type: integer
          minimum: 1
        StorageClass:
          description: The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
          type: string
    ReplicationConfiguration:
      description: Provides replication details of Amazon Security Lake object.
      type: object
      additionalProperties: false
      properties:
        Regions:
          $ref: '#/components/schemas/Regions'
        RoleArn:
          description: Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
          type: string
          pattern: ^arn:.*$
    Regions:
      description: Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        type: string
        pattern: ^(af|ap|ca|eu|me|sa|us)-(central|north|(north(?:east|west))|south|south(?:east|west)|east|west)-\d+$
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
          description: The name of the tag. This is a general label that acts as a category for a more specific tag value (value).
        Value:
          type: string
          minLength: 0
          maxLength: 256
          description: The value that is associated with the specified tag key (key). This value acts as a descriptor for the tag key. A tag value cannot be null, but it can be an empty string.
      required:
        - Key
        - Value
      additionalProperties: false
    DataLake:
      type: object
      properties:
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        LifecycleConfiguration:
          $ref: '#/components/schemas/LifecycleConfiguration'
        ReplicationConfiguration:
          $ref: '#/components/schemas/ReplicationConfiguration'
        MetaStoreManagerRoleArn:
          description: The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and normalization of AWS log sources and custom sources.
          type: string
          pattern: ^arn:.*$
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The Amazon Resource Name (ARN) created by you to provide to the subscriber.
          type: string
          minLength: 1
          maxLength: 1011
        S3BucketArn:
          description: The ARN for the Amazon Security Lake Amazon S3 bucket.
          type: string
      x-stackql-resource-name: data_lake
      description: Resource Type definition for AWS::SecurityLake::DataLake
      x-type-name: AWS::SecurityLake::DataLake
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - MetaStoreManagerRoleArn
      x-write-only-properties:
        - MetaStoreManagerRoleArn
      x-read-only-properties:
        - Arn
        - S3BucketArn
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - events:*
          - iam:CreateServiceLinkedRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - iam:PutRolePolicy
          - iam:PassRole
          - glue:*
          - organizations:*
          - kms:DescribeKey
          - kms:CreateGrant
          - lakeformation:*
          - lambda:*
          - s3:*
          - securitylake:CreateDataLake
          - securitylake:TagResource
          - securitylake:List*
          - sqs:*
        update:
          - events:*
          - iam:CreateServiceLinkedRole
          - iam:DeleteRolePolicy
          - iam:GetRole
          - iam:PassRole
          - iam:PutRolePolicy
          - kms:DescribeKey
          - kms:CreateGrant
          - lakeformation:*
          - lambda:*
          - organizations:*
          - s3:*
          - securitylake:List*
          - securitylake:TagResource
          - securitylake:UntagResource
          - securitylake:UpdateDataLake
          - sqs:*
        delete:
          - organizations:*
          - securitylake:DeleteDataLake
          - securitylake:List*
        read:
          - securitylake:List*
        list:
          - securitylake:List*
    AccessTypes:
      type: array
      x-insertionOrder: true
      items:
        type: string
        enum:
          - LAKEFORMATION
          - S3
      minItems: 1
      uniqueItems: true
      description: The Amazon S3 or AWS Lake Formation access type.
    CustomLogSource:
      type: object
      properties:
        SourceName:
          type: string
          pattern: ^[\\\w\-_:/.]*$
          minLength: 1
          maxLength: 64
          description: The name for a third-party custom source. This must be a Regionally unique value.
        SourceVersion:
          type: string
          pattern: ^[A-Za-z0-9\-\.\_]*$
          minLength: 1
          maxLength: 32
          description: The version for a third-party custom source. This must be a Regionally unique value.
      additionalProperties: false
    Source:
      oneOf:
        - type: object
          properties:
            AwsLogSource:
              $ref: '#/components/schemas/AwsLogSource'
          required:
            - AwsLogSource
          additionalProperties: false
        - type: object
          properties:
            CustomLogSource:
              $ref: '#/components/schemas/CustomLogSource'
          required:
            - CustomLogSource
          additionalProperties: false
    Subscriber:
      type: object
      properties:
        AccessTypes:
          $ref: '#/components/schemas/AccessTypes'
        DataLakeArn:
          description: The ARN for the data lake.
          type: string
          minLength: 1
          maxLength: 256
        SubscriberIdentity:
          type: object
          properties:
            ExternalId:
              type: string
              pattern: ^[\w+=,.@:/-]*$
              minLength: 2
              maxLength: 1224
              description: The external ID used to establish trust relationship with the AWS identity.
            Principal:
              type: string
              pattern: ^([0-9]{12}|[a-z0-9\.\-]*\.(amazonaws|amazon)\.com)$
              description: The AWS identity principal.
          required:
            - ExternalId
            - Principal
          description: The AWS identity used to access your data.
          additionalProperties: false
        SubscriberName:
          type: string
          pattern: ^[\\\w\s\-_:/,.@=+]*$
          minLength: 1
          maxLength: 64
          description: The name of your Security Lake subscriber account.
        SubscriberDescription:
          type: string
          description: The description for your subscriber account in Security Lake.
        Tags:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Tag'
          description: An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.
        Sources:
          type: array
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/Source'
          description: The supported AWS services from which logs and events are collected.
        ResourceShareArn:
          type: string
        ResourceShareName:
          type: string
        SubscriberRoleArn:
          type: string
        S3BucketArn:
          type: string
        SubscriberArn:
          type: string
      required:
        - AccessTypes
        - DataLakeArn
        - Sources
        - SubscriberIdentity
        - SubscriberName
      x-stackql-resource-name: subscriber
      description: Resource Type definition for AWS::SecurityLake::Subscriber
      x-type-name: AWS::SecurityLake::Subscriber
      x-stackql-primary-identifier:
        - SubscriberArn
      x-create-only-properties:
        - DataLakeArn
      x-read-only-properties:
        - SubscriberArn
        - S3BucketArn
        - SubscriberRoleArn
        - ResourceShareArn
        - ResourceShareName
      x-required-properties:
        - AccessTypes
        - DataLakeArn
        - Sources
        - SubscriberIdentity
        - SubscriberName
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - securitylake:CreateSubscriber
          - securitylake:CreateCustomLogSource
          - securitylake:CreateDataLake
          - securitylake:TagResource
          - securitylake:GetSubscriber
          - securitylake:ListTagsForResource
          - iam:GetRole
          - iam:GetRolePolicy
          - iam:PutRolePolicy
          - iam:CreateRole
          - iam:CreateServiceLinkedRole
          - glue:GetDatabase
          - glue:GetTable
          - lakeformation:RegisterResource
          - lakeformation:GrantPermissions
          - lakeformation:RevokePermissions
          - lakeformation:ListPermissions
          - ram:GetResourceShareAssociations
          - ram:CreateResourceShare
          - ram:UpdateResourceShare
          - ram:GetResourceShares
        read:
          - securitylake:GetSubscriber
          - securitylake:ListTagsForResource
        update:
          - securitylake:UpdateSubscriber
          - securitylake:GetSubscriber
          - securitylake:TagResource
          - securitylake:UntagResource
          - securitylake:ListTagsForResource
          - glue:GetDatabase
          - glue:GetTable
          - lakeformation:ListPermissions
          - lakeformation:GrantPermissions
          - lakeformation:RevokePermissions
          - ram:CreateResourceShare
          - ram:GetResourceShares
          - ram:GetResourceShareAssociations
          - ram:UpdateResourceShare
          - ram:DeleteResourceShare
          - iam:CreateRole
          - iam:GetRole
          - iam:DeleteRole
          - iam:PutRolePolicy
          - iam:DeleteRolePolicy
          - iam:ListRolePolicies
          - events:CreateApiDestination
          - events:CreateConnection
          - events:ListApiDestinations
          - events:ListConnections
          - events:PutRule
          - events:UpdateApiDestination
          - events:UpdateConnection
          - events:DeleteApiDestination
          - events:DeleteConnection
          - events:DeleteRule
          - events:RemoveTargets
          - events:ListTargetsByRule
          - events:DescribeRule
          - events:PutTargets
        delete:
          - securitylake:DeleteSubscriber
          - iam:GetRole
          - iam:ListRolePolicies
          - iam:DeleteRole
          - iam:DeleteRolePolicy
          - glue:GetTable
          - lakeformation:RevokePermissions
          - lakeformation:ListPermissions
          - ram:GetResourceShares
          - ram:DeleteResourceShare
          - events:DeleteApiDestination
          - events:DeleteConnection
          - events:DeleteRule
          - events:ListApiDestinations
          - events:ListTargetsByRule
          - events:DescribeRule
          - events:RemoveTargets
          - sqs:DeleteQueue
          - sqs:GetQueueUrl
        list:
          - securitylake:ListSubscribers
    CreateDataLakeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            EncryptionConfiguration:
              $ref: '#/components/schemas/EncryptionConfiguration'
            LifecycleConfiguration:
              $ref: '#/components/schemas/LifecycleConfiguration'
            ReplicationConfiguration:
              $ref: '#/components/schemas/ReplicationConfiguration'
            MetaStoreManagerRoleArn:
              description: The Amazon Resource Name (ARN) used to index AWS Glue table partitions that are generated by the ingestion and normalization of AWS log sources and custom sources.
              type: string
              pattern: ^arn:.*$
            Tags:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            Arn:
              description: The Amazon Resource Name (ARN) created by you to provide to the subscriber.
              type: string
              minLength: 1
              maxLength: 1011
            S3BucketArn:
              description: The ARN for the Amazon Security Lake Amazon S3 bucket.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateDataLakeRequest
      type: object
      required: []
    CreateSubscriberRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AccessTypes:
              $ref: '#/components/schemas/AccessTypes'
            DataLakeArn:
              description: The ARN for the data lake.
              type: string
              minLength: 1
              maxLength: 256
            SubscriberIdentity:
              type: object
              properties:
                ExternalId:
                  type: string
                  pattern: ^[\w+=,.@:/-]*$
                  minLength: 2
                  maxLength: 1224
                  description: The external ID used to establish trust relationship with the AWS identity.
                Principal:
                  type: string
                  pattern: ^([0-9]{12}|[a-z0-9\.\-]*\.(amazonaws|amazon)\.com)$
                  description: The AWS identity principal.
              required:
                - ExternalId
                - Principal
              description: The AWS identity used to access your data.
              additionalProperties: false
            SubscriberName:
              type: string
              pattern: ^[\\\w\s\-_:/,.@=+]*$
              minLength: 1
              maxLength: 64
              description: The name of your Security Lake subscriber account.
            SubscriberDescription:
              type: string
              description: The description for your subscriber account in Security Lake.
            Tags:
              type: array
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/Tag'
              description: An array of objects, one for each tag to associate with the subscriber. For each tag, you must specify both a tag key and a tag value. A tag value cannot be null, but it can be an empty string.
            Sources:
              type: array
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/Source'
              description: The supported AWS services from which logs and events are collected.
            ResourceShareArn:
              type: string
            ResourceShareName:
              type: string
            SubscriberRoleArn:
              type: string
            S3BucketArn:
              type: string
            SubscriberArn:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateSubscriberRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    data_lakes:
      name: data_lakes
      id: aws.securitylake.data_lakes
      x-cfn-schema-name: DataLake
      x-cfn-type-name: AWS::SecurityLake::DataLake
      x-identifiers:
        - Arn
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataLake&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityLake::DataLake"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityLake::DataLake"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_lakes/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_lakes/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityLake::DataLake'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityLake::DataLake'
                AND region = 'us-east-1'
    data_lake:
      name: data_lake
      id: aws.securitylake.data_lake
      x-cfn-schema-name: DataLake
      x-cfn-type-name: AWS::SecurityLake::DataLake
      x-identifiers:
        - Arn
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityLake::DataLake"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/data_lake/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EncryptionConfiguration') as encryption_configuration,
              JSON_EXTRACT(Properties, '$.LifecycleConfiguration') as lifecycle_configuration,
              JSON_EXTRACT(Properties, '$.ReplicationConfiguration') as replication_configuration,
              JSON_EXTRACT(Properties, '$.MetaStoreManagerRoleArn') as meta_store_manager_role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.S3BucketArn') as s3_bucket_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityLake::DataLake'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'EncryptionConfiguration') as encryption_configuration,
                json_extract_path_text(Properties, 'LifecycleConfiguration') as lifecycle_configuration,
                json_extract_path_text(Properties, 'ReplicationConfiguration') as replication_configuration,
                json_extract_path_text(Properties, 'MetaStoreManagerRoleArn') as meta_store_manager_role_arn,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'S3BucketArn') as s3_bucket_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityLake::DataLake'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    subscribers:
      name: subscribers
      id: aws.securitylake.subscribers
      x-cfn-schema-name: Subscriber
      x-cfn-type-name: AWS::SecurityLake::Subscriber
      x-identifiers:
        - SubscriberArn
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Subscriber&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityLake::Subscriber"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityLake::Subscriber"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/subscribers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/subscribers/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SubscriberArn') as subscriber_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityLake::Subscriber'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SubscriberArn') as subscriber_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SecurityLake::Subscriber'
                AND region = 'us-east-1'
    subscriber:
      name: subscriber
      id: aws.securitylake.subscriber
      x-cfn-schema-name: Subscriber
      x-cfn-type-name: AWS::SecurityLake::Subscriber
      x-identifiers:
        - SubscriberArn
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SecurityLake::Subscriber"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/subscriber/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccessTypes') as access_types,
              JSON_EXTRACT(Properties, '$.DataLakeArn') as data_lake_arn,
              JSON_EXTRACT(Properties, '$.SubscriberIdentity') as subscriber_identity,
              JSON_EXTRACT(Properties, '$.SubscriberName') as subscriber_name,
              JSON_EXTRACT(Properties, '$.SubscriberDescription') as subscriber_description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Sources') as sources,
              JSON_EXTRACT(Properties, '$.ResourceShareArn') as resource_share_arn,
              JSON_EXTRACT(Properties, '$.ResourceShareName') as resource_share_name,
              JSON_EXTRACT(Properties, '$.SubscriberRoleArn') as subscriber_role_arn,
              JSON_EXTRACT(Properties, '$.S3BucketArn') as s3_bucket_arn,
              JSON_EXTRACT(Properties, '$.SubscriberArn') as subscriber_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityLake::Subscriber'
              AND data__Identifier = '<SubscriberArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'AccessTypes') as access_types,
                json_extract_path_text(Properties, 'DataLakeArn') as data_lake_arn,
                json_extract_path_text(Properties, 'SubscriberIdentity') as subscriber_identity,
                json_extract_path_text(Properties, 'SubscriberName') as subscriber_name,
                json_extract_path_text(Properties, 'SubscriberDescription') as subscriber_description,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Sources') as sources,
                json_extract_path_text(Properties, 'ResourceShareArn') as resource_share_arn,
                json_extract_path_text(Properties, 'ResourceShareName') as resource_share_name,
                json_extract_path_text(Properties, 'SubscriberRoleArn') as subscriber_role_arn,
                json_extract_path_text(Properties, 'S3BucketArn') as s3_bucket_arn,
                json_extract_path_text(Properties, 'SubscriberArn') as subscriber_arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SecurityLake::Subscriber'
                AND data__Identifier = '<SubscriberArn>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataLake&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataLake
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataLakeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Subscriber&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSubscriber
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSubscriberRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  pagination:
    requestTranslate:
      algorithm: drop_double_underscore_params
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
