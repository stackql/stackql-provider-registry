openapi: 3.0.0
info:
  title: IVS
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    Channel:
      type: object
      properties:
        Arn:
          description: Channel ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Name:
          description: Channel
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
          default: '-'
        Authorized:
          description: Whether the channel is authorized.
          type: boolean
          default: false
        InsecureIngest:
          description: Whether the channel allows insecure ingest.
          type: boolean
          default: false
        LatencyMode:
          description: Channel latency mode.
          type: string
          enum:
            - NORMAL
            - LOW
          default: LOW
        Type:
          description: Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
          type: string
          enum:
            - STANDARD
            - BASIC
            - ADVANCED_SD
            - ADVANCED_HD
          default: STANDARD
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        PlaybackUrl:
          description: Channel Playback URL.
          type: string
        IngestEndpoint:
          description: Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
          type: string
        RecordingConfigurationArn:
          description: 'Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: "" (recording is disabled).'
          type: string
          default: ''
          pattern: ^$|arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Preset:
          description: Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD), preset is the empty string ("").
          type: string
          enum:
            - ''
            - HIGHER_BANDWIDTH_DELIVERY
            - CONSTRAINED_BANDWIDTH_DELIVERY
      required: []
      x-stackql-resource-name: channel
      description: Resource Type definition for AWS::IVS::Channel
      x-type-name: AWS::IVS::Channel
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
        - PlaybackUrl
        - IngestEndpoint
      x-required-properties: []
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreateChannel
          - ivs:TagResource
        read:
          - ivs:GetChannel
          - ivs:ListTagsForResource
        update:
          - ivs:GetChannel
          - ivs:UpdateChannel
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteChannel
          - ivs:UntagResource
        list:
          - ivs:ListChannels
          - ivs:ListTagsForResource
    EncoderConfiguration:
      type: object
      properties:
        Arn:
          description: Encoder configuration identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:encoder-configuration/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Video:
          description: 'Video configuration. Default: video resolution 1280x720, bitrate 2500 kbps, 30 fps'
          type: object
          additionalProperties: false
          properties:
            Bitrate:
              description: 'Bitrate for generated output, in bps. Default: 2500000.'
              type: integer
              minimum: 1
              maximum: 8500000
              default: 2500000
            Framerate:
              description: 'Video frame rate, in fps. Default: 30.'
              type: number
              minimum: 1
              maximum: 60
              default: 30
            Height:
              description: 'Video-resolution height. This must be an even number. Note that the maximum value is determined by width times height, such that the maximum total pixels is 2073600 (1920x1080 or 1080x1920). Default: 720.'
              type: integer
              minimum: 2
              maximum: 1920
              default: 720
            Width:
              description: 'Video-resolution width. This must be an even number. Note that the maximum value is determined by width times height, such that the maximum total pixels is 2073600 (1920x1080 or 1080x1920). Default: 1280.'
              type: integer
              minimum: 2
              maximum: 1920
              default: 1280
        Name:
          description: Encoder configuration name.
          type: string
          maxLength: 128
          minLength: 0
          pattern: ^[a-zA-Z0-9-_]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: encoder_configuration
      description: Resource Type definition for AWS::IVS::EncoderConfiguration.
      x-type-name: AWS::IVS::EncoderConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Video
        - Video/Bitrate
        - Video/Framerate
        - Video/Height
        - Video/Width
      x-read-only-properties:
        - Arn
      x-required-properties: []
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreateEncoderConfiguration
          - ivs:TagResource
        read:
          - ivs:GetEncoderConfiguration
          - ivs:ListTagsForResource
        update:
          - ivs:GetEncoderConfiguration
          - ivs:ListTagsForResource
          - ivs:UntagResource
          - ivs:TagResource
        delete:
          - ivs:DeleteEncoderConfiguration
          - ivs:UntagResource
        list:
          - ivs:ListEncoderConfigurations
          - ivs:ListTagsForResource
    IngestConfiguration:
      type: object
      properties:
        Arn:
          description: IngestConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:ingest-configuration/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Name:
          description: IngestConfiguration
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
          default: '-'
        StageArn:
          description: 'Stage ARN. A value other than an empty string indicates that stage is linked to IngestConfiguration. Default: "" (recording is disabled).'
          type: string
          default: ''
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        ParticipantId:
          description: Participant Id is automatically generated on creation and assigned.
          type: string
          minLength: 0
          maxLength: 64
          pattern: ^[a-zA-Z0-9-_]*$
        IngestProtocol:
          description: Ingest Protocol.
          type: string
          enum:
            - RTMP
            - RTMPS
          default: RTMPS
        InsecureIngest:
          description: Whether ingest configuration allows insecure ingest.
          type: boolean
          default: false
        State:
          description: State of IngestConfiguration which determines whether IngestConfiguration is in use or not.
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          default: INACTIVE
        StreamKey:
          description: Stream-key value.
          type: string
        UserId:
          description: User defined indentifier for participant associated with IngestConfiguration.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: ingest_configuration
      description: Resource Type definition for AWS::IVS::IngestConfiguration
      x-type-name: AWS::IVS::IngestConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - InsecureIngest
        - UserId
        - Name
        - IngestProtocol
      x-write-only-properties:
        - InsecureIngest
      x-read-only-properties:
        - Arn
        - ParticipantId
        - StreamKey
        - State
      x-required-properties: []
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreateIngestConfiguration
          - ivs:TagResource
        read:
          - ivs:GetIngestConfiguration
          - ivs:ListTagsForResource
        update:
          - ivs:GetIngestConfiguration
          - ivs:UpdateIngestConfiguration
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteIngestConfiguration
          - ivs:UntagResource
        list:
          - ivs:ListIngestConfigurations
          - ivs:ListTagsForResource
    PlaybackKeyPair:
      type: object
      properties:
        Name:
          description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.
          type: string
          pattern: ^[a-zA-Z0-9-_]*$
          minLength: 0
          maxLength: 128
        PublicKeyMaterial:
          description: The public portion of a customer-generated key pair.
          type: string
        Fingerprint:
          description: Key-pair identifier.
          type: string
        Arn:
          description: Key-pair identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: playback_key_pair
      description: Resource Type definition for AWS::IVS::PlaybackKeyPair
      x-type-name: AWS::IVS::PlaybackKeyPair
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - PublicKeyMaterial
        - Name
      x-write-only-properties:
        - PublicKeyMaterial
      x-read-only-properties:
        - Arn
        - Fingerprint
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:ImportPlaybackKeyPair
          - ivs:TagResource
        read:
          - ivs:GetPlaybackKeyPair
        update:
          - ivs:GetPlaybackKeyPair
          - ivs:ListTagsForResource
          - ivs:UntagResource
          - ivs:TagResource
        delete:
          - ivs:DeletePlaybackKeyPair
          - ivs:UntagResource
        list:
          - ivs:ListPlaybackKeyPairs
          - ivs:ListTagsForResource
    PlaybackRestrictionPolicy:
      type: object
      properties:
        Arn:
          description: Playback-restriction-policy identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-restriction-policy/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        AllowedCountries:
          description: 'A list of country codes that control geoblocking restriction. Allowed values are the officially assigned ISO 3166-1 alpha-2 codes. Default: All countries (an empty array).'
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
          default: []
        AllowedOrigins:
          description: A list of origin sites that control CORS restriction. Allowed values are the same as valid values of the Origin header defined at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin
          type: array
          x-insertionOrder: false
          items:
            type: string
          default: []
        EnableStrictOriginEnforcement:
          description: Whether channel playback is constrained by origin site.
          default: false
          type: boolean
        Name:
          description: Playback-restriction-policy name.
          type: string
          maxLength: 128
          minLength: 0
          pattern: ^[a-zA-Z0-9-_]*$
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AllowedCountries
        - AllowedOrigins
      x-stackql-resource-name: playback_restriction_policy
      description: Resource Type definition for AWS::IVS::PlaybackRestrictionPolicy.
      x-type-name: AWS::IVS::PlaybackRestrictionPolicy
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AllowedCountries
        - AllowedOrigins
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreatePlaybackRestrictionPolicy
          - ivs:TagResource
        read:
          - ivs:GetPlaybackRestrictionPolicy
          - ivs:ListTagsForResource
        update:
          - ivs:GetPlaybackRestrictionPolicy
          - ivs:UpdatePlaybackRestrictionPolicy
          - ivs:ListTagsForResource
          - ivs:UntagResource
          - ivs:TagResource
        delete:
          - ivs:DeletePlaybackRestrictionPolicy
          - ivs:UntagResource
        list:
          - ivs:ListPlaybackRestrictionPolicies
          - ivs:ListTagsForResource
    PublicKey:
      type: object
      properties:
        Name:
          description: Name of the public key to be imported. The value does not need to be unique.
          type: string
          pattern: ^[a-zA-Z0-9-_]*$
          minLength: 0
          maxLength: 128
        PublicKeyMaterial:
          description: The public portion of a customer-generated key pair.
          type: string
          pattern: '-----BEGIN PUBLIC KEY-----\r?\n([a-zA-Z0-9+/=\r\n]+)\r?\n-----END PUBLIC KEY-----(\r?\n)?'
        Fingerprint:
          description: Key-pair identifier.
          type: string
        Arn:
          description: Key-pair identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:public-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: public_key
      description: Resource Type definition for AWS::IVS::PublicKey
      x-type-name: AWS::IVS::PublicKey
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - PublicKeyMaterial
        - Name
      x-read-only-properties:
        - Arn
        - Fingerprint
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:ImportPublicKey
          - ivs:TagResource
        read:
          - ivs:GetPublicKey
        update:
          - ivs:GetPublicKey
          - ivs:ListTagsForResource
          - ivs:UntagResource
          - ivs:TagResource
        delete:
          - ivs:DeletePublicKey
          - ivs:UntagResource
        list:
          - ivs:ListPublicKeys
          - ivs:ListTagsForResource
    DestinationConfiguration:
      description: Recording Destination Configuration.
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/S3DestinationConfiguration'
      required: []
    S3DestinationConfiguration:
      description: Recording S3 Destination Configuration.
      type: object
      additionalProperties: false
      properties:
        BucketName:
          type: string
          minLength: 3
          maxLength: 63
          pattern: ^[a-z0-9-.]+$
      required:
        - BucketName
    ThumbnailConfiguration:
      description: Recording Thumbnail Configuration.
      type: object
      additionalProperties: false
      properties:
        RecordingMode:
          description: Thumbnail Recording Mode, which determines whether thumbnails are recorded at an interval or are disabled.
          type: string
          enum:
            - INTERVAL
            - DISABLED
          default: INTERVAL
        TargetIntervalSeconds:
          description: Target Interval Seconds defines the interval at which thumbnails are recorded. This field is required if RecordingMode is INTERVAL.
          type: integer
          minimum: 1
          maximum: 60
          default: 60
        Resolution:
          description: Resolution indicates the desired resolution of recorded thumbnails.
          type: string
          enum:
            - FULL_HD
            - HD
            - SD
            - LOWEST_RESOLUTION
        Storage:
          description: Storage indicates the format in which thumbnails are recorded.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 2
          items:
            type: string
            enum:
              - SEQUENTIAL
              - LATEST
      required: []
    RenditionConfiguration:
      description: Rendition Configuration describes which renditions should be recorded for a stream.
      type: object
      additionalProperties: false
      properties:
        RenditionSelection:
          description: Resolution Selection indicates which set of renditions are recorded for a stream.
          type: string
          enum:
            - ALL
            - NONE
            - CUSTOM
          default: ALL
        Renditions:
          description: Renditions indicates which renditions are recorded for a stream.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 4
          items:
            type: string
            enum:
              - FULL_HD
              - HD
              - SD
              - LOWEST_RESOLUTION
      required: []
    RecordingConfiguration:
      type: object
      properties:
        Arn:
          description: Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Name:
          description: Recording Configuration Name.
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
        State:
          description: Recording Configuration State.
          type: string
          enum:
            - CREATING
            - CREATE_FAILED
            - ACTIVE
        RecordingReconnectWindowSeconds:
          description: Recording Reconnect Window Seconds. (0 means disabled)
          type: integer
          default: 0
          minimum: 0
          maximum: 300
        DestinationConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        ThumbnailConfiguration:
          $ref: '#/components/schemas/ThumbnailConfiguration'
        RenditionConfiguration:
          $ref: '#/components/schemas/RenditionConfiguration'
      required:
        - DestinationConfiguration
      x-stackql-resource-name: recording_configuration
      description: Resource Type definition for AWS::IVS::RecordingConfiguration
      x-type-name: AWS::IVS::RecordingConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - DestinationConfiguration
        - DestinationConfiguration/S3
        - DestinationConfiguration/S3/BucketName
        - RecordingReconnectWindowSeconds
        - ThumbnailConfiguration
        - ThumbnailConfiguration/RecordingMode
        - ThumbnailConfiguration/TargetIntervalSeconds
        - ThumbnailConfiguration/Storage
        - ThumbnailConfiguration/Resolution
        - RenditionConfiguration
        - RenditionConfiguration/RenditionSelection
        - RenditionConfiguration/Renditions
      x-read-only-properties:
        - Arn
        - State
      x-required-properties:
        - DestinationConfiguration
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreateRecordingConfiguration
          - ivs:GetRecordingConfiguration
          - ivs:TagResource
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - iam:AttachRolePolicy
          - s3:ListBucket
          - s3:GetBucketLocation
          - cloudformation:ListExports
        read:
          - ivs:GetRecordingConfiguration
          - s3:GetBucketLocation
          - ivs:ListTagsForResource
        update:
          - ivs:GetRecordingConfiguration
          - sts:AssumeRole
          - iam:CreateServiceLinkedRole
          - iam:PutRolePolicy
          - iam:AttachRolePolicy
          - s3:ListBucket
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteRecordingConfiguration
          - ivs:UntagResource
          - iam:CreateServiceLinkedRole
        list:
          - ivs:ListRecordingConfigurations
          - s3:GetBucketLocation
          - ivs:ListTagsForResource
    AutoParticipantRecordingConfiguration:
      description: Configuration object for individual participant recording, to attach to the new stage.
      type: object
      additionalProperties: false
      properties:
        StorageConfigurationArn:
          description: ARN of the StorageConfiguration resource to use for individual participant recording.
          type: string
          pattern: ^$|^arn:aws:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        MediaTypes:
          description: 'Types of media to be recorded. Default: AUDIO_VIDEO.'
          type: array
          minItems: 0
          maxItems: 1
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
            enum:
              - AUDIO_VIDEO
              - AUDIO_ONLY
          default:
            - AUDIO_VIDEO
      required:
        - StorageConfigurationArn
    Stage:
      type: object
      properties:
        Arn:
          description: Stage ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Name:
          description: Stage name
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
        AutoParticipantRecordingConfiguration:
          $ref: '#/components/schemas/AutoParticipantRecordingConfiguration'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        ActiveSessionId:
          description: ID of the active session within the stage.
          type: string
          default: ''
          minLength: 0
          maxLength: 128
      x-stackql-resource-name: stage
      description: Resource Definition for type AWS::IVS::Stage.
      x-type-name: AWS::IVS::Stage
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
        - ActiveSessionId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreateStage
          - ivs:GetStage
          - ivs:TagResource
          - ivs:ListTagsForResource
        read:
          - ivs:GetStage
          - ivs:ListTagsForResource
        update:
          - ivs:GetStage
          - ivs:UpdateStage
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteStage
          - ivs:UntagResource
        list:
          - ivs:ListStages
          - ivs:ListTagsForResource
    S3StorageConfiguration:
      description: A complex type that describes an S3 location where recorded videos will be stored.
      type: object
      additionalProperties: false
      properties:
        BucketName:
          description: Location (S3 bucket name) where recorded videos will be stored. Note that the StorageConfiguration and S3 bucket must be in the same region as the Composition.
          type: string
          minLength: 3
          maxLength: 63
          pattern: ^[a-z0-9-.]+$
      required:
        - BucketName
    StorageConfiguration:
      type: object
      properties:
        Arn:
          description: Storage Configuration ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
        Name:
          description: Storage Configuration Name.
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
        S3:
          $ref: '#/components/schemas/S3StorageConfiguration'
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - S3
      x-stackql-resource-name: storage_configuration
      description: Resource Type definition for AWS::IVS::StorageConfiguration
      x-type-name: AWS::IVS::StorageConfiguration
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - S3
        - S3/BucketName
      x-read-only-properties:
        - Arn
      x-required-properties:
        - S3
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:CreateStorageConfiguration
          - ivs:GetStorageConfiguration
          - ivs:TagResource
          - s3:GetBucketLocation
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
        read:
          - ivs:GetStorageConfiguration
          - ivs:ListTagsForResource
          - s3:GetBucketLocation
        update:
          - ivs:GetStorageConfiguration
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteStorageConfiguration
          - ivs:UntagResource
          - s3:GetBucketPolicy
          - s3:DeleteBucketPolicy
          - s3:PutBucketPolicy
        list:
          - ivs:ListStorageConfigurations
          - s3:GetBucketLocation
          - ivs:ListTagsForResource
    StreamKey:
      type: object
      properties:
        Arn:
          description: Stream Key ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        ChannelArn:
          description: Channel ARN for the stream.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        Value:
          description: Stream-key value.
          type: string
      required:
        - ChannelArn
      x-stackql-resource-name: stream_key
      description: Resource Type definition for AWS::IVS::StreamKey
      x-type-name: AWS::IVS::StreamKey
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ChannelArn
      x-read-only-properties:
        - Arn
        - Value
      x-required-properties:
        - ChannelArn
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
      x-required-permissions:
        create:
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:CreateStreamKey
        read:
          - ivs:GetStreamKey
          - ivs:ListTagsForResource
        update:
          - ivs:GetStreamKey
          - ivs:TagResource
          - ivs:UntagResource
          - ivs:ListTagsForResource
        delete:
          - ivs:DeleteStreamKey
          - ivs:UntagResource
        list:
          - ivs:ListStreamKeys
          - ivs:ListTagsForResource
    CreateChannelRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Channel ARN is automatically generated on creation and assigned as the unique identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            Name:
              description: Channel
              type: string
              minLength: 0
              maxLength: 128
              pattern: ^[a-zA-Z0-9-_]*$
              default: '-'
            Authorized:
              description: Whether the channel is authorized.
              type: boolean
              default: false
            InsecureIngest:
              description: Whether the channel allows insecure ingest.
              type: boolean
              default: false
            LatencyMode:
              description: Channel latency mode.
              type: string
              enum:
                - NORMAL
                - LOW
              default: LOW
            Type:
              description: Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
              type: string
              enum:
                - STANDARD
                - BASIC
                - ADVANCED_SD
                - ADVANCED_HD
              default: STANDARD
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            PlaybackUrl:
              description: Channel Playback URL.
              type: string
            IngestEndpoint:
              description: Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
              type: string
            RecordingConfigurationArn:
              description: 'Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: "" (recording is disabled).'
              type: string
              default: ''
              pattern: ^$|arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
              minLength: 0
              maxLength: 128
            Preset:
              description: Optional transcode preset for the channel. This is selectable only for ADVANCED_HD and ADVANCED_SD channel types. For those channel types, the default preset is HIGHER_BANDWIDTH_DELIVERY. For other channel types (BASIC and STANDARD), preset is the empty string ("").
              type: string
              enum:
                - ''
                - HIGHER_BANDWIDTH_DELIVERY
                - CONSTRAINED_BANDWIDTH_DELIVERY
          x-stackQL-stringOnly: true
      x-title: CreateChannelRequest
      type: object
      required: []
    CreateEncoderConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Encoder configuration identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:encoder-configuration/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            Video:
              description: 'Video configuration. Default: video resolution 1280x720, bitrate 2500 kbps, 30 fps'
              type: object
              additionalProperties: false
              properties:
                Bitrate:
                  description: 'Bitrate for generated output, in bps. Default: 2500000.'
                  type: integer
                  minimum: 1
                  maximum: 8500000
                  default: 2500000
                Framerate:
                  description: 'Video frame rate, in fps. Default: 30.'
                  type: number
                  minimum: 1
                  maximum: 60
                  default: 30
                Height:
                  description: 'Video-resolution height. This must be an even number. Note that the maximum value is determined by width times height, such that the maximum total pixels is 2073600 (1920x1080 or 1080x1920). Default: 720.'
                  type: integer
                  minimum: 2
                  maximum: 1920
                  default: 720
                Width:
                  description: 'Video-resolution width. This must be an even number. Note that the maximum value is determined by width times height, such that the maximum total pixels is 2073600 (1920x1080 or 1080x1920). Default: 1280.'
                  type: integer
                  minimum: 2
                  maximum: 1920
                  default: 1280
            Name:
              description: Encoder configuration name.
              type: string
              maxLength: 128
              minLength: 0
              pattern: ^[a-zA-Z0-9-_]*$
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateEncoderConfigurationRequest
      type: object
      required: []
    CreateIngestConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: IngestConfiguration ARN is automatically generated on creation and assigned as the unique identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:ingest-configuration/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            Name:
              description: IngestConfiguration
              type: string
              minLength: 0
              maxLength: 128
              pattern: ^[a-zA-Z0-9-_]*$
              default: '-'
            StageArn:
              description: 'Stage ARN. A value other than an empty string indicates that stage is linked to IngestConfiguration. Default: "" (recording is disabled).'
              type: string
              default: ''
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$
              minLength: 0
              maxLength: 128
            ParticipantId:
              description: Participant Id is automatically generated on creation and assigned.
              type: string
              minLength: 0
              maxLength: 64
              pattern: ^[a-zA-Z0-9-_]*$
            IngestProtocol:
              description: Ingest Protocol.
              type: string
              enum:
                - RTMP
                - RTMPS
              default: RTMPS
            InsecureIngest:
              description: Whether ingest configuration allows insecure ingest.
              type: boolean
              default: false
            State:
              description: State of IngestConfiguration which determines whether IngestConfiguration is in use or not.
              type: string
              enum:
                - ACTIVE
                - INACTIVE
              default: INACTIVE
            StreamKey:
              description: Stream-key value.
              type: string
            UserId:
              description: User defined indentifier for participant associated with IngestConfiguration.
              type: string
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateIngestConfigurationRequest
      type: object
      required: []
    CreatePlaybackKeyPairRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.
              type: string
              pattern: ^[a-zA-Z0-9-_]*$
              minLength: 0
              maxLength: 128
            PublicKeyMaterial:
              description: The public portion of a customer-generated key pair.
              type: string
            Fingerprint:
              description: Key-pair identifier.
              type: string
            Arn:
              description: Key-pair identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreatePlaybackKeyPairRequest
      type: object
      required: []
    CreatePlaybackRestrictionPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Playback-restriction-policy identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-restriction-policy/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            AllowedCountries:
              description: 'A list of country codes that control geoblocking restriction. Allowed values are the officially assigned ISO 3166-1 alpha-2 codes. Default: All countries (an empty array).'
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
              default: []
            AllowedOrigins:
              description: A list of origin sites that control CORS restriction. Allowed values are the same as valid values of the Origin header defined at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin
              type: array
              x-insertionOrder: false
              items:
                type: string
              default: []
            EnableStrictOriginEnforcement:
              description: Whether channel playback is constrained by origin site.
              default: false
              type: boolean
            Name:
              description: Playback-restriction-policy name.
              type: string
              maxLength: 128
              minLength: 0
              pattern: ^[a-zA-Z0-9-_]*$
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreatePlaybackRestrictionPolicyRequest
      type: object
      required: []
    CreatePublicKeyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: Name of the public key to be imported. The value does not need to be unique.
              type: string
              pattern: ^[a-zA-Z0-9-_]*$
              minLength: 0
              maxLength: 128
            PublicKeyMaterial:
              description: The public portion of a customer-generated key pair.
              type: string
              pattern: '-----BEGIN PUBLIC KEY-----\r?\n([a-zA-Z0-9+/=\r\n]+)\r?\n-----END PUBLIC KEY-----(\r?\n)?'
            Fingerprint:
              description: Key-pair identifier.
              type: string
            Arn:
              description: Key-pair identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:public-key/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreatePublicKeyRequest
      type: object
      required: []
    CreateRecordingConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
              type: string
              pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
              minLength: 0
              maxLength: 128
            Name:
              description: Recording Configuration Name.
              type: string
              minLength: 0
              maxLength: 128
              pattern: ^[a-zA-Z0-9-_]*$
            State:
              description: Recording Configuration State.
              type: string
              enum:
                - CREATING
                - CREATE_FAILED
                - ACTIVE
            RecordingReconnectWindowSeconds:
              description: Recording Reconnect Window Seconds. (0 means disabled)
              type: integer
              default: 0
              minimum: 0
              maximum: 300
            DestinationConfiguration:
              $ref: '#/components/schemas/DestinationConfiguration'
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            ThumbnailConfiguration:
              $ref: '#/components/schemas/ThumbnailConfiguration'
            RenditionConfiguration:
              $ref: '#/components/schemas/RenditionConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateRecordingConfigurationRequest
      type: object
      required: []
    CreateStageRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Stage ARN is automatically generated on creation and assigned as the unique identifier.
              type: string
              pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:stage/[a-zA-Z0-9-]+$
              minLength: 0
              maxLength: 128
            Name:
              description: Stage name
              type: string
              minLength: 0
              maxLength: 128
              pattern: ^[a-zA-Z0-9-_]*$
            AutoParticipantRecordingConfiguration:
              $ref: '#/components/schemas/AutoParticipantRecordingConfiguration'
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            ActiveSessionId:
              description: ID of the active session within the stage.
              type: string
              default: ''
              minLength: 0
              maxLength: 128
          x-stackQL-stringOnly: true
      x-title: CreateStageRequest
      type: object
      required: []
    CreateStorageConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Storage Configuration ARN is automatically generated on creation and assigned as the unique identifier.
              type: string
              pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:storage-configuration/[a-zA-Z0-9-]+$
              minLength: 0
              maxLength: 128
            Name:
              description: Storage Configuration Name.
              type: string
              minLength: 0
              maxLength: 128
              pattern: ^[a-zA-Z0-9-_]*$
            S3:
              $ref: '#/components/schemas/S3StorageConfiguration'
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateStorageConfigurationRequest
      type: object
      required: []
    CreateStreamKeyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: Stream Key ARN is automatically generated on creation and assigned as the unique identifier.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$
              minLength: 1
              maxLength: 128
            ChannelArn:
              description: Channel ARN for the stream.
              type: string
              pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
            Tags:
              description: A list of key-value pairs that contain metadata for the asset model.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            Value:
              description: Stream-key value.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateStreamKeyRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    channels:
      name: channels
      id: aws.ivs.channels
      x-cfn-schema-name: Channel
      x-cfn-type-name: AWS::IVS::Channel
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Channel&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::Channel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::Channel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::Channel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/channels/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/channels/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/channels/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Authorized') as authorized,
              JSON_EXTRACT(Properties, '$.InsecureIngest') as insecure_ingest,
              JSON_EXTRACT(Properties, '$.LatencyMode') as latency_mode,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.PlaybackUrl') as playback_url,
              JSON_EXTRACT(Properties, '$.IngestEndpoint') as ingest_endpoint,
              JSON_EXTRACT(Properties, '$.RecordingConfigurationArn') as recording_configuration_arn,
              JSON_EXTRACT(Properties, '$.Preset') as preset
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Channel'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Authorized') as authorized,
                JSON_EXTRACT(detail.Properties, '$.InsecureIngest') as insecure_ingest,
                JSON_EXTRACT(detail.Properties, '$.LatencyMode') as latency_mode,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.PlaybackUrl') as playback_url,
                JSON_EXTRACT(detail.Properties, '$.IngestEndpoint') as ingest_endpoint,
                JSON_EXTRACT(detail.Properties, '$.RecordingConfigurationArn') as recording_configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.Preset') as preset
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::Channel'
                AND detail.data__TypeName = 'AWS::IVS::Channel'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Authorized') as authorized,
                  json_extract_path_text(Properties, 'InsecureIngest') as insecure_ingest,
                  json_extract_path_text(Properties, 'LatencyMode') as latency_mode,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'PlaybackUrl') as playback_url,
                  json_extract_path_text(Properties, 'IngestEndpoint') as ingest_endpoint,
                  json_extract_path_text(Properties, 'RecordingConfigurationArn') as recording_configuration_arn,
                  json_extract_path_text(Properties, 'Preset') as preset
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Channel'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Authorized') as authorized,
                    json_extract_path_text(detail.Properties, 'InsecureIngest') as insecure_ingest,
                    json_extract_path_text(detail.Properties, 'LatencyMode') as latency_mode,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'PlaybackUrl') as playback_url,
                    json_extract_path_text(detail.Properties, 'IngestEndpoint') as ingest_endpoint,
                    json_extract_path_text(detail.Properties, 'RecordingConfigurationArn') as recording_configuration_arn,
                    json_extract_path_text(detail.Properties, 'Preset') as preset
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::Channel'
                    AND detail.data__TypeName = 'AWS::IVS::Channel'
                    AND listing.region = 'us-east-1'
    channels_list_only:
      name: channels_list_only
      id: aws.ivs.channels_list_only
      x-cfn-schema-name: Channel
      x-cfn-type-name: AWS::IVS::Channel
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Channel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Channel'
                AND region = 'us-east-1'
    channel_tags:
      name: channel_tags
      id: aws.ivs.channel_tags
      x-cfn-schema-name: Channel
      x-cfn-type-name: AWS::IVS::Channel
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Authorized') as authorized,
              JSON_EXTRACT(detail.Properties, '$.InsecureIngest') as insecure_ingest,
              JSON_EXTRACT(detail.Properties, '$.LatencyMode') as latency_mode,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.PlaybackUrl') as playback_url,
              JSON_EXTRACT(detail.Properties, '$.IngestEndpoint') as ingest_endpoint,
              JSON_EXTRACT(detail.Properties, '$.RecordingConfigurationArn') as recording_configuration_arn,
              JSON_EXTRACT(detail.Properties, '$.Preset') as preset
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::Channel'
              AND detail.data__TypeName = 'AWS::IVS::Channel'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Authorized') as authorized,
                json_extract_path_text(detail.Properties, 'InsecureIngest') as insecure_ingest,
                json_extract_path_text(detail.Properties, 'LatencyMode') as latency_mode,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'PlaybackUrl') as playback_url,
                json_extract_path_text(detail.Properties, 'IngestEndpoint') as ingest_endpoint,
                json_extract_path_text(detail.Properties, 'RecordingConfigurationArn') as recording_configuration_arn,
                json_extract_path_text(detail.Properties, 'Preset') as preset
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::Channel'
                AND detail.data__TypeName = 'AWS::IVS::Channel'
                AND listing.region = 'us-east-1'
    encoder_configurations:
      name: encoder_configurations
      id: aws.ivs.encoder_configurations
      x-cfn-schema-name: EncoderConfiguration
      x-cfn-type-name: AWS::IVS::EncoderConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EncoderConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::EncoderConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::EncoderConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::EncoderConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/encoder_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/encoder_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/encoder_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Video') as video,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::EncoderConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Video') as video,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::EncoderConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::EncoderConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Video') as video,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::EncoderConfiguration'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Video') as video,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::EncoderConfiguration'
                    AND detail.data__TypeName = 'AWS::IVS::EncoderConfiguration'
                    AND listing.region = 'us-east-1'
    encoder_configurations_list_only:
      name: encoder_configurations_list_only
      id: aws.ivs.encoder_configurations_list_only
      x-cfn-schema-name: EncoderConfiguration
      x-cfn-type-name: AWS::IVS::EncoderConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::EncoderConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::EncoderConfiguration'
                AND region = 'us-east-1'
    encoder_configuration_tags:
      name: encoder_configuration_tags
      id: aws.ivs.encoder_configuration_tags
      x-cfn-schema-name: EncoderConfiguration
      x-cfn-type-name: AWS::IVS::EncoderConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Video') as video,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::EncoderConfiguration'
              AND detail.data__TypeName = 'AWS::IVS::EncoderConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Video') as video,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::EncoderConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::EncoderConfiguration'
                AND listing.region = 'us-east-1'
    ingest_configurations:
      name: ingest_configurations
      id: aws.ivs.ingest_configurations
      x-cfn-schema-name: IngestConfiguration
      x-cfn-type-name: AWS::IVS::IngestConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IngestConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::IngestConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::IngestConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::IngestConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ingest_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ingest_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ingest_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.StageArn') as stage_arn,
              JSON_EXTRACT(Properties, '$.ParticipantId') as participant_id,
              JSON_EXTRACT(Properties, '$.IngestProtocol') as ingest_protocol,
              JSON_EXTRACT(Properties, '$.InsecureIngest') as insecure_ingest,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.StreamKey') as stream_key,
              JSON_EXTRACT(Properties, '$.UserId') as user_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::IngestConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.StageArn') as stage_arn,
                JSON_EXTRACT(detail.Properties, '$.ParticipantId') as participant_id,
                JSON_EXTRACT(detail.Properties, '$.IngestProtocol') as ingest_protocol,
                JSON_EXTRACT(detail.Properties, '$.InsecureIngest') as insecure_ingest,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.StreamKey') as stream_key,
                JSON_EXTRACT(detail.Properties, '$.UserId') as user_id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::IngestConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::IngestConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'StageArn') as stage_arn,
                  json_extract_path_text(Properties, 'ParticipantId') as participant_id,
                  json_extract_path_text(Properties, 'IngestProtocol') as ingest_protocol,
                  json_extract_path_text(Properties, 'InsecureIngest') as insecure_ingest,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'StreamKey') as stream_key,
                  json_extract_path_text(Properties, 'UserId') as user_id,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::IngestConfiguration'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'StageArn') as stage_arn,
                    json_extract_path_text(detail.Properties, 'ParticipantId') as participant_id,
                    json_extract_path_text(detail.Properties, 'IngestProtocol') as ingest_protocol,
                    json_extract_path_text(detail.Properties, 'InsecureIngest') as insecure_ingest,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'StreamKey') as stream_key,
                    json_extract_path_text(detail.Properties, 'UserId') as user_id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::IngestConfiguration'
                    AND detail.data__TypeName = 'AWS::IVS::IngestConfiguration'
                    AND listing.region = 'us-east-1'
    ingest_configurations_list_only:
      name: ingest_configurations_list_only
      id: aws.ivs.ingest_configurations_list_only
      x-cfn-schema-name: IngestConfiguration
      x-cfn-type-name: AWS::IVS::IngestConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::IngestConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::IngestConfiguration'
                AND region = 'us-east-1'
    ingest_configuration_tags:
      name: ingest_configuration_tags
      id: aws.ivs.ingest_configuration_tags
      x-cfn-schema-name: IngestConfiguration
      x-cfn-type-name: AWS::IVS::IngestConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.StageArn') as stage_arn,
              JSON_EXTRACT(detail.Properties, '$.ParticipantId') as participant_id,
              JSON_EXTRACT(detail.Properties, '$.IngestProtocol') as ingest_protocol,
              JSON_EXTRACT(detail.Properties, '$.InsecureIngest') as insecure_ingest,
              JSON_EXTRACT(detail.Properties, '$.State') as state,
              JSON_EXTRACT(detail.Properties, '$.StreamKey') as stream_key,
              JSON_EXTRACT(detail.Properties, '$.UserId') as user_id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::IngestConfiguration'
              AND detail.data__TypeName = 'AWS::IVS::IngestConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'StageArn') as stage_arn,
                json_extract_path_text(detail.Properties, 'ParticipantId') as participant_id,
                json_extract_path_text(detail.Properties, 'IngestProtocol') as ingest_protocol,
                json_extract_path_text(detail.Properties, 'InsecureIngest') as insecure_ingest,
                json_extract_path_text(detail.Properties, 'State') as state,
                json_extract_path_text(detail.Properties, 'StreamKey') as stream_key,
                json_extract_path_text(detail.Properties, 'UserId') as user_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::IngestConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::IngestConfiguration'
                AND listing.region = 'us-east-1'
    playback_key_pairs:
      name: playback_key_pairs
      id: aws.ivs.playback_key_pairs
      x-cfn-schema-name: PlaybackKeyPair
      x-cfn-type-name: AWS::IVS::PlaybackKeyPair
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PlaybackKeyPair&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PlaybackKeyPair"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PlaybackKeyPair"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PlaybackKeyPair"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/playback_key_pairs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/playback_key_pairs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/playback_key_pairs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.PublicKeyMaterial') as public_key_material,
                JSON_EXTRACT(detail.Properties, '$.Fingerprint') as fingerprint,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND detail.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'PublicKeyMaterial') as public_key_material,
                  json_extract_path_text(Properties, 'Fingerprint') as fingerprint,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'PublicKeyMaterial') as public_key_material,
                    json_extract_path_text(detail.Properties, 'Fingerprint') as fingerprint,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                    AND detail.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                    AND listing.region = 'us-east-1'
    playback_key_pairs_list_only:
      name: playback_key_pairs_list_only
      id: aws.ivs.playback_key_pairs_list_only
      x-cfn-schema-name: PlaybackKeyPair
      x-cfn-type-name: AWS::IVS::PlaybackKeyPair
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND region = 'us-east-1'
    playback_key_pair_tags:
      name: playback_key_pair_tags
      id: aws.ivs.playback_key_pair_tags
      x-cfn-schema-name: PlaybackKeyPair
      x-cfn-type-name: AWS::IVS::PlaybackKeyPair
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(detail.Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
              AND detail.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'PublicKeyMaterial') as public_key_material,
                json_extract_path_text(detail.Properties, 'Fingerprint') as fingerprint,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND detail.data__TypeName = 'AWS::IVS::PlaybackKeyPair'
                AND listing.region = 'us-east-1'
    playback_restriction_policies:
      name: playback_restriction_policies
      id: aws.ivs.playback_restriction_policies
      x-cfn-schema-name: PlaybackRestrictionPolicy
      x-cfn-type-name: AWS::IVS::PlaybackRestrictionPolicy
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PlaybackRestrictionPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PlaybackRestrictionPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PlaybackRestrictionPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PlaybackRestrictionPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/playback_restriction_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/playback_restriction_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/playback_restriction_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AllowedCountries') as allowed_countries,
              JSON_EXTRACT(Properties, '$.AllowedOrigins') as allowed_origins,
              JSON_EXTRACT(Properties, '$.EnableStrictOriginEnforcement') as enable_strict_origin_enforcement,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AllowedCountries') as allowed_countries,
                JSON_EXTRACT(detail.Properties, '$.AllowedOrigins') as allowed_origins,
                JSON_EXTRACT(detail.Properties, '$.EnableStrictOriginEnforcement') as enable_strict_origin_enforcement,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                AND detail.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AllowedCountries') as allowed_countries,
                  json_extract_path_text(Properties, 'AllowedOrigins') as allowed_origins,
                  json_extract_path_text(Properties, 'EnableStrictOriginEnforcement') as enable_strict_origin_enforcement,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AllowedCountries') as allowed_countries,
                    json_extract_path_text(detail.Properties, 'AllowedOrigins') as allowed_origins,
                    json_extract_path_text(detail.Properties, 'EnableStrictOriginEnforcement') as enable_strict_origin_enforcement,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                    AND detail.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                    AND listing.region = 'us-east-1'
    playback_restriction_policies_list_only:
      name: playback_restriction_policies_list_only
      id: aws.ivs.playback_restriction_policies_list_only
      x-cfn-schema-name: PlaybackRestrictionPolicy
      x-cfn-type-name: AWS::IVS::PlaybackRestrictionPolicy
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                AND region = 'us-east-1'
    playback_restriction_policy_tags:
      name: playback_restriction_policy_tags
      id: aws.ivs.playback_restriction_policy_tags
      x-cfn-schema-name: PlaybackRestrictionPolicy
      x-cfn-type-name: AWS::IVS::PlaybackRestrictionPolicy
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.AllowedCountries') as allowed_countries,
              JSON_EXTRACT(detail.Properties, '$.AllowedOrigins') as allowed_origins,
              JSON_EXTRACT(detail.Properties, '$.EnableStrictOriginEnforcement') as enable_strict_origin_enforcement,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
              AND detail.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'AllowedCountries') as allowed_countries,
                json_extract_path_text(detail.Properties, 'AllowedOrigins') as allowed_origins,
                json_extract_path_text(detail.Properties, 'EnableStrictOriginEnforcement') as enable_strict_origin_enforcement,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                AND detail.data__TypeName = 'AWS::IVS::PlaybackRestrictionPolicy'
                AND listing.region = 'us-east-1'
    public_keys:
      name: public_keys
      id: aws.ivs.public_keys
      x-cfn-schema-name: PublicKey
      x-cfn-type-name: AWS::IVS::PublicKey
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PublicKey&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PublicKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PublicKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::PublicKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PublicKey'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.PublicKeyMaterial') as public_key_material,
                JSON_EXTRACT(detail.Properties, '$.Fingerprint') as fingerprint,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::PublicKey'
                AND detail.data__TypeName = 'AWS::IVS::PublicKey'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'PublicKeyMaterial') as public_key_material,
                  json_extract_path_text(Properties, 'Fingerprint') as fingerprint,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PublicKey'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'PublicKeyMaterial') as public_key_material,
                    json_extract_path_text(detail.Properties, 'Fingerprint') as fingerprint,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::PublicKey'
                    AND detail.data__TypeName = 'AWS::IVS::PublicKey'
                    AND listing.region = 'us-east-1'
    public_keys_list_only:
      name: public_keys_list_only
      id: aws.ivs.public_keys_list_only
      x-cfn-schema-name: PublicKey
      x-cfn-type-name: AWS::IVS::PublicKey
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PublicKey'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PublicKey'
                AND region = 'us-east-1'
    public_key_tags:
      name: public_key_tags
      id: aws.ivs.public_key_tags
      x-cfn-schema-name: PublicKey
      x-cfn-type-name: AWS::IVS::PublicKey
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(detail.Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::PublicKey'
              AND detail.data__TypeName = 'AWS::IVS::PublicKey'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'PublicKeyMaterial') as public_key_material,
                json_extract_path_text(detail.Properties, 'Fingerprint') as fingerprint,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::PublicKey'
                AND detail.data__TypeName = 'AWS::IVS::PublicKey'
                AND listing.region = 'us-east-1'
    recording_configurations:
      name: recording_configurations
      id: aws.ivs.recording_configurations
      x-cfn-schema-name: RecordingConfiguration
      x-cfn-type-name: AWS::IVS::RecordingConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RecordingConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::RecordingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::RecordingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::RecordingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/recording_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/recording_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/recording_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
              JSON_EXTRACT(Properties, '$.DestinationConfiguration') as destination_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ThumbnailConfiguration') as thumbnail_configuration,
              JSON_EXTRACT(Properties, '$.RenditionConfiguration') as rendition_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
                JSON_EXTRACT(detail.Properties, '$.DestinationConfiguration') as destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ThumbnailConfiguration') as thumbnail_configuration,
                JSON_EXTRACT(detail.Properties, '$.RenditionConfiguration') as rendition_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
                  json_extract_path_text(Properties, 'DestinationConfiguration') as destination_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ThumbnailConfiguration') as thumbnail_configuration,
                  json_extract_path_text(Properties, 'RenditionConfiguration') as rendition_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
                    json_extract_path_text(detail.Properties, 'DestinationConfiguration') as destination_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ThumbnailConfiguration') as thumbnail_configuration,
                    json_extract_path_text(detail.Properties, 'RenditionConfiguration') as rendition_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::RecordingConfiguration'
                    AND detail.data__TypeName = 'AWS::IVS::RecordingConfiguration'
                    AND listing.region = 'us-east-1'
    recording_configurations_list_only:
      name: recording_configurations_list_only
      id: aws.ivs.recording_configurations_list_only
      x-cfn-schema-name: RecordingConfiguration
      x-cfn-type-name: AWS::IVS::RecordingConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND region = 'us-east-1'
    recording_configuration_tags:
      name: recording_configuration_tags
      id: aws.ivs.recording_configuration_tags
      x-cfn-schema-name: RecordingConfiguration
      x-cfn-type-name: AWS::IVS::RecordingConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.State') as state,
              JSON_EXTRACT(detail.Properties, '$.RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
              JSON_EXTRACT(detail.Properties, '$.DestinationConfiguration') as destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.ThumbnailConfiguration') as thumbnail_configuration,
              JSON_EXTRACT(detail.Properties, '$.RenditionConfiguration') as rendition_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::RecordingConfiguration'
              AND detail.data__TypeName = 'AWS::IVS::RecordingConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'State') as state,
                json_extract_path_text(detail.Properties, 'RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
                json_extract_path_text(detail.Properties, 'DestinationConfiguration') as destination_configuration,
                json_extract_path_text(detail.Properties, 'ThumbnailConfiguration') as thumbnail_configuration,
                json_extract_path_text(detail.Properties, 'RenditionConfiguration') as rendition_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::RecordingConfiguration'
                AND listing.region = 'us-east-1'
    stages:
      name: stages
      id: aws.ivs.stages
      x-cfn-schema-name: Stage
      x-cfn-type-name: AWS::IVS::Stage
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Stage&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::Stage"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::Stage"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::Stage"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/stages/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/stages/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/stages/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AutoParticipantRecordingConfiguration') as auto_participant_recording_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ActiveSessionId') as active_session_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Stage'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.AutoParticipantRecordingConfiguration') as auto_participant_recording_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ActiveSessionId') as active_session_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::Stage'
                AND detail.data__TypeName = 'AWS::IVS::Stage'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'AutoParticipantRecordingConfiguration') as auto_participant_recording_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ActiveSessionId') as active_session_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Stage'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'AutoParticipantRecordingConfiguration') as auto_participant_recording_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ActiveSessionId') as active_session_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::Stage'
                    AND detail.data__TypeName = 'AWS::IVS::Stage'
                    AND listing.region = 'us-east-1'
    stages_list_only:
      name: stages_list_only
      id: aws.ivs.stages_list_only
      x-cfn-schema-name: Stage
      x-cfn-type-name: AWS::IVS::Stage
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Stage'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Stage'
                AND region = 'us-east-1'
    stage_tags:
      name: stage_tags
      id: aws.ivs.stage_tags
      x-cfn-schema-name: Stage
      x-cfn-type-name: AWS::IVS::Stage
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.AutoParticipantRecordingConfiguration') as auto_participant_recording_configuration,
              JSON_EXTRACT(detail.Properties, '$.ActiveSessionId') as active_session_id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::Stage'
              AND detail.data__TypeName = 'AWS::IVS::Stage'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'AutoParticipantRecordingConfiguration') as auto_participant_recording_configuration,
                json_extract_path_text(detail.Properties, 'ActiveSessionId') as active_session_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::Stage'
                AND detail.data__TypeName = 'AWS::IVS::Stage'
                AND listing.region = 'us-east-1'
    storage_configurations:
      name: storage_configurations
      id: aws.ivs.storage_configurations
      x-cfn-schema-name: StorageConfiguration
      x-cfn-type-name: AWS::IVS::StorageConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StorageConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::StorageConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::StorageConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::StorageConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/storage_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.S3') as s3,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StorageConfiguration'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.S3') as s3,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::StorageConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::StorageConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'S3') as s3,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StorageConfiguration'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'S3') as s3,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::StorageConfiguration'
                    AND detail.data__TypeName = 'AWS::IVS::StorageConfiguration'
                    AND listing.region = 'us-east-1'
    storage_configurations_list_only:
      name: storage_configurations_list_only
      id: aws.ivs.storage_configurations_list_only
      x-cfn-schema-name: StorageConfiguration
      x-cfn-type-name: AWS::IVS::StorageConfiguration
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StorageConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StorageConfiguration'
                AND region = 'us-east-1'
    storage_configuration_tags:
      name: storage_configuration_tags
      id: aws.ivs.storage_configuration_tags
      x-cfn-schema-name: StorageConfiguration
      x-cfn-type-name: AWS::IVS::StorageConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.S3') as s3
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::StorageConfiguration'
              AND detail.data__TypeName = 'AWS::IVS::StorageConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'S3') as s3
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::StorageConfiguration'
                AND detail.data__TypeName = 'AWS::IVS::StorageConfiguration'
                AND listing.region = 'us-east-1'
    stream_keys:
      name: stream_keys
      id: aws.ivs.stream_keys
      x-cfn-schema-name: StreamKey
      x-cfn-type-name: AWS::IVS::StreamKey
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StreamKey&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::StreamKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::StreamKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IVS::StreamKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/stream_keys/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/stream_keys/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/stream_keys/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ChannelArn') as channel_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Value') as value
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StreamKey'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ChannelArn') as channel_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Value') as value
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IVS::StreamKey'
                AND detail.data__TypeName = 'AWS::IVS::StreamKey'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ChannelArn') as channel_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Value') as value
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StreamKey'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ChannelArn') as channel_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Value') as value
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IVS::StreamKey'
                    AND detail.data__TypeName = 'AWS::IVS::StreamKey'
                    AND listing.region = 'us-east-1'
    stream_keys_list_only:
      name: stream_keys_list_only
      id: aws.ivs.stream_keys_list_only
      x-cfn-schema-name: StreamKey
      x-cfn-type-name: AWS::IVS::StreamKey
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StreamKey'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StreamKey'
                AND region = 'us-east-1'
    stream_key_tags:
      name: stream_key_tags
      id: aws.ivs.stream_key_tags
      x-cfn-schema-name: StreamKey
      x-cfn-type-name: AWS::IVS::StreamKey
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.ChannelArn') as channel_arn,
              JSON_EXTRACT(detail.Properties, '$.Value') as value
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IVS::StreamKey'
              AND detail.data__TypeName = 'AWS::IVS::StreamKey'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'ChannelArn') as channel_arn,
                json_extract_path_text(detail.Properties, 'Value') as value
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IVS::StreamKey'
                AND detail.data__TypeName = 'AWS::IVS::StreamKey'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Channel&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateChannel
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateChannelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EncoderConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEncoderConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEncoderConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IngestConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIngestConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIngestConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PlaybackKeyPair&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePlaybackKeyPair
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePlaybackKeyPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PlaybackRestrictionPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePlaybackRestrictionPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePlaybackRestrictionPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PublicKey&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePublicKey
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePublicKeyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RecordingConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRecordingConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRecordingConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Stage&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStage
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStageRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StorageConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStorageConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStorageConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StreamKey&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStreamKey
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStreamKeyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
