openapi: 3.0.0
info:
  title: IVS
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    Channel:
      type: object
      properties:
        Arn:
          description: Channel ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Name:
          description: Channel
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
          default: '-'
        Authorized:
          description: Whether the channel is authorized.
          type: boolean
          default: false
        LatencyMode:
          description: Channel latency mode.
          type: string
          enum:
            - NORMAL
            - LOW
          default: LOW
        Type:
          description: Channel type, which determines the allowable resolution and bitrate. If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately.
          type: string
          enum:
            - STANDARD
            - BASIC
          default: STANDARD
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        PlaybackUrl:
          description: Channel Playback URL.
          type: string
        IngestEndpoint:
          description: Channel ingest endpoint, part of the definition of an ingest server, used when you set up streaming software.
          type: string
        RecordingConfigurationArn:
          description: 'Recording Configuration ARN. A value other than an empty string indicates that recording is enabled. Default: "" (recording is disabled).'
          type: string
          default: ''
          pattern: ^$|arn:aws:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
          minLength: 0
          maxLength: 128
      required: []
      x-stackql-resource-name: channel
      x-stackql-primaryIdentifier:
        - Arn
    PlaybackKeyPair:
      type: object
      properties:
        Name:
          description: An arbitrary string (a nickname) assigned to a playback key pair that helps the customer identify that resource. The value does not need to be unique.
          type: string
          pattern: ^[a-zA-Z0-9-_]*$
          minLength: 0
          maxLength: 128
        PublicKeyMaterial:
          description: The public portion of a customer-generated key pair.
          type: string
        Fingerprint:
          description: Key-pair identifier.
          type: string
        Arn:
          description: Key-pair identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:playback-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: playback_key_pair
      x-stackql-primaryIdentifier:
        - Arn
    DestinationConfiguration:
      description: Recording Destination Configuration.
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/S3DestinationConfiguration'
      required:
        - S3
    S3DestinationConfiguration:
      description: Recording S3 Destination Configuration.
      type: object
      additionalProperties: false
      properties:
        BucketName:
          type: string
          minLength: 3
          maxLength: 63
          pattern: ^[a-z0-9-.]+$
      required:
        - BucketName
    ThumbnailConfiguration:
      description: Recording Thumbnail Configuration.
      type: object
      additionalProperties: false
      properties:
        RecordingMode:
          description: Thumbnail Recording Mode, which determines whether thumbnails are recorded at an interval or are disabled.
          type: string
          enum:
            - INTERVAL
            - DISABLED
        TargetIntervalSeconds:
          description: Thumbnail recording Target Interval Seconds defines the interval at which thumbnails are recorded. This field is required if RecordingMode is INTERVAL.
          type: integer
          minimum: 5
          maximum: 60
      required:
        - RecordingMode
    RecordingConfiguration:
      type: object
      properties:
        Arn:
          description: Recording Configuration ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws[-a-z]*:ivs:[a-z0-9-]+:[0-9]+:recording-configuration/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        Name:
          description: Recording Configuration Name.
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_]*$
        State:
          description: Recording Configuration State.
          type: string
          enum:
            - CREATING
            - CREATE_FAILED
            - ACTIVE
        RecordingReconnectWindowSeconds:
          description: Recording Reconnect Window Seconds. (0 means disabled)
          type: integer
          default: 0
          minimum: 0
          maximum: 300
        DestinationConfiguration:
          $ref: '#/components/schemas/DestinationConfiguration'
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        ThumbnailConfiguration:
          $ref: '#/components/schemas/ThumbnailConfiguration'
      required:
        - DestinationConfiguration
      x-stackql-resource-name: recording_configuration
      x-stackql-primaryIdentifier:
        - Arn
    StreamKey:
      type: object
      properties:
        Arn:
          description: Stream Key ARN is automatically generated on creation and assigned as the unique identifier.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:stream-key/[a-zA-Z0-9-]+$
          minLength: 1
          maxLength: 128
        ChannelArn:
          description: Channel ARN for the stream.
          type: string
          pattern: ^arn:aws:ivs:[a-z0-9-]+:[0-9]+:channel/[a-zA-Z0-9-]+$
        Tags:
          description: A list of key-value pairs that contain metadata for the asset model.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        Value:
          description: Stream-key value.
          type: string
      required:
        - ChannelArn
      x-stackql-resource-name: stream_key
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    channels:
      name: channels
      id: aws.ivs.channels
      x-cfn-schema-name: Channel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::Channel'
    channel:
      name: channel
      id: aws.ivs.channel
      x-cfn-schema-name: Channel
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Authorized') as authorized,
              JSON_EXTRACT(Properties, '$.LatencyMode') as latency_mode,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.PlaybackUrl') as playback_url,
              JSON_EXTRACT(Properties, '$.IngestEndpoint') as ingest_endpoint,
              JSON_EXTRACT(Properties, '$.RecordingConfigurationArn') as recording_configuration_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::Channel'
    playback_key_pairs:
      name: playback_key_pairs
      id: aws.ivs.playback_key_pairs
      x-cfn-schema-name: PlaybackKeyPair
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
    playback_key_pair:
      name: playback_key_pair
      id: aws.ivs.playback_key_pair
      x-cfn-schema-name: PlaybackKeyPair
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PublicKeyMaterial') as public_key_material,
              JSON_EXTRACT(Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::PlaybackKeyPair'
    recording_configurations:
      name: recording_configurations
      id: aws.ivs.recording_configurations
      x-cfn-schema-name: RecordingConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
    recording_configuration:
      name: recording_configuration
      id: aws.ivs.recording_configuration
      x-cfn-schema-name: RecordingConfiguration
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.RecordingReconnectWindowSeconds') as recording_reconnect_window_seconds,
              JSON_EXTRACT(Properties, '$.DestinationConfiguration.S3') as destination_configuration_s3,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ThumbnailConfiguration.RecordingMode') as thumbnail_configuration_recording_mode,
              JSON_EXTRACT(Properties, '$.ThumbnailConfiguration.TargetIntervalSeconds') as thumbnail_configuration_target_interval_seconds
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::RecordingConfiguration'
    stream_keys:
      name: stream_keys
      id: aws.ivs.stream_keys
      x-cfn-schema-name: StreamKey
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IVS::StreamKey'
    stream_key:
      name: stream_key
      id: aws.ivs.stream_key
      x-cfn-schema-name: StreamKey
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ChannelArn') as channel_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Value') as value
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IVS::StreamKey'
