openapi: 3.0.0
info:
  title: Budgets
  version: 1.0.0
paths: {}
components:
  schemas:
    HistoricalOptions:
      type: object
      additionalProperties: false
      properties:
        BudgetAdjustmentPeriod:
          type: integer
      required:
        - BudgetAdjustmentPeriod
    Subscriber:
      type: object
      properties:
        Type:
          type: string
          enum:
            - SNS
            - EMAIL
        Address:
          type: string
      required:
        - Type
        - Address
      additionalProperties: false
    BudgetData:
      type: object
      additionalProperties: false
      properties:
        BudgetLimit:
          $ref: '#/components/schemas/Spend'
        TimePeriod:
          $ref: '#/components/schemas/TimePeriod'
        AutoAdjustData:
          $ref: '#/components/schemas/AutoAdjustData'
        TimeUnit:
          type: string
        PlannedBudgetLimits:
          type: object
        CostFilters:
          type: object
        BudgetName:
          type: string
        CostTypes:
          $ref: '#/components/schemas/CostTypes'
        BudgetType:
          type: string
      required:
        - TimeUnit
        - BudgetType
    TimePeriod:
      type: object
      additionalProperties: false
      properties:
        Start:
          type: string
        End:
          type: string
    Spend:
      type: object
      additionalProperties: false
      properties:
        Unit:
          type: string
        Amount:
          type: number
      required:
        - Amount
        - Unit
    NotificationWithSubscribers:
      type: object
      additionalProperties: false
      properties:
        Subscribers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Subscriber'
        Notification:
          $ref: '#/components/schemas/Notification'
      required:
        - Subscribers
        - Notification
    AutoAdjustData:
      type: object
      additionalProperties: false
      properties:
        AutoAdjustType:
          type: string
        HistoricalOptions:
          $ref: '#/components/schemas/HistoricalOptions'
      required:
        - AutoAdjustType
    Notification:
      type: object
      additionalProperties: false
      properties:
        ComparisonOperator:
          type: string
        NotificationType:
          type: string
        Threshold:
          type: number
        ThresholdType:
          type: string
      required:
        - ComparisonOperator
        - NotificationType
        - Threshold
    CostTypes:
      type: object
      additionalProperties: false
      properties:
        IncludeSupport:
          type: boolean
        IncludeOtherSubscription:
          type: boolean
        IncludeTax:
          type: boolean
        IncludeSubscription:
          type: boolean
        UseBlended:
          type: boolean
        IncludeUpfront:
          type: boolean
        IncludeDiscount:
          type: boolean
        IncludeCredit:
          type: boolean
        IncludeRecurring:
          type: boolean
        UseAmortized:
          type: boolean
        IncludeRefund:
          type: boolean
    Budget:
      type: object
      properties:
        NotificationsWithSubscribers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/NotificationWithSubscribers'
        Budget:
          $ref: '#/components/schemas/BudgetData'
        Id:
          type: string
      required:
        - Budget
      x-stackql-resource-name: budget
      x-stackql-primaryIdentifier:
        - Id
    ActionThreshold:
      type: object
      properties:
        Value:
          type: number
        Type:
          type: string
          enum:
            - PERCENTAGE
            - ABSOLUTE_VALUE
      required:
        - Value
        - Type
      additionalProperties: false
    IamActionDefinition:
      type: object
      properties:
        PolicyArn:
          type: string
        Roles:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
        Groups:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
        Users:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
      required:
        - PolicyArn
      additionalProperties: false
    ScpActionDefinition:
      type: object
      properties:
        PolicyId:
          type: string
        TargetIds:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
      required:
        - PolicyId
        - TargetIds
      additionalProperties: false
    SsmActionDefinition:
      type: object
      properties:
        Subtype:
          type: string
          enum:
            - STOP_EC2_INSTANCES
            - STOP_RDS_INSTANCES
        Region:
          type: string
        InstanceIds:
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 100
      required:
        - Subtype
        - Region
        - InstanceIds
      additionalProperties: false
    Definition:
      type: object
      properties:
        IamActionDefinition:
          $ref: '#/components/schemas/IamActionDefinition'
        ScpActionDefinition:
          $ref: '#/components/schemas/ScpActionDefinition'
        SsmActionDefinition:
          $ref: '#/components/schemas/SsmActionDefinition'
      additionalProperties: false
    BudgetsAction:
      type: object
      properties:
        ActionId:
          type: string
        BudgetName:
          type: string
        NotificationType:
          type: string
          enum:
            - ACTUAL
            - FORECASTED
        ActionType:
          type: string
          enum:
            - APPLY_IAM_POLICY
            - APPLY_SCP_POLICY
            - RUN_SSM_DOCUMENTS
        ActionThreshold:
          $ref: '#/components/schemas/ActionThreshold'
        ExecutionRoleArn:
          type: string
        ApprovalModel:
          type: string
          enum:
            - AUTOMATIC
            - MANUAL
        Subscribers:
          type: array
          items:
            $ref: '#/components/schemas/Subscriber'
          maxItems: 11
          minItems: 1
        Definition:
          $ref: '#/components/schemas/Definition'
      required:
        - BudgetName
        - NotificationType
        - ActionType
        - ActionThreshold
        - ExecutionRoleArn
        - Definition
        - Subscribers
      x-stackql-resource-name: budgets_action
      x-stackql-primaryIdentifier:
        - ActionId
        - BudgetName
  x-stackQL-resources:
    budgets:
      name: budgets
      id: aws.budgets.budgets
      x-cfn-schema-name: Budget
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Budgets::Budget'
    budget:
      name: budget
      id: aws.budgets.budget
      x-cfn-schema-name: Budget
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.NotificationsWithSubscribers') as notifications_with_subscribers,
              JSON_EXTRACT(Properties, '$.Budget.BudgetLimit') as budget_budget_limit,
              JSON_EXTRACT(Properties, '$.Budget.TimePeriod') as budget_time_period,
              JSON_EXTRACT(Properties, '$.Budget.AutoAdjustData') as budget_auto_adjust_data,
              JSON_EXTRACT(Properties, '$.Budget.TimeUnit') as budget_time_unit,
              JSON_EXTRACT(Properties, '$.Budget.PlannedBudgetLimits') as budget_planned_budget_limits,
              JSON_EXTRACT(Properties, '$.Budget.CostFilters') as budget_cost_filters,
              JSON_EXTRACT(Properties, '$.Budget.BudgetName') as budget_budget_name,
              JSON_EXTRACT(Properties, '$.Budget.CostTypes') as budget_cost_types,
              JSON_EXTRACT(Properties, '$.Budget.BudgetType') as budget_budget_type,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Budgets::Budget'
    budgets_actions:
      name: budgets_actions
      id: aws.budgets.budgets_actions
      x-cfn-schema-name: BudgetsAction
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ActionId') as action_id,
              JSON_EXTRACT(Properties, '$.BudgetName') as budget_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Budgets::BudgetsAction'
    budgets_action:
      name: budgets_action
      id: aws.budgets.budgets_action
      x-cfn-schema-name: BudgetsAction
      x-type: get
      x-identifiers:
        - ActionId
        - BudgetName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ActionId') as action_id,
              JSON_EXTRACT(Properties, '$.BudgetName') as budget_name,
              JSON_EXTRACT(Properties, '$.NotificationType') as notification_type,
              JSON_EXTRACT(Properties, '$.ActionType') as action_type,
              JSON_EXTRACT(Properties, '$.ActionThreshold.Value') as action_threshold_value,
              JSON_EXTRACT(Properties, '$.ActionThreshold.Type') as action_threshold_type,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.ApprovalModel') as approval_model,
              JSON_EXTRACT(Properties, '$.Subscribers') as subscribers,
              JSON_EXTRACT(Properties, '$.Definition.IamActionDefinition') as definition_iam_action_definition,
              JSON_EXTRACT(Properties, '$.Definition.ScpActionDefinition') as definition_scp_action_definition,
              JSON_EXTRACT(Properties, '$.Definition.SsmActionDefinition') as definition_ssm_action_definition
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Budgets::BudgetsAction'
