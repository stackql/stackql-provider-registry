openapi: 3.0.0
info:
  title: Pinpoint
  version: 1.0.0
paths: {}
components:
  schemas:
    ADMChannel:
      type: object
      properties:
        Id:
          type: string
        ClientSecret:
          type: string
        Enabled:
          type: boolean
        ClientId:
          type: string
        ApplicationId:
          type: string
      required:
        - ApplicationId
        - ClientId
        - ClientSecret
      x-stackql-resource-name: adm_channel
      x-stackql-primaryIdentifier:
        - Id
    APNSChannel:
      type: object
      properties:
        Id:
          type: string
        BundleId:
          type: string
        PrivateKey:
          type: string
        Enabled:
          type: boolean
        DefaultAuthenticationMethod:
          type: string
        TokenKey:
          type: string
        ApplicationId:
          type: string
        TeamId:
          type: string
        Certificate:
          type: string
        TokenKeyId:
          type: string
      required:
        - ApplicationId
      x-stackql-resource-name: apns_channel
      x-stackql-primaryIdentifier:
        - Id
    APNSSandboxChannel:
      type: object
      properties:
        Id:
          type: string
        BundleId:
          type: string
        PrivateKey:
          type: string
        Enabled:
          type: boolean
        DefaultAuthenticationMethod:
          type: string
        TokenKey:
          type: string
        ApplicationId:
          type: string
        TeamId:
          type: string
        Certificate:
          type: string
        TokenKeyId:
          type: string
      required:
        - ApplicationId
      x-stackql-resource-name: apns_sandbox_channel
      x-stackql-primaryIdentifier:
        - Id
    APNSVoipChannel:
      type: object
      properties:
        Id:
          type: string
        BundleId:
          type: string
        PrivateKey:
          type: string
        Enabled:
          type: boolean
        DefaultAuthenticationMethod:
          type: string
        TokenKey:
          type: string
        ApplicationId:
          type: string
        TeamId:
          type: string
        Certificate:
          type: string
        TokenKeyId:
          type: string
      required:
        - ApplicationId
      x-stackql-resource-name: apns_voip_channel
      x-stackql-primaryIdentifier:
        - Id
    APNSVoipSandboxChannel:
      type: object
      properties:
        Id:
          type: string
        BundleId:
          type: string
        PrivateKey:
          type: string
        Enabled:
          type: boolean
        DefaultAuthenticationMethod:
          type: string
        TokenKey:
          type: string
        ApplicationId:
          type: string
        TeamId:
          type: string
        Certificate:
          type: string
        TokenKeyId:
          type: string
      required:
        - ApplicationId
      x-stackql-resource-name: apns_voip_sandbox_channel
      x-stackql-primaryIdentifier:
        - Id
    App:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        Tags:
          type: object
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: app
      x-stackql-primaryIdentifier:
        - Id
    CampaignHook:
      type: object
      additionalProperties: false
      properties:
        WebUrl:
          type: string
        LambdaFunctionName:
          type: string
        Mode:
          type: string
    QuietTime:
      type: object
      additionalProperties: false
      properties:
        Start:
          type: string
        End:
          type: string
      required:
        - Start
        - End
    Limits:
      type: object
      additionalProperties: false
      properties:
        MessagesPerSecond:
          type: integer
        Daily:
          type: integer
        MaximumDuration:
          type: integer
        Total:
          type: integer
        Session:
          type: integer
    ApplicationSettings:
      type: object
      properties:
        Id:
          type: string
        QuietTime:
          $ref: '#/components/schemas/QuietTime'
        Limits:
          $ref: '#/components/schemas/Limits'
        ApplicationId:
          type: string
        CampaignHook:
          $ref: '#/components/schemas/CampaignHook'
        CloudWatchMetricsEnabled:
          type: boolean
      required:
        - ApplicationId
      x-stackql-resource-name: application_settings
      x-stackql-primaryIdentifier:
        - Id
    BaiduChannel:
      type: object
      properties:
        Id:
          type: string
        SecretKey:
          type: string
        ApiKey:
          type: string
        Enabled:
          type: boolean
        ApplicationId:
          type: string
      required:
        - ApplicationId
        - SecretKey
        - ApiKey
      x-stackql-resource-name: baidu_channel
      x-stackql-primaryIdentifier:
        - Id
    SetDimension:
      type: object
      additionalProperties: false
      properties:
        DimensionType:
          type: string
        Values:
          type: array
          uniqueItems: false
          items:
            type: string
    Message:
      type: object
      additionalProperties: false
      properties:
        Action:
          type: string
        MediaUrl:
          type: string
        TimeToLive:
          type: integer
        ImageSmallIconUrl:
          type: string
        ImageUrl:
          type: string
        Title:
          type: string
        Url:
          type: string
        JsonBody:
          type: string
        ImageIconUrl:
          type: string
        SilentPush:
          type: boolean
        Body:
          type: string
        RawContent:
          type: string
    InAppMessageContent:
      additionalProperties: false
      properties:
        BackgroundColor:
          type: string
        BodyConfig:
          $ref: '#/components/schemas/BodyConfig'
        HeaderConfig:
          $ref: '#/components/schemas/HeaderConfig'
        ImageUrl:
          type: string
        PrimaryBtn:
          $ref: '#/components/schemas/ButtonConfig'
        SecondaryBtn:
          $ref: '#/components/schemas/ButtonConfig'
      type: object
    InAppMessageBodyConfig:
      type: object
      additionalProperties: false
      properties:
        Alignment:
          type: string
        TextColor:
          type: string
        Body:
          type: string
    CampaignEventFilter:
      type: object
      additionalProperties: false
      properties:
        Dimensions:
          $ref: '#/components/schemas/EventDimensions'
        FilterType:
          type: string
    TemplateConfiguration:
      type: object
      additionalProperties: false
      properties:
        SMSTemplate:
          $ref: '#/components/schemas/Template'
        EmailTemplate:
          $ref: '#/components/schemas/Template'
        PushTemplate:
          $ref: '#/components/schemas/Template'
        VoiceTemplate:
          $ref: '#/components/schemas/Template'
    CampaignCustomMessage:
      type: object
      additionalProperties: false
      properties:
        Data:
          type: string
    EventDimensions:
      type: object
      additionalProperties: false
      properties:
        Attributes:
          type: object
        Metrics:
          type: object
        EventType:
          $ref: '#/components/schemas/SetDimension'
    Template:
      type: object
      additionalProperties: false
      properties:
        Version:
          type: string
        Name:
          type: string
    MessageConfiguration:
      type: object
      additionalProperties: false
      properties:
        APNSMessage:
          $ref: '#/components/schemas/Message'
        BaiduMessage:
          $ref: '#/components/schemas/Message'
        DefaultMessage:
          $ref: '#/components/schemas/Message'
        InAppMessage:
          $ref: '#/components/schemas/CampaignInAppMessage'
        EmailMessage:
          $ref: '#/components/schemas/CampaignEmailMessage'
        GCMMessage:
          $ref: '#/components/schemas/Message'
        SMSMessage:
          $ref: '#/components/schemas/CampaignSmsMessage'
        CustomMessage:
          $ref: '#/components/schemas/CampaignCustomMessage'
        ADMMessage:
          $ref: '#/components/schemas/Message'
    WriteTreatmentResource:
      type: object
      additionalProperties: false
      properties:
        TreatmentDescription:
          type: string
        MessageConfiguration:
          $ref: '#/components/schemas/MessageConfiguration'
        Schedule:
          $ref: '#/components/schemas/Schedule'
        TemplateConfiguration:
          $ref: '#/components/schemas/TemplateConfiguration'
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/CustomDeliveryConfiguration'
        SizePercent:
          type: integer
        TreatmentName:
          type: string
    CampaignInAppMessage:
      type: object
      additionalProperties: false
      properties:
        CustomConfig:
          type: object
        Layout:
          type: string
        Content:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/InAppMessageContent'
    CampaignEmailMessage:
      type: object
      additionalProperties: false
      properties:
        Title:
          type: string
        FromAddress:
          type: string
        HtmlBody:
          type: string
        Body:
          type: string
    CampaignSmsMessage:
      type: object
      additionalProperties: false
      properties:
        EntityId:
          type: string
        OriginationNumber:
          type: string
        SenderId:
          type: string
        Body:
          type: string
        MessageType:
          type: string
        TemplateId:
          type: string
    Schedule:
      type: object
      additionalProperties: false
      properties:
        TimeZone:
          type: string
        QuietTime:
          $ref: '#/components/schemas/QuietTime'
        EndTime:
          type: string
        StartTime:
          type: string
        Frequency:
          type: string
        EventFilter:
          $ref: '#/components/schemas/CampaignEventFilter'
        IsLocalTime:
          type: boolean
    DefaultButtonConfiguration:
      additionalProperties: false
      properties:
        BackgroundColor:
          type: string
        BorderRadius:
          type: integer
        ButtonAction:
          $ref: '#/components/schemas/ButtonAction'
        Link:
          type: string
        Text:
          type: string
        TextColor:
          type: string
      type: object
    CustomDeliveryConfiguration:
      type: object
      additionalProperties: false
      properties:
        EndpointTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        DeliveryUri:
          type: string
    InAppMessageButton:
      type: object
      additionalProperties: false
      properties:
        IOS:
          $ref: '#/components/schemas/OverrideButtonConfiguration'
        Web:
          $ref: '#/components/schemas/OverrideButtonConfiguration'
        DefaultConfig:
          $ref: '#/components/schemas/DefaultButtonConfiguration'
        Android:
          $ref: '#/components/schemas/OverrideButtonConfiguration'
    InAppMessageHeaderConfig:
      type: object
      additionalProperties: false
      properties:
        Alignment:
          type: string
        TextColor:
          type: string
        Header:
          type: string
    OverrideButtonConfiguration:
      additionalProperties: false
      properties:
        ButtonAction:
          $ref: '#/components/schemas/ButtonAction'
        Link:
          type: string
      type: object
    Campaign:
      type: object
      properties:
        Description:
          type: string
        SegmentId:
          type: string
        Priority:
          type: integer
        TemplateConfiguration:
          $ref: '#/components/schemas/TemplateConfiguration'
        IsPaused:
          type: boolean
        AdditionalTreatments:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/WriteTreatmentResource'
        Name:
          type: string
        SegmentVersion:
          type: integer
        TreatmentDescription:
          type: string
        MessageConfiguration:
          $ref: '#/components/schemas/MessageConfiguration'
        Limits:
          $ref: '#/components/schemas/Limits'
        CampaignId:
          type: string
        HoldoutPercent:
          type: integer
        Schedule:
          $ref: '#/components/schemas/Schedule'
        CustomDeliveryConfiguration:
          $ref: '#/components/schemas/CustomDeliveryConfiguration'
        Arn:
          type: string
        ApplicationId:
          type: string
        CampaignHook:
          $ref: '#/components/schemas/CampaignHook'
        Tags:
          type: object
        TreatmentName:
          type: string
      required:
        - SegmentId
        - Schedule
        - ApplicationId
        - Name
      x-stackql-resource-name: campaign
      x-stackql-primaryIdentifier:
        - CampaignId
    EmailChannel:
      type: object
      properties:
        Id:
          type: string
        ConfigurationSet:
          type: string
        FromAddress:
          type: string
        Enabled:
          type: boolean
        ApplicationId:
          type: string
        Identity:
          type: string
        RoleArn:
          type: string
      required:
        - FromAddress
        - ApplicationId
        - Identity
      x-stackql-resource-name: email_channel
      x-stackql-primaryIdentifier:
        - Id
    EmailTemplate:
      type: object
      properties:
        HtmlPart:
          type: string
        TextPart:
          type: string
        TemplateName:
          type: string
        TemplateDescription:
          type: string
        DefaultSubstitutions:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Subject:
          type: string
        Tags:
          type: object
      required:
        - TemplateName
        - Subject
      x-stackql-resource-name: email_template
      x-stackql-primaryIdentifier:
        - Id
    EventStream:
      type: object
      properties:
        Id:
          type: string
        ApplicationId:
          type: string
        DestinationStreamArn:
          type: string
        RoleArn:
          type: string
      required:
        - ApplicationId
        - DestinationStreamArn
        - RoleArn
      x-stackql-resource-name: event_stream
      x-stackql-primaryIdentifier:
        - Id
    GCMChannel:
      type: object
      properties:
        Id:
          type: string
        ApiKey:
          type: string
        Enabled:
          type: boolean
        ApplicationId:
          type: string
      required:
        - ApplicationId
        - ApiKey
      x-stackql-resource-name: gcm_channel
      x-stackql-primaryIdentifier:
        - Id
    Alignment:
      enum:
        - LEFT
        - CENTER
        - RIGHT
      type: string
    BodyConfig:
      additionalProperties: false
      properties:
        Alignment:
          $ref: '#/components/schemas/Alignment'
        Body:
          type: string
        TextColor:
          type: string
      type: object
    ButtonAction:
      enum:
        - LINK
        - DEEP_LINK
        - CLOSE
      type: string
    ButtonConfig:
      additionalProperties: false
      properties:
        Android:
          $ref: '#/components/schemas/OverrideButtonConfiguration'
        DefaultConfig:
          $ref: '#/components/schemas/DefaultButtonConfiguration'
        IOS:
          $ref: '#/components/schemas/OverrideButtonConfiguration'
        Web:
          $ref: '#/components/schemas/OverrideButtonConfiguration'
      type: object
    HeaderConfig:
      additionalProperties: false
      properties:
        Alignment:
          $ref: '#/components/schemas/Alignment'
        Header:
          type: string
        TextColor:
          type: string
      type: object
    InAppTemplate:
      type: object
      properties:
        Arn:
          type: string
        Content:
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/InAppMessageContent'
          type: array
        CustomConfig:
          type: object
        Layout:
          enum:
            - BOTTOM_BANNER
            - TOP_BANNER
            - OVERLAYS
            - MOBILE_FEED
            - MIDDLE_BANNER
            - CAROUSEL
          type: string
        Tags:
          type: object
        TemplateDescription:
          type: string
        TemplateName:
          type: string
      required:
        - TemplateName
      x-stackql-resource-name: in_app_template
      x-stackql-primaryIdentifier:
        - TemplateName
    AndroidPushNotificationTemplate:
      type: object
      additionalProperties: false
      properties:
        Action:
          type: string
        ImageUrl:
          type: string
        SmallImageIconUrl:
          type: string
        Title:
          type: string
        ImageIconUrl:
          type: string
        Sound:
          type: string
        Body:
          type: string
        Url:
          type: string
    APNSPushNotificationTemplate:
      type: object
      additionalProperties: false
      properties:
        Action:
          type: string
        MediaUrl:
          type: string
        Title:
          type: string
        Sound:
          type: string
        Body:
          type: string
        Url:
          type: string
    DefaultPushNotificationTemplate:
      type: object
      additionalProperties: false
      properties:
        Title:
          type: string
        Action:
          type: string
        Sound:
          type: string
        Body:
          type: string
        Url:
          type: string
    PushTemplate:
      type: object
      properties:
        GCM:
          $ref: '#/components/schemas/AndroidPushNotificationTemplate'
        Baidu:
          $ref: '#/components/schemas/AndroidPushNotificationTemplate'
        TemplateName:
          type: string
        ADM:
          $ref: '#/components/schemas/AndroidPushNotificationTemplate'
        APNS:
          $ref: '#/components/schemas/APNSPushNotificationTemplate'
        TemplateDescription:
          type: string
        DefaultSubstitutions:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Default:
          $ref: '#/components/schemas/DefaultPushNotificationTemplate'
        Tags:
          type: object
      required:
        - TemplateName
      x-stackql-resource-name: push_template
      x-stackql-primaryIdentifier:
        - Id
    SegmentDimensions:
      type: object
      additionalProperties: false
      properties:
        Demographic:
          $ref: '#/components/schemas/Demographic'
        Metrics:
          type: object
        Attributes:
          type: object
        Behavior:
          $ref: '#/components/schemas/Behavior'
        UserAttributes:
          type: object
        Location:
          $ref: '#/components/schemas/Location'
    SegmentGroups:
      type: object
      additionalProperties: false
      properties:
        Groups:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Groups'
        Include:
          type: string
    Demographic:
      type: object
      additionalProperties: false
      properties:
        AppVersion:
          $ref: '#/components/schemas/SetDimension'
        DeviceType:
          $ref: '#/components/schemas/SetDimension'
        Platform:
          $ref: '#/components/schemas/SetDimension'
        Channel:
          $ref: '#/components/schemas/SetDimension'
        Model:
          $ref: '#/components/schemas/SetDimension'
        Make:
          $ref: '#/components/schemas/SetDimension'
    Groups:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        SourceType:
          type: string
        Dimensions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SegmentDimensions'
        SourceSegments:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SourceSegments'
    Location:
      type: object
      additionalProperties: false
      properties:
        GPSPoint:
          $ref: '#/components/schemas/GPSPoint'
        Country:
          $ref: '#/components/schemas/SetDimension'
    Behavior:
      type: object
      additionalProperties: false
      properties:
        Recency:
          $ref: '#/components/schemas/Recency'
    SourceSegments:
      type: object
      additionalProperties: false
      properties:
        Version:
          type: integer
        Id:
          type: string
      required:
        - Id
    GPSPoint:
      type: object
      additionalProperties: false
      properties:
        RangeInKilometers:
          type: number
        Coordinates:
          $ref: '#/components/schemas/Coordinates'
      required:
        - RangeInKilometers
        - Coordinates
    Recency:
      type: object
      additionalProperties: false
      properties:
        Duration:
          type: string
        RecencyType:
          type: string
      required:
        - Duration
        - RecencyType
    Coordinates:
      type: object
      additionalProperties: false
      properties:
        Latitude:
          type: number
        Longitude:
          type: number
      required:
        - Longitude
        - Latitude
    Segment:
      type: object
      properties:
        SegmentId:
          type: string
        Arn:
          type: string
        SegmentGroups:
          $ref: '#/components/schemas/SegmentGroups'
        Dimensions:
          $ref: '#/components/schemas/SegmentDimensions'
        ApplicationId:
          type: string
        Tags:
          type: object
        Name:
          type: string
      required:
        - ApplicationId
        - Name
      x-stackql-resource-name: segment
      x-stackql-primaryIdentifier:
        - SegmentId
    SMSChannel:
      type: object
      properties:
        Id:
          type: string
        ShortCode:
          type: string
        Enabled:
          type: boolean
        ApplicationId:
          type: string
        SenderId:
          type: string
      required:
        - ApplicationId
      x-stackql-resource-name: sms_channel
      x-stackql-primaryIdentifier:
        - Id
    SmsTemplate:
      type: object
      properties:
        TemplateName:
          type: string
        TemplateDescription:
          type: string
        DefaultSubstitutions:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Body:
          type: string
        Tags:
          type: object
      required:
        - TemplateName
        - Body
      x-stackql-resource-name: sms_template
      x-stackql-primaryIdentifier:
        - Id
    VoiceChannel:
      type: object
      properties:
        Id:
          type: string
        Enabled:
          type: boolean
        ApplicationId:
          type: string
      required:
        - ApplicationId
      x-stackql-resource-name: voice_channel
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    adm_channels:
      name: adm_channels
      id: aws.pinpoint.adm_channels
      x-cfn-schema-name: ADMChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::ADMChannel'
    adm_channel:
      name: adm_channel
      id: aws.pinpoint.adm_channel
      x-cfn-schema-name: ADMChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ClientSecret') as client_secret,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.ClientId') as client_id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::ADMChannel'
    apns_channels:
      name: apns_channels
      id: aws.pinpoint.apns_channels
      x-cfn-schema-name: APNSChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::APNSChannel'
    apns_channel:
      name: apns_channel
      id: aws.pinpoint.apns_channel
      x-cfn-schema-name: APNSChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.BundleId') as bundle_id,
              JSON_EXTRACT(Properties, '$.PrivateKey') as private_key,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.DefaultAuthenticationMethod') as default_authentication_method,
              JSON_EXTRACT(Properties, '$.TokenKey') as token_key,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate,
              JSON_EXTRACT(Properties, '$.TokenKeyId') as token_key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::APNSChannel'
    apns_sandbox_channels:
      name: apns_sandbox_channels
      id: aws.pinpoint.apns_sandbox_channels
      x-cfn-schema-name: APNSSandboxChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::APNSSandboxChannel'
    apns_sandbox_channel:
      name: apns_sandbox_channel
      id: aws.pinpoint.apns_sandbox_channel
      x-cfn-schema-name: APNSSandboxChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.BundleId') as bundle_id,
              JSON_EXTRACT(Properties, '$.PrivateKey') as private_key,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.DefaultAuthenticationMethod') as default_authentication_method,
              JSON_EXTRACT(Properties, '$.TokenKey') as token_key,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate,
              JSON_EXTRACT(Properties, '$.TokenKeyId') as token_key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::APNSSandboxChannel'
    apns_voip_channels:
      name: apns_voip_channels
      id: aws.pinpoint.apns_voip_channels
      x-cfn-schema-name: APNSVoipChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::APNSVoipChannel'
    apns_voip_channel:
      name: apns_voip_channel
      id: aws.pinpoint.apns_voip_channel
      x-cfn-schema-name: APNSVoipChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.BundleId') as bundle_id,
              JSON_EXTRACT(Properties, '$.PrivateKey') as private_key,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.DefaultAuthenticationMethod') as default_authentication_method,
              JSON_EXTRACT(Properties, '$.TokenKey') as token_key,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate,
              JSON_EXTRACT(Properties, '$.TokenKeyId') as token_key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::APNSVoipChannel'
    apns_voip_sandbox_channels:
      name: apns_voip_sandbox_channels
      id: aws.pinpoint.apns_voip_sandbox_channels
      x-cfn-schema-name: APNSVoipSandboxChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::APNSVoipSandboxChannel'
    apns_voip_sandbox_channel:
      name: apns_voip_sandbox_channel
      id: aws.pinpoint.apns_voip_sandbox_channel
      x-cfn-schema-name: APNSVoipSandboxChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.BundleId') as bundle_id,
              JSON_EXTRACT(Properties, '$.PrivateKey') as private_key,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.DefaultAuthenticationMethod') as default_authentication_method,
              JSON_EXTRACT(Properties, '$.TokenKey') as token_key,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.TeamId') as team_id,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate,
              JSON_EXTRACT(Properties, '$.TokenKeyId') as token_key_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::APNSVoipSandboxChannel'
    apps:
      name: apps
      id: aws.pinpoint.apps
      x-cfn-schema-name: App
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::App'
    app:
      name: app
      id: aws.pinpoint.app
      x-cfn-schema-name: App
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::App'
    application_settings:
      name: application_settings
      id: aws.pinpoint.application_settings
      x-cfn-schema-name: ApplicationSettings
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.QuietTime.Start') as quiet_time_start,
              JSON_EXTRACT(Properties, '$.QuietTime.End') as quiet_time_end,
              JSON_EXTRACT(Properties, '$.Limits.MessagesPerSecond') as limits_messages_per_second,
              JSON_EXTRACT(Properties, '$.Limits.Daily') as limits_daily,
              JSON_EXTRACT(Properties, '$.Limits.MaximumDuration') as limits_maximum_duration,
              JSON_EXTRACT(Properties, '$.Limits.Total') as limits_total,
              JSON_EXTRACT(Properties, '$.Limits.Session') as limits_session,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.CampaignHook.WebUrl') as campaign_hook_web_url,
              JSON_EXTRACT(Properties, '$.CampaignHook.LambdaFunctionName') as campaign_hook_lambda_function_name,
              JSON_EXTRACT(Properties, '$.CampaignHook.Mode') as campaign_hook_mode,
              JSON_EXTRACT(Properties, '$.CloudWatchMetricsEnabled') as cloud_watch_metrics_enabled
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::ApplicationSettings'
    baidu_channels:
      name: baidu_channels
      id: aws.pinpoint.baidu_channels
      x-cfn-schema-name: BaiduChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::BaiduChannel'
    baidu_channel:
      name: baidu_channel
      id: aws.pinpoint.baidu_channel
      x-cfn-schema-name: BaiduChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SecretKey') as secret_key,
              JSON_EXTRACT(Properties, '$.ApiKey') as api_key,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::BaiduChannel'
    campaigns:
      name: campaigns
      id: aws.pinpoint.campaigns
      x-cfn-schema-name: Campaign
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CampaignId') as campaign_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::Campaign'
    campaign:
      name: campaign
      id: aws.pinpoint.campaign
      x-cfn-schema-name: Campaign
      x-type: get
      x-identifiers:
        - CampaignId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SegmentId') as segment_id,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.TemplateConfiguration.SMSTemplate') as template_configuration_sm_stemplate,
              JSON_EXTRACT(Properties, '$.TemplateConfiguration.EmailTemplate') as template_configuration_email_template,
              JSON_EXTRACT(Properties, '$.TemplateConfiguration.PushTemplate') as template_configuration_push_template,
              JSON_EXTRACT(Properties, '$.TemplateConfiguration.VoiceTemplate') as template_configuration_voice_template,
              JSON_EXTRACT(Properties, '$.IsPaused') as is_paused,
              JSON_EXTRACT(Properties, '$.AdditionalTreatments') as additional_treatments,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SegmentVersion') as segment_version,
              JSON_EXTRACT(Properties, '$.TreatmentDescription') as treatment_description,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.APNSMessage') as message_configuration_ap_ns_message,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.BaiduMessage') as message_configuration_baidu_message,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.DefaultMessage') as message_configuration_default_message,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.InAppMessage') as message_configuration_in_app_message,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.EmailMessage') as message_configuration_email_message,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.GCMMessage') as message_configuration_gc_mmessage,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.SMSMessage') as message_configuration_sm_smessage,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.CustomMessage') as message_configuration_custom_message,
              JSON_EXTRACT(Properties, '$.MessageConfiguration.ADMMessage') as message_configuration_ad_mmessage,
              JSON_EXTRACT(Properties, '$.Limits.MessagesPerSecond') as limits_messages_per_second,
              JSON_EXTRACT(Properties, '$.Limits.Daily') as limits_daily,
              JSON_EXTRACT(Properties, '$.Limits.MaximumDuration') as limits_maximum_duration,
              JSON_EXTRACT(Properties, '$.Limits.Total') as limits_total,
              JSON_EXTRACT(Properties, '$.Limits.Session') as limits_session,
              JSON_EXTRACT(Properties, '$.CampaignId') as campaign_id,
              JSON_EXTRACT(Properties, '$.HoldoutPercent') as holdout_percent,
              JSON_EXTRACT(Properties, '$.Schedule.TimeZone') as schedule_time_zone,
              JSON_EXTRACT(Properties, '$.Schedule.QuietTime') as schedule_quiet_time,
              JSON_EXTRACT(Properties, '$.Schedule.EndTime') as schedule_end_time,
              JSON_EXTRACT(Properties, '$.Schedule.StartTime') as schedule_start_time,
              JSON_EXTRACT(Properties, '$.Schedule.Frequency') as schedule_frequency,
              JSON_EXTRACT(Properties, '$.Schedule.EventFilter') as schedule_event_filter,
              JSON_EXTRACT(Properties, '$.Schedule.IsLocalTime') as schedule_is_local_time,
              JSON_EXTRACT(Properties, '$.CustomDeliveryConfiguration.EndpointTypes') as custom_delivery_configuration_endpoint_types,
              JSON_EXTRACT(Properties, '$.CustomDeliveryConfiguration.DeliveryUri') as custom_delivery_configuration_delivery_uri,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.CampaignHook.WebUrl') as campaign_hook_web_url,
              JSON_EXTRACT(Properties, '$.CampaignHook.LambdaFunctionName') as campaign_hook_lambda_function_name,
              JSON_EXTRACT(Properties, '$.CampaignHook.Mode') as campaign_hook_mode,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TreatmentName') as treatment_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::Campaign'
    email_channels:
      name: email_channels
      id: aws.pinpoint.email_channels
      x-cfn-schema-name: EmailChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::EmailChannel'
    email_channel:
      name: email_channel
      id: aws.pinpoint.email_channel
      x-cfn-schema-name: EmailChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ConfigurationSet') as configuration_set,
              JSON_EXTRACT(Properties, '$.FromAddress') as from_address,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Identity') as identity,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::EmailChannel'
    email_templates:
      name: email_templates
      id: aws.pinpoint.email_templates
      x-cfn-schema-name: EmailTemplate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::EmailTemplate'
    email_template:
      name: email_template
      id: aws.pinpoint.email_template
      x-cfn-schema-name: EmailTemplate
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.HtmlPart') as html_part,
              JSON_EXTRACT(Properties, '$.TextPart') as text_part,
              JSON_EXTRACT(Properties, '$.TemplateName') as template_name,
              JSON_EXTRACT(Properties, '$.TemplateDescription') as template_description,
              JSON_EXTRACT(Properties, '$.DefaultSubstitutions') as default_substitutions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Subject') as subject,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::EmailTemplate'
    event_streams:
      name: event_streams
      id: aws.pinpoint.event_streams
      x-cfn-schema-name: EventStream
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::EventStream'
    event_stream:
      name: event_stream
      id: aws.pinpoint.event_stream
      x-cfn-schema-name: EventStream
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.DestinationStreamArn') as destination_stream_arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::EventStream'
    gcm_channels:
      name: gcm_channels
      id: aws.pinpoint.gcm_channels
      x-cfn-schema-name: GCMChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::GCMChannel'
    gcm_channel:
      name: gcm_channel
      id: aws.pinpoint.gcm_channel
      x-cfn-schema-name: GCMChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ApiKey') as api_key,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::GCMChannel'
    in_app_templates:
      name: in_app_templates
      id: aws.pinpoint.in_app_templates
      x-cfn-schema-name: InAppTemplate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TemplateName') as template_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::InAppTemplate'
    in_app_template:
      name: in_app_template
      id: aws.pinpoint.in_app_template
      x-cfn-schema-name: InAppTemplate
      x-type: get
      x-identifiers:
        - TemplateName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Content') as content,
              JSON_EXTRACT(Properties, '$.CustomConfig') as custom_config,
              JSON_EXTRACT(Properties, '$.Layout') as layout,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TemplateDescription') as template_description,
              JSON_EXTRACT(Properties, '$.TemplateName') as template_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::InAppTemplate'
    push_templates:
      name: push_templates
      id: aws.pinpoint.push_templates
      x-cfn-schema-name: PushTemplate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::PushTemplate'
    push_template:
      name: push_template
      id: aws.pinpoint.push_template
      x-cfn-schema-name: PushTemplate
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GCM.Action') as g_cm_action,
              JSON_EXTRACT(Properties, '$.GCM.ImageUrl') as g_cm_image_url,
              JSON_EXTRACT(Properties, '$.GCM.SmallImageIconUrl') as g_cm_small_image_icon_url,
              JSON_EXTRACT(Properties, '$.GCM.Title') as g_cm_title,
              JSON_EXTRACT(Properties, '$.GCM.ImageIconUrl') as g_cm_image_icon_url,
              JSON_EXTRACT(Properties, '$.GCM.Sound') as g_cm_sound,
              JSON_EXTRACT(Properties, '$.GCM.Body') as g_cm_body,
              JSON_EXTRACT(Properties, '$.GCM.Url') as g_cm_url,
              JSON_EXTRACT(Properties, '$.Baidu.Action') as baidu_action,
              JSON_EXTRACT(Properties, '$.Baidu.ImageUrl') as baidu_image_url,
              JSON_EXTRACT(Properties, '$.Baidu.SmallImageIconUrl') as baidu_small_image_icon_url,
              JSON_EXTRACT(Properties, '$.Baidu.Title') as baidu_title,
              JSON_EXTRACT(Properties, '$.Baidu.ImageIconUrl') as baidu_image_icon_url,
              JSON_EXTRACT(Properties, '$.Baidu.Sound') as baidu_sound,
              JSON_EXTRACT(Properties, '$.Baidu.Body') as baidu_body,
              JSON_EXTRACT(Properties, '$.Baidu.Url') as baidu_url,
              JSON_EXTRACT(Properties, '$.TemplateName') as template_name,
              JSON_EXTRACT(Properties, '$.ADM.Action') as a_dm_action,
              JSON_EXTRACT(Properties, '$.ADM.ImageUrl') as a_dm_image_url,
              JSON_EXTRACT(Properties, '$.ADM.SmallImageIconUrl') as a_dm_small_image_icon_url,
              JSON_EXTRACT(Properties, '$.ADM.Title') as a_dm_title,
              JSON_EXTRACT(Properties, '$.ADM.ImageIconUrl') as a_dm_image_icon_url,
              JSON_EXTRACT(Properties, '$.ADM.Sound') as a_dm_sound,
              JSON_EXTRACT(Properties, '$.ADM.Body') as a_dm_body,
              JSON_EXTRACT(Properties, '$.ADM.Url') as a_dm_url,
              JSON_EXTRACT(Properties, '$.APNS.Action') as a_pn_saction,
              JSON_EXTRACT(Properties, '$.APNS.MediaUrl') as a_pn_smedia_url,
              JSON_EXTRACT(Properties, '$.APNS.Title') as a_pn_stitle,
              JSON_EXTRACT(Properties, '$.APNS.Sound') as a_pn_ssound,
              JSON_EXTRACT(Properties, '$.APNS.Body') as a_pn_sbody,
              JSON_EXTRACT(Properties, '$.APNS.Url') as a_pn_surl,
              JSON_EXTRACT(Properties, '$.TemplateDescription') as template_description,
              JSON_EXTRACT(Properties, '$.DefaultSubstitutions') as default_substitutions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Default.Title') as default_title,
              JSON_EXTRACT(Properties, '$.Default.Action') as default_action,
              JSON_EXTRACT(Properties, '$.Default.Sound') as default_sound,
              JSON_EXTRACT(Properties, '$.Default.Body') as default_body,
              JSON_EXTRACT(Properties, '$.Default.Url') as default_url,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::PushTemplate'
    segments:
      name: segments
      id: aws.pinpoint.segments
      x-cfn-schema-name: Segment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SegmentId') as segment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::Segment'
    segment:
      name: segment
      id: aws.pinpoint.segment
      x-cfn-schema-name: Segment
      x-type: get
      x-identifiers:
        - SegmentId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SegmentId') as segment_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.SegmentGroups.Groups') as segment_groups_groups,
              JSON_EXTRACT(Properties, '$.SegmentGroups.Include') as segment_groups_include,
              JSON_EXTRACT(Properties, '$.Dimensions.Demographic') as dimensions_demographic,
              JSON_EXTRACT(Properties, '$.Dimensions.Metrics') as dimensions_metrics,
              JSON_EXTRACT(Properties, '$.Dimensions.Attributes') as dimensions_attributes,
              JSON_EXTRACT(Properties, '$.Dimensions.Behavior') as dimensions_behavior,
              JSON_EXTRACT(Properties, '$.Dimensions.UserAttributes') as dimensions_user_attributes,
              JSON_EXTRACT(Properties, '$.Dimensions.Location') as dimensions_location,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::Segment'
    sms_channels:
      name: sms_channels
      id: aws.pinpoint.sms_channels
      x-cfn-schema-name: SMSChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::SMSChannel'
    sms_channel:
      name: sms_channel
      id: aws.pinpoint.sms_channel
      x-cfn-schema-name: SMSChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ShortCode') as short_code,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.SenderId') as sender_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::SMSChannel'
    sms_templates:
      name: sms_templates
      id: aws.pinpoint.sms_templates
      x-cfn-schema-name: SmsTemplate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::SmsTemplate'
    sms_template:
      name: sms_template
      id: aws.pinpoint.sms_template
      x-cfn-schema-name: SmsTemplate
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TemplateName') as template_name,
              JSON_EXTRACT(Properties, '$.TemplateDescription') as template_description,
              JSON_EXTRACT(Properties, '$.DefaultSubstitutions') as default_substitutions,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Body') as body,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::SmsTemplate'
    voice_channels:
      name: voice_channels
      id: aws.pinpoint.voice_channels
      x-cfn-schema-name: VoiceChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Pinpoint::VoiceChannel'
    voice_channel:
      name: voice_channel
      id: aws.pinpoint.voice_channel
      x-cfn-schema-name: VoiceChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Pinpoint::VoiceChannel'
