openapi: 3.0.0
info:
  title: DevOpsGuru
  version: 1.0.0
paths: {}
components:
  schemas:
    AccountId:
      description: User account id, used as the primary identifier for the resource
      type: string
      pattern: ^\d{12}$
    LogAnomalyDetectionIntegration:
      type: object
      properties:
        AccountId:
          $ref: '#/components/schemas/AccountId'
      x-stackql-resource-name: log_anomaly_detection_integration
      x-stackql-primaryIdentifier:
        - AccountId
    NotificationChannelConfig:
      description: Information about notification channels you have configured with DevOps Guru.
      type: object
      properties:
        Sns:
          $ref: '#/components/schemas/SnsChannelConfig'
        Filters:
          $ref: '#/components/schemas/NotificationFilterConfig'
      additionalProperties: false
    SnsChannelConfig:
      description: Information about a notification channel configured in DevOps Guru to send notifications when insights are created.
      type: object
      properties:
        TopicArn:
          type: string
          minLength: 36
          maxLength: 1024
          pattern: ^arn:aws[a-z0-9-]*:sns:[a-z0-9-]+:\d{12}:[^:]+$
      additionalProperties: false
    NotificationFilterConfig:
      description: Information about filters of a notification channel configured in DevOpsGuru to filter for insights.
      type: object
      properties:
        Severities:
          $ref: '#/components/schemas/InsightSeveritiesFilterList'
        MessageTypes:
          $ref: '#/components/schemas/NotificationMessageTypesFilterList'
      additionalProperties: false
    InsightSeverity:
      description: DevOps Guru Insight Severity Enum
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
    NotificationMessageType:
      description: DevOps Guru NotificationMessageType Enum
      type: string
      enum:
        - NEW_INSIGHT
        - CLOSED_INSIGHT
        - NEW_ASSOCIATION
        - SEVERITY_UPGRADED
        - NEW_RECOMMENDATION
    InsightSeveritiesFilterList:
      description: DevOps Guru insight severities to filter for
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/InsightSeverity'
      maxItems: 3
      minItems: 1
    NotificationMessageTypesFilterList:
      description: DevOps Guru message types to filter for
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/NotificationMessageType'
      maxItems: 5
      minItems: 1
    NotificationChannel:
      type: object
      properties:
        Config:
          $ref: '#/components/schemas/NotificationChannelConfig'
        Id:
          description: The ID of a notification channel.
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$
      required:
        - Config
      x-stackql-resource-name: notification_channel
      x-stackql-primaryIdentifier:
        - Id
    ResourceCollectionFilter:
      description: Information about a filter used to specify which AWS resources are analyzed for anomalous behavior by DevOps Guru.
      type: object
      properties:
        CloudFormation:
          $ref: '#/components/schemas/CloudFormationCollectionFilter'
        Tags:
          $ref: '#/components/schemas/TagCollections'
      additionalProperties: false
    CloudFormationCollectionFilter:
      description: CloudFormation resource for DevOps Guru to monitor
      type: object
      properties:
        StackNames:
          description: An array of CloudFormation stack names.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 128
            pattern: ^[a-zA-Z*]+[a-zA-Z0-9-]*$
          minItems: 1
          maxItems: 1000
          x-insertionOrder: false
      additionalProperties: false
    TagCollections:
      description: Tagged resources for DevOps Guru to monitor
      type: array
      items:
        $ref: '#/components/schemas/TagCollection'
      x-insertionOrder: false
    TagCollection:
      description: Tagged resource for DevOps Guru to monitor
      type: object
      properties:
        AppBoundaryKey:
          description: A Tag key for DevOps Guru app boundary.
          type: string
          minLength: 1
          maxLength: 128
        TagValues:
          description: Tag values of DevOps Guru app boundary.
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 256
          minItems: 1
          maxItems: 1000
          x-insertionOrder: false
      additionalProperties: false
    ResourceCollection:
      type: object
      properties:
        ResourceCollectionFilter:
          $ref: '#/components/schemas/ResourceCollectionFilter'
        ResourceCollectionType:
          description: The type of ResourceCollection
          type: string
          enum:
            - AWS_CLOUD_FORMATION
            - AWS_TAGS
      required:
        - ResourceCollectionFilter
      x-stackql-resource-name: resource_collection
      x-stackql-primaryIdentifier:
        - ResourceCollectionType
  x-stackQL-resources:
    log_anomaly_detection_integrations:
      name: log_anomaly_detection_integrations
      id: aws.devopsguru.log_anomaly_detection_integrations
      x-cfn-schema-name: LogAnomalyDetectionIntegration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DevOpsGuru::LogAnomalyDetectionIntegration'
    log_anomaly_detection_integration:
      name: log_anomaly_detection_integration
      id: aws.devopsguru.log_anomaly_detection_integration
      x-cfn-schema-name: LogAnomalyDetectionIntegration
      x-type: get
      x-identifiers:
        - AccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DevOpsGuru::LogAnomalyDetectionIntegration'
    notification_channels:
      name: notification_channels
      id: aws.devopsguru.notification_channels
      x-cfn-schema-name: NotificationChannel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DevOpsGuru::NotificationChannel'
    notification_channel:
      name: notification_channel
      id: aws.devopsguru.notification_channel
      x-cfn-schema-name: NotificationChannel
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Config.Sns') as config_sns,
              JSON_EXTRACT(Properties, '$.Config.Filters') as config_filters,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DevOpsGuru::NotificationChannel'
    resource_collections:
      name: resource_collections
      id: aws.devopsguru.resource_collections
      x-cfn-schema-name: ResourceCollection
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceCollectionType') as resource_collection_type
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DevOpsGuru::ResourceCollection'
    resource_collection:
      name: resource_collection
      id: aws.devopsguru.resource_collection
      x-cfn-schema-name: ResourceCollection
      x-type: get
      x-identifiers:
        - ResourceCollectionType
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceCollectionFilter.CloudFormation') as resource_collection_filter_cloud_formation,
              JSON_EXTRACT(Properties, '$.ResourceCollectionFilter.Tags') as resource_collection_filter_tags,
              JSON_EXTRACT(Properties, '$.ResourceCollectionType') as resource_collection_type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DevOpsGuru::ResourceCollection'
