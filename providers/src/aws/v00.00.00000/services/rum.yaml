openapi: 3.0.0
info:
  title: RUM
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AppMonitorConfiguration:
      description: AppMonitor configuration
      type: object
      additionalProperties: false
      properties:
        IdentityPoolId:
          description: The ID of the identity pool that is used to authorize the sending of data to RUM.
          minLength: 1
          maxLength: 55
          pattern: '[\w-]+:[0-9a-f-]+'
          type: string
        ExcludedPages:
          description: A list of URLs in your website or application to exclude from RUM data collection. You can't include both ExcludedPages and IncludedPages in the same operation.
          $ref: '#/components/schemas/Pages'
        IncludedPages:
          description: If this app monitor is to collect data from only certain pages in your application, this structure lists those pages. You can't include both ExcludedPages and IncludedPages in the same operation.
          $ref: '#/components/schemas/Pages'
        FavoritePages:
          description: A list of pages in the RUM console that are to be displayed with a favorite icon.
          $ref: '#/components/schemas/FavoritePages'
        SessionSampleRate:
          description: Specifies the percentage of user sessions to use for RUM data collection. Choosing a higher percentage gives you more data but also incurs more costs. The number you specify is the percentage of user sessions that will be used. If you omit this parameter, the default of 10 is used.
          type: number
          minimum: 0
          maximum: 1
        GuestRoleArn:
          description: The ARN of the guest IAM role that is attached to the identity pool that is used to authorize the sending of data to RUM.
          $ref: '#/components/schemas/Arn'
        AllowCookies:
          description: If you set this to true, the RUM web client sets two cookies, a session cookie and a user cookie. The cookies allow the RUM web client to collect data relating to the number of users an application has and the behavior of the application across a sequence of events. Cookies are stored in the top-level domain of the current page.
          type: boolean
        Telemetries:
          description: An array that lists the types of telemetry data that this app monitor is to collect.
          type: array
          items:
            $ref: '#/components/schemas/Telemetry'
          x-insertionOrder: false
        EnableXRay:
          description: If you set this to true, RUM enables xray tracing for the user sessions that RUM samples. RUM adds an xray trace header to allowed HTTP requests. It also records an xray segment for allowed HTTP requests. You can see traces and segments from these user sessions in the xray console and the CW ServiceLens console.
          type: boolean
        MetricDestinations:
          description: An array of structures which define the destinations and the metrics that you want to send.
          type: array
          minItems: 0
          maxItems: 20
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MetricDestination'
    TagDef:
      description: Assigns one or more tags (key-value pairs) to the app monitor. Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values. Tags don't have any semantic meaning to AWS and are interpreted strictly as strings of characters.You can associate as many as 50 tags with an app monitor.
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/Tag'
    Tag:
      description: A key-value pair to associate with a resource.
      additionalProperties: false
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
      required:
        - Value
        - Key
    Pages:
      type: array
      description: List of url pages
      minItems: 0
      maxItems: 50
      items:
        $ref: '#/components/schemas/Url'
      x-insertionOrder: false
    FavoritePages:
      type: array
      description: List of favorite pages
      minItems: 0
      maxItems: 50
      items:
        type: string
      x-insertionOrder: false
    Url:
      description: Page Url
      type: string
      pattern: https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)
      minLength: 1
      maxLength: 1260
    Arn:
      description: Resource ARN
      type: string
      pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:.*
    Telemetry:
      type: string
      enum:
        - errors
        - performance
        - http
    MetricDestination:
      description: An structure which defines the destination and the metrics that you want to send.
      additionalProperties: false
      type: object
      properties:
        Destination:
          description: Defines the destination to send the metrics to. Valid values are CloudWatch and Evidently. If you specify Evidently, you must also specify the ARN of the Evidently experiment that is to be the destination and an IAM role that has permission to write to the experiment.
          type: string
          enum:
            - CloudWatch
            - Evidently
        DestinationArn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:.*
          description: Use this parameter only if Destination is Evidently. This parameter specifies the ARN of the Evidently experiment that will receive the extended metrics.
        IamRoleArn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:.*
          description: |-
            This parameter is required if Destination is Evidently. If Destination is CloudWatch, do not use this parameter.

            This parameter specifies the ARN of an IAM role that RUM will assume to write to the Evidently experiment that you are sending metrics to. This role must have permission to write to that experiment.
        MetricDefinitions:
          description: An array of structures which define the metrics that you want to send.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 0
          maxItems: 2000
          items:
            $ref: '#/components/schemas/MetricDefinition'
      required:
        - Destination
    MetricDefinition:
      description: A single metric definition
      additionalProperties: false
      type: object
      properties:
        Name:
          description: |-
            The name for the metric that is defined in this structure. For extended metrics, valid values are the following:

            PerformanceNavigationDuration

            PerformanceResourceDuration

            NavigationSatisfiedTransaction

            NavigationToleratedTransaction

            NavigationFrustratedTransaction

            WebVitalsCumulativeLayoutShift

            WebVitalsFirstInputDelay

            WebVitalsLargestContentfulPaint

            JsErrorCount

            HttpErrorCount

            SessionCount
          type: string
          minLength: 1
          maxLength: 255
        Namespace:
          description: The namespace used by CloudWatch Metrics for the metric that is defined in this structure
          type: string
          pattern: '[a-zA-Z0-9-._/#:]+$'
          minLength: 1
          maxLength: 237
        ValueKey:
          description: |-
            The field within the event object that the metric value is sourced from.

            If you omit this field, a hardcoded value of 1 is pushed as the metric value. This is useful if you just want to count the number of events that the filter catches.

            If this metric is sent to Evidently, this field will be passed to Evidently raw and Evidently will handle data extraction from the event.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        UnitLabel:
          description: The CloudWatch metric unit to use for this metric. If you omit this field, the metric is recorded with no unit.
          type: string
          minLength: 1
          maxLength: 256
        DimensionKeys:
          description: |-
            Use this field only if you are sending the metric to CloudWatch.

            This field is a map of field paths to dimension names. It defines the dimensions to associate with this metric in CloudWatch. For extended metrics, valid values for the entries in this field are the following:

            "metadata.pageId": "PageId"

            "metadata.browserName": "BrowserName"

            "metadata.deviceType": "DeviceType"

            "metadata.osName": "OSName"

            "metadata.countryCode": "CountryCode"

            "event_details.fileType": "FileType"

            All dimensions listed in this field must also be included in EventPattern.
          type: object
          x-patternProperties:
            ^(?!:).*[^\s].*:
              type: string
              pattern: .*[^\s].*
              minLength: 1
              maxLength: 255
          additionalProperties: false
        EventPattern:
          description: |-
            The pattern that defines the metric, specified as a JSON object. RUM checks events that happen in a user's session against the pattern, and events that match the pattern are sent to the metric destination.

            When you define extended metrics, the metric definition is not valid if EventPattern is omitted.

            Example event patterns:

            '{ "event_type": ["com.amazon.rum.js_error_event"], "metadata": { "browserName": [ "Chrome", "Safari" ], } }'

            '{ "event_type": ["com.amazon.rum.performance_navigation_event"], "metadata": { "browserName": [ "Chrome", "Firefox" ] }, "event_details": { "duration": [{ "numeric": [ "<", 2000 ] }] } }'

            '{ "event_type": ["com.amazon.rum.performance_navigation_event"], "metadata": { "browserName": [ "Chrome", "Safari" ], "countryCode": [ "US" ] }, "event_details": { "duration": [{ "numeric": [ ">=", 2000, "<", 8000 ] }] } }'

            If the metrics destination' is CloudWatch and the event also matches a value in DimensionKeys, then the metric is published with the specified dimensions.
          type: string
          minLength: 1
          maxLength: 4000
      required:
        - Name
    CustomEventsStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    CustomEvents:
      description: AppMonitor custom events configuration
      type: object
      additionalProperties: false
      properties:
        Status:
          description: Indicates whether AppMonitor accepts custom events.
          $ref: '#/components/schemas/CustomEventsStatus'
    AppMonitor:
      type: object
      properties:
        Id:
          description: The unique ID of the new app monitor.
          type: string
          pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
          minLength: 36
          maxLength: 36
        Name:
          description: A name for the app monitor
          type: string
          pattern: '[\.\-_/#A-Za-z0-9]+'
          minLength: 1
          maxLength: 255
        Domain:
          description: The top-level internet domain name for which your application has administrative authority.
          type: string
          pattern: ^(localhost)|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?![-.])([A-Za-z0-9-\.\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))|^(\*\.)(?![-.])([A-Za-z0-9-\.\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))
          minLength: 1
          maxLength: 253
        CwLogEnabled:
          description: Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether RUM sends a copy of this telemetry data to CWLlong in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur CWLlong charges. If you omit this parameter, the default is false
          type: boolean
        Tags:
          $ref: '#/components/schemas/TagDef'
        AppMonitorConfiguration:
          $ref: '#/components/schemas/AppMonitorConfiguration'
        CustomEvents:
          $ref: '#/components/schemas/CustomEvents'
      required:
        - Name
        - Domain
      x-stackql-resource-name: app_monitor
      description: Resource Type definition for AWS::RUM::AppMonitor
      x-type-name: AWS::RUM::AppMonitor
      x-stackql-primary-identifier:
        - Name
      x-stackql-additional-identifiers:
        - - Id
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
      x-required-properties:
        - Name
        - Domain
      x-tagging:
        taggable: true
      x-required-permissions:
        create:
          - rum:GetAppMonitor
          - rum:CreateAppMonitor
          - dynamodb:GetItem
          - dynamodb:PutItem
          - s3:GetObject
          - s3:PutObject
          - s3:GetObjectAcl
          - s3:DoesObjectExist
          - logs:CreateLogDelivery
          - logs:CreateLogGroup
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - logs:PutRetentionPolicy
          - rum:TagResource
          - rum:ListTagsForResource
          - cognito-identity:DescribeIdentityPool
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - rum:PutRumMetricsDestination
          - rum:BatchCreateRumMetricDefinitions
          - rum:ListRumMetricsDestinations
          - rum:BatchGetRumMetricDefinitions
        read:
          - rum:GetAppMonitor
          - dynamodb:GetItem
          - s3:GetObject
          - s3:DoesObjectExist
          - s3:GetObjectAcl
          - rum:ListTagsForResource
          - rum:ListRumMetricsDestinations
          - rum:BatchGetRumMetricDefinitions
        update:
          - rum:GetAppMonitor
          - rum:UpdateAppMonitor
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:Query
          - s3:GetObject
          - s3:PutObject
          - s3:GetObjectAcl
          - s3:DoesObjectExist
          - logs:CreateLogDelivery
          - logs:CreateLogGroup
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - logs:PutRetentionPolicy
          - rum:TagResource
          - rum:UntagResource
          - rum:ListTagsForResource
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - iam:PassRole
          - rum:PutRumMetricsDestination
          - rum:DeleteRumMetricsDestination
          - rum:ListRumMetricsDestinations
          - rum:BatchCreateRumMetricDefinitions
          - rum:BatchDeleteRumMetricDefinitions
          - rum:BatchGetRumMetricDefinitions
          - rum:UpdateRumMetricDefinition
        delete:
          - rum:GetAppMonitor
          - rum:DeleteAppMonitor
          - dynamodb:DeleteItem
          - dynamodb:Query
          - logs:DeleteLogDelivery
          - s3:DeleteObject
          - s3:DoesObjectExist
          - rum:UntagResource
          - rum:ListTagsForResource
          - rum:DeleteRumMetricsDestination
          - rum:BatchDeleteRumMetricDefinitions
          - rum:ListRumMetricsDestinations
          - rum:BatchGetRumMetricDefinitions
        list:
          - rum:ListAppMonitors
          - dynamodb:DescribeTable
          - rum:GetAppMonitor
          - dynamodb:GetItem
          - dynamodb:BatchGetItem
          - dynamodb:Query
          - s3:GetObject
          - s3:DoesObjectExist
          - s3:GetObjectAcl
          - logs:DescribeLogGroups
          - rum:ListTagsForResource
    CreateAppMonitorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              description: The unique ID of the new app monitor.
              type: string
              pattern: ^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$
              minLength: 36
              maxLength: 36
            Name:
              description: A name for the app monitor
              type: string
              pattern: '[\.\-_/#A-Za-z0-9]+'
              minLength: 1
              maxLength: 255
            Domain:
              description: The top-level internet domain name for which your application has administrative authority.
              type: string
              pattern: ^(localhost)|^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$|^(?![-.])([A-Za-z0-9-\.\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))|^(\*\.)(?![-.])([A-Za-z0-9-\.\-]{0,63})((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))\.(?![-])[A-Za-z-0-9]{1,63}((?![-])([a-zA-Z0-9]{1}|^[a-zA-Z0-9]{0,1}))
              minLength: 1
              maxLength: 253
            CwLogEnabled:
              description: Data collected by RUM is kept by RUM for 30 days and then deleted. This parameter specifies whether RUM sends a copy of this telemetry data to CWLlong in your account. This enables you to keep the telemetry data for more than 30 days, but it does incur CWLlong charges. If you omit this parameter, the default is false
              type: boolean
            Tags:
              $ref: '#/components/schemas/TagDef'
            AppMonitorConfiguration:
              $ref: '#/components/schemas/AppMonitorConfiguration'
            CustomEvents:
              $ref: '#/components/schemas/CustomEvents'
          x-stackQL-stringOnly: true
      x-title: CreateAppMonitorRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    app_monitors:
      name: app_monitors
      id: aws.rum.app_monitors
      x-cfn-schema-name: AppMonitor
      x-cfn-type-name: AWS::RUM::AppMonitor
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AppMonitor&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RUM::AppMonitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RUM::AppMonitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::RUM::AppMonitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/app_monitors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/app_monitors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/app_monitors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Domain') as domain,
              JSON_EXTRACT(Properties, '$.CwLogEnabled') as cw_log_enabled,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AppMonitorConfiguration') as app_monitor_configuration,
              JSON_EXTRACT(Properties, '$.CustomEvents') as custom_events
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RUM::AppMonitor'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Domain') as domain,
                JSON_EXTRACT(detail.Properties, '$.CwLogEnabled') as cw_log_enabled,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AppMonitorConfiguration') as app_monitor_configuration,
                JSON_EXTRACT(detail.Properties, '$.CustomEvents') as custom_events
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::RUM::AppMonitor'
                AND detail.data__TypeName = 'AWS::RUM::AppMonitor'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Domain') as domain,
                  json_extract_path_text(Properties, 'CwLogEnabled') as cw_log_enabled,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AppMonitorConfiguration') as app_monitor_configuration,
                  json_extract_path_text(Properties, 'CustomEvents') as custom_events
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::RUM::AppMonitor'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Domain') as domain,
                    json_extract_path_text(detail.Properties, 'CwLogEnabled') as cw_log_enabled,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AppMonitorConfiguration') as app_monitor_configuration,
                    json_extract_path_text(detail.Properties, 'CustomEvents') as custom_events
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::RUM::AppMonitor'
                    AND detail.data__TypeName = 'AWS::RUM::AppMonitor'
                    AND listing.region = 'us-east-1'
    app_monitors_list_only:
      name: app_monitors_list_only
      id: aws.rum.app_monitors_list_only
      x-cfn-schema-name: AppMonitor
      x-cfn-type-name: AWS::RUM::AppMonitor
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RUM::AppMonitor'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::RUM::AppMonitor'
                AND region = 'us-east-1'
    app_monitor_tags:
      name: app_monitor_tags
      id: aws.rum.app_monitor_tags
      x-cfn-schema-name: AppMonitor
      x-cfn-type-name: AWS::RUM::AppMonitor
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Domain') as domain,
              JSON_EXTRACT(detail.Properties, '$.CwLogEnabled') as cw_log_enabled,
              JSON_EXTRACT(detail.Properties, '$.AppMonitorConfiguration') as app_monitor_configuration,
              JSON_EXTRACT(detail.Properties, '$.CustomEvents') as custom_events
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::RUM::AppMonitor'
              AND detail.data__TypeName = 'AWS::RUM::AppMonitor'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Domain') as domain,
                json_extract_path_text(detail.Properties, 'CwLogEnabled') as cw_log_enabled,
                json_extract_path_text(detail.Properties, 'AppMonitorConfiguration') as app_monitor_configuration,
                json_extract_path_text(detail.Properties, 'CustomEvents') as custom_events
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::RUM::AppMonitor'
                AND detail.data__TypeName = 'AWS::RUM::AppMonitor'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AppMonitor&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAppMonitor
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppMonitorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
