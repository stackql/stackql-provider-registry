openapi: 3.0.0
info:
  title: CleanRooms
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AnalysisParameter:
      type: object
      additionalProperties: false
      properties:
        DefaultValue:
          type: string
          minLength: 0
          maxLength: 250
        Name:
          type: string
          minLength: 1
          maxLength: 100
          pattern: '[0-9a-zA-Z_]+'
        Type:
          type: string
          enum:
            - SMALLINT
            - INTEGER
            - BIGINT
            - DECIMAL
            - REAL
            - DOUBLE_PRECISION
            - BOOLEAN
            - CHAR
            - VARCHAR
            - DATE
            - TIMESTAMP
            - TIMESTAMPTZ
            - TIME
            - TIMETZ
            - VARBYTE
            - BINARY
            - BYTE
            - CHARACTER
            - DOUBLE
            - FLOAT
            - INT
            - LONG
            - NUMERIC
            - SHORT
            - STRING
            - TIMESTAMP_LTZ
            - TIMESTAMP_NTZ
            - TINYINT
      required:
        - Name
        - Type
    TableName:
      type: string
      maxLength: 128
      pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
    ReferencedTables:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/TableName'
      minItems: 0
    AnalysisSchema:
      type: object
      additionalProperties: false
      properties:
        ReferencedTables:
          $ref: '#/components/schemas/ReferencedTables'
      required:
        - ReferencedTables
    AnalysisSource:
      type: object
      additionalProperties: false
      properties:
        Text:
          type: string
          minLength: 0
          maxLength: 15000
      required:
        - Text
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
    AnalysisTemplate:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 200
        CollaborationArn:
          type: string
          maxLength: 100
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms analysis template.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        AnalysisParameters:
          description: The member who can query can provide this placeholder for a literal data value in an analysis template
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisParameter'
          type: array
          minItems: 0
          maxItems: 10
        AnalysisTemplateIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        MembershipArn:
          type: string
          maxLength: 100
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Name:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        Schema:
          $ref: '#/components/schemas/AnalysisSchema'
        Source:
          $ref: '#/components/schemas/AnalysisSource'
        Format:
          type: string
          enum:
            - SQL
      required:
        - Source
        - Format
        - Name
        - MembershipIdentifier
      x-stackql-resource-name: analysis_template
      description: Represents a stored analysis within a collaboration
      x-type-name: AWS::CleanRooms::AnalysisTemplate
      x-stackql-primary-identifier:
        - AnalysisTemplateIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - Name
        - MembershipIdentifier
        - Source
        - Source/Text
        - Format
        - AnalysisParameters
        - AnalysisParameters/Name
        - AnalysisParameters/Type
        - AnalysisParameters/DefaultValue
      x-read-only-properties:
        - CollaborationArn
        - CollaborationIdentifier
        - AnalysisTemplateIdentifier
        - Schema
        - Arn
        - MembershipArn
      x-required-properties:
        - Source
        - Format
        - Name
        - MembershipIdentifier
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreateAnalysisTemplate
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListAnalysisTemplates
        read:
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateAnalysisTemplate
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
        delete:
          - cleanrooms:DeleteAnalysisTemplate
          - cleanrooms:GetAnalysisTemplate
          - cleanrooms:ListAnalysisTemplates
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
        list:
          - cleanrooms:ListAnalysisTemplates
    AnalyticsEngine:
      type: string
      enum:
        - CLEAN_ROOMS_SQL
        - SPARK
    CollaborationQueryLogStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    DataEncryptionMetadata:
      type: object
      properties:
        AllowCleartext:
          type: boolean
        AllowDuplicates:
          type: boolean
        AllowJoinsOnColumnsWithDifferentNames:
          type: boolean
        PreserveNulls:
          type: boolean
      required:
        - AllowCleartext
        - AllowDuplicates
        - AllowJoinsOnColumnsWithDifferentNames
        - PreserveNulls
      additionalProperties: false
    MemberAbility:
      type: string
      enum:
        - CAN_QUERY
        - CAN_RECEIVE_RESULTS
    MemberAbilities:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/MemberAbility'
      uniqueItems: true
    MLMemberAbilities:
      type: object
      properties:
        CustomMLMemberAbilities:
          $ref: '#/components/schemas/CustomMLMemberAbilities'
      required:
        - CustomMLMemberAbilities
      additionalProperties: false
    CustomMLMemberAbility:
      type: string
      enum:
        - CAN_RECEIVE_MODEL_OUTPUT
        - CAN_RECEIVE_INFERENCE_OUTPUT
    CustomMLMemberAbilities:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/CustomMLMemberAbility'
      uniqueItems: true
    MemberSpecification:
      type: object
      properties:
        AccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d+$
        MemberAbilities:
          $ref: '#/components/schemas/MemberAbilities'
        MLMemberAbilities:
          $ref: '#/components/schemas/MLMemberAbilities'
        DisplayName:
          $ref: '#/components/schemas/Name'
        PaymentConfiguration:
          $ref: '#/components/schemas/PaymentConfiguration'
      required:
        - AccountId
        - DisplayName
        - MemberAbilities
      additionalProperties: false
    MemberStatus:
      type: string
      enum:
        - INVITED
        - ACTIVE
        - LEFT
        - REMOVED
    Name:
      type: string
      maxLength: 100
      minLength: 1
      pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
    PaymentConfiguration:
      type: object
      additionalProperties: false
      properties:
        QueryCompute:
          $ref: '#/components/schemas/QueryComputePaymentConfig'
        MachineLearning:
          $ref: '#/components/schemas/MLPaymentConfig'
      required:
        - QueryCompute
    QueryComputePaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    MLPaymentConfig:
      type: object
      additionalProperties: false
      properties:
        ModelTraining:
          $ref: '#/components/schemas/ModelTrainingPaymentConfig'
        ModelInference:
          $ref: '#/components/schemas/ModelInferencePaymentConfig'
    ModelTrainingPaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    ModelInferencePaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    Collaboration:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        CreatorDisplayName:
          $ref: '#/components/schemas/Name'
        CreatorMemberAbilities:
          $ref: '#/components/schemas/MemberAbilities'
        CreatorMLMemberAbilities:
          $ref: '#/components/schemas/MLMemberAbilities'
        DataEncryptionMetadata:
          $ref: '#/components/schemas/DataEncryptionMetadata'
        Description:
          type: string
          maxLength: 255
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        Members:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/MemberSpecification'
          maxItems: 9
          minItems: 0
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
        QueryLogStatus:
          $ref: '#/components/schemas/CollaborationQueryLogStatus'
        AnalyticsEngine:
          $ref: '#/components/schemas/AnalyticsEngine'
        CreatorPaymentConfiguration:
          $ref: '#/components/schemas/PaymentConfiguration'
      required:
        - CreatorDisplayName
        - CreatorMemberAbilities
        - Members
        - Name
        - Description
        - QueryLogStatus
      x-stackql-resource-name: collaboration
      description: Represents a collaboration between AWS accounts that allows for secure data collaboration
      x-type-name: AWS::CleanRooms::Collaboration
      x-documentation-url: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cleanrooms-collaboration.html
      x-stackql-primary-identifier:
        - CollaborationIdentifier
      x-create-only-properties:
        - CreatorDisplayName
        - CreatorMemberAbilities
        - CreatorMLMemberAbilities
        - DataEncryptionMetadata
        - QueryLogStatus
        - Members
        - CreatorPaymentConfiguration
        - AnalyticsEngine
      x-read-only-properties:
        - Arn
        - CollaborationIdentifier
      x-required-properties:
        - CreatorDisplayName
        - CreatorMemberAbilities
        - Members
        - Name
        - Description
        - QueryLogStatus
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - cleanrooms:CreateCollaboration
          - cleanrooms:GetCollaboration
          - cleanrooms:ListMembers
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetCollaboration
          - cleanrooms:ListCollaborations
        read:
          - cleanrooms:GetCollaboration
          - cleanrooms:ListMembers
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateCollaboration
          - cleanrooms:GetCollaboration
          - cleanrooms:ListMembers
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
        delete:
          - cleanrooms:DeleteCollaboration
          - cleanrooms:GetCollaboration
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:ListMembers
          - cleanrooms:ListCollaborations
        list:
          - cleanrooms:ListCollaborations
    AnalysisRuleColumnName:
      type: string
      maxLength: 127
      minLength: 1
      pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
    AggregateColumn:
      type: object
      properties:
        ColumnNames:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
          minItems: 1
        Function:
          $ref: '#/components/schemas/AggregateFunctionName'
      required:
        - ColumnNames
        - Function
      additionalProperties: false
    AggregateFunctionName:
      type: string
      enum:
        - SUM
        - SUM_DISTINCT
        - COUNT
        - COUNT_DISTINCT
        - AVG
    AggregationConstraint:
      type: object
      properties:
        ColumnName:
          $ref: '#/components/schemas/AnalysisRuleColumnName'
        Minimum:
          type: number
          minimum: 2
          maximum: 100000
        Type:
          $ref: '#/components/schemas/AggregationType'
      required:
        - ColumnName
        - Minimum
        - Type
      additionalProperties: false
    AggregationType:
      type: string
      enum:
        - COUNT_DISTINCT
    JoinOperator:
      type: string
      enum:
        - OR
        - AND
    AnalysisMethod:
      type: string
      enum:
        - DIRECT_QUERY
    JoinRequiredOption:
      type: string
      enum:
        - QUERY_RUNNER
    ScalarFunctions:
      type: string
      enum:
        - TRUNC
        - ABS
        - CEILING
        - FLOOR
        - LN
        - LOG
        - ROUND
        - SQRT
        - CAST
        - LOWER
        - RTRIM
        - UPPER
        - COALESCE
        - CONVERT
        - CURRENT_DATE
        - DATEADD
        - EXTRACT
        - GETDATE
        - SUBSTRING
        - TO_CHAR
        - TO_DATE
        - TO_NUMBER
        - TO_TIMESTAMP
        - TRIM
    AnalysisRuleAggregation:
      type: object
      properties:
        AggregateColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AggregateColumn'
          minItems: 1
        JoinColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
        AllowedJoinOperators:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/JoinOperator'
          maxItems: 2
        JoinRequired:
          $ref: '#/components/schemas/JoinRequiredOption'
        DimensionColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
        ScalarFunctions:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ScalarFunctions'
        OutputConstraints:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AggregationConstraint'
          minItems: 1
        AdditionalAnalyses:
          $ref: '#/components/schemas/AdditionalAnalyses'
      required:
        - AggregateColumns
        - JoinColumns
        - DimensionColumns
        - ScalarFunctions
        - OutputConstraints
      additionalProperties: false
    AnalysisRuleList:
      type: object
      properties:
        JoinColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
          minItems: 1
        AllowedJoinOperators:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/JoinOperator'
          maxItems: 2
        ListColumns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRuleColumnName'
        AdditionalAnalyses:
          $ref: '#/components/schemas/AdditionalAnalyses'
      required:
        - JoinColumns
        - ListColumns
      additionalProperties: false
    AllowedAnalysis:
      type: string
      minLength: 0
      maxLength: 200
      pattern: (ANY_QUERY|arn:[\w]{3}:cleanrooms:[\w]{2}-[\w]{4,9}-[\d]:[\d]{12}:membership/[\d\w-]+/analysistemplate/[\d\w-]+)
    AllowedAnalyses:
      type: array
      x-insertionOrder: false
      minItems: 0
      items:
        $ref: '#/components/schemas/AllowedAnalysis'
    AllowedAnalysisProvider:
      type: string
      minLength: 12
      maxLength: 12
      pattern: \d+
    AllowedAnalysisProviders:
      type: array
      x-insertionOrder: false
      minItems: 0
      items:
        $ref: '#/components/schemas/AllowedAnalysisProvider'
    DisallowedOutputColumns:
      type: array
      x-insertionOrder: false
      minItems: 0
      items:
        $ref: '#/components/schemas/AnalysisRuleColumnName'
    AdditionalAnalyses:
      type: string
      enum:
        - ALLOWED
        - REQUIRED
        - NOT_ALLOWED
    DifferentialPrivacyColumn:
      type: object
      properties:
        Name:
          type: string
      required:
        - Name
      additionalProperties: false
    DifferentialPrivacy:
      type: object
      properties:
        Columns:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DifferentialPrivacyColumn'
          minItems: 1
      required:
        - Columns
      additionalProperties: false
    AnalysisRuleCustom:
      type: object
      properties:
        AllowedAnalyses:
          $ref: '#/components/schemas/AllowedAnalyses'
        AllowedAnalysisProviders:
          $ref: '#/components/schemas/AllowedAnalysisProviders'
        DifferentialPrivacy:
          $ref: '#/components/schemas/DifferentialPrivacy'
        DisallowedOutputColumns:
          $ref: '#/components/schemas/DisallowedOutputColumns'
        AdditionalAnalyses:
          $ref: '#/components/schemas/AdditionalAnalyses'
      required:
        - AllowedAnalyses
      additionalProperties: false
    ConfiguredTableAnalysisRulePolicy:
      type: object
      x-title: V1
      properties:
        V1:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicyV1'
      required:
        - V1
      additionalProperties: false
    ConfiguredTableAnalysisRulePolicyV1:
      oneOf:
        - type: object
          title: List
          properties:
            List:
              $ref: '#/components/schemas/AnalysisRuleList'
          required:
            - List
          additionalProperties: false
        - type: object
          title: Aggregation
          properties:
            Aggregation:
              $ref: '#/components/schemas/AnalysisRuleAggregation'
          required:
            - Aggregation
          additionalProperties: false
        - type: object
          title: Custom
          properties:
            Custom:
              $ref: '#/components/schemas/AnalysisRuleCustom'
          required:
            - Custom
          additionalProperties: false
    ConfiguredTableAnalysisRuleType:
      type: string
      enum:
        - AGGREGATION
        - LIST
        - CUSTOM
    GlueTableReference:
      type: object
      properties:
        TableName:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        DatabaseName:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
      required:
        - DatabaseName
        - TableName
      additionalProperties: false
    SnowflakeTableReference:
      type: object
      properties:
        SecretArn:
          type: string
          maxLength: 256
        AccountIdentifier:
          type: string
          maxLength: 256
          minLength: 3
        DatabaseName:
          type: string
          maxLength: 256
          minLength: 1
        TableName:
          type: string
          maxLength: 256
          minLength: 1
        SchemaName:
          type: string
          maxLength: 256
          minLength: 1
        TableSchema:
          $ref: '#/components/schemas/SnowflakeTableSchema'
      required:
        - AccountIdentifier
        - DatabaseName
        - SchemaName
        - SecretArn
        - TableName
        - TableSchema
      additionalProperties: false
    SnowflakeTableSchema:
      oneOf:
        - type: object
          title: V1
          properties:
            V1:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SnowflakeTableSchemaV1'
              maxItems: 250
              minItems: 1
          required:
            - V1
          additionalProperties: false
    SnowflakeTableSchemaV1:
      type: object
      properties:
        ColumnName:
          type: string
          maxLength: 128
        ColumnType:
          type: string
          maxLength: 255
      required:
        - ColumnName
        - ColumnType
      additionalProperties: false
    AthenaTableReference:
      type: object
      properties:
        WorkGroup:
          type: string
          maxLength: 128
          minLength: 1
        OutputLocation:
          type: string
          maxLength: 1024
          minLength: 8
        DatabaseName:
          type: string
          maxLength: 128
        TableName:
          type: string
          maxLength: 128
      required:
        - DatabaseName
        - TableName
        - WorkGroup
      additionalProperties: false
    AnalysisRule:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRuleType'
        Policy:
          $ref: '#/components/schemas/ConfiguredTableAnalysisRulePolicy'
      required:
        - Type
        - Policy
      additionalProperties: false
    TableReference:
      oneOf:
        - type: object
          title: Glue
          properties:
            Glue:
              $ref: '#/components/schemas/GlueTableReference'
          required:
            - Glue
          additionalProperties: false
        - type: object
          title: Snowflake
          properties:
            Snowflake:
              $ref: '#/components/schemas/SnowflakeTableReference'
          required:
            - Snowflake
          additionalProperties: false
        - type: object
          title: Athena
          properties:
            Athena:
              $ref: '#/components/schemas/AthenaTableReference'
          required:
            - Athena
          additionalProperties: false
    ConfiguredTable:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        AllowedColumns:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 128
            pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
          maxItems: 100
          minItems: 1
        AnalysisMethod:
          $ref: '#/components/schemas/AnalysisMethod'
        ConfiguredTableIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
        AnalysisRules:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/AnalysisRule'
          maxItems: 1
          minItems: 1
        TableReference:
          $ref: '#/components/schemas/TableReference'
      required:
        - AllowedColumns
        - AnalysisMethod
        - Name
        - TableReference
      x-stackql-resource-name: configured_table
      description: Represents a table that can be associated with collaborations
      x-type-name: AWS::CleanRooms::ConfiguredTable
      x-stackql-primary-identifier:
        - ConfiguredTableIdentifier
      x-create-only-properties:
        - AllowedColumns
        - AnalysisMethod
        - TableReference
      x-read-only-properties:
        - Arn
        - ConfiguredTableIdentifier
      x-required-properties:
        - AllowedColumns
        - AnalysisMethod
        - Name
        - TableReference
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreateConfiguredTable
          - cleanrooms:DeleteConfiguredTable
          - cleanrooms:DeleteConfiguredTableAnalysisRule
          - cleanrooms:CreateConfiguredTableAnalysisRule
          - cleanrooms:GetConfiguredTable
          - cleanrooms:GetConfiguredTableAnalysisRule
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetTables
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          - glue:GetSchemaVersion
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:ListConfiguredTables
          - athena:GetTableMetadata
        read:
          - cleanrooms:GetConfiguredTable
          - cleanrooms:GetConfiguredTableAnalysisRule
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdateConfiguredTable
          - cleanrooms:GetConfiguredTable
          - cleanrooms:CreateConfiguredTableAnalysisRule
          - cleanrooms:UpdateConfiguredTableAnalysisRule
          - cleanrooms:GetConfiguredTableAnalysisRule
          - cleanrooms:DeleteConfiguredTableAnalysisRule
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetTables
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          - glue:GetSchemaVersion
        delete:
          - cleanrooms:DeleteConfiguredTable
          - cleanrooms:GetConfiguredTable
          - cleanrooms:ListConfiguredTables
          - cleanrooms:GetConfiguredTableAnalysisRule
          - cleanrooms:DeleteConfiguredTableAnalysisRule
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:GetTable
          - glue:GetTables
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          - glue:GetSchemaVersion
        list:
          - cleanrooms:ListConfiguredTables
    ConfiguredTableAssociationAnalysisRuleType:
      type: string
      enum:
        - AGGREGATION
        - LIST
        - CUSTOM
    AllowedResultReceiver:
      type: string
      minLength: 12
      maxLength: 12
      pattern: \d+
    AllowedResultReceivers:
      type: array
      x-insertionOrder: false
      minItems: 0
      items:
        $ref: '#/components/schemas/AllowedResultReceiver'
    AllowedAdditionalAnalysis:
      type: string
      maxLength: 256
    AllowedAdditionalAnalyses:
      type: array
      x-insertionOrder: false
      minItems: 0
      maxItems: 25
      items:
        $ref: '#/components/schemas/AllowedAdditionalAnalysis'
    ConfiguredTableAssociationAnalysisRuleCustom:
      type: object
      properties:
        AllowedResultReceivers:
          $ref: '#/components/schemas/AllowedResultReceivers'
        AllowedAdditionalAnalyses:
          $ref: '#/components/schemas/AllowedAdditionalAnalyses'
      additionalProperties: false
    ConfiguredTableAssociationAnalysisRuleAggregation:
      type: object
      properties:
        AllowedResultReceivers:
          $ref: '#/components/schemas/AllowedResultReceivers'
        AllowedAdditionalAnalyses:
          $ref: '#/components/schemas/AllowedAdditionalAnalyses'
      additionalProperties: false
    ConfiguredTableAssociationAnalysisRuleList:
      type: object
      properties:
        AllowedResultReceivers:
          $ref: '#/components/schemas/AllowedResultReceivers'
        AllowedAdditionalAnalyses:
          $ref: '#/components/schemas/AllowedAdditionalAnalyses'
      additionalProperties: false
    ConfiguredTableAssociationAnalysisRulePolicyV1:
      oneOf:
        - type: object
          title: List
          properties:
            List:
              $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleList'
          required:
            - List
          additionalProperties: false
        - type: object
          title: Aggregation
          properties:
            Aggregation:
              $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleAggregation'
          required:
            - Aggregation
          additionalProperties: false
        - type: object
          title: Custom
          properties:
            Custom:
              $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleCustom'
          required:
            - Custom
          additionalProperties: false
    ConfiguredTableAssociationAnalysisRulePolicy:
      type: object
      x-title: V1
      properties:
        V1:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicyV1'
      required:
        - V1
      additionalProperties: false
    ConfiguredTableAssociationAnalysisRule:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRuleType'
        Policy:
          $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRulePolicy'
      required:
        - Type
        - Policy
      additionalProperties: false
    ConfiguredTableAssociation:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 256
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        ConfiguredTableAssociationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        ConfiguredTableIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Name:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        RoleArn:
          type: string
          maxLength: 512
          minLength: 32
        ConfiguredTableAssociationAnalysisRules:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRule'
          maxItems: 1
          minItems: 1
      required:
        - ConfiguredTableIdentifier
        - Name
        - RoleArn
        - MembershipIdentifier
      x-stackql-resource-name: configured_table_association
      description: Represents a table that can be queried within a collaboration
      x-type-name: AWS::CleanRooms::ConfiguredTableAssociation
      x-stackql-primary-identifier:
        - ConfiguredTableAssociationIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - ConfiguredTableIdentifier
        - Name
        - MembershipIdentifier
      x-read-only-properties:
        - ConfiguredTableAssociationIdentifier
        - Arn
      x-required-properties:
        - ConfiguredTableIdentifier
        - Name
        - RoleArn
        - MembershipIdentifier
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreateConfiguredTableAssociation
          - iam:PassRole
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetConfiguredTableAssociation
          - cleanrooms:ListConfiguredTableAssociations
          - cleanrooms:DeleteConfiguredTableAssociation
          - cleanrooms:DeleteConfiguredTableAssociationAnalysisRule
          - cleanrooms:CreateConfiguredTableAssociationAnalysisRule
          - cleanrooms:GetConfiguredTableAssociationAnalysisRule
        read:
          - cleanrooms:GetConfiguredTableAssociation
          - cleanrooms:ListTagsForResource
          - cleanrooms:GetConfiguredTableAssociationAnalysisRule
        update:
          - cleanrooms:UpdateConfiguredTableAssociation
          - cleanrooms:GetConfiguredTableAssociation
          - iam:PassRole
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - cleanrooms:DeleteConfiguredTableAssociationAnalysisRule
          - cleanrooms:CreateConfiguredTableAssociationAnalysisRule
          - cleanrooms:GetConfiguredTableAssociationAnalysisRule
          - cleanrooms:UpdateConfiguredTableAssociationAnalysisRule
        delete:
          - cleanrooms:DeleteConfiguredTableAssociation
          - cleanrooms:GetConfiguredTableAssociation
          - cleanrooms:ListConfiguredTableAssociations
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:DeleteConfiguredTableAssociationAnalysisRule
          - cleanrooms:GetConfiguredTableAssociationAnalysisRule
        list:
          - cleanrooms:ListConfiguredTableAssociations
    UUID:
      type: string
      maxLength: 36
      minLength: 36
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
    IdMappingTableInputReferenceConfig:
      type: object
      properties:
        InputReferenceArn:
          type: string
          maxLength: 2048
          minLength: 20
        ManageResourcePolicies:
          type: boolean
      required:
        - InputReferenceArn
        - ManageResourcePolicies
      additionalProperties: false
    IdMappingTableInputSource:
      type: object
      properties:
        IdNamespaceAssociationId:
          type: string
        Type:
          type: string
          enum:
            - SOURCE
            - TARGET
      required:
        - IdNamespaceAssociationId
        - Type
      additionalProperties: false
    IdMappingTableInputReferenceProperties:
      type: object
      properties:
        IdMappingTableInputSource:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/IdMappingTableInputSource'
          maxItems: 2
          minItems: 2
      required:
        - IdMappingTableInputSource
      additionalProperties: false
    IdMappingTable:
      type: object
      properties:
        IdMappingTableIdentifier:
          $ref: '#/components/schemas/UUID'
        Arn:
          type: string
          maxLength: 200
        InputReferenceConfig:
          $ref: '#/components/schemas/IdMappingTableInputReferenceConfig'
        MembershipIdentifier:
          $ref: '#/components/schemas/UUID'
        MembershipArn:
          type: string
          maxLength: 100
        CollaborationIdentifier:
          $ref: '#/components/schemas/UUID'
        CollaborationArn:
          type: string
          maxLength: 100
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        Name:
          type: string
          maxLength: 128
          pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
        InputReferenceProperties:
          $ref: '#/components/schemas/IdMappingTableInputReferenceProperties'
        KmsKeyArn:
          type: string
          maxLength: 2048
          minLength: 4
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
      required:
        - MembershipIdentifier
        - Name
        - InputReferenceConfig
      x-stackql-resource-name: id_mapping_table
      description: Represents an association between an ID mapping workflow and a collaboration
      x-type-name: AWS::CleanRooms::IdMappingTable
      x-stackql-primary-identifier:
        - IdMappingTableIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - MembershipIdentifier
        - Name
        - InputReferenceConfig
      x-read-only-properties:
        - IdMappingTableIdentifier
        - Arn
        - MembershipArn
        - CollaborationIdentifier
        - CollaborationArn
        - InputReferenceProperties
      x-required-properties:
        - MembershipIdentifier
        - Name
        - InputReferenceConfig
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreateIdMappingTable
          - cleanrooms:GetIdMappingTable
          - cleanrooms:ListIdMappingTables
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
          - entityresolution:GetIdMappingWorkflow
          - entityresolution:AddPolicyStatement
        read:
          - cleanrooms:GetIdMappingTable
          - cleanrooms:ListTagsForResource
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
        update:
          - cleanrooms:UpdateIdMappingTable
          - cleanrooms:GetIdMappingTable
          - cleanrooms:GetMembership
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - entityresolution:GetIdMappingWorkflow
          - entityresolution:AddPolicyStatement
        delete:
          - cleanrooms:DeleteIdMappingTable
          - cleanrooms:GetIdMappingTable
          - cleanrooms:ListIdMappingTables
          - cleanrooms:GetMembership
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - entityresolution:GetIdMappingWorkflow
          - entityresolution:AddPolicyStatement
          - entityresolution:DeletePolicyStatement
        list:
          - cleanrooms:ListIdMappingTables
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
    Document:
      type: object
    IdNamespaceAssociationInputReferenceConfig:
      type: object
      properties:
        InputReferenceArn:
          type: string
          maxLength: 256
        ManageResourcePolicies:
          type: boolean
      required:
        - InputReferenceArn
        - ManageResourcePolicies
      additionalProperties: false
    IdMappingConfig:
      type: object
      properties:
        AllowUseAsDimensionColumn:
          type: boolean
      required:
        - AllowUseAsDimensionColumn
      additionalProperties: false
    IdNamespaceAssociationInputReferenceProperties:
      type: object
      properties:
        IdNamespaceType:
          type: string
          enum:
            - SOURCE
            - TARGET
        IdMappingWorkflowsSupported:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Document'
      required: []
      additionalProperties: false
    IdNamespaceAssociation:
      type: object
      properties:
        IdNamespaceAssociationIdentifier:
          $ref: '#/components/schemas/UUID'
        Arn:
          type: string
          maxLength: 256
        MembershipIdentifier:
          $ref: '#/components/schemas/UUID'
        MembershipArn:
          type: string
          maxLength: 100
        CollaborationIdentifier:
          $ref: '#/components/schemas/UUID'
        CollaborationArn:
          type: string
          maxLength: 100
        InputReferenceConfig:
          $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
        Description:
          type: string
          maxLength: 255
          pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
        IdMappingConfig:
          $ref: '#/components/schemas/IdMappingConfig'
        InputReferenceProperties:
          $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceProperties'
      required:
        - MembershipIdentifier
        - InputReferenceConfig
        - Name
      x-stackql-resource-name: id_namespace_association
      description: Represents an association between an ID namespace and a collaboration
      x-type-name: AWS::CleanRooms::IdNamespaceAssociation
      x-stackql-primary-identifier:
        - IdNamespaceAssociationIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - MembershipIdentifier
        - InputReferenceConfig
      x-read-only-properties:
        - IdNamespaceAssociationIdentifier
        - Arn
        - MembershipArn
        - CollaborationIdentifier
        - CollaborationArn
        - InputReferenceProperties
      x-required-properties:
        - MembershipIdentifier
        - InputReferenceConfig
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreateIdNamespaceAssociation
          - cleanrooms:GetIdNamespaceAssociation
          - cleanrooms:ListIdNamespaceAssociations
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
          - entityresolution:GetIdNamespace
          - entityresolution:AddPolicyStatement
        read:
          - cleanrooms:GetIdNamespaceAssociation
          - cleanrooms:ListTagsForResource
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
          - entityresolution:GetIdNamespace
        update:
          - cleanrooms:UpdateIdNamespaceAssociation
          - cleanrooms:GetIdNamespaceAssociation
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - entityresolution:GetIdNamespace
          - entityresolution:AddPolicyStatement
        delete:
          - cleanrooms:DeleteIdNamespaceAssociation
          - cleanrooms:GetIdNamespaceAssociation
          - cleanrooms:ListIdNamespaceAssociations
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - entityresolution:GetIdNamespace
          - entityresolution:DeletePolicyStatement
        list:
          - cleanrooms:ListIdNamespaceAssociations
          - cleanrooms:GetMembership
          - cleanrooms:GetCollaboration
    MembershipQueryLogStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    MembershipStatus:
      type: string
      enum:
        - ACTIVE
        - REMOVED
        - COLLABORATION_DELETED
    ResultFormat:
      type: string
      enum:
        - CSV
        - PARQUET
    ProtectedQueryS3OutputConfiguration:
      type: object
      additionalProperties: false
      properties:
        ResultFormat:
          $ref: '#/components/schemas/ResultFormat'
        Bucket:
          type: string
          minLength: 3
          maxLength: 63
        KeyPrefix:
          type: string
        SingleFileOutput:
          type: boolean
      required:
        - ResultFormat
        - Bucket
    MembershipProtectedQueryOutputConfiguration:
      type: object
      additionalProperties: false
      properties:
        S3:
          $ref: '#/components/schemas/ProtectedQueryS3OutputConfiguration'
      required:
        - S3
    MembershipProtectedQueryResultConfiguration:
      type: object
      additionalProperties: false
      properties:
        OutputConfiguration:
          $ref: '#/components/schemas/MembershipProtectedQueryOutputConfiguration'
        RoleArn:
          type: string
          minLength: 32
          maxLength: 512
      required:
        - OutputConfiguration
    MembershipPaymentConfiguration:
      type: object
      additionalProperties: false
      properties:
        QueryCompute:
          $ref: '#/components/schemas/MembershipQueryComputePaymentConfig'
        MachineLearning:
          $ref: '#/components/schemas/MembershipMLPaymentConfig'
      required:
        - QueryCompute
    MembershipQueryComputePaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    MembershipMLPaymentConfig:
      type: object
      additionalProperties: false
      properties:
        ModelTraining:
          $ref: '#/components/schemas/MembershipModelTrainingPaymentConfig'
        ModelInference:
          $ref: '#/components/schemas/MembershipModelInferencePaymentConfig'
    MembershipModelTrainingPaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    MembershipModelInferencePaymentConfig:
      type: object
      additionalProperties: false
      properties:
        IsResponsible:
          type: boolean
      required:
        - IsResponsible
    Membership:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 100
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms membership.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          uniqueItems: true
          type: array
        CollaborationArn:
          type: string
          maxLength: 100
        CollaborationCreatorAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^\d+$
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        QueryLogStatus:
          $ref: '#/components/schemas/MembershipQueryLogStatus'
        DefaultResultConfiguration:
          $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
        PaymentConfiguration:
          $ref: '#/components/schemas/MembershipPaymentConfiguration'
      required:
        - CollaborationIdentifier
        - QueryLogStatus
      x-stackql-resource-name: membership
      description: Represents an AWS account that is a part of a collaboration
      x-type-name: AWS::CleanRooms::Membership
      x-stackql-primary-identifier:
        - MembershipIdentifier
      x-create-only-properties:
        - CollaborationIdentifier
      x-read-only-properties:
        - Arn
        - CollaborationArn
        - CollaborationCreatorAccountId
        - MembershipIdentifier
      x-required-properties:
        - CollaborationIdentifier
        - QueryLogStatus
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreateMembership
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:PutResourcePolicy
          - logs:CreateLogGroup
          - cleanrooms:GetMembership
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:ListMemberships
          - iam:PassRole
        read:
          - cleanrooms:GetMembership
          - cleanrooms:ListTagsForResource
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:GetLogDelivery
        update:
          - cleanrooms:UpdateMembership
          - cleanrooms:GetMembership
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:PutResourcePolicy
          - logs:CreateLogGroup
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
          - iam:PassRole
        delete:
          - cleanrooms:DeleteMembership
          - cleanrooms:GetMembership
          - cleanrooms:ListMemberships
          - cleanrooms:ListTagsForResource
          - logs:ListLogDeliveries
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:GetLogDelivery
        list:
          - cleanrooms:ListMemberships
    PrivacyBudgetTemplate:
      type: object
      properties:
        Arn:
          type: string
          maxLength: 200
        CollaborationArn:
          type: string
          maxLength: 100
        CollaborationIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        PrivacyBudgetTemplateIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this cleanrooms privacy budget template.
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        AutoRefresh:
          type: string
          enum:
            - CALENDAR_MONTH
            - NONE
        PrivacyBudgetType:
          type: string
          enum:
            - DIFFERENTIAL_PRIVACY
        Parameters:
          type: object
          additionalProperties: false
          properties:
            Epsilon:
              type: integer
              minimum: 1
              maximum: 20
            UsersNoisePerQuery:
              type: integer
              minimum: 10
              maximum: 100
          required:
            - Epsilon
            - UsersNoisePerQuery
        MembershipArn:
          type: string
          maxLength: 100
        MembershipIdentifier:
          type: string
          maxLength: 36
          minLength: 36
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
      required:
        - AutoRefresh
        - PrivacyBudgetType
        - Parameters
        - MembershipIdentifier
      x-stackql-resource-name: privacy_budget_template
      description: Represents a privacy budget within a collaboration
      x-type-name: AWS::CleanRooms::PrivacyBudgetTemplate
      x-stackql-primary-identifier:
        - PrivacyBudgetTemplateIdentifier
        - MembershipIdentifier
      x-create-only-properties:
        - MembershipIdentifier
        - PrivacyBudgetType
        - AutoRefresh
      x-read-only-properties:
        - CollaborationArn
        - CollaborationIdentifier
        - PrivacyBudgetTemplateIdentifier
        - Arn
        - MembershipArn
      x-required-properties:
        - AutoRefresh
        - PrivacyBudgetType
        - Parameters
        - MembershipIdentifier
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
          - cleanrooms:TagResource
      x-required-permissions:
        create:
          - cleanrooms:CreatePrivacyBudgetTemplate
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:GetPrivacyBudgetTemplate
          - cleanrooms:ListPrivacyBudgetTemplates
        read:
          - cleanrooms:GetPrivacyBudgetTemplate
          - cleanrooms:ListTagsForResource
        update:
          - cleanrooms:UpdatePrivacyBudgetTemplate
          - cleanrooms:GetPrivacyBudgetTemplate
          - cleanrooms:ListTagsForResource
          - cleanrooms:TagResource
          - cleanrooms:UntagResource
        delete:
          - cleanrooms:DeletePrivacyBudgetTemplate
          - cleanrooms:GetPrivacyBudgetTemplate
          - cleanrooms:ListPrivacyBudgetTemplates
          - cleanrooms:ListTagsForResource
          - cleanrooms:UntagResource
        list:
          - cleanrooms:ListPrivacyBudgetTemplates
    CreateAnalysisTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 200
            CollaborationArn:
              type: string
              maxLength: 100
            CollaborationIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this cleanrooms analysis template.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              type: array
            AnalysisParameters:
              description: The member who can query can provide this placeholder for a literal data value in an analysis template
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/AnalysisParameter'
              type: array
              minItems: 0
              maxItems: 10
            AnalysisTemplateIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Description:
              type: string
              maxLength: 255
              pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
            MembershipArn:
              type: string
              maxLength: 100
            MembershipIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Name:
              type: string
              maxLength: 128
              pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
            Schema:
              $ref: '#/components/schemas/AnalysisSchema'
            Source:
              $ref: '#/components/schemas/AnalysisSource'
            Format:
              type: string
              enum:
                - SQL
          x-stackQL-stringOnly: true
      x-title: CreateAnalysisTemplateRequest
      type: object
      required: []
    CreateCollaborationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 100
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              uniqueItems: true
              type: array
            CollaborationIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            CreatorDisplayName:
              $ref: '#/components/schemas/Name'
            CreatorMemberAbilities:
              $ref: '#/components/schemas/MemberAbilities'
            CreatorMLMemberAbilities:
              $ref: '#/components/schemas/MLMemberAbilities'
            DataEncryptionMetadata:
              $ref: '#/components/schemas/DataEncryptionMetadata'
            Description:
              type: string
              maxLength: 255
              minLength: 1
              pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
            Members:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/MemberSpecification'
              maxItems: 9
              minItems: 0
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
            QueryLogStatus:
              $ref: '#/components/schemas/CollaborationQueryLogStatus'
            AnalyticsEngine:
              $ref: '#/components/schemas/AnalyticsEngine'
            CreatorPaymentConfiguration:
              $ref: '#/components/schemas/PaymentConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateCollaborationRequest
      type: object
      required: []
    CreateConfiguredTableRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 100
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              uniqueItems: true
              type: array
            AllowedColumns:
              type: array
              x-insertionOrder: false
              items:
                type: string
                maxLength: 128
                pattern: ^[a-z0-9_](([a-z0-9_ ]+-)*([a-z0-9_ ]+))?$
              maxItems: 100
              minItems: 1
            AnalysisMethod:
              $ref: '#/components/schemas/AnalysisMethod'
            ConfiguredTableIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Description:
              type: string
              maxLength: 255
              pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
            AnalysisRules:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/AnalysisRule'
              maxItems: 1
              minItems: 1
            TableReference:
              $ref: '#/components/schemas/TableReference'
          x-stackQL-stringOnly: true
      x-title: CreateConfiguredTableRequest
      type: object
      required: []
    CreateConfiguredTableAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 256
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              type: array
            ConfiguredTableAssociationIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            ConfiguredTableIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Description:
              type: string
              maxLength: 255
              pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
            MembershipIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Name:
              type: string
              maxLength: 128
              pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
            RoleArn:
              type: string
              maxLength: 512
              minLength: 32
            ConfiguredTableAssociationAnalysisRules:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ConfiguredTableAssociationAnalysisRule'
              maxItems: 1
              minItems: 1
          x-stackQL-stringOnly: true
      x-title: CreateConfiguredTableAssociationRequest
      type: object
      required: []
    CreateIdMappingTableRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IdMappingTableIdentifier:
              $ref: '#/components/schemas/UUID'
            Arn:
              type: string
              maxLength: 200
            InputReferenceConfig:
              $ref: '#/components/schemas/IdMappingTableInputReferenceConfig'
            MembershipIdentifier:
              $ref: '#/components/schemas/UUID'
            MembershipArn:
              type: string
              maxLength: 100
            CollaborationIdentifier:
              $ref: '#/components/schemas/UUID'
            CollaborationArn:
              type: string
              maxLength: 100
            Description:
              type: string
              maxLength: 255
              pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
            Name:
              type: string
              maxLength: 128
              pattern: ^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$
            InputReferenceProperties:
              $ref: '#/components/schemas/IdMappingTableInputReferenceProperties'
            KmsKeyArn:
              type: string
              maxLength: 2048
              minLength: 4
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateIdMappingTableRequest
      type: object
      required: []
    CreateIdNamespaceAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IdNamespaceAssociationIdentifier:
              $ref: '#/components/schemas/UUID'
            Arn:
              type: string
              maxLength: 256
            MembershipIdentifier:
              $ref: '#/components/schemas/UUID'
            MembershipArn:
              type: string
              maxLength: 100
            CollaborationIdentifier:
              $ref: '#/components/schemas/UUID'
            CollaborationArn:
              type: string
              maxLength: 100
            InputReferenceConfig:
              $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceConfig'
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              uniqueItems: true
            Name:
              type: string
              maxLength: 100
              minLength: 1
              pattern: ^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$
            Description:
              type: string
              maxLength: 255
              pattern: ^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$
            IdMappingConfig:
              $ref: '#/components/schemas/IdMappingConfig'
            InputReferenceProperties:
              $ref: '#/components/schemas/IdNamespaceAssociationInputReferenceProperties'
          x-stackQL-stringOnly: true
      x-title: CreateIdNamespaceAssociationRequest
      type: object
      required: []
    CreateMembershipRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 100
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this cleanrooms membership.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              uniqueItems: true
              type: array
            CollaborationArn:
              type: string
              maxLength: 100
            CollaborationCreatorAccountId:
              type: string
              maxLength: 12
              minLength: 12
              pattern: ^\d+$
            CollaborationIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            MembershipIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            QueryLogStatus:
              $ref: '#/components/schemas/MembershipQueryLogStatus'
            DefaultResultConfiguration:
              $ref: '#/components/schemas/MembershipProtectedQueryResultConfiguration'
            PaymentConfiguration:
              $ref: '#/components/schemas/MembershipPaymentConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateMembershipRequest
      type: object
      required: []
    CreatePrivacyBudgetTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              maxLength: 200
            CollaborationArn:
              type: string
              maxLength: 100
            CollaborationIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            PrivacyBudgetTemplateIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this cleanrooms privacy budget template.
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              type: array
            AutoRefresh:
              type: string
              enum:
                - CALENDAR_MONTH
                - NONE
            PrivacyBudgetType:
              type: string
              enum:
                - DIFFERENTIAL_PRIVACY
            Parameters:
              type: object
              additionalProperties: false
              properties:
                Epsilon:
                  type: integer
                  minimum: 1
                  maximum: 20
                UsersNoisePerQuery:
                  type: integer
                  minimum: 10
                  maximum: 100
              required:
                - Epsilon
                - UsersNoisePerQuery
            MembershipArn:
              type: string
              maxLength: 100
            MembershipIdentifier:
              type: string
              maxLength: 36
              minLength: 36
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          x-stackQL-stringOnly: true
      x-title: CreatePrivacyBudgetTemplateRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    analysis_templates:
      name: analysis_templates
      id: aws.cleanrooms.analysis_templates
      x-cfn-schema-name: AnalysisTemplate
      x-cfn-type-name: AWS::CleanRooms::AnalysisTemplate
      x-identifiers:
        - AnalysisTemplateIdentifier
        - MembershipIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AnalysisTemplate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::AnalysisTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::AnalysisTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::AnalysisTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/analysis_templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/analysis_templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/analysis_templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AnalysisParameters') as analysis_parameters,
              JSON_EXTRACT(Properties, '$.AnalysisTemplateIdentifier') as analysis_template_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Schema') as _schema,
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.Format') as _format
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
              AND data__Identifier = '<AnalysisTemplateIdentifier>|<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AnalysisParameters') as analysis_parameters,
                JSON_EXTRACT(detail.Properties, '$.AnalysisTemplateIdentifier') as analysis_template_identifier,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
                JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Schema') as _schema,
                JSON_EXTRACT(detail.Properties, '$.Source') as source,
                JSON_EXTRACT(detail.Properties, '$.Format') as _format
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND detail.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                  json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AnalysisParameters') as analysis_parameters,
                  json_extract_path_text(Properties, 'AnalysisTemplateIdentifier') as analysis_template_identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'MembershipArn') as membership_arn,
                  json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Schema') as _schema,
                  json_extract_path_text(Properties, 'Source') as source,
                  json_extract_path_text(Properties, 'Format') as _format
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                  AND data__Identifier = '<AnalysisTemplateIdentifier>|<MembershipIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                    json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AnalysisParameters') as analysis_parameters,
                    json_extract_path_text(detail.Properties, 'AnalysisTemplateIdentifier') as analysis_template_identifier,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                    json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Schema') as _schema,
                    json_extract_path_text(detail.Properties, 'Source') as source,
                    json_extract_path_text(detail.Properties, 'Format') as _format
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                    AND detail.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                    AND listing.region = 'us-east-1'
    analysis_templates_list_only:
      name: analysis_templates_list_only
      id: aws.cleanrooms.analysis_templates_list_only
      x-cfn-schema-name: AnalysisTemplate
      x-cfn-type-name: AWS::CleanRooms::AnalysisTemplate
      x-identifiers:
        - AnalysisTemplateIdentifier
        - MembershipIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AnalysisTemplateIdentifier') as analysis_template_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AnalysisTemplateIdentifier') as analysis_template_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND region = 'us-east-1'
    analysis_template_tags:
      name: analysis_template_tags
      id: aws.cleanrooms.analysis_template_tags
      x-cfn-schema-name: AnalysisTemplate
      x-cfn-type-name: AWS::CleanRooms::AnalysisTemplate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(detail.Properties, '$.AnalysisParameters') as analysis_parameters,
              JSON_EXTRACT(detail.Properties, '$.AnalysisTemplateIdentifier') as analysis_template_identifier,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Schema') as _schema,
              JSON_EXTRACT(detail.Properties, '$.Source') as source,
              JSON_EXTRACT(detail.Properties, '$.Format') as _format
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
              AND detail.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(detail.Properties, 'AnalysisParameters') as analysis_parameters,
                json_extract_path_text(detail.Properties, 'AnalysisTemplateIdentifier') as analysis_template_identifier,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Schema') as _schema,
                json_extract_path_text(detail.Properties, 'Source') as source,
                json_extract_path_text(detail.Properties, 'Format') as _format
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND detail.data__TypeName = 'AWS::CleanRooms::AnalysisTemplate'
                AND listing.region = 'us-east-1'
    collaborations:
      name: collaborations
      id: aws.cleanrooms.collaborations
      x-cfn-schema-name: Collaboration
      x-cfn-type-name: AWS::CleanRooms::Collaboration
      x-identifiers:
        - CollaborationIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Collaboration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::Collaboration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::Collaboration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::Collaboration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/collaborations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/collaborations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/collaborations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.CreatorDisplayName') as creator_display_name,
              JSON_EXTRACT(Properties, '$.CreatorMemberAbilities') as creator_member_abilities,
              JSON_EXTRACT(Properties, '$.CreatorMLMemberAbilities') as creator_ml_member_abilities,
              JSON_EXTRACT(Properties, '$.DataEncryptionMetadata') as data_encryption_metadata,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Members') as members,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.QueryLogStatus') as query_log_status,
              JSON_EXTRACT(Properties, '$.AnalyticsEngine') as analytics_engine,
              JSON_EXTRACT(Properties, '$.CreatorPaymentConfiguration') as creator_payment_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
              AND data__Identifier = '<CollaborationIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
                JSON_EXTRACT(detail.Properties, '$.CreatorDisplayName') as creator_display_name,
                JSON_EXTRACT(detail.Properties, '$.CreatorMemberAbilities') as creator_member_abilities,
                JSON_EXTRACT(detail.Properties, '$.CreatorMLMemberAbilities') as creator_ml_member_abilities,
                JSON_EXTRACT(detail.Properties, '$.DataEncryptionMetadata') as data_encryption_metadata,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Members') as members,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.QueryLogStatus') as query_log_status,
                JSON_EXTRACT(detail.Properties, '$.AnalyticsEngine') as analytics_engine,
                JSON_EXTRACT(detail.Properties, '$.CreatorPaymentConfiguration') as creator_payment_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND detail.data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                  json_extract_path_text(Properties, 'CreatorDisplayName') as creator_display_name,
                  json_extract_path_text(Properties, 'CreatorMemberAbilities') as creator_member_abilities,
                  json_extract_path_text(Properties, 'CreatorMLMemberAbilities') as creator_ml_member_abilities,
                  json_extract_path_text(Properties, 'DataEncryptionMetadata') as data_encryption_metadata,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Members') as members,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'QueryLogStatus') as query_log_status,
                  json_extract_path_text(Properties, 'AnalyticsEngine') as analytics_engine,
                  json_extract_path_text(Properties, 'CreatorPaymentConfiguration') as creator_payment_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
                  AND data__Identifier = '<CollaborationIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                    json_extract_path_text(detail.Properties, 'CreatorDisplayName') as creator_display_name,
                    json_extract_path_text(detail.Properties, 'CreatorMemberAbilities') as creator_member_abilities,
                    json_extract_path_text(detail.Properties, 'CreatorMLMemberAbilities') as creator_ml_member_abilities,
                    json_extract_path_text(detail.Properties, 'DataEncryptionMetadata') as data_encryption_metadata,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Members') as members,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'QueryLogStatus') as query_log_status,
                    json_extract_path_text(detail.Properties, 'AnalyticsEngine') as analytics_engine,
                    json_extract_path_text(detail.Properties, 'CreatorPaymentConfiguration') as creator_payment_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::Collaboration'
                    AND detail.data__TypeName = 'AWS::CleanRooms::Collaboration'
                    AND listing.region = 'us-east-1'
    collaborations_list_only:
      name: collaborations_list_only
      id: aws.cleanrooms.collaborations_list_only
      x-cfn-schema-name: Collaboration
      x-cfn-type-name: AWS::CleanRooms::Collaboration
      x-identifiers:
        - CollaborationIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND region = 'us-east-1'
    collaboration_tags:
      name: collaboration_tags
      id: aws.cleanrooms.collaboration_tags
      x-cfn-schema-name: Collaboration
      x-cfn-type-name: AWS::CleanRooms::Collaboration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(detail.Properties, '$.CreatorDisplayName') as creator_display_name,
              JSON_EXTRACT(detail.Properties, '$.CreatorMemberAbilities') as creator_member_abilities,
              JSON_EXTRACT(detail.Properties, '$.CreatorMLMemberAbilities') as creator_ml_member_abilities,
              JSON_EXTRACT(detail.Properties, '$.DataEncryptionMetadata') as data_encryption_metadata,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Members') as members,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.QueryLogStatus') as query_log_status,
              JSON_EXTRACT(detail.Properties, '$.AnalyticsEngine') as analytics_engine,
              JSON_EXTRACT(detail.Properties, '$.CreatorPaymentConfiguration') as creator_payment_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::Collaboration'
              AND detail.data__TypeName = 'AWS::CleanRooms::Collaboration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(detail.Properties, 'CreatorDisplayName') as creator_display_name,
                json_extract_path_text(detail.Properties, 'CreatorMemberAbilities') as creator_member_abilities,
                json_extract_path_text(detail.Properties, 'CreatorMLMemberAbilities') as creator_ml_member_abilities,
                json_extract_path_text(detail.Properties, 'DataEncryptionMetadata') as data_encryption_metadata,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Members') as members,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'QueryLogStatus') as query_log_status,
                json_extract_path_text(detail.Properties, 'AnalyticsEngine') as analytics_engine,
                json_extract_path_text(detail.Properties, 'CreatorPaymentConfiguration') as creator_payment_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND detail.data__TypeName = 'AWS::CleanRooms::Collaboration'
                AND listing.region = 'us-east-1'
    configured_tables:
      name: configured_tables
      id: aws.cleanrooms.configured_tables
      x-cfn-schema-name: ConfiguredTable
      x-cfn-type-name: AWS::CleanRooms::ConfiguredTable
      x-identifiers:
        - ConfiguredTableIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ConfiguredTable&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::ConfiguredTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::ConfiguredTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::ConfiguredTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/configured_tables/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/configured_tables/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/configured_tables/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AllowedColumns') as allowed_columns,
              JSON_EXTRACT(Properties, '$.AnalysisMethod') as analysis_method,
              JSON_EXTRACT(Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AnalysisRules') as analysis_rules,
              JSON_EXTRACT(Properties, '$.TableReference') as table_reference
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
              AND data__Identifier = '<ConfiguredTableIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AllowedColumns') as allowed_columns,
                JSON_EXTRACT(detail.Properties, '$.AnalysisMethod') as analysis_method,
                JSON_EXTRACT(detail.Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.AnalysisRules') as analysis_rules,
                JSON_EXTRACT(detail.Properties, '$.TableReference') as table_reference
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AllowedColumns') as allowed_columns,
                  json_extract_path_text(Properties, 'AnalysisMethod') as analysis_method,
                  json_extract_path_text(Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'AnalysisRules') as analysis_rules,
                  json_extract_path_text(Properties, 'TableReference') as table_reference
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                  AND data__Identifier = '<ConfiguredTableIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AllowedColumns') as allowed_columns,
                    json_extract_path_text(detail.Properties, 'AnalysisMethod') as analysis_method,
                    json_extract_path_text(detail.Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'AnalysisRules') as analysis_rules,
                    json_extract_path_text(detail.Properties, 'TableReference') as table_reference
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                    AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                    AND listing.region = 'us-east-1'
    configured_tables_list_only:
      name: configured_tables_list_only
      id: aws.cleanrooms.configured_tables_list_only
      x-cfn-schema-name: ConfiguredTable
      x-cfn-type-name: AWS::CleanRooms::ConfiguredTable
      x-identifiers:
        - ConfiguredTableIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConfiguredTableIdentifier') as configured_table_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND region = 'us-east-1'
    configured_table_tags:
      name: configured_table_tags
      id: aws.cleanrooms.configured_table_tags
      x-cfn-schema-name: ConfiguredTable
      x-cfn-type-name: AWS::CleanRooms::ConfiguredTable
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.AllowedColumns') as allowed_columns,
              JSON_EXTRACT(detail.Properties, '$.AnalysisMethod') as analysis_method,
              JSON_EXTRACT(detail.Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.AnalysisRules') as analysis_rules,
              JSON_EXTRACT(detail.Properties, '$.TableReference') as table_reference
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
              AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'AllowedColumns') as allowed_columns,
                json_extract_path_text(detail.Properties, 'AnalysisMethod') as analysis_method,
                json_extract_path_text(detail.Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'AnalysisRules') as analysis_rules,
                json_extract_path_text(detail.Properties, 'TableReference') as table_reference
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTable'
                AND listing.region = 'us-east-1'
    configured_table_associations:
      name: configured_table_associations
      id: aws.cleanrooms.configured_table_associations
      x-cfn-schema-name: ConfiguredTableAssociation
      x-cfn-type-name: AWS::CleanRooms::ConfiguredTableAssociation
      x-identifiers:
        - ConfiguredTableAssociationIdentifier
        - MembershipIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ConfiguredTableAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::ConfiguredTableAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::ConfiguredTableAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::ConfiguredTableAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/configured_table_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/configured_table_associations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/configured_table_associations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
              JSON_EXTRACT(Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.ConfiguredTableAssociationAnalysisRules') as configured_table_association_analysis_rules
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
              AND data__Identifier = '<ConfiguredTableAssociationIdentifier>|<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                JSON_EXTRACT(detail.Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.ConfiguredTableAssociationAnalysisRules') as configured_table_association_analysis_rules
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                  json_extract_path_text(Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'ConfiguredTableAssociationAnalysisRules') as configured_table_association_analysis_rules
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                  AND data__Identifier = '<ConfiguredTableAssociationIdentifier>|<MembershipIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                    json_extract_path_text(detail.Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'ConfiguredTableAssociationAnalysisRules') as configured_table_association_analysis_rules
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                    AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                    AND listing.region = 'us-east-1'
    configured_table_associations_list_only:
      name: configured_table_associations_list_only
      id: aws.cleanrooms.configured_table_associations_list_only
      x-cfn-schema-name: ConfiguredTableAssociation
      x-cfn-type-name: AWS::CleanRooms::ConfiguredTableAssociation
      x-identifiers:
        - ConfiguredTableAssociationIdentifier
        - MembershipIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND region = 'us-east-1'
    configured_table_association_tags:
      name: configured_table_association_tags
      id: aws.cleanrooms.configured_table_association_tags
      x-cfn-schema-name: ConfiguredTableAssociation
      x-cfn-type-name: AWS::CleanRooms::ConfiguredTableAssociation
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
              JSON_EXTRACT(detail.Properties, '$.ConfiguredTableIdentifier') as configured_table_identifier,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.ConfiguredTableAssociationAnalysisRules') as configured_table_association_analysis_rules
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
              AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'ConfiguredTableAssociationIdentifier') as configured_table_association_identifier,
                json_extract_path_text(detail.Properties, 'ConfiguredTableIdentifier') as configured_table_identifier,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'ConfiguredTableAssociationAnalysisRules') as configured_table_association_analysis_rules
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND detail.data__TypeName = 'AWS::CleanRooms::ConfiguredTableAssociation'
                AND listing.region = 'us-east-1'
    id_mapping_tables:
      name: id_mapping_tables
      id: aws.cleanrooms.id_mapping_tables
      x-cfn-schema-name: IdMappingTable
      x-cfn-type-name: AWS::CleanRooms::IdMappingTable
      x-identifiers:
        - IdMappingTableIdentifier
        - MembershipIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IdMappingTable&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::IdMappingTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::IdMappingTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::IdMappingTable"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/id_mapping_tables/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/id_mapping_tables/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/id_mapping_tables/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IdMappingTableIdentifier') as id_mapping_table_identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.InputReferenceConfig') as input_reference_config,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InputReferenceProperties') as input_reference_properties,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::IdMappingTable'
              AND data__Identifier = '<IdMappingTableIdentifier>|<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IdMappingTableIdentifier') as id_mapping_table_identifier,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.InputReferenceConfig') as input_reference_config,
                JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
                JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
                JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.InputReferenceProperties') as input_reference_properties,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                AND detail.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IdMappingTableIdentifier') as id_mapping_table_identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'InputReferenceConfig') as input_reference_config,
                  json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                  json_extract_path_text(Properties, 'MembershipArn') as membership_arn,
                  json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                  json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'InputReferenceProperties') as input_reference_properties,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                  AND data__Identifier = '<IdMappingTableIdentifier>|<MembershipIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IdMappingTableIdentifier') as id_mapping_table_identifier,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'InputReferenceConfig') as input_reference_config,
                    json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                    json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                    json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                    json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'InputReferenceProperties') as input_reference_properties,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                    AND detail.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                    AND listing.region = 'us-east-1'
    id_mapping_tables_list_only:
      name: id_mapping_tables_list_only
      id: aws.cleanrooms.id_mapping_tables_list_only
      x-cfn-schema-name: IdMappingTable
      x-cfn-type-name: AWS::CleanRooms::IdMappingTable
      x-identifiers:
        - IdMappingTableIdentifier
        - MembershipIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdMappingTableIdentifier') as id_mapping_table_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::IdMappingTable'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IdMappingTableIdentifier') as id_mapping_table_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                AND region = 'us-east-1'
    id_mapping_table_tags:
      name: id_mapping_table_tags
      id: aws.cleanrooms.id_mapping_table_tags
      x-cfn-schema-name: IdMappingTable
      x-cfn-type-name: AWS::CleanRooms::IdMappingTable
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.IdMappingTableIdentifier') as id_mapping_table_identifier,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.InputReferenceConfig') as input_reference_config,
              JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.InputReferenceProperties') as input_reference_properties,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
              AND detail.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'IdMappingTableIdentifier') as id_mapping_table_identifier,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'InputReferenceConfig') as input_reference_config,
                json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'InputReferenceProperties') as input_reference_properties,
                json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                AND detail.data__TypeName = 'AWS::CleanRooms::IdMappingTable'
                AND listing.region = 'us-east-1'
    id_namespace_associations:
      name: id_namespace_associations
      id: aws.cleanrooms.id_namespace_associations
      x-cfn-schema-name: IdNamespaceAssociation
      x-cfn-type-name: AWS::CleanRooms::IdNamespaceAssociation
      x-identifiers:
        - IdNamespaceAssociationIdentifier
        - MembershipIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IdNamespaceAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::IdNamespaceAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::IdNamespaceAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::IdNamespaceAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/id_namespace_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/id_namespace_associations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/id_namespace_associations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.InputReferenceConfig') as input_reference_config,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.IdMappingConfig') as id_mapping_config,
              JSON_EXTRACT(Properties, '$.InputReferenceProperties') as input_reference_properties
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
              AND data__Identifier = '<IdNamespaceAssociationIdentifier>|<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
                JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
                JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
                JSON_EXTRACT(detail.Properties, '$.InputReferenceConfig') as input_reference_config,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.IdMappingConfig') as id_mapping_config,
                JSON_EXTRACT(detail.Properties, '$.InputReferenceProperties') as input_reference_properties
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                AND detail.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                  json_extract_path_text(Properties, 'MembershipArn') as membership_arn,
                  json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                  json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                  json_extract_path_text(Properties, 'InputReferenceConfig') as input_reference_config,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'IdMappingConfig') as id_mapping_config,
                  json_extract_path_text(Properties, 'InputReferenceProperties') as input_reference_properties
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                  AND data__Identifier = '<IdNamespaceAssociationIdentifier>|<MembershipIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                    json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                    json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                    json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                    json_extract_path_text(detail.Properties, 'InputReferenceConfig') as input_reference_config,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'IdMappingConfig') as id_mapping_config,
                    json_extract_path_text(detail.Properties, 'InputReferenceProperties') as input_reference_properties
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                    AND detail.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                    AND listing.region = 'us-east-1'
    id_namespace_associations_list_only:
      name: id_namespace_associations_list_only
      id: aws.cleanrooms.id_namespace_associations_list_only
      x-cfn-schema-name: IdNamespaceAssociation
      x-cfn-type-name: AWS::CleanRooms::IdNamespaceAssociation
      x-identifiers:
        - IdNamespaceAssociationIdentifier
        - MembershipIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                AND region = 'us-east-1'
    id_namespace_association_tags:
      name: id_namespace_association_tags
      id: aws.cleanrooms.id_namespace_association_tags
      x-cfn-schema-name: IdNamespaceAssociation
      x-cfn-type-name: AWS::CleanRooms::IdNamespaceAssociation
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(detail.Properties, '$.InputReferenceConfig') as input_reference_config,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.IdMappingConfig') as id_mapping_config,
              JSON_EXTRACT(detail.Properties, '$.InputReferenceProperties') as input_reference_properties
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
              AND detail.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'IdNamespaceAssociationIdentifier') as id_namespace_association_identifier,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(detail.Properties, 'InputReferenceConfig') as input_reference_config,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'IdMappingConfig') as id_mapping_config,
                json_extract_path_text(detail.Properties, 'InputReferenceProperties') as input_reference_properties
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                AND detail.data__TypeName = 'AWS::CleanRooms::IdNamespaceAssociation'
                AND listing.region = 'us-east-1'
    memberships:
      name: memberships
      id: aws.cleanrooms.memberships
      x-cfn-schema-name: Membership
      x-cfn-type-name: AWS::CleanRooms::Membership
      x-identifiers:
        - MembershipIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Membership&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::Membership"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::Membership"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::Membership"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/memberships/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.CollaborationCreatorAccountId') as collaboration_creator_account_id,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(Properties, '$.QueryLogStatus') as query_log_status,
              JSON_EXTRACT(Properties, '$.DefaultResultConfiguration') as default_result_configuration,
              JSON_EXTRACT(Properties, '$.PaymentConfiguration') as payment_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Membership'
              AND data__Identifier = '<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationCreatorAccountId') as collaboration_creator_account_id,
                JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
                JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
                JSON_EXTRACT(detail.Properties, '$.QueryLogStatus') as query_log_status,
                JSON_EXTRACT(detail.Properties, '$.DefaultResultConfiguration') as default_result_configuration,
                JSON_EXTRACT(detail.Properties, '$.PaymentConfiguration') as payment_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::Membership'
                AND detail.data__TypeName = 'AWS::CleanRooms::Membership'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                  json_extract_path_text(Properties, 'CollaborationCreatorAccountId') as collaboration_creator_account_id,
                  json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                  json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier,
                  json_extract_path_text(Properties, 'QueryLogStatus') as query_log_status,
                  json_extract_path_text(Properties, 'DefaultResultConfiguration') as default_result_configuration,
                  json_extract_path_text(Properties, 'PaymentConfiguration') as payment_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::Membership'
                  AND data__Identifier = '<MembershipIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                    json_extract_path_text(detail.Properties, 'CollaborationCreatorAccountId') as collaboration_creator_account_id,
                    json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                    json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                    json_extract_path_text(detail.Properties, 'QueryLogStatus') as query_log_status,
                    json_extract_path_text(detail.Properties, 'DefaultResultConfiguration') as default_result_configuration,
                    json_extract_path_text(detail.Properties, 'PaymentConfiguration') as payment_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::Membership'
                    AND detail.data__TypeName = 'AWS::CleanRooms::Membership'
                    AND listing.region = 'us-east-1'
    memberships_list_only:
      name: memberships_list_only
      id: aws.cleanrooms.memberships_list_only
      x-cfn-schema-name: Membership
      x-cfn-type-name: AWS::CleanRooms::Membership
      x-identifiers:
        - MembershipIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Membership'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::Membership'
                AND region = 'us-east-1'
    membership_tags:
      name: membership_tags
      id: aws.cleanrooms.membership_tags
      x-cfn-schema-name: Membership
      x-cfn-type-name: AWS::CleanRooms::Membership
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationCreatorAccountId') as collaboration_creator_account_id,
              JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier,
              JSON_EXTRACT(detail.Properties, '$.QueryLogStatus') as query_log_status,
              JSON_EXTRACT(detail.Properties, '$.DefaultResultConfiguration') as default_result_configuration,
              JSON_EXTRACT(detail.Properties, '$.PaymentConfiguration') as payment_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::Membership'
              AND detail.data__TypeName = 'AWS::CleanRooms::Membership'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(detail.Properties, 'CollaborationCreatorAccountId') as collaboration_creator_account_id,
                json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier,
                json_extract_path_text(detail.Properties, 'QueryLogStatus') as query_log_status,
                json_extract_path_text(detail.Properties, 'DefaultResultConfiguration') as default_result_configuration,
                json_extract_path_text(detail.Properties, 'PaymentConfiguration') as payment_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::Membership'
                AND detail.data__TypeName = 'AWS::CleanRooms::Membership'
                AND listing.region = 'us-east-1'
    privacy_budget_templates:
      name: privacy_budget_templates
      id: aws.cleanrooms.privacy_budget_templates
      x-cfn-schema-name: PrivacyBudgetTemplate
      x-cfn-type-name: AWS::CleanRooms::PrivacyBudgetTemplate
      x-identifiers:
        - PrivacyBudgetTemplateIdentifier
        - MembershipIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PrivacyBudgetTemplate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::PrivacyBudgetTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::PrivacyBudgetTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CleanRooms::PrivacyBudgetTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/privacy_budget_templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/privacy_budget_templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/privacy_budget_templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(Properties, '$.PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AutoRefresh') as auto_refresh,
              JSON_EXTRACT(Properties, '$.PrivacyBudgetType') as privacy_budget_type,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
              AND data__Identifier = '<PrivacyBudgetTemplateIdentifier>|<MembershipIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
                JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
                JSON_EXTRACT(detail.Properties, '$.PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AutoRefresh') as auto_refresh,
                JSON_EXTRACT(detail.Properties, '$.PrivacyBudgetType') as privacy_budget_type,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
                JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
                JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                AND detail.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CollaborationArn') as collaboration_arn,
                  json_extract_path_text(Properties, 'CollaborationIdentifier') as collaboration_identifier,
                  json_extract_path_text(Properties, 'PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AutoRefresh') as auto_refresh,
                  json_extract_path_text(Properties, 'PrivacyBudgetType') as privacy_budget_type,
                  json_extract_path_text(Properties, 'Parameters') as parameters,
                  json_extract_path_text(Properties, 'MembershipArn') as membership_arn,
                  json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                  AND data__Identifier = '<PrivacyBudgetTemplateIdentifier>|<MembershipIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                    json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                    json_extract_path_text(detail.Properties, 'PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AutoRefresh') as auto_refresh,
                    json_extract_path_text(detail.Properties, 'PrivacyBudgetType') as privacy_budget_type,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                    json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                    json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                    AND detail.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                    AND listing.region = 'us-east-1'
    privacy_budget_templates_list_only:
      name: privacy_budget_templates_list_only
      id: aws.cleanrooms.privacy_budget_templates_list_only
      x-cfn-schema-name: PrivacyBudgetTemplate
      x-cfn-type-name: AWS::CleanRooms::PrivacyBudgetTemplate
      x-identifiers:
        - PrivacyBudgetTemplateIdentifier
        - MembershipIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
              JSON_EXTRACT(Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
                json_extract_path_text(Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                AND region = 'us-east-1'
    privacy_budget_template_tags:
      name: privacy_budget_template_tags
      id: aws.cleanrooms.privacy_budget_template_tags
      x-cfn-schema-name: PrivacyBudgetTemplate
      x-cfn-type-name: AWS::CleanRooms::PrivacyBudgetTemplate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationArn') as collaboration_arn,
              JSON_EXTRACT(detail.Properties, '$.CollaborationIdentifier') as collaboration_identifier,
              JSON_EXTRACT(detail.Properties, '$.PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
              JSON_EXTRACT(detail.Properties, '$.AutoRefresh') as auto_refresh,
              JSON_EXTRACT(detail.Properties, '$.PrivacyBudgetType') as privacy_budget_type,
              JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(detail.Properties, '$.MembershipArn') as membership_arn,
              JSON_EXTRACT(detail.Properties, '$.MembershipIdentifier') as membership_identifier
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
              AND detail.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CollaborationArn') as collaboration_arn,
                json_extract_path_text(detail.Properties, 'CollaborationIdentifier') as collaboration_identifier,
                json_extract_path_text(detail.Properties, 'PrivacyBudgetTemplateIdentifier') as privacy_budget_template_identifier,
                json_extract_path_text(detail.Properties, 'AutoRefresh') as auto_refresh,
                json_extract_path_text(detail.Properties, 'PrivacyBudgetType') as privacy_budget_type,
                json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                json_extract_path_text(detail.Properties, 'MembershipArn') as membership_arn,
                json_extract_path_text(detail.Properties, 'MembershipIdentifier') as membership_identifier
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                AND detail.data__TypeName = 'AWS::CleanRooms::PrivacyBudgetTemplate'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AnalysisTemplate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAnalysisTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAnalysisTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Collaboration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCollaboration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCollaborationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ConfiguredTable&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConfiguredTable
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConfiguredTableRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ConfiguredTableAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateConfiguredTableAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateConfiguredTableAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IdMappingTable&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIdMappingTable
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIdMappingTableRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IdNamespaceAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIdNamespaceAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIdNamespaceAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Membership&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMembership
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMembershipRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PrivacyBudgetTemplate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePrivacyBudgetTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePrivacyBudgetTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
