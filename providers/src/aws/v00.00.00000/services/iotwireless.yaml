openapi: 3.0.0
info:
  title: IoTWireless
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
    Destination:
      type: object
      properties:
        Name:
          description: Unique name of destination
          type: string
          pattern: '[a-zA-Z0-9:_-]+'
          maxLength: 128
        Expression:
          description: Destination expression
          type: string
        ExpressionType:
          description: Must be RuleName
          type: string
          enum:
            - RuleName
            - MqttTopic
        Description:
          description: Destination description
          type: string
          maxLength: 2048
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        RoleArn:
          description: AWS role ARN that grants access
          type: string
          minLength: 20
          maxLength: 2048
        Arn:
          description: Destination arn. Returned after successful create.
          type: string
      required:
        - Name
        - Expression
        - ExpressionType
        - RoleArn
      x-stackql-resource-name: destination
      x-stackql-primaryIdentifier:
        - Name
    LoRaWANDeviceProfile:
      type: object
      additionalProperties: false
      properties:
        SupportsClassB:
          type: boolean
        ClassBTimeout:
          type: integer
          minimum: 0
          maximum: 1000
        PingSlotPeriod:
          type: integer
          minimum: 128
          maximum: 4096
        PingSlotDr:
          type: integer
          minimum: 0
          maximum: 15
        PingSlotFreq:
          type: integer
          minimum: 1000000
          maximum: 16700000
        SupportsClassC:
          type: boolean
        ClassCTimeout:
          type: integer
          minimum: 0
          maximum: 1000
        MacVersion:
          type: string
          maxLength: 64
        RegParamsRevision:
          type: string
          maxLength: 64
        RxDelay1:
          type: integer
          minimum: 0
          maximum: 15
        RxDrOffset1:
          type: integer
          minimum: 0
          maximum: 7
        RxFreq2:
          type: integer
          minimum: 1000000
          maximum: 16700000
        RxDataRate2:
          type: integer
          minimum: 0
          maximum: 15
        FactoryPresetFreqsList:
          type: array
          maxItems: 20
          items:
            $ref: '#/components/schemas/FactoryPresetFreq'
        MaxEirp:
          type: integer
          minimum: 0
          maximum: 15
        MaxDutyCycle:
          type: integer
          minimum: 0
          maximum: 100
        SupportsJoin:
          type: boolean
        RfRegion:
          type: string
          maxLength: 64
        Supports32BitFCnt:
          type: boolean
    FactoryPresetFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    DeviceProfile:
      type: object
      properties:
        Name:
          description: Name of service profile
          type: string
          maxLength: 256
        LoRaWAN:
          description: LoRaWANDeviceProfile supports all LoRa specific attributes for service profile for CreateDeviceProfile operation
          $ref: '#/components/schemas/LoRaWANDeviceProfile'
        Tags:
          description: A list of key-value pairs that contain metadata for the device profile.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Service profile Arn. Returned after successful create.
          type: string
        Id:
          description: Service profile Id. Returned after successful create.
          type: string
          maxLength: 256
      required: []
      x-stackql-resource-name: device_profile
      x-stackql-primaryIdentifier:
        - Id
    LoRaWAN:
      type: object
      properties:
        RfRegion:
          description: Multicast group LoRaWAN RF region
          type: string
          minLength: 1
          maxLength: 64
        DlClass:
          description: Multicast group LoRaWAN DL Class
          type: string
          minLength: 1
          maxLength: 64
        NumberOfDevicesRequested:
          description: Multicast group number of devices requested. Returned after successful read.
          type: integer
        NumberOfDevicesInGroup:
          description: Multicast group number of devices in group. Returned after successful read.
          type: integer
      additionalProperties: false
      required:
        - RfRegion
        - DlClass
    FuotaTask:
      type: object
      properties:
        Name:
          description: Name of FUOTA task
          type: string
          maxLength: 256
        Description:
          description: FUOTA task description
          type: string
          maxLength: 2048
        LoRaWAN:
          description: FUOTA task LoRaWAN
          $ref: '#/components/schemas/LoRaWAN'
        FirmwareUpdateImage:
          description: FUOTA task firmware update image binary S3 link
          type: string
          minLength: 1
          maxLength: 2048
        FirmwareUpdateRole:
          description: FUOTA task firmware IAM role for reading S3
          type: string
          minLength: 1
          maxLength: 256
        Arn:
          description: FUOTA task arn. Returned after successful create.
          type: string
        Id:
          description: FUOTA task id. Returned after successful create.
          type: string
          maxLength: 256
        Tags:
          description: A list of key-value pairs that contain metadata for the FUOTA task.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        FuotaTaskStatus:
          description: FUOTA task status. Returned after successful read.
          type: string
        AssociateWirelessDevice:
          description: Wireless device to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateWirelessDevice:
          description: Wireless device to disassociate. Only for update request.
          type: string
          maxLength: 256
        AssociateMulticastGroup:
          description: Multicast group to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateMulticastGroup:
          description: Multicast group to disassociate. Only for update request.
          type: string
          maxLength: 256
      required:
        - LoRaWAN
        - FirmwareUpdateImage
        - FirmwareUpdateRole
      x-stackql-resource-name: fuota_task
      x-stackql-primaryIdentifier:
        - Id
    MulticastGroup:
      type: object
      properties:
        Name:
          description: Name of Multicast group
          type: string
          maxLength: 256
        Description:
          description: Multicast group description
          type: string
          maxLength: 2048
        LoRaWAN:
          description: Multicast group LoRaWAN
          $ref: '#/components/schemas/LoRaWAN'
        Arn:
          description: Multicast group arn. Returned after successful create.
          type: string
        Id:
          description: Multicast group id. Returned after successful create.
          type: string
          maxLength: 256
        Tags:
          description: A list of key-value pairs that contain metadata for the Multicast group.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Status:
          description: Multicast group status. Returned after successful read.
          type: string
        AssociateWirelessDevice:
          description: Wireless device to associate. Only for update request.
          type: string
          maxLength: 256
        DisassociateWirelessDevice:
          description: Wireless device to disassociate. Only for update request.
          type: string
          maxLength: 256
      required:
        - LoRaWAN
      x-stackql-resource-name: multicast_group
      x-stackql-primaryIdentifier:
        - Id
    WirelessDeviceFrameInfo:
      type: string
      enum:
        - ENABLED
        - DISABLED
    LogLevel:
      type: string
      enum:
        - INFO
        - ERROR
        - DISABLED
    NetworkAnalyzerConfiguration:
      type: object
      properties:
        Name:
          description: Name of the network analyzer configuration
          type: string
          pattern: ^[a-zA-Z0-9-_]+$
          maxLength: 1024
        Description:
          description: The description of the new resource
          type: string
          maxLength: 2048
        TraceContent:
          description: Trace content for your wireless gateway and wireless device resources
          type: object
          additionalProperties: false
          properties:
            WirelessDeviceFrameInfo:
              $ref: '#/components/schemas/WirelessDeviceFrameInfo'
            LogLevel:
              $ref: '#/components/schemas/LogLevel'
        WirelessDevices:
          description: List of wireless gateway resources that have been added to the network analyzer configuration
          type: array
          x-insertionOrder: false
          items:
            type: string
          maxItems: 250
        WirelessGateways:
          description: List of wireless gateway resources that have been added to the network analyzer configuration
          type: array
          x-insertionOrder: false
          items:
            type: string
          maxItems: 250
        Arn:
          description: Arn for network analyzer configuration, Returned upon successful create.
          type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: network_analyzer_configuration
      x-stackql-primaryIdentifier:
        - Name
    SidewalkAccountInfo:
      type: object
      additionalProperties: false
      properties:
        AppServerPrivateKey:
          type: string
          pattern: '[a-fA-F0-9]{64}'
          minLength: 1
          maxLength: 4096
      required:
        - AppServerPrivateKey
    SidewalkAccountInfoWithFingerprint:
      type: object
      additionalProperties: false
      properties:
        AmazonId:
          type: string
          maxLength: 2048
        Fingerprint:
          type: string
          pattern: '[a-fA-F0-9]{64}'
          minLength: 64
          maxLength: 64
        Arn:
          type: string
    SidewalkUpdateAccount:
      type: object
      additionalProperties: false
      properties:
        AppServerPrivateKey:
          type: string
          pattern: '[a-fA-F0-9]{64}'
          minLength: 1
          maxLength: 4096
    PartnerAccount:
      type: object
      properties:
        Sidewalk:
          description: The Sidewalk account credentials.
          $ref: '#/components/schemas/SidewalkAccountInfo'
        PartnerAccountId:
          description: The partner account ID to disassociate from the AWS account
          type: string
          maxLength: 256
        PartnerType:
          description: The partner type
          type: string
          enum:
            - Sidewalk
        SidewalkResponse:
          description: The Sidewalk account credentials.
          $ref: '#/components/schemas/SidewalkAccountInfoWithFingerprint'
        AccountLinked:
          description: Whether the partner account is linked to the AWS account.
          type: boolean
        SidewalkUpdate:
          description: The Sidewalk account credentials.
          $ref: '#/components/schemas/SidewalkUpdateAccount'
        Fingerprint:
          description: The fingerprint of the Sidewalk application server private key.
          type: string
        Arn:
          description: PartnerAccount arn. Returned after successful create.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: partner_account
      x-stackql-primaryIdentifier:
        - PartnerAccountId
    LoRaWANServiceProfile:
      type: object
      additionalProperties: false
      properties:
        UlRate:
          type: integer
        UlBucketSize:
          type: integer
        UlRatePolicy:
          type: string
        DlRate:
          type: integer
        DlBucketSize:
          type: integer
        DlRatePolicy:
          type: string
        AddGwMetadata:
          type: boolean
        DevStatusReqFreq:
          type: integer
        ReportDevStatusBattery:
          type: boolean
        ReportDevStatusMargin:
          type: boolean
        DrMin:
          type: integer
        DrMax:
          type: integer
        ChannelMask:
          type: string
        PrAllowed:
          type: boolean
        HrAllowed:
          type: boolean
        RaAllowed:
          type: boolean
        NwkGeoLoc:
          type: boolean
        TargetPer:
          type: integer
        MinGwDiversity:
          type: integer
    ServiceProfile:
      type: object
      properties:
        Name:
          description: Name of service profile
          type: string
          maxLength: 256
        LoRaWAN:
          description: LoRaWAN supports all LoRa specific attributes for service profile for CreateServiceProfile operation
          $ref: '#/components/schemas/LoRaWANServiceProfile'
        Tags:
          description: A list of key-value pairs that contain metadata for the service profile.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Service profile Arn. Returned after successful create.
          type: string
        Id:
          description: Service profile Id. Returned after successful create.
          type: string
          maxLength: 256
      required: []
      x-stackql-resource-name: service_profile
      x-stackql-primaryIdentifier:
        - Id
    LoRaWANGatewayVersion:
      type: object
      additionalProperties: false
      properties:
        PackageVersion:
          type: string
          minLength: 1
          maxLength: 32
        Model:
          type: string
          minLength: 1
          maxLength: 4096
        Station:
          type: string
          minLength: 1
          maxLength: 4096
    LoRaWANUpdateGatewayTaskCreate:
      type: object
      additionalProperties: false
      properties:
        UpdateSignature:
          type: string
          minLength: 1
          maxLength: 4096
        SigKeyCrc:
          type: integer
          format: int64
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
    UpdateWirelessGatewayTaskCreate:
      type: object
      additionalProperties: false
      properties:
        UpdateDataSource:
          type: string
          minLength: 1
          maxLength: 4096
        UpdateDataRole:
          type: string
          minLength: 1
          maxLength: 2048
        LoRaWAN:
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskCreate'
    LoRaWANUpdateGatewayTaskEntry:
      type: object
      additionalProperties: false
      properties:
        CurrentVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
        UpdateVersion:
          $ref: '#/components/schemas/LoRaWANGatewayVersion'
    TaskDefinition:
      type: object
      properties:
        Name:
          description: The name of the new resource.
          type: string
          minLength: 1
          maxLength: 256
        AutoCreateTasks:
          description: Whether to automatically create tasks using this task definition for all gateways with the specified current version. If false, the task must me created by calling CreateWirelessGatewayTask.
          type: boolean
        Update:
          description: Information about the gateways to update.
          $ref: '#/components/schemas/UpdateWirelessGatewayTaskCreate'
        LoRaWANUpdateGatewayTaskEntry:
          description: The list of task definitions.
          $ref: '#/components/schemas/LoRaWANUpdateGatewayTaskEntry'
        Id:
          description: The ID of the new wireless gateway task definition
          type: string
          pattern: '[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}'
        TaskDefinitionType:
          description: A filter to list only the wireless gateway task definitions that use this task definition type
          type: string
          enum:
            - UPDATE
        Arn:
          description: TaskDefinition arn. Returned after successful create.
          type: string
        Tags:
          description: A list of key-value pairs that contain metadata for the destination.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AutoCreateTasks
      x-stackql-resource-name: task_definition
      x-stackql-primaryIdentifier:
        - Id
    OtaaV10x:
      type: object
      additionalProperties: false
      properties:
        AppKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppEui:
          type: string
          pattern: '[a-fA-F0-9]{16}'
      required:
        - AppKey
        - AppEui
    OtaaV11:
      type: object
      additionalProperties: false
      properties:
        AppKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        NwkKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        JoinEui:
          type: string
          pattern: '[a-fA-F0-9]{16}'
      required:
        - AppKey
        - NwkKey
        - JoinEui
    SessionKeysAbpV11:
      type: object
      additionalProperties: false
      properties:
        FNwkSIntKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        SNwkSIntKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        NwkSEncKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
      required:
        - FNwkSIntKey
        - SNwkSIntKey
        - NwkSEncKey
        - AppSKey
    AbpV11:
      type: object
      additionalProperties: false
      properties:
        DevAddr:
          type: string
          pattern: '[a-fA-F0-9]{8}'
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV11'
      required:
        - DevAddr
        - SessionKeys
    SessionKeysAbpV10x:
      type: object
      additionalProperties: false
      properties:
        NwkSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
        AppSKey:
          type: string
          pattern: '[a-fA-F0-9]{32}'
      required:
        - NwkSKey
        - AppSKey
    AbpV10x:
      type: object
      additionalProperties: false
      properties:
        DevAddr:
          type: string
          pattern: '[a-fA-F0-9]{8}'
        SessionKeys:
          $ref: '#/components/schemas/SessionKeysAbpV10x'
      required:
        - DevAddr
        - SessionKeys
    LoRaWANDevice:
      type: object
      additionalProperties: false
      properties:
        DevEui:
          type: string
          pattern: '[a-f0-9]{16}'
        DeviceProfileId:
          type: string
          maxLength: 256
        ServiceProfileId:
          type: string
          maxLength: 256
        OtaaV11:
          $ref: '#/components/schemas/OtaaV11'
        OtaaV10x:
          $ref: '#/components/schemas/OtaaV10x'
        AbpV11:
          $ref: '#/components/schemas/AbpV11'
        AbpV10x:
          $ref: '#/components/schemas/AbpV10x'
      oneOf:
        - required:
            - OtaaV11
        - required:
            - OtaaV10x
        - required:
            - AbpV11
        - required:
            - AbpV10x
    WirelessDevice:
      type: object
      properties:
        Type:
          description: Wireless device type, currently only Sidewalk and LoRa
          type: string
          enum:
            - Sidewalk
            - LoRaWAN
        Name:
          description: Wireless device name
          type: string
          maxLength: 256
        Description:
          description: Wireless device description
          type: string
          maxLength: 2048
        DestinationName:
          description: Wireless device destination name
          type: string
          maxLength: 128
        LoRaWAN:
          description: The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
          $ref: '#/components/schemas/LoRaWANDevice'
        Tags:
          description: A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: Wireless device arn. Returned after successful create.
          type: string
        Id:
          description: Wireless device Id. Returned after successful create.
          type: string
          maxLength: 256
        ThingArn:
          description: Thing arn. Passed into update to associate Thing with Wireless device.
          type: string
        ThingName:
          description: Thing Arn. If there is a Thing created, this can be returned with a Get call.
          type: string
        LastUplinkReceivedAt:
          description: The date and time when the most recent uplink was received.
          type: string
      required:
        - Type
        - DestinationName
      x-stackql-resource-name: wireless_device
      x-stackql-primaryIdentifier:
        - Id
    DeviceCreationFileList:
      description: sidewalk create device's file path
      type: array
      items:
        type: string
        maxLength: 1024
    Role:
      description: sidewalk role
      type: string
      maxLength: 2048
    WirelessDeviceImportTask:
      type: object
      properties:
        Id:
          description: Id for Wireless Device Import Task, Returned upon successful start.
          type: string
          maxLength: 256
        Arn:
          description: Arn for Wireless Device Import Task, Returned upon successful start.
          type: string
          maxLength: 128
        DestinationName:
          description: Destination Name for import task
          type: string
          pattern: '[a-zA-Z0-9-_]+'
          maxLength: 128
        CreationDate:
          description: CreationDate for import task
          type: string
        Sidewalk:
          description: sidewalk contain file for created device and role
          type: object
          additionalProperties: false
          properties:
            SidewalkManufacturingSn:
              type: string
              maxLength: 64
            DeviceCreationFile:
              type: string
              maxLength: 1024
            DeviceCreationFileList:
              $ref: '#/components/schemas/DeviceCreationFileList'
            Role:
              $ref: '#/components/schemas/Role'
          oneOf:
            - allOf:
                - required:
                    - DeviceCreationFile
                - required:
                    - Role
            - required:
                - SidewalkManufacturingSn
        Status:
          description: Status for import task
          type: string
          enum:
            - INITIALIZING
            - INITIALIZED
            - PENDING
            - COMPLETE
            - FAILED
            - DELETING
        StatusReason:
          description: StatusReason for import task
          type: string
        InitializedImportedDevicesCount:
          description: Initialized Imported Devices Count
          type: integer
        PendingImportedDevicesCount:
          description: Pending Imported Devices Count
          type: integer
        OnboardedImportedDevicesCount:
          description: Onboarded Imported Devices Count
          type: integer
        FailedImportedDevicesCount:
          description: Failed Imported Devices Count
          type: integer
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DestinationName
        - Sidewalk
      x-stackql-resource-name: wireless_device_import_task
      x-stackql-primaryIdentifier:
        - Id
    LoRaWANGateway:
      type: object
      additionalProperties: false
      properties:
        GatewayEui:
          type: string
          pattern: ^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$
        RfRegion:
          type: string
          maxLength: 64
      required:
        - GatewayEui
        - RfRegion
    WirelessGateway:
      type: object
      properties:
        Name:
          description: Name of Wireless Gateway.
          type: string
          maxLength: 256
        Description:
          description: Description of Wireless Gateway.
          type: string
          maxLength: 2048
        Tags:
          description: A list of key-value pairs that contain metadata for the gateway.
          type: array
          uniqueItems: true
          maxItems: 200
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        LoRaWAN:
          description: The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Gateway.
          $ref: '#/components/schemas/LoRaWANGateway'
        Arn:
          description: Arn for Wireless Gateway. Returned upon successful create.
          type: string
        Id:
          description: Id for Wireless Gateway. Returned upon successful create.
          type: string
          maxLength: 256
        ThingArn:
          description: Thing Arn. Passed into Update to associate a Thing with the Wireless Gateway.
          type: string
        ThingName:
          description: Thing Name. If there is a Thing created, this can be returned with a Get call.
          type: string
        LastUplinkReceivedAt:
          description: The date and time when the most recent uplink was received.
          type: string
      required:
        - LoRaWAN
      x-stackql-resource-name: wireless_gateway
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    destinations:
      name: destinations
      id: aws.iotwireless.destinations
      x-cfn-schema-name: Destination
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::Destination'
    destination:
      name: destination
      id: aws.iotwireless.destination
      x-cfn-schema-name: Destination
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Expression') as expression,
              JSON_EXTRACT(Properties, '$.ExpressionType') as expression_type,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::Destination'
    device_profiles:
      name: device_profiles
      id: aws.iotwireless.device_profiles
      x-cfn-schema-name: DeviceProfile
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::DeviceProfile'
    device_profile:
      name: device_profile
      id: aws.iotwireless.device_profile
      x-cfn-schema-name: DeviceProfile
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.LoRaWAN.SupportsClassB') as lo_ra_wa_nsupports_class_b,
              JSON_EXTRACT(Properties, '$.LoRaWAN.ClassBTimeout') as lo_ra_wa_nclass_btimeout,
              JSON_EXTRACT(Properties, '$.LoRaWAN.PingSlotPeriod') as lo_ra_wa_nping_slot_period,
              JSON_EXTRACT(Properties, '$.LoRaWAN.PingSlotDr') as lo_ra_wa_nping_slot_dr,
              JSON_EXTRACT(Properties, '$.LoRaWAN.PingSlotFreq') as lo_ra_wa_nping_slot_freq,
              JSON_EXTRACT(Properties, '$.LoRaWAN.SupportsClassC') as lo_ra_wa_nsupports_class_c,
              JSON_EXTRACT(Properties, '$.LoRaWAN.ClassCTimeout') as lo_ra_wa_nclass_ctimeout,
              JSON_EXTRACT(Properties, '$.LoRaWAN.MacVersion') as lo_ra_wa_nmac_version,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RegParamsRevision') as lo_ra_wa_nreg_params_revision,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RxDelay1') as lo_ra_wa_nrx_delay1,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RxDrOffset1') as lo_ra_wa_nrx_dr_offset1,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RxFreq2') as lo_ra_wa_nrx_freq2,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RxDataRate2') as lo_ra_wa_nrx_data_rate2,
              JSON_EXTRACT(Properties, '$.LoRaWAN.FactoryPresetFreqsList') as lo_ra_wa_nfactory_preset_freqs_list,
              JSON_EXTRACT(Properties, '$.LoRaWAN.MaxEirp') as lo_ra_wa_nmax_eirp,
              JSON_EXTRACT(Properties, '$.LoRaWAN.MaxDutyCycle') as lo_ra_wa_nmax_duty_cycle,
              JSON_EXTRACT(Properties, '$.LoRaWAN.SupportsJoin') as lo_ra_wa_nsupports_join,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as lo_ra_wa_nrf_region,
              JSON_EXTRACT(Properties, '$.LoRaWAN.Supports32BitFCnt') as lo_ra_wa_nsupports32_bit_fcnt,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::DeviceProfile'
    fuota_tasks:
      name: fuota_tasks
      id: aws.iotwireless.fuota_tasks
      x-cfn-schema-name: FuotaTask
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::FuotaTask'
    fuota_task:
      name: fuota_task
      id: aws.iotwireless.fuota_task
      x-cfn-schema-name: FuotaTask
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as lo_ra_wa_nrf_region,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DlClass') as lo_ra_wa_ndl_class,
              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesRequested') as lo_ra_wa_nnumber_of_devices_requested,
              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesInGroup') as lo_ra_wa_nnumber_of_devices_in_group,
              JSON_EXTRACT(Properties, '$.FirmwareUpdateImage') as firmware_update_image,
              JSON_EXTRACT(Properties, '$.FirmwareUpdateRole') as firmware_update_role,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.FuotaTaskStatus') as fuota_task_status,
              JSON_EXTRACT(Properties, '$.AssociateWirelessDevice') as associate_wireless_device,
              JSON_EXTRACT(Properties, '$.DisassociateWirelessDevice') as disassociate_wireless_device,
              JSON_EXTRACT(Properties, '$.AssociateMulticastGroup') as associate_multicast_group,
              JSON_EXTRACT(Properties, '$.DisassociateMulticastGroup') as disassociate_multicast_group
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::FuotaTask'
    multicast_groups:
      name: multicast_groups
      id: aws.iotwireless.multicast_groups
      x-cfn-schema-name: MulticastGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::MulticastGroup'
    multicast_group:
      name: multicast_group
      id: aws.iotwireless.multicast_group
      x-cfn-schema-name: MulticastGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as lo_ra_wa_nrf_region,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DlClass') as lo_ra_wa_ndl_class,
              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesRequested') as lo_ra_wa_nnumber_of_devices_requested,
              JSON_EXTRACT(Properties, '$.LoRaWAN.NumberOfDevicesInGroup') as lo_ra_wa_nnumber_of_devices_in_group,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.AssociateWirelessDevice') as associate_wireless_device,
              JSON_EXTRACT(Properties, '$.DisassociateWirelessDevice') as disassociate_wireless_device
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::MulticastGroup'
    network_analyzer_configurations:
      name: network_analyzer_configurations
      id: aws.iotwireless.network_analyzer_configurations
      x-cfn-schema-name: NetworkAnalyzerConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::NetworkAnalyzerConfiguration'
    network_analyzer_configuration:
      name: network_analyzer_configuration
      id: aws.iotwireless.network_analyzer_configuration
      x-cfn-schema-name: NetworkAnalyzerConfiguration
      x-type: get
      x-identifiers:
        - Name
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.TraceContent') as trace_content,
              JSON_EXTRACT(Properties, '$.WirelessDevices') as wireless_devices,
              JSON_EXTRACT(Properties, '$.WirelessGateways') as wireless_gateways,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::NetworkAnalyzerConfiguration'
    partner_accounts:
      name: partner_accounts
      id: aws.iotwireless.partner_accounts
      x-cfn-schema-name: PartnerAccount
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PartnerAccountId') as partner_account_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::PartnerAccount'
    partner_account:
      name: partner_account
      id: aws.iotwireless.partner_account
      x-cfn-schema-name: PartnerAccount
      x-type: get
      x-identifiers:
        - PartnerAccountId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Sidewalk.AppServerPrivateKey') as sidewalk_app_server_private_key,
              JSON_EXTRACT(Properties, '$.PartnerAccountId') as partner_account_id,
              JSON_EXTRACT(Properties, '$.PartnerType') as partner_type,
              JSON_EXTRACT(Properties, '$.SidewalkResponse.AmazonId') as sidewalk_response_amazon_id,
              JSON_EXTRACT(Properties, '$.SidewalkResponse.Fingerprint') as sidewalk_response_fingerprint,
              JSON_EXTRACT(Properties, '$.SidewalkResponse.Arn') as sidewalk_response_arn,
              JSON_EXTRACT(Properties, '$.AccountLinked') as account_linked,
              JSON_EXTRACT(Properties, '$.SidewalkUpdate.AppServerPrivateKey') as sidewalk_update_app_server_private_key,
              JSON_EXTRACT(Properties, '$.Fingerprint') as fingerprint,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::PartnerAccount'
    service_profiles:
      name: service_profiles
      id: aws.iotwireless.service_profiles
      x-cfn-schema-name: ServiceProfile
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::ServiceProfile'
    service_profile:
      name: service_profile
      id: aws.iotwireless.service_profile
      x-cfn-schema-name: ServiceProfile
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.LoRaWAN.UlRate') as lo_ra_wa_nul_rate,
              JSON_EXTRACT(Properties, '$.LoRaWAN.UlBucketSize') as lo_ra_wa_nul_bucket_size,
              JSON_EXTRACT(Properties, '$.LoRaWAN.UlRatePolicy') as lo_ra_wa_nul_rate_policy,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DlRate') as lo_ra_wa_ndl_rate,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DlBucketSize') as lo_ra_wa_ndl_bucket_size,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DlRatePolicy') as lo_ra_wa_ndl_rate_policy,
              JSON_EXTRACT(Properties, '$.LoRaWAN.AddGwMetadata') as lo_ra_wa_nadd_gw_metadata,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DevStatusReqFreq') as lo_ra_wa_ndev_status_req_freq,
              JSON_EXTRACT(Properties, '$.LoRaWAN.ReportDevStatusBattery') as lo_ra_wa_nreport_dev_status_battery,
              JSON_EXTRACT(Properties, '$.LoRaWAN.ReportDevStatusMargin') as lo_ra_wa_nreport_dev_status_margin,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DrMin') as lo_ra_wa_ndr_min,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DrMax') as lo_ra_wa_ndr_max,
              JSON_EXTRACT(Properties, '$.LoRaWAN.ChannelMask') as lo_ra_wa_nchannel_mask,
              JSON_EXTRACT(Properties, '$.LoRaWAN.PrAllowed') as lo_ra_wa_npr_allowed,
              JSON_EXTRACT(Properties, '$.LoRaWAN.HrAllowed') as lo_ra_wa_nhr_allowed,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RaAllowed') as lo_ra_wa_nra_allowed,
              JSON_EXTRACT(Properties, '$.LoRaWAN.NwkGeoLoc') as lo_ra_wa_nnwk_geo_loc,
              JSON_EXTRACT(Properties, '$.LoRaWAN.TargetPer') as lo_ra_wa_ntarget_per,
              JSON_EXTRACT(Properties, '$.LoRaWAN.MinGwDiversity') as lo_ra_wa_nmin_gw_diversity,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::ServiceProfile'
    task_definitions:
      name: task_definitions
      id: aws.iotwireless.task_definitions
      x-cfn-schema-name: TaskDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::TaskDefinition'
    task_definition:
      name: task_definition
      id: aws.iotwireless.task_definition
      x-cfn-schema-name: TaskDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.AutoCreateTasks') as auto_create_tasks,
              JSON_EXTRACT(Properties, '$.Update.UpdateDataSource') as update_update_data_source,
              JSON_EXTRACT(Properties, '$.Update.UpdateDataRole') as update_update_data_role,
              JSON_EXTRACT(Properties, '$.Update.LoRaWAN') as update_lo_ra_wa_n,
              JSON_EXTRACT(Properties, '$.LoRaWANUpdateGatewayTaskEntry.CurrentVersion') as lo_ra_wa_nupdate_gateway_task_entry_current_version,
              JSON_EXTRACT(Properties, '$.LoRaWANUpdateGatewayTaskEntry.UpdateVersion') as lo_ra_wa_nupdate_gateway_task_entry_update_version,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.TaskDefinitionType') as task_definition_type,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::TaskDefinition'
    wireless_devices:
      name: wireless_devices
      id: aws.iotwireless.wireless_devices
      x-cfn-schema-name: WirelessDevice
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessDevice'
    wireless_device:
      name: wireless_device
      id: aws.iotwireless.wireless_device
      x-cfn-schema-name: WirelessDevice
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DestinationName') as destination_name,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DevEui') as lo_ra_wa_ndev_eui,
              JSON_EXTRACT(Properties, '$.LoRaWAN.DeviceProfileId') as lo_ra_wa_ndevice_profile_id,
              JSON_EXTRACT(Properties, '$.LoRaWAN.ServiceProfileId') as lo_ra_wa_nservice_profile_id,
              JSON_EXTRACT(Properties, '$.LoRaWAN.OtaaV11') as lo_ra_wa_notaa_v11,
              JSON_EXTRACT(Properties, '$.LoRaWAN.OtaaV10x') as lo_ra_wa_notaa_v10x,
              JSON_EXTRACT(Properties, '$.LoRaWAN.AbpV11') as lo_ra_wa_nabp_v11,
              JSON_EXTRACT(Properties, '$.LoRaWAN.AbpV10x') as lo_ra_wa_nabp_v10x,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ThingArn') as thing_arn,
              JSON_EXTRACT(Properties, '$.ThingName') as thing_name,
              JSON_EXTRACT(Properties, '$.LastUplinkReceivedAt') as last_uplink_received_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessDevice'
    wireless_device_import_tasks:
      name: wireless_device_import_tasks
      id: aws.iotwireless.wireless_device_import_tasks
      x-cfn-schema-name: WirelessDeviceImportTask
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessDeviceImportTask'
    wireless_device_import_task:
      name: wireless_device_import_task
      id: aws.iotwireless.wireless_device_import_task
      x-cfn-schema-name: WirelessDeviceImportTask
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DestinationName') as destination_name,
              JSON_EXTRACT(Properties, '$.CreationDate') as creation_date,
              JSON_EXTRACT(Properties, '$.Sidewalk') as sidewalk,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.InitializedImportedDevicesCount') as initialized_imported_devices_count,
              JSON_EXTRACT(Properties, '$.PendingImportedDevicesCount') as pending_imported_devices_count,
              JSON_EXTRACT(Properties, '$.OnboardedImportedDevicesCount') as onboarded_imported_devices_count,
              JSON_EXTRACT(Properties, '$.FailedImportedDevicesCount') as failed_imported_devices_count,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessDeviceImportTask'
    wireless_gateways:
      name: wireless_gateways
      id: aws.iotwireless.wireless_gateways
      x-cfn-schema-name: WirelessGateway
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTWireless::WirelessGateway'
    wireless_gateway:
      name: wireless_gateway
      id: aws.iotwireless.wireless_gateway
      x-cfn-schema-name: WirelessGateway
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.LoRaWAN.GatewayEui') as lo_ra_wa_ngateway_eui,
              JSON_EXTRACT(Properties, '$.LoRaWAN.RfRegion') as lo_ra_wa_nrf_region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ThingArn') as thing_arn,
              JSON_EXTRACT(Properties, '$.ThingName') as thing_name,
              JSON_EXTRACT(Properties, '$.LastUplinkReceivedAt') as last_uplink_received_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTWireless::WirelessGateway'
