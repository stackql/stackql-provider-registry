openapi: 3.0.0
info:
  title: FMS
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ResourceArn:
      description: A resource ARN.
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 1024
    NotificationChannel:
      type: object
      properties:
        SnsRoleName:
          $ref: '#/components/schemas/ResourceArn'
        SnsTopicArn:
          $ref: '#/components/schemas/ResourceArn'
      required:
        - SnsRoleName
        - SnsTopicArn
      x-stackql-resource-name: notification_channel
      description: Designates the IAM role and Amazon Simple Notification Service (SNS) topic that AWS Firewall Manager uses to record SNS logs.
      x-type-name: AWS::FMS::NotificationChannel
      x-stackql-primary-identifier:
        - SnsTopicArn
      x-required-properties:
        - SnsRoleName
        - SnsTopicArn
      x-required-permissions:
        create:
          - fms:PutNotificationChannel
          - iam:PassRole
        update:
          - fms:PutNotificationChannel
          - iam:PassRole
        read:
          - fms:GetNotificationChannel
        delete:
          - fms:DeleteNotificationChannel
        list:
          - fms:GetNotificationChannel
    AccountId:
      description: An AWS account ID.
      type: string
      pattern: ^([0-9]*)$
      minLength: 12
      maxLength: 12
    Base62Id:
      description: A Base62 ID
      type: string
      pattern: ^([a-z0-9A-Z]*)$
      minLength: 22
      maxLength: 22
    OrganizationalUnitId:
      description: An Organizational Unit ID.
      type: string
      pattern: ^(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$
      minLength: 16
      maxLength: 68
    IEMap:
      description: An FMS includeMap or excludeMap.
      type: object
      properties:
        ACCOUNT:
          type: array
          items:
            $ref: '#/components/schemas/AccountId'
          x-insertionOrder: true
        ORGUNIT:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationalUnitId'
          x-insertionOrder: true
      additionalProperties: false
    PolicyTag:
      description: A policy tag.
      type: object
      properties:
        Key:
          type: string
          pattern: ^([^\s]*)$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^([^\s]*)$
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    ResourceTag:
      description: A resource tag.
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          maxLength: 256
      additionalProperties: false
      required:
        - Key
    ResourceType:
      description: An AWS resource type
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 128
    SecurityServicePolicyData:
      description: Firewall security service policy data.
      type: object
      properties:
        ManagedServiceData:
          $ref: '#/components/schemas/ManagedServiceData'
        Type:
          $ref: '#/components/schemas/PolicyType'
        PolicyOption:
          $ref: '#/components/schemas/PolicyOption'
      additionalProperties: false
      required:
        - Type
    FirewallDeploymentModel:
      description: Firewall deployment mode.
      type: string
      enum:
        - DISTRIBUTED
        - CENTRALIZED
    NetworkAclEntry:
      description: Network ACL entry.
      type: object
      properties:
        CidrBlock:
          description: CIDR block.
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
        Egress:
          description: Whether the entry is an egress entry.
          type: boolean
        IcmpTypeCode:
          description: ICMP type and code.
          type: object
          properties:
            Code:
              description: Code.
              type: integer
              minimum: 0
              maximum: 255
            Type:
              description: Type.
              type: integer
              minimum: 0
              maximum: 255
          additionalProperties: false
          required:
            - Code
            - Type
        Ipv6CidrBlock:
          type: string
          description: IPv6 CIDR block.
          pattern: >-
            ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(/(1[0-2]|[0-9]))?$
        PortRange:
          type: object
          description: Port range.
          properties:
            From:
              description: From Port.
              type: integer
              minimum: 0
              maximum: 65535
            To:
              description: To Port.
              type: integer
              minimum: 0
              maximum: 65535
          additionalProperties: false
          required:
            - From
            - To
        Protocol:
          description: Protocol.
          type: string
          pattern: ^(tcp|udp|icmp|-1|([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))$
        RuleAction:
          description: Rule Action.
          type: string
          enum:
            - allow
            - deny
      additionalProperties: false
      required:
        - Egress
        - Protocol
        - RuleAction
    NetworkAclEntryList:
      description: NetworkAcl entry list.
      type: array
      items:
        $ref: '#/components/schemas/NetworkAclEntry'
      x-insertionOrder: true
    NetworkAclEntrySet:
      description: Network ACL entry set.
      type: object
      properties:
        FirstEntries:
          $ref: '#/components/schemas/NetworkAclEntryList'
        ForceRemediateForFirstEntries:
          type: boolean
        LastEntries:
          $ref: '#/components/schemas/NetworkAclEntryList'
        ForceRemediateForLastEntries:
          type: boolean
      additionalProperties: false
      required:
        - ForceRemediateForFirstEntries
        - ForceRemediateForLastEntries
      anyOf:
        - required:
            - FirstEntries
        - required:
            - LastEntries
    ManagedServiceData:
      description: Firewall managed service data.
      type: string
      minLength: 1
      maxLength: 30000
    PolicyType:
      description: Firewall policy type.
      type: string
      enum:
        - WAF
        - WAFV2
        - SHIELD_ADVANCED
        - SECURITY_GROUPS_COMMON
        - SECURITY_GROUPS_CONTENT_AUDIT
        - SECURITY_GROUPS_USAGE_AUDIT
        - NETWORK_FIREWALL
        - THIRD_PARTY_FIREWALL
        - DNS_FIREWALL
        - IMPORT_NETWORK_FIREWALL
        - NETWORK_ACL_COMMON
    NetworkFirewallPolicy:
      description: Network firewall policy.
      type: object
      properties:
        FirewallDeploymentModel:
          $ref: '#/components/schemas/FirewallDeploymentModel'
      additionalProperties: false
      required:
        - FirewallDeploymentModel
    ThirdPartyFirewallPolicy:
      description: Third party firewall policy.
      type: object
      properties:
        FirewallDeploymentModel:
          $ref: '#/components/schemas/FirewallDeploymentModel'
      additionalProperties: false
      required:
        - FirewallDeploymentModel
    NetworkAclCommonPolicy:
      description: Network ACL common policy.
      type: object
      properties:
        NetworkAclEntrySet:
          $ref: '#/components/schemas/NetworkAclEntrySet'
      additionalProperties: false
      required:
        - NetworkAclEntrySet
    PolicyOption:
      description: Firewall policy option.
      type: object
      properties:
        NetworkFirewallPolicy:
          $ref: '#/components/schemas/NetworkFirewallPolicy'
        ThirdPartyFirewallPolicy:
          $ref: '#/components/schemas/ThirdPartyFirewallPolicy'
        NetworkAclCommonPolicy:
          $ref: '#/components/schemas/NetworkAclCommonPolicy'
      additionalProperties: false
      oneOf:
        - required:
            - NetworkFirewallPolicy
        - required:
            - ThirdPartyFirewallPolicy
        - required:
            - NetworkAclCommonPolicy
    Policy:
      type: object
      properties:
        ExcludeMap:
          $ref: '#/components/schemas/IEMap'
        ExcludeResourceTags:
          type: boolean
        IncludeMap:
          $ref: '#/components/schemas/IEMap'
        Id:
          type: string
          pattern: ^[a-z0-9A-Z-]{36}$
          minLength: 36
          maxLength: 36
        PolicyName:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          minLength: 1
          maxLength: 1024
        PolicyDescription:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          maxLength: 256
        RemediationEnabled:
          type: boolean
        ResourceTags:
          type: array
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 8
          x-insertionOrder: true
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
        ResourceTypeList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-insertionOrder: true
        ResourceSetIds:
          type: array
          items:
            $ref: '#/components/schemas/Base62Id'
          x-insertionOrder: true
          uniqueItems: true
        SecurityServicePolicyData:
          $ref: '#/components/schemas/SecurityServicePolicyData'
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        DeleteAllPolicyResources:
          type: boolean
        ResourcesCleanUp:
          type: boolean
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/PolicyTag'
          x-insertionOrder: true
      required:
        - ExcludeResourceTags
        - PolicyName
        - RemediationEnabled
        - SecurityServicePolicyData
      x-stackql-resource-name: policy
      description: Creates an AWS Firewall Manager policy.
      x-type-name: AWS::FMS::Policy
      x-stackql-primary-identifier:
        - Id
      x-write-only-properties:
        - DeleteAllPolicyResources
      x-read-only-properties:
        - Arn
        - Id
      x-required-properties:
        - ExcludeResourceTags
        - PolicyName
        - RemediationEnabled
        - SecurityServicePolicyData
      x-required-permissions:
        create:
          - fms:PutPolicy
          - fms:TagResource
          - waf-regional:ListRuleGroups
          - wafv2:CheckCapacity
          - wafv2:ListRuleGroups
          - wafv2:ListAvailableManagedRuleGroups
          - wafv2:ListAvailableManagedRuleGroupVersions
          - network-firewall:DescribeRuleGroup
          - network-firewall:DescribeRuleGroupMetadata
          - route53resolver:ListFirewallRuleGroups
          - ec2:DescribeAvailabilityZones
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
        update:
          - fms:PutPolicy
          - fms:GetPolicy
          - fms:TagResource
          - fms:UntagResource
          - fms:ListTagsForResource
          - waf-regional:ListRuleGroups
          - wafv2:CheckCapacity
          - wafv2:ListRuleGroups
          - wafv2:ListAvailableManagedRuleGroups
          - wafv2:ListAvailableManagedRuleGroupVersions
          - network-firewall:DescribeRuleGroup
          - network-firewall:DescribeRuleGroupMetadata
          - route53resolver:ListFirewallRuleGroups
          - ec2:DescribeAvailabilityZones
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
        read:
          - fms:GetPolicy
          - fms:ListTagsForResource
        delete:
          - fms:DeletePolicy
        list:
          - fms:ListPolicies
          - fms:ListTagsForResource
    Tag:
      description: A tag.
      type: object
      properties:
        Key:
          type: string
          pattern: ^([^\s]*)$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^([^\s]*)$
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Resource:
      description: A resource ARN or URI.
      type: string
      pattern: ^([^\s]*)$
      minLength: 1
      maxLength: 1024
    ResourceSet:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/Base62Id'
        Name:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
          minLength: 1
          maxLength: 128
        Description:
          type: string
          pattern: ^([a-zA-Z0-9_.:/=+\-@\s]*)$
          maxLength: 256
        ResourceTypeList:
          type: array
          items:
            $ref: '#/components/schemas/ResourceType'
          x-insertionOrder: true
          uniqueItems: true
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
          x-insertionOrder: false
          uniqueItems: true
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: true
          uniqueItems: true
      required:
        - Name
        - ResourceTypeList
      x-stackql-resource-name: resource_set
      description: Creates an AWS Firewall Manager resource set.
      x-type-name: AWS::FMS::ResourceSet
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-properties:
        - Name
        - ResourceTypeList
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - fms:PutResourceSet
          - fms:BatchAssociateResource
          - fms:ListResourceSetResources
          - fms:TagResource
        update:
          - fms:PutResourceSet
          - fms:BatchAssociateResource
          - fms:BatchDisassociateResource
          - fms:GetResourceSet
          - fms:ListResourceSetResources
          - fms:TagResource
          - fms:UntagResource
          - fms:ListTagsForResource
        read:
          - fms:GetResourceSet
          - fms:ListResourceSetResources
          - fms:ListTagsForResource
        delete:
          - fms:DeleteResourceSet
        list:
          - fms:ListResourceSets
    CreateNotificationChannelRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            SnsRoleName:
              $ref: '#/components/schemas/ResourceArn'
            SnsTopicArn:
              $ref: '#/components/schemas/ResourceArn'
          x-stackQL-stringOnly: true
      x-title: CreateNotificationChannelRequest
      type: object
      required: []
    CreatePolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ExcludeMap:
              $ref: '#/components/schemas/IEMap'
            ExcludeResourceTags:
              type: boolean
            IncludeMap:
              $ref: '#/components/schemas/IEMap'
            Id:
              type: string
              pattern: ^[a-z0-9A-Z-]{36}$
              minLength: 36
              maxLength: 36
            PolicyName:
              type: string
              pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
              minLength: 1
              maxLength: 1024
            PolicyDescription:
              type: string
              pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
              maxLength: 256
            RemediationEnabled:
              type: boolean
            ResourceTags:
              type: array
              items:
                $ref: '#/components/schemas/ResourceTag'
              maxItems: 8
              x-insertionOrder: true
            ResourceType:
              $ref: '#/components/schemas/ResourceType'
            ResourceTypeList:
              type: array
              items:
                $ref: '#/components/schemas/ResourceType'
              x-insertionOrder: true
            ResourceSetIds:
              type: array
              items:
                $ref: '#/components/schemas/Base62Id'
              x-insertionOrder: true
              uniqueItems: true
            SecurityServicePolicyData:
              $ref: '#/components/schemas/SecurityServicePolicyData'
            Arn:
              $ref: '#/components/schemas/ResourceArn'
            DeleteAllPolicyResources:
              type: boolean
            ResourcesCleanUp:
              type: boolean
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/PolicyTag'
              x-insertionOrder: true
          x-stackQL-stringOnly: true
      x-title: CreatePolicyRequest
      type: object
      required: []
    CreateResourceSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              $ref: '#/components/schemas/Base62Id'
            Name:
              type: string
              pattern: ^([a-zA-Z0-9_.:/=+\-@\s]+)$
              minLength: 1
              maxLength: 128
            Description:
              type: string
              pattern: ^([a-zA-Z0-9_.:/=+\-@\s]*)$
              maxLength: 256
            ResourceTypeList:
              type: array
              items:
                $ref: '#/components/schemas/ResourceType'
              x-insertionOrder: true
              uniqueItems: true
            Resources:
              type: array
              items:
                $ref: '#/components/schemas/Resource'
              x-insertionOrder: false
              uniqueItems: true
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: true
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateResourceSetRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    notification_channels:
      name: notification_channels
      id: aws.fms.notification_channels
      x-cfn-schema-name: NotificationChannel
      x-cfn-type-name: AWS::FMS::NotificationChannel
      x-identifiers:
        - SnsTopicArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__NotificationChannel&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::NotificationChannel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::NotificationChannel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::NotificationChannel"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/notification_channels/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SnsRoleName') as sns_role_name,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
              AND data__Identifier = '<SnsTopicArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.SnsRoleName') as sns_role_name,
                JSON_EXTRACT(detail.Properties, '$.SnsTopicArn') as sns_topic_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FMS::NotificationChannel'
                AND detail.data__TypeName = 'AWS::FMS::NotificationChannel'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'SnsRoleName') as sns_role_name,
                  json_extract_path_text(Properties, 'SnsTopicArn') as sns_topic_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
                  AND data__Identifier = '<SnsTopicArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'SnsRoleName') as sns_role_name,
                    json_extract_path_text(detail.Properties, 'SnsTopicArn') as sns_topic_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FMS::NotificationChannel'
                    AND detail.data__TypeName = 'AWS::FMS::NotificationChannel'
                    AND listing.region = 'us-east-1'
    notification_channels_list_only:
      name: notification_channels_list_only
      id: aws.fms.notification_channels_list_only
      x-cfn-schema-name: NotificationChannel
      x-cfn-type-name: AWS::FMS::NotificationChannel
      x-identifiers:
        - SnsTopicArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SnsTopicArn') as sns_topic_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::NotificationChannel'
                AND region = 'us-east-1'
    policies:
      name: policies
      id: aws.fms.policies
      x-cfn-schema-name: Policy
      x-cfn-type-name: AWS::FMS::Policy
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Policy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::Policy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::Policy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::Policy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ExcludeMap') as exclude_map,
              JSON_EXTRACT(Properties, '$.ExcludeResourceTags') as exclude_resource_tags,
              JSON_EXTRACT(Properties, '$.IncludeMap') as include_map,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.PolicyDescription') as policy_description,
              JSON_EXTRACT(Properties, '$.RemediationEnabled') as remediation_enabled,
              JSON_EXTRACT(Properties, '$.ResourceTags') as resource_tags,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.ResourceTypeList') as resource_type_list,
              JSON_EXTRACT(Properties, '$.ResourceSetIds') as resource_set_ids,
              JSON_EXTRACT(Properties, '$.SecurityServicePolicyData') as security_service_policy_data,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DeleteAllPolicyResources') as delete_all_policy_resources,
              JSON_EXTRACT(Properties, '$.ResourcesCleanUp') as resources_clean_up,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::Policy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ExcludeMap') as exclude_map,
                JSON_EXTRACT(detail.Properties, '$.ExcludeResourceTags') as exclude_resource_tags,
                JSON_EXTRACT(detail.Properties, '$.IncludeMap') as include_map,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.PolicyName') as policy_name,
                JSON_EXTRACT(detail.Properties, '$.PolicyDescription') as policy_description,
                JSON_EXTRACT(detail.Properties, '$.RemediationEnabled') as remediation_enabled,
                JSON_EXTRACT(detail.Properties, '$.ResourceTags') as resource_tags,
                JSON_EXTRACT(detail.Properties, '$.ResourceType') as resource_type,
                JSON_EXTRACT(detail.Properties, '$.ResourceTypeList') as resource_type_list,
                JSON_EXTRACT(detail.Properties, '$.ResourceSetIds') as resource_set_ids,
                JSON_EXTRACT(detail.Properties, '$.SecurityServicePolicyData') as security_service_policy_data,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.DeleteAllPolicyResources') as delete_all_policy_resources,
                JSON_EXTRACT(detail.Properties, '$.ResourcesCleanUp') as resources_clean_up,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FMS::Policy'
                AND detail.data__TypeName = 'AWS::FMS::Policy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ExcludeMap') as exclude_map,
                  json_extract_path_text(Properties, 'ExcludeResourceTags') as exclude_resource_tags,
                  json_extract_path_text(Properties, 'IncludeMap') as include_map,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'PolicyName') as policy_name,
                  json_extract_path_text(Properties, 'PolicyDescription') as policy_description,
                  json_extract_path_text(Properties, 'RemediationEnabled') as remediation_enabled,
                  json_extract_path_text(Properties, 'ResourceTags') as resource_tags,
                  json_extract_path_text(Properties, 'ResourceType') as resource_type,
                  json_extract_path_text(Properties, 'ResourceTypeList') as resource_type_list,
                  json_extract_path_text(Properties, 'ResourceSetIds') as resource_set_ids,
                  json_extract_path_text(Properties, 'SecurityServicePolicyData') as security_service_policy_data,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'DeleteAllPolicyResources') as delete_all_policy_resources,
                  json_extract_path_text(Properties, 'ResourcesCleanUp') as resources_clean_up,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::Policy'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ExcludeMap') as exclude_map,
                    json_extract_path_text(detail.Properties, 'ExcludeResourceTags') as exclude_resource_tags,
                    json_extract_path_text(detail.Properties, 'IncludeMap') as include_map,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'PolicyName') as policy_name,
                    json_extract_path_text(detail.Properties, 'PolicyDescription') as policy_description,
                    json_extract_path_text(detail.Properties, 'RemediationEnabled') as remediation_enabled,
                    json_extract_path_text(detail.Properties, 'ResourceTags') as resource_tags,
                    json_extract_path_text(detail.Properties, 'ResourceType') as resource_type,
                    json_extract_path_text(detail.Properties, 'ResourceTypeList') as resource_type_list,
                    json_extract_path_text(detail.Properties, 'ResourceSetIds') as resource_set_ids,
                    json_extract_path_text(detail.Properties, 'SecurityServicePolicyData') as security_service_policy_data,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'DeleteAllPolicyResources') as delete_all_policy_resources,
                    json_extract_path_text(detail.Properties, 'ResourcesCleanUp') as resources_clean_up,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FMS::Policy'
                    AND detail.data__TypeName = 'AWS::FMS::Policy'
                    AND listing.region = 'us-east-1'
    policies_list_only:
      name: policies_list_only
      id: aws.fms.policies_list_only
      x-cfn-schema-name: Policy
      x-cfn-type-name: AWS::FMS::Policy
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::Policy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::Policy'
                AND region = 'us-east-1'
    policy_tags:
      name: policy_tags
      id: aws.fms.policy_tags
      x-cfn-schema-name: Policy
      x-cfn-type-name: AWS::FMS::Policy
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ExcludeMap') as exclude_map,
              JSON_EXTRACT(detail.Properties, '$.ExcludeResourceTags') as exclude_resource_tags,
              JSON_EXTRACT(detail.Properties, '$.IncludeMap') as include_map,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(detail.Properties, '$.PolicyDescription') as policy_description,
              JSON_EXTRACT(detail.Properties, '$.RemediationEnabled') as remediation_enabled,
              JSON_EXTRACT(detail.Properties, '$.ResourceTags') as resource_tags,
              JSON_EXTRACT(detail.Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(detail.Properties, '$.ResourceTypeList') as resource_type_list,
              JSON_EXTRACT(detail.Properties, '$.ResourceSetIds') as resource_set_ids,
              JSON_EXTRACT(detail.Properties, '$.SecurityServicePolicyData') as security_service_policy_data,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.DeleteAllPolicyResources') as delete_all_policy_resources,
              JSON_EXTRACT(detail.Properties, '$.ResourcesCleanUp') as resources_clean_up
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FMS::Policy'
              AND detail.data__TypeName = 'AWS::FMS::Policy'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ExcludeMap') as exclude_map,
                json_extract_path_text(detail.Properties, 'ExcludeResourceTags') as exclude_resource_tags,
                json_extract_path_text(detail.Properties, 'IncludeMap') as include_map,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'PolicyName') as policy_name,
                json_extract_path_text(detail.Properties, 'PolicyDescription') as policy_description,
                json_extract_path_text(detail.Properties, 'RemediationEnabled') as remediation_enabled,
                json_extract_path_text(detail.Properties, 'ResourceTags') as resource_tags,
                json_extract_path_text(detail.Properties, 'ResourceType') as resource_type,
                json_extract_path_text(detail.Properties, 'ResourceTypeList') as resource_type_list,
                json_extract_path_text(detail.Properties, 'ResourceSetIds') as resource_set_ids,
                json_extract_path_text(detail.Properties, 'SecurityServicePolicyData') as security_service_policy_data,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'DeleteAllPolicyResources') as delete_all_policy_resources,
                json_extract_path_text(detail.Properties, 'ResourcesCleanUp') as resources_clean_up
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FMS::Policy'
                AND detail.data__TypeName = 'AWS::FMS::Policy'
                AND listing.region = 'us-east-1'
    resource_sets:
      name: resource_sets
      id: aws.fms.resource_sets
      x-cfn-schema-name: ResourceSet
      x-cfn-type-name: AWS::FMS::ResourceSet
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourceSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::ResourceSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::ResourceSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FMS::ResourceSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ResourceTypeList') as resource_type_list,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::ResourceSet'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ResourceTypeList') as resource_type_list,
                JSON_EXTRACT(detail.Properties, '$.Resources') as resources,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FMS::ResourceSet'
                AND detail.data__TypeName = 'AWS::FMS::ResourceSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ResourceTypeList') as resource_type_list,
                  json_extract_path_text(Properties, 'Resources') as resources,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FMS::ResourceSet'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ResourceTypeList') as resource_type_list,
                    json_extract_path_text(detail.Properties, 'Resources') as resources,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FMS::ResourceSet'
                    AND detail.data__TypeName = 'AWS::FMS::ResourceSet'
                    AND listing.region = 'us-east-1'
    resource_sets_list_only:
      name: resource_sets_list_only
      id: aws.fms.resource_sets_list_only
      x-cfn-schema-name: ResourceSet
      x-cfn-type-name: AWS::FMS::ResourceSet
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::ResourceSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FMS::ResourceSet'
                AND region = 'us-east-1'
    resource_set_tags:
      name: resource_set_tags
      id: aws.fms.resource_set_tags
      x-cfn-schema-name: ResourceSet
      x-cfn-type-name: AWS::FMS::ResourceSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ResourceTypeList') as resource_type_list,
              JSON_EXTRACT(detail.Properties, '$.Resources') as resources
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FMS::ResourceSet'
              AND detail.data__TypeName = 'AWS::FMS::ResourceSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ResourceTypeList') as resource_type_list,
                json_extract_path_text(detail.Properties, 'Resources') as resources
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FMS::ResourceSet'
                AND detail.data__TypeName = 'AWS::FMS::ResourceSet'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__NotificationChannel&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateNotificationChannel
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateNotificationChannelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Policy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourceSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourceSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourceSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
