openapi: 3.0.0
info:
  title: Deadline
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 127
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 255
      required:
        - Key
        - Value
      additionalProperties: false
    Farm:
      type: object
      properties:
        Description:
          type: string
          default: ''
          maxLength: 100
          minLength: 0
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
        FarmId:
          type: string
          pattern: ^farm-[0-9a-f]{32}$
        KmsKeyArn:
          type: string
          pattern: ^arn:aws[-a-z]*:kms:.*:key/.*
        Arn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]+:farm/farm-[0-9a-z]{32}$
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
      required:
        - DisplayName
      x-stackql-resource-name: farm
      description: Definition of AWS::Deadline::Farm Resource Type
      x-type-name: AWS::Deadline::Farm
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - KmsKeyArn
      x-read-only-properties:
        - FarmId
        - Arn
      x-required-properties:
        - DisplayName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
      x-required-permissions:
        create:
          - deadline:CreateFarm
          - deadline:GetFarm
          - deadline:TagResource
          - deadline:ListTagsForResource
          - identitystore:ListGroupMembershipsForMember
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
          - kms:GenerateDataKey
        read:
          - deadline:GetFarm
          - deadline:ListTagsForResource
          - identitystore:ListGroupMembershipsForMember
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
          - kms:GenerateDataKey
        update:
          - deadline:UpdateFarm
          - deadline:GetFarm
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
          - identitystore:ListGroupMembershipsForMember
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
          - kms:GenerateDataKey
        delete:
          - deadline:DeleteFarm
          - deadline:GetFarm
          - identitystore:ListGroupMembershipsForMember
          - kms:Encrypt
          - kms:Decrypt
          - kms:CreateGrant
          - kms:GenerateDataKey
        list:
          - deadline:ListFarms
          - identitystore:ListGroupMembershipsForMember
    AcceleratorCountRange:
      type: object
      properties:
        Min:
          type: integer
          maximum: 2147483647
          minimum: 0
        Max:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
        - Min
      additionalProperties: false
    AcceleratorTotalMemoryMiBRange:
      type: object
      properties:
        Min:
          type: integer
          maximum: 2147483647
          minimum: 0
        Max:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
        - Min
      additionalProperties: false
    AcceleratorType:
      type: string
      enum:
        - gpu
    AutoScalingMode:
      type: string
      enum:
        - NO_SCALING
        - EVENT_BASED_AUTO_SCALING
    CpuArchitectureType:
      type: string
      enum:
        - x86_64
        - arm64
    CustomerManagedFleetConfiguration:
      type: object
      properties:
        Mode:
          $ref: '#/components/schemas/AutoScalingMode'
        WorkerCapabilities:
          $ref: '#/components/schemas/CustomerManagedWorkerCapabilities'
        StorageProfileId:
          type: string
          pattern: ^sp-[0-9a-f]{32}$
      required:
        - Mode
        - WorkerCapabilities
      additionalProperties: false
    CustomerManagedFleetOperatingSystemFamily:
      type: string
      enum:
        - WINDOWS
        - LINUX
        - MACOS
    CustomerManagedWorkerCapabilities:
      type: object
      properties:
        VCpuCount:
          $ref: '#/components/schemas/VCpuCountRange'
        MemoryMiB:
          $ref: '#/components/schemas/MemoryMiBRange'
        AcceleratorTypes:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorType'
        AcceleratorCount:
          $ref: '#/components/schemas/AcceleratorCountRange'
        AcceleratorTotalMemoryMiB:
          $ref: '#/components/schemas/AcceleratorTotalMemoryMiBRange'
        OsFamily:
          $ref: '#/components/schemas/CustomerManagedFleetOperatingSystemFamily'
        CpuArchitectureType:
          $ref: '#/components/schemas/CpuArchitectureType'
        CustomAmounts:
          type: array
          items:
            $ref: '#/components/schemas/FleetAmountCapability'
          maxItems: 15
          minItems: 1
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/FleetAttributeCapability'
          maxItems: 15
          minItems: 1
      required:
        - CpuArchitectureType
        - MemoryMiB
        - OsFamily
        - VCpuCount
      additionalProperties: false
    Ec2EbsVolume:
      type: object
      properties:
        SizeGiB:
          type: integer
          default: 250
        Iops:
          type: integer
          default: 3000
          maximum: 16000
          minimum: 3000
        ThroughputMiB:
          type: integer
          default: 125
          maximum: 1000
          minimum: 125
      additionalProperties: false
    AcceleratorSelection:
      type: object
      properties:
        Name:
          type: string
          enum:
            - t4
            - a10g
            - l4
            - l40s
        Runtime:
          type: string
          maxLength: 100
          minLength: 1
      required:
        - Name
      additionalProperties: false
    AcceleratorCapabilities:
      type: object
      properties:
        Selections:
          type: array
          items:
            $ref: '#/components/schemas/AcceleratorSelection'
          minItems: 1
        Count:
          $ref: '#/components/schemas/AcceleratorCountRange'
      required:
        - Selections
      additionalProperties: false
    Ec2MarketType:
      type: string
      enum:
        - on-demand
        - spot
    FleetAmountCapability:
      type: object
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^([a-zA-Z][a-zA-Z0-9]{0,63}:)?amount(\.[a-zA-Z][a-zA-Z0-9]{0,63})+$
        Min:
          type: number
        Max:
          type: number
      required:
        - Min
        - Name
      additionalProperties: false
    FleetAttributeCapability:
      type: object
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^([a-zA-Z][a-zA-Z0-9]{0,63}:)?attr(\.[a-zA-Z][a-zA-Z0-9]{0,63})+$
        Values:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
            pattern: ^[a-zA-Z_]([a-zA-Z0-9_\-]{0,99})$
          maxItems: 10
          minItems: 1
      required:
        - Name
        - Values
      additionalProperties: false
    FleetCapabilities:
      type: object
      properties:
        Amounts:
          type: array
          items:
            $ref: '#/components/schemas/FleetAmountCapability'
          maxItems: 15
          minItems: 1
        Attributes:
          type: array
          items:
            $ref: '#/components/schemas/FleetAttributeCapability'
          maxItems: 15
          minItems: 1
      additionalProperties: false
    FleetConfiguration:
      oneOf:
        - type: object
          title: CustomerManaged
          properties:
            CustomerManaged:
              $ref: '#/components/schemas/CustomerManagedFleetConfiguration'
          required:
            - CustomerManaged
          additionalProperties: false
        - type: object
          title: ServiceManagedEc2
          properties:
            ServiceManagedEc2:
              $ref: '#/components/schemas/ServiceManagedEc2FleetConfiguration'
          required:
            - ServiceManagedEc2
          additionalProperties: false
    FleetStatus:
      type: string
      enum:
        - ACTIVE
        - CREATE_IN_PROGRESS
        - UPDATE_IN_PROGRESS
        - CREATE_FAILED
        - UPDATE_FAILED
    MemoryMiBRange:
      type: object
      properties:
        Min:
          type: integer
          maximum: 2147483647
          minimum: 512
        Max:
          type: integer
          maximum: 2147483647
          minimum: 512
      required:
        - Min
      additionalProperties: false
    ServiceManagedEc2FleetConfiguration:
      type: object
      properties:
        InstanceCapabilities:
          $ref: '#/components/schemas/ServiceManagedEc2InstanceCapabilities'
        InstanceMarketOptions:
          $ref: '#/components/schemas/ServiceManagedEc2InstanceMarketOptions'
      required:
        - InstanceCapabilities
        - InstanceMarketOptions
      additionalProperties: false
    ServiceManagedEc2InstanceMarketOptions:
      type: object
      properties:
        Type:
          $ref: '#/components/schemas/Ec2MarketType'
      required:
        - Type
      additionalProperties: false
    ServiceManagedEc2InstanceCapabilities:
      type: object
      properties:
        VCpuCount:
          $ref: '#/components/schemas/VCpuCountRange'
        MemoryMiB:
          $ref: '#/components/schemas/MemoryMiBRange'
        OsFamily:
          $ref: '#/components/schemas/ServiceManagedFleetOperatingSystemFamily'
        CpuArchitectureType:
          $ref: '#/components/schemas/CpuArchitectureType'
        RootEbsVolume:
          $ref: '#/components/schemas/Ec2EbsVolume'
        AcceleratorCapabilities:
          $ref: '#/components/schemas/AcceleratorCapabilities'
        AllowedInstanceTypes:
          type: array
          items:
            type: string
            pattern: ^[a-zA-Z0-9]+\.[a-zA-Z0-9]+$
          maxItems: 100
          minItems: 1
        ExcludedInstanceTypes:
          type: array
          items:
            type: string
            pattern: ^[a-zA-Z0-9]+\.[a-zA-Z0-9]+$
          maxItems: 100
          minItems: 1
        CustomAmounts:
          type: array
          items:
            $ref: '#/components/schemas/FleetAmountCapability'
          maxItems: 15
          minItems: 1
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/FleetAttributeCapability'
          maxItems: 15
          minItems: 1
      required:
        - CpuArchitectureType
        - MemoryMiB
        - OsFamily
        - VCpuCount
      additionalProperties: false
    ServiceManagedFleetOperatingSystemFamily:
      type: string
      enum:
        - LINUX
        - WINDOWS
    VCpuCountRange:
      type: object
      properties:
        Min:
          type: integer
          maximum: 10000
          minimum: 1
        Max:
          type: integer
          maximum: 10000
          minimum: 1
      required:
        - Min
      additionalProperties: false
    Fleet:
      type: object
      properties:
        Capabilities:
          $ref: '#/components/schemas/FleetCapabilities'
        Configuration:
          $ref: '#/components/schemas/FleetConfiguration'
        Description:
          type: string
          default: ''
          maxLength: 100
          minLength: 0
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
        FarmId:
          type: string
          pattern: ^farm-[0-9a-f]{32}$
        FleetId:
          type: string
          pattern: ^fleet-[0-9a-f]{32}$
        MaxWorkerCount:
          type: integer
          maximum: 2147483647
          minimum: 0
        MinWorkerCount:
          type: integer
          default: 0
          maximum: 2147483647
          minimum: 0
        RoleArn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
        Status:
          $ref: '#/components/schemas/FleetStatus'
        WorkerCount:
          type: integer
        Arn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]+:farm/farm-[0-9a-z]{32}/fleet/fleet-[0-9a-z]{32}
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
      required:
        - Configuration
        - DisplayName
        - FarmId
        - MaxWorkerCount
        - RoleArn
      x-stackql-resource-name: fleet
      description: Definition of AWS::Deadline::Fleet Resource Type
      x-type-name: AWS::Deadline::Fleet
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - FarmId
      x-read-only-properties:
        - Capabilities
        - FleetId
        - Status
        - WorkerCount
        - Arn
      x-required-properties:
        - Configuration
        - DisplayName
        - FarmId
        - MaxWorkerCount
        - RoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
      x-required-permissions:
        create:
          - deadline:CreateFleet
          - deadline:GetFleet
          - iam:PassRole
          - identitystore:ListGroupMembershipsForMember
          - logs:CreateLogGroup
          - deadline:TagResource
          - deadline:ListTagsForResource
        read:
          - deadline:GetFleet
          - identitystore:ListGroupMembershipsForMember
          - deadline:ListTagsForResource
        update:
          - deadline:UpdateFleet
          - deadline:GetFleet
          - iam:PassRole
          - identitystore:ListGroupMembershipsForMember
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
        delete:
          - deadline:DeleteFleet
          - deadline:GetFleet
          - identitystore:ListGroupMembershipsForMember
        list:
          - deadline:ListFleets
          - identitystore:DescribeGroup
          - identitystore:DescribeUser
          - identitystore:ListGroupMembershipsForMember
    LicenseEndpointStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - READY
        - NOT_READY
    LicenseEndpoint:
      type: object
      properties:
        DnsName:
          type: string
        LicenseEndpointId:
          type: string
          pattern: ^le-[0-9a-f]{32}$
        SecurityGroupIds:
          type: array
          items:
            type: string
          maxItems: 10
          minItems: 1
        Status:
          $ref: '#/components/schemas/LicenseEndpointStatus'
        StatusMessage:
          type: string
          maxLength: 1024
          minLength: 0
        SubnetIds:
          type: array
          items:
            type: string
            maxLength: 32
            minLength: 1
          maxItems: 10
          minItems: 1
        VpcId:
          type: string
          maxLength: 32
          minLength: 1
        Arn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]{12}:license-endpoint/le-[0-9a-z]{32}
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
      required:
        - SecurityGroupIds
        - SubnetIds
        - VpcId
      x-stackql-resource-name: license_endpoint
      description: Definition of AWS::Deadline::LicenseEndpoint Resource Type
      x-type-name: AWS::Deadline::LicenseEndpoint
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - SecurityGroupIds
        - SubnetIds
        - VpcId
      x-read-only-properties:
        - DnsName
        - LicenseEndpointId
        - Status
        - StatusMessage
        - Arn
      x-required-properties:
        - SecurityGroupIds
        - SubnetIds
        - VpcId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
      x-required-permissions:
        create:
          - deadline:CreateLicenseEndpoint
          - deadline:GetLicenseEndpoint
          - ec2:CreateTags
          - ec2:CreateVpcEndpoint
          - ec2:DescribeVpcEndpoints
          - deadline:TagResource
          - deadline:ListTagsForResource
        read:
          - deadline:GetLicenseEndpoint
          - deadline:ListTagsForResource
        update:
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
          - deadline:GetLicenseEndpoint
        delete:
          - deadline:GetLicenseEndpoint
          - deadline:DeleteLicenseEndpoint
          - ec2:DeleteVpcEndpoints
          - ec2:DescribeVpcEndpoints
        list:
          - deadline:ListLicenseEndpoints
    MeteredProduct:
      type: object
      properties:
        LicenseEndpointId:
          type: string
          pattern: ^le-[0-9a-f]{32}$
        ProductId:
          type: string
          pattern: ^[0-9a-z]{1,32}-[.0-9a-z]{1,32}$
        Port:
          type: integer
          minimum: 1024
          maximum: 65535
        Family:
          type: string
          minLength: 1
          maxLength: 64
        Vendor:
          type: string
          minLength: 1
          maxLength: 64
        Arn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]{12}:license-endpoint/le-[0-9a-z]{32}/metered-product/[0-9a-z]{1,32}-[.0-9a-z]{1,32}
      x-stackql-resource-name: metered_product
      description: Definition of AWS::Deadline::MeteredProduct Resource Type
      x-type-name: AWS::Deadline::MeteredProduct
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - LicenseEndpointId
        - ProductId
      x-read-only-properties:
        - Arn
        - Port
        - Family
        - Vendor
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - deadline:PutMeteredProduct
          - deadline:ListMeteredProducts
        read:
          - deadline:GetMeteredProduct
          - deadline:ListMeteredProducts
        delete:
          - deadline:DeleteMeteredProduct
          - deadline:ListMeteredProducts
        list:
          - deadline:ListMeteredProducts
    Monitor:
      type: object
      properties:
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
        IdentityCenterApplicationArn:
          type: string
        IdentityCenterInstanceArn:
          type: string
          pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$
        MonitorId:
          type: string
          pattern: ^monitor-[0-9a-f]{32}$
        RoleArn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
        Subdomain:
          type: string
          pattern: ^[a-z0-9-]{1,100}$
        Url:
          type: string
        Arn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]+:monitor/monitor-[0-9a-z]{32}$
      required:
        - DisplayName
        - IdentityCenterInstanceArn
        - RoleArn
        - Subdomain
      x-stackql-resource-name: monitor
      description: Definition of AWS::Deadline::Monitor Resource Type
      x-type-name: AWS::Deadline::Monitor
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - IdentityCenterInstanceArn
      x-read-only-properties:
        - IdentityCenterApplicationArn
        - MonitorId
        - Url
        - Arn
      x-required-properties:
        - DisplayName
        - IdentityCenterInstanceArn
        - RoleArn
        - Subdomain
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - deadline:CreateMonitor
          - deadline:GetMonitor
          - iam:PassRole
          - kms:CreateGrant
          - sso:CreateApplication
          - sso:DeleteApplication
          - sso:PutApplicationAssignmentConfiguration
          - sso:PutApplicationAuthenticationMethod
          - sso:PutApplicationGrant
        read:
          - deadline:GetMonitor
        update:
          - deadline:GetMonitor
          - deadline:UpdateMonitor
          - iam:PassRole
          - kms:CreateGrant
          - sso:PutApplicationGrant
          - sso:UpdateApplication
        delete:
          - deadline:DeleteMonitor
          - deadline:GetMonitor
          - sso:DeleteApplication
        list:
          - deadline:ListMonitors
    DefaultQueueBudgetAction:
      type: string
      default: NONE
      enum:
        - NONE
        - STOP_SCHEDULING_AND_COMPLETE_TASKS
        - STOP_SCHEDULING_AND_CANCEL_TASKS
    JobAttachmentSettings:
      type: object
      properties:
        S3BucketName:
          type: string
          maxLength: 63
          minLength: 3
          pattern: (?!^(\d+\.)+\d+$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)
        RootPrefix:
          type: string
          maxLength: 63
          minLength: 1
      required:
        - RootPrefix
        - S3BucketName
      additionalProperties: false
    JobRunAsUser:
      type: object
      properties:
        Posix:
          $ref: '#/components/schemas/PosixUser'
        Windows:
          $ref: '#/components/schemas/WindowsUser'
        RunAs:
          $ref: '#/components/schemas/RunAs'
      required:
        - RunAs
      additionalProperties: false
    PosixUser:
      type: object
      properties:
        User:
          type: string
          maxLength: 31
          minLength: 0
          pattern: ^(?:[a-z][a-z0-9-]{0,30})?$
        Group:
          type: string
          maxLength: 31
          minLength: 0
          pattern: ^(?:[a-z][a-z0-9-]{0,30})?$
      required:
        - Group
        - User
      additionalProperties: false
    RunAs:
      type: string
      enum:
        - QUEUE_CONFIGURED_USER
        - WORKER_AGENT_USER
    WindowsUser:
      type: object
      properties:
        User:
          type: string
          maxLength: 111
          minLength: 0
          pattern: ^[^"'/\[\]:;|=,+*?<>\s]*$
        PasswordArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:(aws[a-zA-Z-]*):secretsmanager:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\d{1}:\d{12}:secret:[a-zA-Z0-9-/_+=.@]{1,2028}$
      required:
        - PasswordArn
        - User
      additionalProperties: false
    Queue:
      type: object
      properties:
        AllowedStorageProfileIds:
          type: array
          items:
            type: string
            pattern: ^sp-[0-9a-f]{32}$
          maxItems: 20
          minItems: 0
          uniqueItems: true
        DefaultBudgetAction:
          $ref: '#/components/schemas/DefaultQueueBudgetAction'
        Description:
          type: string
          default: ''
          maxLength: 100
          minLength: 0
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
        FarmId:
          type: string
          pattern: ^farm-[0-9a-f]{32}$
        JobAttachmentSettings:
          $ref: '#/components/schemas/JobAttachmentSettings'
        JobRunAsUser:
          $ref: '#/components/schemas/JobRunAsUser'
        QueueId:
          type: string
          pattern: ^queue-[0-9a-f]{32}$
        RequiredFileSystemLocationNames:
          type: array
          items:
            type: string
            maxLength: 64
            minLength: 1
            pattern: ^[0-9A-Za-z ]*$
          maxItems: 20
          minItems: 0
          uniqueItems: true
        RoleArn:
          type: string
          pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
        Arn:
          type: string
          pattern: ^arn:*
        Tags:
          type: array
          maxItems: 50
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
          uniqueItems: true
      required:
        - DisplayName
        - FarmId
      x-stackql-resource-name: queue
      description: Definition of AWS::Deadline::Queue Resource Type
      x-type-name: AWS::Deadline::Queue
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - FarmId
      x-read-only-properties:
        - QueueId
        - Arn
      x-required-properties:
        - DisplayName
        - FarmId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
      x-required-permissions:
        create:
          - deadline:CreateQueue
          - deadline:GetQueue
          - iam:PassRole
          - identitystore:ListGroupMembershipsForMember
          - logs:CreateLogGroup
          - s3:ListBucket
          - deadline:TagResource
          - deadline:ListTagsForResource
        read:
          - deadline:GetQueue
          - identitystore:ListGroupMembershipsForMember
          - deadline:ListTagsForResource
        update:
          - deadline:UpdateQueue
          - deadline:GetQueue
          - iam:PassRole
          - identitystore:ListGroupMembershipsForMember
          - logs:CreateLogGroup
          - s3:ListBucket
          - deadline:TagResource
          - deadline:UntagResource
          - deadline:ListTagsForResource
        delete:
          - deadline:DeleteQueue
          - deadline:GetQueue
          - identitystore:ListGroupMembershipsForMember
        list:
          - deadline:ListQueues
          - identitystore:DescribeGroup
          - identitystore:DescribeUser
          - identitystore:ListGroupMembershipsForMember
    EnvironmentTemplateType:
      type: string
      enum:
        - JSON
        - YAML
    QueueEnvironment:
      type: object
      properties:
        FarmId:
          type: string
          pattern: ^farm-[0-9a-f]{32}$
        Name:
          type: string
        Priority:
          type: integer
          maximum: 10000
          minimum: 0
        QueueEnvironmentId:
          type: string
          pattern: ^queueenv-[0-9a-f]{32}$
        QueueId:
          type: string
          pattern: ^queue-[0-9a-f]{32}$
        Template:
          type: string
          maxLength: 15000
          minLength: 1
        TemplateType:
          $ref: '#/components/schemas/EnvironmentTemplateType'
      required:
        - FarmId
        - QueueId
        - Priority
        - Template
        - TemplateType
      x-stackql-resource-name: queue_environment
      description: Definition of AWS::Deadline::QueueEnvironment Resource Type
      x-type-name: AWS::Deadline::QueueEnvironment
      x-stackql-primary-identifier:
        - FarmId
        - QueueId
        - QueueEnvironmentId
      x-create-only-properties:
        - FarmId
        - QueueId
      x-read-only-properties:
        - Name
        - QueueEnvironmentId
      x-required-properties:
        - FarmId
        - QueueId
        - Priority
        - Template
        - TemplateType
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - deadline:CreateQueueEnvironment
          - identitystore:ListGroupMembershipsForMember
        read:
          - deadline:GetQueueEnvironment
          - identitystore:ListGroupMembershipsForMember
        update:
          - deadline:UpdateQueueEnvironment
          - identitystore:ListGroupMembershipsForMember
        delete:
          - deadline:DeleteQueueEnvironment
          - deadline:GetQueueEnvironment
          - identitystore:ListGroupMembershipsForMember
        list:
          - deadline:ListQueueEnvironments
          - identitystore:ListGroupMembershipsForMember
    QueueFleetAssociation:
      type: object
      properties:
        FarmId:
          type: string
          pattern: ^farm-[0-9a-f]{32}$
        FleetId:
          type: string
          pattern: ^fleet-[0-9a-f]{32}$
        QueueId:
          type: string
          pattern: ^queue-[0-9a-f]{32}$
      required:
        - FarmId
        - FleetId
        - QueueId
      x-stackql-resource-name: queue_fleet_association
      description: Definition of AWS::Deadline::QueueFleetAssociation Resource Type
      x-type-name: AWS::Deadline::QueueFleetAssociation
      x-stackql-primary-identifier:
        - FarmId
        - FleetId
        - QueueId
      x-create-only-properties:
        - FarmId
        - FleetId
        - QueueId
      x-required-properties:
        - FarmId
        - FleetId
        - QueueId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - deadline:CreateQueueFleetAssociation
          - deadline:GetQueueFleetAssociation
          - identitystore:ListGroupMembershipsForMember
        read:
          - deadline:GetQueueFleetAssociation
          - identitystore:ListGroupMembershipsForMember
        delete:
          - deadline:DeleteQueueFleetAssociation
          - deadline:GetQueueFleetAssociation
          - deadline:UpdateQueueFleetAssociation
          - identitystore:ListGroupMembershipsForMember
        list:
          - deadline:ListQueueFleetAssociations
          - identitystore:ListGroupMembershipsForMember
    FileSystemLocation:
      type: object
      properties:
        Name:
          type: string
          maxLength: 64
          minLength: 1
          pattern: ^[0-9A-Za-z ]*$
        Path:
          type: string
          maxLength: 1024
          minLength: 0
        Type:
          $ref: '#/components/schemas/FileSystemLocationType'
      required:
        - Name
        - Path
        - Type
      additionalProperties: false
    FileSystemLocationType:
      type: string
      enum:
        - SHARED
        - LOCAL
    StorageProfileOperatingSystemFamily:
      type: string
      enum:
        - WINDOWS
        - LINUX
        - MACOS
    StorageProfile:
      type: object
      properties:
        DisplayName:
          type: string
          maxLength: 100
          minLength: 1
        FarmId:
          type: string
          pattern: ^farm-[0-9a-f]{32}$
        FileSystemLocations:
          type: array
          items:
            $ref: '#/components/schemas/FileSystemLocation'
          maxItems: 20
          minItems: 0
        OsFamily:
          $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
        StorageProfileId:
          type: string
          pattern: ^sp-[0-9a-f]{32}$
      required:
        - DisplayName
        - FarmId
        - OsFamily
      x-stackql-resource-name: storage_profile
      description: Definition of AWS::Deadline::StorageProfile Resource Type
      x-type-name: AWS::Deadline::StorageProfile
      x-stackql-primary-identifier:
        - FarmId
        - StorageProfileId
      x-create-only-properties:
        - FarmId
      x-read-only-properties:
        - StorageProfileId
      x-required-properties:
        - DisplayName
        - FarmId
        - OsFamily
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - deadline:CreateStorageProfile
          - deadline:GetStorageProfile
          - identitystore:ListGroupMembershipsForMember
        read:
          - deadline:GetStorageProfile
          - identitystore:ListGroupMembershipsForMember
        update:
          - deadline:UpdateStorageProfile
          - deadline:GetStorageProfile
          - identitystore:ListGroupMembershipsForMember
        delete:
          - deadline:DeleteStorageProfile
          - deadline:GetStorageProfile
          - identitystore:ListGroupMembershipsForMember
        list:
          - deadline:ListStorageProfiles
          - identitystore:ListGroupMembershipsForMember
    CreateFarmRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              default: ''
              maxLength: 100
              minLength: 0
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
            FarmId:
              type: string
              pattern: ^farm-[0-9a-f]{32}$
            KmsKeyArn:
              type: string
              pattern: ^arn:aws[-a-z]*:kms:.*:key/.*
            Arn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]+:farm/farm-[0-9a-z]{32}$
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateFarmRequest
      type: object
      required: []
    CreateFleetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Capabilities:
              $ref: '#/components/schemas/FleetCapabilities'
            Configuration:
              $ref: '#/components/schemas/FleetConfiguration'
            Description:
              type: string
              default: ''
              maxLength: 100
              minLength: 0
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
            FarmId:
              type: string
              pattern: ^farm-[0-9a-f]{32}$
            FleetId:
              type: string
              pattern: ^fleet-[0-9a-f]{32}$
            MaxWorkerCount:
              type: integer
              maximum: 2147483647
              minimum: 0
            MinWorkerCount:
              type: integer
              default: 0
              maximum: 2147483647
              minimum: 0
            RoleArn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
            Status:
              $ref: '#/components/schemas/FleetStatus'
            WorkerCount:
              type: integer
            Arn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]+:farm/farm-[0-9a-z]{32}/fleet/fleet-[0-9a-z]{32}
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateFleetRequest
      type: object
      required: []
    CreateLicenseEndpointRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DnsName:
              type: string
            LicenseEndpointId:
              type: string
              pattern: ^le-[0-9a-f]{32}$
            SecurityGroupIds:
              type: array
              items:
                type: string
              maxItems: 10
              minItems: 1
            Status:
              $ref: '#/components/schemas/LicenseEndpointStatus'
            StatusMessage:
              type: string
              maxLength: 1024
              minLength: 0
            SubnetIds:
              type: array
              items:
                type: string
                maxLength: 32
                minLength: 1
              maxItems: 10
              minItems: 1
            VpcId:
              type: string
              maxLength: 32
              minLength: 1
            Arn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]{12}:license-endpoint/le-[0-9a-z]{32}
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateLicenseEndpointRequest
      type: object
      required: []
    CreateMeteredProductRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            LicenseEndpointId:
              type: string
              pattern: ^le-[0-9a-f]{32}$
            ProductId:
              type: string
              pattern: ^[0-9a-z]{1,32}-[.0-9a-z]{1,32}$
            Port:
              type: integer
              minimum: 1024
              maximum: 65535
            Family:
              type: string
              minLength: 1
              maxLength: 64
            Vendor:
              type: string
              minLength: 1
              maxLength: 64
            Arn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]{12}:license-endpoint/le-[0-9a-z]{32}/metered-product/[0-9a-z]{1,32}-[.0-9a-z]{1,32}
          x-stackQL-stringOnly: true
      x-title: CreateMeteredProductRequest
      type: object
      required: []
    CreateMonitorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
            IdentityCenterApplicationArn:
              type: string
            IdentityCenterInstanceArn:
              type: string
              pattern: ^arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}$
            MonitorId:
              type: string
              pattern: ^monitor-[0-9a-f]{32}$
            RoleArn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
            Subdomain:
              type: string
              pattern: ^[a-z0-9-]{1,100}$
            Url:
              type: string
            Arn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):deadline:[a-z0-9-]+:[0-9]+:monitor/monitor-[0-9a-z]{32}$
          x-stackQL-stringOnly: true
      x-title: CreateMonitorRequest
      type: object
      required: []
    CreateQueueRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AllowedStorageProfileIds:
              type: array
              items:
                type: string
                pattern: ^sp-[0-9a-f]{32}$
              maxItems: 20
              minItems: 0
              uniqueItems: true
            DefaultBudgetAction:
              $ref: '#/components/schemas/DefaultQueueBudgetAction'
            Description:
              type: string
              default: ''
              maxLength: 100
              minLength: 0
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
            FarmId:
              type: string
              pattern: ^farm-[0-9a-f]{32}$
            JobAttachmentSettings:
              $ref: '#/components/schemas/JobAttachmentSettings'
            JobRunAsUser:
              $ref: '#/components/schemas/JobRunAsUser'
            QueueId:
              type: string
              pattern: ^queue-[0-9a-f]{32}$
            RequiredFileSystemLocationNames:
              type: array
              items:
                type: string
                maxLength: 64
                minLength: 1
                pattern: ^[0-9A-Za-z ]*$
              maxItems: 20
              minItems: 0
              uniqueItems: true
            RoleArn:
              type: string
              pattern: ^arn:(aws[a-zA-Z-]*):iam::\d{12}:role(/[!-.0-~]+)*/[\w+=,.@-]+$
            Arn:
              type: string
              pattern: ^arn:*
            Tags:
              type: array
              maxItems: 50
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateQueueRequest
      type: object
      required: []
    CreateQueueEnvironmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FarmId:
              type: string
              pattern: ^farm-[0-9a-f]{32}$
            Name:
              type: string
            Priority:
              type: integer
              maximum: 10000
              minimum: 0
            QueueEnvironmentId:
              type: string
              pattern: ^queueenv-[0-9a-f]{32}$
            QueueId:
              type: string
              pattern: ^queue-[0-9a-f]{32}$
            Template:
              type: string
              maxLength: 15000
              minLength: 1
            TemplateType:
              $ref: '#/components/schemas/EnvironmentTemplateType'
          x-stackQL-stringOnly: true
      x-title: CreateQueueEnvironmentRequest
      type: object
      required: []
    CreateQueueFleetAssociationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FarmId:
              type: string
              pattern: ^farm-[0-9a-f]{32}$
            FleetId:
              type: string
              pattern: ^fleet-[0-9a-f]{32}$
            QueueId:
              type: string
              pattern: ^queue-[0-9a-f]{32}$
          x-stackQL-stringOnly: true
      x-title: CreateQueueFleetAssociationRequest
      type: object
      required: []
    CreateStorageProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DisplayName:
              type: string
              maxLength: 100
              minLength: 1
            FarmId:
              type: string
              pattern: ^farm-[0-9a-f]{32}$
            FileSystemLocations:
              type: array
              items:
                $ref: '#/components/schemas/FileSystemLocation'
              maxItems: 20
              minItems: 0
            OsFamily:
              $ref: '#/components/schemas/StorageProfileOperatingSystemFamily'
            StorageProfileId:
              type: string
              pattern: ^sp-[0-9a-f]{32}$
          x-stackQL-stringOnly: true
      x-title: CreateStorageProfileRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    farms:
      name: farms
      id: aws.deadline.farms
      x-cfn-schema-name: Farm
      x-cfn-type-name: AWS::Deadline::Farm
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Farm&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Farm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Farm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Farm"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/farms/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/farms/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/farms/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Farm'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::Farm'
                AND detail.data__TypeName = 'AWS::Deadline::Farm'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'FarmId') as farm_id,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Farm'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::Farm'
                    AND detail.data__TypeName = 'AWS::Deadline::Farm'
                    AND listing.region = 'us-east-1'
    farms_list_only:
      name: farms_list_only
      id: aws.deadline.farms_list_only
      x-cfn-schema-name: Farm
      x-cfn-type-name: AWS::Deadline::Farm
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Farm'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Farm'
                AND region = 'us-east-1'
    farm_tags:
      name: farm_tags
      id: aws.deadline.farm_tags
      x-cfn-schema-name: Farm
      x-cfn-type-name: AWS::Deadline::Farm
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Deadline::Farm'
              AND detail.data__TypeName = 'AWS::Deadline::Farm'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Deadline::Farm'
                AND detail.data__TypeName = 'AWS::Deadline::Farm'
                AND listing.region = 'us-east-1'
    fleets:
      name: fleets
      id: aws.deadline.fleets
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::Deadline::Fleet
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Fleet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/fleets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.FleetId') as fleet_id,
              JSON_EXTRACT(Properties, '$.MaxWorkerCount') as max_worker_count,
              JSON_EXTRACT(Properties, '$.MinWorkerCount') as min_worker_count,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.WorkerCount') as worker_count,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Fleet'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
                JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
                JSON_EXTRACT(detail.Properties, '$.FleetId') as fleet_id,
                JSON_EXTRACT(detail.Properties, '$.MaxWorkerCount') as max_worker_count,
                JSON_EXTRACT(detail.Properties, '$.MinWorkerCount') as min_worker_count,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.WorkerCount') as worker_count,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::Fleet'
                AND detail.data__TypeName = 'AWS::Deadline::Fleet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Capabilities') as capabilities,
                  json_extract_path_text(Properties, 'Configuration') as configuration,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'FarmId') as farm_id,
                  json_extract_path_text(Properties, 'FleetId') as fleet_id,
                  json_extract_path_text(Properties, 'MaxWorkerCount') as max_worker_count,
                  json_extract_path_text(Properties, 'MinWorkerCount') as min_worker_count,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'WorkerCount') as worker_count,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Fleet'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                    json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                    json_extract_path_text(detail.Properties, 'FleetId') as fleet_id,
                    json_extract_path_text(detail.Properties, 'MaxWorkerCount') as max_worker_count,
                    json_extract_path_text(detail.Properties, 'MinWorkerCount') as min_worker_count,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'WorkerCount') as worker_count,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::Fleet'
                    AND detail.data__TypeName = 'AWS::Deadline::Fleet'
                    AND listing.region = 'us-east-1'
    fleets_list_only:
      name: fleets_list_only
      id: aws.deadline.fleets_list_only
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::Deadline::Fleet
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Fleet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Fleet'
                AND region = 'us-east-1'
    fleet_tags:
      name: fleet_tags
      id: aws.deadline.fleet_tags
      x-cfn-schema-name: Fleet
      x-cfn-type-name: AWS::Deadline::Fleet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(detail.Properties, '$.FleetId') as fleet_id,
              JSON_EXTRACT(detail.Properties, '$.MaxWorkerCount') as max_worker_count,
              JSON_EXTRACT(detail.Properties, '$.MinWorkerCount') as min_worker_count,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.WorkerCount') as worker_count,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Deadline::Fleet'
              AND detail.data__TypeName = 'AWS::Deadline::Fleet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                json_extract_path_text(detail.Properties, 'FleetId') as fleet_id,
                json_extract_path_text(detail.Properties, 'MaxWorkerCount') as max_worker_count,
                json_extract_path_text(detail.Properties, 'MinWorkerCount') as min_worker_count,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'WorkerCount') as worker_count,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Deadline::Fleet'
                AND detail.data__TypeName = 'AWS::Deadline::Fleet'
                AND listing.region = 'us-east-1'
    license_endpoints:
      name: license_endpoints
      id: aws.deadline.license_endpoints
      x-cfn-schema-name: LicenseEndpoint
      x-cfn-type-name: AWS::Deadline::LicenseEndpoint
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LicenseEndpoint&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::LicenseEndpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::LicenseEndpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::LicenseEndpoint"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/license_endpoints/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/license_endpoints/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/license_endpoints/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DnsName') as dns_name,
              JSON_EXTRACT(Properties, '$.LicenseEndpointId') as license_endpoint_id,
              JSON_EXTRACT(Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::LicenseEndpoint'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DnsName') as dns_name,
                JSON_EXTRACT(detail.Properties, '$.LicenseEndpointId') as license_endpoint_id,
                JSON_EXTRACT(detail.Properties, '$.SecurityGroupIds') as security_group_ids,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.StatusMessage') as status_message,
                JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
                JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                AND detail.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DnsName') as dns_name,
                  json_extract_path_text(Properties, 'LicenseEndpointId') as license_endpoint_id,
                  json_extract_path_text(Properties, 'SecurityGroupIds') as security_group_ids,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'StatusMessage') as status_message,
                  json_extract_path_text(Properties, 'SubnetIds') as subnet_ids,
                  json_extract_path_text(Properties, 'VpcId') as vpc_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DnsName') as dns_name,
                    json_extract_path_text(detail.Properties, 'LicenseEndpointId') as license_endpoint_id,
                    json_extract_path_text(detail.Properties, 'SecurityGroupIds') as security_group_ids,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'StatusMessage') as status_message,
                    json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                    json_extract_path_text(detail.Properties, 'VpcId') as vpc_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                    AND detail.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                    AND listing.region = 'us-east-1'
    license_endpoints_list_only:
      name: license_endpoints_list_only
      id: aws.deadline.license_endpoints_list_only
      x-cfn-schema-name: LicenseEndpoint
      x-cfn-type-name: AWS::Deadline::LicenseEndpoint
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::LicenseEndpoint'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                AND region = 'us-east-1'
    license_endpoint_tags:
      name: license_endpoint_tags
      id: aws.deadline.license_endpoint_tags
      x-cfn-schema-name: LicenseEndpoint
      x-cfn-type-name: AWS::Deadline::LicenseEndpoint
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DnsName') as dns_name,
              JSON_EXTRACT(detail.Properties, '$.LicenseEndpointId') as license_endpoint_id,
              JSON_EXTRACT(detail.Properties, '$.SecurityGroupIds') as security_group_ids,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.StatusMessage') as status_message,
              JSON_EXTRACT(detail.Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
              AND detail.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DnsName') as dns_name,
                json_extract_path_text(detail.Properties, 'LicenseEndpointId') as license_endpoint_id,
                json_extract_path_text(detail.Properties, 'SecurityGroupIds') as security_group_ids,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'StatusMessage') as status_message,
                json_extract_path_text(detail.Properties, 'SubnetIds') as subnet_ids,
                json_extract_path_text(detail.Properties, 'VpcId') as vpc_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                AND detail.data__TypeName = 'AWS::Deadline::LicenseEndpoint'
                AND listing.region = 'us-east-1'
    metered_products:
      name: metered_products
      id: aws.deadline.metered_products
      x-cfn-schema-name: MeteredProduct
      x-cfn-type-name: AWS::Deadline::MeteredProduct
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MeteredProduct&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::MeteredProduct"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::MeteredProduct"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/metered_products/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/metered_products/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.LicenseEndpointId') as license_endpoint_id,
              JSON_EXTRACT(Properties, '$.ProductId') as product_id,
              JSON_EXTRACT(Properties, '$.Port') as port,
              JSON_EXTRACT(Properties, '$.Family') as family,
              JSON_EXTRACT(Properties, '$.Vendor') as vendor,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::MeteredProduct'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.LicenseEndpointId') as license_endpoint_id,
                JSON_EXTRACT(detail.Properties, '$.ProductId') as product_id,
                JSON_EXTRACT(detail.Properties, '$.Port') as port,
                JSON_EXTRACT(detail.Properties, '$.Family') as family,
                JSON_EXTRACT(detail.Properties, '$.Vendor') as vendor,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::MeteredProduct'
                AND detail.data__TypeName = 'AWS::Deadline::MeteredProduct'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'LicenseEndpointId') as license_endpoint_id,
                  json_extract_path_text(Properties, 'ProductId') as product_id,
                  json_extract_path_text(Properties, 'Port') as port,
                  json_extract_path_text(Properties, 'Family') as family,
                  json_extract_path_text(Properties, 'Vendor') as vendor,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::MeteredProduct'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'LicenseEndpointId') as license_endpoint_id,
                    json_extract_path_text(detail.Properties, 'ProductId') as product_id,
                    json_extract_path_text(detail.Properties, 'Port') as port,
                    json_extract_path_text(detail.Properties, 'Family') as family,
                    json_extract_path_text(detail.Properties, 'Vendor') as vendor,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::MeteredProduct'
                    AND detail.data__TypeName = 'AWS::Deadline::MeteredProduct'
                    AND listing.region = 'us-east-1'
    metered_products_list_only:
      name: metered_products_list_only
      id: aws.deadline.metered_products_list_only
      x-cfn-schema-name: MeteredProduct
      x-cfn-type-name: AWS::Deadline::MeteredProduct
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::MeteredProduct'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::MeteredProduct'
                AND region = 'us-east-1'
    monitors:
      name: monitors
      id: aws.deadline.monitors
      x-cfn-schema-name: Monitor
      x-cfn-type-name: AWS::Deadline::Monitor
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Monitor&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Monitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Monitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Monitor"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/monitors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.IdentityCenterApplicationArn') as identity_center_application_arn,
              JSON_EXTRACT(Properties, '$.IdentityCenterInstanceArn') as identity_center_instance_arn,
              JSON_EXTRACT(Properties, '$.MonitorId') as monitor_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Subdomain') as subdomain,
              JSON_EXTRACT(Properties, '$.Url') as url,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Monitor'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.IdentityCenterApplicationArn') as identity_center_application_arn,
                JSON_EXTRACT(detail.Properties, '$.IdentityCenterInstanceArn') as identity_center_instance_arn,
                JSON_EXTRACT(detail.Properties, '$.MonitorId') as monitor_id,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Subdomain') as subdomain,
                JSON_EXTRACT(detail.Properties, '$.Url') as url,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::Monitor'
                AND detail.data__TypeName = 'AWS::Deadline::Monitor'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'IdentityCenterApplicationArn') as identity_center_application_arn,
                  json_extract_path_text(Properties, 'IdentityCenterInstanceArn') as identity_center_instance_arn,
                  json_extract_path_text(Properties, 'MonitorId') as monitor_id,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Subdomain') as subdomain,
                  json_extract_path_text(Properties, 'Url') as url,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Monitor'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'IdentityCenterApplicationArn') as identity_center_application_arn,
                    json_extract_path_text(detail.Properties, 'IdentityCenterInstanceArn') as identity_center_instance_arn,
                    json_extract_path_text(detail.Properties, 'MonitorId') as monitor_id,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Subdomain') as subdomain,
                    json_extract_path_text(detail.Properties, 'Url') as url,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::Monitor'
                    AND detail.data__TypeName = 'AWS::Deadline::Monitor'
                    AND listing.region = 'us-east-1'
    monitors_list_only:
      name: monitors_list_only
      id: aws.deadline.monitors_list_only
      x-cfn-schema-name: Monitor
      x-cfn-type-name: AWS::Deadline::Monitor
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Monitor'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Monitor'
                AND region = 'us-east-1'
    queues:
      name: queues
      id: aws.deadline.queues
      x-cfn-schema-name: Queue
      x-cfn-type-name: AWS::Deadline::Queue
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Queue&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Queue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Queue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::Queue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/queues/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/queues/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/queues/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AllowedStorageProfileIds') as allowed_storage_profile_ids,
              JSON_EXTRACT(Properties, '$.DefaultBudgetAction') as default_budget_action,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.JobAttachmentSettings') as job_attachment_settings,
              JSON_EXTRACT(Properties, '$.JobRunAsUser') as job_run_as_user,
              JSON_EXTRACT(Properties, '$.QueueId') as queue_id,
              JSON_EXTRACT(Properties, '$.RequiredFileSystemLocationNames') as required_file_system_location_names,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Queue'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AllowedStorageProfileIds') as allowed_storage_profile_ids,
                JSON_EXTRACT(detail.Properties, '$.DefaultBudgetAction') as default_budget_action,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
                JSON_EXTRACT(detail.Properties, '$.JobAttachmentSettings') as job_attachment_settings,
                JSON_EXTRACT(detail.Properties, '$.JobRunAsUser') as job_run_as_user,
                JSON_EXTRACT(detail.Properties, '$.QueueId') as queue_id,
                JSON_EXTRACT(detail.Properties, '$.RequiredFileSystemLocationNames') as required_file_system_location_names,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::Queue'
                AND detail.data__TypeName = 'AWS::Deadline::Queue'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AllowedStorageProfileIds') as allowed_storage_profile_ids,
                  json_extract_path_text(Properties, 'DefaultBudgetAction') as default_budget_action,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'FarmId') as farm_id,
                  json_extract_path_text(Properties, 'JobAttachmentSettings') as job_attachment_settings,
                  json_extract_path_text(Properties, 'JobRunAsUser') as job_run_as_user,
                  json_extract_path_text(Properties, 'QueueId') as queue_id,
                  json_extract_path_text(Properties, 'RequiredFileSystemLocationNames') as required_file_system_location_names,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::Queue'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AllowedStorageProfileIds') as allowed_storage_profile_ids,
                    json_extract_path_text(detail.Properties, 'DefaultBudgetAction') as default_budget_action,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                    json_extract_path_text(detail.Properties, 'JobAttachmentSettings') as job_attachment_settings,
                    json_extract_path_text(detail.Properties, 'JobRunAsUser') as job_run_as_user,
                    json_extract_path_text(detail.Properties, 'QueueId') as queue_id,
                    json_extract_path_text(detail.Properties, 'RequiredFileSystemLocationNames') as required_file_system_location_names,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::Queue'
                    AND detail.data__TypeName = 'AWS::Deadline::Queue'
                    AND listing.region = 'us-east-1'
    queues_list_only:
      name: queues_list_only
      id: aws.deadline.queues_list_only
      x-cfn-schema-name: Queue
      x-cfn-type-name: AWS::Deadline::Queue
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Queue'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::Queue'
                AND region = 'us-east-1'
    queue_tags:
      name: queue_tags
      id: aws.deadline.queue_tags
      x-cfn-schema-name: Queue
      x-cfn-type-name: AWS::Deadline::Queue
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AllowedStorageProfileIds') as allowed_storage_profile_ids,
              JSON_EXTRACT(detail.Properties, '$.DefaultBudgetAction') as default_budget_action,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(detail.Properties, '$.JobAttachmentSettings') as job_attachment_settings,
              JSON_EXTRACT(detail.Properties, '$.JobRunAsUser') as job_run_as_user,
              JSON_EXTRACT(detail.Properties, '$.QueueId') as queue_id,
              JSON_EXTRACT(detail.Properties, '$.RequiredFileSystemLocationNames') as required_file_system_location_names,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Deadline::Queue'
              AND detail.data__TypeName = 'AWS::Deadline::Queue'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AllowedStorageProfileIds') as allowed_storage_profile_ids,
                json_extract_path_text(detail.Properties, 'DefaultBudgetAction') as default_budget_action,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                json_extract_path_text(detail.Properties, 'JobAttachmentSettings') as job_attachment_settings,
                json_extract_path_text(detail.Properties, 'JobRunAsUser') as job_run_as_user,
                json_extract_path_text(detail.Properties, 'QueueId') as queue_id,
                json_extract_path_text(detail.Properties, 'RequiredFileSystemLocationNames') as required_file_system_location_names,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Deadline::Queue'
                AND detail.data__TypeName = 'AWS::Deadline::Queue'
                AND listing.region = 'us-east-1'
    queue_environments:
      name: queue_environments
      id: aws.deadline.queue_environments
      x-cfn-schema-name: QueueEnvironment
      x-cfn-type-name: AWS::Deadline::QueueEnvironment
      x-identifiers:
        - FarmId
        - QueueId
        - QueueEnvironmentId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__QueueEnvironment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::QueueEnvironment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::QueueEnvironment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::QueueEnvironment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/queue_environments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/queue_environments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/queue_environments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.QueueEnvironmentId') as queue_environment_id,
              JSON_EXTRACT(Properties, '$.QueueId') as queue_id,
              JSON_EXTRACT(Properties, '$.Template') as template,
              JSON_EXTRACT(Properties, '$.TemplateType') as template_type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::QueueEnvironment'
              AND data__Identifier = '<FarmId>|<QueueId>|<QueueEnvironmentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Priority') as priority,
                JSON_EXTRACT(detail.Properties, '$.QueueEnvironmentId') as queue_environment_id,
                JSON_EXTRACT(detail.Properties, '$.QueueId') as queue_id,
                JSON_EXTRACT(detail.Properties, '$.Template') as template,
                JSON_EXTRACT(detail.Properties, '$.TemplateType') as template_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::QueueEnvironment'
                AND detail.data__TypeName = 'AWS::Deadline::QueueEnvironment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FarmId') as farm_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Priority') as priority,
                  json_extract_path_text(Properties, 'QueueEnvironmentId') as queue_environment_id,
                  json_extract_path_text(Properties, 'QueueId') as queue_id,
                  json_extract_path_text(Properties, 'Template') as template,
                  json_extract_path_text(Properties, 'TemplateType') as template_type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::QueueEnvironment'
                  AND data__Identifier = '<FarmId>|<QueueId>|<QueueEnvironmentId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Priority') as priority,
                    json_extract_path_text(detail.Properties, 'QueueEnvironmentId') as queue_environment_id,
                    json_extract_path_text(detail.Properties, 'QueueId') as queue_id,
                    json_extract_path_text(detail.Properties, 'Template') as template,
                    json_extract_path_text(detail.Properties, 'TemplateType') as template_type
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::QueueEnvironment'
                    AND detail.data__TypeName = 'AWS::Deadline::QueueEnvironment'
                    AND listing.region = 'us-east-1'
    queue_environments_list_only:
      name: queue_environments_list_only
      id: aws.deadline.queue_environments_list_only
      x-cfn-schema-name: QueueEnvironment
      x-cfn-type-name: AWS::Deadline::QueueEnvironment
      x-identifiers:
        - FarmId
        - QueueId
        - QueueEnvironmentId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.QueueId') as queue_id,
              JSON_EXTRACT(Properties, '$.QueueEnvironmentId') as queue_environment_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::QueueEnvironment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FarmId') as farm_id,
                json_extract_path_text(Properties, 'QueueId') as queue_id,
                json_extract_path_text(Properties, 'QueueEnvironmentId') as queue_environment_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::QueueEnvironment'
                AND region = 'us-east-1'
    queue_fleet_associations:
      name: queue_fleet_associations
      id: aws.deadline.queue_fleet_associations
      x-cfn-schema-name: QueueFleetAssociation
      x-cfn-type-name: AWS::Deadline::QueueFleetAssociation
      x-identifiers:
        - FarmId
        - FleetId
        - QueueId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__QueueFleetAssociation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::QueueFleetAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::QueueFleetAssociation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/queue_fleet_associations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/queue_fleet_associations/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.FleetId') as fleet_id,
              JSON_EXTRACT(Properties, '$.QueueId') as queue_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
              AND data__Identifier = '<FarmId>|<FleetId>|<QueueId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
                JSON_EXTRACT(detail.Properties, '$.FleetId') as fleet_id,
                JSON_EXTRACT(detail.Properties, '$.QueueId') as queue_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
                AND detail.data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FarmId') as farm_id,
                  json_extract_path_text(Properties, 'FleetId') as fleet_id,
                  json_extract_path_text(Properties, 'QueueId') as queue_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
                  AND data__Identifier = '<FarmId>|<FleetId>|<QueueId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                    json_extract_path_text(detail.Properties, 'FleetId') as fleet_id,
                    json_extract_path_text(detail.Properties, 'QueueId') as queue_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
                    AND detail.data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
                    AND listing.region = 'us-east-1'
    queue_fleet_associations_list_only:
      name: queue_fleet_associations_list_only
      id: aws.deadline.queue_fleet_associations_list_only
      x-cfn-schema-name: QueueFleetAssociation
      x-cfn-type-name: AWS::Deadline::QueueFleetAssociation
      x-identifiers:
        - FarmId
        - FleetId
        - QueueId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.FleetId') as fleet_id,
              JSON_EXTRACT(Properties, '$.QueueId') as queue_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FarmId') as farm_id,
                json_extract_path_text(Properties, 'FleetId') as fleet_id,
                json_extract_path_text(Properties, 'QueueId') as queue_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::QueueFleetAssociation'
                AND region = 'us-east-1'
    storage_profiles:
      name: storage_profiles
      id: aws.deadline.storage_profiles
      x-cfn-schema-name: StorageProfile
      x-cfn-type-name: AWS::Deadline::StorageProfile
      x-identifiers:
        - FarmId
        - StorageProfileId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StorageProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::StorageProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::StorageProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Deadline::StorageProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/storage_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/storage_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/storage_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.FileSystemLocations') as file_system_locations,
              JSON_EXTRACT(Properties, '$.OsFamily') as os_family,
              JSON_EXTRACT(Properties, '$.StorageProfileId') as storage_profile_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::StorageProfile'
              AND data__Identifier = '<FarmId>|<StorageProfileId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DisplayName') as display_name,
                JSON_EXTRACT(detail.Properties, '$.FarmId') as farm_id,
                JSON_EXTRACT(detail.Properties, '$.FileSystemLocations') as file_system_locations,
                JSON_EXTRACT(detail.Properties, '$.OsFamily') as os_family,
                JSON_EXTRACT(detail.Properties, '$.StorageProfileId') as storage_profile_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Deadline::StorageProfile'
                AND detail.data__TypeName = 'AWS::Deadline::StorageProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'FarmId') as farm_id,
                  json_extract_path_text(Properties, 'FileSystemLocations') as file_system_locations,
                  json_extract_path_text(Properties, 'OsFamily') as os_family,
                  json_extract_path_text(Properties, 'StorageProfileId') as storage_profile_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Deadline::StorageProfile'
                  AND data__Identifier = '<FarmId>|<StorageProfileId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DisplayName') as display_name,
                    json_extract_path_text(detail.Properties, 'FarmId') as farm_id,
                    json_extract_path_text(detail.Properties, 'FileSystemLocations') as file_system_locations,
                    json_extract_path_text(detail.Properties, 'OsFamily') as os_family,
                    json_extract_path_text(detail.Properties, 'StorageProfileId') as storage_profile_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Deadline::StorageProfile'
                    AND detail.data__TypeName = 'AWS::Deadline::StorageProfile'
                    AND listing.region = 'us-east-1'
    storage_profiles_list_only:
      name: storage_profiles_list_only
      id: aws.deadline.storage_profiles_list_only
      x-cfn-schema-name: StorageProfile
      x-cfn-type-name: AWS::Deadline::StorageProfile
      x-identifiers:
        - FarmId
        - StorageProfileId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FarmId') as farm_id,
              JSON_EXTRACT(Properties, '$.StorageProfileId') as storage_profile_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::StorageProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FarmId') as farm_id,
                json_extract_path_text(Properties, 'StorageProfileId') as storage_profile_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Deadline::StorageProfile'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Farm&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFarm
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFarmRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Fleet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFleet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFleetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LicenseEndpoint&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLicenseEndpoint
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLicenseEndpointRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MeteredProduct&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMeteredProduct
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMeteredProductRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Monitor&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMonitor
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMonitorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Queue&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateQueue
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateQueueRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__QueueEnvironment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateQueueEnvironment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateQueueEnvironmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__QueueFleetAssociation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateQueueFleetAssociation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateQueueFleetAssociationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StorageProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStorageProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStorageProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
