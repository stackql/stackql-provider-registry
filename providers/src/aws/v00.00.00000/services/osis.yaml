openapi: 3.0.0
info:
  title: OSIS
  version: 1.0.0
paths: {}
components:
  schemas:
    BufferOptions:
      description: Key-value pairs to configure buffering.
      type: object
      properties:
        PersistentBufferEnabled:
          type: boolean
          description: Whether persistent buffering should be enabled.
      required:
        - PersistentBufferEnabled
      additionalProperties: false
    EncryptionAtRestOptions:
      description: Key-value pairs to configure encryption at rest.
      type: object
      properties:
        KmsKeyArn:
          type: string
          description: The KMS key to use for encrypting data. By default an AWS owned key is used
      required:
        - KmsKeyArn
      additionalProperties: false
    LogPublishingOptions:
      description: Key-value pairs to configure log publishing.
      type: object
      properties:
        IsLoggingEnabled:
          type: boolean
          description: Whether logs should be published.
        CloudWatchLogDestination:
          type: object
          description: The destination for OpenSearch Ingestion Service logs sent to Amazon CloudWatch.
          properties:
            LogGroup:
              type: string
              minLength: 1
              maxLength: 512
              pattern: \/aws\/vendedlogs\/[\.\-_/#A-Za-z0-9]+
          required:
            - LogGroup
          additionalProperties: false
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    VpcOptions:
      description: Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion Service creates the pipeline with a public endpoint.
      type: object
      properties:
        SecurityGroupIds:
          type: array
          x-insertionOrder: false
          description: A list of security groups associated with the VPC endpoint.
          items:
            type: string
            minLength: 11
            maxLength: 20
            pattern: sg-\w{8}(\w{9})?
        SubnetIds:
          type: array
          x-insertionOrder: false
          description: A list of subnet IDs associated with the VPC endpoint.
          items:
            type: string
            minLength: 15
            maxLength: 24
            pattern: subnet-\w{8}(\w{9})?
      required:
        - SubnetIds
      additionalProperties: false
    VpcEndpoint:
      description: An OpenSearch Ingestion Service-managed VPC endpoint that will access one or more pipelines.
      type: object
      properties:
        VpcEndpointId:
          type: string
          description: The unique identifier of the endpoint.
        VpcId:
          type: string
          description: The ID for your VPC. AWS Privatelink generates this value when you create a VPC.
        VpcOptions:
          $ref: '#/components/schemas/VpcOptions'
      additionalProperties: false
    Pipeline:
      type: object
      properties:
        BufferOptions:
          $ref: '#/components/schemas/BufferOptions'
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
        LogPublishingOptions:
          $ref: '#/components/schemas/LogPublishingOptions'
        MaxUnits:
          description: The maximum pipeline capacity, in Ingestion OpenSearch Compute Units (OCUs).
          type: integer
          minimum: 1
          maximum: 384
        MinUnits:
          description: The minimum pipeline capacity, in Ingestion OpenSearch Compute Units (OCUs).
          type: integer
          minimum: 1
          maximum: 384
        PipelineConfigurationBody:
          description: The Data Prepper pipeline configuration.
          type: string
          minLength: 1
          maxLength: 24000
        PipelineName:
          description: Name of the OpenSearch Ingestion Service pipeline to create. Pipeline names are unique across the pipelines owned by an account within an AWS Region.
          type: string
          minLength: 3
          maxLength: 28
          pattern: '[a-z][a-z0-9\-]+'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        VpcOptions:
          $ref: '#/components/schemas/VpcOptions'
        VpcEndpoints:
          type: array
          x-insertionOrder: false
          description: The VPC interface endpoints that have access to the pipeline.
          items:
            $ref: '#/components/schemas/VpcEndpoint'
        PipelineArn:
          description: The Amazon Resource Name (ARN) of the pipeline.
          type: string
          minLength: 46
          maxLength: 76
          pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$
        IngestEndpointUrls:
          type: array
          x-insertionOrder: false
          description: A list of endpoints that can be used for ingesting data into a pipeline
          items:
            type: string
      required:
        - MaxUnits
        - MinUnits
        - PipelineConfigurationBody
        - PipelineName
      x-stackql-resource-name: pipeline
      description: An OpenSearch Ingestion Service Data Prepper pipeline running Data Prepper.
      x-type-name: AWS::OSIS::Pipeline
      x-stackql-primary-identifier:
        - PipelineArn
      x-create-only-properties:
        - PipelineName
      x-write-only-properties:
        - VpcOptions
      x-read-only-properties:
        - PipelineArn
        - IngestEndpointUrls
        - VpcEndpoints
      x-required-properties:
        - MaxUnits
        - MinUnits
        - PipelineConfigurationBody
        - PipelineName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - osis:CreatePipeline
          - osis:GetPipeline
          - osis:TagResource
          - osis:ListTagsForResource
          - iam:PassRole
          - iam:CreateServiceLinkedRole
          - logs:CreateLogDelivery
          - kms:DescribeKey
        read:
          - osis:GetPipeline
          - osis:ListTagsForResource
        update:
          - osis:UpdatePipeline
          - osis:GetPipeline
          - osis:ListTagsForResource
          - osis:TagResource
          - osis:UntagResource
          - iam:PassRole
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:ListLogDeliveries
          - kms:DescribeKey
        delete:
          - osis:DeletePipeline
          - osis:GetPipeline
          - logs:GetLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
        list:
          - osis:ListPipelines
  x-stackQL-resources:
    pipelines:
      name: pipelines
      id: aws.osis.pipelines
      x-cfn-schema-name: Pipeline
      x-type: list
      x-identifiers:
        - PipelineArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PipelineArn') as pipeline_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OSIS::Pipeline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PipelineArn') as pipeline_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OSIS::Pipeline'
                AND region = 'us-east-1'
    pipeline:
      name: pipeline
      id: aws.osis.pipeline
      x-cfn-schema-name: Pipeline
      x-type: get
      x-identifiers:
        - PipelineArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BufferOptions') as buffer_options,
              JSON_EXTRACT(Properties, '$.EncryptionAtRestOptions') as encryption_at_rest_options,
              JSON_EXTRACT(Properties, '$.LogPublishingOptions') as log_publishing_options,
              JSON_EXTRACT(Properties, '$.MaxUnits') as max_units,
              JSON_EXTRACT(Properties, '$.MinUnits') as min_units,
              JSON_EXTRACT(Properties, '$.PipelineConfigurationBody') as pipeline_configuration_body,
              JSON_EXTRACT(Properties, '$.PipelineName') as pipeline_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.VpcOptions') as vpc_options,
              JSON_EXTRACT(Properties, '$.VpcEndpoints') as vpc_endpoints,
              JSON_EXTRACT(Properties, '$.PipelineArn') as pipeline_arn,
              JSON_EXTRACT(Properties, '$.IngestEndpointUrls') as ingest_endpoint_urls
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OSIS::Pipeline'
              AND data__Identifier = '<PipelineArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'BufferOptions') as buffer_options,
                json_extract_path_text(Properties, 'EncryptionAtRestOptions') as encryption_at_rest_options,
                json_extract_path_text(Properties, 'LogPublishingOptions') as log_publishing_options,
                json_extract_path_text(Properties, 'MaxUnits') as max_units,
                json_extract_path_text(Properties, 'MinUnits') as min_units,
                json_extract_path_text(Properties, 'PipelineConfigurationBody') as pipeline_configuration_body,
                json_extract_path_text(Properties, 'PipelineName') as pipeline_name,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'VpcOptions') as vpc_options,
                json_extract_path_text(Properties, 'VpcEndpoints') as vpc_endpoints,
                json_extract_path_text(Properties, 'PipelineArn') as pipeline_arn,
                json_extract_path_text(Properties, 'IngestEndpointUrls') as ingest_endpoint_urls
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OSIS::Pipeline'
                AND data__Identifier = '<PipelineArn>'
                AND region = 'us-east-1'
