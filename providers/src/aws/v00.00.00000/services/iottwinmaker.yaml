openapi: 3.0.0
info:
  title: IoTTwinMaker
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    DateTimeFormat:
      type: string
      format: date-time
    ParentComponentType:
      type: string
      pattern: '[a-zA-Z_\.\-0-9:]+'
    PropertyName:
      type: string
      pattern: '[a-zA-Z_\-0-9]+'
    RequiredProperty:
      type: string
      pattern: '[a-zA-Z_\-0-9]+'
    LambdaFunction:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):lambda:[a-z0-9-]+:[0-9]{12}:function:[\/a-zA-Z0-9_-]+
          minLength: 1
          maxLength: 128
      additionalProperties: false
      required:
        - Arn
    DataConnector:
      description: The data connector.
      type: object
      properties:
        IsNative:
          description: A Boolean value that specifies whether the data connector is native to IoT TwinMaker.
          type: boolean
        Lambda:
          description: The Lambda function associated with this data connector.
          $ref: '#/components/schemas/LambdaFunction'
      additionalProperties: false
    Function:
      description: The function of component type.
      type: object
      properties:
        ImplementedBy:
          description: The data connector.
          $ref: '#/components/schemas/DataConnector'
        RequiredProperties:
          description: The required properties of the function.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RequiredProperty'
        Scope:
          description: The scope of the function.
          type: string
          enum:
            - ENTITY
            - WORKSPACE
      additionalProperties: false
    DataValue:
      description: An object that specifies a value for a property.
      type: object
      properties:
        BooleanValue:
          description: A Boolean value.
          type: boolean
        DoubleValue:
          description: A double value.
          type: number
        Expression:
          description: An expression that produces the value.
          type: string
          pattern: (^\$\{Parameters\.[a-zA-z]+([a-zA-z_0-9]*)}$)
          minLength: 1
          maxLength: 316
        IntegerValue:
          description: An integer value.
          type: integer
        ListValue:
          description: A list of multiple values.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataValue'
        LongValue:
          description: A long value.
          type: number
        StringValue:
          description: A string value.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        MapValue:
          description: An object that maps strings to multiple DataValue objects.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/DataValue'
          additionalProperties: false
        RelationshipValue:
          description: A value that relates a component to another component.
          type: object
          properties:
            TargetComponentName:
              type: string
              pattern: '[a-zA-Z_\-0-9]+'
              minLength: 1
              maxLength: 256
            TargetEntityId:
              type: string
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+'
              minLength: 1
              maxLength: 128
          additionalProperties: false
      additionalProperties: false
    Relationship:
      description: The type of the relationship.
      type: object
      properties:
        RelationshipType:
          description: The type of the relationship.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
        TargetComponentTypeId:
          description: The ID of the target component type associated with this relationship.
          type: string
          pattern: '[a-zA-Z_\.\-0-9:]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    DataType:
      description: An object that specifies the data type of a property.
      type: object
      properties:
        AllowedValues:
          description: The allowed values for this data type.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataValue'
        NestedType:
          description: The nested type in the data type.
          $ref: '#/components/schemas/DataType'
        Relationship:
          description: A relationship that associates a component with another component.
          $ref: '#/components/schemas/Relationship'
        Type:
          description: The underlying type of the data type.
          type: string
          enum:
            - RELATIONSHIP
            - STRING
            - LONG
            - BOOLEAN
            - INTEGER
            - DOUBLE
            - LIST
            - MAP
        UnitOfMeasure:
          description: The unit of measure used in this data type.
          type: string
          pattern: .*
          minLength: 1
          maxLength: 256
      additionalProperties: false
    PropertyDefinition:
      description: An object that sets information about a property.
      type: object
      properties:
        Configurations:
          description: An object that specifies information about a property.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              pattern: '[a-zA-Z_\-0-9]+'
              minLength: 1
              maxLength: 256
          additionalProperties: false
        DataType:
          description: An object that contains information about the data type.
          $ref: '#/components/schemas/DataType'
        DefaultValue:
          description: An object that contains the default value.
          $ref: '#/components/schemas/DataValue'
        IsExternalId:
          description: A Boolean value that specifies whether the property ID comes from an external data store.
          type: boolean
        IsRequiredInEntity:
          description: A Boolean value that specifies whether the property is required.
          type: boolean
        IsStoredExternally:
          description: A Boolean value that specifies whether the property is stored externally.
          type: boolean
        IsTimeSeries:
          description: A Boolean value that specifies whether the property consists of time series data.
          type: boolean
      additionalProperties: false
    PropertyGroup:
      description: An object that specifies information about a property group.
      type: object
      properties:
        GroupType:
          description: The type of property group.
          type: string
          enum:
            - TABULAR
        PropertyNames:
          description: The list of property names in the property group.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/PropertyName'
      additionalProperties: false
    CompositeComponentType:
      description: An object that sets information about a composite component type.
      type: object
      properties:
        ComponentTypeId:
          description: The id of the composite component type.
          type: string
          pattern: '[a-zA-Z_\.\-0-9:]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    Status:
      type: object
      properties:
        State:
          type: string
          enum:
            - CREATING
            - UPDATING
            - DELETING
            - ACTIVE
            - ERROR
        Error:
          type: object
          anyOf:
            - description: Empty Error object.
              type: object
              additionalProperties: false
            - description: Error object with Message and Code.
              type: object
              properties:
                Message:
                  type: string
                  minLength: 0
                  maxLength: 2048
                Code:
                  type: string
                  enum:
                    - VALIDATION_ERROR
                    - INTERNAL_FAILURE
              additionalProperties: false
      additionalProperties: false
    ComponentType:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace that contains the component type.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z_\.\-0-9:]+'
        Description:
          description: The description of the component type.
          type: string
          minLength: 0
          maxLength: 512
        ExtendsFrom:
          description: Specifies the parent component type to extend.
          type: array
          minItems: 1
          maxItems: 256
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ParentComponentType'
        Functions:
          description: a Map of functions in the component type. Each function's key must be unique to this map.
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Function'
        IsSingleton:
          description: A Boolean value that specifies whether an entity can have more than one component of this type.
          type: boolean
        PropertyDefinitions:
          description: An map of the property definitions in the component type. Each property definition's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyDefinition'
          additionalProperties: false
        PropertyGroups:
          description: An map of the property groups in the component type. Each property group's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        CompositeComponentTypes:
          description: An map of the composite component types in the component type. Each composite component type's key must be unique to this map.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/CompositeComponentType'
          additionalProperties: false
        Arn:
          description: The ARN of the component type.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        CreationDateTime:
          description: The date and time when the component type was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The last date and time when the component type was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Status:
          description: The current status of the component type.
          $ref: '#/components/schemas/Status'
        IsAbstract:
          description: A Boolean value that specifies whether the component type is abstract.
          type: boolean
        IsSchemaInitialized:
          description: A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.
          type: boolean
        Tags:
          type: object
          description: A map of key-value pairs to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - ComponentTypeId
      x-stackql-resource-name: component_type
      description: Resource schema for AWS::IoTTwinMaker::ComponentType
      x-type-name: AWS::IoTTwinMaker::ComponentType
      x-stackql-primary-identifier:
        - WorkspaceId
        - ComponentTypeId
      x-create-only-properties:
        - WorkspaceId
        - ComponentTypeId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - Status
        - IsAbstract
        - IsSchemaInitialized
      x-required-properties:
        - WorkspaceId
        - ComponentTypeId
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:ListTagsForResource
      x-required-permissions:
        create:
          - iottwinmaker:CreateComponentType
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateComponentType
        delete:
          - iottwinmaker:DeleteComponentType
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListComponentTypes
          - iottwinmaker:ListTagsForResource
    PropertyDefinitionConfiguration:
      description: An object that specifies information about a property configuration.
      type: object
      x-patternProperties:
        '[a-zA-Z_\-0-9]+':
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
      additionalProperties: false
    Definition:
      description: An object that specifies information about a property definition.
      type: object
      properties:
        Configuration:
          description: An object that specifies information about a property configuration.
          $ref: '#/components/schemas/PropertyDefinitionConfiguration'
        DataType:
          description: An object that contains information about the data type.
          $ref: '#/components/schemas/DataType'
        DefaultValue:
          description: An object that contains the default value.
          $ref: '#/components/schemas/DataValue'
        IsExternalId:
          description: A Boolean value that specifies whether the property ID comes from an external data store.
          type: boolean
        IsFinal:
          description: A Boolean value that specifies whether the property definition can be updated.
          type: boolean
        IsImported:
          description: A Boolean value that specifies whether the property definition is imported from an external data store.
          type: boolean
        IsInherited:
          description: A Boolean value that specifies whether the property definition is inherited from a parent entity.
          type: boolean
        IsRequiredInEntity:
          description: A Boolean value that specifies whether the property is required.
          type: boolean
        IsStoredExternally:
          description: A Boolean value that specifies whether the property is stored externally.
          type: boolean
        IsTimeSeries:
          description: A Boolean value that specifies whether the property consists of time series data.
          type: boolean
      additionalProperties: false
    Property:
      description: An object that specifies information about a property.
      type: object
      properties:
        Definition:
          description: The definition of the property.
          $ref: '#/components/schemas/Definition'
        Value:
          description: The value of the property.
          $ref: '#/components/schemas/DataValue'
      additionalProperties: false
    Component:
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        Description:
          description: The description of the component.
          type: string
          minLength: 0
          maxLength: 512
        DefinedIn:
          description: The name of the property definition set in the component.
          type: string
          minLength: 1
          maxLength: 256
        Properties:
          description: An object that maps strings to the properties to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Property'
          additionalProperties: false
        PropertyGroups:
          description: An object that maps strings to the property groups to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        Status:
          description: The current status of the entity.
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    CompositeComponent:
      type: object
      properties:
        ComponentName:
          description: The name of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        ComponentPath:
          description: The path of the component.
          type: string
          pattern: '[a-zA-Z_\-0-9/]+'
          minLength: 1
          maxLength: 256
        ComponentTypeId:
          description: The ID of the component type.
          type: string
          pattern: '[a-zA-Z_\-0-9]+'
          minLength: 1
          maxLength: 256
        Description:
          description: The description of the component.
          type: string
          minLength: 0
          maxLength: 512
        Properties:
          description: An object that maps strings to the properties to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Property'
          additionalProperties: false
        PropertyGroups:
          description: An object that maps strings to the property groups to set in the component type. Each string in the mapping must be unique to this object.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/PropertyGroup'
          additionalProperties: false
        Status:
          description: The current status of the component.
          $ref: '#/components/schemas/Status'
      additionalProperties: false
    Entity:
      type: object
      properties:
        EntityId:
          description: The ID of the entity.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+'
        EntityName:
          description: The name of the entity.
          type: string
          minLength: 1
          maxLength: 256
          pattern: '[a-zA-Z_0-9-.][a-zA-Z_0-9-. ]*[a-zA-Z0-9]+'
        Status:
          description: The current status of the entity.
          $ref: '#/components/schemas/Status'
        HasChildEntities:
          description: A Boolean value that specifies whether the entity has child entities or not.
          type: boolean
        ParentEntityId:
          description: The ID of the parent entity.
          type: string
          minLength: 1
          maxLength: 128
          pattern: \$ROOT|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+
        Arn:
          description: The ARN of the entity.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the entity.
          type: string
          minLength: 0
          maxLength: 512
        CreationDateTime:
          description: The date and time when the entity was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The last date and time when the entity was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Components:
          description: A map that sets information about a component type.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              $ref: '#/components/schemas/Component'
          additionalProperties: false
        CompositeComponents:
          description: A map that sets information about a composite component.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9/]+':
              $ref: '#/components/schemas/CompositeComponent'
          additionalProperties: false
      required:
        - WorkspaceId
        - EntityName
      x-stackql-resource-name: entity
      description: Resource schema for AWS::IoTTwinMaker::Entity
      x-type-name: AWS::IoTTwinMaker::Entity
      x-stackql-primary-identifier:
        - WorkspaceId
        - EntityId
      x-create-only-properties:
        - WorkspaceId
        - EntityId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - Status
        - HasChildEntities
      x-required-properties:
        - WorkspaceId
        - EntityName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:ListTagsForResource
      x-required-permissions:
        create:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:CreateEntity
          - iottwinmaker:GetEntity
          - iottwinmaker:ListComponents
          - iottwinmaker:ListProperties
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetEntity
          - iottwinmaker:ListComponents
          - iottwinmaker:ListProperties
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListEntities
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetComponentType
          - iottwinmaker:GetEntity
          - iottwinmaker:ListComponents
          - iottwinmaker:ListProperties
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateEntity
          - iottwinmaker:UpdateComponentType
        delete:
          - iottwinmaker:GetEntity
          - iottwinmaker:GetWorkspace
          - iottwinmaker:DeleteEntity
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:GetEntity
          - iottwinmaker:ListEntities
    Scene:
      type: object
      properties:
        SceneId:
          description: The ID of the scene.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Arn:
          description: The ARN of the scene.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the scene.
          type: string
          minLength: 0
          maxLength: 512
        ContentLocation:
          description: The relative path that specifies the location of the content definition file.
          type: string
          minLength: 0
          maxLength: 256
          pattern: '[sS]3://[A-Za-z0-9._/-]+'
        CreationDateTime:
          description: The date and time when the scene was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time of the current update.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
        WorkspaceId:
          description: The ID of the scene.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Capabilities:
          description: A list of capabilities that the scene uses to render.
          type: array
          minItems: 0
          maxItems: 50
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
            minLength: 0
            maxLength: 256
            pattern: .*
        SceneMetadata:
          description: A key-value pair of scene metadata for the scene.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              minLength: 0
              maxLength: 2048
          minLength: 0
          maxLength: 50
          additionalProperties: false
        GeneratedSceneMetadata:
          description: A key-value pair of generated scene metadata for the scene.
          type: object
          x-patternProperties:
            '[a-zA-Z_\-0-9]+':
              type: string
              minLength: 0
              maxLength: 2048
          minLength: 0
          maxLength: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - SceneId
        - ContentLocation
      x-stackql-resource-name: scene
      description: Resource schema for AWS::IoTTwinMaker::Scene
      x-type-name: AWS::IoTTwinMaker::Scene
      x-stackql-primary-identifier:
        - WorkspaceId
        - SceneId
      x-create-only-properties:
        - SceneId
        - WorkspaceId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - GeneratedSceneMetadata
      x-required-properties:
        - WorkspaceId
        - SceneId
        - ContentLocation
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:ListTagsForResource
      x-required-permissions:
        create:
          - iottwinmaker:CreateScene
          - iottwinmaker:GetScene
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:GetScene
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetScene
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateScene
        delete:
          - iottwinmaker:DeleteScene
          - iottwinmaker:GetScene
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:ListScenes
    SyncJob:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        SyncSource:
          description: The source of the SyncJob.
          type: string
          minLength: 1
          maxLength: 128
        SyncRole:
          description: The IAM Role that execute SyncJob.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
        CreationDateTime:
          description: The date and time when the sync job was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time when the sync job was updated.
          $ref: '#/components/schemas/DateTimeFormat'
        Arn:
          description: The ARN of the SyncJob.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        State:
          description: The state of SyncJob.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_\-0-9]+'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          additionalProperties: false
      required:
        - WorkspaceId
        - SyncSource
        - SyncRole
      x-stackql-resource-name: sync_job
      description: Resource schema for AWS::IoTTwinMaker::SyncJob
      x-type-name: AWS::IoTTwinMaker::SyncJob
      x-stackql-primary-identifier:
        - WorkspaceId
        - SyncSource
      x-create-only-properties:
        - WorkspaceId
        - SyncSource
        - SyncRole
        - Tags
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
        - State
      x-required-properties:
        - WorkspaceId
        - SyncSource
        - SyncRole
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:ListTagsForResource
      x-required-permissions:
        create:
          - iam:PassRole
          - iottwinmaker:CreateSyncJob
          - iottwinmaker:GetSyncJob
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetSyncJob
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
        delete:
          - iottwinmaker:DeleteSyncJob
          - iottwinmaker:GetSyncJob
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListSyncJobs
          - iottwinmaker:ListTagsForResource
    Workspace:
      type: object
      properties:
        WorkspaceId:
          description: The ID of the workspace.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
        Arn:
          description: The ARN of the workspace.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
        Description:
          description: The description of the workspace.
          type: string
          minLength: 0
          maxLength: 512
        Role:
          description: The ARN of the execution role associated with the workspace.
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
        S3Location:
          description: The ARN of the S3 bucket where resources associated with the workspace are stored.
          type: string
        CreationDateTime:
          description: The date and time when the workspace was created.
          $ref: '#/components/schemas/DateTimeFormat'
        UpdateDateTime:
          description: The date and time of the current update.
          $ref: '#/components/schemas/DateTimeFormat'
        Tags:
          type: object
          description: A map of key-value pairs to associate with a resource.
          x-patternProperties:
            ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
              type: string
              minLength: 1
              maxLength: 256
          maxProperties: 50
          additionalProperties: false
      required:
        - WorkspaceId
        - Role
        - S3Location
      x-stackql-resource-name: workspace
      description: Resource schema for AWS::IoTTwinMaker::Workspace
      x-type-name: AWS::IoTTwinMaker::Workspace
      x-stackql-primary-identifier:
        - WorkspaceId
      x-create-only-properties:
        - WorkspaceId
      x-read-only-properties:
        - Arn
        - CreationDateTime
        - UpdateDateTime
      x-required-properties:
        - WorkspaceId
        - Role
        - S3Location
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:ListTagsForResource
      x-required-permissions:
        create:
          - iam:PassRole
          - iottwinmaker:CreateWorkspace
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
        read:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
        update:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:TagResource
          - iottwinmaker:UntagResource
          - iottwinmaker:UpdateWorkspace
        delete:
          - iottwinmaker:DeleteWorkspace
          - iottwinmaker:GetWorkspace
        list:
          - iottwinmaker:GetWorkspace
          - iottwinmaker:ListTagsForResource
          - iottwinmaker:ListWorkspaces
    CreateComponentTypeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            WorkspaceId:
              description: The ID of the workspace that contains the component type.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
            ComponentTypeId:
              description: The ID of the component type.
              type: string
              minLength: 1
              maxLength: 256
              pattern: '[a-zA-Z_\.\-0-9:]+'
            Description:
              description: The description of the component type.
              type: string
              minLength: 0
              maxLength: 512
            ExtendsFrom:
              description: Specifies the parent component type to extend.
              type: array
              minItems: 1
              maxItems: 256
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ParentComponentType'
            Functions:
              description: a Map of functions in the component type. Each function's key must be unique to this map.
              type: object
              additionalProperties: false
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  $ref: '#/components/schemas/Function'
            IsSingleton:
              description: A Boolean value that specifies whether an entity can have more than one component of this type.
              type: boolean
            PropertyDefinitions:
              description: An map of the property definitions in the component type. Each property definition's key must be unique to this map.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  $ref: '#/components/schemas/PropertyDefinition'
              additionalProperties: false
            PropertyGroups:
              description: An map of the property groups in the component type. Each property group's key must be unique to this map.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  $ref: '#/components/schemas/PropertyGroup'
              additionalProperties: false
            CompositeComponentTypes:
              description: An map of the composite component types in the component type. Each composite component type's key must be unique to this map.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  $ref: '#/components/schemas/CompositeComponentType'
              additionalProperties: false
            Arn:
              description: The ARN of the component type.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
            CreationDateTime:
              description: The date and time when the component type was created.
              $ref: '#/components/schemas/DateTimeFormat'
            UpdateDateTime:
              description: The last date and time when the component type was updated.
              $ref: '#/components/schemas/DateTimeFormat'
            Status:
              description: The current status of the component type.
              $ref: '#/components/schemas/Status'
            IsAbstract:
              description: A Boolean value that specifies whether the component type is abstract.
              type: boolean
            IsSchemaInitialized:
              description: A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.
              type: boolean
            Tags:
              type: object
              description: A map of key-value pairs to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
                  minLength: 1
                  maxLength: 256
              maxProperties: 50
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateComponentTypeRequest
      type: object
      required: []
    CreateEntityRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            EntityId:
              description: The ID of the entity.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+'
            EntityName:
              description: The name of the entity.
              type: string
              minLength: 1
              maxLength: 256
              pattern: '[a-zA-Z_0-9-.][a-zA-Z_0-9-. ]*[a-zA-Z0-9]+'
            Status:
              description: The current status of the entity.
              $ref: '#/components/schemas/Status'
            HasChildEntities:
              description: A Boolean value that specifies whether the entity has child entities or not.
              type: boolean
            ParentEntityId:
              description: The ID of the parent entity.
              type: string
              minLength: 1
              maxLength: 128
              pattern: \$ROOT|^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\-0-9.:]*[a-zA-Z0-9]+
            Arn:
              description: The ARN of the entity.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
            Description:
              description: The description of the entity.
              type: string
              minLength: 0
              maxLength: 512
            CreationDateTime:
              description: The date and time when the entity was created.
              $ref: '#/components/schemas/DateTimeFormat'
            UpdateDateTime:
              description: The last date and time when the entity was updated.
              $ref: '#/components/schemas/DateTimeFormat'
            Tags:
              type: object
              description: A key-value pair to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
                  minLength: 1
                  maxLength: 256
              additionalProperties: false
            WorkspaceId:
              description: The ID of the workspace.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
            Components:
              description: A map that sets information about a component type.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  $ref: '#/components/schemas/Component'
              additionalProperties: false
            CompositeComponents:
              description: A map that sets information about a composite component.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9/]+':
                  $ref: '#/components/schemas/CompositeComponent'
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateEntityRequest
      type: object
      required: []
    CreateSceneRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            SceneId:
              description: The ID of the scene.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
            Arn:
              description: The ARN of the scene.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
            Description:
              description: The description of the scene.
              type: string
              minLength: 0
              maxLength: 512
            ContentLocation:
              description: The relative path that specifies the location of the content definition file.
              type: string
              minLength: 0
              maxLength: 256
              pattern: '[sS]3://[A-Za-z0-9._/-]+'
            CreationDateTime:
              description: The date and time when the scene was created.
              $ref: '#/components/schemas/DateTimeFormat'
            UpdateDateTime:
              description: The date and time of the current update.
              $ref: '#/components/schemas/DateTimeFormat'
            Tags:
              type: object
              description: A key-value pair to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
                  minLength: 1
                  maxLength: 256
              additionalProperties: false
            WorkspaceId:
              description: The ID of the scene.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
            Capabilities:
              description: A list of capabilities that the scene uses to render.
              type: array
              minItems: 0
              maxItems: 50
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
                minLength: 0
                maxLength: 256
                pattern: .*
            SceneMetadata:
              description: A key-value pair of scene metadata for the scene.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  type: string
                  minLength: 0
                  maxLength: 2048
              minLength: 0
              maxLength: 50
              additionalProperties: false
            GeneratedSceneMetadata:
              description: A key-value pair of generated scene metadata for the scene.
              type: object
              x-patternProperties:
                '[a-zA-Z_\-0-9]+':
                  type: string
                  minLength: 0
                  maxLength: 2048
              minLength: 0
              maxLength: 50
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateSceneRequest
      type: object
      required: []
    CreateSyncJobRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            WorkspaceId:
              description: The ID of the workspace.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
            SyncSource:
              description: The source of the SyncJob.
              type: string
              minLength: 1
              maxLength: 128
            SyncRole:
              description: The IAM Role that execute SyncJob.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
            CreationDateTime:
              description: The date and time when the sync job was created.
              $ref: '#/components/schemas/DateTimeFormat'
            UpdateDateTime:
              description: The date and time when the sync job was updated.
              $ref: '#/components/schemas/DateTimeFormat'
            Arn:
              description: The ARN of the SyncJob.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
            State:
              description: The state of SyncJob.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_\-0-9]+'
            Tags:
              type: object
              description: A key-value pair to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
                  minLength: 1
                  maxLength: 256
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateSyncJobRequest
      type: object
      required: []
    CreateWorkspaceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            WorkspaceId:
              description: The ID of the workspace.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[a-zA-Z_0-9][a-zA-Z_\-0-9]*[a-zA-Z0-9]+'
            Arn:
              description: The ARN of the workspace.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\/a-zA-Z0-9_\-\.:]+
            Description:
              description: The description of the workspace.
              type: string
              minLength: 0
              maxLength: 512
            Role:
              description: The ARN of the execution role associated with the workspace.
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iam::[0-9]{12}:role/.*
            S3Location:
              description: The ARN of the S3 bucket where resources associated with the workspace are stored.
              type: string
            CreationDateTime:
              description: The date and time when the workspace was created.
              $ref: '#/components/schemas/DateTimeFormat'
            UpdateDateTime:
              description: The date and time of the current update.
              $ref: '#/components/schemas/DateTimeFormat'
            Tags:
              type: object
              description: A map of key-value pairs to associate with a resource.
              x-patternProperties:
                ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$:
                  type: string
                  minLength: 1
                  maxLength: 256
              maxProperties: 50
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateWorkspaceRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    component_types:
      name: component_types
      id: aws.iottwinmaker.component_types
      x-cfn-schema-name: ComponentType
      x-cfn-type-name: AWS::IoTTwinMaker::ComponentType
      x-identifiers:
        - WorkspaceId
        - ComponentTypeId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ComponentType&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::ComponentType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::ComponentType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::ComponentType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/component_types/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/component_types/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/component_types/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.ComponentTypeId') as component_type_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ExtendsFrom') as extends_from,
              JSON_EXTRACT(Properties, '$.Functions') as functions,
              JSON_EXTRACT(Properties, '$.IsSingleton') as is_singleton,
              JSON_EXTRACT(Properties, '$.PropertyDefinitions') as property_definitions,
              JSON_EXTRACT(Properties, '$.PropertyGroups') as property_groups,
              JSON_EXTRACT(Properties, '$.CompositeComponentTypes') as composite_component_types,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.IsAbstract') as is_abstract,
              JSON_EXTRACT(Properties, '$.IsSchemaInitialized') as is_schema_initialized,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
              AND data__Identifier = '<WorkspaceId>|<ComponentTypeId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
                JSON_EXTRACT(detail.Properties, '$.ComponentTypeId') as component_type_id,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ExtendsFrom') as extends_from,
                JSON_EXTRACT(detail.Properties, '$.Functions') as functions,
                JSON_EXTRACT(detail.Properties, '$.IsSingleton') as is_singleton,
                JSON_EXTRACT(detail.Properties, '$.PropertyDefinitions') as property_definitions,
                JSON_EXTRACT(detail.Properties, '$.PropertyGroups') as property_groups,
                JSON_EXTRACT(detail.Properties, '$.CompositeComponentTypes') as composite_component_types,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
                JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.IsAbstract') as is_abstract,
                JSON_EXTRACT(detail.Properties, '$.IsSchemaInitialized') as is_schema_initialized,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                  json_extract_path_text(Properties, 'ComponentTypeId') as component_type_id,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ExtendsFrom') as extends_from,
                  json_extract_path_text(Properties, 'Functions') as functions,
                  json_extract_path_text(Properties, 'IsSingleton') as is_singleton,
                  json_extract_path_text(Properties, 'PropertyDefinitions') as property_definitions,
                  json_extract_path_text(Properties, 'PropertyGroups') as property_groups,
                  json_extract_path_text(Properties, 'CompositeComponentTypes') as composite_component_types,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                  json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'IsAbstract') as is_abstract,
                  json_extract_path_text(Properties, 'IsSchemaInitialized') as is_schema_initialized,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                  AND data__Identifier = '<WorkspaceId>|<ComponentTypeId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                    json_extract_path_text(detail.Properties, 'ComponentTypeId') as component_type_id,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ExtendsFrom') as extends_from,
                    json_extract_path_text(detail.Properties, 'Functions') as functions,
                    json_extract_path_text(detail.Properties, 'IsSingleton') as is_singleton,
                    json_extract_path_text(detail.Properties, 'PropertyDefinitions') as property_definitions,
                    json_extract_path_text(detail.Properties, 'PropertyGroups') as property_groups,
                    json_extract_path_text(detail.Properties, 'CompositeComponentTypes') as composite_component_types,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                    json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'IsAbstract') as is_abstract,
                    json_extract_path_text(detail.Properties, 'IsSchemaInitialized') as is_schema_initialized,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                    AND detail.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                    AND listing.region = 'us-east-1'
    component_types_list_only:
      name: component_types_list_only
      id: aws.iottwinmaker.component_types_list_only
      x-cfn-schema-name: ComponentType
      x-cfn-type-name: AWS::IoTTwinMaker::ComponentType
      x-identifiers:
        - WorkspaceId
        - ComponentTypeId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.ComponentTypeId') as component_type_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'ComponentTypeId') as component_type_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND region = 'us-east-1'
    component_type_tags:
      name: component_type_tags
      id: aws.iottwinmaker.component_type_tags
      x-cfn-schema-name: ComponentType
      x-cfn-type-name: AWS::IoTTwinMaker::ComponentType
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(detail.Properties, '$.ComponentTypeId') as component_type_id,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ExtendsFrom') as extends_from,
              JSON_EXTRACT(detail.Properties, '$.Functions') as functions,
              JSON_EXTRACT(detail.Properties, '$.IsSingleton') as is_singleton,
              JSON_EXTRACT(detail.Properties, '$.PropertyDefinitions') as property_definitions,
              JSON_EXTRACT(detail.Properties, '$.PropertyGroups') as property_groups,
              JSON_EXTRACT(detail.Properties, '$.CompositeComponentTypes') as composite_component_types,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.IsAbstract') as is_abstract,
              JSON_EXTRACT(detail.Properties, '$.IsSchemaInitialized') as is_schema_initialized
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
              AND detail.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(detail.Properties, 'ComponentTypeId') as component_type_id,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ExtendsFrom') as extends_from,
                json_extract_path_text(detail.Properties, 'Functions') as functions,
                json_extract_path_text(detail.Properties, 'IsSingleton') as is_singleton,
                json_extract_path_text(detail.Properties, 'PropertyDefinitions') as property_definitions,
                json_extract_path_text(detail.Properties, 'PropertyGroups') as property_groups,
                json_extract_path_text(detail.Properties, 'CompositeComponentTypes') as composite_component_types,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'IsAbstract') as is_abstract,
                json_extract_path_text(detail.Properties, 'IsSchemaInitialized') as is_schema_initialized
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::ComponentType'
                AND listing.region = 'us-east-1'
    entities:
      name: entities
      id: aws.iottwinmaker.entities
      x-cfn-schema-name: Entity
      x-cfn-type-name: AWS::IoTTwinMaker::Entity
      x-identifiers:
        - WorkspaceId
        - EntityId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Entity&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Entity"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Entity"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Entity"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/entities/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/entities/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/entities/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.EntityId') as entity_id,
              JSON_EXTRACT(Properties, '$.EntityName') as entity_name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.HasChildEntities') as has_child_entities,
              JSON_EXTRACT(Properties, '$.ParentEntityId') as parent_entity_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Components') as components,
              JSON_EXTRACT(Properties, '$.CompositeComponents') as composite_components
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
              AND data__Identifier = '<WorkspaceId>|<EntityId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.EntityId') as entity_id,
                JSON_EXTRACT(detail.Properties, '$.EntityName') as entity_name,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.HasChildEntities') as has_child_entities,
                JSON_EXTRACT(detail.Properties, '$.ParentEntityId') as parent_entity_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
                JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
                JSON_EXTRACT(detail.Properties, '$.Components') as components,
                JSON_EXTRACT(detail.Properties, '$.CompositeComponents') as composite_components
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'EntityId') as entity_id,
                  json_extract_path_text(Properties, 'EntityName') as entity_name,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'HasChildEntities') as has_child_entities,
                  json_extract_path_text(Properties, 'ParentEntityId') as parent_entity_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                  json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                  json_extract_path_text(Properties, 'Components') as components,
                  json_extract_path_text(Properties, 'CompositeComponents') as composite_components
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
                  AND data__Identifier = '<WorkspaceId>|<EntityId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'EntityId') as entity_id,
                    json_extract_path_text(detail.Properties, 'EntityName') as entity_name,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'HasChildEntities') as has_child_entities,
                    json_extract_path_text(detail.Properties, 'ParentEntityId') as parent_entity_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                    json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                    json_extract_path_text(detail.Properties, 'Components') as components,
                    json_extract_path_text(detail.Properties, 'CompositeComponents') as composite_components
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Entity'
                    AND detail.data__TypeName = 'AWS::IoTTwinMaker::Entity'
                    AND listing.region = 'us-east-1'
    entities_list_only:
      name: entities_list_only
      id: aws.iottwinmaker.entities_list_only
      x-cfn-schema-name: Entity
      x-cfn-type-name: AWS::IoTTwinMaker::Entity
      x-identifiers:
        - WorkspaceId
        - EntityId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.EntityId') as entity_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'EntityId') as entity_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND region = 'us-east-1'
    entity_tags:
      name: entity_tags
      id: aws.iottwinmaker.entity_tags
      x-cfn-schema-name: Entity
      x-cfn-type-name: AWS::IoTTwinMaker::Entity
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.EntityId') as entity_id,
              JSON_EXTRACT(detail.Properties, '$.EntityName') as entity_name,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.HasChildEntities') as has_child_entities,
              JSON_EXTRACT(detail.Properties, '$.ParentEntityId') as parent_entity_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(detail.Properties, '$.Components') as components,
              JSON_EXTRACT(detail.Properties, '$.CompositeComponents') as composite_components
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Entity'
              AND detail.data__TypeName = 'AWS::IoTTwinMaker::Entity'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'EntityId') as entity_id,
                json_extract_path_text(detail.Properties, 'EntityName') as entity_name,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'HasChildEntities') as has_child_entities,
                json_extract_path_text(detail.Properties, 'ParentEntityId') as parent_entity_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(detail.Properties, 'Components') as components,
                json_extract_path_text(detail.Properties, 'CompositeComponents') as composite_components
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::Entity'
                AND listing.region = 'us-east-1'
    scenes:
      name: scenes
      id: aws.iottwinmaker.scenes
      x-cfn-schema-name: Scene
      x-cfn-type-name: AWS::IoTTwinMaker::Scene
      x-identifiers:
        - WorkspaceId
        - SceneId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Scene&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Scene"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Scene"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Scene"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scenes/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scenes/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/scenes/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.SceneId') as scene_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ContentLocation') as content_location,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(Properties, '$.SceneMetadata') as scene_metadata,
              JSON_EXTRACT(Properties, '$.GeneratedSceneMetadata') as generated_scene_metadata
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
              AND data__Identifier = '<WorkspaceId>|<SceneId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.SceneId') as scene_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ContentLocation') as content_location,
                JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
                JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
                JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
                JSON_EXTRACT(detail.Properties, '$.SceneMetadata') as scene_metadata,
                JSON_EXTRACT(detail.Properties, '$.GeneratedSceneMetadata') as generated_scene_metadata
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'SceneId') as scene_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ContentLocation') as content_location,
                  json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                  json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                  json_extract_path_text(Properties, 'Capabilities') as capabilities,
                  json_extract_path_text(Properties, 'SceneMetadata') as scene_metadata,
                  json_extract_path_text(Properties, 'GeneratedSceneMetadata') as generated_scene_metadata
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
                  AND data__Identifier = '<WorkspaceId>|<SceneId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'SceneId') as scene_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ContentLocation') as content_location,
                    json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                    json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                    json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                    json_extract_path_text(detail.Properties, 'SceneMetadata') as scene_metadata,
                    json_extract_path_text(detail.Properties, 'GeneratedSceneMetadata') as generated_scene_metadata
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Scene'
                    AND detail.data__TypeName = 'AWS::IoTTwinMaker::Scene'
                    AND listing.region = 'us-east-1'
    scenes_list_only:
      name: scenes_list_only
      id: aws.iottwinmaker.scenes_list_only
      x-cfn-schema-name: Scene
      x-cfn-type-name: AWS::IoTTwinMaker::Scene
      x-identifiers:
        - WorkspaceId
        - SceneId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.SceneId') as scene_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'SceneId') as scene_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND region = 'us-east-1'
    scene_tags:
      name: scene_tags
      id: aws.iottwinmaker.scene_tags
      x-cfn-schema-name: Scene
      x-cfn-type-name: AWS::IoTTwinMaker::Scene
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.SceneId') as scene_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ContentLocation') as content_location,
              JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(detail.Properties, '$.SceneMetadata') as scene_metadata,
              JSON_EXTRACT(detail.Properties, '$.GeneratedSceneMetadata') as generated_scene_metadata
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Scene'
              AND detail.data__TypeName = 'AWS::IoTTwinMaker::Scene'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'SceneId') as scene_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ContentLocation') as content_location,
                json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                json_extract_path_text(detail.Properties, 'SceneMetadata') as scene_metadata,
                json_extract_path_text(detail.Properties, 'GeneratedSceneMetadata') as generated_scene_metadata
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::Scene'
                AND listing.region = 'us-east-1'
    sync_jobs:
      name: sync_jobs
      id: aws.iottwinmaker.sync_jobs
      x-cfn-schema-name: SyncJob
      x-cfn-type-name: AWS::IoTTwinMaker::SyncJob
      x-identifiers:
        - WorkspaceId
        - SyncSource
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SyncJob&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::SyncJob"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::SyncJob"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/sync_jobs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/sync_jobs/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source,
              JSON_EXTRACT(Properties, '$.SyncRole') as sync_role,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
              AND data__Identifier = '<WorkspaceId>|<SyncSource>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
                JSON_EXTRACT(detail.Properties, '$.SyncSource') as sync_source,
                JSON_EXTRACT(detail.Properties, '$.SyncRole') as sync_role,
                JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
                JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.State') as state,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                  json_extract_path_text(Properties, 'SyncSource') as sync_source,
                  json_extract_path_text(Properties, 'SyncRole') as sync_role,
                  json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                  json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                  AND data__Identifier = '<WorkspaceId>|<SyncSource>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                    json_extract_path_text(detail.Properties, 'SyncSource') as sync_source,
                    json_extract_path_text(detail.Properties, 'SyncRole') as sync_role,
                    json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                    json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'State') as state,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                    AND detail.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                    AND listing.region = 'us-east-1'
    sync_jobs_list_only:
      name: sync_jobs_list_only
      id: aws.iottwinmaker.sync_jobs_list_only
      x-cfn-schema-name: SyncJob
      x-cfn-type-name: AWS::IoTTwinMaker::SyncJob
      x-identifiers:
        - WorkspaceId
        - SyncSource
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.SyncSource') as sync_source
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(Properties, 'SyncSource') as sync_source
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND region = 'us-east-1'
    sync_job_tags:
      name: sync_job_tags
      id: aws.iottwinmaker.sync_job_tags
      x-cfn-schema-name: SyncJob
      x-cfn-type-name: AWS::IoTTwinMaker::SyncJob
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(detail.Properties, '$.SyncSource') as sync_source,
              JSON_EXTRACT(detail.Properties, '$.SyncRole') as sync_role,
              JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.State') as state
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
              AND detail.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(detail.Properties, 'SyncSource') as sync_source,
                json_extract_path_text(detail.Properties, 'SyncRole') as sync_role,
                json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'State') as state
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::SyncJob'
                AND listing.region = 'us-east-1'
    workspaces:
      name: workspaces
      id: aws.iottwinmaker.workspaces
      x-cfn-schema-name: Workspace
      x-cfn-type-name: AWS::IoTTwinMaker::Workspace
      x-identifiers:
        - WorkspaceId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Workspace&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Workspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Workspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IoTTwinMaker::Workspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Role') as role,
              JSON_EXTRACT(Properties, '$.S3Location') as s3_location,
              JSON_EXTRACT(Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(Properties, '$.UpdateDateTime') as update_date_time,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
              AND data__Identifier = '<WorkspaceId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Role') as role,
                JSON_EXTRACT(detail.Properties, '$.S3Location') as s3_location,
                JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
                JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'WorkspaceId') as workspace_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Role') as role,
                  json_extract_path_text(Properties, 'S3Location') as s3_location,
                  json_extract_path_text(Properties, 'CreationDateTime') as creation_date_time,
                  json_extract_path_text(Properties, 'UpdateDateTime') as update_date_time,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                  AND data__Identifier = '<WorkspaceId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Role') as role,
                    json_extract_path_text(detail.Properties, 'S3Location') as s3_location,
                    json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                    json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                    AND detail.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                    AND listing.region = 'us-east-1'
    workspaces_list_only:
      name: workspaces_list_only
      id: aws.iottwinmaker.workspaces_list_only
      x-cfn-schema-name: Workspace
      x-cfn-type-name: AWS::IoTTwinMaker::Workspace
      x-identifiers:
        - WorkspaceId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.WorkspaceId') as workspace_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'WorkspaceId') as workspace_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND region = 'us-east-1'
    workspace_tags:
      name: workspace_tags
      id: aws.iottwinmaker.workspace_tags
      x-cfn-schema-name: Workspace
      x-cfn-type-name: AWS::IoTTwinMaker::Workspace
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.WorkspaceId') as workspace_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Role') as role,
              JSON_EXTRACT(detail.Properties, '$.S3Location') as s3_location,
              JSON_EXTRACT(detail.Properties, '$.CreationDateTime') as creation_date_time,
              JSON_EXTRACT(detail.Properties, '$.UpdateDateTime') as update_date_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
              AND detail.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'WorkspaceId') as workspace_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Role') as role,
                json_extract_path_text(detail.Properties, 'S3Location') as s3_location,
                json_extract_path_text(detail.Properties, 'CreationDateTime') as creation_date_time,
                json_extract_path_text(detail.Properties, 'UpdateDateTime') as update_date_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND detail.data__TypeName = 'AWS::IoTTwinMaker::Workspace'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ComponentType&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateComponentType
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateComponentTypeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Entity&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEntity
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEntityRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Scene&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateScene
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSceneRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SyncJob&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSyncJob
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSyncJobRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Workspace&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWorkspace
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
