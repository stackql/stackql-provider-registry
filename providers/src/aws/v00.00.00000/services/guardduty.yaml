openapi: 3.0.0
info:
  title: GuardDuty
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    TagItem:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
    CFNS3LogsConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enable:
          type: boolean
      required:
        - Enable
    CFNKubernetesAuditLogsConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enable:
          type: boolean
      required:
        - Enable
    CFNKubernetesConfiguration:
      type: object
      additionalProperties: false
      properties:
        AuditLogs:
          $ref: '#/components/schemas/CFNKubernetesAuditLogsConfiguration'
      required:
        - AuditLogs
    CFNDataSourceConfigurations:
      type: object
      additionalProperties: false
      properties:
        S3Logs:
          $ref: '#/components/schemas/CFNS3LogsConfiguration'
        Kubernetes:
          $ref: '#/components/schemas/CFNKubernetesConfiguration'
        MalwareProtection:
          $ref: '#/components/schemas/CFNMalwareProtectionConfiguration'
    CFNMalwareProtectionConfiguration:
      type: object
      additionalProperties: false
      properties:
        ScanEc2InstanceWithFindings:
          $ref: '#/components/schemas/CFNScanEc2InstanceWithFindingsConfiguration'
    CFNScanEc2InstanceWithFindingsConfiguration:
      type: object
      additionalProperties: false
      properties:
        EbsVolumes:
          type: boolean
    CFNFeatureConfiguration:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          maxLength: 128
        Status:
          type: string
          enum:
            - ENABLED
            - DISABLED
        AdditionalConfiguration:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CFNFeatureAdditionalConfiguration'
      required:
        - Name
        - Status
    CFNFeatureAdditionalConfiguration:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          minLength: 1
          maxLength: 256
        Status:
          type: string
          minLength: 1
          maxLength: 128
    Detector:
      type: object
      properties:
        FindingPublishingFrequency:
          type: string
        Enable:
          type: boolean
        DataSources:
          $ref: '#/components/schemas/CFNDataSourceConfigurations'
        Features:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CFNFeatureConfiguration'
        Id:
          type: string
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Enable
      x-stackql-resource-name: detector
      description: Resource Type definition for AWS::GuardDuty::Detector
      x-type-name: AWS::GuardDuty::Detector
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-properties:
        - Enable
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - guardduty:CreateDetector
          - guardduty:GetDetector
          - guardduty:TagResource
          - iam:CreateServiceLinkedRole
          - iam:GetRole
        read:
          - guardduty:GetDetector
          - guardduty:ListTagsForResource
        delete:
          - guardduty:ListDetectors
          - guardduty:DeleteDetector
          - guardduty:GetDetector
        update:
          - guardduty:UpdateDetector
          - guardduty:GetDetector
          - guardduty:ListDetectors
          - iam:CreateServiceLinkedRole
          - iam:GetRole
          - guardduty:TagResource
          - guardduty:UntagResource
        list:
          - guardduty:ListDetectors
    Condition:
      type: object
      additionalProperties: false
      properties:
        Lt:
          type: integer
        Gt:
          type: integer
        Gte:
          type: integer
        Neq:
          type: array
          uniqueItems: false
          items:
            type: string
        Eq:
          type: array
          uniqueItems: false
          items:
            type: string
        Lte:
          type: integer
        Equals:
          type: array
          uniqueItems: false
          items:
            type: string
        GreaterThan:
          type: integer
          format: int64
        GreaterThanOrEqual:
          type: integer
          format: int64
        LessThan:
          type: integer
          format: int64
        LessThanOrEqual:
          type: integer
          format: int64
        NotEquals:
          type: array
          uniqueItems: false
          items:
            type: string
    FindingCriteria:
      type: object
      additionalProperties: false
      properties:
        Criterion:
          type: object
          x-patternProperties:
            ^.+$:
              $ref: '#/components/schemas/Condition'
          additionalProperties: false
    Filter:
      type: object
      properties:
        Action:
          type: string
        Description:
          type: string
        DetectorId:
          type: string
          minLength: 1
          maxLength: 300
        FindingCriteria:
          $ref: '#/components/schemas/FindingCriteria'
        Rank:
          type: integer
          minimum: 1
          maximum: 100
        Name:
          type: string
          minLength: 1
          maxLength: 64
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - DetectorId
        - Name
        - FindingCriteria
      x-stackql-resource-name: filter
      description: Resource Type definition for AWS::GuardDuty::Filter
      x-type-name: AWS::GuardDuty::Filter
      x-stackql-primary-identifier:
        - DetectorId
        - Name
      x-create-only-properties:
        - DetectorId
        - Name
      x-required-properties:
        - DetectorId
        - Name
        - FindingCriteria
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - guardduty:TagResource
          - guardduty:UntagResource
          - guardduty:ListTagsForResource
      x-required-permissions:
        create:
          - guardduty:CreateFilter
          - guardduty:GetFilter
          - guardduty:TagResource
        read:
          - guardduty:GetFilter
          - guardduty:ListTagsForResource
        delete:
          - guardduty:ListDetectors
          - guardduty:ListFilters
          - guardduty:GetFilter
          - guardduty:DeleteFilter
        update:
          - guardduty:UpdateFilter
          - guardduty:GetFilter
          - guardduty:ListFilters
          - guardduty:TagResource
          - guardduty:UntagResource
        list:
          - guardduty:ListFilters
    IPSet:
      type: object
      properties:
        Id:
          type: string
        Format:
          type: string
        Activate:
          type: boolean
        DetectorId:
          type: string
          minLength: 1
          maxLength: 300
        Name:
          type: string
          minLength: 1
          maxLength: 300
        Location:
          type: string
          minLength: 1
          maxLength: 300
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Format
        - Location
      x-stackql-resource-name: ip_set
      description: Resource Type definition for AWS::GuardDuty::IPSet
      x-type-name: AWS::GuardDuty::IPSet
      x-stackql-primary-identifier:
        - Id
        - DetectorId
      x-create-only-properties:
        - Format
        - DetectorId
      x-write-only-properties:
        - Activate
      x-read-only-properties:
        - Id
      x-required-properties:
        - Format
        - Location
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - guardduty:TagResource
          - guardduty:UntagResource
          - guardduty:ListTagsForResource
      x-required-permissions:
        create:
          - guardduty:CreateIPSet
          - guardduty:GetIPSet
          - guardduty:TagResource
          - iam:PutRolePolicy
        read:
          - guardduty:GetIPSet
        delete:
          - guardduty:GetDetector
          - guardduty:ListDetectors
          - guardduty:ListIPSets
          - guardduty:GetIPSet
          - guardduty:DeleteIPSet
          - iam:DeleteRolePolicy
        update:
          - guardduty:UpdateIPSet
          - guardduty:GetIPSet
          - guardduty:ListIPSets
          - iam:PutRolePolicy
          - guardduty:TagResource
          - guardduty:UntagResource
        list:
          - guardduty:ListIPSets
    CFNProtectedResource:
      type: object
      additionalProperties: false
      properties:
        S3Bucket:
          type: object
          description: Information about the protected S3 bucket resource.
          additionalProperties: false
          properties:
            BucketName:
              type: string
              description: Name of the S3 bucket.
            ObjectPrefixes:
              type: array
              description: Information about the specified object prefixes. The S3 object will be scanned only if it belongs to any of the specified object prefixes.
              items:
                type: string
      required:
        - S3Bucket
    CFNActions:
      type: object
      additionalProperties: false
      properties:
        Tagging:
          $ref: '#/components/schemas/CFNTagging'
          description: Contains information about tagging status of the Malware Protection plan resource.
    CFNTagging:
      type: object
      additionalProperties: false
      properties:
        Status:
          type: string
          description: Indicates whether or not you chose GuardDuty to add a predefined tag to the scanned S3 object.
    CFNStatusReasons:
      type: object
      additionalProperties: false
      properties:
        Code:
          type: string
          description: The status code of the Malware Protection plan.
        Message:
          type: string
          description: Issue message that specifies the reason.
    MalwareProtectionPlan:
      type: object
      properties:
        MalwareProtectionPlanId:
          type: string
          description: A unique identifier associated with Malware Protection plan resource.
        Arn:
          type: string
          description: Amazon Resource Name (ARN) of the protected resource.
        Role:
          type: string
          description: IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
        ProtectedResource:
          $ref: '#/components/schemas/CFNProtectedResource'
          description: Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
        Actions:
          $ref: '#/components/schemas/CFNActions'
          description: Specifies the action that is to be applied to the Malware Protection plan resource.
        CreatedAt:
          type: string
          description: The timestamp when the Malware Protection plan resource was created.
        Status:
          type: string
          description: Status of the Malware Protection plan resource.
        StatusReasons:
          type: array
          items:
            $ref: '#/components/schemas/CFNStatusReasons'
          description: Status details associated with the Malware Protection plan resource status.
        Tags:
          type: array
          description: The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Role
        - ProtectedResource
      x-stackql-resource-name: malware_protection_plan
      description: Resource Type definition for AWS::GuardDuty::MalwareProtectionPlan
      x-type-name: AWS::GuardDuty::MalwareProtectionPlan
      x-stackql-primary-identifier:
        - MalwareProtectionPlanId
      x-read-only-properties:
        - MalwareProtectionPlanId
        - Arn
        - CreatedAt
        - Status
        - StatusReasons
      x-required-properties:
        - Role
        - ProtectedResource
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - guardduty:TagResource
          - guardduty:UntagResource
          - guardduty:ListTagsForResource
      x-required-permissions:
        create:
          - guardduty:CreateMalwareProtectionPlan
          - guardduty:GetMalwareProtectionPlan
          - guardduty:TagResource
          - iam:PassRole
        read:
          - guardduty:GetMalwareProtectionPlan
        delete:
          - guardduty:DeleteMalwareProtectionPlan
          - guardduty:GetMalwareProtectionPlan
        update:
          - guardduty:UpdateMalwareProtectionPlan
          - guardduty:GetMalwareProtectionPlan
          - guardduty:TagResource
          - guardduty:UntagResource
          - iam:PassRole
        list:
          - guardduty:ListMalwareProtectionPlans
    Master:
      type: object
      properties:
        MasterId:
          description: ID of the account used as the master account.
          type: string
        InvitationId:
          description: Value used to validate the master account to the member account.
          type: string
        DetectorId:
          description: Unique ID of the detector of the GuardDuty member account.
          type: string
      required:
        - MasterId
        - DetectorId
      x-stackql-resource-name: master
      description: GuardDuty Master resource schema
      x-type-name: AWS::GuardDuty::Master
      x-stackql-primary-identifier:
        - DetectorId
        - MasterId
      x-create-only-properties:
        - MasterId
        - InvitationId
        - DetectorId
      x-required-properties:
        - MasterId
        - DetectorId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - guardduty:ListInvitations
          - guardduty:AcceptInvitation
          - guardduty:GetMasterAccount
        read:
          - guardduty:GetMasterAccount
        delete:
          - guardduty:DisassociateFromMasterAccount
        list:
          - guardduty:GetMasterAccount
    Member:
      type: object
      properties:
        Status:
          type: string
        MemberId:
          type: string
        Email:
          type: string
        Message:
          type: string
        DisableEmailNotification:
          type: boolean
        DetectorId:
          type: string
      required:
        - Email
      x-stackql-resource-name: member
      description: Resource Type definition for AWS::GuardDuty::Member
      x-type-name: AWS::GuardDuty::Member
      x-stackql-primary-identifier:
        - DetectorId
        - MemberId
      x-create-only-properties:
        - DetectorId
        - MemberId
      x-write-only-properties:
        - DisableEmailNotification
        - Message
      x-required-properties:
        - Email
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - guardduty:CreateMembers
          - guardduty:GetMembers
        read:
          - guardduty:GetMembers
        delete:
          - guardduty:GetMembers
          - guardduty:DisassociateMembers
          - guardduty:DeleteMembers
        update:
          - guardduty:GetMembers
          - guardduty:CreateMembers
          - guardduty:DisassociateMembers
          - guardduty:StartMonitoringMembers
          - guardduty:StopMonitoringMembers
          - guardduty:InviteMembers
        list:
          - guardduty:ListMembers
    ThreatIntelSet:
      type: object
      properties:
        Id:
          type: string
        Format:
          type: string
          minLength: 1
          maxLength: 300
        Activate:
          type: boolean
        DetectorId:
          type: string
          minLength: 1
          maxLength: 32
        Name:
          type: string
        Location:
          type: string
          minLength: 1
          maxLength: 300
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagItem'
      required:
        - Format
        - Location
      x-stackql-resource-name: threat_intel_set
      description: Resource Type definition for AWS::GuardDuty::ThreatIntelSet
      x-type-name: AWS::GuardDuty::ThreatIntelSet
      x-stackql-primary-identifier:
        - Id
        - DetectorId
      x-create-only-properties:
        - Format
        - DetectorId
      x-write-only-properties:
        - Activate
      x-read-only-properties:
        - Id
      x-required-properties:
        - Format
        - Location
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - guardduty:TagResource
          - guardduty:UntagResource
          - guardduty:ListTagsForResource
      x-required-permissions:
        create:
          - guardduty:CreateThreatIntelSet
          - guardduty:GetThreatIntelSet
          - guardduty:TagResource
          - iam:PutRolePolicy
        read:
          - guardduty:GetThreatIntelSet
        delete:
          - guardduty:ListDetectors
          - guardduty:ListThreatIntelSets
          - guardduty:DeleteThreatIntelSet
          - guardduty:GetThreatIntelSet
          - iam:DeleteRolePolicy
        update:
          - guardduty:UpdateThreatIntelSet
          - guardduty:GetThreatIntelSet
          - guardduty:ListThreatIntelSets
          - iam:PutRolePolicy
          - guardduty:TagResource
          - guardduty:UntagResource
        list:
          - guardduty:ListThreatIntelSets
    CreateDetectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FindingPublishingFrequency:
              type: string
            Enable:
              type: boolean
            DataSources:
              $ref: '#/components/schemas/CFNDataSourceConfigurations'
            Features:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/CFNFeatureConfiguration'
            Id:
              type: string
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/TagItem'
          x-stackQL-stringOnly: true
      x-title: CreateDetectorRequest
      type: object
      required: []
    CreateFilterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Action:
              type: string
            Description:
              type: string
            DetectorId:
              type: string
              minLength: 1
              maxLength: 300
            FindingCriteria:
              $ref: '#/components/schemas/FindingCriteria'
            Rank:
              type: integer
              minimum: 1
              maximum: 100
            Name:
              type: string
              minLength: 1
              maxLength: 64
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/TagItem'
          x-stackQL-stringOnly: true
      x-title: CreateFilterRequest
      type: object
      required: []
    CreateIPSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
            Format:
              type: string
            Activate:
              type: boolean
            DetectorId:
              type: string
              minLength: 1
              maxLength: 300
            Name:
              type: string
              minLength: 1
              maxLength: 300
            Location:
              type: string
              minLength: 1
              maxLength: 300
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/TagItem'
          x-stackQL-stringOnly: true
      x-title: CreateIPSetRequest
      type: object
      required: []
    CreateMalwareProtectionPlanRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MalwareProtectionPlanId:
              type: string
              description: A unique identifier associated with Malware Protection plan resource.
            Arn:
              type: string
              description: Amazon Resource Name (ARN) of the protected resource.
            Role:
              type: string
              description: IAM role that includes the permissions required to scan and (optionally) add tags to the associated protected resource.
            ProtectedResource:
              $ref: '#/components/schemas/CFNProtectedResource'
              description: Information about the protected resource. Presently, S3Bucket is the only supported protected resource.
            Actions:
              $ref: '#/components/schemas/CFNActions'
              description: Specifies the action that is to be applied to the Malware Protection plan resource.
            CreatedAt:
              type: string
              description: The timestamp when the Malware Protection plan resource was created.
            Status:
              type: string
              description: Status of the Malware Protection plan resource.
            StatusReasons:
              type: array
              items:
                $ref: '#/components/schemas/CFNStatusReasons'
              description: Status details associated with the Malware Protection plan resource status.
            Tags:
              type: array
              description: The tags to be added to the created Malware Protection plan resource. Each tag consists of a key and an optional value, both of which you need to specify.
              items:
                $ref: '#/components/schemas/TagItem'
          x-stackQL-stringOnly: true
      x-title: CreateMalwareProtectionPlanRequest
      type: object
      required: []
    CreateMasterRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MasterId:
              description: ID of the account used as the master account.
              type: string
            InvitationId:
              description: Value used to validate the master account to the member account.
              type: string
            DetectorId:
              description: Unique ID of the detector of the GuardDuty member account.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateMasterRequest
      type: object
      required: []
    CreateMemberRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Status:
              type: string
            MemberId:
              type: string
            Email:
              type: string
            Message:
              type: string
            DisableEmailNotification:
              type: boolean
            DetectorId:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateMemberRequest
      type: object
      required: []
    CreateThreatIntelSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
            Format:
              type: string
              minLength: 1
              maxLength: 300
            Activate:
              type: boolean
            DetectorId:
              type: string
              minLength: 1
              maxLength: 32
            Name:
              type: string
            Location:
              type: string
              minLength: 1
              maxLength: 300
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/TagItem'
          x-stackQL-stringOnly: true
      x-title: CreateThreatIntelSetRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    detectors:
      name: detectors
      id: aws.guardduty.detectors
      x-cfn-schema-name: Detector
      x-cfn-type-name: AWS::GuardDuty::Detector
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Detector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Detector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Detector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Detector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/detectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/detectors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/detectors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FindingPublishingFrequency') as finding_publishing_frequency,
              JSON_EXTRACT(Properties, '$.Enable') as enable,
              JSON_EXTRACT(Properties, '$.DataSources') as data_sources,
              JSON_EXTRACT(Properties, '$.Features') as features,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Detector'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FindingPublishingFrequency') as finding_publishing_frequency,
                JSON_EXTRACT(detail.Properties, '$.Enable') as enable,
                JSON_EXTRACT(detail.Properties, '$.DataSources') as data_sources,
                JSON_EXTRACT(detail.Properties, '$.Features') as features,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::Detector'
                AND detail.data__TypeName = 'AWS::GuardDuty::Detector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FindingPublishingFrequency') as finding_publishing_frequency,
                  json_extract_path_text(Properties, 'Enable') as enable,
                  json_extract_path_text(Properties, 'DataSources') as data_sources,
                  json_extract_path_text(Properties, 'Features') as features,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Detector'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FindingPublishingFrequency') as finding_publishing_frequency,
                    json_extract_path_text(detail.Properties, 'Enable') as enable,
                    json_extract_path_text(detail.Properties, 'DataSources') as data_sources,
                    json_extract_path_text(detail.Properties, 'Features') as features,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::Detector'
                    AND detail.data__TypeName = 'AWS::GuardDuty::Detector'
                    AND listing.region = 'us-east-1'
    detectors_list_only:
      name: detectors_list_only
      id: aws.guardduty.detectors_list_only
      x-cfn-schema-name: Detector
      x-cfn-type-name: AWS::GuardDuty::Detector
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Detector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Detector'
                AND region = 'us-east-1'
    detector_tags:
      name: detector_tags
      id: aws.guardduty.detector_tags
      x-cfn-schema-name: Detector
      x-cfn-type-name: AWS::GuardDuty::Detector
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.FindingPublishingFrequency') as finding_publishing_frequency,
              JSON_EXTRACT(detail.Properties, '$.Enable') as enable,
              JSON_EXTRACT(detail.Properties, '$.DataSources') as data_sources,
              JSON_EXTRACT(detail.Properties, '$.Features') as features,
              JSON_EXTRACT(detail.Properties, '$.Id') as id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GuardDuty::Detector'
              AND detail.data__TypeName = 'AWS::GuardDuty::Detector'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'FindingPublishingFrequency') as finding_publishing_frequency,
                json_extract_path_text(detail.Properties, 'Enable') as enable,
                json_extract_path_text(detail.Properties, 'DataSources') as data_sources,
                json_extract_path_text(detail.Properties, 'Features') as features,
                json_extract_path_text(detail.Properties, 'Id') as id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GuardDuty::Detector'
                AND detail.data__TypeName = 'AWS::GuardDuty::Detector'
                AND listing.region = 'us-east-1'
    filters:
      name: filters
      id: aws.guardduty.filters
      x-cfn-schema-name: Filter
      x-cfn-type-name: AWS::GuardDuty::Filter
      x-identifiers:
        - DetectorId
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Filter&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Filter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Filter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Filter"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/filters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/filters/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/filters/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Action') as action,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.FindingCriteria') as finding_criteria,
              JSON_EXTRACT(Properties, '$.Rank') as rank,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Filter'
              AND data__Identifier = '<DetectorId>|<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Action') as action,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
                JSON_EXTRACT(detail.Properties, '$.FindingCriteria') as finding_criteria,
                JSON_EXTRACT(detail.Properties, '$.Rank') as rank,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::Filter'
                AND detail.data__TypeName = 'AWS::GuardDuty::Filter'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Action') as action,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DetectorId') as detector_id,
                  json_extract_path_text(Properties, 'FindingCriteria') as finding_criteria,
                  json_extract_path_text(Properties, 'Rank') as rank,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Filter'
                  AND data__Identifier = '<DetectorId>|<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Action') as action,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                    json_extract_path_text(detail.Properties, 'FindingCriteria') as finding_criteria,
                    json_extract_path_text(detail.Properties, 'Rank') as rank,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::Filter'
                    AND detail.data__TypeName = 'AWS::GuardDuty::Filter'
                    AND listing.region = 'us-east-1'
    filters_list_only:
      name: filters_list_only
      id: aws.guardduty.filters_list_only
      x-cfn-schema-name: Filter
      x-cfn-type-name: AWS::GuardDuty::Filter
      x-identifiers:
        - DetectorId
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Filter'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Filter'
                AND region = 'us-east-1'
    filter_tags:
      name: filter_tags
      id: aws.guardduty.filter_tags
      x-cfn-schema-name: Filter
      x-cfn-type-name: AWS::GuardDuty::Filter
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Action') as action,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(detail.Properties, '$.FindingCriteria') as finding_criteria,
              JSON_EXTRACT(detail.Properties, '$.Rank') as rank,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GuardDuty::Filter'
              AND detail.data__TypeName = 'AWS::GuardDuty::Filter'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Action') as action,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                json_extract_path_text(detail.Properties, 'FindingCriteria') as finding_criteria,
                json_extract_path_text(detail.Properties, 'Rank') as rank,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GuardDuty::Filter'
                AND detail.data__TypeName = 'AWS::GuardDuty::Filter'
                AND listing.region = 'us-east-1'
    ip_sets:
      name: ip_sets
      id: aws.guardduty.ip_sets
      x-cfn-schema-name: IPSet
      x-cfn-type-name: AWS::GuardDuty::IPSet
      x-identifiers:
        - Id
        - DetectorId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__IPSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::IPSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::IPSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::IPSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/ip_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/ip_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/ip_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Format') as _format,
              JSON_EXTRACT(Properties, '$.Activate') as activate,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
              AND data__Identifier = '<Id>|<DetectorId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Format') as _format,
                JSON_EXTRACT(detail.Properties, '$.Activate') as activate,
                JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Location') as location,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::IPSet'
                AND detail.data__TypeName = 'AWS::GuardDuty::IPSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Format') as _format,
                  json_extract_path_text(Properties, 'Activate') as activate,
                  json_extract_path_text(Properties, 'DetectorId') as detector_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Location') as location,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
                  AND data__Identifier = '<Id>|<DetectorId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Format') as _format,
                    json_extract_path_text(detail.Properties, 'Activate') as activate,
                    json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Location') as location,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::IPSet'
                    AND detail.data__TypeName = 'AWS::GuardDuty::IPSet'
                    AND listing.region = 'us-east-1'
    ip_sets_list_only:
      name: ip_sets_list_only
      id: aws.guardduty.ip_sets_list_only
      x-cfn-schema-name: IPSet
      x-cfn-type-name: AWS::GuardDuty::IPSet
      x-identifiers:
        - Id
        - DetectorId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DetectorId') as detector_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::IPSet'
                AND region = 'us-east-1'
    ip_set_tags:
      name: ip_set_tags
      id: aws.guardduty.ip_set_tags
      x-cfn-schema-name: IPSet
      x-cfn-type-name: AWS::GuardDuty::IPSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Format') as _format,
              JSON_EXTRACT(detail.Properties, '$.Activate') as activate,
              JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Location') as location
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GuardDuty::IPSet'
              AND detail.data__TypeName = 'AWS::GuardDuty::IPSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Format') as _format,
                json_extract_path_text(detail.Properties, 'Activate') as activate,
                json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Location') as location
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GuardDuty::IPSet'
                AND detail.data__TypeName = 'AWS::GuardDuty::IPSet'
                AND listing.region = 'us-east-1'
    malware_protection_plans:
      name: malware_protection_plans
      id: aws.guardduty.malware_protection_plans
      x-cfn-schema-name: MalwareProtectionPlan
      x-cfn-type-name: AWS::GuardDuty::MalwareProtectionPlan
      x-identifiers:
        - MalwareProtectionPlanId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MalwareProtectionPlan&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::MalwareProtectionPlan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::MalwareProtectionPlan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::MalwareProtectionPlan"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/malware_protection_plans/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/malware_protection_plans/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/malware_protection_plans/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MalwareProtectionPlanId') as malware_protection_plan_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Role') as role,
              JSON_EXTRACT(Properties, '$.ProtectedResource') as protected_resource,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusReasons') as status_reasons,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
              AND data__Identifier = '<MalwareProtectionPlanId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MalwareProtectionPlanId') as malware_protection_plan_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Role') as role,
                JSON_EXTRACT(detail.Properties, '$.ProtectedResource') as protected_resource,
                JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.StatusReasons') as status_reasons,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                AND detail.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MalwareProtectionPlanId') as malware_protection_plan_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Role') as role,
                  json_extract_path_text(Properties, 'ProtectedResource') as protected_resource,
                  json_extract_path_text(Properties, 'Actions') as actions,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'StatusReasons') as status_reasons,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                  AND data__Identifier = '<MalwareProtectionPlanId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MalwareProtectionPlanId') as malware_protection_plan_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Role') as role,
                    json_extract_path_text(detail.Properties, 'ProtectedResource') as protected_resource,
                    json_extract_path_text(detail.Properties, 'Actions') as actions,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'StatusReasons') as status_reasons,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                    AND detail.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                    AND listing.region = 'us-east-1'
    malware_protection_plans_list_only:
      name: malware_protection_plans_list_only
      id: aws.guardduty.malware_protection_plans_list_only
      x-cfn-schema-name: MalwareProtectionPlan
      x-cfn-type-name: AWS::GuardDuty::MalwareProtectionPlan
      x-identifiers:
        - MalwareProtectionPlanId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MalwareProtectionPlanId') as malware_protection_plan_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MalwareProtectionPlanId') as malware_protection_plan_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                AND region = 'us-east-1'
    malware_protection_plan_tags:
      name: malware_protection_plan_tags
      id: aws.guardduty.malware_protection_plan_tags
      x-cfn-schema-name: MalwareProtectionPlan
      x-cfn-type-name: AWS::GuardDuty::MalwareProtectionPlan
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.MalwareProtectionPlanId') as malware_protection_plan_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Role') as role,
              JSON_EXTRACT(detail.Properties, '$.ProtectedResource') as protected_resource,
              JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.StatusReasons') as status_reasons
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
              AND detail.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'MalwareProtectionPlanId') as malware_protection_plan_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Role') as role,
                json_extract_path_text(detail.Properties, 'ProtectedResource') as protected_resource,
                json_extract_path_text(detail.Properties, 'Actions') as actions,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'StatusReasons') as status_reasons
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                AND detail.data__TypeName = 'AWS::GuardDuty::MalwareProtectionPlan'
                AND listing.region = 'us-east-1'
    masters:
      name: masters
      id: aws.guardduty.masters
      x-cfn-schema-name: Master
      x-cfn-type-name: AWS::GuardDuty::Master
      x-identifiers:
        - DetectorId
        - MasterId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Master&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Master"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Master"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/masters/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/masters/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MasterId') as master_id,
              JSON_EXTRACT(Properties, '$.InvitationId') as invitation_id,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Master'
              AND data__Identifier = '<DetectorId>|<MasterId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MasterId') as master_id,
                JSON_EXTRACT(detail.Properties, '$.InvitationId') as invitation_id,
                JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::Master'
                AND detail.data__TypeName = 'AWS::GuardDuty::Master'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MasterId') as master_id,
                  json_extract_path_text(Properties, 'InvitationId') as invitation_id,
                  json_extract_path_text(Properties, 'DetectorId') as detector_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Master'
                  AND data__Identifier = '<DetectorId>|<MasterId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MasterId') as master_id,
                    json_extract_path_text(detail.Properties, 'InvitationId') as invitation_id,
                    json_extract_path_text(detail.Properties, 'DetectorId') as detector_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::Master'
                    AND detail.data__TypeName = 'AWS::GuardDuty::Master'
                    AND listing.region = 'us-east-1'
    masters_list_only:
      name: masters_list_only
      id: aws.guardduty.masters_list_only
      x-cfn-schema-name: Master
      x-cfn-type-name: AWS::GuardDuty::Master
      x-identifiers:
        - DetectorId
        - MasterId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.MasterId') as master_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Master'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'MasterId') as master_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Master'
                AND region = 'us-east-1'
    members:
      name: members
      id: aws.guardduty.members
      x-cfn-schema-name: Member
      x-cfn-type-name: AWS::GuardDuty::Member
      x-identifiers:
        - DetectorId
        - MemberId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Member&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Member"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Member"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::Member"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/members/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/members/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/members/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id,
              JSON_EXTRACT(Properties, '$.Email') as email,
              JSON_EXTRACT(Properties, '$.Message') as message,
              JSON_EXTRACT(Properties, '$.DisableEmailNotification') as disable_email_notification,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Member'
              AND data__Identifier = '<DetectorId>|<MemberId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.MemberId') as member_id,
                JSON_EXTRACT(detail.Properties, '$.Email') as email,
                JSON_EXTRACT(detail.Properties, '$.Message') as message,
                JSON_EXTRACT(detail.Properties, '$.DisableEmailNotification') as disable_email_notification,
                JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::Member'
                AND detail.data__TypeName = 'AWS::GuardDuty::Member'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'MemberId') as member_id,
                  json_extract_path_text(Properties, 'Email') as email,
                  json_extract_path_text(Properties, 'Message') as message,
                  json_extract_path_text(Properties, 'DisableEmailNotification') as disable_email_notification,
                  json_extract_path_text(Properties, 'DetectorId') as detector_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::Member'
                  AND data__Identifier = '<DetectorId>|<MemberId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'MemberId') as member_id,
                    json_extract_path_text(detail.Properties, 'Email') as email,
                    json_extract_path_text(detail.Properties, 'Message') as message,
                    json_extract_path_text(detail.Properties, 'DisableEmailNotification') as disable_email_notification,
                    json_extract_path_text(detail.Properties, 'DetectorId') as detector_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::Member'
                    AND detail.data__TypeName = 'AWS::GuardDuty::Member'
                    AND listing.region = 'us-east-1'
    members_list_only:
      name: members_list_only
      id: aws.guardduty.members_list_only
      x-cfn-schema-name: Member
      x-cfn-type-name: AWS::GuardDuty::Member
      x-identifiers:
        - DetectorId
        - MemberId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.MemberId') as member_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Member'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DetectorId') as detector_id,
                json_extract_path_text(Properties, 'MemberId') as member_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::Member'
                AND region = 'us-east-1'
    threat_intel_sets:
      name: threat_intel_sets
      id: aws.guardduty.threat_intel_sets
      x-cfn-schema-name: ThreatIntelSet
      x-cfn-type-name: AWS::GuardDuty::ThreatIntelSet
      x-identifiers:
        - Id
        - DetectorId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ThreatIntelSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::ThreatIntelSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::ThreatIntelSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::GuardDuty::ThreatIntelSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/threat_intel_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/threat_intel_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/threat_intel_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Format') as _format,
              JSON_EXTRACT(Properties, '$.Activate') as activate,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Location') as location,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
              AND data__Identifier = '<Id>|<DetectorId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Format') as _format,
                JSON_EXTRACT(detail.Properties, '$.Activate') as activate,
                JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Location') as location,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND detail.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Format') as _format,
                  json_extract_path_text(Properties, 'Activate') as activate,
                  json_extract_path_text(Properties, 'DetectorId') as detector_id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Location') as location,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                  AND data__Identifier = '<Id>|<DetectorId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Format') as _format,
                    json_extract_path_text(detail.Properties, 'Activate') as activate,
                    json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Location') as location,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                    AND detail.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                    AND listing.region = 'us-east-1'
    threat_intel_sets_list_only:
      name: threat_intel_sets_list_only
      id: aws.guardduty.threat_intel_sets_list_only
      x-cfn-schema-name: ThreatIntelSet
      x-cfn-type-name: AWS::GuardDuty::ThreatIntelSet
      x-identifiers:
        - Id
        - DetectorId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DetectorId') as detector_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'DetectorId') as detector_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND region = 'us-east-1'
    threat_intel_set_tags:
      name: threat_intel_set_tags
      id: aws.guardduty.threat_intel_set_tags
      x-cfn-schema-name: ThreatIntelSet
      x-cfn-type-name: AWS::GuardDuty::ThreatIntelSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Format') as _format,
              JSON_EXTRACT(detail.Properties, '$.Activate') as activate,
              JSON_EXTRACT(detail.Properties, '$.DetectorId') as detector_id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Location') as location
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
              AND detail.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Format') as _format,
                json_extract_path_text(detail.Properties, 'Activate') as activate,
                json_extract_path_text(detail.Properties, 'DetectorId') as detector_id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Location') as location
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND detail.data__TypeName = 'AWS::GuardDuty::ThreatIntelSet'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Detector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDetector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDetectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Filter&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFilter
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFilterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__IPSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIPSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIPSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MalwareProtectionPlan&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMalwareProtectionPlan
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMalwareProtectionPlanRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Master&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMaster
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMasterRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Member&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMember
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMemberRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ThreatIntelSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateThreatIntelSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateThreatIntelSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
