openapi: 3.0.0
info:
  title: OpenSearchService
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AppConfigType:
      type: string
      enum:
        - opensearchDashboards.dashboardAdmin.users
        - opensearchDashboards.dashboardAdmin.groups
      description: AppConfig type values.
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          description: The key of the tag.
          type: string
          minLength: 0
          maxLength: 256
        Key:
          description: The value of the tag.
          type: string
          minLength: 0
          maxLength: 128
      required:
        - Value
        - Key
    AppConfig:
      type: object
      description: A key-value pair of AppConfig
      properties:
        Key:
          $ref: '#/components/schemas/AppConfigType'
          description: The configuration key
        Value:
          type: string
          maxLength: 256
          minLength: 0
          description: The configuration value.
      required:
        - Key
        - Value
      additionalProperties: false
    DataSource:
      type: object
      description: Datasource arn and description
      properties:
        DataSourceArn:
          type: string
          description: The ARN of the data source.
        DataSourceDescription:
          type: string
          description: Description of the data source.
      required:
        - DataSourceArn
      additionalProperties: false
    Application:
      type: object
      properties:
        IamIdentityCenterOptions:
          type: object
          description: Options for configuring IAM Identity Center
          properties:
            Enabled:
              type: boolean
              description: Whether IAM Identity Center is enabled.
            IamIdentityCenterInstanceArn:
              type: string
              description: The ARN of the IAM Identity Center instance.
            IamRoleForIdentityCenterApplicationArn:
              type: string
              description: The ARN of the IAM role for Identity Center application.
          additionalProperties: false
        Arn:
          type: string
          description: Amazon Resource Name (ARN) format.
        Id:
          type: string
          maxLength: 40
          minLength: 3
          description: The identifier of the application.
        Name:
          type: string
          pattern: '[a-z][a-z0-9\-]+'
          minLength: 3
          maxLength: 40
          description: The name of the application.
        Endpoint:
          type: string
          description: The endpoint for the application.
        AppConfigs:
          type: array
          items:
            $ref: '#/components/schemas/AppConfig'
          description: List of application configurations.
          x-insertionOrder: false
        DataSources:
          type: array
          items:
            $ref: '#/components/schemas/DataSource'
          description: List of data sources.
          x-insertionOrder: false
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this application.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          uniqueItems: true
      required:
        - Name
      x-stackql-resource-name: application
      description: Amazon OpenSearchService application resource
      x-type-name: AWS::OpenSearchService::Application
      x-stackql-primary-identifier:
        - Name
      x-stackql-additional-identifiers:
        - - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Id
        - Arn
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - es:AddTags
          - es:RemoveTags
          - es:ListTags
      x-required-permissions:
        create:
          - es:CreateApplication
          - es:GetApplication
          - es:AddTags
          - es:ListTags
          - iam:CreateServiceLinkedRole
        read:
          - es:GetApplication
          - es:ListTags
        update:
          - es:UpdateApplication
          - es:GetApplication
          - es:AddTags
          - es:RemoveTags
          - es:ListTags
        delete:
          - es:GetApplication
          - es:DeleteApplication
        list:
          - es:ListApplications
    ZoneAwarenessConfig:
      type: object
      additionalProperties: false
      properties:
        AvailabilityZoneCount:
          type: integer
    NodeConfig:
      type: object
      properties:
        Enabled:
          type: boolean
        Type:
          type: string
        Count:
          type: integer
      additionalProperties: false
    NodeOption:
      type: object
      properties:
        NodeType:
          type: string
          enum:
            - coordinator
        NodeConfig:
          $ref: '#/components/schemas/NodeConfig'
      additionalProperties: false
    ClusterConfig:
      type: object
      additionalProperties: false
      properties:
        InstanceCount:
          type: integer
        WarmEnabled:
          type: boolean
        WarmCount:
          type: integer
        DedicatedMasterEnabled:
          type: boolean
        ZoneAwarenessConfig:
          $ref: '#/components/schemas/ZoneAwarenessConfig'
        DedicatedMasterCount:
          type: integer
        InstanceType:
          type: string
        WarmType:
          type: string
        ZoneAwarenessEnabled:
          type: boolean
        DedicatedMasterType:
          type: string
        MultiAZWithStandbyEnabled:
          type: boolean
        ColdStorageOptions:
          $ref: '#/components/schemas/ColdStorageOptions'
        NodeOptions:
          type: array
          items:
            $ref: '#/components/schemas/NodeOption'
    LogPublishingOption:
      type: object
      additionalProperties: false
      properties:
        CloudWatchLogsLogGroupArn:
          type: string
        Enabled:
          type: boolean
    SnapshotOptions:
      type: object
      additionalProperties: false
      properties:
        AutomatedSnapshotStartHour:
          type: integer
    VPCOptions:
      type: object
      additionalProperties: false
      properties:
        SecurityGroupIds:
          type: array
          uniqueItems: true
          items:
            type: string
        SubnetIds:
          type: array
          uniqueItems: true
          items:
            type: string
    NodeToNodeEncryptionOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
    DomainEndpointOptions:
      type: object
      additionalProperties: false
      properties:
        CustomEndpointCertificateArn:
          type: string
        CustomEndpointEnabled:
          type: boolean
        EnforceHTTPS:
          type: boolean
        CustomEndpoint:
          type: string
        TLSSecurityPolicy:
          type: string
    CognitoOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        IdentityPoolId:
          type: string
        UserPoolId:
          type: string
        RoleArn:
          type: string
    MasterUserOptions:
      type: object
      additionalProperties: false
      properties:
        MasterUserPassword:
          type: string
        MasterUserName:
          type: string
        MasterUserARN:
          type: string
    Idp:
      type: object
      additionalProperties: false
      properties:
        MetadataContent:
          type: string
          maxLength: 1048576
          minLength: 1
        EntityId:
          type: string
      required:
        - MetadataContent
        - EntityId
    SAMLOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        Idp:
          $ref: '#/components/schemas/Idp'
        MasterUserName:
          type: string
        MasterBackendRole:
          type: string
        SubjectKey:
          type: string
        RolesKey:
          type: string
        SessionTimeoutMinutes:
          type: integer
    JWTOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        PublicKey:
          type: string
        SubjectKey:
          type: string
        RolesKey:
          type: string
    AdvancedSecurityOptionsInput:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        MasterUserOptions:
          $ref: '#/components/schemas/MasterUserOptions'
        InternalUserDatabaseEnabled:
          type: boolean
        AnonymousAuthEnabled:
          type: boolean
        SAMLOptions:
          $ref: '#/components/schemas/SAMLOptions'
        JWTOptions:
          $ref: '#/components/schemas/JWTOptions'
        AnonymousAuthDisableDate:
          type: string
    EBSOptions:
      type: object
      additionalProperties: false
      properties:
        EBSEnabled:
          type: boolean
        VolumeType:
          type: string
        Iops:
          type: integer
        VolumeSize:
          type: integer
        Throughput:
          type: integer
    EncryptionAtRestOptions:
      type: object
      additionalProperties: false
      properties:
        KmsKeyId:
          type: string
        Enabled:
          type: boolean
    ServiceSoftwareOptions:
      type: object
      additionalProperties: false
      properties:
        CurrentVersion:
          type: string
        NewVersion:
          type: string
        UpdateAvailable:
          type: boolean
        Cancellable:
          type: boolean
        UpdateStatus:
          type: string
        Description:
          type: string
        AutomatedUpdateDate:
          type: string
        OptionalDeployment:
          type: boolean
    WindowStartTime:
      type: object
      additionalProperties: false
      properties:
        Hours:
          type: integer
          minimum: 0
          maximum: 23
        Minutes:
          type: integer
          minimum: 0
          maximum: 59
      required:
        - Hours
        - Minutes
    OffPeakWindow:
      type: object
      additionalProperties: false
      properties:
        WindowStartTime:
          $ref: '#/components/schemas/WindowStartTime'
    OffPeakWindowOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        OffPeakWindow:
          $ref: '#/components/schemas/OffPeakWindow'
    SoftwareUpdateOptions:
      type: object
      additionalProperties: false
      properties:
        AutoSoftwareUpdateEnabled:
          type: boolean
    ColdStorageOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
    SubjectKeyIdcType:
      type: string
      enum:
        - UserName
        - UserId
        - Email
      description: Subject Key Idc type values.
    RolesKeyIdcType:
      type: string
      enum:
        - GroupName
        - GroupId
      description: Roles Key Idc type values.
    IdentityCenterOptions:
      type: object
      description: Options for configuring Identity Center
      properties:
        EnabledAPIAccess:
          type: boolean
          description: Whether Identity Center is enabled.
        IdentityCenterInstanceARN:
          type: string
          description: The ARN of the Identity Center instance.
        SubjectKey:
          $ref: '#/components/schemas/SubjectKeyIdcType'
          description: The subject key for Identity Center options.
        RolesKey:
          $ref: '#/components/schemas/RolesKeyIdcType'
          description: The roles key for Identity Center options.
        IdentityCenterApplicationARN:
          type: string
          description: The ARN of the Identity Center application.
        IdentityStoreId:
          type: string
          description: The IdentityStoreId for Identity Center options.
      additionalProperties: false
    Domain:
      type: object
      properties:
        ClusterConfig:
          $ref: '#/components/schemas/ClusterConfig'
        DomainName:
          type: string
        AccessPolicies:
          type: object
        IPAddressType:
          type: string
        EngineVersion:
          type: string
        AdvancedOptions:
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        LogPublishingOptions:
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z0-9]+':
              $ref: '#/components/schemas/LogPublishingOption'
        SnapshotOptions:
          $ref: '#/components/schemas/SnapshotOptions'
        VPCOptions:
          $ref: '#/components/schemas/VPCOptions'
        NodeToNodeEncryptionOptions:
          $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
        DomainEndpointOptions:
          $ref: '#/components/schemas/DomainEndpointOptions'
        CognitoOptions:
          $ref: '#/components/schemas/CognitoOptions'
        AdvancedSecurityOptions:
          $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
        DomainEndpoint:
          type: string
        DomainEndpointV2:
          type: string
        DomainEndpoints:
          type: object
          additionalProperties: false
          x-patternProperties:
            ^.*$:
              type: string
        EBSOptions:
          $ref: '#/components/schemas/EBSOptions'
        Id:
          type: string
        Arn:
          type: string
        DomainArn:
          type: string
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
        Tags:
          description: An arbitrary set of tags (key-value pairs) for this Domain.
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          uniqueItems: true
        ServiceSoftwareOptions:
          $ref: '#/components/schemas/ServiceSoftwareOptions'
        OffPeakWindowOptions:
          $ref: '#/components/schemas/OffPeakWindowOptions'
        SoftwareUpdateOptions:
          $ref: '#/components/schemas/SoftwareUpdateOptions'
        SkipShardMigrationWait:
          type: boolean
        IdentityCenterOptions:
          $ref: '#/components/schemas/IdentityCenterOptions'
      x-stackql-resource-name: domain
      description: An example resource schema demonstrating some basic constructs and validation rules.
      x-type-name: AWS::OpenSearchService::Domain
      x-stackql-primary-identifier:
        - DomainName
      x-create-only-properties:
        - DomainName
      x-conditional-create-only-properties:
        - EncryptionAtRestOptions/properties
        - AdvancedSecurityOptions/properties/Enabled
      x-write-only-properties:
        - AdvancedSecurityOptions/MasterUserOptions
        - AdvancedSecurityOptions/SAMLOptions/MasterUserName
        - AdvancedSecurityOptions/SAMLOptions/MasterBackendRole
        - AdvancedSecurityOptions/JWTOptions/PublicKey
      x-read-only-properties:
        - Id
        - Arn
        - DomainArn
        - DomainEndpoint
        - DomainEndpointV2
        - DomainEndpoints
        - ServiceSoftwareOptions
        - AdvancedSecurityOptions/AnonymousAuthDisableDate
        - IdentityCenterOptions/IdentityCenterApplicationARN
        - IdentityCenterOptions/IdentityStoreId
      x-required-permissions:
        create:
          - es:CreateDomain
          - es:DescribeDomain
          - es:AddTags
          - es:ListTags
        read:
          - es:DescribeDomain
          - es:ListTags
        update:
          - es:UpdateDomain
          - es:UpgradeDomain
          - es:DescribeDomain
          - es:AddTags
          - es:RemoveTags
          - es:ListTags
          - es:DescribeDomainChangeProgress
        delete:
          - es:DeleteDomain
          - es:DescribeDomain
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            IamIdentityCenterOptions:
              type: object
              description: Options for configuring IAM Identity Center
              properties:
                Enabled:
                  type: boolean
                  description: Whether IAM Identity Center is enabled.
                IamIdentityCenterInstanceArn:
                  type: string
                  description: The ARN of the IAM Identity Center instance.
                IamRoleForIdentityCenterApplicationArn:
                  type: string
                  description: The ARN of the IAM role for Identity Center application.
              additionalProperties: false
            Arn:
              type: string
              description: Amazon Resource Name (ARN) format.
            Id:
              type: string
              maxLength: 40
              minLength: 3
              description: The identifier of the application.
            Name:
              type: string
              pattern: '[a-z][a-z0-9\-]+'
              minLength: 3
              maxLength: 40
              description: The name of the application.
            Endpoint:
              type: string
              description: The endpoint for the application.
            AppConfigs:
              type: array
              items:
                $ref: '#/components/schemas/AppConfig'
              description: List of application configurations.
              x-insertionOrder: false
            DataSources:
              type: array
              items:
                $ref: '#/components/schemas/DataSource'
              description: List of data sources.
              x-insertionOrder: false
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this application.
              items:
                $ref: '#/components/schemas/Tag'
              type: array
              uniqueItems: true
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
    CreateDomainRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ClusterConfig:
              $ref: '#/components/schemas/ClusterConfig'
            DomainName:
              type: string
            AccessPolicies:
              type: object
            IPAddressType:
              type: string
            EngineVersion:
              type: string
            AdvancedOptions:
              type: object
              additionalProperties: false
              x-patternProperties:
                '[a-zA-Z0-9]+':
                  type: string
            LogPublishingOptions:
              type: object
              additionalProperties: false
              x-patternProperties:
                '[a-zA-Z0-9]+':
                  $ref: '#/components/schemas/LogPublishingOption'
            SnapshotOptions:
              $ref: '#/components/schemas/SnapshotOptions'
            VPCOptions:
              $ref: '#/components/schemas/VPCOptions'
            NodeToNodeEncryptionOptions:
              $ref: '#/components/schemas/NodeToNodeEncryptionOptions'
            DomainEndpointOptions:
              $ref: '#/components/schemas/DomainEndpointOptions'
            CognitoOptions:
              $ref: '#/components/schemas/CognitoOptions'
            AdvancedSecurityOptions:
              $ref: '#/components/schemas/AdvancedSecurityOptionsInput'
            DomainEndpoint:
              type: string
            DomainEndpointV2:
              type: string
            DomainEndpoints:
              type: object
              additionalProperties: false
              x-patternProperties:
                ^.*$:
                  type: string
            EBSOptions:
              $ref: '#/components/schemas/EBSOptions'
            Id:
              type: string
            Arn:
              type: string
            DomainArn:
              type: string
            EncryptionAtRestOptions:
              $ref: '#/components/schemas/EncryptionAtRestOptions'
            Tags:
              description: An arbitrary set of tags (key-value pairs) for this Domain.
              items:
                $ref: '#/components/schemas/Tag'
              type: array
              uniqueItems: true
            ServiceSoftwareOptions:
              $ref: '#/components/schemas/ServiceSoftwareOptions'
            OffPeakWindowOptions:
              $ref: '#/components/schemas/OffPeakWindowOptions'
            SoftwareUpdateOptions:
              $ref: '#/components/schemas/SoftwareUpdateOptions'
            SkipShardMigrationWait:
              type: boolean
            IdentityCenterOptions:
              $ref: '#/components/schemas/IdentityCenterOptions'
          x-stackQL-stringOnly: true
      x-title: CreateDomainRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.opensearchservice.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::OpenSearchService::Application
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::OpenSearchService::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::OpenSearchService::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::OpenSearchService::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.IamIdentityCenterOptions') as iam_identity_center_options,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.AppConfigs') as app_configs,
              JSON_EXTRACT(Properties, '$.DataSources') as data_sources,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OpenSearchService::Application'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.IamIdentityCenterOptions') as iam_identity_center_options,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Endpoint') as endpoint,
                JSON_EXTRACT(detail.Properties, '$.AppConfigs') as app_configs,
                JSON_EXTRACT(detail.Properties, '$.DataSources') as data_sources,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::OpenSearchService::Application'
                AND detail.data__TypeName = 'AWS::OpenSearchService::Application'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'IamIdentityCenterOptions') as iam_identity_center_options,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Endpoint') as endpoint,
                  json_extract_path_text(Properties, 'AppConfigs') as app_configs,
                  json_extract_path_text(Properties, 'DataSources') as data_sources,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OpenSearchService::Application'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'IamIdentityCenterOptions') as iam_identity_center_options,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Endpoint') as endpoint,
                    json_extract_path_text(detail.Properties, 'AppConfigs') as app_configs,
                    json_extract_path_text(detail.Properties, 'DataSources') as data_sources,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::OpenSearchService::Application'
                    AND detail.data__TypeName = 'AWS::OpenSearchService::Application'
                    AND listing.region = 'us-east-1'
    applications_list_only:
      name: applications_list_only
      id: aws.opensearchservice.applications_list_only
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::OpenSearchService::Application
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpenSearchService::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::OpenSearchService::Application'
                AND region = 'us-east-1'
    application_tags:
      name: application_tags
      id: aws.opensearchservice.application_tags
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::OpenSearchService::Application
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.IamIdentityCenterOptions') as iam_identity_center_options,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(detail.Properties, '$.AppConfigs') as app_configs,
              JSON_EXTRACT(detail.Properties, '$.DataSources') as data_sources
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::OpenSearchService::Application'
              AND detail.data__TypeName = 'AWS::OpenSearchService::Application'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'IamIdentityCenterOptions') as iam_identity_center_options,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Endpoint') as endpoint,
                json_extract_path_text(detail.Properties, 'AppConfigs') as app_configs,
                json_extract_path_text(detail.Properties, 'DataSources') as data_sources
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::OpenSearchService::Application'
                AND detail.data__TypeName = 'AWS::OpenSearchService::Application'
                AND listing.region = 'us-east-1'
    domains:
      name: domains
      id: aws.opensearchservice.domains
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::OpenSearchService::Domain
      x-identifiers:
        - DomainName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::OpenSearchService::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::OpenSearchService::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::OpenSearchService::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/domains/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClusterConfig') as cluster_config,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.AccessPolicies') as access_policies,
              JSON_EXTRACT(Properties, '$.IPAddressType') as ip_address_type,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.AdvancedOptions') as advanced_options,
              JSON_EXTRACT(Properties, '$.LogPublishingOptions') as log_publishing_options,
              JSON_EXTRACT(Properties, '$.SnapshotOptions') as snapshot_options,
              JSON_EXTRACT(Properties, '$.VPCOptions') as vpc_options,
              JSON_EXTRACT(Properties, '$.NodeToNodeEncryptionOptions') as node_to_node_encryption_options,
              JSON_EXTRACT(Properties, '$.DomainEndpointOptions') as domain_endpoint_options,
              JSON_EXTRACT(Properties, '$.CognitoOptions') as cognito_options,
              JSON_EXTRACT(Properties, '$.AdvancedSecurityOptions') as advanced_security_options,
              JSON_EXTRACT(Properties, '$.DomainEndpoint') as domain_endpoint,
              JSON_EXTRACT(Properties, '$.DomainEndpointV2') as domain_endpoint_v2,
              JSON_EXTRACT(Properties, '$.DomainEndpoints') as domain_endpoints,
              JSON_EXTRACT(Properties, '$.EBSOptions') as ebs_options,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DomainArn') as domain_arn,
              JSON_EXTRACT(Properties, '$.EncryptionAtRestOptions') as encryption_at_rest_options,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ServiceSoftwareOptions') as service_software_options,
              JSON_EXTRACT(Properties, '$.OffPeakWindowOptions') as off_peak_window_options,
              JSON_EXTRACT(Properties, '$.SoftwareUpdateOptions') as software_update_options,
              JSON_EXTRACT(Properties, '$.SkipShardMigrationWait') as skip_shard_migration_wait,
              JSON_EXTRACT(Properties, '$.IdentityCenterOptions') as identity_center_options
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OpenSearchService::Domain'
              AND data__Identifier = '<DomainName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ClusterConfig') as cluster_config,
                json_extract_path_text(Properties, 'DomainName') as domain_name,
                json_extract_path_text(Properties, 'AccessPolicies') as access_policies,
                json_extract_path_text(Properties, 'IPAddressType') as ip_address_type,
                json_extract_path_text(Properties, 'EngineVersion') as engine_version,
                json_extract_path_text(Properties, 'AdvancedOptions') as advanced_options,
                json_extract_path_text(Properties, 'LogPublishingOptions') as log_publishing_options,
                json_extract_path_text(Properties, 'SnapshotOptions') as snapshot_options,
                json_extract_path_text(Properties, 'VPCOptions') as vpc_options,
                json_extract_path_text(Properties, 'NodeToNodeEncryptionOptions') as node_to_node_encryption_options,
                json_extract_path_text(Properties, 'DomainEndpointOptions') as domain_endpoint_options,
                json_extract_path_text(Properties, 'CognitoOptions') as cognito_options,
                json_extract_path_text(Properties, 'AdvancedSecurityOptions') as advanced_security_options,
                json_extract_path_text(Properties, 'DomainEndpoint') as domain_endpoint,
                json_extract_path_text(Properties, 'DomainEndpointV2') as domain_endpoint_v2,
                json_extract_path_text(Properties, 'DomainEndpoints') as domain_endpoints,
                json_extract_path_text(Properties, 'EBSOptions') as ebs_options,
                json_extract_path_text(Properties, 'Id') as id,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'DomainArn') as domain_arn,
                json_extract_path_text(Properties, 'EncryptionAtRestOptions') as encryption_at_rest_options,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ServiceSoftwareOptions') as service_software_options,
                json_extract_path_text(Properties, 'OffPeakWindowOptions') as off_peak_window_options,
                json_extract_path_text(Properties, 'SoftwareUpdateOptions') as software_update_options,
                json_extract_path_text(Properties, 'SkipShardMigrationWait') as skip_shard_migration_wait,
                json_extract_path_text(Properties, 'IdentityCenterOptions') as identity_center_options
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::OpenSearchService::Domain'
                AND data__Identifier = '<DomainName>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDomain
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
