openapi: 3.0.0
info:
  title: LookoutMetrics
  version: 1.0.0
paths: {}
components:
  schemas:
    Arn:
      type: string
      maxLength: 256
      pattern: arn:([a-z\d-]+):.*:.*:.*:.+
    Action:
      type: object
      additionalProperties: false
      properties:
        SNSConfiguration:
          $ref: '#/components/schemas/SNSConfiguration'
        LambdaConfiguration:
          $ref: '#/components/schemas/LambdaConfiguration'
    SNSConfiguration:
      description: Configuration options for an SNS alert action.
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          description: ARN of an IAM role that LookoutMetrics should assume to access the SNS topic.
          $ref: '#/components/schemas/Arn'
        SnsTopicArn:
          description: ARN of an SNS topic to send alert notifications to.
          $ref: '#/components/schemas/Arn'
      required:
        - RoleArn
        - SnsTopicArn
    LambdaConfiguration:
      description: Configuration options for a Lambda alert action.
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          description: ARN of an IAM role that LookoutMetrics should assume to access the Lambda function.
          $ref: '#/components/schemas/Arn'
        LambdaArn:
          description: ARN of a Lambda to send alert notifications to.
          $ref: '#/components/schemas/Arn'
      required:
        - RoleArn
        - LambdaArn
    Alert:
      type: object
      properties:
        AlertName:
          description: The name of the alert. If not provided, a name is generated automatically.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        Arn:
          description: ARN assigned to the alert.
          $ref: '#/components/schemas/Arn'
        AlertDescription:
          description: A description for the alert.
          type: string
          maxLength: 256
          pattern: .*\S.*
        AnomalyDetectorArn:
          description: The Amazon resource name (ARN) of the Anomaly Detector to alert.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):.*:.*:.*:.+
        AlertSensitivityThreshold:
          description: A number between 0 and 100 (inclusive) that tunes the sensitivity of the alert.
          type: integer
          minimum: 0
          maximum: 100
        Action:
          description: The action to be taken by the alert when an anomaly is detected.
          $ref: '#/components/schemas/Action'
      required:
        - AnomalyDetectorArn
        - AlertSensitivityThreshold
        - Action
      x-stackql-resource-name: alert
      x-stackql-primaryIdentifier:
        - Arn
    ColumnName:
      description: Name of a column in the data.
      type: string
      minLength: 1
      maxLength: 63
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
    Charset:
      type: string
      maxLength: 63
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
    CsvFormatDescriptor:
      type: object
      properties:
        FileCompression:
          type: string
          enum:
            - NONE
            - GZIP
        Charset:
          $ref: '#/components/schemas/Charset'
        Delimiter:
          type: string
          maxLength: 1
          pattern: '[^\r\n]'
        HeaderList:
          type: array
          items:
            $ref: '#/components/schemas/ColumnName'
        QuoteSymbol:
          type: string
          maxLength: 1
          pattern: '[^\r\n]|^$'
        ContainsHeader:
          type: boolean
      additionalProperties: false
    JsonFormatDescriptor:
      type: object
      properties:
        FileCompression:
          type: string
          enum:
            - NONE
            - GZIP
        Charset:
          $ref: '#/components/schemas/Charset'
      additionalProperties: false
    FileFormatDescriptor:
      type: object
      properties:
        CsvFormatDescriptor:
          $ref: '#/components/schemas/CsvFormatDescriptor'
        JsonFormatDescriptor:
          $ref: '#/components/schemas/JsonFormatDescriptor'
      additionalProperties: false
    S3SourceConfig:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
        TemplatedPathList:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            maxLength: 1024
            pattern: ^s3://[a-zA-Z0-9_\-\/ {}=]+$
        HistoricalDataPathList:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            maxLength: 1024
            pattern: ^s3://[a-z0-9].+$
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
      additionalProperties: false
      required:
        - RoleArn
        - FileFormatDescriptor
    AppFlowConfig:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
        FlowName:
          type: string
          maxLength: 256
          pattern: '[a-zA-Z0-9][\w!@#.-]+'
      required:
        - RoleArn
        - FlowName
      additionalProperties: false
    CloudwatchConfig:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
      required:
        - RoleArn
      additionalProperties: false
    DatabaseHost:
      type: string
      minLength: 1
      maxLength: 253
      pattern: .*\S.*
    DatabasePort:
      type: integer
      minimum: 1
      maximum: 65535
    TableName:
      type: string
      minLength: 1
      maxLength: 100
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
    SubnetIdList:
      type: array
      items:
        type: string
        maxLength: 255
        pattern: '[\-0-9a-zA-Z]+'
    SecurityGroupIdList:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 255
        pattern: '[-0-9a-zA-Z]+'
    VpcConfiguration:
      type: object
      properties:
        SubnetIdList:
          $ref: '#/components/schemas/SubnetIdList'
        SecurityGroupIdList:
          $ref: '#/components/schemas/SecurityGroupIdList'
      required:
        - SubnetIdList
        - SecurityGroupIdList
      additionalProperties: false
    SecretManagerArn:
      type: string
      maxLength: 256
      pattern: arn:([a-z\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+
    RDSSourceConfig:
      type: object
      properties:
        DBInstanceIdentifier:
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\-]*$
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
        SecretManagerArn:
          $ref: '#/components/schemas/SecretManagerArn'
        DatabaseName:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[a-zA-Z0-9_]+'
        TableName:
          $ref: '#/components/schemas/TableName'
        RoleArn:
          $ref: '#/components/schemas/Arn'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
      required:
        - DBInstanceIdentifier
        - DatabaseHost
        - DatabasePort
        - SecretManagerArn
        - DatabaseName
        - TableName
        - RoleArn
        - VpcConfiguration
      additionalProperties: false
    RedshiftSourceConfig:
      type: object
      properties:
        ClusterIdentifier:
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-z](?!.*--)(?!.*-$)[0-9a-z\-]*$
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
        SecretManagerArn:
          $ref: '#/components/schemas/SecretManagerArn'
        DatabaseName:
          type: string
          minLength: 1
          maxLength: 100
          pattern: '[a-z0-9]+'
        TableName:
          $ref: '#/components/schemas/TableName'
        RoleArn:
          $ref: '#/components/schemas/Arn'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
      required:
        - ClusterIdentifier
        - DatabaseHost
        - DatabasePort
        - SecretManagerArn
        - DatabaseName
        - TableName
        - RoleArn
        - VpcConfiguration
      additionalProperties: false
    MetricSource:
      type: object
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/S3SourceConfig'
        RDSSourceConfig:
          $ref: '#/components/schemas/RDSSourceConfig'
        RedshiftSourceConfig:
          $ref: '#/components/schemas/RedshiftSourceConfig'
        CloudwatchConfig:
          $ref: '#/components/schemas/CloudwatchConfig'
        AppFlowConfig:
          $ref: '#/components/schemas/AppFlowConfig'
      additionalProperties: false
    TimestampColumn:
      type: object
      additionalProperties: false
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
        ColumnFormat:
          description: A timestamp format for the timestamps in the dataset
          type: string
          maxLength: 63
          pattern: .*\S.*
    Metric:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          $ref: '#/components/schemas/ColumnName'
        AggregationFunction:
          description: Operator used to aggregate metric values
          type: string
          enum:
            - AVG
            - SUM
        Namespace:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[^:].*'
      required:
        - MetricName
        - AggregationFunction
    MetricSet:
      type: object
      properties:
        MetricSetName:
          description: The name of the MetricSet.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        MetricSetDescription:
          description: A description for the MetricSet.
          type: string
          maxLength: 256
          pattern: .*\S.*
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
        MetricList:
          description: Metrics captured by this MetricSet.
          type: array
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/Metric'
        Offset:
          description: Offset, in seconds, between the frequency interval and the time at which the metrics are available.
          type: integer
          minimum: 0
          maximum: 432000
        TimestampColumn:
          $ref: '#/components/schemas/TimestampColumn'
        DimensionList:
          description: Dimensions for this MetricSet.
          type: array
          x-insertionOrder: false
          minItems: 0
          items:
            $ref: '#/components/schemas/ColumnName'
        MetricSetFrequency:
          description: A frequency period to aggregate the data
          type: string
          enum:
            - PT5M
            - PT10M
            - PT1H
            - P1D
        Timezone:
          type: string
          maxLength: 60
          pattern: .*\S.*
      required:
        - MetricSetName
        - MetricList
        - MetricSource
      additionalProperties: false
    AnomalyDetectorFrequency:
      description: Frequency of anomaly detection
      type: string
      enum:
        - PT5M
        - PT10M
        - PT1H
        - P1D
    AnomalyDetectorConfig:
      type: object
      properties:
        AnomalyDetectorFrequency:
          description: Frequency of anomaly detection
          $ref: '#/components/schemas/AnomalyDetectorFrequency'
      required:
        - AnomalyDetectorFrequency
      additionalProperties: false
    AnomalyDetector:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        AnomalyDetectorName:
          description: Name for the Amazon Lookout for Metrics Anomaly Detector
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        AnomalyDetectorDescription:
          description: A description for the AnomalyDetector.
          type: string
          maxLength: 256
          pattern: .*\S.*
        AnomalyDetectorConfig:
          description: Configuration options for the AnomalyDetector
          $ref: '#/components/schemas/AnomalyDetectorConfig'
        MetricSetList:
          description: List of metric sets for anomaly detection
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/MetricSet'
        KmsKeyArn:
          description: KMS key used to encrypt the AnomalyDetector data
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:aws.*:kms:.*:[0-9]{12}:key/.*
      required:
        - AnomalyDetectorConfig
        - MetricSetList
      x-stackql-resource-name: anomaly_detector
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    alerts:
      name: alerts
      id: aws.lookoutmetrics.alerts
      x-cfn-schema-name: Alert
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutMetrics::Alert'
    alert:
      name: alert
      id: aws.lookoutmetrics.alert
      x-cfn-schema-name: Alert
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AlertName') as alert_name,
              JSON_EXTRACT(Properties, '$.AlertDescription') as alert_description,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorArn') as anomaly_detector_arn,
              JSON_EXTRACT(Properties, '$.AlertSensitivityThreshold') as alert_sensitivity_threshold,
              JSON_EXTRACT(Properties, '$.Action.SNSConfiguration') as action_sn_sconfiguration,
              JSON_EXTRACT(Properties, '$.Action.LambdaConfiguration') as action_lambda_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutMetrics::Alert'
    anomaly_detectors:
      name: anomaly_detectors
      id: aws.lookoutmetrics.anomaly_detectors
      x-cfn-schema-name: AnomalyDetector
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
    anomaly_detector:
      name: anomaly_detector
      id: aws.lookoutmetrics.anomaly_detector
      x-cfn-schema-name: AnomalyDetector
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorName') as anomaly_detector_name,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorDescription') as anomaly_detector_description,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorConfig.AnomalyDetectorFrequency') as anomaly_detector_config_anomaly_detector_frequency,
              JSON_EXTRACT(Properties, '$.MetricSetList') as metric_set_list,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
