openapi: 3.0.0
info:
  title: LookoutMetrics
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Arn:
      type: string
      maxLength: 256
      pattern: arn:([a-z\d-]+):.*:.*:.*:.+
    Action:
      type: object
      additionalProperties: false
      properties:
        SNSConfiguration:
          $ref: '#/components/schemas/SNSConfiguration'
        LambdaConfiguration:
          $ref: '#/components/schemas/LambdaConfiguration'
    SNSConfiguration:
      description: Configuration options for an SNS alert action.
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          description: ARN of an IAM role that LookoutMetrics should assume to access the SNS topic.
          $ref: '#/components/schemas/Arn'
        SnsTopicArn:
          description: ARN of an SNS topic to send alert notifications to.
          $ref: '#/components/schemas/Arn'
      required:
        - RoleArn
        - SnsTopicArn
    LambdaConfiguration:
      description: Configuration options for a Lambda alert action.
      type: object
      additionalProperties: false
      properties:
        RoleArn:
          description: ARN of an IAM role that LookoutMetrics should assume to access the Lambda function.
          $ref: '#/components/schemas/Arn'
        LambdaArn:
          description: ARN of a Lambda to send alert notifications to.
          $ref: '#/components/schemas/Arn'
      required:
        - RoleArn
        - LambdaArn
    Alert:
      type: object
      properties:
        AlertName:
          description: The name of the alert. If not provided, a name is generated automatically.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        Arn:
          description: ARN assigned to the alert.
          $ref: '#/components/schemas/Arn'
        AlertDescription:
          description: A description for the alert.
          type: string
          maxLength: 256
          pattern: .*\S.*
        AnomalyDetectorArn:
          description: The Amazon resource name (ARN) of the Anomaly Detector to alert.
          type: string
          maxLength: 256
          pattern: arn:([a-z\d-]+):.*:.*:.*:.+
        AlertSensitivityThreshold:
          description: A number between 0 and 100 (inclusive) that tunes the sensitivity of the alert.
          type: integer
          minimum: 0
          maximum: 100
        Action:
          description: The action to be taken by the alert when an anomaly is detected.
          $ref: '#/components/schemas/Action'
      required:
        - AnomalyDetectorArn
        - AlertSensitivityThreshold
        - Action
      x-stackql-resource-name: alert
      description: Resource Type definition for AWS::LookoutMetrics::Alert
      x-type-name: AWS::LookoutMetrics::Alert
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - AlertName
        - AlertDescription
        - AnomalyDetectorArn
        - AlertSensitivityThreshold
        - Action
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AnomalyDetectorArn
        - AlertSensitivityThreshold
        - Action
      x-required-permissions:
        create:
          - lookoutmetrics:CreateAlert
          - iam:PassRole
        read:
          - lookoutmetrics:DescribeAlert
        delete:
          - lookoutmetrics:DeleteAlert
        list:
          - lookoutmetrics:ListAlerts
    ColumnName:
      description: Name of a column in the data.
      type: string
      minLength: 1
      maxLength: 63
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
    Charset:
      type: string
      maxLength: 63
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
    CsvFormatDescriptor:
      type: object
      properties:
        FileCompression:
          type: string
          enum:
            - NONE
            - GZIP
        Charset:
          $ref: '#/components/schemas/Charset'
        Delimiter:
          type: string
          maxLength: 1
          pattern: '[^\r\n]'
        HeaderList:
          type: array
          items:
            $ref: '#/components/schemas/ColumnName'
        QuoteSymbol:
          type: string
          maxLength: 1
          pattern: '[^\r\n]|^$'
        ContainsHeader:
          type: boolean
      additionalProperties: false
    JsonFormatDescriptor:
      type: object
      properties:
        FileCompression:
          type: string
          enum:
            - NONE
            - GZIP
        Charset:
          $ref: '#/components/schemas/Charset'
      additionalProperties: false
    FileFormatDescriptor:
      type: object
      properties:
        CsvFormatDescriptor:
          $ref: '#/components/schemas/CsvFormatDescriptor'
        JsonFormatDescriptor:
          $ref: '#/components/schemas/JsonFormatDescriptor'
      additionalProperties: false
    S3SourceConfig:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
        TemplatedPathList:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            maxLength: 1024
            pattern: ^s3://[a-zA-Z0-9_\-\/ {}=]+$
        HistoricalDataPathList:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            maxLength: 1024
            pattern: ^s3://[a-z0-9].+$
        FileFormatDescriptor:
          $ref: '#/components/schemas/FileFormatDescriptor'
      additionalProperties: false
      required:
        - RoleArn
        - FileFormatDescriptor
    AppFlowConfig:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
        FlowName:
          type: string
          maxLength: 256
          pattern: '[a-zA-Z0-9][\w!@#.-]+'
      required:
        - RoleArn
        - FlowName
      additionalProperties: false
    CloudwatchConfig:
      type: object
      properties:
        RoleArn:
          $ref: '#/components/schemas/Arn'
      required:
        - RoleArn
      additionalProperties: false
    DatabaseHost:
      type: string
      minLength: 1
      maxLength: 253
      pattern: .*\S.*
    DatabasePort:
      type: integer
      minimum: 1
      maximum: 65535
    TableName:
      type: string
      minLength: 1
      maxLength: 100
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
    SubnetIdList:
      type: array
      items:
        type: string
        maxLength: 255
        pattern: '[\-0-9a-zA-Z]+'
    SecurityGroupIdList:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 255
        pattern: '[-0-9a-zA-Z]+'
    VpcConfiguration:
      type: object
      properties:
        SubnetIdList:
          $ref: '#/components/schemas/SubnetIdList'
        SecurityGroupIdList:
          $ref: '#/components/schemas/SecurityGroupIdList'
      required:
        - SubnetIdList
        - SecurityGroupIdList
      additionalProperties: false
    SecretManagerArn:
      type: string
      maxLength: 256
      pattern: arn:([a-z\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+
    RDSSourceConfig:
      type: object
      properties:
        DBInstanceIdentifier:
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\-]*$
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
        SecretManagerArn:
          $ref: '#/components/schemas/SecretManagerArn'
        DatabaseName:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[a-zA-Z0-9_]+'
        TableName:
          $ref: '#/components/schemas/TableName'
        RoleArn:
          $ref: '#/components/schemas/Arn'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
      required:
        - DBInstanceIdentifier
        - DatabaseHost
        - DatabasePort
        - SecretManagerArn
        - DatabaseName
        - TableName
        - RoleArn
        - VpcConfiguration
      additionalProperties: false
    RedshiftSourceConfig:
      type: object
      properties:
        ClusterIdentifier:
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-z](?!.*--)(?!.*-$)[0-9a-z\-]*$
        DatabaseHost:
          $ref: '#/components/schemas/DatabaseHost'
        DatabasePort:
          $ref: '#/components/schemas/DatabasePort'
        SecretManagerArn:
          $ref: '#/components/schemas/SecretManagerArn'
        DatabaseName:
          type: string
          minLength: 1
          maxLength: 100
          pattern: '[a-z0-9]+'
        TableName:
          $ref: '#/components/schemas/TableName'
        RoleArn:
          $ref: '#/components/schemas/Arn'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
      required:
        - ClusterIdentifier
        - DatabaseHost
        - DatabasePort
        - SecretManagerArn
        - DatabaseName
        - TableName
        - RoleArn
        - VpcConfiguration
      additionalProperties: false
    MetricSource:
      type: object
      properties:
        S3SourceConfig:
          $ref: '#/components/schemas/S3SourceConfig'
        RDSSourceConfig:
          $ref: '#/components/schemas/RDSSourceConfig'
        RedshiftSourceConfig:
          $ref: '#/components/schemas/RedshiftSourceConfig'
        CloudwatchConfig:
          $ref: '#/components/schemas/CloudwatchConfig'
        AppFlowConfig:
          $ref: '#/components/schemas/AppFlowConfig'
      additionalProperties: false
    TimestampColumn:
      type: object
      additionalProperties: false
      properties:
        ColumnName:
          $ref: '#/components/schemas/ColumnName'
        ColumnFormat:
          description: A timestamp format for the timestamps in the dataset
          type: string
          maxLength: 63
          pattern: .*\S.*
    Metric:
      type: object
      additionalProperties: false
      properties:
        MetricName:
          $ref: '#/components/schemas/ColumnName'
        AggregationFunction:
          description: Operator used to aggregate metric values
          type: string
          enum:
            - AVG
            - SUM
        Namespace:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[^:].*'
      required:
        - MetricName
        - AggregationFunction
    MetricSet:
      type: object
      properties:
        MetricSetName:
          description: The name of the MetricSet.
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        MetricSetDescription:
          description: A description for the MetricSet.
          type: string
          maxLength: 256
          pattern: .*\S.*
        MetricSource:
          $ref: '#/components/schemas/MetricSource'
        MetricList:
          description: Metrics captured by this MetricSet.
          type: array
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/Metric'
        Offset:
          description: Offset, in seconds, between the frequency interval and the time at which the metrics are available.
          type: integer
          minimum: 0
          maximum: 432000
        TimestampColumn:
          $ref: '#/components/schemas/TimestampColumn'
        DimensionList:
          description: Dimensions for this MetricSet.
          type: array
          x-insertionOrder: false
          minItems: 0
          items:
            $ref: '#/components/schemas/ColumnName'
        MetricSetFrequency:
          description: A frequency period to aggregate the data
          type: string
          enum:
            - PT5M
            - PT10M
            - PT1H
            - P1D
        Timezone:
          type: string
          maxLength: 60
          pattern: .*\S.*
      required:
        - MetricSetName
        - MetricList
        - MetricSource
      additionalProperties: false
    AnomalyDetectorFrequency:
      description: Frequency of anomaly detection
      type: string
      enum:
        - PT5M
        - PT10M
        - PT1H
        - P1D
    AnomalyDetectorConfig:
      type: object
      properties:
        AnomalyDetectorFrequency:
          description: Frequency of anomaly detection
          $ref: '#/components/schemas/AnomalyDetectorFrequency'
      required:
        - AnomalyDetectorFrequency
      additionalProperties: false
    AnomalyDetector:
      type: object
      properties:
        Arn:
          $ref: '#/components/schemas/Arn'
        AnomalyDetectorName:
          description: Name for the Amazon Lookout for Metrics Anomaly Detector
          type: string
          minLength: 1
          maxLength: 63
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
        AnomalyDetectorDescription:
          description: A description for the AnomalyDetector.
          type: string
          maxLength: 256
          pattern: .*\S.*
        AnomalyDetectorConfig:
          description: Configuration options for the AnomalyDetector
          $ref: '#/components/schemas/AnomalyDetectorConfig'
        MetricSetList:
          description: List of metric sets for anomaly detection
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/MetricSet'
        KmsKeyArn:
          description: KMS key used to encrypt the AnomalyDetector data
          type: string
          minLength: 20
          maxLength: 2048
          pattern: arn:aws.*:kms:.*:[0-9]{12}:key/.*
      required:
        - AnomalyDetectorConfig
        - MetricSetList
      x-stackql-resource-name: anomaly_detector
      description: An Amazon Lookout for Metrics Detector
      x-type-name: AWS::LookoutMetrics::AnomalyDetector
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - AnomalyDetectorName
        - MetricSource
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AnomalyDetectorConfig
        - MetricSetList
      x-required-permissions:
        create:
          - lookoutmetrics:CreateAnomalyDetector
          - lookoutmetrics:DeleteAnomalyDetector
          - lookoutmetrics:CreateMetricSet
          - iam:PassRole
        read:
          - lookoutmetrics:DescribeAnomalyDetector
          - lookoutmetrics:DescribeMetricSet
          - lookoutmetrics:ListMetricSets
        update:
          - lookoutmetrics:UpdateAnomalyDetector
          - lookoutmetrics:UpdateMetricSet
        delete:
          - lookoutmetrics:DescribeAnomalyDetector
          - lookoutmetrics:DeleteAnomalyDetector
        list:
          - lookoutmetrics:ListAnomalyDetectors
    CreateAlertRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AlertName:
              description: The name of the alert. If not provided, a name is generated automatically.
              type: string
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
            Arn:
              description: ARN assigned to the alert.
              $ref: '#/components/schemas/Arn'
            AlertDescription:
              description: A description for the alert.
              type: string
              maxLength: 256
              pattern: .*\S.*
            AnomalyDetectorArn:
              description: The Amazon resource name (ARN) of the Anomaly Detector to alert.
              type: string
              maxLength: 256
              pattern: arn:([a-z\d-]+):.*:.*:.*:.+
            AlertSensitivityThreshold:
              description: A number between 0 and 100 (inclusive) that tunes the sensitivity of the alert.
              type: integer
              minimum: 0
              maximum: 100
            Action:
              description: The action to be taken by the alert when an anomaly is detected.
              $ref: '#/components/schemas/Action'
          x-stackQL-stringOnly: true
      x-title: CreateAlertRequest
      type: object
      required: []
    CreateAnomalyDetectorRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              $ref: '#/components/schemas/Arn'
            AnomalyDetectorName:
              description: Name for the Amazon Lookout for Metrics Anomaly Detector
              type: string
              minLength: 1
              maxLength: 63
              pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-_]*
            AnomalyDetectorDescription:
              description: A description for the AnomalyDetector.
              type: string
              maxLength: 256
              pattern: .*\S.*
            AnomalyDetectorConfig:
              description: Configuration options for the AnomalyDetector
              $ref: '#/components/schemas/AnomalyDetectorConfig'
            MetricSetList:
              description: List of metric sets for anomaly detection
              type: array
              minItems: 1
              maxItems: 1
              items:
                $ref: '#/components/schemas/MetricSet'
            KmsKeyArn:
              description: KMS key used to encrypt the AnomalyDetector data
              type: string
              minLength: 20
              maxLength: 2048
              pattern: arn:aws.*:kms:.*:[0-9]{12}:key/.*
          x-stackQL-stringOnly: true
      x-title: CreateAnomalyDetectorRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    alerts:
      name: alerts
      id: aws.lookoutmetrics.alerts
      x-cfn-schema-name: Alert
      x-cfn-type-name: AWS::LookoutMetrics::Alert
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Alert&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutMetrics::Alert"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutMetrics::Alert"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/alerts/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AlertName') as alert_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AlertDescription') as alert_description,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorArn') as anomaly_detector_arn,
              JSON_EXTRACT(Properties, '$.AlertSensitivityThreshold') as alert_sensitivity_threshold,
              JSON_EXTRACT(Properties, '$.Action') as action
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutMetrics::Alert'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AlertName') as alert_name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AlertDescription') as alert_description,
                JSON_EXTRACT(detail.Properties, '$.AnomalyDetectorArn') as anomaly_detector_arn,
                JSON_EXTRACT(detail.Properties, '$.AlertSensitivityThreshold') as alert_sensitivity_threshold,
                JSON_EXTRACT(detail.Properties, '$.Action') as action
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::LookoutMetrics::Alert'
                AND detail.data__TypeName = 'AWS::LookoutMetrics::Alert'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AlertName') as alert_name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AlertDescription') as alert_description,
                  json_extract_path_text(Properties, 'AnomalyDetectorArn') as anomaly_detector_arn,
                  json_extract_path_text(Properties, 'AlertSensitivityThreshold') as alert_sensitivity_threshold,
                  json_extract_path_text(Properties, 'Action') as action
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutMetrics::Alert'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AlertName') as alert_name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AlertDescription') as alert_description,
                    json_extract_path_text(detail.Properties, 'AnomalyDetectorArn') as anomaly_detector_arn,
                    json_extract_path_text(detail.Properties, 'AlertSensitivityThreshold') as alert_sensitivity_threshold,
                    json_extract_path_text(detail.Properties, 'Action') as action
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::LookoutMetrics::Alert'
                    AND detail.data__TypeName = 'AWS::LookoutMetrics::Alert'
                    AND listing.region = 'us-east-1'
    alerts_list_only:
      name: alerts_list_only
      id: aws.lookoutmetrics.alerts_list_only
      x-cfn-schema-name: Alert
      x-cfn-type-name: AWS::LookoutMetrics::Alert
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutMetrics::Alert'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutMetrics::Alert'
                AND region = 'us-east-1'
    anomaly_detectors:
      name: anomaly_detectors
      id: aws.lookoutmetrics.anomaly_detectors
      x-cfn-schema-name: AnomalyDetector
      x-cfn-type-name: AWS::LookoutMetrics::AnomalyDetector
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AnomalyDetector&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutMetrics::AnomalyDetector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutMetrics::AnomalyDetector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::LookoutMetrics::AnomalyDetector"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/anomaly_detectors/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/anomaly_detectors/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/anomaly_detectors/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorName') as anomaly_detector_name,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorDescription') as anomaly_detector_description,
              JSON_EXTRACT(Properties, '$.AnomalyDetectorConfig') as anomaly_detector_config,
              JSON_EXTRACT(Properties, '$.MetricSetList') as metric_set_list,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AnomalyDetectorName') as anomaly_detector_name,
                JSON_EXTRACT(detail.Properties, '$.AnomalyDetectorDescription') as anomaly_detector_description,
                JSON_EXTRACT(detail.Properties, '$.AnomalyDetectorConfig') as anomaly_detector_config,
                JSON_EXTRACT(detail.Properties, '$.MetricSetList') as metric_set_list,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
                AND detail.data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AnomalyDetectorName') as anomaly_detector_name,
                  json_extract_path_text(Properties, 'AnomalyDetectorDescription') as anomaly_detector_description,
                  json_extract_path_text(Properties, 'AnomalyDetectorConfig') as anomaly_detector_config,
                  json_extract_path_text(Properties, 'MetricSetList') as metric_set_list,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AnomalyDetectorName') as anomaly_detector_name,
                    json_extract_path_text(detail.Properties, 'AnomalyDetectorDescription') as anomaly_detector_description,
                    json_extract_path_text(detail.Properties, 'AnomalyDetectorConfig') as anomaly_detector_config,
                    json_extract_path_text(detail.Properties, 'MetricSetList') as metric_set_list,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
                    AND detail.data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
                    AND listing.region = 'us-east-1'
    anomaly_detectors_list_only:
      name: anomaly_detectors_list_only
      id: aws.lookoutmetrics.anomaly_detectors_list_only
      x-cfn-schema-name: AnomalyDetector
      x-cfn-type-name: AWS::LookoutMetrics::AnomalyDetector
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::LookoutMetrics::AnomalyDetector'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Alert&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAlert
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAlertRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AnomalyDetector&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAnomalyDetector
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAnomalyDetectorRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
