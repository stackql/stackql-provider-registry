openapi: 3.0.0
info:
  title: CloudFormation
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    S3Location:
      description: S3 Source Location for the Guard files.
      type: object
      properties:
        Uri:
          description: S3 uri of Guard files.
          type: string
        VersionId:
          description: S3 object version
          type: string
      additionalProperties: false
      required:
        - Uri
    Role:
      description: IAM Role ARN
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
      maxLength: 256
    StackName:
      pattern: ^[a-zA-Z][-a-zA-Z0-9]*$
      description: CloudFormation Stack name
      type: string
      maxLength: 128
    TargetOperation:
      description: Which operations should this Hook run against? Resource changes, stacks or change sets.
      type: string
      enum:
        - RESOURCE
        - STACK
        - CHANGE_SET
        - CLOUD_CONTROL
    TargetName:
      description: Type name of hook target. Hook targets are the destination where hooks will be invoked against.
      type: string
      pattern: ^(?!.*\*\?).*$
      minLength: 1
      maxLength: 256
    Action:
      description: Target actions are the type of operation hooks will be executed at.
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
    InvocationPoint:
      description: Invocation points are the point in provisioning workflow where hooks will be executed.
      type: string
      enum:
        - PRE_PROVISION
    HookTarget:
      description: Hook targets are the destination where hooks will be invoked against.
      type: object
      properties:
        TargetName:
          $ref: '#/components/schemas/TargetName'
        Action:
          $ref: '#/components/schemas/Action'
        InvocationPoint:
          $ref: '#/components/schemas/InvocationPoint'
      additionalProperties: false
      required:
        - TargetName
        - Action
        - InvocationPoint
    GuardHook:
      type: object
      properties:
        RuleLocation:
          $ref: '#/components/schemas/S3Location'
        LogBucket:
          description: S3 Bucket where the guard validate report will be uploaded to
          type: string
        HookStatus:
          default: DISABLED
          description: Attribute to specify which stacks this hook applies to or should get invoked for
          type: string
          enum:
            - ENABLED
            - DISABLED
        TargetOperations:
          description: Which operations should this Hook run against? Resource changes, stacks or change sets.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TargetOperation'
        FailureMode:
          default: WARN
          description: Attribute to specify CloudFormation behavior on hook failure.
          type: string
          enum:
            - FAIL
            - WARN
        TargetFilters:
          description: Attribute to specify which targets should invoke the hook
          type: object
          oneOf:
            - type: object
              minProperties: 1
              properties:
                TargetNames:
                  description: List of type names that the hook is going to target
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/TargetName'
                Actions:
                  description: List of actions that the hook is going to target
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/Action'
                InvocationPoints:
                  description: List of invocation points that the hook is going to target
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/InvocationPoint'
              additionalProperties: false
            - type: object
              properties:
                Targets:
                  description: List of hook targets
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  items:
                    $ref: '#/components/schemas/HookTarget'
              additionalProperties: false
              required:
                - Targets
        StackFilters:
          description: Filters to allow hooks to target specific stack attributes
          type: object
          properties:
            FilteringCriteria:
              description: Attribute to specify the filtering behavior. ANY will make the Hook pass if one filter matches. ALL will make the Hook pass if all filters match
              type: string
              default: ALL
              enum:
                - ALL
                - ANY
            StackNames:
              description: List of stack names as filters
              type: object
              additionalProperties: false
              minProperties: 1
              properties:
                Include:
                  description: List of stack names that the hook is going to target
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/StackName'
                Exclude:
                  description: List of stack names that the hook is going to be excluded from
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/StackName'
            StackRoles:
              description: List of stack roles that are performing the stack operations.
              type: object
              additionalProperties: false
              minProperties: 1
              properties:
                Include:
                  description: List of stack roles that the hook is going to target
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/Role'
                Exclude:
                  description: List of stack roles that the hook is going to be excluded from
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/Role'
          required:
            - FilteringCriteria
          additionalProperties: false
        Alias:
          description: The typename alias for the hook.
          pattern: ^(?!(?i)aws)[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          type: string
        HookArn:
          description: The Amazon Resource Name (ARN) of the activated hook
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        ExecutionRole:
          description: The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
          $ref: '#/components/schemas/Role'
        Options:
          properties:
            InputParams:
              $ref: '#/components/schemas/S3Location'
          required: []
          additionalProperties: false
      required:
        - RuleLocation
        - HookStatus
        - TargetOperations
        - FailureMode
        - Alias
        - ExecutionRole
      x-stackql-resource-name: guard_hook
      description: This is a CloudFormation resource for activating the first-party AWS::Hooks::GuardHook.
      x-type-name: AWS::CloudFormation::GuardHook
      x-stackql-primary-identifier:
        - HookArn
      x-create-only-properties:
        - ExecutionRole
        - Alias
      x-read-only-properties:
        - HookArn
      x-required-properties:
        - RuleLocation
        - HookStatus
        - TargetOperations
        - FailureMode
        - Alias
        - ExecutionRole
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cloudformation:ActivateType
          - cloudformation:DescribeType
          - cloudformation:ListTypes
          - cloudformation:SetTypeConfiguration
          - cloudformation:BatchDescribeTypeConfigurations
          - iam:PassRole
        read:
          - cloudformation:DescribeType
          - cloudformation:BatchDescribeTypeConfigurations
        update:
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DescribeType
          - cloudformation:SetTypeConfiguration
          - iam:PassRole
        delete:
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DescribeType
          - cloudformation:DeactivateType
          - cloudformation:SetTypeConfiguration
        list:
          - cloudformation:ListTypes
          - cloudformation:DescribeType
          - cloudformation:BatchDescribeTypeConfigurations
    HookDefaultVersion:
      type: object
      properties:
        TypeVersionArn:
          description: The Amazon Resource Name (ARN) of the type version.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        TypeName:
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          type: string
        Arn:
          description: The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        VersionId:
          description: The ID of an existing version of the hook to set as the default.
          pattern: ^[A-Za-z0-9-]{1,128}$
          type: string
      x-stackql-resource-name: hook_default_version
      description: Set a version as default version for a hook in CloudFormation Registry.
      x-type-name: AWS::CloudFormation::HookDefaultVersion
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cloudformation:SetTypeDefaultVersion
        read:
          - cloudformation:DescribeType
        update:
          - cloudformation:SetTypeDefaultVersion
        delete: []
        list:
          - cloudformation:ListTypes
    HookTypeConfig:
      type: object
      properties:
        TypeArn:
          description: The Amazon Resource Name (ARN) of the type without version number.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        TypeName:
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          type: string
        ConfigurationArn:
          description: The Amazon Resource Name (ARN) for the configuration data, in this account and region.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type(-configuration)?/hook/.+$
          type: string
        Configuration:
          description: The configuration data for the extension, in this account and region.
          pattern: '[\s\S]+'
          type: string
        ConfigurationAlias:
          description: An alias by which to refer to this extension configuration data.
          pattern: ^[a-zA-Z0-9]{1,256}$
          default: default
          enum:
            - default
          type: string
      x-stackql-resource-name: hook_type_config
      description: Specifies the configuration data for a registered hook in CloudFormation Registry.
      x-type-name: AWS::CloudFormation::HookTypeConfig
      x-stackql-primary-identifier:
        - ConfigurationArn
      x-create-only-properties:
        - ConfigurationAlias
      x-read-only-properties:
        - ConfigurationArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cloudformation:SetTypeConfiguration
        read:
          - cloudformation:BatchDescribeTypeConfigurations
        update:
          - cloudformation:SetTypeConfiguration
        delete:
          - cloudformation:SetTypeConfiguration
        list:
          - cloudformation:ListTypes
          - cloudformation:BatchDescribeTypeConfigurations
    LoggingConfig:
      type: object
      properties:
        LogGroupName:
          description: The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the type's handlers.
          type: string
          pattern: ^[\.\-_/#A-Za-z0-9]+$
          minLength: 1
          maxLength: 512
        LogRoleArn:
          description: The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.
          type: string
          minLength: 1
          maxLength: 256
      additionalProperties: false
    HookVersion:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the type, here the HookVersion. This is used to uniquely identify a HookVersion resource
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        TypeArn:
          description: The Amazon Resource Name (ARN) of the type without the versionID.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        ExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
          pattern: arn:.+:iam::[0-9]{12}:role/.+
          maxLength: 256
          type: string
        IsDefaultVersion:
          description: Indicates if this type version is the current default version
          type: boolean
        LoggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Specifies logging configuration information for a type.
        SchemaHandlerPackage:
          description: |-
            A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.

            For information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide.
          maxLength: 4096
          type: string
        TypeName:
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          type: string
        VersionId:
          description: The ID of the version of the type represented by this hook instance.
          pattern: ^[A-Za-z0-9-]{1,128}$
          type: string
        Visibility:
          description: |-
            The scope at which the type is visible and usable in CloudFormation operations.

            Valid values include:

            PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.

            PUBLIC: The type is publically visible and usable within any Amazon account.
          enum:
            - PUBLIC
            - PRIVATE
          type: string
      required:
        - SchemaHandlerPackage
        - TypeName
      x-stackql-resource-name: hook_version
      description: Publishes new or first hook version to AWS CloudFormation Registry.
      x-type-name: AWS::CloudFormation::HookVersion
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ExecutionRoleArn
        - LoggingConfig
        - SchemaHandlerPackage
        - TypeName
      x-write-only-properties:
        - SchemaHandlerPackage
      x-read-only-properties:
        - Arn
        - IsDefaultVersion
        - Visibility
        - VersionId
        - TypeArn
      x-required-properties:
        - SchemaHandlerPackage
        - TypeName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cloudformation:DescribeType
          - cloudformation:DescribeTypeRegistration
          - cloudformation:RegisterType
          - iam:PassRole
          - s3:GetObject
          - s3:ListBucket
          - kms:Decrypt
        read:
          - cloudformation:DescribeType
        delete:
          - cloudformation:DeregisterType
          - cloudformation:DescribeType
        list:
          - cloudformation:ListTypes
          - cloudformation:ListTypeVersions
    LambdaHook:
      type: object
      properties:
        LambdaFunction:
          description: Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
          type: string
          minLength: 1
          maxLength: 170
          pattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?(-iso([a-z])?)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?
        HookStatus:
          default: ENABLED
          description: Attribute to specify which stacks this hook applies to or should get invoked for
          type: string
          enum:
            - ENABLED
            - DISABLED
        TargetOperations:
          description: Which operations should this Hook run against? Resource changes, stacks or change sets.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/TargetOperation'
        FailureMode:
          description: Attribute to specify CloudFormation behavior on hook failure.
          type: string
          enum:
            - FAIL
            - WARN
        TargetFilters:
          description: Attribute to specify which targets should invoke the hook
          type: object
          oneOf:
            - type: object
              minProperties: 1
              properties:
                TargetNames:
                  description: List of type names that the hook is going to target
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/TargetName'
                Actions:
                  description: List of actions that the hook is going to target
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/Action'
                InvocationPoints:
                  description: List of invocation points that the hook is going to target
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/InvocationPoint'
              additionalProperties: false
            - type: object
              properties:
                Targets:
                  description: List of hook targets
                  type: array
                  minItems: 1
                  maxItems: 50
                  uniqueItems: true
                  items:
                    $ref: '#/components/schemas/HookTarget'
              additionalProperties: false
              required:
                - Targets
        StackFilters:
          description: Filters to allow hooks to target specific stack attributes
          type: object
          properties:
            FilteringCriteria:
              description: Attribute to specify the filtering behavior. ANY will make the Hook pass if one filter matches. ALL will make the Hook pass if all filters match
              type: string
              default: ALL
              enum:
                - ALL
                - ANY
            StackNames:
              description: List of stack names as filters
              type: object
              additionalProperties: false
              minProperties: 1
              properties:
                Include:
                  description: List of stack names that the hook is going to target
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/StackName'
                Exclude:
                  description: List of stack names that the hook is going to be excluded from
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/StackName'
            StackRoles:
              description: List of stack roles that are performing the stack operations.
              type: object
              additionalProperties: false
              minProperties: 1
              properties:
                Include:
                  description: List of stack roles that the hook is going to target
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/Role'
                Exclude:
                  description: List of stack roles that the hook is going to be excluded from
                  type: array
                  maxItems: 50
                  minItems: 1
                  uniqueItems: true
                  x-insertionOrder: false
                  items:
                    $ref: '#/components/schemas/Role'
          required:
            - FilteringCriteria
          additionalProperties: false
        Alias:
          description: The typename alias for the hook.
          pattern: ^(?!(?i)aws)[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          type: string
        HookArn:
          description: The Amazon Resource Name (ARN) of the activated hook
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
          type: string
        ExecutionRole:
          description: The execution role ARN assumed by Hooks to invoke Lambda.
          $ref: '#/components/schemas/Role'
      required:
        - LambdaFunction
        - FailureMode
        - Alias
        - ExecutionRole
        - TargetOperations
        - HookStatus
      x-stackql-resource-name: lambda_hook
      description: This is a CloudFormation resource for the first-party AWS::Hooks::LambdaHook.
      x-type-name: AWS::CloudFormation::LambdaHook
      x-stackql-primary-identifier:
        - HookArn
      x-create-only-properties:
        - Alias
      x-read-only-properties:
        - HookArn
      x-required-properties:
        - LambdaFunction
        - FailureMode
        - Alias
        - ExecutionRole
        - TargetOperations
        - HookStatus
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - cloudformation:ListTypes
          - cloudformation:ActivateType
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DescribeType
          - cloudformation:SetTypeConfiguration
          - iam:PassRole
        read:
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DescribeType
        update:
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DescribeType
          - cloudformation:SetTypeConfiguration
          - iam:PassRole
        delete:
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DeactivateType
          - cloudformation:DescribeType
          - cloudformation:SetTypeConfiguration
        list:
          - cloudformation:ListTypes
          - cloudformation:BatchDescribeTypeConfigurations
          - cloudformation:DescribeType
    ModuleDefaultVersion:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the module version to set as the default version.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/module/.+/[0-9]{8}$
          type: string
        ModuleName:
          description: The name of a module existing in the registry.
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::MODULE
          type: string
        VersionId:
          description: The ID of an existing version of the named module to set as the default.
          pattern: ^[0-9]{8}$
          type: string
      x-stackql-resource-name: module_default_version
      description: A module that has been registered in the CloudFormation registry as the default version
      x-type-name: AWS::CloudFormation::ModuleDefaultVersion
      x-stackql-primary-identifier:
        - Arn
      x-stackql-additional-identifiers:
        - - ModuleName
      x-create-only-properties:
        - Arn
        - ModuleName
        - VersionId
      x-write-only-properties:
        - ModuleName
        - VersionId
      x-required-permissions:
        create:
          - cloudformation:DescribeType
          - cloudformation:SetTypeDefaultVersion
        delete: []
        read:
          - cloudformation:DescribeType
        list:
          - cloudformation:ListTypes
    ModuleVersion:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the module.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/module/.+$
          type: string
        Description:
          description: The description of the registered module.
          maxLength: 1024
          minLength: 1
          type: string
        DocumentationUrl:
          description: The URL of a page providing detailed documentation for this module.
          maxLength: 4096
          type: string
        ModuleName:
          description: |-
            The name of the module being registered.

            Recommended module naming pattern: company_or_organization::service::type::MODULE.
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::MODULE
          type: string
        ModulePackage:
          description: The url to the S3 bucket containing the schema and template fragment for the module you want to register.
          type: string
        IsDefaultVersion:
          description: Indicator of whether this module version is the current default version
          type: boolean
        Schema:
          description: The schema defining input parameters to and resources generated by the module.
          maxLength: 16777216
          minLength: 1
          type: string
        TimeCreated:
          description: The time that the specified module version was registered.
          type: string
        VersionId:
          description: The version ID of the module represented by this module instance.
          pattern: ^[0-9]{8}$
          type: string
        Visibility:
          description: |-
            The scope at which the type is visible and usable in CloudFormation operations.

            The only allowed value at present is:

            PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
          enum:
            - PRIVATE
          type: string
      required:
        - ModuleName
        - ModulePackage
      x-stackql-resource-name: module_version
      description: A module that has been registered in the CloudFormation registry.
      x-type-name: AWS::CloudFormation::ModuleVersion
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ModuleName
        - ModulePackage
      x-write-only-properties:
        - ModulePackage
      x-read-only-properties:
        - Arn
        - Description
        - DocumentationUrl
        - IsDefaultVersion
        - Schema
        - TimeCreated
        - VersionId
        - Visibility
      x-required-properties:
        - ModuleName
        - ModulePackage
      x-required-permissions:
        create:
          - cloudformation:DescribeType
          - cloudformation:DescribeTypeRegistration
          - cloudformation:ListTypeVersions
          - cloudformation:RegisterType
          - s3:GetObject
          - s3:ListBucket
        read:
          - cloudformation:DescribeType
        delete:
          - cloudformation:DeregisterType
          - cloudformation:DescribeType
    PublicTypeVersion:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Number (ARN) of the extension.
          pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
          type: string
        TypeVersionArn:
          description: The Amazon Resource Number (ARN) of the extension with the versionId.
          pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
          type: string
        PublicVersionNumber:
          description: The version number of a public third-party extension
          type: string
          minLength: 5
          maxLength: 64
        PublisherId:
          description: The publisher id assigned by CloudFormation for publishing in this region.
          pattern: '[0-9a-zA-Z-]{40}'
          type: string
          minLength: 1
          maxLength: 40
        PublicTypeArn:
          description: The Amazon Resource Number (ARN) assigned to the public extension upon publication
          pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
          type: string
          maxLength: 1024
        TypeName:
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}'
          type: string
        LogDeliveryBucket:
          description: A url to the S3 bucket where logs for the testType run will be available
          type: string
        Type:
          description: The kind of extension
          enum:
            - RESOURCE
            - MODULE
            - HOOK
          type: string
      x-stackql-resource-name: public_type_version
      description: Test and Publish a resource that has been registered in the CloudFormation Registry.
      x-type-name: AWS::CloudFormation::PublicTypeVersion
      x-stackql-primary-identifier:
        - PublicTypeArn
      x-create-only-properties:
        - LogDeliveryBucket
        - PublicVersionNumber
        - TypeName
        - Type
        - Arn
      x-write-only-properties:
        - Arn
      x-read-only-properties:
        - PublicTypeArn
        - TypeVersionArn
        - PublisherId
      x-required-permissions:
        create:
          - cloudformation:TestType
          - cloudformation:DescribeType
          - cloudformation:PublishType
          - cloudformation:DescribePublisher
          - s3:GetObject
          - s3:PutObject
        delete: []
        read:
          - cloudformation:DescribeType
          - cloudformation:DescribePublisher
        list:
          - cloudformation:ListTypes
    Publisher:
      type: object
      properties:
        AcceptTermsAndConditions:
          description: Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
          type: boolean
        PublisherId:
          description: The publisher id assigned by CloudFormation for publishing in this region.
          pattern: '[0-9a-zA-Z-]{40}'
          type: string
          minLength: 1
          maxLength: 40
        ConnectionArn:
          description: If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.
          type: string
          pattern: arn:aws(-[w]+)*:.+:.+:[0-9]{12}:.+
        PublisherStatus:
          description: Whether the publisher is verified.
          type: string
          enum:
            - VERIFIED
            - UNVERIFIED
        PublisherProfile:
          description: The URL to the publisher's profile with the identity provider.
          pattern: (http:|https:)+[^s]+[w]
          type: string
          maxLength: 1024
        IdentityProvider:
          description: The type of account used as the identity provider when registering this publisher with CloudFormation.
          type: string
          enum:
            - AWS_Marketplace
            - GitHub
            - Bitbucket
      required:
        - AcceptTermsAndConditions
      x-stackql-resource-name: publisher
      description: Register as a publisher in the CloudFormation Registry.
      x-type-name: AWS::CloudFormation::Publisher
      x-stackql-primary-identifier:
        - PublisherId
      x-create-only-properties:
        - AcceptTermsAndConditions
        - ConnectionArn
      x-read-only-properties:
        - PublisherId
        - PublisherStatus
        - PublisherProfile
        - IdentityProvider
      x-required-properties:
        - AcceptTermsAndConditions
      x-required-permissions:
        create:
          - cloudformation:RegisterPublisher
          - cloudformation:DescribePublisher
          - codestar-connections:GetConnection
          - codestar-connections:UseConnection
        read:
          - cloudformation:DescribePublisher
        delete: []
        list:
          - cloudformation:DescribePublisher
    ResourceDefaultVersion:
      type: object
      properties:
        VersionId:
          pattern: ^[A-Za-z0-9-]{1,128}$
          description: The ID of an existing version of the resource to set as the default.
          type: string
        TypeName:
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          type: string
        Arn:
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
          description: The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a ResourceDefaultVersion
          type: string
        TypeVersionArn:
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
          description: The Amazon Resource Name (ARN) of the type version.
          type: string
      x-stackql-resource-name: resource_default_version
      description: The default version of a resource that has been registered in the CloudFormation Registry.
      x-type-name: AWS::CloudFormation::ResourceDefaultVersion
      x-stackql-primary-identifier:
        - Arn
      x-stackql-additional-identifiers:
        - - TypeName
      x-read-only-properties:
        - Arn
      x-required-permissions:
        read:
          - cloudformation:DescribeType
        create:
          - cloudformation:SetTypeDefaultVersion
        update:
          - cloudformation:SetTypeDefaultVersion
        list:
          - cloudformation:ListTypeVersions
        delete:
          - ''
    ResourceVersion:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
          type: string
        TypeArn:
          description: The Amazon Resource Name (ARN) of the type without the versionID.
          pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
          type: string
        ExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
          type: string
        IsDefaultVersion:
          description: Indicates if this type version is the current default version
          type: boolean
        LoggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Specifies logging configuration information for a type.
        ProvisioningType:
          description: The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
          enum:
            - NON_PROVISIONABLE
            - IMMUTABLE
            - FULLY_MUTABLE
          type: string
        SchemaHandlerPackage:
          description: |-
            A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.

            For information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide.
          type: string
        TypeName:
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
          type: string
        VersionId:
          description: The ID of the version of the type represented by this resource instance.
          pattern: ^[A-Za-z0-9-]{1,128}$
          type: string
        Visibility:
          description: |-
            The scope at which the type is visible and usable in CloudFormation operations.

            Valid values include:

            PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.

            PUBLIC: The type is publically visible and usable within any Amazon account.
          enum:
            - PUBLIC
            - PRIVATE
          type: string
      required:
        - SchemaHandlerPackage
        - TypeName
      x-stackql-resource-name: resource_version
      description: A resource that has been registered in the CloudFormation Registry.
      x-type-name: AWS::CloudFormation::ResourceVersion
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - ExecutionRoleArn
        - LoggingConfig
        - SchemaHandlerPackage
        - TypeName
      x-write-only-properties:
        - SchemaHandlerPackage
      x-read-only-properties:
        - Arn
        - IsDefaultVersion
        - ProvisioningType
        - Visibility
        - VersionId
        - TypeArn
      x-required-properties:
        - SchemaHandlerPackage
        - TypeName
      x-required-permissions:
        create:
          - cloudformation:DescribeTypeRegistration
          - cloudformation:RegisterType
          - iam:PassRole
          - s3:GetObject
          - s3:ListBucket
          - kms:Decrypt
          - cloudformation:ListTypeVersions
          - cloudformation:DeregisterType
          - cloudformation:DescribeType
        read:
          - cloudformation:DescribeType
        delete:
          - cloudformation:DeregisterType
          - cloudformation:DescribeType
        list:
          - cloudformation:ListTypes
    Tag:
      description: Tag type enables you to specify a key-value pair that can be used to store information about an AWS CloudFormation StackSet.
      type: object
      properties:
        Key:
          description: A string used to identify this tag. You can specify a maximum of 127 characters for a tag key.
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:.*)[a-zA-Z0-9\s\:\_\.\/\=\+\-]+$
        Value:
          description: A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Output:
      type: object
      additionalProperties: false
      properties:
        Description:
          type: string
        ExportName:
          type: string
        OutputKey:
          type: string
        OutputValue:
          type: string
    Stack:
      type: object
      properties:
        Capabilities:
          type: array
          uniqueItems: false
          items:
            type: string
            enum:
              - CAPABILITY_IAM
              - CAPABILITY_NAMED_IAM
              - CAPABILITY_AUTO_EXPAND
        RoleARN:
          type: string
        Outputs:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Output'
        Description:
          type: string
          minLength: 1
          maxLength: 1024
        DisableRollback:
          type: boolean
        EnableTerminationProtection:
          type: boolean
        NotificationARNs:
          type: array
          uniqueItems: false
          items:
            type: string
          maxItems: 5
        Parameters:
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        ParentId:
          type: string
        RootId:
          type: string
        ChangeSetId:
          type: string
        StackName:
          type: string
        StackId:
          type: string
        StackPolicyBody:
          type: object
        StackPolicyURL:
          type: string
        StackStatus:
          type: string
          enum:
            - CREATE_IN_PROGRESS
            - CREATE_FAILED
            - CREATE_COMPLETE
            - ROLLBACK_IN_PROGRESS
            - ROLLBACK_FAILED
            - ROLLBACK_COMPLETE
            - DELETE_IN_PROGRESS
            - DELETE_FAILED
            - DELETE_COMPLETE
            - UPDATE_IN_PROGRESS
            - UPDATE_COMPLETE_CLEANUP_IN_PROGRESS
            - UPDATE_COMPLETE
            - UPDATE_FAILED
            - UPDATE_ROLLBACK_IN_PROGRESS
            - UPDATE_ROLLBACK_FAILED
            - UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS
            - UPDATE_ROLLBACK_COMPLETE
            - REVIEW_IN_PROGRESS
            - IMPORT_IN_PROGRESS
            - IMPORT_COMPLETE
            - IMPORT_ROLLBACK_IN_PROGRESS
            - IMPORT_ROLLBACK_FAILED
            - IMPORT_ROLLBACK_COMPLETE
        StackStatusReason:
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
        TemplateBody:
          type: object
        TemplateURL:
          type: string
          minLength: 1
          maxLength: 1024
        TimeoutInMinutes:
          type: integer
          minimum: 1
        LastUpdateTime:
          type: string
        CreationTime:
          type: string
      required:
        - StackName
      x-stackql-resource-name: stack
      description: The AWS::CloudFormation::Stack resource nests a stack as a resource in a top-level template.
      x-type-name: AWS::CloudFormation::Stack
      x-stackql-primary-identifier:
        - StackId
      x-stackql-additional-identifiers:
        - - StackName
      x-create-only-properties:
        - StackName
      x-write-only-properties:
        - TemplateURL
        - StackPolicyURL
      x-read-only-properties:
        - StackId
        - StackStatus
        - CreationTime
        - RootId
        - ParentId
        - ChangeSetId
        - Outputs
        - LastUpdateTime
      x-required-properties:
        - StackName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - cloudformation:DescribeStacks
          - cloudformation:CreateStack
          - iam:PassRole
        update:
          - cloudformation:DescribeStacks
          - cloudformation:UpdateStack
          - cloudformation:UpdateTerminationProtection
          - cloudformation:SetStackPolicy
          - iam:PassRole
        delete:
          - cloudformation:DescribeStacks
          - cloudformation:DeleteStack
        read:
          - cloudformation:DescribeStacks
          - cloudformation:GetStackPolicy
          - cloudformation:GetTemplate
        list:
          - cloudformation:ListStacks
    AutoDeployment:
      type: object
      properties:
        Enabled:
          description: If set to true, StackSets automatically deploys additional stack instances to AWS Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.
          type: boolean
        RetainStacksOnAccountRemoval:
          description: If set to true, stack resources are retained when an account is removed from a target organization or OU. If set to false, stack resources are deleted. Specify only if Enabled is set to True.
          type: boolean
      additionalProperties: false
    Account:
      description: AWS account that you want to create stack instances in the specified Region(s) for.
      type: string
      pattern: ^[0-9]{12}$
    Region:
      type: string
      pattern: ^[a-zA-Z0-9-]{1,128}$
    OrganizationalUnitId:
      type: string
      pattern: ^(ou-[a-z0-9]{4,32}-[a-z0-9]{8,32}|r-[a-z0-9]{4,32})$
    Capability:
      type: string
      enum:
        - CAPABILITY_IAM
        - CAPABILITY_NAMED_IAM
        - CAPABILITY_AUTO_EXPAND
    RegionConcurrencyType:
      description: The concurrency type of deploying StackSets operations in regions, could be in parallel or one region at a time
      type: string
      enum:
        - SEQUENTIAL
        - PARALLEL
    ConcurrencyMode:
      description: Specifies how the concurrency level behaves during the operation execution.
      type: string
      enum:
        - STRICT_FAILURE_TOLERANCE
        - SOFT_FAILURE_TOLERANCE
    Active:
      description: When true, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order.
      type: boolean
    OperationPreferences:
      description: The user-specified preferences for how AWS CloudFormation performs a stack set operation.
      type: object
      properties:
        FailureToleranceCount:
          type: integer
          minimum: 0
        FailureTolerancePercentage:
          type: integer
          minimum: 0
          maximum: 100
        MaxConcurrentCount:
          type: integer
          minimum: 1
        MaxConcurrentPercentage:
          type: integer
          minimum: 0
          maximum: 100
        RegionOrder:
          type: array
          items:
            $ref: '#/components/schemas/Region'
        RegionConcurrencyType:
          $ref: '#/components/schemas/RegionConcurrencyType'
        ConcurrencyMode:
          $ref: '#/components/schemas/ConcurrencyMode'
      additionalProperties: false
    Parameter:
      type: object
      properties:
        ParameterKey:
          description: The key associated with the parameter. If you don't specify a key and value for a particular parameter, AWS CloudFormation uses the default value that is specified in your template.
          type: string
        ParameterValue:
          description: The input value associated with the parameter.
          type: string
      required:
        - ParameterKey
        - ParameterValue
      additionalProperties: false
    DeploymentTargets:
      description: ' The AWS OrganizationalUnitIds or Accounts for which to create stack instances in the specified Regions.'
      type: object
      properties:
        Accounts:
          description: AWS accounts that you want to create stack instances in the specified Region(s) for.
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Account'
        AccountsUrl:
          description: Returns the value of the AccountsUrl property.
          type: string
          minLength: 1
          maxLength: 5120
          pattern: (s3://|http(s?)://).+
        OrganizationalUnitIds:
          description: The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/OrganizationalUnitId'
        AccountFilterType:
          description: The filter type you want to apply on organizational units and accounts.
          type: string
          enum:
            - NONE
            - UNION
            - INTERSECTION
            - DIFFERENCE
      additionalProperties: false
    StackInstances:
      description: Stack instances in some specific accounts and Regions.
      type: object
      properties:
        DeploymentTargets:
          $ref: '#/components/schemas/DeploymentTargets'
        Regions:
          description: The names of one or more Regions where you want to create stack instances using the specified AWS account(s).
          type: array
          minItems: 1
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Region'
        ParameterOverrides:
          description: A list of stack set parameters whose values you want to override in the selected stack instances.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Parameter'
      required:
        - DeploymentTargets
        - Regions
      additionalProperties: false
    StackSet:
      type: object
      properties:
        StackSetName:
          description: The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
          type: string
          pattern: ^[a-zA-Z][a-zA-Z0-9\-]{0,127}$
          maxLength: 128
        StackSetId:
          description: The ID of the stack set that you're creating.
          type: string
        AdministrationRoleARN:
          description: The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
          type: string
          minLength: 20
          maxLength: 2048
        AutoDeployment:
          description: Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
          $ref: '#/components/schemas/AutoDeployment'
        Capabilities:
          description: In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Capability'
        Description:
          description: A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
          type: string
          minLength: 1
          maxLength: 1024
        ExecutionRoleName:
          description: The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
          type: string
          minLength: 1
          maxLength: 64
        OperationPreferences:
          $ref: '#/components/schemas/OperationPreferences'
        StackInstancesGroup:
          description: A group of stack instances with parameters in some specific accounts and regions.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/StackInstances'
        Parameters:
          description: The input parameters for the stack set template.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Parameter'
        PermissionModel:
          description: Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
          type: string
          enum:
            - SERVICE_MANAGED
            - SELF_MANAGED
        Tags:
          description: The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
        TemplateBody:
          description: The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
          type: string
          minLength: 1
          maxLength: 51200
        TemplateURL:
          description: 'Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.'
          type: string
          minLength: 1
          maxLength: 5120
        CallAs:
          description: Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
          type: string
          enum:
            - SELF
            - DELEGATED_ADMIN
        ManagedExecution:
          description: Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
          type: object
          properties:
            Active:
              $ref: '#/components/schemas/Active'
          additionalProperties: false
      required:
        - StackSetName
        - PermissionModel
      x-stackql-resource-name: stack_set
      description: StackSet as a resource provides one-click experience for provisioning a StackSet and StackInstances
      x-type-name: AWS::CloudFormation::StackSet
      x-stackql-primary-identifier:
        - StackSetId
      x-stackql-additional-identifiers:
        - - StackSetName
      x-create-only-properties:
        - PermissionModel
        - StackSetName
      x-write-only-properties:
        - TemplateURL
        - OperationPreferences
        - StackInstancesGroup
        - CallAs
      x-read-only-properties:
        - StackSetId
      x-required-properties:
        - StackSetName
        - PermissionModel
      x-required-permissions:
        create:
          - cloudformation:GetTemplateSummary
          - cloudformation:CreateStackSet
          - cloudformation:CreateStackInstances
          - cloudformation:DescribeStackSetOperation
          - cloudformation:ListStackSetOperationResults
          - cloudformation:TagResource
          - iam:PassRole
        read:
          - cloudformation:DescribeStackSet
          - cloudformation:ListStackInstances
          - cloudformation:DescribeStackInstance
        update:
          - cloudformation:GetTemplateSummary
          - cloudformation:UpdateStackSet
          - cloudformation:CreateStackInstances
          - cloudformation:DeleteStackInstances
          - cloudformation:UpdateStackInstances
          - cloudformation:DescribeStackSet
          - cloudformation:DescribeStackSetOperation
          - cloudformation:ListStackSetOperationResults
          - cloudformation:TagResource
          - cloudformation:UntagResource
          - iam:PassRole
        delete:
          - cloudformation:DeleteStackSet
          - cloudformation:DeleteStackInstances
          - cloudformation:DescribeStackSet
          - cloudformation:DescribeStackSetOperation
          - cloudformation:ListStackSetOperationResults
          - cloudformation:UntagResource
        list:
          - cloudformation:ListStackSets
          - cloudformation:DescribeStackSet
          - cloudformation:ListStackInstances
          - cloudformation:DescribeStackInstance
    TypeActivation:
      type: object
      properties:
        Arn:
          description: The Amazon Resource Name (ARN) of the extension.
          pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
          type: string
        ExecutionRoleArn:
          description: The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
          type: string
        PublisherId:
          description: The publisher id assigned by CloudFormation for publishing in this region.
          pattern: '[0-9a-zA-Z-]{40}'
          type: string
          minLength: 1
          maxLength: 40
        LoggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
          description: Specifies logging configuration information for a type.
        PublicTypeArn:
          description: The Amazon Resource Number (ARN) assigned to the public extension upon publication
          pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
          type: string
          maxLength: 1024
        AutoUpdate:
          description: Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated.
          type: boolean
        TypeNameAlias:
          description: An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates.
          pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}'
          type: string
          minLength: 10
          maxLength: 204
        VersionBump:
          description: Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled
          type: string
          enum:
            - MAJOR
            - MINOR
        MajorVersion:
          description: The Major Version of the type you want to enable
          type: string
          minLength: 1
          maxLength: 100000
        TypeName:
          description: |-
            The name of the type being registered.

            We recommend that type names adhere to the following pattern: company_or_organization::service::type.
          pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}'
          type: string
        Type:
          description: The kind of extension
          enum:
            - RESOURCE
            - MODULE
            - HOOK
          type: string
      x-stackql-resource-name: type_activation
      description: Enable a resource that has been published in the CloudFormation Registry.
      x-type-name: AWS::CloudFormation::TypeActivation
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - LoggingConfig
      x-write-only-properties:
        - ExecutionRoleArn
        - Type
        - LoggingConfig
        - VersionBump
        - AutoUpdate
        - MajorVersion
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - cloudformation:ActivateType
          - cloudformation:DescribeType
          - iam:PassRole
        update:
          - cloudformation:ActivateType
          - cloudformation:DescribeType
          - iam:PassRole
        read:
          - cloudformation:DescribeType
        delete:
          - cloudformation:DeactivateType
          - cloudformation:DescribeType
        list:
          - cloudformation:ListTypes
    CreateGuardHookRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RuleLocation:
              $ref: '#/components/schemas/S3Location'
            LogBucket:
              description: S3 Bucket where the guard validate report will be uploaded to
              type: string
            HookStatus:
              default: DISABLED
              description: Attribute to specify which stacks this hook applies to or should get invoked for
              type: string
              enum:
                - ENABLED
                - DISABLED
            TargetOperations:
              description: Which operations should this Hook run against? Resource changes, stacks or change sets.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/TargetOperation'
            FailureMode:
              default: WARN
              description: Attribute to specify CloudFormation behavior on hook failure.
              type: string
              enum:
                - FAIL
                - WARN
            TargetFilters:
              description: Attribute to specify which targets should invoke the hook
              type: object
              oneOf:
                - type: object
                  minProperties: 1
                  properties:
                    TargetNames:
                      description: List of type names that the hook is going to target
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/TargetName'
                    Actions:
                      description: List of actions that the hook is going to target
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/Action'
                    InvocationPoints:
                      description: List of invocation points that the hook is going to target
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/InvocationPoint'
                  additionalProperties: false
                - type: object
                  properties:
                    Targets:
                      description: List of hook targets
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      items:
                        $ref: '#/components/schemas/HookTarget'
                  additionalProperties: false
                  required:
                    - Targets
            StackFilters:
              description: Filters to allow hooks to target specific stack attributes
              type: object
              properties:
                FilteringCriteria:
                  description: Attribute to specify the filtering behavior. ANY will make the Hook pass if one filter matches. ALL will make the Hook pass if all filters match
                  type: string
                  default: ALL
                  enum:
                    - ALL
                    - ANY
                StackNames:
                  description: List of stack names as filters
                  type: object
                  additionalProperties: false
                  minProperties: 1
                  properties:
                    Include:
                      description: List of stack names that the hook is going to target
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/StackName'
                    Exclude:
                      description: List of stack names that the hook is going to be excluded from
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/StackName'
                StackRoles:
                  description: List of stack roles that are performing the stack operations.
                  type: object
                  additionalProperties: false
                  minProperties: 1
                  properties:
                    Include:
                      description: List of stack roles that the hook is going to target
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/Role'
                    Exclude:
                      description: List of stack roles that the hook is going to be excluded from
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/Role'
              required:
                - FilteringCriteria
              additionalProperties: false
            Alias:
              description: The typename alias for the hook.
              pattern: ^(?!(?i)aws)[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              type: string
            HookArn:
              description: The Amazon Resource Name (ARN) of the activated hook
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            ExecutionRole:
              description: The execution role ARN assumed by hooks to read Guard rules from S3 and write Guard outputs to S3.
              $ref: '#/components/schemas/Role'
            Options:
              properties:
                InputParams:
                  $ref: '#/components/schemas/S3Location'
              required: []
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateGuardHookRequest
      type: object
      required: []
    CreateHookDefaultVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            TypeVersionArn:
              description: The Amazon Resource Name (ARN) of the type version.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            TypeName:
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              type: string
            Arn:
              description: The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a HookDefaultVersion
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            VersionId:
              description: The ID of an existing version of the hook to set as the default.
              pattern: ^[A-Za-z0-9-]{1,128}$
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateHookDefaultVersionRequest
      type: object
      required: []
    CreateHookTypeConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            TypeArn:
              description: The Amazon Resource Name (ARN) of the type without version number.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            TypeName:
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              type: string
            ConfigurationArn:
              description: The Amazon Resource Name (ARN) for the configuration data, in this account and region.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type(-configuration)?/hook/.+$
              type: string
            Configuration:
              description: The configuration data for the extension, in this account and region.
              pattern: '[\s\S]+'
              type: string
            ConfigurationAlias:
              description: An alias by which to refer to this extension configuration data.
              pattern: ^[a-zA-Z0-9]{1,256}$
              default: default
              enum:
                - default
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateHookTypeConfigRequest
      type: object
      required: []
    CreateHookVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the type, here the HookVersion. This is used to uniquely identify a HookVersion resource
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            TypeArn:
              description: The Amazon Resource Name (ARN) of the type without the versionID.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            ExecutionRoleArn:
              description: The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
              pattern: arn:.+:iam::[0-9]{12}:role/.+
              maxLength: 256
              type: string
            IsDefaultVersion:
              description: Indicates if this type version is the current default version
              type: boolean
            LoggingConfig:
              $ref: '#/components/schemas/LoggingConfig'
              description: Specifies logging configuration information for a type.
            SchemaHandlerPackage:
              description: |-
                A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.

                For information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide.
              maxLength: 4096
              type: string
            TypeName:
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              type: string
            VersionId:
              description: The ID of the version of the type represented by this hook instance.
              pattern: ^[A-Za-z0-9-]{1,128}$
              type: string
            Visibility:
              description: |-
                The scope at which the type is visible and usable in CloudFormation operations.

                Valid values include:

                PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.

                PUBLIC: The type is publically visible and usable within any Amazon account.
              enum:
                - PUBLIC
                - PRIVATE
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateHookVersionRequest
      type: object
      required: []
    CreateLambdaHookRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            LambdaFunction:
              description: Amazon Resource Name (ARN), Partial ARN, name, version, or alias of the Lambda function to invoke with this hook.
              type: string
              minLength: 1
              maxLength: 170
              pattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?(-iso([a-z])?)?-[a-z]+-\d{1}:)?(\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\$LATEST|[a-zA-Z0-9-_]+))?
            HookStatus:
              default: ENABLED
              description: Attribute to specify which stacks this hook applies to or should get invoked for
              type: string
              enum:
                - ENABLED
                - DISABLED
            TargetOperations:
              description: Which operations should this Hook run against? Resource changes, stacks or change sets.
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/TargetOperation'
            FailureMode:
              description: Attribute to specify CloudFormation behavior on hook failure.
              type: string
              enum:
                - FAIL
                - WARN
            TargetFilters:
              description: Attribute to specify which targets should invoke the hook
              type: object
              oneOf:
                - type: object
                  minProperties: 1
                  properties:
                    TargetNames:
                      description: List of type names that the hook is going to target
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/TargetName'
                    Actions:
                      description: List of actions that the hook is going to target
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/Action'
                    InvocationPoints:
                      description: List of invocation points that the hook is going to target
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/InvocationPoint'
                  additionalProperties: false
                - type: object
                  properties:
                    Targets:
                      description: List of hook targets
                      type: array
                      minItems: 1
                      maxItems: 50
                      uniqueItems: true
                      items:
                        $ref: '#/components/schemas/HookTarget'
                  additionalProperties: false
                  required:
                    - Targets
            StackFilters:
              description: Filters to allow hooks to target specific stack attributes
              type: object
              properties:
                FilteringCriteria:
                  description: Attribute to specify the filtering behavior. ANY will make the Hook pass if one filter matches. ALL will make the Hook pass if all filters match
                  type: string
                  default: ALL
                  enum:
                    - ALL
                    - ANY
                StackNames:
                  description: List of stack names as filters
                  type: object
                  additionalProperties: false
                  minProperties: 1
                  properties:
                    Include:
                      description: List of stack names that the hook is going to target
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/StackName'
                    Exclude:
                      description: List of stack names that the hook is going to be excluded from
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/StackName'
                StackRoles:
                  description: List of stack roles that are performing the stack operations.
                  type: object
                  additionalProperties: false
                  minProperties: 1
                  properties:
                    Include:
                      description: List of stack roles that the hook is going to target
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/Role'
                    Exclude:
                      description: List of stack roles that the hook is going to be excluded from
                      type: array
                      maxItems: 50
                      minItems: 1
                      uniqueItems: true
                      x-insertionOrder: false
                      items:
                        $ref: '#/components/schemas/Role'
              required:
                - FilteringCriteria
              additionalProperties: false
            Alias:
              description: The typename alias for the hook.
              pattern: ^(?!(?i)aws)[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              type: string
            HookArn:
              description: The Amazon Resource Name (ARN) of the activated hook
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/hook/.+$
              type: string
            ExecutionRole:
              description: The execution role ARN assumed by Hooks to invoke Lambda.
              $ref: '#/components/schemas/Role'
          x-stackQL-stringOnly: true
      x-title: CreateLambdaHookRequest
      type: object
      required: []
    CreateModuleDefaultVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the module version to set as the default version.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/module/.+/[0-9]{8}$
              type: string
            ModuleName:
              description: The name of a module existing in the registry.
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::MODULE
              type: string
            VersionId:
              description: The ID of an existing version of the named module to set as the default.
              pattern: ^[0-9]{8}$
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateModuleDefaultVersionRequest
      type: object
      required: []
    CreateModuleVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the module.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/module/.+$
              type: string
            Description:
              description: The description of the registered module.
              maxLength: 1024
              minLength: 1
              type: string
            DocumentationUrl:
              description: The URL of a page providing detailed documentation for this module.
              maxLength: 4096
              type: string
            ModuleName:
              description: |-
                The name of the module being registered.

                Recommended module naming pattern: company_or_organization::service::type::MODULE.
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::MODULE
              type: string
            ModulePackage:
              description: The url to the S3 bucket containing the schema and template fragment for the module you want to register.
              type: string
            IsDefaultVersion:
              description: Indicator of whether this module version is the current default version
              type: boolean
            Schema:
              description: The schema defining input parameters to and resources generated by the module.
              maxLength: 16777216
              minLength: 1
              type: string
            TimeCreated:
              description: The time that the specified module version was registered.
              type: string
            VersionId:
              description: The version ID of the module represented by this module instance.
              pattern: ^[0-9]{8}$
              type: string
            Visibility:
              description: |-
                The scope at which the type is visible and usable in CloudFormation operations.

                The only allowed value at present is:

                PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.
              enum:
                - PRIVATE
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateModuleVersionRequest
      type: object
      required: []
    CreatePublicTypeVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Number (ARN) of the extension.
              pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
              type: string
            TypeVersionArn:
              description: The Amazon Resource Number (ARN) of the extension with the versionId.
              pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:[0-9]{12}:type/.+
              type: string
            PublicVersionNumber:
              description: The version number of a public third-party extension
              type: string
              minLength: 5
              maxLength: 64
            PublisherId:
              description: The publisher id assigned by CloudFormation for publishing in this region.
              pattern: '[0-9a-zA-Z-]{40}'
              type: string
              minLength: 1
              maxLength: 40
            PublicTypeArn:
              description: The Amazon Resource Number (ARN) assigned to the public extension upon publication
              pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
              type: string
              maxLength: 1024
            TypeName:
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}'
              type: string
            LogDeliveryBucket:
              description: A url to the S3 bucket where logs for the testType run will be available
              type: string
            Type:
              description: The kind of extension
              enum:
                - RESOURCE
                - MODULE
                - HOOK
              type: string
          x-stackQL-stringOnly: true
      x-title: CreatePublicTypeVersionRequest
      type: object
      required: []
    CreatePublisherRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AcceptTermsAndConditions:
              description: Whether you accept the terms and conditions for publishing extensions in the CloudFormation registry. You must accept the terms and conditions in order to publish public extensions to the CloudFormation registry. The terms and conditions can be found at https://cloudformation-registry-documents.s3.amazonaws.com/Terms_and_Conditions_for_AWS_CloudFormation_Registry_Publishers.pdf
              type: boolean
            PublisherId:
              description: The publisher id assigned by CloudFormation for publishing in this region.
              pattern: '[0-9a-zA-Z-]{40}'
              type: string
              minLength: 1
              maxLength: 40
            ConnectionArn:
              description: If you are using a Bitbucket or GitHub account for identity verification, the Amazon Resource Name (ARN) for your connection to that account.
              type: string
              pattern: arn:aws(-[w]+)*:.+:.+:[0-9]{12}:.+
            PublisherStatus:
              description: Whether the publisher is verified.
              type: string
              enum:
                - VERIFIED
                - UNVERIFIED
            PublisherProfile:
              description: The URL to the publisher's profile with the identity provider.
              pattern: (http:|https:)+[^s]+[w]
              type: string
              maxLength: 1024
            IdentityProvider:
              description: The type of account used as the identity provider when registering this publisher with CloudFormation.
              type: string
              enum:
                - AWS_Marketplace
                - GitHub
                - Bitbucket
          x-stackQL-stringOnly: true
      x-title: CreatePublisherRequest
      type: object
      required: []
    CreateResourceDefaultVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            VersionId:
              pattern: ^[A-Za-z0-9-]{1,128}$
              description: The ID of an existing version of the resource to set as the default.
              type: string
            TypeName:
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              type: string
            Arn:
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
              description: The Amazon Resource Name (ARN) of the type. This is used to uniquely identify a ResourceDefaultVersion
              type: string
            TypeVersionArn:
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
              description: The Amazon Resource Name (ARN) of the type version.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateResourceDefaultVersionRequest
      type: object
      required: []
    CreateResourceVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the type, here the ResourceVersion. This is used to uniquely identify a ResourceVersion resource
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
              type: string
            TypeArn:
              description: The Amazon Resource Name (ARN) of the type without the versionID.
              pattern: ^arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/resource/.+$
              type: string
            ExecutionRoleArn:
              description: The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
              type: string
            IsDefaultVersion:
              description: Indicates if this type version is the current default version
              type: boolean
            LoggingConfig:
              $ref: '#/components/schemas/LoggingConfig'
              description: Specifies logging configuration information for a type.
            ProvisioningType:
              description: The provisioning behavior of the type. AWS CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.
              enum:
                - NON_PROVISIONABLE
                - IMMUTABLE
                - FULLY_MUTABLE
              type: string
            SchemaHandlerPackage:
              description: |-
                A url to the S3 bucket containing the schema handler package that contains the schema, event handlers, and associated files for the type you want to register.

                For information on generating a schema handler package for the type you want to register, see submit in the CloudFormation CLI User Guide.
              type: string
            TypeName:
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              pattern: ^[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}$
              type: string
            VersionId:
              description: The ID of the version of the type represented by this resource instance.
              pattern: ^[A-Za-z0-9-]{1,128}$
              type: string
            Visibility:
              description: |-
                The scope at which the type is visible and usable in CloudFormation operations.

                Valid values include:

                PRIVATE: The type is only visible and usable within the account in which it is registered. Currently, AWS CloudFormation marks any types you register as PRIVATE.

                PUBLIC: The type is publically visible and usable within any Amazon account.
              enum:
                - PUBLIC
                - PRIVATE
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateResourceVersionRequest
      type: object
      required: []
    CreateStackRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Capabilities:
              type: array
              uniqueItems: false
              items:
                type: string
                enum:
                  - CAPABILITY_IAM
                  - CAPABILITY_NAMED_IAM
                  - CAPABILITY_AUTO_EXPAND
            RoleARN:
              type: string
            Outputs:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Output'
            Description:
              type: string
              minLength: 1
              maxLength: 1024
            DisableRollback:
              type: boolean
            EnableTerminationProtection:
              type: boolean
            NotificationARNs:
              type: array
              uniqueItems: false
              items:
                type: string
              maxItems: 5
            Parameters:
              type: object
              additionalProperties: false
              x-patternProperties:
                '[a-zA-Z0-9]+':
                  type: string
            ParentId:
              type: string
            RootId:
              type: string
            ChangeSetId:
              type: string
            StackName:
              type: string
            StackId:
              type: string
            StackPolicyBody:
              type: object
            StackPolicyURL:
              type: string
            StackStatus:
              type: string
              enum:
                - CREATE_IN_PROGRESS
                - CREATE_FAILED
                - CREATE_COMPLETE
                - ROLLBACK_IN_PROGRESS
                - ROLLBACK_FAILED
                - ROLLBACK_COMPLETE
                - DELETE_IN_PROGRESS
                - DELETE_FAILED
                - DELETE_COMPLETE
                - UPDATE_IN_PROGRESS
                - UPDATE_COMPLETE_CLEANUP_IN_PROGRESS
                - UPDATE_COMPLETE
                - UPDATE_FAILED
                - UPDATE_ROLLBACK_IN_PROGRESS
                - UPDATE_ROLLBACK_FAILED
                - UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS
                - UPDATE_ROLLBACK_COMPLETE
                - REVIEW_IN_PROGRESS
                - IMPORT_IN_PROGRESS
                - IMPORT_COMPLETE
                - IMPORT_ROLLBACK_IN_PROGRESS
                - IMPORT_ROLLBACK_FAILED
                - IMPORT_ROLLBACK_COMPLETE
            StackStatusReason:
              type: string
            Tags:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 50
            TemplateBody:
              type: object
            TemplateURL:
              type: string
              minLength: 1
              maxLength: 1024
            TimeoutInMinutes:
              type: integer
              minimum: 1
            LastUpdateTime:
              type: string
            CreationTime:
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateStackRequest
      type: object
      required: []
    CreateStackSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            StackSetName:
              description: The name to associate with the stack set. The name must be unique in the Region where you create your stack set.
              type: string
              pattern: ^[a-zA-Z][a-zA-Z0-9\-]{0,127}$
              maxLength: 128
            StackSetId:
              description: The ID of the stack set that you're creating.
              type: string
            AdministrationRoleARN:
              description: The Amazon Resource Number (ARN) of the IAM role to use to create this stack set. Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account.
              type: string
              minLength: 20
              maxLength: 2048
            AutoDeployment:
              description: Describes whether StackSets automatically deploys to AWS Organizations accounts that are added to the target organization or organizational unit (OU). Specify only if PermissionModel is SERVICE_MANAGED.
              $ref: '#/components/schemas/AutoDeployment'
            Capabilities:
              description: In some cases, you must explicitly acknowledge that your stack set template contains certain capabilities in order for AWS CloudFormation to create the stack set and related stack instances.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Capability'
            Description:
              description: A description of the stack set. You can use the description to identify the stack set's purpose or other important information.
              type: string
              minLength: 1
              maxLength: 1024
            ExecutionRoleName:
              description: The name of the IAM execution role to use to create the stack set. If you do not specify an execution role, AWS CloudFormation uses the AWSCloudFormationStackSetExecutionRole role for the stack set operation.
              type: string
              minLength: 1
              maxLength: 64
            OperationPreferences:
              $ref: '#/components/schemas/OperationPreferences'
            StackInstancesGroup:
              description: A group of stack instances with parameters in some specific accounts and regions.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/StackInstances'
            Parameters:
              description: The input parameters for the stack set template.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Parameter'
            PermissionModel:
              description: Describes how the IAM roles required for stack set operations are created. By default, SELF-MANAGED is specified.
              type: string
              enum:
                - SERVICE_MANAGED
                - SELF_MANAGED
            Tags:
              description: The key-value pairs to associate with this stack set and the stacks created from it. AWS CloudFormation also propagates these tags to supported resources that are created in the stacks. A maximum number of 50 tags can be specified.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
            TemplateBody:
              description: The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes.
              type: string
              minLength: 1
              maxLength: 51200
            TemplateURL:
              description: 'Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket.'
              type: string
              minLength: 1
              maxLength: 5120
            CallAs:
              description: Specifies the AWS account that you are acting from. By default, SELF is specified. For self-managed permissions, specify SELF; for service-managed permissions, if you are signed in to the organization's management account, specify SELF. If you are signed in to a delegated administrator account, specify DELEGATED_ADMIN.
              type: string
              enum:
                - SELF
                - DELEGATED_ADMIN
            ManagedExecution:
              description: Describes whether StackSets performs non-conflicting operations concurrently and queues conflicting operations.
              type: object
              properties:
                Active:
                  $ref: '#/components/schemas/Active'
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateStackSetRequest
      type: object
      required: []
    CreateTypeActivationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: The Amazon Resource Name (ARN) of the extension.
              pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
              type: string
            ExecutionRoleArn:
              description: The Amazon Resource Name (ARN) of the IAM execution role to use to register the type. If your resource type calls AWS APIs in any of its handlers, you must create an IAM execution role that includes the necessary permissions to call those AWS APIs, and provision that execution role in your account. CloudFormation then assumes that execution role to provide your resource type with the appropriate credentials.
              type: string
            PublisherId:
              description: The publisher id assigned by CloudFormation for publishing in this region.
              pattern: '[0-9a-zA-Z-]{40}'
              type: string
              minLength: 1
              maxLength: 40
            LoggingConfig:
              $ref: '#/components/schemas/LoggingConfig'
              description: Specifies logging configuration information for a type.
            PublicTypeArn:
              description: The Amazon Resource Number (ARN) assigned to the public extension upon publication
              pattern: arn:aws[A-Za-z0-9-]{0,64}:cloudformation:[A-Za-z0-9-]{1,64}:([0-9]{12})?:type/.+
              type: string
              maxLength: 1024
            AutoUpdate:
              description: Whether to automatically update the extension in this account and region when a new minor version is published by the extension publisher. Major versions released by the publisher must be manually updated.
              type: boolean
            TypeNameAlias:
              description: An alias to assign to the public extension in this account and region. If you specify an alias for the extension, you must then use the alias to refer to the extension in your templates.
              pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}'
              type: string
              minLength: 10
              maxLength: 204
            VersionBump:
              description: Manually updates a previously-enabled type to a new major or minor version, if available. You can also use this parameter to update the value of AutoUpdateEnabled
              type: string
              enum:
                - MAJOR
                - MINOR
            MajorVersion:
              description: The Major Version of the type you want to enable
              type: string
              minLength: 1
              maxLength: 100000
            TypeName:
              description: |-
                The name of the type being registered.

                We recommend that type names adhere to the following pattern: company_or_organization::service::type.
              pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}(::MODULE){0,1}'
              type: string
            Type:
              description: The kind of extension
              enum:
                - RESOURCE
                - MODULE
                - HOOK
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateTypeActivationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    guard_hooks:
      name: guard_hooks
      id: aws.cloudformation.guard_hooks
      x-cfn-schema-name: GuardHook
      x-cfn-type-name: AWS::CloudFormation::GuardHook
      x-identifiers:
        - HookArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__GuardHook&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::GuardHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::GuardHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::GuardHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/guard_hooks/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/guard_hooks/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/guard_hooks/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RuleLocation') as rule_location,
              JSON_EXTRACT(Properties, '$.LogBucket') as log_bucket,
              JSON_EXTRACT(Properties, '$.HookStatus') as hook_status,
              JSON_EXTRACT(Properties, '$.TargetOperations') as target_operations,
              JSON_EXTRACT(Properties, '$.FailureMode') as failure_mode,
              JSON_EXTRACT(Properties, '$.TargetFilters') as target_filters,
              JSON_EXTRACT(Properties, '$.StackFilters') as stack_filters,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.HookArn') as hook_arn,
              JSON_EXTRACT(Properties, '$.ExecutionRole') as execution_role,
              JSON_EXTRACT(Properties, '$.Options') as options
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::GuardHook'
              AND data__Identifier = '<HookArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.RuleLocation') as rule_location,
                JSON_EXTRACT(detail.Properties, '$.LogBucket') as log_bucket,
                JSON_EXTRACT(detail.Properties, '$.HookStatus') as hook_status,
                JSON_EXTRACT(detail.Properties, '$.TargetOperations') as target_operations,
                JSON_EXTRACT(detail.Properties, '$.FailureMode') as failure_mode,
                JSON_EXTRACT(detail.Properties, '$.TargetFilters') as target_filters,
                JSON_EXTRACT(detail.Properties, '$.StackFilters') as stack_filters,
                JSON_EXTRACT(detail.Properties, '$.Alias') as alias,
                JSON_EXTRACT(detail.Properties, '$.HookArn') as hook_arn,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRole') as execution_role,
                JSON_EXTRACT(detail.Properties, '$.Options') as options
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::GuardHook'
                AND detail.data__TypeName = 'AWS::CloudFormation::GuardHook'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'RuleLocation') as rule_location,
                  json_extract_path_text(Properties, 'LogBucket') as log_bucket,
                  json_extract_path_text(Properties, 'HookStatus') as hook_status,
                  json_extract_path_text(Properties, 'TargetOperations') as target_operations,
                  json_extract_path_text(Properties, 'FailureMode') as failure_mode,
                  json_extract_path_text(Properties, 'TargetFilters') as target_filters,
                  json_extract_path_text(Properties, 'StackFilters') as stack_filters,
                  json_extract_path_text(Properties, 'Alias') as alias,
                  json_extract_path_text(Properties, 'HookArn') as hook_arn,
                  json_extract_path_text(Properties, 'ExecutionRole') as execution_role,
                  json_extract_path_text(Properties, 'Options') as options
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::GuardHook'
                  AND data__Identifier = '<HookArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'RuleLocation') as rule_location,
                    json_extract_path_text(detail.Properties, 'LogBucket') as log_bucket,
                    json_extract_path_text(detail.Properties, 'HookStatus') as hook_status,
                    json_extract_path_text(detail.Properties, 'TargetOperations') as target_operations,
                    json_extract_path_text(detail.Properties, 'FailureMode') as failure_mode,
                    json_extract_path_text(detail.Properties, 'TargetFilters') as target_filters,
                    json_extract_path_text(detail.Properties, 'StackFilters') as stack_filters,
                    json_extract_path_text(detail.Properties, 'Alias') as alias,
                    json_extract_path_text(detail.Properties, 'HookArn') as hook_arn,
                    json_extract_path_text(detail.Properties, 'ExecutionRole') as execution_role,
                    json_extract_path_text(detail.Properties, 'Options') as options
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::GuardHook'
                    AND detail.data__TypeName = 'AWS::CloudFormation::GuardHook'
                    AND listing.region = 'us-east-1'
    guard_hooks_list_only:
      name: guard_hooks_list_only
      id: aws.cloudformation.guard_hooks_list_only
      x-cfn-schema-name: GuardHook
      x-cfn-type-name: AWS::CloudFormation::GuardHook
      x-identifiers:
        - HookArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.HookArn') as hook_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::GuardHook'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'HookArn') as hook_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::GuardHook'
                AND region = 'us-east-1'
    hook_default_versions:
      name: hook_default_versions
      id: aws.cloudformation.hook_default_versions
      x-cfn-schema-name: HookDefaultVersion
      x-cfn-type-name: AWS::CloudFormation::HookDefaultVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__HookDefaultVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookDefaultVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookDefaultVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/hook_default_versions/methods/create_resource'
        delete: []
        update:
          - $ref: '#/components/x-stackQL-resources/hook_default_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.TypeVersionArn') as type_version_arn,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.TypeVersionArn') as type_version_arn,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.VersionId') as version_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
                AND detail.data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'TypeVersionArn') as type_version_arn,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'VersionId') as version_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'TypeVersionArn') as type_version_arn,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'VersionId') as version_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
                    AND detail.data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
                    AND listing.region = 'us-east-1'
    hook_default_versions_list_only:
      name: hook_default_versions_list_only
      id: aws.cloudformation.hook_default_versions_list_only
      x-cfn-schema-name: HookDefaultVersion
      x-cfn-type-name: AWS::CloudFormation::HookDefaultVersion
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::HookDefaultVersion'
                AND region = 'us-east-1'
    hook_type_configs:
      name: hook_type_configs
      id: aws.cloudformation.hook_type_configs
      x-cfn-schema-name: HookTypeConfig
      x-cfn-type-name: AWS::CloudFormation::HookTypeConfig
      x-identifiers:
        - ConfigurationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__HookTypeConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookTypeConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookTypeConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookTypeConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/hook_type_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/hook_type_configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/hook_type_configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.TypeArn') as type_arn,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.ConfigurationArn') as configuration_arn,
              JSON_EXTRACT(Properties, '$.Configuration') as configuration,
              JSON_EXTRACT(Properties, '$.ConfigurationAlias') as configuration_alias
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
              AND data__Identifier = '<ConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.TypeArn') as type_arn,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationArn') as configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.Configuration') as configuration,
                JSON_EXTRACT(detail.Properties, '$.ConfigurationAlias') as configuration_alias
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
                AND detail.data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'TypeArn') as type_arn,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'ConfigurationArn') as configuration_arn,
                  json_extract_path_text(Properties, 'Configuration') as configuration,
                  json_extract_path_text(Properties, 'ConfigurationAlias') as configuration_alias
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
                  AND data__Identifier = '<ConfigurationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'TypeArn') as type_arn,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'ConfigurationArn') as configuration_arn,
                    json_extract_path_text(detail.Properties, 'Configuration') as configuration,
                    json_extract_path_text(detail.Properties, 'ConfigurationAlias') as configuration_alias
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
                    AND detail.data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
                    AND listing.region = 'us-east-1'
    hook_type_configs_list_only:
      name: hook_type_configs_list_only
      id: aws.cloudformation.hook_type_configs_list_only
      x-cfn-schema-name: HookTypeConfig
      x-cfn-type-name: AWS::CloudFormation::HookTypeConfig
      x-identifiers:
        - ConfigurationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ConfigurationArn') as configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ConfigurationArn') as configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::HookTypeConfig'
                AND region = 'us-east-1'
    hook_versions:
      name: hook_versions
      id: aws.cloudformation.hook_versions
      x-cfn-schema-name: HookVersion
      x-cfn-type-name: AWS::CloudFormation::HookVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__HookVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::HookVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/hook_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/hook_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.TypeArn') as type_arn,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.IsDefaultVersion') as is_default_version,
              JSON_EXTRACT(Properties, '$.LoggingConfig') as logging_config,
              JSON_EXTRACT(Properties, '$.SchemaHandlerPackage') as schema_handler_package,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id,
              JSON_EXTRACT(Properties, '$.Visibility') as visibility
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::HookVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.TypeArn') as type_arn,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.IsDefaultVersion') as is_default_version,
                JSON_EXTRACT(detail.Properties, '$.LoggingConfig') as logging_config,
                JSON_EXTRACT(detail.Properties, '$.SchemaHandlerPackage') as schema_handler_package,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.VersionId') as version_id,
                JSON_EXTRACT(detail.Properties, '$.Visibility') as visibility
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::HookVersion'
                AND detail.data__TypeName = 'AWS::CloudFormation::HookVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'TypeArn') as type_arn,
                  json_extract_path_text(Properties, 'ExecutionRoleArn') as execution_role_arn,
                  json_extract_path_text(Properties, 'IsDefaultVersion') as is_default_version,
                  json_extract_path_text(Properties, 'LoggingConfig') as logging_config,
                  json_extract_path_text(Properties, 'SchemaHandlerPackage') as schema_handler_package,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'VersionId') as version_id,
                  json_extract_path_text(Properties, 'Visibility') as visibility
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::HookVersion'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'TypeArn') as type_arn,
                    json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                    json_extract_path_text(detail.Properties, 'IsDefaultVersion') as is_default_version,
                    json_extract_path_text(detail.Properties, 'LoggingConfig') as logging_config,
                    json_extract_path_text(detail.Properties, 'SchemaHandlerPackage') as schema_handler_package,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'VersionId') as version_id,
                    json_extract_path_text(detail.Properties, 'Visibility') as visibility
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::HookVersion'
                    AND detail.data__TypeName = 'AWS::CloudFormation::HookVersion'
                    AND listing.region = 'us-east-1'
    hook_versions_list_only:
      name: hook_versions_list_only
      id: aws.cloudformation.hook_versions_list_only
      x-cfn-schema-name: HookVersion
      x-cfn-type-name: AWS::CloudFormation::HookVersion
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::HookVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::HookVersion'
                AND region = 'us-east-1'
    lambda_hooks:
      name: lambda_hooks
      id: aws.cloudformation.lambda_hooks
      x-cfn-schema-name: LambdaHook
      x-cfn-type-name: AWS::CloudFormation::LambdaHook
      x-identifiers:
        - HookArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LambdaHook&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::LambdaHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::LambdaHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::LambdaHook"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/lambda_hooks/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/lambda_hooks/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/lambda_hooks/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.LambdaFunction') as lambda_function,
              JSON_EXTRACT(Properties, '$.HookStatus') as hook_status,
              JSON_EXTRACT(Properties, '$.TargetOperations') as target_operations,
              JSON_EXTRACT(Properties, '$.FailureMode') as failure_mode,
              JSON_EXTRACT(Properties, '$.TargetFilters') as target_filters,
              JSON_EXTRACT(Properties, '$.StackFilters') as stack_filters,
              JSON_EXTRACT(Properties, '$.Alias') as alias,
              JSON_EXTRACT(Properties, '$.HookArn') as hook_arn,
              JSON_EXTRACT(Properties, '$.ExecutionRole') as execution_role
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::LambdaHook'
              AND data__Identifier = '<HookArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.LambdaFunction') as lambda_function,
                JSON_EXTRACT(detail.Properties, '$.HookStatus') as hook_status,
                JSON_EXTRACT(detail.Properties, '$.TargetOperations') as target_operations,
                JSON_EXTRACT(detail.Properties, '$.FailureMode') as failure_mode,
                JSON_EXTRACT(detail.Properties, '$.TargetFilters') as target_filters,
                JSON_EXTRACT(detail.Properties, '$.StackFilters') as stack_filters,
                JSON_EXTRACT(detail.Properties, '$.Alias') as alias,
                JSON_EXTRACT(detail.Properties, '$.HookArn') as hook_arn,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRole') as execution_role
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::LambdaHook'
                AND detail.data__TypeName = 'AWS::CloudFormation::LambdaHook'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'LambdaFunction') as lambda_function,
                  json_extract_path_text(Properties, 'HookStatus') as hook_status,
                  json_extract_path_text(Properties, 'TargetOperations') as target_operations,
                  json_extract_path_text(Properties, 'FailureMode') as failure_mode,
                  json_extract_path_text(Properties, 'TargetFilters') as target_filters,
                  json_extract_path_text(Properties, 'StackFilters') as stack_filters,
                  json_extract_path_text(Properties, 'Alias') as alias,
                  json_extract_path_text(Properties, 'HookArn') as hook_arn,
                  json_extract_path_text(Properties, 'ExecutionRole') as execution_role
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::LambdaHook'
                  AND data__Identifier = '<HookArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'LambdaFunction') as lambda_function,
                    json_extract_path_text(detail.Properties, 'HookStatus') as hook_status,
                    json_extract_path_text(detail.Properties, 'TargetOperations') as target_operations,
                    json_extract_path_text(detail.Properties, 'FailureMode') as failure_mode,
                    json_extract_path_text(detail.Properties, 'TargetFilters') as target_filters,
                    json_extract_path_text(detail.Properties, 'StackFilters') as stack_filters,
                    json_extract_path_text(detail.Properties, 'Alias') as alias,
                    json_extract_path_text(detail.Properties, 'HookArn') as hook_arn,
                    json_extract_path_text(detail.Properties, 'ExecutionRole') as execution_role
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::LambdaHook'
                    AND detail.data__TypeName = 'AWS::CloudFormation::LambdaHook'
                    AND listing.region = 'us-east-1'
    lambda_hooks_list_only:
      name: lambda_hooks_list_only
      id: aws.cloudformation.lambda_hooks_list_only
      x-cfn-schema-name: LambdaHook
      x-cfn-type-name: AWS::CloudFormation::LambdaHook
      x-identifiers:
        - HookArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.HookArn') as hook_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::LambdaHook'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'HookArn') as hook_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::LambdaHook'
                AND region = 'us-east-1'
    module_default_versions:
      name: module_default_versions
      id: aws.cloudformation.module_default_versions
      x-cfn-schema-name: ModuleDefaultVersion
      x-cfn-type-name: AWS::CloudFormation::ModuleDefaultVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModuleDefaultVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ModuleDefaultVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/module_default_versions/methods/create_resource'
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ModuleName') as module_name,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ModuleName') as module_name,
                JSON_EXTRACT(detail.Properties, '$.VersionId') as version_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
                AND detail.data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ModuleName') as module_name,
                  json_extract_path_text(Properties, 'VersionId') as version_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ModuleName') as module_name,
                    json_extract_path_text(detail.Properties, 'VersionId') as version_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
                    AND detail.data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
                    AND listing.region = 'us-east-1'
    module_default_versions_list_only:
      name: module_default_versions_list_only
      id: aws.cloudformation.module_default_versions_list_only
      x-cfn-schema-name: ModuleDefaultVersion
      x-cfn-type-name: AWS::CloudFormation::ModuleDefaultVersion
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::ModuleDefaultVersion'
                AND region = 'us-east-1'
    module_versions:
      name: module_versions
      id: aws.cloudformation.module_versions
      x-cfn-schema-name: ModuleVersion
      x-cfn-type-name: AWS::CloudFormation::ModuleVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ModuleVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ModuleVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ModuleVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/module_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/module_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DocumentationUrl') as documentation_url,
              JSON_EXTRACT(Properties, '$.ModuleName') as module_name,
              JSON_EXTRACT(Properties, '$.ModulePackage') as module_package,
              JSON_EXTRACT(Properties, '$.IsDefaultVersion') as is_default_version,
              JSON_EXTRACT(Properties, '$.Schema') as _schema,
              JSON_EXTRACT(Properties, '$.TimeCreated') as time_created,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id,
              JSON_EXTRACT(Properties, '$.Visibility') as visibility
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ModuleVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DocumentationUrl') as documentation_url,
                json_extract_path_text(Properties, 'ModuleName') as module_name,
                json_extract_path_text(Properties, 'ModulePackage') as module_package,
                json_extract_path_text(Properties, 'IsDefaultVersion') as is_default_version,
                json_extract_path_text(Properties, 'Schema') as _schema,
                json_extract_path_text(Properties, 'TimeCreated') as time_created,
                json_extract_path_text(Properties, 'VersionId') as version_id,
                json_extract_path_text(Properties, 'Visibility') as visibility
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ModuleVersion'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    public_type_versions:
      name: public_type_versions
      id: aws.cloudformation.public_type_versions
      x-cfn-schema-name: PublicTypeVersion
      x-cfn-type-name: AWS::CloudFormation::PublicTypeVersion
      x-identifiers:
        - PublicTypeArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PublicTypeVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::PublicTypeVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/public_type_versions/methods/create_resource'
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.TypeVersionArn') as type_version_arn,
              JSON_EXTRACT(Properties, '$.PublicVersionNumber') as public_version_number,
              JSON_EXTRACT(Properties, '$.PublisherId') as publisher_id,
              JSON_EXTRACT(Properties, '$.PublicTypeArn') as public_type_arn,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.LogDeliveryBucket') as log_delivery_bucket,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
              AND data__Identifier = '<PublicTypeArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.TypeVersionArn') as type_version_arn,
                JSON_EXTRACT(detail.Properties, '$.PublicVersionNumber') as public_version_number,
                JSON_EXTRACT(detail.Properties, '$.PublisherId') as publisher_id,
                JSON_EXTRACT(detail.Properties, '$.PublicTypeArn') as public_type_arn,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.LogDeliveryBucket') as log_delivery_bucket,
                JSON_EXTRACT(detail.Properties, '$.Type') as type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
                AND detail.data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'TypeVersionArn') as type_version_arn,
                  json_extract_path_text(Properties, 'PublicVersionNumber') as public_version_number,
                  json_extract_path_text(Properties, 'PublisherId') as publisher_id,
                  json_extract_path_text(Properties, 'PublicTypeArn') as public_type_arn,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'LogDeliveryBucket') as log_delivery_bucket,
                  json_extract_path_text(Properties, 'Type') as type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
                  AND data__Identifier = '<PublicTypeArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'TypeVersionArn') as type_version_arn,
                    json_extract_path_text(detail.Properties, 'PublicVersionNumber') as public_version_number,
                    json_extract_path_text(detail.Properties, 'PublisherId') as publisher_id,
                    json_extract_path_text(detail.Properties, 'PublicTypeArn') as public_type_arn,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'LogDeliveryBucket') as log_delivery_bucket,
                    json_extract_path_text(detail.Properties, 'Type') as type
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
                    AND detail.data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
                    AND listing.region = 'us-east-1'
    public_type_versions_list_only:
      name: public_type_versions_list_only
      id: aws.cloudformation.public_type_versions_list_only
      x-cfn-schema-name: PublicTypeVersion
      x-cfn-type-name: AWS::CloudFormation::PublicTypeVersion
      x-identifiers:
        - PublicTypeArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PublicTypeArn') as public_type_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PublicTypeArn') as public_type_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::PublicTypeVersion'
                AND region = 'us-east-1'
    publishers:
      name: publishers
      id: aws.cloudformation.publishers
      x-cfn-schema-name: Publisher
      x-cfn-type-name: AWS::CloudFormation::Publisher
      x-identifiers:
        - PublisherId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Publisher&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::Publisher"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/publishers/methods/create_resource'
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AcceptTermsAndConditions') as accept_terms_and_conditions,
              JSON_EXTRACT(Properties, '$.PublisherId') as publisher_id,
              JSON_EXTRACT(Properties, '$.ConnectionArn') as connection_arn,
              JSON_EXTRACT(Properties, '$.PublisherStatus') as publisher_status,
              JSON_EXTRACT(Properties, '$.PublisherProfile') as publisher_profile,
              JSON_EXTRACT(Properties, '$.IdentityProvider') as identity_provider
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::Publisher'
              AND data__Identifier = '<PublisherId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AcceptTermsAndConditions') as accept_terms_and_conditions,
                JSON_EXTRACT(detail.Properties, '$.PublisherId') as publisher_id,
                JSON_EXTRACT(detail.Properties, '$.ConnectionArn') as connection_arn,
                JSON_EXTRACT(detail.Properties, '$.PublisherStatus') as publisher_status,
                JSON_EXTRACT(detail.Properties, '$.PublisherProfile') as publisher_profile,
                JSON_EXTRACT(detail.Properties, '$.IdentityProvider') as identity_provider
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::Publisher'
                AND detail.data__TypeName = 'AWS::CloudFormation::Publisher'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AcceptTermsAndConditions') as accept_terms_and_conditions,
                  json_extract_path_text(Properties, 'PublisherId') as publisher_id,
                  json_extract_path_text(Properties, 'ConnectionArn') as connection_arn,
                  json_extract_path_text(Properties, 'PublisherStatus') as publisher_status,
                  json_extract_path_text(Properties, 'PublisherProfile') as publisher_profile,
                  json_extract_path_text(Properties, 'IdentityProvider') as identity_provider
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::Publisher'
                  AND data__Identifier = '<PublisherId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AcceptTermsAndConditions') as accept_terms_and_conditions,
                    json_extract_path_text(detail.Properties, 'PublisherId') as publisher_id,
                    json_extract_path_text(detail.Properties, 'ConnectionArn') as connection_arn,
                    json_extract_path_text(detail.Properties, 'PublisherStatus') as publisher_status,
                    json_extract_path_text(detail.Properties, 'PublisherProfile') as publisher_profile,
                    json_extract_path_text(detail.Properties, 'IdentityProvider') as identity_provider
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::Publisher'
                    AND detail.data__TypeName = 'AWS::CloudFormation::Publisher'
                    AND listing.region = 'us-east-1'
    publishers_list_only:
      name: publishers_list_only
      id: aws.cloudformation.publishers_list_only
      x-cfn-schema-name: Publisher
      x-cfn-type-name: AWS::CloudFormation::Publisher
      x-identifiers:
        - PublisherId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PublisherId') as publisher_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::Publisher'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PublisherId') as publisher_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::Publisher'
                AND region = 'us-east-1'
    resource_default_versions:
      name: resource_default_versions
      id: aws.cloudformation.resource_default_versions
      x-cfn-schema-name: ResourceDefaultVersion
      x-cfn-type-name: AWS::CloudFormation::ResourceDefaultVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourceDefaultVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ResourceDefaultVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ResourceDefaultVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ResourceDefaultVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_default_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_default_versions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/resource_default_versions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.TypeVersionArn') as type_version_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.VersionId') as version_id,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.TypeVersionArn') as type_version_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
                AND detail.data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'VersionId') as version_id,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'TypeVersionArn') as type_version_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'VersionId') as version_id,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'TypeVersionArn') as type_version_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
                    AND detail.data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
                    AND listing.region = 'us-east-1'
    resource_default_versions_list_only:
      name: resource_default_versions_list_only
      id: aws.cloudformation.resource_default_versions_list_only
      x-cfn-schema-name: ResourceDefaultVersion
      x-cfn-type-name: AWS::CloudFormation::ResourceDefaultVersion
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::ResourceDefaultVersion'
                AND region = 'us-east-1'
    resource_versions:
      name: resource_versions
      id: aws.cloudformation.resource_versions
      x-cfn-schema-name: ResourceVersion
      x-cfn-type-name: AWS::CloudFormation::ResourceVersion
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResourceVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ResourceVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::ResourceVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/resource_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/resource_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.TypeArn') as type_arn,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.IsDefaultVersion') as is_default_version,
              JSON_EXTRACT(Properties, '$.LoggingConfig') as logging_config,
              JSON_EXTRACT(Properties, '$.ProvisioningType') as provisioning_type,
              JSON_EXTRACT(Properties, '$.SchemaHandlerPackage') as schema_handler_package,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.VersionId') as version_id,
              JSON_EXTRACT(Properties, '$.Visibility') as visibility
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ResourceVersion'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.TypeArn') as type_arn,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.IsDefaultVersion') as is_default_version,
                JSON_EXTRACT(detail.Properties, '$.LoggingConfig') as logging_config,
                JSON_EXTRACT(detail.Properties, '$.ProvisioningType') as provisioning_type,
                JSON_EXTRACT(detail.Properties, '$.SchemaHandlerPackage') as schema_handler_package,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.VersionId') as version_id,
                JSON_EXTRACT(detail.Properties, '$.Visibility') as visibility
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::ResourceVersion'
                AND detail.data__TypeName = 'AWS::CloudFormation::ResourceVersion'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'TypeArn') as type_arn,
                  json_extract_path_text(Properties, 'ExecutionRoleArn') as execution_role_arn,
                  json_extract_path_text(Properties, 'IsDefaultVersion') as is_default_version,
                  json_extract_path_text(Properties, 'LoggingConfig') as logging_config,
                  json_extract_path_text(Properties, 'ProvisioningType') as provisioning_type,
                  json_extract_path_text(Properties, 'SchemaHandlerPackage') as schema_handler_package,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'VersionId') as version_id,
                  json_extract_path_text(Properties, 'Visibility') as visibility
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::ResourceVersion'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'TypeArn') as type_arn,
                    json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                    json_extract_path_text(detail.Properties, 'IsDefaultVersion') as is_default_version,
                    json_extract_path_text(detail.Properties, 'LoggingConfig') as logging_config,
                    json_extract_path_text(detail.Properties, 'ProvisioningType') as provisioning_type,
                    json_extract_path_text(detail.Properties, 'SchemaHandlerPackage') as schema_handler_package,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'VersionId') as version_id,
                    json_extract_path_text(detail.Properties, 'Visibility') as visibility
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::ResourceVersion'
                    AND detail.data__TypeName = 'AWS::CloudFormation::ResourceVersion'
                    AND listing.region = 'us-east-1'
    resource_versions_list_only:
      name: resource_versions_list_only
      id: aws.cloudformation.resource_versions_list_only
      x-cfn-schema-name: ResourceVersion
      x-cfn-type-name: AWS::CloudFormation::ResourceVersion
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::ResourceVersion'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::ResourceVersion'
                AND region = 'us-east-1'
    stacks:
      name: stacks
      id: aws.cloudformation.stacks
      x-cfn-schema-name: Stack
      x-cfn-type-name: AWS::CloudFormation::Stack
      x-identifiers:
        - StackId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Stack&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::Stack"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::Stack"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::Stack"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/stacks/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/stacks/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/stacks/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(Properties, '$.RoleARN') as role_arn,
              JSON_EXTRACT(Properties, '$.Outputs') as outputs,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DisableRollback') as disable_rollback,
              JSON_EXTRACT(Properties, '$.EnableTerminationProtection') as enable_termination_protection,
              JSON_EXTRACT(Properties, '$.NotificationARNs') as notification_arns,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.ParentId') as parent_id,
              JSON_EXTRACT(Properties, '$.RootId') as root_id,
              JSON_EXTRACT(Properties, '$.ChangeSetId') as change_set_id,
              JSON_EXTRACT(Properties, '$.StackName') as stack_name,
              JSON_EXTRACT(Properties, '$.StackId') as stack_id,
              JSON_EXTRACT(Properties, '$.StackPolicyBody') as stack_policy_body,
              JSON_EXTRACT(Properties, '$.StackPolicyURL') as stack_policy_url,
              JSON_EXTRACT(Properties, '$.StackStatus') as stack_status,
              JSON_EXTRACT(Properties, '$.StackStatusReason') as stack_status_reason,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TemplateBody') as template_body,
              JSON_EXTRACT(Properties, '$.TemplateURL') as template_url,
              JSON_EXTRACT(Properties, '$.TimeoutInMinutes') as timeout_in_minutes,
              JSON_EXTRACT(Properties, '$.LastUpdateTime') as last_update_time,
              JSON_EXTRACT(Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::Stack'
              AND data__Identifier = '<StackId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
                JSON_EXTRACT(detail.Properties, '$.RoleARN') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Outputs') as outputs,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.DisableRollback') as disable_rollback,
                JSON_EXTRACT(detail.Properties, '$.EnableTerminationProtection') as enable_termination_protection,
                JSON_EXTRACT(detail.Properties, '$.NotificationARNs') as notification_arns,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
                JSON_EXTRACT(detail.Properties, '$.ParentId') as parent_id,
                JSON_EXTRACT(detail.Properties, '$.RootId') as root_id,
                JSON_EXTRACT(detail.Properties, '$.ChangeSetId') as change_set_id,
                JSON_EXTRACT(detail.Properties, '$.StackName') as stack_name,
                JSON_EXTRACT(detail.Properties, '$.StackId') as stack_id,
                JSON_EXTRACT(detail.Properties, '$.StackPolicyBody') as stack_policy_body,
                JSON_EXTRACT(detail.Properties, '$.StackPolicyURL') as stack_policy_url,
                JSON_EXTRACT(detail.Properties, '$.StackStatus') as stack_status,
                JSON_EXTRACT(detail.Properties, '$.StackStatusReason') as stack_status_reason,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TemplateBody') as template_body,
                JSON_EXTRACT(detail.Properties, '$.TemplateURL') as template_url,
                JSON_EXTRACT(detail.Properties, '$.TimeoutInMinutes') as timeout_in_minutes,
                JSON_EXTRACT(detail.Properties, '$.LastUpdateTime') as last_update_time,
                JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::Stack'
                AND detail.data__TypeName = 'AWS::CloudFormation::Stack'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Capabilities') as capabilities,
                  json_extract_path_text(Properties, 'RoleARN') as role_arn,
                  json_extract_path_text(Properties, 'Outputs') as outputs,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'DisableRollback') as disable_rollback,
                  json_extract_path_text(Properties, 'EnableTerminationProtection') as enable_termination_protection,
                  json_extract_path_text(Properties, 'NotificationARNs') as notification_arns,
                  json_extract_path_text(Properties, 'Parameters') as parameters,
                  json_extract_path_text(Properties, 'ParentId') as parent_id,
                  json_extract_path_text(Properties, 'RootId') as root_id,
                  json_extract_path_text(Properties, 'ChangeSetId') as change_set_id,
                  json_extract_path_text(Properties, 'StackName') as stack_name,
                  json_extract_path_text(Properties, 'StackId') as stack_id,
                  json_extract_path_text(Properties, 'StackPolicyBody') as stack_policy_body,
                  json_extract_path_text(Properties, 'StackPolicyURL') as stack_policy_url,
                  json_extract_path_text(Properties, 'StackStatus') as stack_status,
                  json_extract_path_text(Properties, 'StackStatusReason') as stack_status_reason,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TemplateBody') as template_body,
                  json_extract_path_text(Properties, 'TemplateURL') as template_url,
                  json_extract_path_text(Properties, 'TimeoutInMinutes') as timeout_in_minutes,
                  json_extract_path_text(Properties, 'LastUpdateTime') as last_update_time,
                  json_extract_path_text(Properties, 'CreationTime') as creation_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::Stack'
                  AND data__Identifier = '<StackId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                    json_extract_path_text(detail.Properties, 'RoleARN') as role_arn,
                    json_extract_path_text(detail.Properties, 'Outputs') as outputs,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'DisableRollback') as disable_rollback,
                    json_extract_path_text(detail.Properties, 'EnableTerminationProtection') as enable_termination_protection,
                    json_extract_path_text(detail.Properties, 'NotificationARNs') as notification_arns,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                    json_extract_path_text(detail.Properties, 'ParentId') as parent_id,
                    json_extract_path_text(detail.Properties, 'RootId') as root_id,
                    json_extract_path_text(detail.Properties, 'ChangeSetId') as change_set_id,
                    json_extract_path_text(detail.Properties, 'StackName') as stack_name,
                    json_extract_path_text(detail.Properties, 'StackId') as stack_id,
                    json_extract_path_text(detail.Properties, 'StackPolicyBody') as stack_policy_body,
                    json_extract_path_text(detail.Properties, 'StackPolicyURL') as stack_policy_url,
                    json_extract_path_text(detail.Properties, 'StackStatus') as stack_status,
                    json_extract_path_text(detail.Properties, 'StackStatusReason') as stack_status_reason,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TemplateBody') as template_body,
                    json_extract_path_text(detail.Properties, 'TemplateURL') as template_url,
                    json_extract_path_text(detail.Properties, 'TimeoutInMinutes') as timeout_in_minutes,
                    json_extract_path_text(detail.Properties, 'LastUpdateTime') as last_update_time,
                    json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::Stack'
                    AND detail.data__TypeName = 'AWS::CloudFormation::Stack'
                    AND listing.region = 'us-east-1'
    stacks_list_only:
      name: stacks_list_only
      id: aws.cloudformation.stacks_list_only
      x-cfn-schema-name: Stack
      x-cfn-type-name: AWS::CloudFormation::Stack
      x-identifiers:
        - StackId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StackId') as stack_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::Stack'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StackId') as stack_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::Stack'
                AND region = 'us-east-1'
    stack_tags:
      name: stack_tags
      id: aws.cloudformation.stack_tags
      x-cfn-schema-name: Stack
      x-cfn-type-name: AWS::CloudFormation::Stack
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(detail.Properties, '$.RoleARN') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.Outputs') as outputs,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.DisableRollback') as disable_rollback,
              JSON_EXTRACT(detail.Properties, '$.EnableTerminationProtection') as enable_termination_protection,
              JSON_EXTRACT(detail.Properties, '$.NotificationARNs') as notification_arns,
              JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(detail.Properties, '$.ParentId') as parent_id,
              JSON_EXTRACT(detail.Properties, '$.RootId') as root_id,
              JSON_EXTRACT(detail.Properties, '$.ChangeSetId') as change_set_id,
              JSON_EXTRACT(detail.Properties, '$.StackName') as stack_name,
              JSON_EXTRACT(detail.Properties, '$.StackId') as stack_id,
              JSON_EXTRACT(detail.Properties, '$.StackPolicyBody') as stack_policy_body,
              JSON_EXTRACT(detail.Properties, '$.StackPolicyURL') as stack_policy_url,
              JSON_EXTRACT(detail.Properties, '$.StackStatus') as stack_status,
              JSON_EXTRACT(detail.Properties, '$.StackStatusReason') as stack_status_reason,
              JSON_EXTRACT(detail.Properties, '$.TemplateBody') as template_body,
              JSON_EXTRACT(detail.Properties, '$.TemplateURL') as template_url,
              JSON_EXTRACT(detail.Properties, '$.TimeoutInMinutes') as timeout_in_minutes,
              JSON_EXTRACT(detail.Properties, '$.LastUpdateTime') as last_update_time,
              JSON_EXTRACT(detail.Properties, '$.CreationTime') as creation_time
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CloudFormation::Stack'
              AND detail.data__TypeName = 'AWS::CloudFormation::Stack'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                json_extract_path_text(detail.Properties, 'RoleARN') as role_arn,
                json_extract_path_text(detail.Properties, 'Outputs') as outputs,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'DisableRollback') as disable_rollback,
                json_extract_path_text(detail.Properties, 'EnableTerminationProtection') as enable_termination_protection,
                json_extract_path_text(detail.Properties, 'NotificationARNs') as notification_arns,
                json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                json_extract_path_text(detail.Properties, 'ParentId') as parent_id,
                json_extract_path_text(detail.Properties, 'RootId') as root_id,
                json_extract_path_text(detail.Properties, 'ChangeSetId') as change_set_id,
                json_extract_path_text(detail.Properties, 'StackName') as stack_name,
                json_extract_path_text(detail.Properties, 'StackId') as stack_id,
                json_extract_path_text(detail.Properties, 'StackPolicyBody') as stack_policy_body,
                json_extract_path_text(detail.Properties, 'StackPolicyURL') as stack_policy_url,
                json_extract_path_text(detail.Properties, 'StackStatus') as stack_status,
                json_extract_path_text(detail.Properties, 'StackStatusReason') as stack_status_reason,
                json_extract_path_text(detail.Properties, 'TemplateBody') as template_body,
                json_extract_path_text(detail.Properties, 'TemplateURL') as template_url,
                json_extract_path_text(detail.Properties, 'TimeoutInMinutes') as timeout_in_minutes,
                json_extract_path_text(detail.Properties, 'LastUpdateTime') as last_update_time,
                json_extract_path_text(detail.Properties, 'CreationTime') as creation_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CloudFormation::Stack'
                AND detail.data__TypeName = 'AWS::CloudFormation::Stack'
                AND listing.region = 'us-east-1'
    stack_sets:
      name: stack_sets
      id: aws.cloudformation.stack_sets
      x-cfn-schema-name: StackSet
      x-cfn-type-name: AWS::CloudFormation::StackSet
      x-identifiers:
        - StackSetId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__StackSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::StackSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::StackSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::StackSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/stack_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/stack_sets/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/stack_sets/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.StackSetName') as stack_set_name,
              JSON_EXTRACT(Properties, '$.StackSetId') as stack_set_id,
              JSON_EXTRACT(Properties, '$.AdministrationRoleARN') as administration_role_arn,
              JSON_EXTRACT(Properties, '$.AutoDeployment') as auto_deployment,
              JSON_EXTRACT(Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ExecutionRoleName') as execution_role_name,
              JSON_EXTRACT(Properties, '$.OperationPreferences') as operation_preferences,
              JSON_EXTRACT(Properties, '$.StackInstancesGroup') as stack_instances_group,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.PermissionModel') as permission_model,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TemplateBody') as template_body,
              JSON_EXTRACT(Properties, '$.TemplateURL') as template_url,
              JSON_EXTRACT(Properties, '$.CallAs') as call_as,
              JSON_EXTRACT(Properties, '$.ManagedExecution') as managed_execution
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::StackSet'
              AND data__Identifier = '<StackSetId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.StackSetName') as stack_set_name,
                JSON_EXTRACT(detail.Properties, '$.StackSetId') as stack_set_id,
                JSON_EXTRACT(detail.Properties, '$.AdministrationRoleARN') as administration_role_arn,
                JSON_EXTRACT(detail.Properties, '$.AutoDeployment') as auto_deployment,
                JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRoleName') as execution_role_name,
                JSON_EXTRACT(detail.Properties, '$.OperationPreferences') as operation_preferences,
                JSON_EXTRACT(detail.Properties, '$.StackInstancesGroup') as stack_instances_group,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
                JSON_EXTRACT(detail.Properties, '$.PermissionModel') as permission_model,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TemplateBody') as template_body,
                JSON_EXTRACT(detail.Properties, '$.TemplateURL') as template_url,
                JSON_EXTRACT(detail.Properties, '$.CallAs') as call_as,
                JSON_EXTRACT(detail.Properties, '$.ManagedExecution') as managed_execution
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::StackSet'
                AND detail.data__TypeName = 'AWS::CloudFormation::StackSet'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'StackSetName') as stack_set_name,
                  json_extract_path_text(Properties, 'StackSetId') as stack_set_id,
                  json_extract_path_text(Properties, 'AdministrationRoleARN') as administration_role_arn,
                  json_extract_path_text(Properties, 'AutoDeployment') as auto_deployment,
                  json_extract_path_text(Properties, 'Capabilities') as capabilities,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ExecutionRoleName') as execution_role_name,
                  json_extract_path_text(Properties, 'OperationPreferences') as operation_preferences,
                  json_extract_path_text(Properties, 'StackInstancesGroup') as stack_instances_group,
                  json_extract_path_text(Properties, 'Parameters') as parameters,
                  json_extract_path_text(Properties, 'PermissionModel') as permission_model,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TemplateBody') as template_body,
                  json_extract_path_text(Properties, 'TemplateURL') as template_url,
                  json_extract_path_text(Properties, 'CallAs') as call_as,
                  json_extract_path_text(Properties, 'ManagedExecution') as managed_execution
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::StackSet'
                  AND data__Identifier = '<StackSetId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'StackSetName') as stack_set_name,
                    json_extract_path_text(detail.Properties, 'StackSetId') as stack_set_id,
                    json_extract_path_text(detail.Properties, 'AdministrationRoleARN') as administration_role_arn,
                    json_extract_path_text(detail.Properties, 'AutoDeployment') as auto_deployment,
                    json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ExecutionRoleName') as execution_role_name,
                    json_extract_path_text(detail.Properties, 'OperationPreferences') as operation_preferences,
                    json_extract_path_text(detail.Properties, 'StackInstancesGroup') as stack_instances_group,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                    json_extract_path_text(detail.Properties, 'PermissionModel') as permission_model,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TemplateBody') as template_body,
                    json_extract_path_text(detail.Properties, 'TemplateURL') as template_url,
                    json_extract_path_text(detail.Properties, 'CallAs') as call_as,
                    json_extract_path_text(detail.Properties, 'ManagedExecution') as managed_execution
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::StackSet'
                    AND detail.data__TypeName = 'AWS::CloudFormation::StackSet'
                    AND listing.region = 'us-east-1'
    stack_sets_list_only:
      name: stack_sets_list_only
      id: aws.cloudformation.stack_sets_list_only
      x-cfn-schema-name: StackSet
      x-cfn-type-name: AWS::CloudFormation::StackSet
      x-identifiers:
        - StackSetId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.StackSetId') as stack_set_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::StackSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'StackSetId') as stack_set_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::StackSet'
                AND region = 'us-east-1'
    stack_set_tags:
      name: stack_set_tags
      id: aws.cloudformation.stack_set_tags
      x-cfn-schema-name: StackSet
      x-cfn-type-name: AWS::CloudFormation::StackSet
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.StackSetName') as stack_set_name,
              JSON_EXTRACT(detail.Properties, '$.StackSetId') as stack_set_id,
              JSON_EXTRACT(detail.Properties, '$.AdministrationRoleARN') as administration_role_arn,
              JSON_EXTRACT(detail.Properties, '$.AutoDeployment') as auto_deployment,
              JSON_EXTRACT(detail.Properties, '$.Capabilities') as capabilities,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ExecutionRoleName') as execution_role_name,
              JSON_EXTRACT(detail.Properties, '$.OperationPreferences') as operation_preferences,
              JSON_EXTRACT(detail.Properties, '$.StackInstancesGroup') as stack_instances_group,
              JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(detail.Properties, '$.PermissionModel') as permission_model,
              JSON_EXTRACT(detail.Properties, '$.TemplateBody') as template_body,
              JSON_EXTRACT(detail.Properties, '$.TemplateURL') as template_url,
              JSON_EXTRACT(detail.Properties, '$.CallAs') as call_as,
              JSON_EXTRACT(detail.Properties, '$.ManagedExecution') as managed_execution
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CloudFormation::StackSet'
              AND detail.data__TypeName = 'AWS::CloudFormation::StackSet'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'StackSetName') as stack_set_name,
                json_extract_path_text(detail.Properties, 'StackSetId') as stack_set_id,
                json_extract_path_text(detail.Properties, 'AdministrationRoleARN') as administration_role_arn,
                json_extract_path_text(detail.Properties, 'AutoDeployment') as auto_deployment,
                json_extract_path_text(detail.Properties, 'Capabilities') as capabilities,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ExecutionRoleName') as execution_role_name,
                json_extract_path_text(detail.Properties, 'OperationPreferences') as operation_preferences,
                json_extract_path_text(detail.Properties, 'StackInstancesGroup') as stack_instances_group,
                json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                json_extract_path_text(detail.Properties, 'PermissionModel') as permission_model,
                json_extract_path_text(detail.Properties, 'TemplateBody') as template_body,
                json_extract_path_text(detail.Properties, 'TemplateURL') as template_url,
                json_extract_path_text(detail.Properties, 'CallAs') as call_as,
                json_extract_path_text(detail.Properties, 'ManagedExecution') as managed_execution
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CloudFormation::StackSet'
                AND detail.data__TypeName = 'AWS::CloudFormation::StackSet'
                AND listing.region = 'us-east-1'
    type_activations:
      name: type_activations
      id: aws.cloudformation.type_activations
      x-cfn-schema-name: TypeActivation
      x-cfn-type-name: AWS::CloudFormation::TypeActivation
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TypeActivation&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::TypeActivation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::TypeActivation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFormation::TypeActivation"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/type_activations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/type_activations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/type_activations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ExecutionRoleArn') as execution_role_arn,
              JSON_EXTRACT(Properties, '$.PublisherId') as publisher_id,
              JSON_EXTRACT(Properties, '$.LoggingConfig') as logging_config,
              JSON_EXTRACT(Properties, '$.PublicTypeArn') as public_type_arn,
              JSON_EXTRACT(Properties, '$.AutoUpdate') as auto_update,
              JSON_EXTRACT(Properties, '$.TypeNameAlias') as type_name_alias,
              JSON_EXTRACT(Properties, '$.VersionBump') as version_bump,
              JSON_EXTRACT(Properties, '$.MajorVersion') as major_version,
              JSON_EXTRACT(Properties, '$.TypeName') as type_name,
              JSON_EXTRACT(Properties, '$.Type') as type
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::TypeActivation'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ExecutionRoleArn') as execution_role_arn,
                JSON_EXTRACT(detail.Properties, '$.PublisherId') as publisher_id,
                JSON_EXTRACT(detail.Properties, '$.LoggingConfig') as logging_config,
                JSON_EXTRACT(detail.Properties, '$.PublicTypeArn') as public_type_arn,
                JSON_EXTRACT(detail.Properties, '$.AutoUpdate') as auto_update,
                JSON_EXTRACT(detail.Properties, '$.TypeNameAlias') as type_name_alias,
                JSON_EXTRACT(detail.Properties, '$.VersionBump') as version_bump,
                JSON_EXTRACT(detail.Properties, '$.MajorVersion') as major_version,
                JSON_EXTRACT(detail.Properties, '$.TypeName') as type_name,
                JSON_EXTRACT(detail.Properties, '$.Type') as type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFormation::TypeActivation'
                AND detail.data__TypeName = 'AWS::CloudFormation::TypeActivation'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ExecutionRoleArn') as execution_role_arn,
                  json_extract_path_text(Properties, 'PublisherId') as publisher_id,
                  json_extract_path_text(Properties, 'LoggingConfig') as logging_config,
                  json_extract_path_text(Properties, 'PublicTypeArn') as public_type_arn,
                  json_extract_path_text(Properties, 'AutoUpdate') as auto_update,
                  json_extract_path_text(Properties, 'TypeNameAlias') as type_name_alias,
                  json_extract_path_text(Properties, 'VersionBump') as version_bump,
                  json_extract_path_text(Properties, 'MajorVersion') as major_version,
                  json_extract_path_text(Properties, 'TypeName') as type_name,
                  json_extract_path_text(Properties, 'Type') as type
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFormation::TypeActivation'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ExecutionRoleArn') as execution_role_arn,
                    json_extract_path_text(detail.Properties, 'PublisherId') as publisher_id,
                    json_extract_path_text(detail.Properties, 'LoggingConfig') as logging_config,
                    json_extract_path_text(detail.Properties, 'PublicTypeArn') as public_type_arn,
                    json_extract_path_text(detail.Properties, 'AutoUpdate') as auto_update,
                    json_extract_path_text(detail.Properties, 'TypeNameAlias') as type_name_alias,
                    json_extract_path_text(detail.Properties, 'VersionBump') as version_bump,
                    json_extract_path_text(detail.Properties, 'MajorVersion') as major_version,
                    json_extract_path_text(detail.Properties, 'TypeName') as type_name,
                    json_extract_path_text(detail.Properties, 'Type') as type
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFormation::TypeActivation'
                    AND detail.data__TypeName = 'AWS::CloudFormation::TypeActivation'
                    AND listing.region = 'us-east-1'
    type_activations_list_only:
      name: type_activations_list_only
      id: aws.cloudformation.type_activations_list_only
      x-cfn-schema-name: TypeActivation
      x-cfn-type-name: AWS::CloudFormation::TypeActivation
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::TypeActivation'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFormation::TypeActivation'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__GuardHook&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGuardHook
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGuardHookRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__HookDefaultVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateHookDefaultVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateHookDefaultVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__HookTypeConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateHookTypeConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateHookTypeConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__HookVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateHookVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateHookVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LambdaHook&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLambdaHook
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLambdaHookRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModuleDefaultVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModuleDefaultVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModuleDefaultVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ModuleVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateModuleVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateModuleVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PublicTypeVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePublicTypeVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePublicTypeVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Publisher&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePublisher
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePublisherRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourceDefaultVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourceDefaultVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourceDefaultVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResourceVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResourceVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResourceVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Stack&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStack
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStackRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__StackSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateStackSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateStackSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TypeActivation&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTypeActivation
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTypeActivationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
