openapi: 3.0.0
info:
  title: IAM
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AccessKey:
      description: >-
        <p>Contains information about an Amazon Web Services access key.</p> <p> This data type is used as a response element in the <a>CreateAccessKey</a> and <a>ListAccessKeys</a> operations. </p> <note> <p>The <code>SecretAccessKey</code> value is returned only in response to <a>CreateAccessKey</a>. You can get a secret access key only when you first create an access key; you cannot recover the secret access key later. If you lose a secret access key, you must create a new access key.</p>
        </note>
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: The ID for this access key.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the access key was created.
        SecretAccessKey:
          allOf:
            - $ref: '#/components/schemas/accessKeySecretType'
            - description: The secret key used to sign requests.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: 'The status of the access key. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not. '
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user that the access key is associated with.
      required:
        - UserName
        - AccessKeyId
        - Status
        - SecretAccessKey
      type: object
    AccessKeyLastUsed:
      description: <p>Contains information about the last time an Amazon Web Services access key was used since IAM began tracking this information on April 22, 2015.</p> <p>This data type is used as a response element in the <a>GetAccessKeyLastUsed</a> operation.</p>
      properties:
        LastUsedDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the access key was most recently used. This field is null in the following situations:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has not been used since IAM began tracking this information.</p> </li> <li> <p>There is no sign-in data associated with the user.</p> </li> </ul>
        Region:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: >-
                <p>The Amazon Web Services Region where this access key was most recently used. The value for this field is "N/A" in the following situations:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has not been used since IAM began tracking this information.</p> </li> <li> <p>There is no sign-in data associated with the user.</p> </li> </ul> <p>For more information about Amazon Web Services Regions, see <a
                href="https://docs.aws.amazon.com/general/latest/gr/rande.html">Regions and endpoints</a> in the Amazon Web Services General Reference.</p>
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: <p>The name of the Amazon Web Services service with which this access key was most recently used. The value of this field is "N/A" in the following situations:</p> <ul> <li> <p>The user does not have an access key.</p> </li> <li> <p>An access key exists but has not been used since IAM started tracking this information.</p> </li> <li> <p>There is no sign-in data associated with the user.</p> </li> </ul>
      required:
        - LastUsedDate
        - ServiceName
        - Region
      type: object
    AccessKeyMetadata:
      description: <p>Contains information about an Amazon Web Services access key, without its secret key.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: The ID for this access key.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the access key was created.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status of the access key. <code>Active</code> means that the key is valid for API calls; <code>Inactive</code> means it is not.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user that the key is associated with.
      type: object
    ArnListType:
      items:
        allOf:
          - $ref: '#/components/schemas/arnType'
          - xml:
              name: member
      type: array
    AttachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name (friendly name, not ARN) of the group to attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
        - GroupName
        - PolicyArn
      title: AttachGroupPolicyRequest
      type: object
    AttachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name (friendly name, not ARN) of the role to attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
        - PolicyArn
      title: AttachRolePolicyRequest
      type: object
    AttachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name (friendly name, not ARN) of the IAM user to attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - PolicyArn
      title: AttachUserPolicyRequest
      type: object
    AttachedPermissionsBoundary:
      description: <p>Contains information about an attached permissions boundary.</p> <p>An attached permissions boundary is a managed policy that has been attached to a user or role to set the permissions boundary.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      properties:
        PermissionsBoundaryArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The ARN of the policy used to set the permissions boundary for the user or role.'
        PermissionsBoundaryType:
          allOf:
            - $ref: '#/components/schemas/PermissionsBoundaryAttachmentType'
            - description: ' The permissions boundary usage type that indicates what type of IAM resource is used as the permissions boundary for an entity. This data type can only have a value of <code>Policy</code>.'
      type: object
    AttachedPolicy:
      description: >-
        <p>Contains information about an attached policy.</p> <p>An attached policy is a managed policy that has been attached to a user, group, or role. This data type is used as a response element in the <a>ListAttachedGroupPolicies</a>, <a>ListAttachedRolePolicies</a>, <a>ListAttachedUserPolicies</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        PolicyArn:
          $ref: '#/components/schemas/arnType'
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The friendly name of the attached policy.
      type: object
    ConcurrentModificationException: {}
    ContextKeyNameType:
      maxLength: 256
      minLength: 5
      type: string
    ContextKeyNamesResultListType:
      items:
        allOf:
          - $ref: '#/components/schemas/ContextKeyNameType'
          - xml:
              name: member
      type: array
    CreateAccessKeyRequest:
      properties:
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the IAM user that the new key will belong to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      title: CreateAccessKeyRequest
      type: object
    CreateAccessKeyResponse:
      description: 'Contains the response to a successful <a>CreateAccessKey</a> request. '
      example:
        AccessKey:
          AccessKeyId: AKIAIOSFODNN7EXAMPLE
          CreateDate: '2015-03-09T18:39:23.411Z'
          SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
          Status: Active
          UserName: Bob
      properties:
        AccessKey:
          allOf:
            - $ref: '#/components/schemas/AccessKey'
            - description: A structure with details about the access key.
      required:
        - AccessKey
      type: object
    CreateLoginProfileRequest:
      properties:
        Password:
          allOf:
            - $ref: '#/components/schemas/passwordType'
            - description: >-
                <p>The new password for the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (<code>\u0020</code>) through the end of the ASCII character range (<code>\u00FF</code>). You can also include the tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>) characters. Any of
                these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>
        PasswordResetRequired:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether the user is required to set a new password on next sign-in.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user to create a password for. The user must already exist.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - Password
      title: CreateLoginProfileRequest
      type: object
    CreateLoginProfileResponse:
      description: 'Contains the response to a successful <a>CreateLoginProfile</a> request. '
      example:
        LoginProfile:
          CreateDate: '2015-03-10T20:55:40.274Z'
          PasswordResetRequired: true
          UserName: Bob
      properties:
        LoginProfile:
          allOf:
            - $ref: '#/components/schemas/LoginProfile'
            - description: A structure containing the user name and password create date.
      required:
        - LoginProfile
      type: object
    CreatePolicyRequest:
      properties:
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: <p>A friendly description of the policy.</p> <p>Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."</p> <p>The policy description is immutable. After a value is assigned, it cannot be changed.</p>
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path for the policy.</p> <p>For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that
                must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p>You cannot use an asterisk (*) in the path name.</p> </note>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The JSON policy document that you want to use as the content for the new policy.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum
                character counts of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM and STS character quotas</a>.</p> <p>To learn more about JSON policy grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar of the IAM JSON policy language</a> in the <i>IAM User Guide</i>. </p> <p>The <a
                href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab
                (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: <p>The friendly name of the policy.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both "MyResource" and "myresource".</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: <p>A list of tags that you want to attach to the new IAM customer managed policy. Each tag consists of a key name and an associated value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.</p> </note>
      required:
        - PolicyName
        - PolicyDocument
      title: CreatePolicyRequest
      type: object
    CreatePolicyResponse:
      description: 'Contains the response to a successful <a>CreatePolicy</a> request. '
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: A structure containing details about the new policy.
      type: object
    CreatePolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The JSON policy document that you want to use as the content for this new version of the policy.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To
                view the maximum character counts of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character
                (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        SetAsDefault:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p>Specifies whether to set this version as the policy's default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a>
                in the <i>IAM User Guide</i>.</p>
      required:
        - PolicyArn
        - PolicyDocument
      title: CreatePolicyVersionRequest
      type: object
    CreatePolicyVersionResponse:
      description: 'Contains the response to a successful <a>CreatePolicyVersion</a> request. '
      properties:
        PolicyVersion:
          allOf:
            - $ref: '#/components/schemas/PolicyVersion'
            - description: A structure containing details about the new policy version.
      type: object
    CreateServiceLinkedRoleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RoleName:
              description: The name of the role.
              type: string
            CustomSuffix:
              description: A string that you provide, which is combined with the service-provided prefix to form the complete role name.
              type: string
            Description:
              description: The description of the role.
              type: string
            AWSServiceName:
              description: The service principal for the AWS service to which this role is attached.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateServiceLinkedRoleRequest
      type: object
      required: []
    CreateServiceLinkedRoleResponse:
      properties:
        Role:
          allOf:
            - $ref: '#/components/schemas/Role'
            - description: A <a>Role</a> object that contains details about the newly created role.
      type: object
    CreateServiceSpecificCredentialRequest:
      properties:
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: The name of the Amazon Web Services service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: >-
                <p>The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters:
                _+=,.@-</p>
      required:
        - UserName
        - ServiceName
      title: CreateServiceSpecificCredentialRequest
      type: object
    CreateServiceSpecificCredentialResponse:
      properties:
        ServiceSpecificCredential:
          allOf:
            - $ref: '#/components/schemas/ServiceSpecificCredential'
            - description: <p>A structure that contains information about the newly created service-specific credential.</p> <important> <p>This is the only time that the password for this credential set is available. It cannot be recovered later. Instead, you must reset the password with <a>ResetServiceSpecificCredential</a>.</p> </important>
      type: object
    DeactivateMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user whose MFA device you want to deactivate.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SerialNumber
      title: DeactivateMFADeviceRequest
      type: object
    DeleteAccessKeyRequest:
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: <p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user whose access key pair you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - AccessKeyId
      title: DeleteAccessKeyRequest
      type: object
    DeleteConflictException: {}
    DeleteGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name (friendly name, not ARN) identifying the group that the policy is embedded in.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - GroupName
        - PolicyName
      title: DeleteGroupPolicyRequest
      type: object
    DeleteLoginProfileRequest:
      properties:
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the user whose password you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
      title: DeleteLoginProfileRequest
      type: object
    DeletePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to delete.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
        - PolicyArn
      title: DeletePolicyRequest
      type: object
    DeletePolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy from which you want to delete a version.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        VersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: >-
                <p>The policy version to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed
                policies</a> in the <i>IAM User Guide</i>.</p>
      required:
        - PolicyArn
        - VersionId
      title: DeletePolicyVersionRequest
      type: object
    DeleteRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the inline policy to delete from the specified IAM role.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name (friendly name, not ARN) identifying the role that the policy is embedded in.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
        - PolicyName
      title: DeleteRolePolicyRequest
      type: object
    DeleteSSHPublicKeyRequest:
      properties:
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: <p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SSHPublicKeyId
      title: DeleteSSHPublicKeyRequest
      type: object
    DeleteServiceLinkedRoleRequest:
      properties:
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The name of the service-linked role to be deleted.
      required:
        - RoleName
      title: DeleteServiceLinkedRoleRequest
      type: object
    DeleteServiceLinkedRoleResponse:
      properties:
        DeletionTaskId:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskIdType'
            - description: The deletion task identifier that you can use to check the status of the deletion. This identifier is returned in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
      required:
        - DeletionTaskId
      type: object
    DeleteServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: <p>The unique identifier of the service-specific credential. You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - ServiceSpecificCredentialId
      title: DeleteServiceSpecificCredentialRequest
      type: object
    DeleteSigningCertificateRequest:
      properties:
        CertificateId:
          allOf:
            - $ref: '#/components/schemas/certificateIdType'
            - description: <p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - CertificateId
      title: DeleteSigningCertificateRequest
      type: object
    DeleteUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - PolicyName
      title: DeleteUserPolicyRequest
      type: object
    DeletionTaskFailureReasonType:
      description: <p>The reason that the service-linked role deletion failed.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
      properties:
        Reason:
          allOf:
            - $ref: '#/components/schemas/ReasonType'
            - description: A short description of the reason that the service-linked role deletion failed.
        RoleUsageList:
          allOf:
            - $ref: '#/components/schemas/RoleUsageListType'
            - description: A list of objects that contains details about the service-linked role deletion failure, if that information is returned by the service. If the service-linked role has active sessions or if any resources that were used by the role have not been deleted from the linked service, the role can't be deleted. This parameter includes a list of the resources that are associated with the role and the Region in which the resources are being used.
      type: object
    DeletionTaskIdType:
      maxLength: 1000
      minLength: 1
      type: string
    DeletionTaskStatusType:
      enum:
        - SUCCEEDED
        - IN_PROGRESS
        - FAILED
        - NOT_STARTED
      type: string
    DetachGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name (friendly name, not ARN) of the IAM group to detach the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
        - GroupName
        - PolicyArn
      title: DetachGroupPolicyRequest
      type: object
    DetachRolePolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name (friendly name, not ARN) of the IAM role to detach the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
        - PolicyArn
      title: DetachRolePolicyRequest
      type: object
    DetachUserPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name (friendly name, not ARN) of the IAM user to detach the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - PolicyArn
      title: DetachUserPolicyRequest
      type: object
    DuplicateCertificateException: {}
    DuplicateSSHPublicKeyException: {}
    EnableMFADeviceRequest:
      properties:
        AuthenticationCode1:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: >-
                <p>An authentication code emitted by the device. </p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens,
                you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>
        AuthenticationCode2:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: >-
                <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this
                happens, you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the IAM user for whom you want to enable the MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SerialNumber
        - AuthenticationCode1
        - AuthenticationCode2
      title: EnableMFADeviceRequest
      type: object
    EntityAlreadyExistsException: {}
    EntityDetails:
      description: <p>An object that contains details about when the IAM entities (users or roles) were last used in an attempt to access the specified Amazon Web Services service.</p> <p>This data type is a response element in the <a>GetServiceLastAccessedDetailsWithEntities</a> operation.</p>
      properties:
        EntityInfo:
          allOf:
            - $ref: '#/components/schemas/EntityInfo'
            - description: "The\_<code>EntityInfo</code> object that contains details about the entity (user or role)."
        LastAuthenticated:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the authenticated entity last attempted to access Amazon Web Services. Amazon Web Services does not report unauthenticated requests.</p> <p>This field is null if no IAM entities attempted to access the service within the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#service-last-accessed-reporting-period\">reporting period</a>.</p>"
      required:
        - EntityInfo
      type: object
    EntityInfo:
      description: <p>Contains details about the specified entity (user or role).</p> <p>This data type is an element of the <a>EntityDetails</a> object.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        Id:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The identifier of the entity (user or role).
        Name:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the entity (user or role).
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: 'The path to the entity (user or role). For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        Type:
          allOf:
            - $ref: '#/components/schemas/policyOwnerEntityType'
            - description: The type of entity (user or role).
      required:
        - Arn
        - Name
        - Type
        - Id
      type: object
    EntityTemporarilyUnmodifiableException: {}
    EntityType:
      enum:
        - User
        - Role
        - Group
        - LocalManagedPolicy
        - AWSManagedPolicy
      type: string
    ErrorDetails:
      description: <p>Contains information about the reason that the operation failed.</p> <p>This data type is used as a response element in the <a>GetOrganizationsAccessReport</a>, <a>GetServiceLastAccessedDetails</a>, and <a>GetServiceLastAccessedDetailsWithEntities</a> operations.</p>
      properties:
        Code:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: The error code associated with the operation failure.
        Message:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: Detailed information about the reason that the operation failed.
      required:
        - Message
        - Code
      type: object
    GetAccessKeyLastUsedRequest:
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: <p>The identifier of an access key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
      required:
        - AccessKeyId
      title: GetAccessKeyLastUsedRequest
      type: object
    GetAccessKeyLastUsedResponse:
      description: Contains the response to a successful <a>GetAccessKeyLastUsed</a> request. It is also returned as a member of the <a>AccessKeyMetaData</a> structure returned by the <a>ListAccessKeys</a> action.
      properties:
        AccessKeyLastUsed:
          allOf:
            - $ref: '#/components/schemas/AccessKeyLastUsed'
            - description: Contains information about the last time the access key was used.
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: <p>The name of the IAM user that owns this access key.</p> <p/>
      type: object
    GetAccountAuthorizationDetailsRequest:
      properties:
        Filter:
          allOf:
            - $ref: '#/components/schemas/entityListType'
            - description: <p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
      title: GetAccountAuthorizationDetailsRequest
      type: object
    GetAccountAuthorizationDetailsResponse:
      description: 'Contains the response to a successful <a>GetAccountAuthorizationDetails</a> request. '
      properties:
        GroupDetailList:
          allOf:
            - $ref: '#/components/schemas/groupDetailListType'
            - description: A list containing information about IAM groups.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        Policies:
          allOf:
            - $ref: '#/components/schemas/ManagedPolicyDetailListType'
            - description: A list containing information about managed policies.
        RoleDetailList:
          allOf:
            - $ref: '#/components/schemas/roleDetailListType'
            - description: A list containing information about IAM roles.
        UserDetailList:
          allOf:
            - $ref: '#/components/schemas/userDetailListType'
            - description: A list containing information about IAM users.
      type: object
    GetAccountPasswordPolicyResponse:
      description: 'Contains the response to a successful <a>GetAccountPasswordPolicy</a> request. '
      example:
        PasswordPolicy:
          AllowUsersToChangePassword: false
          ExpirePasswords: false
          HardExpiry: false
          MaxPasswordAge: 90
          MinimumPasswordLength: 8
          PasswordReusePrevention: 12
          RequireLowercaseCharacters: false
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercaseCharacters: false
      properties:
        PasswordPolicy:
          allOf:
            - $ref: '#/components/schemas/PasswordPolicy'
            - description: A structure that contains details about the account's password policy.
      required:
        - PasswordPolicy
      type: object
    GetAccountSummaryResponse:
      description: 'Contains the response to a successful <a>GetAccountSummary</a> request. '
      example:
        SummaryMap:
          AccessKeysPerUserQuota: 2
          AccountAccessKeysPresent: 1
          AccountMFAEnabled: 0
          AccountSigningCertificatesPresent: 0
          AttachedPoliciesPerGroupQuota: 10
          AttachedPoliciesPerRoleQuota: 10
          AttachedPoliciesPerUserQuota: 10
          GlobalEndpointTokenVersion: 2
          GroupPolicySizeQuota: 5120
          Groups: 15
          GroupsPerUserQuota: 10
          GroupsQuota: 100
          MFADevices: 6
          MFADevicesInUse: 3
          Policies: 8
          PoliciesQuota: 1000
          PolicySizeQuota: 5120
          PolicyVersionsInUse: 22
          PolicyVersionsInUseQuota: 10000
          ServerCertificates: 1
          ServerCertificatesQuota: 20
          SigningCertificatesPerUserQuota: 2
          UserPolicySizeQuota: 2048
          Users: 27
          UsersQuota: 5000
          VersionsPerPolicyQuota: 5
      properties:
        SummaryMap:
          allOf:
            - $ref: '#/components/schemas/summaryMapType'
            - description: A set of key–value pairs containing information about IAM entity usage and IAM quotas.
      type: object
    GetContextKeysForCustomPolicyRequest:
      properties:
        PolicyInputList:
          allOf:
            - $ref: '#/components/schemas/SimulationPolicyListType'
            - description: >-
                <p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII
                character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
      required:
        - PolicyInputList
      title: GetContextKeysForCustomPolicyRequest
      type: object
    GetContextKeysForPolicyResponse:
      description: 'Contains the response to a successful <a>GetContextKeysForPrincipalPolicy</a> or <a>GetContextKeysForCustomPolicy</a> request. '
      properties:
        ContextKeyNames:
          allOf:
            - $ref: '#/components/schemas/ContextKeyNamesResultListType'
            - description: The list of context keys that are referenced in the input policies.
      type: object
    GetContextKeysForPrincipalPolicyRequest:
      properties:
        PolicyInputList:
          allOf:
            - $ref: '#/components/schemas/SimulationPolicyListType'
            - description: >-
                <p>An optional list of additional policies for which you want the list of context keys that are referenced.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and
                Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        PolicySourceArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: >-
                <p>The ARN of a user, group, or role whose policies contain the context keys that you want listed. If you specify a user, the list includes context keys that are found in all policies that are attached to the user. The list also includes all groups that the user is a member of. If you pick a group or a role, then it includes only those context keys that are found in policies attached to that entity. Note that all parameters are shown in unencoded form here for clarity, but must
                be URL encoded to be included as a part of a real HTML request.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
        - PolicySourceArn
      title: GetContextKeysForPrincipalPolicyRequest
      type: object
    GetGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name of the group the policy is associated with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - GroupName
        - PolicyName
      title: GetGroupPolicyRequest
      type: object
    GetGroupPolicyResponse:
      description: 'Contains the response to a successful <a>GetGroupPolicy</a> request. '
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The group the policy is associated with.
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: <p>The policy document.</p> <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
      required:
        - GroupName
        - PolicyName
        - PolicyDocument
      type: object
    GetLoginProfileRequest:
      properties:
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the user whose login profile you want to retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
      title: GetLoginProfileRequest
      type: object
    GetLoginProfileResponse:
      description: 'Contains the response to a successful <a>GetLoginProfile</a> request. '
      example:
        LoginProfile:
          CreateDate: '2012-09-21T23:03:39Z'
          UserName: Anika
      properties:
        LoginProfile:
          allOf:
            - $ref: '#/components/schemas/LoginProfile'
            - description: A structure containing the user name and the profile creation date for the user.
      required:
        - LoginProfile
      type: object
    GetPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
        - PolicyArn
      title: GetPolicyRequest
      type: object
    GetPolicyResponse:
      description: 'Contains the response to a successful <a>GetPolicy</a> request. '
      properties:
        Policy:
          allOf:
            - $ref: '#/components/schemas/Policy'
            - description: A structure containing details about the policy.
      type: object
    GetPolicyVersionRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        VersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: <p>Identifies the policy version to retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p>
      required:
        - PolicyArn
        - VersionId
      title: GetPolicyVersionRequest
      type: object
    GetPolicyVersionResponse:
      description: 'Contains the response to a successful <a>GetPolicyVersion</a> request. '
      properties:
        PolicyVersion:
          allOf:
            - $ref: '#/components/schemas/PolicyVersion'
            - description: A structure containing details about the policy version.
      type: object
    GetRolePolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name of the role associated with the policy.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
        - PolicyName
      title: GetRolePolicyRequest
      type: object
    GetRolePolicyResponse:
      description: 'Contains the response to a successful <a>GetRolePolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: <p>The policy document.</p> <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The role the policy is associated with.
      required:
        - RoleName
        - PolicyName
        - PolicyDocument
      type: object
    GetSSHPublicKeyRequest:
      properties:
        Encoding:
          allOf:
            - $ref: '#/components/schemas/encodingType'
            - description: Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: <p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SSHPublicKeyId
        - Encoding
      title: GetSSHPublicKeyRequest
      type: object
    GetSSHPublicKeyResponse:
      description: Contains the response to a successful <a>GetSSHPublicKey</a> request.
      properties:
        SSHPublicKey:
          allOf:
            - $ref: '#/components/schemas/SSHPublicKey'
            - description: A structure containing details about the SSH public key.
      type: object
    GetServerCertificateRequest:
      properties:
        ServerCertificateName:
          allOf:
            - $ref: '#/components/schemas/serverCertificateNameType'
            - description: '<p>The name of the server certificate you want to retrieve information about.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - ServerCertificateName
      title: GetServerCertificateRequest
      type: object
    GetServerCertificateResponse:
      description: 'Contains the response to a successful <a>GetServerCertificate</a> request. '
      properties:
        ServerCertificate:
          allOf:
            - $ref: '#/components/schemas/ServerCertificate'
            - description: A structure containing details about the server certificate.
      required:
        - ServerCertificate
      type: object
    GetServiceLastAccessedDetailsWithEntitiesRequest:
      properties:
        JobId:
          allOf:
            - $ref: '#/components/schemas/jobIDType'
            - description: The ID of the request generated by the <code>GenerateServiceLastAccessedDetails</code> operation.
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        ServiceNamespace:
          allOf:
            - $ref: '#/components/schemas/serviceNamespaceType'
            - description: "<p>The service namespace for an Amazon Web Services service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.</p> <p>To learn the service namespace for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services General Reference</i>.</p>"
      required:
        - JobId
        - ServiceNamespace
      title: GetServiceLastAccessedDetailsWithEntitiesRequest
      type: object
    GetServiceLastAccessedDetailsWithEntitiesResponse:
      example:
        EntityDetailsList:
          - EntityInfo:
              Arn: arn:aws:iam::123456789012:user/AWSExampleUser01
              Id: AIDAEX2EXAMPLEB6IGCDC
              Name: AWSExampleUser01
              Path: /
              Type: USER
            LastAuthenticated: '2018-10-24T19:10:00Z'
          - EntityInfo:
              Arn: arn:aws:iam::123456789012:role/AWSExampleRole01
              Id: AROAEAEXAMPLEIANXSIU4
              Name: AWSExampleRole01
              Path: /
              Type: ROLE
        IsTruncated: false
        JobCompletionDate: '2018-10-24T19:47:35.241Z'
        JobCreationDate: '2018-10-24T19:47:31.466Z'
        JobStatus: COMPLETED
      properties:
        EntityDetailsList:
          allOf:
            - $ref: '#/components/schemas/entityDetailsListType'
            - description: "An\_<code>EntityDetailsList</code> object that contains details about when an IAM entity (user or role) used group or policy permissions in an attempt to access the specified Amazon Web Services service."
        Error:
          allOf:
            - $ref: '#/components/schemas/ErrorDetails'
            - description: An object that contains details about the reason the operation failed.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        JobCompletionDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the generated report job was completed or failed.</p> <p>This field is null if the job is still in progress, as indicated by a job status value of <code>IN_PROGRESS</code>.</p>"
        JobCreationDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a>, when the report job was created."
        JobStatus:
          allOf:
            - $ref: '#/components/schemas/jobStatusType'
            - description: The status of the job.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - JobStatus
        - JobCreationDate
        - JobCompletionDate
        - EntityDetailsList
      type: object
    GetServiceLinkedRoleDeletionStatusRequest:
      properties:
        DeletionTaskId:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskIdType'
            - description: The deletion task identifier. This identifier is returned by the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
      required:
        - DeletionTaskId
      title: GetServiceLinkedRoleDeletionStatusRequest
      type: object
    GetServiceLinkedRoleDeletionStatusResponse:
      properties:
        Reason:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskFailureReasonType'
            - description: An object that contains details about the reason the deletion failed.
        Status:
          allOf:
            - $ref: '#/components/schemas/DeletionTaskStatusType'
            - description: The status of the deletion.
      required:
        - Status
      type: object
    GetUserPolicyRequest:
      properties:
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user who the policy is associated with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - PolicyName
      title: GetUserPolicyRequest
      type: object
    GetUserPolicyResponse:
      description: 'Contains the response to a successful <a>GetUserPolicy</a> request. '
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: <p>The policy document.</p> <p>IAM stores policies in JSON format. However, resources that were created using CloudFormation templates can be formatted in YAML. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: The user the policy is associated with.
      required:
        - UserName
        - PolicyName
        - PolicyDocument
      type: object
    Group:
      type: object
      properties:
        Arn:
          description: ''
          type: string
        GroupName:
          description: |-
            The name of the group to create. Do not include the path in this value.
             The group name must be unique within the account. Group names are not distinguished by case. For example, you cannot create groups named both "ADMINS" and "admins". If you don't specify a name, CFN generates a unique physical ID and uses that ID for the group name.
              If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
              If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
              Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
          type: string
        ManagedPolicyArns:
          description: |-
            The Amazon Resource Name (ARN) of the IAM policy you want to attach.
             For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Path:
          description: |-
            The path to the group. For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
             This parameter is optional. If it is not included, it defaults to a slash (/).
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
          type: string
        Policies:
          description: |-
            Adds or updates an inline policy document that is embedded in the specified IAM group. To view AWS::IAM::Group snippets, see [Declaring an Group Resource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-iam.html#scenario-iam-group).
              The name of each inline policy for a role, user, or group must be unique. If you don't choose unique names, updates to the IAM identity will fail. 
              For information about limits on the number of inline policies that you can embed in a group, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Policy'
      x-stackql-resource-name: group
      description: |-
        Creates a new group.
          For information about the number of groups you can create, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
      x-type-name: AWS::IAM::Group
      x-stackql-primary-identifier:
        - GroupName
      x-create-only-properties:
        - GroupName
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - iam:CreateGroup
          - iam:PutGroupPolicy
          - iam:AttachGroupPolicy
          - iam:GetGroupPolicy
          - iam:GetGroup
        read:
          - iam:GetGroup
          - iam:ListGroupPolicies
          - iam:GetGroupPolicy
          - iam:ListAttachedGroupPolicies
        update:
          - iam:GetGroup
          - iam:UpdateGroup
          - iam:DetachGroupPolicy
          - iam:AttachGroupPolicy
          - iam:DeleteGroupPolicy
          - iam:PutGroupPolicy
          - iam:GetGroupPolicy
        delete:
          - iam:GetGroup
          - iam:DeleteGroup
          - iam:ListAttachedGroupPolicies
          - iam:ListGroupPolicies
          - iam:DetachGroupPolicy
          - iam:DeleteGroupPolicy
          - iam:GetGroupPolicy
        list:
          - iam:ListGroups
    GroupDetail:
      description: <p>Contains information about an IAM group, including all of the group's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachedManagedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the managed policies attached to the group.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the group was created.
        GroupId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The stable and unique string identifying the group. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The friendly name that identifies the group.
        GroupPolicyList:
          allOf:
            - $ref: '#/components/schemas/policyDetailListType'
            - description: A list of the inline policies embedded in the group.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: The path to the group. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
      type: object
    InstanceProfile:
      type: object
      properties:
        Path:
          type: string
          description: |-
            The path to the instance profile. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
             This parameter is optional. If it is not included, it defaults to a slash (/).
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
        Roles:
          type: array
          description: The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        InstanceProfileName:
          type: string
          description: |-
            The name of the instance profile to create.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
        Arn:
          type: string
          description: ''
      required:
        - Roles
      x-stackql-resource-name: instance_profile
      description: |-
        Creates a new instance profile. For information about instance profiles, see [Using instance profiles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html).
          For information about the number of instance profiles you can create, see [object quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *User Guide*.
      x-type-name: AWS::IAM::InstanceProfile
      x-stackql-primary-identifier:
        - InstanceProfileName
      x-create-only-properties:
        - InstanceProfileName
        - Path
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Roles
      x-tagging:
        taggable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:CreateInstanceProfile
          - iam:PassRole
          - iam:AddRoleToInstanceProfile
          - iam:GetInstanceProfile
        read:
          - iam:GetInstanceProfile
        update:
          - iam:PassRole
          - iam:RemoveRoleFromInstanceProfile
          - iam:AddRoleToInstanceProfile
          - iam:GetInstanceProfile
        delete:
          - iam:GetInstanceProfile
          - iam:RemoveRoleFromInstanceProfile
          - iam:DeleteInstanceProfile
        list:
          - iam:ListInstanceProfiles
    InvalidAuthenticationCodeException: {}
    InvalidCertificateException: {}
    InvalidInputException: {}
    InvalidPublicKeyException: {}
    LimitExceededException: {}
    ListAccessKeysRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      title: ListAccessKeysRequest
      type: object
    ListAccessKeysResponse:
      description: 'Contains the response to a successful <a>ListAccessKeys</a> request. '
      example:
        AccessKeyMetadata:
          - AccessKeyId: AKIA111111111EXAMPLE
            CreateDate: '2016-12-01T22:19:58Z'
            Status: Active
            UserName: Alice
          - AccessKeyId: AKIA222222222EXAMPLE
            CreateDate: '2016-12-01T22:20:01Z'
            Status: Active
            UserName: Alice
      properties:
        AccessKeyMetadata:
          allOf:
            - $ref: '#/components/schemas/accessKeyMetadataListType'
            - description: A list of objects containing metadata about the access keys.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - AccessKeyMetadata
      type: object
    ListAccountAliasesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
      title: ListAccountAliasesRequest
      type: object
    ListAccountAliasesResponse:
      description: 'Contains the response to a successful <a>ListAccountAliases</a> request. '
      example:
        AccountAliases:
          - exmaple-corporation
      properties:
        AccountAliases:
          allOf:
            - $ref: '#/components/schemas/accountAliasListType'
            - description: A list of aliases associated with the account. Amazon Web Services supports only one alias per account.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - AccountAliases
      type: object
    ListAttachedGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name (friendly name, not ARN) of the group to list attached policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL
                character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
      required:
        - GroupName
      title: ListAttachedGroupPoliciesRequest
      type: object
    ListAttachedGroupPoliciesResponse:
      description: 'Contains the response to a successful <a>ListAttachedGroupPolicies</a> request. '
      properties:
        AttachedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the attached policies.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      type: object
    ListAttachedRolePoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL
                character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name (friendly name, not ARN) of the role to list attached policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
      title: ListAttachedRolePoliciesRequest
      type: object
    ListAttachedRolePoliciesResponse:
      description: 'Contains the response to a successful <a>ListAttachedRolePolicies</a> request. '
      properties:
        AttachedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the attached policies.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      type: object
    ListAttachedUserPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL
                character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name (friendly name, not ARN) of the user to list attached policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
      title: ListAttachedUserPoliciesRequest
      type: object
    ListAttachedUserPoliciesResponse:
      description: 'Contains the response to a successful <a>ListAttachedUserPolicies</a> request. '
      properties:
        AttachedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the attached policies.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      type: object
    ListEntitiesForPolicyRequest:
      properties:
        EntityFilter:
          allOf:
            - $ref: '#/components/schemas/EntityType'
            - description: <p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: >-
                <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL
                character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
        PolicyUsageFilter:
          allOf:
            - $ref: '#/components/schemas/PolicyUsageType'
            - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
      required:
        - PolicyArn
      title: ListEntitiesForPolicyRequest
      type: object
    ListEntitiesForPolicyResponse:
      description: 'Contains the response to a successful <a>ListEntitiesForPolicy</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        PolicyGroups:
          allOf:
            - $ref: '#/components/schemas/PolicyGroupListType'
            - description: A list of IAM groups that the policy is attached to.
        PolicyRoles:
          allOf:
            - $ref: '#/components/schemas/PolicyRoleListType'
            - description: A list of IAM roles that the policy is attached to.
        PolicyUsers:
          allOf:
            - $ref: '#/components/schemas/PolicyUserListType'
            - description: A list of IAM users that the policy is attached to.
      type: object
    ListGroupPoliciesRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name of the group to list policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
      required:
        - GroupName
      title: ListGroupPoliciesRequest
      type: object
    ListGroupPoliciesResponse:
      description: 'Contains the response to a successful <a>ListGroupPolicies</a> request. '
      example:
        PolicyNames:
          - AdminRoot
          - KeyPolicy
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: '<p>A list of policy names.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - PolicyNames
      type: object
    ListGroupsForUserRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user to list groups for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
      title: ListGroupsForUserRequest
      type: object
    ListGroupsForUserResponse:
      description: 'Contains the response to a successful <a>ListGroupsForUser</a> request. '
      example:
        Groups:
          - Arn: arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/engineering/Test
            CreateDate: '2016-11-30T14:10:01.156Z'
            GroupId: AGP2111111111EXAMPLE
            GroupName: Test
            Path: /division_abc/subdivision_xyz/product_1234/engineering/
          - Arn: arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_1234/Managers
            CreateDate: '2016-06-12T20:14:52.032Z'
            GroupId: AGPI222222222SEXAMPLE
            GroupName: Managers
            Path: /division_abc/subdivision_xyz/product_1234/
      properties:
        Groups:
          allOf:
            - $ref: '#/components/schemas/groupListType'
            - description: A list of groups.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - Groups
      type: object
    ListInstanceProfilesForRoleRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name of the role to list instance profiles for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
      title: ListInstanceProfilesForRoleRequest
      type: object
    ListInstanceProfilesForRoleResponse:
      description: 'Contains the response to a successful <a>ListInstanceProfilesForRole</a> request. '
      properties:
        InstanceProfiles:
          allOf:
            - $ref: '#/components/schemas/instanceProfileListType'
            - description: A list of instance profiles.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - InstanceProfiles
      type: object
    ListMFADeviceTagsRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: '<p>The unique identifier for the IAM virtual MFA device whose tags you want to see. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - SerialNumber
      title: ListMFADeviceTagsRequest
      type: object
    ListMFADeviceTagsResponse:
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: The list of tags that are currently attached to the virtual MFA device. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.
      required:
        - Tags
      type: object
    ListMFADevicesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user whose MFA devices you want to list.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      title: ListMFADevicesRequest
      type: object
    ListMFADevicesResponse:
      description: 'Contains the response to a successful <a>ListMFADevices</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        MFADevices:
          allOf:
            - $ref: '#/components/schemas/mfaDeviceListType'
            - description: A list of MFA devices.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - MFADevices
      type: object
    ListPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        OnlyAttached:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: <p>A flag to filter the results to only the attached policies.</p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to an IAM user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>
        PathPrefix:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: >-
                The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character
                (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.
        PolicyUsageFilter:
          allOf:
            - $ref: '#/components/schemas/PolicyUsageType'
            - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
        Scope:
          allOf:
            - $ref: '#/components/schemas/policyScopeType'
            - description: <p>The scope to use for filtering the results.</p> <p>To list only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your Amazon Web Services account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>
      title: ListPoliciesRequest
      type: object
    ListPoliciesResponse:
      description: 'Contains the response to a successful <a>ListPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        Policies:
          allOf:
            - $ref: '#/components/schemas/policyListType'
            - description: A list of policies.
      type: object
    ListPolicyTagsRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: '<p>The ARN of the IAM customer managed policy whose tags you want to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - PolicyArn
      title: ListPolicyTagsRequest
      type: object
    ListPolicyTagsResponse:
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: The list of tags that are currently attached to the IAM customer managed policy. Each tag consists of a key name and an associated value. If no tags are attached to the specified resource, the response contains an empty list.
      required:
        - Tags
      type: object
    ListPolicyVersionsRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
      required:
        - PolicyArn
      title: ListPolicyVersionsRequest
      type: object
    ListPolicyVersionsResponse:
      description: 'Contains the response to a successful <a>ListPolicyVersions</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        Versions:
          allOf:
            - $ref: '#/components/schemas/policyDocumentVersionListType'
            - description: <p>A list of policy versions.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p>
      type: object
    ListRolePoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name of the role to list policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
      title: ListRolePoliciesRequest
      type: object
    ListRolePoliciesResponse:
      description: 'Contains the response to a successful <a>ListRolePolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: A list of policy names.
      required:
        - PolicyNames
      type: object
    ListSSHPublicKeysRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user to list SSH public keys for. If none is specified, the <code>UserName</code> field is determined implicitly based on the Amazon Web Services access key used to sign the request.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      title: ListSSHPublicKeysRequest
      type: object
    ListSSHPublicKeysResponse:
      description: Contains the response to a successful <a>ListSSHPublicKeys</a> request.
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        SSHPublicKeys:
          allOf:
            - $ref: '#/components/schemas/SSHPublicKeyListType'
            - description: A list of the SSH public keys assigned to IAM user.
      type: object
    ListServiceSpecificCredentialsRequest:
      properties:
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: Filters the returned results to only those for the specified Amazon Web Services service. If not specified, then Amazon Web Services returns service-specific credentials for all services.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      title: ListServiceSpecificCredentialsRequest
      type: object
    ListServiceSpecificCredentialsResponse:
      properties:
        ServiceSpecificCredentials:
          allOf:
            - $ref: '#/components/schemas/ServiceSpecificCredentialsListType'
            - description: A list of structures that each contain details about a service-specific credential.
      type: object
    ListSigningCertificatesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the IAM user whose signing certificates you want to examine.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      title: ListSigningCertificatesRequest
      type: object
    ListSigningCertificatesResponse:
      description: 'Contains the response to a successful <a>ListSigningCertificates</a> request. '
      example:
        Certificates:
          - CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----'
            CertificateId: TA7SMP42TDN5Z26OBPJE7EXAMPLE
            Status: Active
            UploadDate: '2013-06-06T21:40:08Z'
            UserName: Bob
      properties:
        Certificates:
          allOf:
            - $ref: '#/components/schemas/certificateListType'
            - description: A list of the user's signing certificate information.
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
      required:
        - Certificates
      type: object
    ListUserPoliciesRequest:
      properties:
        Marker:
          allOf:
            - $ref: '#/components/schemas/markerType'
            - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
        MaxItems:
          allOf:
            - $ref: '#/components/schemas/maxItemsType'
            - description: >-
                <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns
                <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user to list policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
      title: ListUserPoliciesRequest
      type: object
    ListUserPoliciesResponse:
      description: 'Contains the response to a successful <a>ListUserPolicies</a> request. '
      properties:
        IsTruncated:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: A flag that indicates whether there are more items to return. If your results were truncated, you can make a subsequent pagination request using the <code>Marker</code> request parameter to retrieve more items. Note that IAM might return fewer than the <code>MaxItems</code> number of results even when there are more results available. We recommend that you check <code>IsTruncated</code> after every call to ensure that you receive all your results.
        Marker:
          allOf:
            - $ref: '#/components/schemas/responseMarkerType'
            - description: When <code>IsTruncated</code> is <code>true</code>, this element is present and contains the value to use for the <code>Marker</code> parameter in a subsequent pagination request.
        PolicyNames:
          allOf:
            - $ref: '#/components/schemas/policyNameListType'
            - description: A list of policy names.
      required:
        - PolicyNames
      type: object
    LoginProfile:
      description: Creates a password for the specified user, giving the user the ability to access AWS services through the console. For more information about managing passwords, see [Managing Passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the *User Guide*.
      type: object
      additionalProperties: false
      properties:
        PasswordResetRequired:
          description: Specifies whether the user is required to set a new password on next sign-in.
          type: boolean
        Password:
          description: The user's password.
          type: string
      required:
        - Password
    MFADevice:
      description: <p>Contains information about an MFA device.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> operation.</p>
      properties:
        EnableDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the MFA device was enabled for the user.
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The user with whom the MFA device is associated.
      required:
        - UserName
        - SerialNumber
        - EnableDate
      type: object
    MalformedCertificateException: {}
    MalformedPolicyDocumentException: {}
    ManagedPolicyDetail:
      description: >-
        <p>Contains information about a managed policy, including the policy's ARN, versions, and the number of principal entities (users, groups, and roles) that the policy is attached to.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM
        User Guide</i>. </p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachmentCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: The number of principal entities (users, groups, and roles) that the policy is attached to.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was created.
        DefaultVersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: <p>The identifier for the version of the policy that is set as the default (operative) version.</p> <p>For more information about policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>. </p>
        Description:
          allOf:
            - $ref: '#/components/schemas/policyDescriptionType'
            - description: A friendly description of the policy.
        IsAttachable:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether the policy can be attached to an IAM user, group, or role.
        Path:
          allOf:
            - $ref: '#/components/schemas/policyPathType'
            - description: <p>The path to the policy.</p> <p>For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.</p>
        PermissionsBoundaryUsageCount:
          allOf:
            - $ref: '#/components/schemas/attachmentCountType'
            - description: <p>The number of entities (users and roles) for which the policy is used as the permissions boundary. </p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        PolicyId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: <p>The stable and unique string identifying the policy.</p> <p>For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.</p>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The friendly name (not ARN) identifying the policy.
        PolicyVersionList:
          allOf:
            - $ref: '#/components/schemas/policyDocumentVersionListType'
            - description: A list containing information about the versions of the policy.
        UpdateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: <p>The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy was last updated.</p> <p>When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.</p>
      type: object
    ManagedPolicyDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/ManagedPolicyDetail'
          - xml:
              name: member
      type: array
    NoSuchEntityException: {}
    PasswordPolicy:
      description: <p>Contains information about the account password policy.</p> <p> This data type is used as a response element in the <a>GetAccountPasswordPolicy</a> operation. </p>
      properties:
        AllowUsersToChangePassword:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether IAM users are allowed to change their own password. Gives IAM users permissions to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM.
        ExpirePasswords:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Indicates whether passwords in the account expire. Returns true if <code>MaxPasswordAge</code> contains a value greater than 0. Returns false if MaxPasswordAge is 0 or not present.
        HardExpiry:
          allOf:
            - $ref: '#/components/schemas/booleanObjectType'
            - description: Specifies whether IAM users are prevented from setting a new password via the Amazon Web Services Management Console after their password has expired. The IAM user cannot access the console until an administrator resets the password. IAM users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password using the CLI or API.
        MaxPasswordAge:
          allOf:
            - $ref: '#/components/schemas/maxPasswordAgeType'
            - description: The number of days that an IAM user password is valid.
        MinimumPasswordLength:
          allOf:
            - $ref: '#/components/schemas/minimumPasswordLengthType'
            - description: Minimum length to require for IAM user passwords.
        PasswordReusePrevention:
          allOf:
            - $ref: '#/components/schemas/passwordReusePreventionType'
            - description: Specifies the number of previous passwords that IAM users are prevented from reusing.
        RequireLowercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether IAM user passwords must contain at least one lowercase character (a to z).
        RequireNumbers:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).
        RequireSymbols:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: '<p>Specifies whether IAM user passwords must contain at least one of the following symbols:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | ''</p>'
        RequireUppercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether IAM user passwords must contain at least one uppercase character (A to Z).
      type: object
    PasswordPolicyViolationException: {}
    PermissionsBoundaryAttachmentType:
      enum:
        - PermissionsBoundaryPolicy
      type: string
    Policy:
      description: |-
        Contains information about an attached policy.
         An attached policy is a managed policy that has been attached to a user, group, or role.
         For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
      type: object
      additionalProperties: false
      properties:
        PolicyDocument:
          description: The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
          type: object
        PolicyName:
          description: The friendly name (not ARN) identifying the policy.
          type: string
      required:
        - PolicyName
        - PolicyDocument
    PolicyDetail:
      description: <p>Contains information about an IAM policy, including the policy document.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: The policy document.
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: The name of the policy.
      type: object
    PolicyGroup:
      description: <p>Contains information about a group that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        GroupId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The stable and unique string identifying the group. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: The name (friendly name, not ARN) identifying the group.
      type: object
    PolicyGroupListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyGroup'
          - xml:
              name: member
      type: array
    PolicyNotAttachableException: {}
    PolicyRole:
      description: <p>Contains information about a role that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        RoleId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The stable and unique string identifying the role. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The name (friendly name, not ARN) identifying the role.
      type: object
    PolicyRoleListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyRole'
          - xml:
              name: member
      type: array
    PolicyUsageType:
      description: <p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
      enum:
        - PermissionsPolicy
        - PermissionsBoundary
      type: string
    PolicyUser:
      description: <p>Contains information about a user that a managed policy is attached to.</p> <p>This data type is used as a response element in the <a>ListEntitiesForPolicy</a> operation. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        UserId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The stable and unique string identifying the user. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name (friendly name, not ARN) identifying the user.
      type: object
    PolicyUserListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyUser'
          - xml:
              name: member
      type: array
    PolicyVersion:
      description: <p>Contains information about a version of a managed policy.</p> <p>This data type is used as a response element in the <a>CreatePolicyVersion</a>, <a>GetPolicyVersion</a>, <a>ListPolicyVersions</a>, and <a>GetAccountAuthorizationDetails</a> operations. </p> <p>For more information about managed policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>. </p>
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the policy version was created.
        Document:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>The policy document is returned in the response to the <a>GetPolicyVersion</a> and <a>GetAccountAuthorizationDetails</a> operations. It is not returned in the response to the <a>CreatePolicyVersion</a> or <a>ListPolicyVersions</a> operations. </p> <p>The policy document returned in this structure is URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to
                plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p>
        IsDefaultVersion:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: Specifies whether the policy version is set as the policy's default version.
        VersionId:
          allOf:
            - $ref: '#/components/schemas/policyVersionIdType'
            - description: <p>The identifier for the policy version.</p> <p>Policy version identifiers always begin with <code>v</code> (always lowercase). When a policy is created, the first policy version is <code>v1</code>. </p>
      type: object
    PutGroupPolicyRequest:
      properties:
        GroupName:
          allOf:
            - $ref: '#/components/schemas/groupNameType'
            - description: '<p>The name of the group to associate the policy with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.</p>'
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to = IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the policy document.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - GroupName
        - PolicyName
        - PolicyDocument
      title: PutGroupPolicyRequest
      type: object
    PutRolePolicyRequest:
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the policy document.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: '<p>The name of the role to associate the policy with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - RoleName
        - PolicyName
        - PolicyDocument
      title: PutRolePolicyRequest
      type: object
    PutUserPolicyRequest:
      properties:
        PolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: >-
                <p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
                ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        PolicyName:
          allOf:
            - $ref: '#/components/schemas/policyNameType'
            - description: '<p>The name of the policy document.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user to associate the policy with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - PolicyName
        - PolicyDocument
      title: PutUserPolicyRequest
      type: object
    ReasonType:
      maxLength: 1000
      type: string
    RegionNameType:
      maxLength: 100
      minLength: 1
      type: string
    ResetServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: <p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - ServiceSpecificCredentialId
      title: ResetServiceSpecificCredentialRequest
      type: object
    ResetServiceSpecificCredentialResponse:
      properties:
        ServiceSpecificCredential:
          allOf:
            - $ref: '#/components/schemas/ServiceSpecificCredential'
            - description: <p>A structure with details about the updated service-specific credential, including the new password.</p> <important> <p>This is the <b>only</b> time that you can access the password. You cannot recover the password later, but you can reset it again.</p> </important>
      type: object
    ResyncMFADeviceRequest:
      properties:
        AuthenticationCode1:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: <p>An authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
        AuthenticationCode2:
          allOf:
            - $ref: '#/components/schemas/authenticationCodeType'
            - description: <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: '<p>Serial number that uniquely identifies the MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user whose MFA device you want to resynchronize.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SerialNumber
        - AuthenticationCode1
        - AuthenticationCode2
      title: ResyncMFADeviceRequest
      type: object
    Role:
      type: object
      properties:
        Arn:
          description: ''
          type: string
        AssumeRolePolicyDocument:
          description: >-
            The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples). For more information about the elements that you can use in an IAM policy, see [Policy Elements
            Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *User Guide*.
          type: object
        Description:
          description: A description of the role that you provide.
          type: string
        ManagedPolicyArns:
          description: |-
            A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
             For more information about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        MaxSessionDuration:
          description: |-
            The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.
             Anyone who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter, their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API operations or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User Guide*.
          type: integer
        Path:
          description: |-
            The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
             This parameter is optional. If it is not included, it defaults to a slash (/).
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
          default: /
          type: string
        PermissionsBoundary:
          description: |-
            The ARN of the policy used to set the permissions boundary for the role.
             For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
          type: string
        Policies:
          description: |-
            Adds or updates an inline policy document that is embedded in the specified IAM role.
             When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
             A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
             For information about limits on the number of inline policies that you can embed with a role, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
              If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
          type: array
          x-insertionOrder: false
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Policy'
        RoleId:
          description: ''
          type: string
        RoleName:
          description: |-
            A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *User Guide*.
             This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by case. For example, you cannot create roles named both "Role1" and "role1".
             If you don't specify a name, CFN generates a unique physical ID and uses that ID for the role name.
             If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
              Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
          type: string
        Tags:
          description: A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AssumeRolePolicyDocument
      x-stackql-resource-name: role
      description: |-
        Creates a new role for your AWS-account.
          For more information about roles, see [IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html) in the *IAM User Guide*. For information about quotas for role names and the number of roles you can create, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
      x-type-name: AWS::IAM::Role
      x-stackql-primary-identifier:
        - RoleName
      x-create-only-properties:
        - Path
        - RoleName
      x-read-only-properties:
        - Arn
        - RoleId
      x-required-properties:
        - AssumeRolePolicyDocument
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:CreateRole
          - iam:PutRolePolicy
          - iam:AttachRolePolicy
          - iam:GetRolePolicy
          - iam:TagRole
          - iam:UntagRole
          - iam:GetRole
        read:
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - iam:ListRolePolicies
          - iam:GetRolePolicy
        update:
          - iam:UpdateRole
          - iam:UpdateRoleDescription
          - iam:UpdateAssumeRolePolicy
          - iam:DetachRolePolicy
          - iam:AttachRolePolicy
          - iam:DeleteRolePermissionsBoundary
          - iam:PutRolePermissionsBoundary
          - iam:DeleteRolePolicy
          - iam:PutRolePolicy
          - iam:TagRole
          - iam:UntagRole
        delete:
          - iam:DeleteRole
          - iam:DetachRolePolicy
          - iam:DeleteRolePolicy
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - iam:ListRolePolicies
          - iam:TagRole
          - iam:UntagRole
        list:
          - iam:ListRoles
    RoleDetail:
      description: <p>Contains information about an IAM role, including all of the role's policies.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AssumeRolePolicyDocument:
          allOf:
            - $ref: '#/components/schemas/policyDocumentType'
            - description: The trust policy that grants permission to assume the role.
        AttachedManagedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of managed policies attached to the role. These policies are the role's access (permissions) policies.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the role was created.
        InstanceProfileList:
          allOf:
            - $ref: '#/components/schemas/instanceProfileListType'
            - description: A list of instance profiles that contain this role.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: The path to the role. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        PermissionsBoundary:
          allOf:
            - $ref: '#/components/schemas/AttachedPermissionsBoundary'
            - description: <p>The ARN of the policy used to set the permissions boundary for the role.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        RoleId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The stable and unique string identifying the role. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        RoleLastUsed:
          allOf:
            - $ref: '#/components/schemas/RoleLastUsed'
            - description: >-
                Contains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see <a
                href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions where data is tracked</a> in the <i>IAM User Guide</i>.
        RoleName:
          allOf:
            - $ref: '#/components/schemas/roleNameType'
            - description: The friendly name that identifies the role.
        RolePolicyList:
          allOf:
            - $ref: '#/components/schemas/policyDetailListType'
            - description: A list of inline policies embedded in the role. These policies are the role's access (permissions) policies.
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: A list of tags that are attached to the role. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      type: object
    RoleLastUsed:
      description: >-
        <p>Contains information about the last time that an IAM role was used. This includes the date and time and the Region in which the role was last used. Activity is only reported for the trailing 400 days. This period can be shorter if your Region began supporting these features within the last year. The role might have been used more than 400 days ago. For more information, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period">Regions where data is tracked</a> in the <i>IAM User Guide</i>.</p> <p>This data type is returned as a response element in the <a>GetRole</a> and <a>GetAccountAuthorizationDetails</a> operations.</p>
      properties:
        LastUsedDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: "<p>The date and time, in\_<a href=\"http://www.iso.org/iso/iso8601\">ISO 8601 date-time format</a> that the role was last used.</p> <p>This field is null if the role has not been used within the IAM tracking period. For more information about the tracking period, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_access-advisor.html#access-advisor_tracking-period\">Regions where data is tracked</a> in the <i>IAM User Guide</i>. </p>"
        Region:
          allOf:
            - $ref: '#/components/schemas/stringType'
            - description: The name of the Amazon Web Services Region in which the role was last used.
      type: object
    RoleUsageListType:
      items:
        allOf:
          - $ref: '#/components/schemas/RoleUsageType'
          - xml:
              name: member
      type: array
    RoleUsageType:
      description: <p>An object that contains details about how a service-linked role is used, if that information is returned by the service.</p> <p>This data type is used as a response element in the <a>GetServiceLinkedRoleDeletionStatus</a> operation.</p>
      properties:
        Region:
          allOf:
            - $ref: '#/components/schemas/RegionNameType'
            - description: The name of the Region where the service-linked role is being used.
        Resources:
          allOf:
            - $ref: '#/components/schemas/ArnListType'
            - description: The name of the resource that is using the service-linked role.
      type: object
    SSHPublicKey:
      description: <p>Contains information about an SSH public key.</p> <p>This data type is used as a response element in the <a>GetSSHPublicKey</a> and <a>UploadSSHPublicKey</a> operations. </p>
      properties:
        Fingerprint:
          allOf:
            - $ref: '#/components/schemas/publicKeyFingerprintType'
            - description: The MD5 message digest of the SSH public key.
        SSHPublicKeyBody:
          allOf:
            - $ref: '#/components/schemas/publicKeyMaterialType'
            - description: The SSH public key.
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: The unique identifier for the SSH public key.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status of the SSH public key. <code>Active</code> means that the key can be used for authentication with an CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the SSH public key was uploaded.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user associated with the SSH public key.
      required:
        - UserName
        - SSHPublicKeyId
        - Fingerprint
        - SSHPublicKeyBody
        - Status
      type: object
    SSHPublicKeyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/SSHPublicKeyMetadata'
          - xml:
              name: member
      type: array
    SSHPublicKeyMetadata:
      description: <p>Contains information about an SSH public key, without the key's body or fingerprint.</p> <p>This data type is used as a response element in the <a>ListSSHPublicKeys</a> operation.</p>
      properties:
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: The unique identifier for the SSH public key.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status of the SSH public key. <code>Active</code> means that the key can be used for authentication with an CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the SSH public key was uploaded.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user associated with the SSH public key.
      required:
        - UserName
        - SSHPublicKeyId
        - Status
        - UploadDate
      type: object
    ServerCertificate:
      type: object
      properties:
        CertificateBody:
          minLength: 1
          maxLength: 16384
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
        CertificateChain:
          minLength: 1
          maxLength: 2097152
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
        ServerCertificateName:
          minLength: 1
          maxLength: 128
          pattern: '[\w+=,.@-]+'
          type: string
        Path:
          minLength: 1
          maxLength: 512
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
        PrivateKey:
          minLength: 1
          maxLength: 16384
          pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
          type: string
        Arn:
          description: Amazon Resource Name (ARN) of the server certificate
          minLength: 1
          maxLength: 1600
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: server_certificate
      description: Resource Type definition for AWS::IAM::ServerCertificate
      x-type-name: AWS::IAM::ServerCertificate
      x-stackql-primary-identifier:
        - ServerCertificateName
      x-create-only-properties:
        - ServerCertificateName
        - PrivateKey
        - CertificateBody
        - CertificateChain
      x-write-only-properties:
        - PrivateKey
        - CertificateBody
        - CertificateChain
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - iam:TagServerCertificate
          - iam:UntagServerCertificate
          - iam:ListServerCertificateTags
      x-required-permissions:
        create:
          - iam:UploadServerCertificate
          - iam:TagServerCertificate
          - iam:GetServerCertificate
        read:
          - iam:GetServerCertificate
        update:
          - iam:TagServerCertificate
          - iam:UntagServerCertificate
          - iam:ListServerCertificateTags
          - iam:GetServerCertificate
        delete:
          - iam:DeleteServerCertificate
        list:
          - iam:ListServerCertificates
          - iam:GetServerCertificate
    ServerCertificateMetadata:
      description: <p>Contains information about a server certificate without its certificate body, certificate chain, and private key.</p> <p> This data type is used as a response element in the <a>UploadServerCertificate</a> and <a>ListServerCertificates</a> operations. </p>
      properties:
        Arn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: ' The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        Expiration:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date on which the certificate is set to expire.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: ' The path to the server certificate. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        ServerCertificateId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: ' The stable and unique string identifying the server certificate. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>. '
        ServerCertificateName:
          allOf:
            - $ref: '#/components/schemas/serverCertificateNameType'
            - description: The name that identifies the server certificate.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the server certificate was uploaded.
      required:
        - Path
        - ServerCertificateName
        - ServerCertificateId
        - Arn
      type: object
    ServiceFailureException: {}
    ServiceNotSupportedException: {}
    ServiceSpecificCredential:
      description: Contains the details of a service-specific credential.
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the service-specific credential were created.
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: The name of the service associated with the service-specific credential.
        ServicePassword:
          allOf:
            - $ref: '#/components/schemas/servicePassword'
            - description: The generated password for the service-specific credential.
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: The unique identifier for the service-specific credential.
        ServiceUserName:
          allOf:
            - $ref: '#/components/schemas/serviceUserName'
            - description: The generated user name for the service-specific credential. This value is generated by combining the IAM user's name combined with the ID number of the Amazon Web Services account, as in <code>jane-at-123456789012</code>, for example. This value cannot be configured by the user.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status of the service-specific credential. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user associated with the service-specific credential.
      required:
        - CreateDate
        - ServiceName
        - ServiceUserName
        - ServicePassword
        - ServiceSpecificCredentialId
        - UserName
        - Status
      type: object
    ServiceSpecificCredentialMetadata:
      description: Contains additional details about a service-specific credential.
      properties:
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the service-specific credential were created.
        ServiceName:
          allOf:
            - $ref: '#/components/schemas/serviceName'
            - description: The name of the service associated with the service-specific credential.
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: The unique identifier for the service-specific credential.
        ServiceUserName:
          allOf:
            - $ref: '#/components/schemas/serviceUserName'
            - description: The generated user name for the service-specific credential.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status of the service-specific credential. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the IAM user associated with the service-specific credential.
      required:
        - UserName
        - Status
        - ServiceUserName
        - CreateDate
        - ServiceSpecificCredentialId
        - ServiceName
      type: object
    ServiceSpecificCredentialsListType:
      items:
        allOf:
          - $ref: '#/components/schemas/ServiceSpecificCredentialMetadata'
          - xml:
              name: member
      type: array
    SigningCertificate:
      description: <p>Contains information about an X.509 signing certificate.</p> <p>This data type is used as a response element in the <a>UploadSigningCertificate</a> and <a>ListSigningCertificates</a> operations. </p>
      properties:
        CertificateBody:
          allOf:
            - $ref: '#/components/schemas/certificateBodyType'
            - description: The contents of the signing certificate.
        CertificateId:
          allOf:
            - $ref: '#/components/schemas/certificateIdType'
            - description: The ID for the signing certificate.
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status of the signing certificate. <code>Active</code> means that the key is valid for API calls, while <code>Inactive</code> means it is not.
        UploadDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date when the signing certificate was uploaded.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The name of the user the signing certificate is associated with.
      required:
        - UserName
        - CertificateId
        - CertificateBody
        - Status
      type: object
    SimulationPolicyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/policyDocumentType'
          - xml:
              name: member
      type: array
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Value:
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          type: string
          minLength: 1
          maxLength: 256
        Key:
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          type: string
          minLength: 1
          maxLength: 128
      required:
        - Value
        - Key
    TagMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: '<p>The unique identifier for the IAM virtual MFA device to which you want to add tags. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: The list of tags that you want to attach to the IAM virtual MFA device. Each tag consists of a key name and an associated value.
      required:
        - SerialNumber
        - Tags
      title: TagMFADeviceRequest
      type: object
    TagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: '<p>The ARN of the IAM customer managed policy to which you want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: The list of tags that you want to attach to the IAM customer managed policy. Each tag consists of a key name and an associated value.
      required:
        - PolicyArn
        - Tags
      title: TagPolicyRequest
      type: object
    UnmodifiableEntityException: {}
    UnrecognizedPublicKeyEncodingException: {}
    UntagMFADeviceRequest:
      properties:
        SerialNumber:
          allOf:
            - $ref: '#/components/schemas/serialNumberType'
            - description: '<p>The unique identifier for the IAM virtual MFA device from which you want to remove tags. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/tagKeyListType'
            - description: A list of key names as a simple array of strings. The tags with matching keys are removed from the specified instance profile.
      required:
        - SerialNumber
        - TagKeys
      title: UntagMFADeviceRequest
      type: object
    UntagPolicyRequest:
      properties:
        PolicyArn:
          allOf:
            - $ref: '#/components/schemas/arnType'
            - description: '<p>The ARN of the IAM customer managed policy from which you want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
        TagKeys:
          allOf:
            - $ref: '#/components/schemas/tagKeyListType'
            - description: A list of key names as a simple array of strings. The tags with matching keys are removed from the specified policy.
      required:
        - PolicyArn
        - TagKeys
      title: UntagPolicyRequest
      type: object
    UpdateAccessKeyRequest:
      properties:
        AccessKeyId:
          allOf:
            - $ref: '#/components/schemas/accessKeyIdType'
            - description: <p>The access key ID of the secret access key you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: ' The status you want to assign to the secret access key. <code>Active</code> means that the key can be used for programmatic calls to Amazon Web Services, while <code>Inactive</code> means that the key cannot be used.'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user whose key you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - AccessKeyId
        - Status
      title: UpdateAccessKeyRequest
      type: object
    UpdateAccountPasswordPolicyRequest:
      properties:
        AllowUsersToChangePassword:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: >-
                <p> Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html">Permitting IAM users to change their own passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that
                IAM users in the account do not automatically have permissions to change their own password.</p>
        HardExpiry:
          allOf:
            - $ref: '#/components/schemas/booleanObjectType'
            - description: >-
                <p> Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the
                user.</p> <note> <p> In the Amazon Web Services Management Console, the custom password policy option <b>Allow users to change their own password</b> gives IAM users permissions to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM. IAM users with <code>iam:ChangePassword</code>
                permission and active access keys can reset their own expired console password using the CLI or API.</p> </note>
        MaxPasswordAge:
          allOf:
            - $ref: '#/components/schemas/maxPasswordAgeType'
            - description: <p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>
        MinimumPasswordLength:
          allOf:
            - $ref: '#/components/schemas/minimumPasswordLengthType'
            - description: <p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>
        PasswordReusePrevention:
          allOf:
            - $ref: '#/components/schemas/passwordReusePreventionType'
            - description: <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>
        RequireLowercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: <p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>
        RequireNumbers:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>
        RequireSymbols:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: '<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | ''</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>'
        RequireUppercaseCharacters:
          allOf:
            - $ref: '#/components/schemas/booleanType'
            - description: <p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>
      title: UpdateAccountPasswordPolicyRequest
      type: object
    UpdateLoginProfileRequest:
      properties:
        Password:
          allOf:
            - $ref: '#/components/schemas/passwordType'
            - description: >-
                <p>The new password for the specified IAM user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through
                <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul> <p>However, the format can be further restricted by the account administrator by setting a password policy on the Amazon Web Services account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>
        PasswordResetRequired:
          allOf:
            - $ref: '#/components/schemas/booleanObjectType'
            - description: Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the user whose password you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
      title: UpdateLoginProfileRequest
      type: object
    UpdateSSHPublicKeyRequest:
      properties:
        SSHPublicKeyId:
          allOf:
            - $ref: '#/components/schemas/publicKeyIdType'
            - description: <p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status to assign to the SSH public key. <code>Active</code> means that the key can be used for authentication with an CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SSHPublicKeyId
        - Status
      title: UpdateSSHPublicKeyRequest
      type: object
    UpdateServiceSpecificCredentialRequest:
      properties:
        ServiceSpecificCredentialId:
          allOf:
            - $ref: '#/components/schemas/serviceSpecificCredentialId'
            - description: <p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: The status to be assigned to the service-specific credential.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - ServiceSpecificCredentialId
        - Status
      title: UpdateServiceSpecificCredentialRequest
      type: object
    UpdateSigningCertificateRequest:
      properties:
        CertificateId:
          allOf:
            - $ref: '#/components/schemas/certificateIdType'
            - description: <p>The ID of the signing certificate you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
        Status:
          allOf:
            - $ref: '#/components/schemas/statusType'
            - description: ' The status you want to assign to the certificate. <code>Active</code> means that the certificate can be used for programmatic calls to Amazon Web Services <code>Inactive</code> means that the certificate cannot be used.'
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the IAM user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - CertificateId
        - Status
      title: UpdateSigningCertificateRequest
      type: object
    UploadSSHPublicKeyRequest:
      properties:
        SSHPublicKeyBody:
          allOf:
            - $ref: '#/components/schemas/publicKeyMaterialType'
            - description: >-
                <p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The minimum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character
                (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: '<p>The name of the IAM user to associate the SSH public key with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - UserName
        - SSHPublicKeyBody
      title: UploadSSHPublicKeyRequest
      type: object
    UploadSSHPublicKeyResponse:
      description: Contains the response to a successful <a>UploadSSHPublicKey</a> request.
      properties:
        SSHPublicKey:
          allOf:
            - $ref: '#/components/schemas/SSHPublicKey'
            - description: Contains information about the SSH public key.
      type: object
    UploadSigningCertificateRequest:
      properties:
        CertificateBody:
          allOf:
            - $ref: '#/components/schemas/certificateBodyType'
            - description: >-
                <p>The contents of the signing certificate.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
                </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
        UserName:
          allOf:
            - $ref: '#/components/schemas/existingUserNameType'
            - description: '<p>The name of the user the signing certificate is for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
      required:
        - CertificateBody
      title: UploadSigningCertificateRequest
      type: object
    UploadSigningCertificateResponse:
      description: 'Contains the response to a successful <a>UploadSigningCertificate</a> request. '
      example:
        Certificate:
          CertificateBody: '-----BEGIN CERTIFICATE-----<certificate-body>-----END CERTIFICATE-----'
          CertificateId: ID123456789012345EXAMPLE
          Status: Active
          UploadDate: '2015-06-06T21:40:08.121Z'
          UserName: Bob
      properties:
        Certificate:
          allOf:
            - $ref: '#/components/schemas/SigningCertificate'
            - description: Information about the certificate.
      required:
        - Certificate
      type: object
    UserDetail:
      description: <p>Contains information about an IAM user, including all the user's policies and all the IAM groups the user is in.</p> <p>This data type is used as a response element in the <a>GetAccountAuthorizationDetails</a> operation.</p>
      properties:
        Arn:
          $ref: '#/components/schemas/arnType'
        AttachedManagedPolicies:
          allOf:
            - $ref: '#/components/schemas/attachedPoliciesListType'
            - description: A list of the managed policies attached to the user.
        CreateDate:
          allOf:
            - $ref: '#/components/schemas/dateType'
            - description: The date and time, in <a href="http://www.iso.org/iso/iso8601">ISO 8601 date-time format</a>, when the user was created.
        GroupList:
          allOf:
            - $ref: '#/components/schemas/groupNameListType'
            - description: A list of IAM groups that the user is in.
        Path:
          allOf:
            - $ref: '#/components/schemas/pathType'
            - description: The path to the user. For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        PermissionsBoundary:
          allOf:
            - $ref: '#/components/schemas/AttachedPermissionsBoundary'
            - description: <p>The ARN of the policy used to set the permissions boundary for the user.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
        Tags:
          allOf:
            - $ref: '#/components/schemas/tagListType'
            - description: A list of tags that are associated with the user. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
        UserId:
          allOf:
            - $ref: '#/components/schemas/idType'
            - description: The stable and unique string identifying the user. For more information about IDs, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.
        UserName:
          allOf:
            - $ref: '#/components/schemas/userNameType'
            - description: The friendly name identifying the user.
        UserPolicyList:
          allOf:
            - $ref: '#/components/schemas/policyDetailListType'
            - description: A list of the inline policies embedded in the user.
      type: object
    accessKeyIdType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    accessKeyMetadataListType:
      description: <p>Contains a list of access key metadata.</p> <p>This data type is used as a response element in the <a>ListAccessKeys</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/AccessKeyMetadata'
          - xml:
              name: member
      type: array
    accessKeySecretType:
      format: password
      type: string
    accountAliasListType:
      items:
        allOf:
          - $ref: '#/components/schemas/accountAliasType'
          - xml:
              name: member
      type: array
    accountAliasType:
      maxLength: 63
      minLength: 3
      pattern: ^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$
      type: string
    arnType:
      description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
      maxLength: 2048
      minLength: 20
      type: string
    attachedPoliciesListType:
      items:
        allOf:
          - $ref: '#/components/schemas/AttachedPolicy'
          - xml:
              name: member
      type: array
    attachmentCountType:
      type: integer
    authenticationCodeType:
      maxLength: 6
      minLength: 6
      pattern: '[\d]+'
      type: string
    booleanObjectType:
      type: boolean
    booleanType:
      type: boolean
    certificateBodyType:
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    certificateChainType:
      maxLength: 2097152
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    certificateIdType:
      maxLength: 128
      minLength: 24
      pattern: '[\w]+'
      type: string
    certificateListType:
      description: <p>Contains a list of signing certificates.</p> <p>This data type is used as a response element in the <a>ListSigningCertificates</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/SigningCertificate'
          - xml:
              name: member
      type: array
    customSuffixType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    dateType:
      format: date-time
      type: string
    encodingType:
      enum:
        - SSH
        - PEM
      type: string
    entityDetailsListType:
      items:
        allOf:
          - $ref: '#/components/schemas/EntityDetails'
          - xml:
              name: member
      type: array
    entityListType:
      items:
        allOf:
          - $ref: '#/components/schemas/EntityType'
          - xml:
              name: member
      type: array
    existingUserNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    groupDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/GroupDetail'
          - xml:
              name: member
      type: array
    groupListType:
      description: <p>Contains a list of IAM groups.</p> <p>This data type is used as a response element in the <a>ListGroups</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/Group'
          - xml:
              name: member
      type: array
    groupNameListType:
      items:
        allOf:
          - $ref: '#/components/schemas/groupNameType'
          - xml:
              name: member
      type: array
    groupNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    idType:
      maxLength: 128
      minLength: 16
      pattern: '[\w]+'
      type: string
    instanceProfileListType:
      description: Contains a list of instance profiles.
      items:
        allOf:
          - $ref: '#/components/schemas/InstanceProfile'
          - xml:
              name: member
      type: array
    instanceProfileNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    jobIDType:
      maxLength: 36
      minLength: 36
      type: string
    jobStatusType:
      enum:
        - IN_PROGRESS
        - COMPLETED
        - FAILED
      type: string
    markerType:
      maxLength: 320
      minLength: 1
      pattern: '[\u0020-\u00FF]+'
      type: string
    maxItemsType:
      maximum: 1000
      minimum: 1
      type: integer
    maxPasswordAgeType:
      maximum: 1095
      minimum: 1
      type: integer
    mfaDeviceListType:
      description: <p>Contains a list of MFA devices.</p> <p>This data type is used as a response element in the <a>ListMFADevices</a> and <a>ListVirtualMFADevices</a> operations. </p>
      items:
        allOf:
          - $ref: '#/components/schemas/MFADevice'
          - xml:
              name: member
      type: array
    minimumPasswordLengthType:
      maximum: 128
      minimum: 6
      type: integer
    passwordReusePreventionType:
      maximum: 24
      minimum: 1
      type: integer
    passwordType:
      format: password
      maxLength: 128
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    pathType:
      maxLength: 512
      minLength: 1
      pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
      type: string
    policyDescriptionType:
      maxLength: 1000
      type: string
    policyDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyDetail'
          - xml:
              name: member
      type: array
    policyDocumentType:
      maxLength: 131072
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    policyDocumentVersionListType:
      items:
        allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - xml:
              name: member
      type: array
    policyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/Policy'
          - xml:
              name: member
      type: array
    policyNameListType:
      description: <p>Contains a list of policy names.</p> <p>This data type is used as a response element in the <a>ListPolicies</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/policyNameType'
          - xml:
              name: member
      type: array
    policyNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    policyOwnerEntityType:
      enum:
        - USER
        - ROLE
        - GROUP
      type: string
    policyPathType:
      maxLength: 512
      minLength: 1
      pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
      type: string
    policyScopeType:
      enum:
        - All
        - AWS
        - Local
      type: string
    policyVersionIdType:
      pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
      type: string
    publicKeyFingerprintType:
      maxLength: 48
      minLength: 48
      pattern: '[:\w]+'
      type: string
    publicKeyIdType:
      maxLength: 128
      minLength: 20
      pattern: '[\w]+'
      type: string
    publicKeyMaterialType:
      maxLength: 16384
      minLength: 1
      pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
      type: string
    responseMarkerType:
      type: string
    roleDescriptionType:
      maxLength: 1000
      pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
      type: string
    roleDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/RoleDetail'
          - xml:
              name: member
      type: array
    roleListType:
      description: <p>Contains a list of IAM roles.</p> <p>This data type is used as a response element in the <a>ListRoles</a> operation.</p>
      items:
        allOf:
          - $ref: '#/components/schemas/Role'
          - xml:
              name: member
      type: array
    roleMaxSessionDurationType:
      maximum: 43200
      minimum: 3600
      type: integer
    roleNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    serialNumberType:
      maxLength: 256
      minLength: 9
      pattern: '[\w+=/:,.@-]+'
      type: string
    serverCertificateNameType:
      maxLength: 128
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    serviceName:
      type: string
    serviceNamespaceType:
      maxLength: 64
      minLength: 1
      pattern: '[\w-]*'
      type: string
    servicePassword:
      format: password
      type: string
    serviceSpecificCredentialId:
      maxLength: 128
      minLength: 20
      pattern: '[\w]+'
      type: string
    serviceUserName:
      maxLength: 200
      minLength: 17
      pattern: '[\w+=,.@-]+'
      type: string
    statusType:
      enum:
        - Active
        - Inactive
      type: string
    stringType:
      type: string
    summaryValueType:
      type: integer
    summaryMapType:
      additionalProperties:
        $ref: '#/components/schemas/summaryValueType'
      type: object
    tagKeyListType:
      items:
        allOf:
          - $ref: '#/components/schemas/tagKeyType'
          - xml:
              name: member
      maxItems: 50
      type: array
    tagKeyType:
      maxLength: 128
      minLength: 1
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]+'
      type: string
    tagListType:
      items:
        allOf:
          - $ref: '#/components/schemas/Tag'
          - xml:
              name: member
      maxItems: 50
      type: array
    tagValueType:
      maxLength: 256
      minLength: 0
      pattern: '[\p{L}\p{Z}\p{N}_.:/=+\-@]*'
      type: string
    userDetailListType:
      items:
        allOf:
          - $ref: '#/components/schemas/UserDetail'
          - xml:
              name: member
      type: array
    userNameType:
      maxLength: 64
      minLength: 1
      pattern: '[\w+=,.@-]+'
      type: string
    GroupPolicy:
      type: object
      properties:
        PolicyDocument:
          description: |-
            The policy document.
             You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
             The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
              +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
              +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
              +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
          type: object
        PolicyName:
          description: |-
            The name of the policy document.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          type: string
        GroupName:
          description: |-
            The name of the group to associate the policy with.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.
          type: string
      required:
        - PolicyName
        - GroupName
      x-stackql-resource-name: group_policy
      description: |-
        Adds or updates an inline policy document that is embedded in the specified IAM group.
         A group can also have managed policies attached to it. To attach a managed policy to a group, use [AWS::IAM::Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html). To create a new managed policy, use [AWS::IAM::ManagedPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html). For information about policies, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
         For information about the maximum number of inline policies that you can embed in a group, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
      x-type-name: AWS::IAM::GroupPolicy
      x-stackql-primary-identifier:
        - PolicyName
        - GroupName
      x-create-only-properties:
        - PolicyName
        - GroupName
      x-required-properties:
        - PolicyName
        - GroupName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - iam:PutGroupPolicy
          - iam:GetGroupPolicy
        read:
          - iam:GetGroupPolicy
        update:
          - iam:PutGroupPolicy
          - iam:GetGroupPolicy
        delete:
          - iam:DeleteGroupPolicy
          - iam:GetGroupPolicy
    ManagedPolicy:
      type: object
      properties:
        Description:
          type: string
          description: |-
            A friendly description of the policy.
             Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."
             The policy description is immutable. After a value is assigned, it cannot be changed.
        Groups:
          x-insertionOrder: false
          type: array
          description: |-
            The name (friendly name, not ARN) of the group to attach the policy to.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          uniqueItems: true
          items:
            type: string
        ManagedPolicyName:
          type: string
          description: |-
            The friendly name of the policy.
              If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
              If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
              Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
        Path:
          type: string
          default: /
          description: |-
            The path for the policy.
             For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
             This parameter is optional. If it is not included, it defaults to a slash (/).
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
              You cannot use an asterisk (*) in the path name.
        PolicyDocument:
          type: object
          description: |-
            The JSON policy document that you want to use as the content for the new policy.
             You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
             The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
             To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*. 
             The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
              +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
              +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
              +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
        Roles:
          x-insertionOrder: false
          type: array
          description: |-
            The name (friendly name, not ARN) of the role to attach the policy to.
             This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
          uniqueItems: true
          items:
            type: string
        Users:
          x-insertionOrder: false
          type: array
          description: |-
            The name (friendly name, not ARN) of the IAM user to attach the policy to.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          uniqueItems: true
          items:
            type: string
        PolicyArn:
          type: string
          description: ''
        AttachmentCount:
          type: integer
          description: ''
        CreateDate:
          type: string
          description: ''
        UpdateDate:
          type: string
          description: ''
        DefaultVersionId:
          type: string
          description: ''
        IsAttachable:
          type: boolean
          description: ''
        PermissionsBoundaryUsageCount:
          type: integer
          description: ''
        PolicyId:
          type: string
          description: ''
      required:
        - PolicyDocument
      x-stackql-resource-name: managed_policy
      description: |-
        Creates a new managed policy for your AWS-account.
         This operation creates a policy version with a version identifier of ``v1`` and sets v1 as the policy's default version. For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide*.
         As a best practice, you can validate your IAM policies. To learn more, see [Validating IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html) in the *IAM User Guide*.
         For more information about managed policies in general, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
      x-type-name: AWS::IAM::ManagedPolicy
      x-stackql-primary-identifier:
        - PolicyArn
      x-create-only-properties:
        - ManagedPolicyName
        - Description
        - Path
      x-read-only-properties:
        - PolicyArn
        - AttachmentCount
        - CreateDate
        - DefaultVersionId
        - IsAttachable
        - PermissionsBoundaryUsageCount
        - PolicyId
        - UpdateDate
      x-required-properties:
        - PolicyDocument
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - iam:CreatePolicy
          - iam:AttachGroupPolicy
          - iam:AttachUserPolicy
          - iam:AttachRolePolicy
        read:
          - iam:GetPolicy
          - iam:ListEntitiesForPolicy
          - iam:GetPolicyVersion
        update:
          - iam:DetachRolePolicy
          - iam:GetPolicy
          - iam:ListPolicyVersions
          - iam:DetachGroupPolicy
          - iam:DetachUserPolicy
          - iam:CreatePolicyVersion
          - iam:DeletePolicyVersion
          - iam:AttachGroupPolicy
          - iam:AttachUserPolicy
          - iam:AttachRolePolicy
        delete:
          - iam:DetachRolePolicy
          - iam:GetPolicy
          - iam:ListPolicyVersions
          - iam:DetachGroupPolicy
          - iam:DetachUserPolicy
          - iam:DeletePolicyVersion
          - iam:DeletePolicy
          - iam:ListEntitiesForPolicy
        list:
          - iam:ListPolicies
    OIDCProvider:
      type: object
      properties:
        ClientIdList:
          type: array
          x-insertionOrder: false
          items:
            minLength: 1
            maxLength: 255
            type: string
        Url:
          minLength: 1
          maxLength: 255
          type: string
        ThumbprintList:
          type: array
          x-insertionOrder: false
          items:
            minLength: 40
            maxLength: 40
            pattern: '[0-9A-Fa-f]{40}'
            type: string
          maxItems: 5
        Arn:
          description: Amazon Resource Name (ARN) of the OIDC provider
          minLength: 20
          maxLength: 2048
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: oidc_provider
      description: Resource Type definition for AWS::IAM::OIDCProvider
      x-type-name: AWS::IAM::OIDCProvider
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Url
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - iam:TagOpenIDConnectProvider
          - iam:UntagOpenIDConnectProvider
          - iam:ListOpenIDConnectProviderTags
      x-required-permissions:
        create:
          - iam:CreateOpenIDConnectProvider
          - iam:TagOpenIDConnectProvider
          - iam:GetOpenIDConnectProvider
        read:
          - iam:GetOpenIDConnectProvider
        update:
          - iam:UpdateOpenIDConnectProviderThumbprint
          - iam:RemoveClientIDFromOpenIDConnectProvider
          - iam:AddClientIDToOpenIDConnectProvider
          - iam:GetOpenIDConnectProvider
          - iam:TagOpenIDConnectProvider
          - iam:UntagOpenIDConnectProvider
          - iam:ListOpenIDConnectProviderTags
        delete:
          - iam:DeleteOpenIDConnectProvider
        list:
          - iam:ListOpenIDConnectProvider
          - iam:GetOpenIDConnectProvider
    RolePolicy:
      type: object
      properties:
        PolicyDocument:
          description: |-
            The policy document.
             You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
             The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
              +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
              +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
              +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
          type: object
        PolicyName:
          description: |-
            The name of the policy document.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          type: string
        RoleName:
          description: |-
            The name of the role to associate the policy with.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          type: string
      required:
        - PolicyName
        - RoleName
      x-stackql-resource-name: role_policy
      description: |-
        Adds or updates an inline policy document that is embedded in the specified IAM role.
         When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html). You can update a role's trust policy using [UpdateAssumeRolePolicy](https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html). For information about roles, see [roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html) in the *IAM User Guide*.
         A role can also have a managed policy attached to it. To attach a managed policy to a role, use [AWS::IAM::Role](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html). To create a new managed policy, use [AWS::IAM::ManagedPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html). For information about policies, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
         For information about the maximum number of inline policies that you can embed with a role, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
      x-type-name: AWS::IAM::RolePolicy
      x-stackql-primary-identifier:
        - PolicyName
        - RoleName
      x-create-only-properties:
        - PolicyName
        - RoleName
      x-required-properties:
        - PolicyName
        - RoleName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - iam:PutRolePolicy
          - iam:GetRolePolicy
        read:
          - iam:GetRolePolicy
        update:
          - iam:PutRolePolicy
          - iam:GetRolePolicy
        delete:
          - iam:DeleteRolePolicy
          - iam:GetRolePolicy
    SAMLProvider:
      type: object
      properties:
        Name:
          minLength: 1
          maxLength: 128
          pattern: '[\w._-]+'
          type: string
        SamlMetadataDocument:
          minLength: 1000
          maxLength: 10000000
          type: string
        Arn:
          description: Amazon Resource Name (ARN) of the SAML provider
          minLength: 1
          maxLength: 1600
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - SamlMetadataDocument
      x-stackql-resource-name: saml_provider
      description: Resource Type definition for AWS::IAM::SAMLProvider
      x-type-name: AWS::IAM::SAMLProvider
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - SamlMetadataDocument
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - iam:TagSAMLProvider
          - iam:ListSAMLProviderTags
          - iam:UntagSAMLProvider
      x-required-permissions:
        create:
          - iam:CreateSAMLProvider
          - iam:GetSAMLProvider
          - iam:TagSAMLProvider
        read:
          - iam:GetSAMLProvider
        update:
          - iam:UpdateSAMLProvider
          - iam:GetSAMLProvider
          - iam:TagSAMLProvider
          - iam:ListSAMLProviderTags
          - iam:UntagSAMLProvider
        delete:
          - iam:DeleteSAMLProvider
        list:
          - iam:ListSAMLProviders
          - iam:GetSAMLProvider
    ServiceLinkedRole:
      type: object
      properties:
        RoleName:
          description: The name of the role.
          type: string
        CustomSuffix:
          description: A string that you provide, which is combined with the service-provided prefix to form the complete role name.
          type: string
        Description:
          description: The description of the role.
          type: string
        AWSServiceName:
          description: The service principal for the AWS service to which this role is attached.
          type: string
      required: []
      x-stackql-resource-name: service_linked_role
      description: Resource Type definition for AWS::IAM::ServiceLinkedRole
      x-type-name: AWS::IAM::ServiceLinkedRole
      x-stackql-primary-identifier:
        - RoleName
      x-create-only-properties:
        - CustomSuffix
        - AWSServiceName
      x-write-only-properties:
        - CustomSuffix
        - AWSServiceName
      x-read-only-properties:
        - RoleName
      x-required-properties: []
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - iam:CreateServiceLinkedRole
          - iam:GetRole
        read:
          - iam:GetRole
        update:
          - iam:UpdateRole
          - iam:GetRole
        delete:
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
          - iam:GetRole
    User:
      type: object
      properties:
        Path:
          description: |-
            The path for the user name. For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
             This parameter is optional. If it is not included, it defaults to a slash (/).
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
          type: string
        ManagedPolicyArns:
          description: |-
            A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the user.
             For more information about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Policies:
          description: |-
            Adds or updates an inline policy document that is embedded in the specified IAM user. To view AWS::IAM::User snippets, see [Declaring an User Resource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-iam.html#scenario-iam-user).
              The name of each policy for a role, user, or group must be unique. If you don't choose unique names, updates to the IAM identity will fail. 
              For information about limits on the number of inline policies that you can embed in a user, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Policy'
        UserName:
          description: |-
            The name of the user to create. Do not include the path in this value.
             This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The user name must be unique within the account. User names are not distinguished by case. For example, you cannot create users named both "John" and "john".
             If you don't specify a name, CFN generates a unique physical ID and uses that ID for the user name.
             If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
              Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
          type: string
        Groups:
          description: A list of group names to which you want to add the user.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Arn:
          description: ''
          type: string
        LoginProfile:
          description: |-
            Creates a password for the specified IAM user. A password allows an IAM user to access AWS services through the console.
             You can use the CLI, the AWS API, or the *Users* page in the IAM console to create a password for any IAM user. Use [ChangePassword](https://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html) to update your own existing password in the *My Security Credentials* page in the console.
             For more information about managing passwords, see [Managing passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the *User Guide*.
          $ref: '#/components/schemas/LoginProfile'
        Tags:
          description: |-
            A list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
              If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        PermissionsBoundary:
          description: |-
            The ARN of the managed policy that is used to set the permissions boundary for the user.
             A permissions boundary policy defines the maximum permissions that identity-based policies can grant to an entity, but does not grant permissions. Permissions boundaries do not define the maximum permissions that a resource-based policy can grant to an entity. To learn more, see [Permissions boundaries for IAM entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
             For more information about policy types, see [Policy types](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policy-types) in the *IAM User Guide*.
          type: string
      x-stackql-resource-name: user
      description: |-
        Creates a new IAM user for your AWS-account.
          For information about quotas for the number of IAM users you can create, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
      x-type-name: AWS::IAM::User
      x-stackql-primary-identifier:
        - UserName
      x-create-only-properties:
        - UserName
      x-write-only-properties:
        - LoginProfile/Password
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - iam:CreateLoginProfile
          - iam:AddUserToGroup
          - iam:PutUserPolicy
          - iam:AttachUserPolicy
          - iam:CreateUser
          - iam:GetUser
          - iam:TagUser
        read:
          - iam:GetUserPolicy
          - iam:ListGroupsForUser
          - iam:ListAttachedUserPolicies
          - iam:ListUserPolicies
          - iam:GetUser
          - iam:GetLoginProfile
        update:
          - iam:UpdateLoginProfile
          - iam:UpdateUser
          - iam:PutUserPermissionsBoundary
          - iam:AttachUserPolicy
          - iam:DeleteUserPolicy
          - iam:DeleteUserPermissionsBoundary
          - iam:TagUser
          - iam:UntagUser
          - iam:CreateLoginProfile
          - iam:RemoveUserFromGroup
          - iam:AddUserToGroup
          - iam:PutUserPolicy
          - iam:DetachUserPolicy
          - iam:GetLoginProfile
          - iam:DeleteLoginProfile
          - iam:GetUser
          - iam:ListUserTags
        delete:
          - iam:DeleteAccessKey
          - iam:RemoveUserFromGroup
          - iam:DeleteUserPolicy
          - iam:DeleteUser
          - iam:DetachUserPolicy
          - iam:DeleteLoginProfile
          - iam:ListAccessKeys
          - iam:GetUserPolicy
          - iam:ListGroupsForUser
          - iam:ListAttachedUserPolicies
          - iam:ListUserPolicies
          - iam:GetUser
          - iam:GetLoginProfile
        list:
          - iam:listUsers
    UserPolicy:
      type: object
      properties:
        PolicyDocument:
          description: |-
            The policy document.
             You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
             The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
              +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
              +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
              +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
          type: object
        PolicyName:
          description: |-
            The name of the policy document.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          type: string
        UserName:
          description: |-
            The name of the user to associate the policy with.
             This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
          type: string
      required:
        - PolicyName
        - UserName
      x-stackql-resource-name: user_policy
      description: |-
        Adds or updates an inline policy document that is embedded in the specified IAM user.
         An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use [AWS::IAM::User](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html). To create a new managed policy, use [AWS::IAM::ManagedPolicy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-managedpolicy.html). For information about policies, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
         For information about the maximum number of inline policies that you can embed in a user, see [IAM and quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html) in the *IAM User Guide*.
      x-type-name: AWS::IAM::UserPolicy
      x-stackql-primary-identifier:
        - PolicyName
        - UserName
      x-create-only-properties:
        - PolicyName
        - UserName
      x-required-properties:
        - PolicyName
        - UserName
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - iam:PutUserPolicy
          - iam:GetUserPolicy
        read:
          - iam:GetUserPolicy
        update:
          - iam:PutUserPolicy
          - iam:GetUserPolicy
        delete:
          - iam:DeleteUserPolicy
          - iam:GetUserPolicy
    VirtualMFADevice:
      type: object
      properties:
        VirtualMfaDeviceName:
          minLength: 1
          maxLength: 226
          pattern: '[\w+=,.@-]+'
          type: string
        Path:
          minLength: 1
          maxLength: 512
          pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
          type: string
        SerialNumber:
          minLength: 9
          maxLength: 256
          pattern: '[\w+=/:,.@-]+'
          type: string
        Users:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Users
      x-stackql-resource-name: virtualmfa_device
      description: Resource Type definition for AWS::IAM::VirtualMFADevice
      x-type-name: AWS::IAM::VirtualMFADevice
      x-stackql-primary-identifier:
        - SerialNumber
      x-create-only-properties:
        - VirtualMfaDeviceName
        - Base32StringSeed
        - Path
      x-read-only-properties:
        - SerialNumber
      x-required-properties:
        - Users
      x-required-permissions:
        create:
          - iam:CreateVirtualMFADevice
          - iam:EnableMFADevice
          - iam:ListVirtualMFADevices
        read:
          - iam:ListVirtualMFADevices
        update:
          - iam:TagMFADevice
          - iam:UntagMFADevice
        delete:
          - iam:DeleteVirtualMFADevice
          - iam:DeactivateMFADevice
        list:
          - iam:ListVirtualMFADevices
    CreateGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: ''
              type: string
            GroupName:
              description: |-
                The name of the group to create. Do not include the path in this value.
                 The group name must be unique within the account. Group names are not distinguished by case. For example, you cannot create groups named both "ADMINS" and "admins". If you don't specify a name, CFN generates a unique physical ID and uses that ID for the group name.
                  If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
                  If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
                  Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
              type: string
            ManagedPolicyArns:
              description: |-
                The Amazon Resource Name (ARN) of the IAM policy you want to attach.
                 For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            Path:
              description: |-
                The path to the group. For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
                 This parameter is optional. If it is not included, it defaults to a slash (/).
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
              type: string
            Policies:
              description: |-
                Adds or updates an inline policy document that is embedded in the specified IAM group. To view AWS::IAM::Group snippets, see [Declaring an Group Resource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-iam.html#scenario-iam-group).
                  The name of each inline policy for a role, user, or group must be unique. If you don't choose unique names, updates to the IAM identity will fail. 
                  For information about limits on the number of inline policies that you can embed in a group, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Policy'
          x-stackQL-stringOnly: true
      x-title: CreateGroupRequest
      type: object
      required: []
    CreateGroupPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PolicyDocument:
              description: |-
                The policy document.
                 You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
                 The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
                  +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
                  +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
                  +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
              type: object
            PolicyName:
              description: |-
                The name of the policy document.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              type: string
            GroupName:
              description: |-
                The name of the group to associate the policy with.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateGroupPolicyRequest
      type: object
      required: []
    CreateInstanceProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Path:
              type: string
              description: |-
                The path to the instance profile. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
                 This parameter is optional. If it is not included, it defaults to a slash (/).
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
            Roles:
              type: array
              description: The name of the role to associate with the instance profile. Only one role can be assigned to an EC2 instance at a time, and all applications on the instance share the same role and permissions.
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            InstanceProfileName:
              type: string
              description: |-
                The name of the instance profile to create.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
            Arn:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateInstanceProfileRequest
      type: object
      required: []
    CreateManagedPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              description: |-
                A friendly description of the policy.
                 Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."
                 The policy description is immutable. After a value is assigned, it cannot be changed.
            Groups:
              x-insertionOrder: false
              type: array
              description: |-
                The name (friendly name, not ARN) of the group to attach the policy to.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              uniqueItems: true
              items:
                type: string
            ManagedPolicyName:
              type: string
              description: |-
                The friendly name of the policy.
                  If you specify a name, you cannot perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you must replace the resource, specify a new name.
                  If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
                  Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
            Path:
              type: string
              default: /
              description: |-
                The path for the policy.
                 For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
                 This parameter is optional. If it is not included, it defaults to a slash (/).
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
                  You cannot use an asterisk (*) in the path name.
            PolicyDocument:
              type: object
              description: |-
                The JSON policy document that you want to use as the content for the new policy.
                 You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
                 The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
                 To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*. 
                 The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
                  +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
                  +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
                  +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
            Roles:
              x-insertionOrder: false
              type: array
              description: |-
                The name (friendly name, not ARN) of the role to attach the policy to.
                 This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
                  If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
              uniqueItems: true
              items:
                type: string
            Users:
              x-insertionOrder: false
              type: array
              description: |-
                The name (friendly name, not ARN) of the IAM user to attach the policy to.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              uniqueItems: true
              items:
                type: string
            PolicyArn:
              type: string
              description: ''
            AttachmentCount:
              type: integer
              description: ''
            CreateDate:
              type: string
              description: ''
            UpdateDate:
              type: string
              description: ''
            DefaultVersionId:
              type: string
              description: ''
            IsAttachable:
              type: boolean
              description: ''
            PermissionsBoundaryUsageCount:
              type: integer
              description: ''
            PolicyId:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateManagedPolicyRequest
      type: object
      required: []
    CreateOIDCProviderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ClientIdList:
              type: array
              x-insertionOrder: false
              items:
                minLength: 1
                maxLength: 255
                type: string
            Url:
              minLength: 1
              maxLength: 255
              type: string
            ThumbprintList:
              type: array
              x-insertionOrder: false
              items:
                minLength: 40
                maxLength: 40
                pattern: '[0-9A-Fa-f]{40}'
                type: string
              maxItems: 5
            Arn:
              description: Amazon Resource Name (ARN) of the OIDC provider
              minLength: 20
              maxLength: 2048
              type: string
            Tags:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateOIDCProviderRequest
      type: object
      required: []
    CreateRoleRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              description: ''
              type: string
            AssumeRolePolicyDocument:
              description: >-
                The trust policy that is associated with this role. Trust policies define which entities can assume the role. You can associate only one trust policy with a role. For an example of a policy that can be used to assume a role, see [Template Examples](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html#aws-resource-iam-role--examples). For more information about the elements that you can use in an IAM policy, see [Policy Elements
                Reference](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements.html) in the *User Guide*.
              type: object
            Description:
              description: A description of the role that you provide.
              type: string
            ManagedPolicyArns:
              description: |-
                A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
                 For more information about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            MaxSessionDuration:
              description: |-
                The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.
                 Anyone who assumes the role from the CLI or API can use the ``DurationSeconds`` API parameter or the ``duration-seconds`` CLI parameter to request a longer session. The ``MaxSessionDuration`` setting determines the maximum duration that can be requested using the ``DurationSeconds`` parameter. If users don't specify a value for the ``DurationSeconds`` parameter, their security credentials are valid for one hour by default. This applies when you use the ``AssumeRole*`` API operations or the ``assume-role*`` CLI operations but does not apply when you use those operations to create a console URL. For more information, see [Using IAM roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html) in the *IAM User Guide*.
              type: integer
            Path:
              description: |-
                The path to the role. For more information about paths, see [IAM Identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
                 This parameter is optional. If it is not included, it defaults to a slash (/).
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
              default: /
              type: string
            PermissionsBoundary:
              description: |-
                The ARN of the policy used to set the permissions boundary for the role.
                 For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
              type: string
            Policies:
              description: |-
                Adds or updates an inline policy document that is embedded in the specified IAM role.
                 When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role. You can update a role's trust policy later. For more information about IAM roles, go to [Using Roles to Delegate Permissions and Federate Identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html).
                 A role can also have an attached managed policy. For information about policies, see [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
                 For information about limits on the number of inline policies that you can embed with a role, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
                  If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
              type: array
              x-insertionOrder: false
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Policy'
            RoleId:
              description: ''
              type: string
            RoleName:
              description: |-
                A name for the IAM role, up to 64 characters in length. For valid values, see the ``RoleName`` parameter for the [CreateRole](https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html) action in the *User Guide*.
                 This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The role name must be unique within the account. Role names are not distinguished by case. For example, you cannot create roles named both "Role1" and "role1".
                 If you don't specify a name, CFN generates a unique physical ID and uses that ID for the role name.
                 If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
                  Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
              type: string
            Tags:
              description: A list of tags that are attached to the role. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateRoleRequest
      type: object
      required: []
    CreateRolePolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PolicyDocument:
              description: |-
                The policy document.
                 You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
                 The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
                  +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
                  +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
                  +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
              type: object
            PolicyName:
              description: |-
                The name of the policy document.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              type: string
            RoleName:
              description: |-
                The name of the role to associate the policy with.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateRolePolicyRequest
      type: object
      required: []
    CreateSAMLProviderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              minLength: 1
              maxLength: 128
              pattern: '[\w._-]+'
              type: string
            SamlMetadataDocument:
              minLength: 1000
              maxLength: 10000000
              type: string
            Arn:
              description: Amazon Resource Name (ARN) of the SAML provider
              minLength: 1
              maxLength: 1600
              type: string
            Tags:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateSAMLProviderRequest
      type: object
      required: []
    CreateServerCertificateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CertificateBody:
              minLength: 1
              maxLength: 16384
              pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
              type: string
            CertificateChain:
              minLength: 1
              maxLength: 2097152
              pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
              type: string
            ServerCertificateName:
              minLength: 1
              maxLength: 128
              pattern: '[\w+=,.@-]+'
              type: string
            Path:
              minLength: 1
              maxLength: 512
              pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
              type: string
            PrivateKey:
              minLength: 1
              maxLength: 16384
              pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
              type: string
            Arn:
              description: Amazon Resource Name (ARN) of the server certificate
              minLength: 1
              maxLength: 1600
              type: string
            Tags:
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateServerCertificateRequest
      type: object
      required: []
    CreateUserRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Path:
              description: |-
                The path for the user name. For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide*.
                 This parameter is optional. If it is not included, it defaults to a slash (/).
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (``\u0021``) through the DEL character (``\u007F``), including most punctuation characters, digits, and upper and lowercased letters.
              type: string
            ManagedPolicyArns:
              description: |-
                A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the user.
                 For more information about ARNs, see [Amazon Resource Names (ARNs) and Service Namespaces](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *General Reference*.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            Policies:
              description: |-
                Adds or updates an inline policy document that is embedded in the specified IAM user. To view AWS::IAM::User snippets, see [Declaring an User Resource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-iam.html#scenario-iam-user).
                  The name of each policy for a role, user, or group must be unique. If you don't choose unique names, updates to the IAM identity will fail. 
                  For information about limits on the number of inline policies that you can embed in a user, see [Limitations on Entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html) in the *User Guide*.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Policy'
            UserName:
              description: |-
                The name of the user to create. Do not include the path in this value.
                 This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-. The user name must be unique within the account. User names are not distinguished by case. For example, you cannot create users named both "John" and "john".
                 If you don't specify a name, CFN generates a unique physical ID and uses that ID for the user name.
                 If you specify a name, you must specify the ``CAPABILITY_NAMED_IAM`` value to acknowledge your template's capabilities. For more information, see [Acknowledging Resources in Templates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#using-iam-capabilities).
                  Naming an IAM resource can cause an unrecoverable error if you reuse the same template in multiple Regions. To prevent this, we recommend using ``Fn::Join`` and ``AWS::Region`` to create a Region-specific name, as in the following example: ``{"Fn::Join": ["", [{"Ref": "AWS::Region"}, {"Ref": "MyResourceName"}]]}``.
              type: string
            Groups:
              description: A list of group names to which you want to add the user.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                type: string
            Arn:
              description: ''
              type: string
            LoginProfile:
              description: |-
                Creates a password for the specified IAM user. A password allows an IAM user to access AWS services through the console.
                 You can use the CLI, the AWS API, or the *Users* page in the IAM console to create a password for any IAM user. Use [ChangePassword](https://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html) to update your own existing password in the *My Security Credentials* page in the console.
                 For more information about managing passwords, see [Managing passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the *User Guide*.
              $ref: '#/components/schemas/LoginProfile'
            Tags:
              description: |-
                A list of tags that you want to attach to the new user. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
                  If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
              type: array
              uniqueItems: false
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            PermissionsBoundary:
              description: |-
                The ARN of the managed policy that is used to set the permissions boundary for the user.
                 A permissions boundary policy defines the maximum permissions that identity-based policies can grant to an entity, but does not grant permissions. Permissions boundaries do not define the maximum permissions that a resource-based policy can grant to an entity. To learn more, see [Permissions boundaries for IAM entities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide*.
                 For more information about policy types, see [Policy types](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policy-types) in the *IAM User Guide*.
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateUserRequest
      type: object
      required: []
    CreateUserPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            PolicyDocument:
              description: |-
                The policy document.
                 You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
                 The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
                  +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
                  +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
                  +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
              type: object
            PolicyName:
              description: |-
                The name of the policy document.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              type: string
            UserName:
              description: |-
                The name of the user to associate the policy with.
                 This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateUserPolicyRequest
      type: object
      required: []
    CreateVirtualMFADeviceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            VirtualMfaDeviceName:
              minLength: 1
              maxLength: 226
              pattern: '[\w+=,.@-]+'
              type: string
            Path:
              minLength: 1
              maxLength: 512
              pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
              type: string
            SerialNumber:
              minLength: 9
              maxLength: 256
              pattern: '[\w+=/:,.@-]+'
              type: string
            Users:
              type: array
              uniqueItems: false
              items:
                type: string
            Tags:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateVirtualMFADeviceRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    access_key_last_used:
      id: aws.iam.access_key_last_used
      x-cfn-schema-name: GetAccessKeyLastUsedResponse
      x-example-where-clause: WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND AccessKeyId = '<AccessKeyId>'
      x-type: native
      methods:
        access_key_last_used_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccessKeyLastUsed&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetAccessKeyLastUsedResult
            openAPIDocKey: '200'
      name: access_key_last_used
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/access_key_last_used/methods/access_key_last_used_Get'
        update: []
      title: access_key_last_used
    access_keys:
      id: aws.iam.access_keys
      methods:
        access_keys_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateAccessKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        access_keys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteAccessKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        access_keys_List:
          operation:
            $ref: '#/paths/~1?Action=ListAccessKeys&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListAccessKeysResult/AccessKeyMetadata/member
            openAPIDocKey: '200'
        access_keys_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateAccessKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: access_keys
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/access_keys/methods/access_keys_Delete'
        insert:
          - $ref: '#/components/x-stackQL-resources/access_keys/methods/access_keys_Create'
        select:
          - $ref: '#/components/x-stackQL-resources/access_keys/methods/access_keys_List'
        update: []
      title: access_keys
    account_aliases:
      id: aws.iam.account_aliases
      methods:
        account_aliases_List:
          operation:
            $ref: '#/paths/~1?Action=ListAccountAliases&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListAccountAliasesResult/AccountAliases/member
            openAPIDocKey: '200'
      name: account_aliases
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/account_aliases/methods/account_aliases_List'
        update: []
      title: account_aliases
    account_authorization_details:
      id: aws.iam.account_authorization_details
      methods:
        account_authorization_details_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccountAuthorizationDetails&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetAccountAuthorizationDetailsResult
            openAPIDocKey: '200'
      name: account_authorization_details
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/account_authorization_details/methods/account_authorization_details_Get'
        update: []
      title: account_authorization_details
    account_password_policies:
      id: aws.iam.account_password_policies
      methods:
        account_password_policies_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteAccountPasswordPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        account_password_policies_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccountPasswordPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetAccountPasswordPolicyResult
            openAPIDocKey: '200'
        account_password_policies_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateAccountPasswordPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: account_password_policies
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/account_password_policies/methods/account_password_policies_Delete'
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/account_password_policies/methods/account_password_policies_Get'
        update: []
      title: account_password_policies
    account_summaries:
      id: aws.iam.account_summaries
      methods:
        account_summaries_Get:
          operation:
            $ref: '#/paths/~1?Action=GetAccountSummary&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetAccountSummaryResult
            openAPIDocKey: '200'
      name: account_summaries
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/account_summaries/methods/account_summaries_Get'
        update: []
      title: account_summaries
    attached_group_policies:
      id: aws.iam.attached_group_policies
      methods:
        attached_group_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListAttachedGroupPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListAttachedGroupPoliciesResult/AttachedPolicies/member
            openAPIDocKey: '200'
      name: attached_group_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/attached_group_policies/methods/attached_group_policies_List'
        update: []
      title: attached_group_policies
    attached_role_policies:
      id: aws.iam.attached_role_policies
      methods:
        attached_role_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListAttachedRolePolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListAttachedRolePoliciesResult/AttachedPolicies/member
            openAPIDocKey: '200'
      name: attached_role_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/attached_role_policies/methods/attached_role_policies_List'
        update: []
      title: attached_role_policies
    attached_user_policies:
      id: aws.iam.attached_user_policies
      methods:
        attached_user_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListAttachedUserPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListAttachedUserPoliciesResult/AttachedPolicies/member
            openAPIDocKey: '200'
      name: attached_user_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/attached_user_policies/methods/attached_user_policies_List'
        update: []
      title: attached_user_policies
    context_keys_for_custom_policies:
      id: aws.iam.context_keys_for_custom_policies
      methods:
        context_keys_for_custom_policies_Get:
          operation:
            $ref: '#/paths/~1?Action=GetContextKeysForCustomPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetContextKeysForCustomPolicyResult
            openAPIDocKey: '200'
      name: context_keys_for_custom_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/context_keys_for_custom_policies/methods/context_keys_for_custom_policies_Get'
        update: []
      title: context_keys_for_custom_policies
    context_keys_for_principal_policies:
      id: aws.iam.context_keys_for_principal_policies
      methods:
        context_keys_for_principal_policies_Get:
          operation:
            $ref: '#/paths/~1?Action=GetContextKeysForPrincipalPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetContextKeysForPrincipalPolicyResult
            openAPIDocKey: '200'
      name: context_keys_for_principal_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/context_keys_for_principal_policies/methods/context_keys_for_principal_policies_Get'
        update: []
      title: context_keys_for_principal_policies
    entities_for_policies:
      id: aws.iam.entities_for_policies
      methods:
        entities_for_policies_List:
          operation:
            $ref: '#/paths/~1?Action=ListEntitiesForPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListEntitiesForPolicyResult/PolicyGroups/member
            openAPIDocKey: '200'
      name: entities_for_policies
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/entities_for_policies/methods/entities_for_policies_List'
        update: []
      title: entities_for_policies
    groups_for_user:
      id: aws.iam.groups_for_user
      methods:
        groups_for_user_List:
          operation:
            $ref: '#/paths/~1?Action=ListGroupsForUser&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListGroupsForUserResult/Groups/member
            openAPIDocKey: '200'
      name: groups_for_user
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/groups_for_user/methods/groups_for_user_List'
        update: []
      title: groups_for_user
    instance_profiles_for_role:
      id: aws.iam.instance_profiles_for_role
      methods:
        instance_profiles_for_role_List:
          operation:
            $ref: '#/paths/~1?Action=ListInstanceProfilesForRole&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListInstanceProfilesForRoleResult/InstanceProfiles/member
            openAPIDocKey: '200'
      name: instance_profiles_for_role
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/instance_profiles_for_role/methods/instance_profiles_for_role_List'
        update: []
      title: instance_profiles_for_role
    login_profiles:
      id: aws.iam.login_profiles
      methods:
        login_profiles_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateLoginProfile&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        login_profiles_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteLoginProfile&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        login_profiles_Get:
          operation:
            $ref: '#/paths/~1?Action=GetLoginProfile&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetLoginProfileResult
            openAPIDocKey: '200'
        login_profiles_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateLoginProfile&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: login_profiles
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/login_profiles/methods/login_profiles_Delete'
        insert:
          - $ref: '#/components/x-stackQL-resources/login_profiles/methods/login_profiles_Create'
        select:
          - $ref: '#/components/x-stackQL-resources/login_profiles/methods/login_profiles_Get'
        update: []
      title: login_profiles
    mfa_device_tags:
      id: aws.iam.mfa_device_tags
      methods:
        mfa_device_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListMFADeviceTags&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListMFADeviceTagsResult/Tags/member
            openAPIDocKey: '200'
      name: mfa_device_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/mfa_device_tags/methods/mfa_device_tags_List'
        update: []
      title: mfa_device_tags
    mfa_devices:
      id: aws.iam.mfa_devices
      methods:
        mfa_devices_Deactivate:
          operation:
            $ref: '#/paths/~1?Action=DeactivateMFADevice&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        mfa_devices_Enable:
          operation:
            $ref: '#/paths/~1?Action=EnableMFADevice&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        mfa_devices_List:
          operation:
            $ref: '#/paths/~1?Action=ListMFADevices&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListMFADevicesResult/MFADevices/member
            openAPIDocKey: '200'
        mfa_devices_Resync:
          operation:
            $ref: '#/paths/~1?Action=ResyncMFADevice&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        mfa_devices_Tag:
          operation:
            $ref: '#/paths/~1?Action=TagMFADevice&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        mfa_devices_Untag:
          operation:
            $ref: '#/paths/~1?Action=UntagMFADevice&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: mfa_devices
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/mfa_devices/methods/mfa_devices_List'
        update: []
      title: mfa_devices
    policy_tags:
      id: aws.iam.policy_tags
      methods:
        policy_tags_List:
          operation:
            $ref: '#/paths/~1?Action=ListPolicyTags&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListPolicyTagsResult/Tags/member
            openAPIDocKey: '200'
      name: policy_tags
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/policy_tags/methods/policy_tags_List'
        update: []
      title: policy_tags
    policy_versions:
      id: aws.iam.policy_versions
      methods:
        policy_versions_Create:
          operation:
            $ref: '#/paths/~1?Action=CreatePolicyVersion&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        policy_versions_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeletePolicyVersion&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        policy_versions_Get:
          operation:
            $ref: '#/paths/~1?Action=GetPolicyVersion&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetPolicyVersionResult
            openAPIDocKey: '200'
        policy_versions_List:
          operation:
            $ref: '#/paths/~1?Action=ListPolicyVersions&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListPolicyVersionsResult/Versions/member
            openAPIDocKey: '200'
      name: policy_versions
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_Delete'
        insert:
          - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_Create'
        select:
          - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_Get'
          - $ref: '#/components/x-stackQL-resources/policy_versions/methods/policy_versions_List'
        update: []
      title: policy_versions
    service_last_accessed_details_with_entities:
      id: aws.iam.service_last_accessed_details_with_entities
      methods:
        service_last_accessed_details_with_entities_Get:
          operation:
            $ref: '#/paths/~1?Action=GetServiceLastAccessedDetailsWithEntities&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetServiceLastAccessedDetailsWithEntitiesResult
            openAPIDocKey: '200'
      name: service_last_accessed_details_with_entities
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/service_last_accessed_details_with_entities/methods/service_last_accessed_details_with_entities_Get'
        update: []
      title: service_last_accessed_details_with_entities
    service_linked_role_deletion_status:
      id: aws.iam.service_linked_role_deletion_status
      methods:
        service_linked_role_deletion_status_Get:
          operation:
            $ref: '#/paths/~1?Action=GetServiceLinkedRoleDeletionStatus&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetServiceLinkedRoleDeletionStatusResult
            openAPIDocKey: '200'
      name: service_linked_role_deletion_status
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/service_linked_role_deletion_status/methods/service_linked_role_deletion_status_Get'
        update: []
      title: service_linked_role_deletion_status
    service_linked_roles:
      id: aws.iam.service_linked_roles
      methods:
        service_linked_roles_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateServiceLinkedRole&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_linked_roles_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteServiceLinkedRole&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ServiceLinkedRole&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ServiceLinkedRole"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ServiceLinkedRole"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ServiceLinkedRole"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      name: service_linked_roles
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/service_linked_roles/methods/delete_resource'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_linked_roles/methods/create_resource'
        select: []
        update:
          - $ref: '#/components/x-stackQL-resources/service_linked_roles/methods/update_resource'
      title: service_linked_roles
      x-cfn-schema-name: ServiceLinkedRole
      x-cfn-type-name: AWS::IAM::ServiceLinkedRole
      x-identifiers:
        - RoleName
      x-type: cloud_control
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RoleName') as role_name,
              JSON_EXTRACT(Properties, '$.CustomSuffix') as custom_suffix,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AWSServiceName') as aws_service_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::ServiceLinkedRole'
              AND data__Identifier = '<RoleName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'RoleName') as role_name,
                json_extract_path_text(Properties, 'CustomSuffix') as custom_suffix,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'AWSServiceName') as aws_service_name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::ServiceLinkedRole'
                AND data__Identifier = '<RoleName>'
                AND region = 'us-east-1'
    service_specific_credentials:
      id: aws.iam.service_specific_credentials
      methods:
        service_specific_credentials_Create:
          operation:
            $ref: '#/paths/~1?Action=CreateServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_specific_credentials_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        service_specific_credentials_List:
          operation:
            $ref: '#/paths/~1?Action=ListServiceSpecificCredentials&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListServiceSpecificCredentialsResult/ServiceSpecificCredentials/member
            openAPIDocKey: '200'
        service_specific_credentials_Reset:
          operation:
            $ref: '#/paths/~1?Action=ResetServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
        service_specific_credentials_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
      name: service_specific_credentials
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/service_specific_credentials/methods/service_specific_credentials_Delete'
        insert:
          - $ref: '#/components/x-stackQL-resources/service_specific_credentials/methods/service_specific_credentials_Create'
        select:
          - $ref: '#/components/x-stackQL-resources/service_specific_credentials/methods/service_specific_credentials_List'
        update: []
      title: service_specific_credentials
    signing_certificates:
      id: aws.iam.signing_certificates
      methods:
        signing_certificates_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSigningCertificate&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        signing_certificates_List:
          operation:
            $ref: '#/paths/~1?Action=ListSigningCertificates&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListSigningCertificatesResult/Certificates/member
            openAPIDocKey: '200'
        signing_certificates_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSigningCertificate&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        signing_certificates_Upload:
          operation:
            $ref: '#/paths/~1?Action=UploadSigningCertificate&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: signing_certificates
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/signing_certificates/methods/signing_certificates_Delete'
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/signing_certificates/methods/signing_certificates_List'
        update: []
      title: signing_certificates
    ssh_public_keys:
      id: aws.iam.ssh_public_keys
      methods:
        ssh_public_keys_Delete:
          operation:
            $ref: '#/paths/~1?Action=DeleteSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        ssh_public_keys_Get:
          operation:
            $ref: '#/paths/~1?Action=GetSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetSSHPublicKeyResult
            openAPIDocKey: '200'
        ssh_public_keys_List:
          operation:
            $ref: '#/paths/~1?Action=ListSSHPublicKeys&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListSSHPublicKeysResult/SSHPublicKeys/member
            openAPIDocKey: '200'
        ssh_public_keys_Update:
          operation:
            $ref: '#/paths/~1?Action=UpdateSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            openAPIDocKey: '200'
        ssh_public_keys_Upload:
          operation:
            $ref: '#/paths/~1?Action=UploadSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            openAPIDocKey: '200'
      name: ssh_public_keys
      sqlVerbs:
        delete:
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/ssh_public_keys_Delete'
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/ssh_public_keys_Get'
          - $ref: '#/components/x-stackQL-resources/ssh_public_keys/methods/ssh_public_keys_List'
        update: []
      title: ssh_public_keys
    user_policies_list_only:
      id: aws.iam.user_policies_list_only
      x-cfn-schema-name: GetUserPolicyResponse
      x-example-where-clause: WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND UserName = '<UserName>' AND PolicyName = '<PolicyName>'
      x-type: native
      methods:
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetUserPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetUserPolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListUserPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListUserPoliciesResult/PolicyNames/member
            openAPIDocKey: '200'
      name: user_policies_list_only
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/user_policies_list_only/methods/get'
          - $ref: '#/components/x-stackQL-resources/user_policies_list_only/methods/list'
        update: []
      title: user_policies_list_only
    group_policies_list_only:
      id: aws.iam.group_policies_list_only
      x-cfn-schema-name: GetGroupPolicyResponse
      x-example-where-clause: WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND GroupName = '<GroupName>' AND PolicyName = '<PolicyName>'
      x-type: native
      methods:
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetGroupPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetGroupPolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListGroupPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListGroupPoliciesResult/PolicyNames/member
            openAPIDocKey: '200'
      name: group_policies_list_only
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/group_policies_list_only/methods/get'
          - $ref: '#/components/x-stackQL-resources/group_policies_list_only/methods/list'
        update: []
      title: group_policies_list_only
    policies_list_only:
      id: aws.iam.policies_list_only
      x-cfn-schema-name: GetPolicyResponse
      x-example-where-clause: WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND PolicyArn = '<PolicyArn>'
      x-type: native
      methods:
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetPolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetPolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListPolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListPoliciesResult/Policies/member
            openAPIDocKey: '200'
      name: policies_list_only
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/policies_list_only/methods/get'
          - $ref: '#/components/x-stackQL-resources/policies_list_only/methods/list'
        update: []
      title: policies_list_only
    role_policies_list_only:
      id: aws.iam.role_policies_list_only
      x-cfn-schema-name: GetRolePolicyResponse
      x-example-where-clause: WHERE region = 'us-east-1' /* always 'us-east-1' for iam */ AND RoleName = '<RoleName>' AND PolicyName = '<PolicyName>'
      x-type: native
      methods:
        get:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=GetRolePolicy&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/GetRolePolicyResult
            openAPIDocKey: '200'
        list:
          serviceName: iam
          operation:
            $ref: '#/paths/~1?Action=ListRolePolicies&Version=2010-05-08&__nativeEndpoint=true/get'
          response:
            mediaType: text/xml
            objectKey: /*/ListRolePoliciesResult/PolicyNames/member
            openAPIDocKey: '200'
      name: role_policies_list_only
      sqlVerbs:
        delete: []
        insert: []
        select:
          - $ref: '#/components/x-stackQL-resources/role_policies_list_only/methods/get'
          - $ref: '#/components/x-stackQL-resources/role_policies_list_only/methods/list'
        update: []
      title: role_policies_list_only
    groups:
      name: groups
      id: aws.iam.groups
      x-cfn-schema-name: Group
      x-cfn-type-name: AWS::IAM::Group
      x-identifiers:
        - GroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Group&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::Group"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::Group"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::Group"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name,
              JSON_EXTRACT(Properties, '$.ManagedPolicyArns') as managed_policy_arns,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.Policies') as policies
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::Group'
              AND data__Identifier = '<GroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.GroupName') as group_name,
                JSON_EXTRACT(detail.Properties, '$.ManagedPolicyArns') as managed_policy_arns,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.Policies') as policies
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::Group'
                AND detail.data__TypeName = 'AWS::IAM::Group'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'GroupName') as group_name,
                  json_extract_path_text(Properties, 'ManagedPolicyArns') as managed_policy_arns,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'Policies') as policies
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::Group'
                  AND data__Identifier = '<GroupName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'GroupName') as group_name,
                    json_extract_path_text(detail.Properties, 'ManagedPolicyArns') as managed_policy_arns,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'Policies') as policies
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::Group'
                    AND detail.data__TypeName = 'AWS::IAM::Group'
                    AND listing.region = 'us-east-1'
    groups_list_only:
      name: groups_list_only
      id: aws.iam.groups_list_only
      x-cfn-schema-name: Group
      x-cfn-type-name: AWS::IAM::Group
      x-identifiers:
        - GroupName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::Group'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GroupName') as group_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::Group'
                AND region = 'us-east-1'
    group_policies:
      name: group_policies
      id: aws.iam.group_policies
      x-cfn-schema-name: GroupPolicy
      x-cfn-type-name: AWS::IAM::GroupPolicy
      x-identifiers:
        - PolicyName
        - GroupName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__GroupPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::GroupPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::GroupPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::GroupPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/group_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/group_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/group_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.GroupName') as group_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::GroupPolicy'
              AND data__Identifier = '<PolicyName>|<GroupName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PolicyDocument') as policy_document,
                json_extract_path_text(Properties, 'PolicyName') as policy_name,
                json_extract_path_text(Properties, 'GroupName') as group_name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::GroupPolicy'
                AND data__Identifier = '<PolicyName>|<GroupName>'
                AND region = 'us-east-1'
    instance_profiles:
      name: instance_profiles
      id: aws.iam.instance_profiles
      x-cfn-schema-name: InstanceProfile
      x-cfn-type-name: AWS::IAM::InstanceProfile
      x-identifiers:
        - InstanceProfileName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InstanceProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::InstanceProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::InstanceProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::InstanceProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.Roles') as roles,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::InstanceProfile'
              AND data__Identifier = '<InstanceProfileName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.Roles') as roles,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileName') as instance_profile_name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::InstanceProfile'
                AND detail.data__TypeName = 'AWS::IAM::InstanceProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'Roles') as roles,
                  json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::InstanceProfile'
                  AND data__Identifier = '<InstanceProfileName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'Roles') as roles,
                    json_extract_path_text(detail.Properties, 'InstanceProfileName') as instance_profile_name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::InstanceProfile'
                    AND detail.data__TypeName = 'AWS::IAM::InstanceProfile'
                    AND listing.region = 'us-east-1'
    instance_profiles_list_only:
      name: instance_profiles_list_only
      id: aws.iam.instance_profiles_list_only
      x-cfn-schema-name: InstanceProfile
      x-cfn-type-name: AWS::IAM::InstanceProfile
      x-identifiers:
        - InstanceProfileName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::InstanceProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::InstanceProfile'
                AND region = 'us-east-1'
    managed_policies:
      name: managed_policies
      id: aws.iam.managed_policies
      x-cfn-schema-name: ManagedPolicy
      x-cfn-type-name: AWS::IAM::ManagedPolicy
      x-identifiers:
        - PolicyArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ManagedPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ManagedPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ManagedPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ManagedPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/managed_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/managed_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/managed_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Groups') as groups,
              JSON_EXTRACT(Properties, '$.ManagedPolicyName') as managed_policy_name,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.Roles') as roles,
              JSON_EXTRACT(Properties, '$.Users') as users,
              JSON_EXTRACT(Properties, '$.PolicyArn') as policy_arn,
              JSON_EXTRACT(Properties, '$.AttachmentCount') as attachment_count,
              JSON_EXTRACT(Properties, '$.CreateDate') as create_date,
              JSON_EXTRACT(Properties, '$.UpdateDate') as update_date,
              JSON_EXTRACT(Properties, '$.DefaultVersionId') as default_version_id,
              JSON_EXTRACT(Properties, '$.IsAttachable') as is_attachable,
              JSON_EXTRACT(Properties, '$.PermissionsBoundaryUsageCount') as permissions_boundary_usage_count,
              JSON_EXTRACT(Properties, '$.PolicyId') as policy_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::ManagedPolicy'
              AND data__Identifier = '<PolicyArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Groups') as groups,
                JSON_EXTRACT(detail.Properties, '$.ManagedPolicyName') as managed_policy_name,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.PolicyDocument') as policy_document,
                JSON_EXTRACT(detail.Properties, '$.Roles') as roles,
                JSON_EXTRACT(detail.Properties, '$.Users') as users,
                JSON_EXTRACT(detail.Properties, '$.PolicyArn') as policy_arn,
                JSON_EXTRACT(detail.Properties, '$.AttachmentCount') as attachment_count,
                JSON_EXTRACT(detail.Properties, '$.CreateDate') as create_date,
                JSON_EXTRACT(detail.Properties, '$.UpdateDate') as update_date,
                JSON_EXTRACT(detail.Properties, '$.DefaultVersionId') as default_version_id,
                JSON_EXTRACT(detail.Properties, '$.IsAttachable') as is_attachable,
                JSON_EXTRACT(detail.Properties, '$.PermissionsBoundaryUsageCount') as permissions_boundary_usage_count,
                JSON_EXTRACT(detail.Properties, '$.PolicyId') as policy_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::ManagedPolicy'
                AND detail.data__TypeName = 'AWS::IAM::ManagedPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Groups') as groups,
                  json_extract_path_text(Properties, 'ManagedPolicyName') as managed_policy_name,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'PolicyDocument') as policy_document,
                  json_extract_path_text(Properties, 'Roles') as roles,
                  json_extract_path_text(Properties, 'Users') as users,
                  json_extract_path_text(Properties, 'PolicyArn') as policy_arn,
                  json_extract_path_text(Properties, 'AttachmentCount') as attachment_count,
                  json_extract_path_text(Properties, 'CreateDate') as create_date,
                  json_extract_path_text(Properties, 'UpdateDate') as update_date,
                  json_extract_path_text(Properties, 'DefaultVersionId') as default_version_id,
                  json_extract_path_text(Properties, 'IsAttachable') as is_attachable,
                  json_extract_path_text(Properties, 'PermissionsBoundaryUsageCount') as permissions_boundary_usage_count,
                  json_extract_path_text(Properties, 'PolicyId') as policy_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::ManagedPolicy'
                  AND data__Identifier = '<PolicyArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Groups') as groups,
                    json_extract_path_text(detail.Properties, 'ManagedPolicyName') as managed_policy_name,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'PolicyDocument') as policy_document,
                    json_extract_path_text(detail.Properties, 'Roles') as roles,
                    json_extract_path_text(detail.Properties, 'Users') as users,
                    json_extract_path_text(detail.Properties, 'PolicyArn') as policy_arn,
                    json_extract_path_text(detail.Properties, 'AttachmentCount') as attachment_count,
                    json_extract_path_text(detail.Properties, 'CreateDate') as create_date,
                    json_extract_path_text(detail.Properties, 'UpdateDate') as update_date,
                    json_extract_path_text(detail.Properties, 'DefaultVersionId') as default_version_id,
                    json_extract_path_text(detail.Properties, 'IsAttachable') as is_attachable,
                    json_extract_path_text(detail.Properties, 'PermissionsBoundaryUsageCount') as permissions_boundary_usage_count,
                    json_extract_path_text(detail.Properties, 'PolicyId') as policy_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::ManagedPolicy'
                    AND detail.data__TypeName = 'AWS::IAM::ManagedPolicy'
                    AND listing.region = 'us-east-1'
    managed_policies_list_only:
      name: managed_policies_list_only
      id: aws.iam.managed_policies_list_only
      x-cfn-schema-name: ManagedPolicy
      x-cfn-type-name: AWS::IAM::ManagedPolicy
      x-identifiers:
        - PolicyArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.PolicyArn') as policy_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::ManagedPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'PolicyArn') as policy_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::ManagedPolicy'
                AND region = 'us-east-1'
    oidc_providers:
      name: oidc_providers
      id: aws.iam.oidc_providers
      x-cfn-schema-name: OIDCProvider
      x-cfn-type-name: AWS::IAM::OIDCProvider
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__OIDCProvider&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::OIDCProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::OIDCProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::OIDCProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/oidc_providers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/oidc_providers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/oidc_providers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ClientIdList') as client_id_list,
              JSON_EXTRACT(Properties, '$.Url') as url,
              JSON_EXTRACT(Properties, '$.ThumbprintList') as thumbprint_list,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::OIDCProvider'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ClientIdList') as client_id_list,
                JSON_EXTRACT(detail.Properties, '$.Url') as url,
                JSON_EXTRACT(detail.Properties, '$.ThumbprintList') as thumbprint_list,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::OIDCProvider'
                AND detail.data__TypeName = 'AWS::IAM::OIDCProvider'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ClientIdList') as client_id_list,
                  json_extract_path_text(Properties, 'Url') as url,
                  json_extract_path_text(Properties, 'ThumbprintList') as thumbprint_list,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::OIDCProvider'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ClientIdList') as client_id_list,
                    json_extract_path_text(detail.Properties, 'Url') as url,
                    json_extract_path_text(detail.Properties, 'ThumbprintList') as thumbprint_list,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::OIDCProvider'
                    AND detail.data__TypeName = 'AWS::IAM::OIDCProvider'
                    AND listing.region = 'us-east-1'
    oidc_providers_list_only:
      name: oidc_providers_list_only
      id: aws.iam.oidc_providers_list_only
      x-cfn-schema-name: OIDCProvider
      x-cfn-type-name: AWS::IAM::OIDCProvider
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::OIDCProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::OIDCProvider'
                AND region = 'us-east-1'
    oidc_provider_tags:
      name: oidc_provider_tags
      id: aws.iam.oidc_provider_tags
      x-cfn-schema-name: OIDCProvider
      x-cfn-type-name: AWS::IAM::OIDCProvider
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ClientIdList') as client_id_list,
              JSON_EXTRACT(detail.Properties, '$.Url') as url,
              JSON_EXTRACT(detail.Properties, '$.ThumbprintList') as thumbprint_list,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IAM::OIDCProvider'
              AND detail.data__TypeName = 'AWS::IAM::OIDCProvider'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ClientIdList') as client_id_list,
                json_extract_path_text(detail.Properties, 'Url') as url,
                json_extract_path_text(detail.Properties, 'ThumbprintList') as thumbprint_list,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IAM::OIDCProvider'
                AND detail.data__TypeName = 'AWS::IAM::OIDCProvider'
                AND listing.region = 'us-east-1'
    roles:
      name: roles
      id: aws.iam.roles
      x-cfn-schema-name: Role
      x-cfn-type-name: AWS::IAM::Role
      x-identifiers:
        - RoleName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Role&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::Role"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::Role"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::Role"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/roles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/roles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/roles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AssumeRolePolicyDocument') as assume_role_policy_document,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.ManagedPolicyArns') as managed_policy_arns,
              JSON_EXTRACT(Properties, '$.MaxSessionDuration') as max_session_duration,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.PermissionsBoundary') as permissions_boundary,
              JSON_EXTRACT(Properties, '$.Policies') as policies,
              JSON_EXTRACT(Properties, '$.RoleId') as role_id,
              JSON_EXTRACT(Properties, '$.RoleName') as role_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::Role'
              AND data__Identifier = '<RoleName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AssumeRolePolicyDocument') as assume_role_policy_document,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.ManagedPolicyArns') as managed_policy_arns,
                JSON_EXTRACT(detail.Properties, '$.MaxSessionDuration') as max_session_duration,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.PermissionsBoundary') as permissions_boundary,
                JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
                JSON_EXTRACT(detail.Properties, '$.RoleId') as role_id,
                JSON_EXTRACT(detail.Properties, '$.RoleName') as role_name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::Role'
                AND detail.data__TypeName = 'AWS::IAM::Role'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AssumeRolePolicyDocument') as assume_role_policy_document,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'ManagedPolicyArns') as managed_policy_arns,
                  json_extract_path_text(Properties, 'MaxSessionDuration') as max_session_duration,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'PermissionsBoundary') as permissions_boundary,
                  json_extract_path_text(Properties, 'Policies') as policies,
                  json_extract_path_text(Properties, 'RoleId') as role_id,
                  json_extract_path_text(Properties, 'RoleName') as role_name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::Role'
                  AND data__Identifier = '<RoleName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AssumeRolePolicyDocument') as assume_role_policy_document,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'ManagedPolicyArns') as managed_policy_arns,
                    json_extract_path_text(detail.Properties, 'MaxSessionDuration') as max_session_duration,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'PermissionsBoundary') as permissions_boundary,
                    json_extract_path_text(detail.Properties, 'Policies') as policies,
                    json_extract_path_text(detail.Properties, 'RoleId') as role_id,
                    json_extract_path_text(detail.Properties, 'RoleName') as role_name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::Role'
                    AND detail.data__TypeName = 'AWS::IAM::Role'
                    AND listing.region = 'us-east-1'
    roles_list_only:
      name: roles_list_only
      id: aws.iam.roles_list_only
      x-cfn-schema-name: Role
      x-cfn-type-name: AWS::IAM::Role
      x-identifiers:
        - RoleName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RoleName') as role_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::Role'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RoleName') as role_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::Role'
                AND region = 'us-east-1'
    role_tags:
      name: role_tags
      id: aws.iam.role_tags
      x-cfn-schema-name: Role
      x-cfn-type-name: AWS::IAM::Role
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.AssumeRolePolicyDocument') as assume_role_policy_document,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.ManagedPolicyArns') as managed_policy_arns,
              JSON_EXTRACT(detail.Properties, '$.MaxSessionDuration') as max_session_duration,
              JSON_EXTRACT(detail.Properties, '$.Path') as path,
              JSON_EXTRACT(detail.Properties, '$.PermissionsBoundary') as permissions_boundary,
              JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
              JSON_EXTRACT(detail.Properties, '$.RoleId') as role_id,
              JSON_EXTRACT(detail.Properties, '$.RoleName') as role_name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IAM::Role'
              AND detail.data__TypeName = 'AWS::IAM::Role'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'AssumeRolePolicyDocument') as assume_role_policy_document,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'ManagedPolicyArns') as managed_policy_arns,
                json_extract_path_text(detail.Properties, 'MaxSessionDuration') as max_session_duration,
                json_extract_path_text(detail.Properties, 'Path') as path,
                json_extract_path_text(detail.Properties, 'PermissionsBoundary') as permissions_boundary,
                json_extract_path_text(detail.Properties, 'Policies') as policies,
                json_extract_path_text(detail.Properties, 'RoleId') as role_id,
                json_extract_path_text(detail.Properties, 'RoleName') as role_name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IAM::Role'
                AND detail.data__TypeName = 'AWS::IAM::Role'
                AND listing.region = 'us-east-1'
    role_policies:
      name: role_policies
      id: aws.iam.role_policies
      x-cfn-schema-name: RolePolicy
      x-cfn-type-name: AWS::IAM::RolePolicy
      x-identifiers:
        - PolicyName
        - RoleName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RolePolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::RolePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::RolePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::RolePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/role_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/role_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/role_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.RoleName') as role_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::RolePolicy'
              AND data__Identifier = '<PolicyName>|<RoleName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PolicyDocument') as policy_document,
                json_extract_path_text(Properties, 'PolicyName') as policy_name,
                json_extract_path_text(Properties, 'RoleName') as role_name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::RolePolicy'
                AND data__Identifier = '<PolicyName>|<RoleName>'
                AND region = 'us-east-1'
    saml_providers:
      name: saml_providers
      id: aws.iam.saml_providers
      x-cfn-schema-name: SAMLProvider
      x-cfn-type-name: AWS::IAM::SAMLProvider
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__SAMLProvider&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::SAMLProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::SAMLProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::SAMLProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/saml_providers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/saml_providers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/saml_providers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SamlMetadataDocument') as saml_metadata_document,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::SAMLProvider'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SamlMetadataDocument') as saml_metadata_document,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::SAMLProvider'
                AND detail.data__TypeName = 'AWS::IAM::SAMLProvider'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SamlMetadataDocument') as saml_metadata_document,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::SAMLProvider'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SamlMetadataDocument') as saml_metadata_document,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::SAMLProvider'
                    AND detail.data__TypeName = 'AWS::IAM::SAMLProvider'
                    AND listing.region = 'us-east-1'
    saml_providers_list_only:
      name: saml_providers_list_only
      id: aws.iam.saml_providers_list_only
      x-cfn-schema-name: SAMLProvider
      x-cfn-type-name: AWS::IAM::SAMLProvider
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::SAMLProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::SAMLProvider'
                AND region = 'us-east-1'
    saml_provider_tags:
      name: saml_provider_tags
      id: aws.iam.saml_provider_tags
      x-cfn-schema-name: SAMLProvider
      x-cfn-type-name: AWS::IAM::SAMLProvider
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.SamlMetadataDocument') as saml_metadata_document,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IAM::SAMLProvider'
              AND detail.data__TypeName = 'AWS::IAM::SAMLProvider'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'SamlMetadataDocument') as saml_metadata_document,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IAM::SAMLProvider'
                AND detail.data__TypeName = 'AWS::IAM::SAMLProvider'
                AND listing.region = 'us-east-1'
    server_certificates:
      name: server_certificates
      id: aws.iam.server_certificates
      x-cfn-schema-name: ServerCertificate
      x-cfn-type-name: AWS::IAM::ServerCertificate
      x-identifiers:
        - ServerCertificateName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ServerCertificate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ServerCertificate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ServerCertificate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::ServerCertificate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/server_certificates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/server_certificates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/server_certificates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CertificateBody') as certificate_body,
              JSON_EXTRACT(Properties, '$.CertificateChain') as certificate_chain,
              JSON_EXTRACT(Properties, '$.ServerCertificateName') as server_certificate_name,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.PrivateKey') as private_key,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::ServerCertificate'
              AND data__Identifier = '<ServerCertificateName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.CertificateBody') as certificate_body,
                JSON_EXTRACT(detail.Properties, '$.CertificateChain') as certificate_chain,
                JSON_EXTRACT(detail.Properties, '$.ServerCertificateName') as server_certificate_name,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.PrivateKey') as private_key,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::ServerCertificate'
                AND detail.data__TypeName = 'AWS::IAM::ServerCertificate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CertificateBody') as certificate_body,
                  json_extract_path_text(Properties, 'CertificateChain') as certificate_chain,
                  json_extract_path_text(Properties, 'ServerCertificateName') as server_certificate_name,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'PrivateKey') as private_key,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::ServerCertificate'
                  AND data__Identifier = '<ServerCertificateName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'CertificateBody') as certificate_body,
                    json_extract_path_text(detail.Properties, 'CertificateChain') as certificate_chain,
                    json_extract_path_text(detail.Properties, 'ServerCertificateName') as server_certificate_name,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'PrivateKey') as private_key,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::ServerCertificate'
                    AND detail.data__TypeName = 'AWS::IAM::ServerCertificate'
                    AND listing.region = 'us-east-1'
    server_certificates_list_only:
      name: server_certificates_list_only
      id: aws.iam.server_certificates_list_only
      x-cfn-schema-name: ServerCertificate
      x-cfn-type-name: AWS::IAM::ServerCertificate
      x-identifiers:
        - ServerCertificateName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ServerCertificateName') as server_certificate_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::ServerCertificate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ServerCertificateName') as server_certificate_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::ServerCertificate'
                AND region = 'us-east-1'
    server_certificate_tags:
      name: server_certificate_tags
      id: aws.iam.server_certificate_tags
      x-cfn-schema-name: ServerCertificate
      x-cfn-type-name: AWS::IAM::ServerCertificate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.CertificateBody') as certificate_body,
              JSON_EXTRACT(detail.Properties, '$.CertificateChain') as certificate_chain,
              JSON_EXTRACT(detail.Properties, '$.ServerCertificateName') as server_certificate_name,
              JSON_EXTRACT(detail.Properties, '$.Path') as path,
              JSON_EXTRACT(detail.Properties, '$.PrivateKey') as private_key,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IAM::ServerCertificate'
              AND detail.data__TypeName = 'AWS::IAM::ServerCertificate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'CertificateBody') as certificate_body,
                json_extract_path_text(detail.Properties, 'CertificateChain') as certificate_chain,
                json_extract_path_text(detail.Properties, 'ServerCertificateName') as server_certificate_name,
                json_extract_path_text(detail.Properties, 'Path') as path,
                json_extract_path_text(detail.Properties, 'PrivateKey') as private_key,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IAM::ServerCertificate'
                AND detail.data__TypeName = 'AWS::IAM::ServerCertificate'
                AND listing.region = 'us-east-1'
    users:
      name: users
      id: aws.iam.users
      x-cfn-schema-name: User
      x-cfn-type-name: AWS::IAM::User
      x-identifiers:
        - UserName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__User&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::User"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::User"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::User"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/users/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/users/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/users/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.ManagedPolicyArns') as managed_policy_arns,
              JSON_EXTRACT(Properties, '$.Policies') as policies,
              JSON_EXTRACT(Properties, '$.UserName') as user_name,
              JSON_EXTRACT(Properties, '$.Groups') as groups,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.LoginProfile') as login_profile,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.PermissionsBoundary') as permissions_boundary
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::User'
              AND data__Identifier = '<UserName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.ManagedPolicyArns') as managed_policy_arns,
                JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
                JSON_EXTRACT(detail.Properties, '$.UserName') as user_name,
                JSON_EXTRACT(detail.Properties, '$.Groups') as groups,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.LoginProfile') as login_profile,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.PermissionsBoundary') as permissions_boundary
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::User'
                AND detail.data__TypeName = 'AWS::IAM::User'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'ManagedPolicyArns') as managed_policy_arns,
                  json_extract_path_text(Properties, 'Policies') as policies,
                  json_extract_path_text(Properties, 'UserName') as user_name,
                  json_extract_path_text(Properties, 'Groups') as groups,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'LoginProfile') as login_profile,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'PermissionsBoundary') as permissions_boundary
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::User'
                  AND data__Identifier = '<UserName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'ManagedPolicyArns') as managed_policy_arns,
                    json_extract_path_text(detail.Properties, 'Policies') as policies,
                    json_extract_path_text(detail.Properties, 'UserName') as user_name,
                    json_extract_path_text(detail.Properties, 'Groups') as groups,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'LoginProfile') as login_profile,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'PermissionsBoundary') as permissions_boundary
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::User'
                    AND detail.data__TypeName = 'AWS::IAM::User'
                    AND listing.region = 'us-east-1'
    users_list_only:
      name: users_list_only
      id: aws.iam.users_list_only
      x-cfn-schema-name: User
      x-cfn-type-name: AWS::IAM::User
      x-identifiers:
        - UserName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.UserName') as user_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::User'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'UserName') as user_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::User'
                AND region = 'us-east-1'
    user_tags:
      name: user_tags
      id: aws.iam.user_tags
      x-cfn-schema-name: User
      x-cfn-type-name: AWS::IAM::User
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Path') as path,
              JSON_EXTRACT(detail.Properties, '$.ManagedPolicyArns') as managed_policy_arns,
              JSON_EXTRACT(detail.Properties, '$.Policies') as policies,
              JSON_EXTRACT(detail.Properties, '$.UserName') as user_name,
              JSON_EXTRACT(detail.Properties, '$.Groups') as groups,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.LoginProfile') as login_profile,
              JSON_EXTRACT(detail.Properties, '$.PermissionsBoundary') as permissions_boundary
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IAM::User'
              AND detail.data__TypeName = 'AWS::IAM::User'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Path') as path,
                json_extract_path_text(detail.Properties, 'ManagedPolicyArns') as managed_policy_arns,
                json_extract_path_text(detail.Properties, 'Policies') as policies,
                json_extract_path_text(detail.Properties, 'UserName') as user_name,
                json_extract_path_text(detail.Properties, 'Groups') as groups,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'LoginProfile') as login_profile,
                json_extract_path_text(detail.Properties, 'PermissionsBoundary') as permissions_boundary
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IAM::User'
                AND detail.data__TypeName = 'AWS::IAM::User'
                AND listing.region = 'us-east-1'
    user_policies:
      name: user_policies
      id: aws.iam.user_policies
      x-cfn-schema-name: UserPolicy
      x-cfn-type-name: AWS::IAM::UserPolicy
      x-identifiers:
        - PolicyName
        - UserName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__UserPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::UserPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::UserPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::UserPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/user_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/user_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/user_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.PolicyDocument') as policy_document,
              JSON_EXTRACT(Properties, '$.PolicyName') as policy_name,
              JSON_EXTRACT(Properties, '$.UserName') as user_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::UserPolicy'
              AND data__Identifier = '<PolicyName>|<UserName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'PolicyDocument') as policy_document,
                json_extract_path_text(Properties, 'PolicyName') as policy_name,
                json_extract_path_text(Properties, 'UserName') as user_name
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::UserPolicy'
                AND data__Identifier = '<PolicyName>|<UserName>'
                AND region = 'us-east-1'
    virtualmfa_devices:
      name: virtualmfa_devices
      id: aws.iam.virtualmfa_devices
      x-cfn-schema-name: VirtualMFADevice
      x-cfn-type-name: AWS::IAM::VirtualMFADevice
      x-identifiers:
        - SerialNumber
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__VirtualMFADevice&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::VirtualMFADevice"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::VirtualMFADevice"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::IAM::VirtualMFADevice"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/virtualmfa_devices/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/virtualmfa_devices/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/virtualmfa_devices/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.VirtualMfaDeviceName') as virtual_mfa_device_name,
              JSON_EXTRACT(Properties, '$.Path') as path,
              JSON_EXTRACT(Properties, '$.SerialNumber') as serial_number,
              JSON_EXTRACT(Properties, '$.Users') as users,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::VirtualMFADevice'
              AND data__Identifier = '<SerialNumber>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.VirtualMfaDeviceName') as virtual_mfa_device_name,
                JSON_EXTRACT(detail.Properties, '$.Path') as path,
                JSON_EXTRACT(detail.Properties, '$.SerialNumber') as serial_number,
                JSON_EXTRACT(detail.Properties, '$.Users') as users,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::IAM::VirtualMFADevice'
                AND detail.data__TypeName = 'AWS::IAM::VirtualMFADevice'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'VirtualMfaDeviceName') as virtual_mfa_device_name,
                  json_extract_path_text(Properties, 'Path') as path,
                  json_extract_path_text(Properties, 'SerialNumber') as serial_number,
                  json_extract_path_text(Properties, 'Users') as users,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::IAM::VirtualMFADevice'
                  AND data__Identifier = '<SerialNumber>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'VirtualMfaDeviceName') as virtual_mfa_device_name,
                    json_extract_path_text(detail.Properties, 'Path') as path,
                    json_extract_path_text(detail.Properties, 'SerialNumber') as serial_number,
                    json_extract_path_text(detail.Properties, 'Users') as users,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::IAM::VirtualMFADevice'
                    AND detail.data__TypeName = 'AWS::IAM::VirtualMFADevice'
                    AND listing.region = 'us-east-1'
    virtualmfa_devices_list_only:
      name: virtualmfa_devices_list_only
      id: aws.iam.virtualmfa_devices_list_only
      x-cfn-schema-name: VirtualMFADevice
      x-cfn-type-name: AWS::IAM::VirtualMFADevice
      x-identifiers:
        - SerialNumber
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SerialNumber') as serial_number
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::VirtualMFADevice'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'SerialNumber') as serial_number
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::IAM::VirtualMFADevice'
                AND region = 'us-east-1'
    virtualmfa_device_tags:
      name: virtualmfa_device_tags
      id: aws.iam.virtualmfa_device_tags
      x-cfn-schema-name: VirtualMFADevice
      x-cfn-type-name: AWS::IAM::VirtualMFADevice
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.VirtualMfaDeviceName') as virtual_mfa_device_name,
              JSON_EXTRACT(detail.Properties, '$.Path') as path,
              JSON_EXTRACT(detail.Properties, '$.SerialNumber') as serial_number,
              JSON_EXTRACT(detail.Properties, '$.Users') as users
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::IAM::VirtualMFADevice'
              AND detail.data__TypeName = 'AWS::IAM::VirtualMFADevice'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'VirtualMfaDeviceName') as virtual_mfa_device_name,
                json_extract_path_text(detail.Properties, 'Path') as path,
                json_extract_path_text(detail.Properties, 'SerialNumber') as serial_number,
                json_extract_path_text(detail.Properties, 'Users') as users
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::IAM::VirtualMFADevice'
                AND detail.data__TypeName = 'AWS::IAM::VirtualMFADevice'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Group&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__GroupPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGroupPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGroupPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InstanceProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInstanceProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInstanceProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ManagedPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateManagedPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateManagedPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__OIDCProvider&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateOIDCProvider
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateOIDCProviderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Role&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRole
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RolePolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRolePolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRolePolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__SAMLProvider&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSAMLProvider
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSAMLProviderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ServerCertificate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateServerCertificate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateServerCertificateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ServiceLinkedRole&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateServiceLinkedRole
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateServiceLinkedRoleRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__User&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUser
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__UserPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateUserPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateUserPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__VirtualMFADevice&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateVirtualMFADevice
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateVirtualMFADeviceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=GetSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Retrieves the specified SSH public key, including metadata about the key.</p> <p>The SSH public key retrieved by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_GetSSHPublicKey
      parameters:
        - description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: SSHPublicKeyId
          required: true
          schema:
            maxLength: 128
            minLength: 20
            pattern: '[\w]+'
            type: string
        - description: Specifies the public key encoding format to use in the response. To retrieve the public key in ssh-rsa format, use <code>SSH</code>. To retrieve the public key in PEM format, use <code>PEM</code>.
          in: query
          name: Encoding
          required: true
          schema:
            enum:
              - SSH
              - PEM
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetSSHPublicKeyResult:
                    $ref: '#/components/schemas/GetSSHPublicKeyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: GetSSHPublicKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves the specified SSH public key, including metadata about the key.</p> <p>The SSH public key retrieved by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_GetSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetSSHPublicKeyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetSSHPublicKeyResult:
                    $ref: '#/components/schemas/GetSSHPublicKeyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: GetSSHPublicKey
  /?Action=CreatePolicyVersion&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version.</p> <p>Optionally, you can set the new version as the policy's default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy
        is attached.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreatePolicyVersion
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: >-
            <p>The JSON policy document that you want to use as the content for this new version of the policy.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view
            the maximum character counts of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM and STS character quotas</a>.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>)
            through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyDocument
          required: true
          schema:
            maxLength: 131072
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Specifies whether to set this version as the policy's default version.</p> <p>When this parameter is <code>true</code>, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in
            the <i>IAM User Guide</i>.</p>
          in: query
          name: SetAsDefault
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreatePolicyVersionResult:
                    $ref: '#/components/schemas/CreatePolicyVersionResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicyVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using <a>DeletePolicyVersion</a> before you create a new version.</p> <p>Optionally, you can set the new version as the policy's default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy
        is attached.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreatePolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePolicyVersionRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreatePolicyVersionResult:
                    $ref: '#/components/schemas/CreatePolicyVersionResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicyVersion
  /?Action=DeletePolicyVersion&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Deletes the specified version from the specified managed policy.</p> <p>You cannot delete the default version from a policy using this operation. To delete the default version from a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p> <p>For information about versions for managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for
        managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeletePolicyVersion
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy from which you want to delete a version.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: >-
            <p>The policy version to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed
            policies</a> in the <i>IAM User Guide</i>.</p>
          in: query
          name: VersionId
          required: true
          schema:
            pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicyVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Deletes the specified version from the specified managed policy.</p> <p>You cannot delete the default version from a policy using this operation. To delete the default version from a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use <a>ListPolicyVersions</a>.</p> <p>For information about versions for managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for
        managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeletePolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePolicyVersionRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicyVersion
  /?Action=GetPolicyVersion&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Retrieves information about the specified version of the specified managed policy, including the policy document.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other
        languages and SDKs provide similar functionality.</p> </note> <p>To list the available versions for a policy, use <a>ListPolicyVersions</a>.</p> <p>This operation retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p> <p>For more information about the types of policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetPolicyVersion
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: <p>Identifies the policy version to retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p>
          in: query
          name: VersionId
          required: true
          schema:
            pattern: v[1-9][0-9]*(\.[A-Za-z0-9-]*)?
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetPolicyVersionResult:
                    $ref: '#/components/schemas/GetPolicyVersionResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicyVersion
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves information about the specified version of the specified managed policy, including the policy document.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other
        languages and SDKs provide similar functionality.</p> </note> <p>To list the available versions for a policy, use <a>ListPolicyVersions</a>.</p> <p>This operation retrieves information about managed policies. To retrieve information about an inline policy that is embedded in a user, group, or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p> <p>For more information about the types of policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetPolicyVersion
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPolicyVersionRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetPolicyVersionResult:
                    $ref: '#/components/schemas/GetPolicyVersionResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicyVersion
  /?Action=GetServiceLastAccessedDetailsWithEntities&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>After you generate a group or policy report using the <code>GenerateServiceLastAccessedDetails</code> operation, you can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetailsWithEntities</code>. This operation retrieves the status of your report job and a list of entities that could have used group or policy permissions to access the specified service.</p> <ul> <li> <p> <b>Group</b> – For a group report, this operation returns a list of users in the group that
        could have used the group’s policies in an attempt to access the service.</p> </li> <li> <p> <b>Policy</b> – For a policy report, this operation returns a list of entities (users or roles) that could have used the policy in an attempt to access the service.</p> </li> </ul> <p>You can also use this operation for user or role reports to retrieve details about those entities.</p> <p>If the operation fails, the <code>GetServiceLastAccessedDetailsWithEntities</code> operation returns the
        reason that it failed.</p> <p>By default, the list of associated entities is sorted by date, with the most recent access listed first.</p>
      operationId: GET_GetServiceLastAccessedDetailsWithEntities
      parameters:
        - description: The ID of the request generated by the <code>GenerateServiceLastAccessedDetails</code> operation.
          in: query
          name: JobId
          required: true
          schema:
            maxLength: 36
            minLength: 36
            type: string
        - description: "<p>The service namespace for an Amazon Web Services service. Provide the service namespace to learn when the IAM entity last attempted to access the specified service.</p> <p>To learn the service namespace for a service, see <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html\">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces\">Amazon Web Services service namespaces</a> in the\_<i>Amazon Web Services General Reference</i>.</p>"
          in: query
          name: ServiceNamespace
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w-]*'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetServiceLastAccessedDetailsWithEntitiesResult:
                    $ref: '#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetServiceLastAccessedDetailsWithEntities
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>After you generate a group or policy report using the <code>GenerateServiceLastAccessedDetails</code> operation, you can use the <code>JobId</code> parameter in <code>GetServiceLastAccessedDetailsWithEntities</code>. This operation retrieves the status of your report job and a list of entities that could have used group or policy permissions to access the specified service.</p> <ul> <li> <p> <b>Group</b> – For a group report, this operation returns a list of users in the group that
        could have used the group’s policies in an attempt to access the service.</p> </li> <li> <p> <b>Policy</b> – For a policy report, this operation returns a list of entities (users or roles) that could have used the policy in an attempt to access the service.</p> </li> </ul> <p>You can also use this operation for user or role reports to retrieve details about those entities.</p> <p>If the operation fails, the <code>GetServiceLastAccessedDetailsWithEntities</code> operation returns the
        reason that it failed.</p> <p>By default, the list of associated entities is sorted by date, with the most recent access listed first.</p>
      operationId: POST_GetServiceLastAccessedDetailsWithEntities
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetServiceLastAccessedDetailsWithEntitiesResult:
                    $ref: '#/components/schemas/GetServiceLastAccessedDetailsWithEntitiesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetServiceLastAccessedDetailsWithEntities
  /?Action=GetServiceLinkedRoleDeletionStatus&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Retrieves the status of your service-linked role deletion. After you use <a>DeleteServiceLinkedRole</a> to submit a service-linked role for deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code> to check the status of the deletion. If the deletion fails, this operation returns the reason that it failed, if that information is returned by the service.
      operationId: GET_GetServiceLinkedRoleDeletionStatus
      parameters:
        - description: The deletion task identifier. This identifier is returned by the <a>DeleteServiceLinkedRole</a> operation in the format <code>task/aws-service-role/&lt;service-principal-name&gt;/&lt;role-name&gt;/&lt;task-uuid&gt;</code>.
          in: query
          name: DeletionTaskId
          required: true
          schema:
            maxLength: 1000
            minLength: 1
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetServiceLinkedRoleDeletionStatusResult:
                    $ref: '#/components/schemas/GetServiceLinkedRoleDeletionStatusResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServiceLinkedRoleDeletionStatus
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the status of your service-linked role deletion. After you use <a>DeleteServiceLinkedRole</a> to submit a service-linked role for deletion, you can use the <code>DeletionTaskId</code> parameter in <code>GetServiceLinkedRoleDeletionStatus</code> to check the status of the deletion. If the deletion fails, this operation returns the reason that it failed, if that information is returned by the service.
      operationId: POST_GetServiceLinkedRoleDeletionStatus
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServiceLinkedRoleDeletionStatusRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetServiceLinkedRoleDeletionStatusResult:
                    $ref: '#/components/schemas/GetServiceLinkedRoleDeletionStatusResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServiceLinkedRoleDeletionStatus
  /?Action=DeleteServiceLinkedRole&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Submits a service-linked role deletion request and returns a <code>DeletionTaskId</code>, which you can use to check the status of the deletion. Before you call this operation, confirm that the role has no active sessions and that any resources used by the role in the linked service are deleted. If you call this operation more than once for the same service-linked role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code> of the earlier request is
        returned.</p> <p>If you submit a deletion request for a service-linked role whose linked service is still accessing a resource, then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a> operation returns the reason for the failure, usually including the resources that must be deleted. To delete the service-linked role, you must first remove those resources from the linked service and then submit the deletion request again. Resources are specific to the
        service that is linked to the role. For more information about removing resources from a service, see the <a href="http://docs.aws.amazon.com/">Amazon Web Services documentation</a> for your service.</p> <p>For more information about service-linked roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">Roles terms and concepts: Amazon Web Services service-linked role</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteServiceLinkedRole
      parameters:
        - description: The name of the service-linked role to be deleted.
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  DeleteServiceLinkedRoleResult:
                    $ref: '#/components/schemas/DeleteServiceLinkedRoleResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteServiceLinkedRole
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Submits a service-linked role deletion request and returns a <code>DeletionTaskId</code>, which you can use to check the status of the deletion. Before you call this operation, confirm that the role has no active sessions and that any resources used by the role in the linked service are deleted. If you call this operation more than once for the same service-linked role and an earlier deletion task is not complete, then the <code>DeletionTaskId</code> of the earlier request is
        returned.</p> <p>If you submit a deletion request for a service-linked role whose linked service is still accessing a resource, then the deletion task fails. If it fails, the <a>GetServiceLinkedRoleDeletionStatus</a> operation returns the reason for the failure, usually including the resources that must be deleted. To delete the service-linked role, you must first remove those resources from the linked service and then submit the deletion request again. Resources are specific to the
        service that is linked to the role. For more information about removing resources from a service, see the <a href="http://docs.aws.amazon.com/">Amazon Web Services documentation</a> for your service.</p> <p>For more information about service-linked roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role">Roles terms and concepts: Amazon Web Services service-linked role</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteServiceLinkedRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteServiceLinkedRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  DeleteServiceLinkedRoleResult:
                    $ref: '#/components/schemas/DeleteServiceLinkedRoleResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteServiceLinkedRole
  /?Action=CreateServiceLinkedRole&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Creates an IAM role that is linked to a specific Amazon Web Services service. The service controls the attached policies and when the role can be deleted. This helps ensure that the service is not broken by an unexpectedly changed or deleted role, which could put your Amazon Web Services resources into an unknown state. Allowing the service to control the role helps improve service stability and proper cleanup when a service and its role are no longer needed. For more information, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">Using service-linked roles</a> in the <i>IAM User Guide</i>. </p> <p>To attach a policy to this service-linked role, you must make the request using the Amazon Web Services service that depends on this role.</p>
      operationId: GET_CreateServiceLinkedRole
      parameters:
        - description: >-
            <p>The service principal for the Amazon Web Services service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code>. </p> <p>Service principals are unique and case-sensitive. To find the exact service principal for your service-linked role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html">Amazon Web Services services that
            work with IAM</a> in the <i>IAM User Guide</i>. Look for the services that have <b>Yes </b>in the <b>Service-Linked Role</b> column. Choose the <b>Yes</b> link to view the service-linked role documentation for that service.</p>
          in: query
          name: AWSServiceName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: The description of the role.
          in: query
          name: Description
          required: false
          schema:
            maxLength: 1000
            pattern: '[\p{L}\p{M}\p{Z}\p{S}\p{N}\p{P}]*'
            type: string
        - description: >-
            <p/> <p>A string that you provide, which is combined with the service-provided prefix to form the complete role name. If you make multiple requests for the same service, then you must supply a different <code>CustomSuffix</code> for each request. Otherwise the request fails with a duplicate role name error. For example, you could add <code>-1</code> or <code>-debug</code> to the suffix.</p> <p>Some services do not support the <code>CustomSuffix</code> parameter. If you provide an
            optional suffix and the operation fails, try the operation again without the suffix.</p>
          in: query
          name: CustomSuffix
          required: false
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateServiceLinkedRoleResult:
                    $ref: '#/components/schemas/CreateServiceLinkedRoleResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateServiceLinkedRole
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Creates an IAM role that is linked to a specific Amazon Web Services service. The service controls the attached policies and when the role can be deleted. This helps ensure that the service is not broken by an unexpectedly changed or deleted role, which could put your Amazon Web Services resources into an unknown state. Allowing the service to control the role helps improve service stability and proper cleanup when a service and its role are no longer needed. For more information, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">Using service-linked roles</a> in the <i>IAM User Guide</i>. </p> <p>To attach a policy to this service-linked role, you must make the request using the Amazon Web Services service that depends on this role.</p>
      operationId: POST_CreateServiceLinkedRole
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateServiceLinkedRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateServiceLinkedRoleResult:
                    $ref: '#/components/schemas/CreateServiceLinkedRoleResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateServiceLinkedRole
  /?Action=CreateServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Generates a set of credentials consisting of a user name and password that can be used to access the service specified in the request. These credentials are generated by IAM, and can be used only for the specified service. </p> <p>You can have a maximum of two sets of service-specific credentials for each supported service per user.</p> <p>You can create service-specific credentials for CodeCommit and Amazon Keyspaces (for Apache Cassandra).</p> <p>You can reset the password to a new
        service-generated value by calling <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html">Using IAM with CodeCommit: Git credentials, SSH keys, and Amazon Web Services access keys</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateServiceSpecificCredential
      parameters:
        - description: >-
            <p>The name of the IAM user that is to be associated with the credentials. The new service-specific credentials have the same permissions as the associated user except that they can be used only to access the specified service.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters:
            _+=,.@-</p>
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: The name of the Amazon Web Services service that is to be associated with the credentials. The service you specify here is the only service that can be accessed using these credentials.
          in: query
          name: ServiceName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateServiceSpecificCredentialResult:
                    $ref: '#/components/schemas/CreateServiceSpecificCredentialResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: CreateServiceSpecificCredential
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Generates a set of credentials consisting of a user name and password that can be used to access the service specified in the request. These credentials are generated by IAM, and can be used only for the specified service. </p> <p>You can have a maximum of two sets of service-specific credentials for each supported service per user.</p> <p>You can create service-specific credentials for CodeCommit and Amazon Keyspaces (for Apache Cassandra).</p> <p>You can reset the password to a new
        service-generated value by calling <a>ResetServiceSpecificCredential</a>.</p> <p>For more information about service-specific credentials, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_ssh-keys.html">Using IAM with CodeCommit: Git credentials, SSH keys, and Amazon Web Services access keys</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateServiceSpecificCredentialRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateServiceSpecificCredentialResult:
                    $ref: '#/components/schemas/CreateServiceSpecificCredentialResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: CreateServiceSpecificCredential
  /?Action=DeleteServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Deletes the specified service-specific credential.
      operationId: GET_DeleteServiceSpecificCredential
      parameters:
        - description: '<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The unique identifier of the service-specific credential. You can get this value by calling <a>ListServiceSpecificCredentials</a>.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: ServiceSpecificCredentialId
          required: true
          schema:
            maxLength: 128
            minLength: 20
            pattern: '[\w]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteServiceSpecificCredential
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the specified service-specific credential.
      operationId: POST_DeleteServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteServiceSpecificCredentialRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteServiceSpecificCredential
  /?Action=ListServiceSpecificCredentials&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        Returns information about the service-specific credentials associated with the specified IAM user. If none exists, the operation returns an empty list. The service-specific credentials returned by this operation are used only for authenticating the IAM user to a specific service. For more information about using service-specific credentials to authenticate to an Amazon Web Services service, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html">Set up
        service-specific credentials</a> in the CodeCommit User Guide.
      operationId: GET_ListServiceSpecificCredentials
      parameters:
        - description: '<p>The name of the user whose service-specific credentials you want information about. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Filters the returned results to only those for the specified Amazon Web Services service. If not specified, then Amazon Web Services returns service-specific credentials for all services.
          in: query
          name: ServiceName
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListServiceSpecificCredentialsResult:
                    $ref: '#/components/schemas/ListServiceSpecificCredentialsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: ListServiceSpecificCredentials
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        Returns information about the service-specific credentials associated with the specified IAM user. If none exists, the operation returns an empty list. The service-specific credentials returned by this operation are used only for authenticating the IAM user to a specific service. For more information about using service-specific credentials to authenticate to an Amazon Web Services service, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-gc.html">Set up
        service-specific credentials</a> in the CodeCommit User Guide.
      operationId: POST_ListServiceSpecificCredentials
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListServiceSpecificCredentialsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListServiceSpecificCredentialsResult:
                    $ref: '#/components/schemas/ListServiceSpecificCredentialsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceNotSupportedException'
          description: ServiceNotSupportedException
      x-aws-operation-name: ListServiceSpecificCredentials
  /?Action=ListSigningCertificates&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Returns information about the signing certificates associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the
        request for this operation. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p>
      operationId: GET_ListSigningCertificates
      parameters:
        - description: '<p>The name of the IAM user whose signing certificates you want to examine.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListSigningCertificatesResult:
                    $ref: '#/components/schemas/ListSigningCertificatesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListSigningCertificates
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Returns information about the signing certificates associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>Although each user is limited to a small number of signing certificates, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the
        request for this operation. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p>
      operationId: POST_ListSigningCertificates
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSigningCertificatesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListSigningCertificatesResult:
                    $ref: '#/components/schemas/ListSigningCertificatesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListSigningCertificates
  /?Action=ResetServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Resets the password for a service-specific credential. The new password is Amazon Web Services generated and cryptographically strong. It cannot be configured by the user. Resetting the password immediately invalidates the previous password associated with this user.
      operationId: GET_ResetServiceSpecificCredential
      parameters:
        - description: '<p>The name of the IAM user associated with the service-specific credential. If this value is not specified, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: ServiceSpecificCredentialId
          required: true
          schema:
            maxLength: 128
            minLength: 20
            pattern: '[\w]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ResetServiceSpecificCredentialResult:
                    $ref: '#/components/schemas/ResetServiceSpecificCredentialResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ResetServiceSpecificCredential
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Resets the password for a service-specific credential. The new password is Amazon Web Services generated and cryptographically strong. It cannot be configured by the user. Resetting the password immediately invalidates the previous password associated with this user.
      operationId: POST_ResetServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResetServiceSpecificCredentialRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ResetServiceSpecificCredentialResult:
                    $ref: '#/components/schemas/ResetServiceSpecificCredentialResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ResetServiceSpecificCredential
  /?Action=UpdateServiceSpecificCredential&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Sets the status of a service-specific credential to <code>Active</code> or <code>Inactive</code>. Service-specific credentials that are inactive cannot be used for authentication to the service. This operation can be used to disable a user's service-specific credential as part of a credential rotation work flow.
      operationId: GET_UpdateServiceSpecificCredential
      parameters:
        - description: '<p>The name of the IAM user associated with the service-specific credential. If you do not specify this value, then the operation assumes the user whose credentials are used to call the operation.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The unique identifier of the service-specific credential.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: ServiceSpecificCredentialId
          required: true
          schema:
            maxLength: 128
            minLength: 20
            pattern: '[\w]+'
            type: string
        - description: The status to be assigned to the service-specific credential.
          in: query
          name: Status
          required: true
          schema:
            enum:
              - Active
              - Inactive
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateServiceSpecificCredential
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Sets the status of a service-specific credential to <code>Active</code> or <code>Inactive</code>. Service-specific credentials that are inactive cannot be used for authentication to the service. This operation can be used to disable a user's service-specific credential as part of a credential rotation work flow.
      operationId: POST_UpdateServiceSpecificCredential
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateServiceSpecificCredentialRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateServiceSpecificCredential
  /?Action=UpdateSigningCertificate&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Changes the status of the specified user signing certificate from active to disabled, or vice versa. This operation can be used to disable an IAM user's signing certificate as part of a certificate rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can
        use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p>
      operationId: GET_UpdateSigningCertificate
      parameters:
        - description: '<p>The name of the IAM user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The ID of the signing certificate you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: CertificateId
          required: true
          schema:
            maxLength: 128
            minLength: 24
            pattern: '[\w]+'
            type: string
        - description: ' The status you want to assign to the certificate. <code>Active</code> means that the certificate can be used for programmatic calls to Amazon Web Services <code>Inactive</code> means that the certificate cannot be used.'
          in: query
          name: Status
          required: true
          schema:
            enum:
              - Active
              - Inactive
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateSigningCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Changes the status of the specified user signing certificate from active to disabled, or vice versa. This operation can be used to disable an IAM user's signing certificate as part of a certificate rotation work flow.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can
        use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p>
      operationId: POST_UpdateSigningCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSigningCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateSigningCertificate
  /?Action=UploadSigningCertificate&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Uploads an X.509 signing certificate and associates it with the specified IAM user. Some Amazon Web Services services require you to use certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>.</p> <p>For information about when you would use an X.509 signing certificate, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Managing server
        certificates in IAM</a> in the <i>IAM User Guide</i>.</p> <p>If the <code>UserName</code> is not specified, the IAM user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p> <note> <p>Because the
        body of an X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, see <a href="https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing Amazon Web Services API requests</a> in the <i>Amazon Web Services General Reference</i>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_UploadSigningCertificate
      parameters:
        - description: '<p>The name of the user the signing certificate is for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The contents of the signing certificate.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li>
            <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: CertificateBody
          required: true
          schema:
            maxLength: 16384
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  UploadSigningCertificateResult:
                    $ref: '#/components/schemas/UploadSigningCertificateResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedCertificateException'
          description: MalformedCertificateException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCertificateException'
          description: InvalidCertificateException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateCertificateException'
          description: DuplicateCertificateException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '486':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UploadSigningCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Uploads an X.509 signing certificate and associates it with the specified IAM user. Some Amazon Web Services services require you to use certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is <code>Active</code>.</p> <p>For information about when you would use an X.509 signing certificate, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Managing server
        certificates in IAM</a> in the <i>IAM User Guide</i>.</p> <p>If the <code>UserName</code> is not specified, the IAM user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p> <note> <p>Because the
        body of an X.509 certificate can be large, you should use POST rather than GET when calling <code>UploadSigningCertificate</code>. For information about setting up signatures and authorization through the API, see <a href="https://docs.aws.amazon.com/general/latest/gr/signing_aws_api_requests.html">Signing Amazon Web Services API requests</a> in the <i>Amazon Web Services General Reference</i>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_UploadSigningCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UploadSigningCertificateRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  UploadSigningCertificateResult:
                    $ref: '#/components/schemas/UploadSigningCertificateResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedCertificateException'
          description: MalformedCertificateException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidCertificateException'
          description: InvalidCertificateException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateCertificateException'
          description: DuplicateCertificateException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '486':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UploadSigningCertificate
  /?Action=DeleteSigningCertificate&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Deletes a signing certificate associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated IAM users.</p>
      operationId: GET_DeleteSigningCertificate
      parameters:
        - description: '<p>The name of the user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>
          in: query
          name: CertificateId
          required: true
          schema:
            maxLength: 128
            minLength: 24
            pattern: '[\w]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteSigningCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes a signing certificate associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated IAM users.</p>
      operationId: POST_DeleteSigningCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSigningCertificateRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteSigningCertificate
  /?Action=DeleteSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Deletes the specified SSH public key.</p> <p>The SSH public key deleted by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_DeleteSSHPublicKey
      parameters:
        - description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: SSHPublicKeyId
          required: true
          schema:
            maxLength: 128
            minLength: 20
            pattern: '[\w]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteSSHPublicKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified SSH public key.</p> <p>The SSH public key deleted by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_DeleteSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteSSHPublicKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: DeleteSSHPublicKey
  /?Action=GetServerCertificate&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Retrieves information about the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with server certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.</p>
      operationId: GET_GetServerCertificate
      parameters:
        - description: '<p>The name of the server certificate you want to retrieve information about.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: ServerCertificateName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetServerCertificateResult:
                    $ref: '#/components/schemas/GetServerCertificateResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServerCertificate
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about the specified server certificate stored in IAM.</p> <p>For more information about working with server certificates, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html">Working with server certificates</a> in the <i>IAM User Guide</i>. This topic includes a list of Amazon Web Services services that can use the server certificates that you manage with IAM.</p>
      operationId: POST_GetServerCertificate
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetServerCertificateRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetServerCertificateResult:
                    $ref: '#/components/schemas/GetServerCertificateResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetServerCertificate
  /?Action=ListSSHPublicKeys&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Returns information about the SSH public keys associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>The SSH public keys returned by this operation are used only for authenticating the IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH
        connections</a> in the <i>CodeCommit User Guide</i>.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListSSHPublicKeys
      parameters:
        - description: '<p>The name of the IAM user to list SSH public keys for. If none is specified, the <code>UserName</code> field is determined implicitly based on the Amazon Web Services access key used to sign the request.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListSSHPublicKeysResult:
                    $ref: '#/components/schemas/ListSSHPublicKeysResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ListSSHPublicKeys
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Returns information about the SSH public keys associated with the specified IAM user. If none exists, the operation returns an empty list.</p> <p>The SSH public keys returned by this operation are used only for authenticating the IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH
        connections</a> in the <i>CodeCommit User Guide</i>.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListSSHPublicKeys
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListSSHPublicKeysRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListSSHPublicKeysResult:
                    $ref: '#/components/schemas/ListSSHPublicKeysResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: ListSSHPublicKeys
  /?Action=UpdateSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Sets the status of an IAM user's SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This operation can be used to disable a user's SSH public key as part of a key rotation work flow.</p> <p>The SSH public key affected by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_UpdateSSHPublicKey
      parameters:
        - description: '<p>The name of the IAM user associated with the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The unique identifier for the SSH public key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: SSHPublicKeyId
          required: true
          schema:
            maxLength: 128
            minLength: 20
            pattern: '[\w]+'
            type: string
        - description: The status to assign to the SSH public key. <code>Active</code> means that the key can be used for authentication with an CodeCommit repository. <code>Inactive</code> means that the key cannot be used.
          in: query
          name: Status
          required: true
          schema:
            enum:
              - Active
              - Inactive
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateSSHPublicKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Sets the status of an IAM user's SSH public key to active or inactive. SSH public keys that are inactive cannot be used for authentication. This operation can be used to disable a user's SSH public key as part of a key rotation work flow.</p> <p>The SSH public key affected by this operation is used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a
        href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_UpdateSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateSSHPublicKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: UpdateSSHPublicKey
  /?Action=UploadSSHPublicKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Uploads an SSH public key and associates it with the specified IAM user.</p> <p>The SSH public key uploaded by this operation can be used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: GET_UploadSSHPublicKey
      parameters:
        - description: '<p>The name of the IAM user to associate the SSH public key with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The SSH public key. The public key must be encoded in ssh-rsa format or PEM format. The minimum bit-length of the public key is 2048 bits. For example, you can generate a 2048-bit key, and the resulting PEM file is 1679 bytes long.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character
            (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: SSHPublicKeyBody
          required: true
          schema:
            maxLength: 16384
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  UploadSSHPublicKeyResult:
                    $ref: '#/components/schemas/UploadSSHPublicKeyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidPublicKeyException'
          description: InvalidPublicKeyException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateSSHPublicKeyException'
          description: DuplicateSSHPublicKeyException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: UploadSSHPublicKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Uploads an SSH public key and associates it with the specified IAM user.</p> <p>The SSH public key uploaded by this operation can be used only for authenticating the associated IAM user to an CodeCommit repository. For more information about using SSH keys to authenticate to an CodeCommit repository, see <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-credentials-ssh.html">Set up CodeCommit for SSH connections</a> in the <i>CodeCommit User Guide</i>.</p>
      operationId: POST_UploadSSHPublicKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UploadSSHPublicKeyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  UploadSSHPublicKeyResult:
                    $ref: '#/components/schemas/UploadSSHPublicKeyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidPublicKeyException'
          description: InvalidPublicKeyException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DuplicateSSHPublicKeyException'
          description: DuplicateSSHPublicKeyException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnrecognizedPublicKeyEncodingException'
          description: UnrecognizedPublicKeyEncodingException
      x-aws-operation-name: UploadSSHPublicKey
  /?Action=ListPolicyTags&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Lists the tags that are attached to the specified IAM customer managed policy. The returned list of tags is sorted by tag key. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListPolicyTags
      parameters:
        - description: '<p>The ARN of the IAM customer managed policy whose tags you want to see.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPolicyTagsResult:
                    $ref: '#/components/schemas/ListPolicyTagsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListPolicyTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified IAM customer managed policy. The returned list of tags is sorted by tag key. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListPolicyTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPolicyTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPolicyTagsResult:
                    $ref: '#/components/schemas/ListPolicyTagsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: ListPolicyTags
  /?Action=ListPolicyVersions&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Lists information about the versions of the specified managed policy, including the version that is currently set as the policy's default version.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ListPolicyVersions
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPolicyVersionsResult:
                    $ref: '#/components/schemas/ListPolicyVersionsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicyVersions
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists information about the versions of the specified managed policy, including the version that is currently set as the policy's default version.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ListPolicyVersions
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPolicyVersionsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPolicyVersionsResult:
                    $ref: '#/components/schemas/ListPolicyVersionsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicyVersions
  /?Action=DeactivateMFADevice&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</p> <p>For more information about creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Enabling a virtual multi-factor authentication (MFA) device</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeactivateMFADevice
      parameters:
        - description: '<p>The name of the user whose MFA device you want to deactivate.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
          in: query
          name: SerialNumber
          required: true
          schema:
            maxLength: 256
            minLength: 9
            pattern: '[\w+=/:,.@-]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeactivateMFADevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deactivates the specified MFA device and removes it from association with the user name for which it was originally enabled.</p> <p>For more information about creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Enabling a virtual multi-factor authentication (MFA) device</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeactivateMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeactivateMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeactivateMFADevice
  /?Action=EnableMFADevice&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Enables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.
      operationId: GET_EnableMFADevice
      parameters:
        - description: '<p>The name of the IAM user for whom you want to enable the MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: =,.@:/-</p>'
          in: query
          name: SerialNumber
          required: true
          schema:
            maxLength: 256
            minLength: 9
            pattern: '[\w+=/:,.@-]+'
            type: string
        - description: >-
            <p>An authentication code emitted by the device. </p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this happens, you
            can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>
          in: query
          name: AuthenticationCode1
          required: true
          schema:
            maxLength: 6
            minLength: 6
            pattern: '[\d]+'
            type: string
        - description: >-
            <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a string of six digits.</p> <important> <p>Submit your request immediately after generating the authentication codes. If you generate the codes and then wait too long to submit the request, the MFA device successfully associates with the user but the MFA device becomes out of sync. This happens because time-based one-time passwords (TOTP) expire after a short period of time. If this
            happens, you can <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_sync.html">resync the device</a>.</p> </important>
          in: query
          name: AuthenticationCode2
          required: true
          schema:
            maxLength: 6
            minLength: 6
            pattern: '[\d]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: EnableMFADevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Enables the specified MFA device and associates it with the specified IAM user. When enabled, the MFA device is required for every subsequent login by the IAM user associated with the device.
      operationId: POST_EnableMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/EnableMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: EnableMFADevice
  /?Action=ListMFADeviceTags&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Lists the tags that are attached to the specified IAM virtual multi-factor authentication (MFA) device. The returned list of tags is sorted by tag key. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_ListMFADeviceTags
      parameters:
        - description: '<p>The unique identifier for the IAM virtual MFA device whose tags you want to see. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: SerialNumber
          required: true
          schema:
            maxLength: 256
            minLength: 9
            pattern: '[\w+=/:,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListMFADeviceTagsResult:
                    $ref: '#/components/schemas/ListMFADeviceTagsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADeviceTags
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the tags that are attached to the specified IAM virtual multi-factor authentication (MFA) device. The returned list of tags is sorted by tag key. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_ListMFADeviceTags
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListMFADeviceTagsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListMFADeviceTagsResult:
                    $ref: '#/components/schemas/ListMFADeviceTagsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADeviceTags
  /?Action=ListMFADevices&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Lists the MFA devices for an IAM user. If the request includes a IAM user name, then this operation lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request for this operation.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListMFADevices
      parameters:
        - description: '<p>The name of the user whose MFA devices you want to list.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListMFADevicesResult:
                    $ref: '#/components/schemas/ListMFADevicesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADevices
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the MFA devices for an IAM user. If the request includes a IAM user name, then this operation lists all the MFA devices associated with the specified user. If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request for this operation.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListMFADevices
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListMFADevicesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListMFADevicesResult:
                    $ref: '#/components/schemas/ListMFADevicesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListMFADevices
  /?Action=ResyncMFADevice&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Synchronizes the specified MFA device with its IAM resource object on the Amazon Web Services servers.</p> <p>For more information about creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a virtual MFA device</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_ResyncMFADevice
      parameters:
        - description: '<p>The name of the user whose MFA device you want to resynchronize.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>Serial number that uniquely identifies the MFA device.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: SerialNumber
          required: true
          schema:
            maxLength: 256
            minLength: 9
            pattern: '[\w+=/:,.@-]+'
            type: string
        - description: <p>An authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
          in: query
          name: AuthenticationCode1
          required: true
          schema:
            maxLength: 6
            minLength: 6
            pattern: '[\d]+'
            type: string
        - description: <p>A subsequent authentication code emitted by the device.</p> <p>The format for this parameter is a sequence of six digits.</p>
          in: query
          name: AuthenticationCode2
          required: true
          schema:
            maxLength: 6
            minLength: 6
            pattern: '[\d]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ResyncMFADevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Synchronizes the specified MFA device with its IAM resource object on the Amazon Web Services servers.</p> <p>For more information about creating and working with virtual MFA devices, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html">Using a virtual MFA device</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_ResyncMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ResyncMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidAuthenticationCodeException'
          description: InvalidAuthenticationCodeException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ResyncMFADevice
  /?Action=TagMFADevice&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Adds one or more tags to an IAM virtual multi-factor authentication (MFA) device. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key
        name <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM virtual MFA device that has a specified tag attached. For examples of policies that show how to use tags to control access, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note> <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User
        Guide</i>.</p> </li> <li> <p>Amazon Web Services always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note>
      operationId: GET_TagMFADevice
      parameters:
        - description: '<p>The unique identifier for the IAM virtual MFA device to which you want to add tags. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: SerialNumber
          required: true
          schema:
            maxLength: 256
            minLength: 9
            pattern: '[\w+=/:,.@-]+'
            type: string
        - description: The list of tags that you want to attach to the IAM virtual MFA device. Each tag consists of a key name and an associated value.
          in: query
          name: Tags
          required: true
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: member
            maxItems: 50
            type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagMFADevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Adds one or more tags to an IAM virtual multi-factor authentication (MFA) device. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key
        name <i>Project</i> and the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM virtual MFA device that has a specified tag attached. For examples of policies that show how to use tags to control access, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note> <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User
        Guide</i>.</p> </li> <li> <p>Amazon Web Services always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note>
      operationId: POST_TagMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagMFADevice
  /?Action=UntagMFADevice&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Removes the specified tags from the IAM virtual multi-factor authentication (MFA) device. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagMFADevice
      parameters:
        - description: '<p>The unique identifier for the IAM virtual MFA device from which you want to remove tags. For virtual MFA devices, the serial number is the same as the ARN.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: SerialNumber
          required: true
          schema:
            maxLength: 256
            minLength: 9
            pattern: '[\w+=/:,.@-]+'
            type: string
        - description: A list of key names as a simple array of strings. The tags with matching keys are removed from the specified instance profile.
          in: query
          name: TagKeys
          required: true
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/tagKeyType'
                - xml:
                    name: member
            maxItems: 50
            type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagMFADevice
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the IAM virtual multi-factor authentication (MFA) device. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagMFADevice
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagMFADeviceRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagMFADevice
  /?Action=CreateLoginProfile&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Creates a password for the specified IAM user. A password allows an IAM user to access Amazon Web Services services through the Amazon Web Services Management Console.</p> <p>You can use the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM console to create a password for any IAM user. Use <a>ChangePassword</a> to update your own existing password in the <b>My Security Credentials</b> page in the Amazon Web Services Management Console.</p> <p>For more information
        about managing passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreateLoginProfile
      parameters:
        - description: '<p>The name of the IAM user to create a password for. The user must already exist.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The new password for the user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (<code>\u0020</code>) through the end of the ASCII character range (<code>\u00FF</code>). You can also include the tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>) characters. Any of
            these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.</p>
          in: query
          name: Password
          required: true
          schema:
            format: password
            maxLength: 128
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
        - description: Specifies whether the user is required to set a new password on next sign-in.
          in: query
          name: PasswordResetRequired
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateLoginProfileResult:
                    $ref: '#/components/schemas/CreateLoginProfileResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateLoginProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Creates a password for the specified IAM user. A password allows an IAM user to access Amazon Web Services services through the Amazon Web Services Management Console.</p> <p>You can use the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM console to create a password for any IAM user. Use <a>ChangePassword</a> to update your own existing password in the <b>My Security Credentials</b> page in the Amazon Web Services Management Console.</p> <p>For more information
        about managing passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreateLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLoginProfileRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateLoginProfileResult:
                    $ref: '#/components/schemas/CreateLoginProfileResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateLoginProfile
  /?Action=DeleteLoginProfile&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Deletes the password for the specified IAM user, which terminates the user's ability to access Amazon Web Services services through the Amazon Web Services Management Console.</p> <p>You can use the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM console to delete a password for any IAM user. You can use <a>ChangePassword</a> to update, but not delete, your own password in the <b>My Security Credentials</b> page in the Amazon Web Services Management Console.</p>
        <important> <p> Deleting a user's password does not prevent a user from accessing Amazon Web Services through the command line interface or the API. To prevent all user access, you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </p> </important>
      operationId: GET_DeleteLoginProfile
      parameters:
        - description: '<p>The name of the user whose password you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteLoginProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Deletes the password for the specified IAM user, which terminates the user's ability to access Amazon Web Services services through the Amazon Web Services Management Console.</p> <p>You can use the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM console to delete a password for any IAM user. You can use <a>ChangePassword</a> to update, but not delete, your own password in the <b>My Security Credentials</b> page in the Amazon Web Services Management Console.</p>
        <important> <p> Deleting a user's password does not prevent a user from accessing Amazon Web Services through the command line interface or the API. To prevent all user access, you must also either make any access keys inactive or delete them. For more information about making keys inactive or deleting them, see <a>UpdateAccessKey</a> and <a>DeleteAccessKey</a>. </p> </important>
      operationId: POST_DeleteLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteLoginProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteLoginProfile
  /?Action=GetLoginProfile&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Retrieves the user name for the specified IAM user. A login profile is created when you create a password for the user to access the Amazon Web Services Management Console. If the user does not exist or does not have a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.</p> <p>If you create an IAM user with access to the console, the <code>CreateDate</code> reflects the date you created the initial password for the user.</p> <p>If you create an IAM user with
        programmatic access, and then later add a password for the user to access the Amazon Web Services Management Console, the <code>CreateDate</code> reflects the initial password creation date. A user with programmatic access does not have a login profile unless you create a password for the user to access the Amazon Web Services Management Console.</p>
      operationId: GET_GetLoginProfile
      parameters:
        - description: '<p>The name of the user whose login profile you want to retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetLoginProfileResult:
                    $ref: '#/components/schemas/GetLoginProfileResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetLoginProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves the user name for the specified IAM user. A login profile is created when you create a password for the user to access the Amazon Web Services Management Console. If the user does not exist or does not have a password, the operation returns a 404 (<code>NoSuchEntity</code>) error.</p> <p>If you create an IAM user with access to the console, the <code>CreateDate</code> reflects the date you created the initial password for the user.</p> <p>If you create an IAM user with
        programmatic access, and then later add a password for the user to access the Amazon Web Services Management Console, the <code>CreateDate</code> reflects the initial password creation date. A user with programmatic access does not have a login profile unless you create a password for the user to access the Amazon Web Services Management Console.</p>
      operationId: POST_GetLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetLoginProfileRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetLoginProfileResult:
                    $ref: '#/components/schemas/GetLoginProfileResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetLoginProfile
  /?Action=UpdateLoginProfile&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Changes the password for the specified IAM user. You can use the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM console to change the password for any IAM user. Use <a>ChangePassword</a> to change your own password in the <b>My Security Credentials</b> page in the Amazon Web Services Management Console.</p> <p>For more information about modifying passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_UpdateLoginProfile
      parameters:
        - description: '<p>The name of the user whose password you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The new password for the specified IAM user.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p>
            </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul> <p>However, the format can be further restricted by the account administrator by setting a password policy on the Amazon Web Services account. For more information, see <a>UpdateAccountPasswordPolicy</a>.</p>
          in: query
          name: Password
          required: false
          schema:
            format: password
            maxLength: 128
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
        - description: Allows this new password to be used only once by requiring the specified IAM user to set a new password on next sign-in.
          in: query
          name: PasswordResetRequired
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateLoginProfile
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Changes the password for the specified IAM user. You can use the CLI, the Amazon Web Services API, or the <b>Users</b> page in the IAM console to change the password for any IAM user. Use <a>ChangePassword</a> to change your own password in the <b>My Security Credentials</b> page in the Amazon Web Services Management Console.</p> <p>For more information about modifying passwords, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html">Managing
        passwords</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_UpdateLoginProfile
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateLoginProfileRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityTemporarilyUnmodifiableException'
          description: EntityTemporarilyUnmodifiableException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PasswordPolicyViolationException'
          description: PasswordPolicyViolationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateLoginProfile
  /?Action=ListInstanceProfilesForRole&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Lists the instance profiles that have the specified associated IAM role. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About instance profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListInstanceProfilesForRole
      parameters:
        - description: '<p>The name of the role to list instance profiles for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListInstanceProfilesForRoleResult:
                    $ref: '#/components/schemas/ListInstanceProfilesForRoleResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfilesForRole
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the instance profiles that have the specified associated IAM role. If there are none, the operation returns an empty list. For more information about instance profiles, go to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html">About instance profiles</a>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListInstanceProfilesForRole
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListInstanceProfilesForRoleRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListInstanceProfilesForRoleResult:
                    $ref: '#/components/schemas/ListInstanceProfilesForRoleResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListInstanceProfilesForRole
  /?Action=ListGroupsForUser&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Lists the IAM groups that the specified IAM user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListGroupsForUser
      parameters:
        - description: '<p>The name of the user to list groups for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListGroupsForUserResult:
                    $ref: '#/components/schemas/ListGroupsForUserResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupsForUser
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists the IAM groups that the specified IAM user belongs to.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListGroupsForUser
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGroupsForUserRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListGroupsForUserResult:
                    $ref: '#/components/schemas/ListGroupsForUserResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupsForUser
  /?Action=ListEntitiesForPolicy&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Lists all IAM users, groups, and roles that the specified managed policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_ListEntitiesForPolicy
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy for which you want the versions.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: <p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>
          in: query
          name: EntityFilter
          required: false
          schema:
            enum:
              - User
              - Role
              - Group
              - LocalManagedPolicy
              - AWSManagedPolicy
            type: string
        - description: >-
            <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all entities.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character
            (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
          in: query
          name: PathPrefix
          required: false
          schema:
            maxLength: 512
            minLength: 1
            pattern: (\u002F)|(\u002F[\u0021-\u007F]+\u002F)
            type: string
        - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
          in: query
          name: PolicyUsageFilter
          required: false
          schema:
            description: <p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
            enum:
              - PermissionsPolicy
              - PermissionsBoundary
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListEntitiesForPolicyResult:
                    $ref: '#/components/schemas/ListEntitiesForPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListEntitiesForPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Lists all IAM users, groups, and roles that the specified managed policy is attached to.</p> <p>You can use the optional <code>EntityFilter</code> parameter to limit the results to a particular type of entity (users, groups, or roles). For example, to list only the roles that are attached to the specified policy, set <code>EntityFilter</code> to <code>Role</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_ListEntitiesForPolicy
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListEntitiesForPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListEntitiesForPolicyResult:
                    $ref: '#/components/schemas/ListEntitiesForPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListEntitiesForPolicy
  /?Action=GetContextKeysForCustomPolicy&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Gets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value specified in an IAM
        policy. Use <code>GetContextKeysForCustomPolicy</code> to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>. Note that all parameters are shown in unencoded form here for clarity but must be URL encoded to be included as a part of a real HTML request.</p>
      operationId: GET_GetContextKeysForCustomPolicy
      parameters:
        - description: >-
            <p>A list of policies for which you want the list of context keys referenced in those policies. Each document is specified as a string containing the complete, valid JSON text of an IAM policy.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII
            character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyInputList
          required: true
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/policyDocumentType'
                - xml:
                    name: member
            type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetContextKeysForCustomPolicyResult:
                    $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForCustomPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Gets a list of all of the context keys referenced in the input policies. The policies are supplied as a list of one or more strings. To get the context keys from policies associated with an IAM user, group, or role, use <a>GetContextKeysForPrincipalPolicy</a>.</p> <p>Context keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a value specified in an IAM
        policy. Use <code>GetContextKeysForCustomPolicy</code> to understand what key names and values you must supply when you call <a>SimulateCustomPolicy</a>. Note that all parameters are shown in unencoded form here for clarity but must be URL encoded to be included as a part of a real HTML request.</p>
      operationId: POST_GetContextKeysForCustomPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetContextKeysForCustomPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetContextKeysForCustomPolicyResult:
                    $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForCustomPolicy
  /?Action=GetContextKeysForPrincipalPolicy&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Gets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of.</p> <p>You can optionally include a list of one or more additional policies, specified as strings. If you want to include <i>only</i> a list of policies by string, use
        <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b> This operation discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a
        value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a> to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>
      operationId: GET_GetContextKeysForPrincipalPolicy
      parameters:
        - description: >-
            <p>The ARN of a user, group, or role whose policies contain the context keys that you want listed. If you specify a user, the list includes context keys that are found in all policies that are attached to the user. The list also includes all groups that the user is a member of. If you pick a group or a role, then it includes only those context keys that are found in policies attached to that entity. Note that all parameters are shown in unencoded form here for clarity, but must be
            URL encoded to be included as a part of a real HTML request.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicySourceArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: >-
            <p>An optional list of additional policies for which you want the list of context keys that are referenced.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1
            Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyInputList
          required: false
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/policyDocumentType'
                - xml:
                    name: member
            type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetContextKeysForPrincipalPolicyResult:
                    $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForPrincipalPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Gets a list of all of the context keys referenced in all the IAM policies that are attached to the specified IAM entity. The entity can be an IAM user, group, or role. If you specify a user, then the request also includes all of the policies attached to groups that the user is a member of.</p> <p>You can optionally include a list of one or more additional policies, specified as strings. If you want to include <i>only</i> a list of policies by string, use
        <a>GetContextKeysForCustomPolicy</a> instead.</p> <p> <b>Note:</b> This operation discloses information about the permissions granted to other users. If you do not want users to see other user's permissions, then consider allowing them to use <a>GetContextKeysForCustomPolicy</a> instead.</p> <p>Context keys are variables maintained by Amazon Web Services and its services that provide details about the context of an API query request. Context keys can be evaluated by testing against a
        value in an IAM policy. Use <a>GetContextKeysForPrincipalPolicy</a> to understand what key names and values you must supply when you call <a>SimulatePrincipalPolicy</a>.</p>
      operationId: POST_GetContextKeysForPrincipalPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetContextKeysForPrincipalPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetContextKeysForPrincipalPolicyResult:
                    $ref: '#/components/schemas/GetContextKeysForPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
      x-aws-operation-name: GetContextKeysForPrincipalPolicy
  /?Action=ListAttachedRolePolicies&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Lists all managed policies that are attached to the specified IAM role.</p> <p>An IAM role can also have inline policies embedded with it. To list the inline policies for a role, use <a>ListRolePolicies</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the operation returns an empty list.</p>
      operationId: GET_ListAttachedRolePolicies
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the role to list attached policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character
            (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
          in: query
          name: PathPrefix
          required: false
          schema:
            maxLength: 512
            minLength: 1
            pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAttachedRolePoliciesResult:
                    $ref: '#/components/schemas/ListAttachedRolePoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedRolePolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists all managed policies that are attached to the specified IAM role.</p> <p>An IAM role can also have inline policies embedded with it. To list the inline policies for a role, use <a>ListRolePolicies</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified role (or none that match the specified path prefix), the operation returns an empty list.</p>
      operationId: POST_ListAttachedRolePolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAttachedRolePoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAttachedRolePoliciesResult:
                    $ref: '#/components/schemas/ListAttachedRolePoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedRolePolicies
  /?Action=ListAttachedUserPolicies&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Lists all managed policies that are attached to the specified IAM user.</p> <p>An IAM user can also have inline policies embedded with it. To list the inline policies for a user, use <a>ListUserPolicies</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>
      operationId: GET_ListAttachedUserPolicies
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the user to list attached policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character
            (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
          in: query
          name: PathPrefix
          required: false
          schema:
            maxLength: 512
            minLength: 1
            pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAttachedUserPoliciesResult:
                    $ref: '#/components/schemas/ListAttachedUserPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedUserPolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists all managed policies that are attached to the specified IAM user.</p> <p>An IAM user can also have inline policies embedded with it. To list the inline policies for a user, use <a>ListUserPolicies</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>
      operationId: POST_ListAttachedUserPolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAttachedUserPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAttachedUserPoliciesResult:
                    $ref: '#/components/schemas/ListAttachedUserPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedUserPolicies
  /?Action=ListAttachedGroupPolicies&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Lists all managed policies that are attached to the specified IAM group.</p> <p>An IAM group can also have inline policies embedded with it. To list the inline policies for a group, use <a>ListGroupPolicies</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>
      operationId: GET_ListAttachedGroupPolicies
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the group to list attached policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character
            (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p>
          in: query
          name: PathPrefix
          required: false
          schema:
            maxLength: 512
            minLength: 1
            pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAttachedGroupPoliciesResult:
                    $ref: '#/components/schemas/ListAttachedGroupPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedGroupPolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists all managed policies that are attached to the specified IAM group.</p> <p>An IAM group can also have inline policies embedded with it. To list the inline policies for a group, use <a>ListGroupPolicies</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the <code>MaxItems</code> and
        <code>Marker</code> parameters. You can use the <code>PathPrefix</code> parameter to limit the list of policies to only those matching the specified path prefix. If there are no policies attached to the specified group (or none that match the specified path prefix), the operation returns an empty list.</p>
      operationId: POST_ListAttachedGroupPolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAttachedGroupPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAttachedGroupPoliciesResult:
                    $ref: '#/components/schemas/ListAttachedGroupPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAttachedGroupPolicies
  /?Action=GetAccountSummary&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Retrieves information about IAM entity usage and IAM quotas in the Amazon Web Services account.</p> <p> For information about IAM quotas, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetAccountSummary
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccountSummaryResult:
                    $ref: '#/components/schemas/GetAccountSummaryResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountSummary
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Retrieves information about IAM entity usage and IAM quotas in the Amazon Web Services account.</p> <p> For information about IAM quotas, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetAccountSummary
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccountSummaryResult:
                    $ref: '#/components/schemas/GetAccountSummaryResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountSummary
  /?Action=GetAccountPasswordPolicy&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Retrieves the password policy for the Amazon Web Services account. This tells you the complexity requirements and mandatory rotation periods for the IAM user passwords in your account. For more information about using a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM password policy</a>.
      operationId: GET_GetAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccountPasswordPolicyResult:
                    $ref: '#/components/schemas/GetAccountPasswordPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountPasswordPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves the password policy for the Amazon Web Services account. This tells you the complexity requirements and mandatory rotation periods for the IAM user passwords in your account. For more information about using a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM password policy</a>.
      operationId: POST_GetAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccountPasswordPolicyResult:
                    $ref: '#/components/schemas/GetAccountPasswordPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountPasswordPolicy
  /?Action=UpdateAccountPasswordPolicy&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Updates the password policy settings for the Amazon Web Services account.</p> <note> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that
        parameter when you invoke the operation.</p> </note> <p> For more information about using a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM password policy</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_UpdateAccountPasswordPolicy
      parameters:
        - description: <p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>
          in: query
          name: MinimumPasswordLength
          required: false
          schema:
            maximum: 128
            minimum: 6
            type: integer
        - description: '<p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | ''</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>'
          in: query
          name: RequireSymbols
          required: false
          schema:
            type: boolean
        - description: <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>
          in: query
          name: RequireNumbers
          required: false
          schema:
            type: boolean
        - description: <p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>
          in: query
          name: RequireUppercaseCharacters
          required: false
          schema:
            type: boolean
        - description: <p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>
          in: query
          name: RequireLowercaseCharacters
          required: false
          schema:
            type: boolean
        - description: >-
            <p> Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html">Permitting IAM users to change their own passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM
            users in the account do not automatically have permissions to change their own password.</p>
          in: query
          name: AllowUsersToChangePassword
          required: false
          schema:
            type: boolean
        - description: <p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>
          in: query
          name: MaxPasswordAge
          required: false
          schema:
            maximum: 1095
            minimum: 1
            type: integer
        - description: <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>
          in: query
          name: PasswordReusePrevention
          required: false
          schema:
            maximum: 24
            minimum: 1
            type: integer
        - description: >-
            <p> Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the
            user.</p> <note> <p> In the Amazon Web Services Management Console, the custom password policy option <b>Allow users to change their own password</b> gives IAM users permissions to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM. IAM users with <code>iam:ChangePassword</code>
            permission and active access keys can reset their own expired console password using the CLI or API.</p> </note>
          in: query
          name: HardExpiry
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccountPasswordPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Updates the password policy settings for the Amazon Web Services account.</p> <note> <p>This operation does not support partial updates. No parameters are required, but if you do not specify a parameter, that parameter's value reverts to its default value. See the <b>Request Parameters</b> section for each parameter's default value. Also note that some parameters do not allow the default parameter to be explicitly set. Instead, to invoke the default value, do not include that
        parameter when you invoke the operation.</p> </note> <p> For more information about using a password policy, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html">Managing an IAM password policy</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_UpdateAccountPasswordPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateAccountPasswordPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccountPasswordPolicy
  /?Action=DeleteAccountPasswordPolicy&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Deletes the password policy for the Amazon Web Services account. There are no parameters.
      operationId: GET_DeleteAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccountPasswordPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes the password policy for the Amazon Web Services account. There are no parameters.
      operationId: POST_DeleteAccountPasswordPolicy
      parameters: []
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccountPasswordPolicy
  /?Action=GetAccountAuthorizationDetails&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Retrieves information about all IAM users, groups, roles, and policies in your Amazon Web Services account, including their relationships to one another. Use this operation to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back
        to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: GET_GetAccountAuthorizationDetails
      parameters:
        - description: <p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>
          in: query
          name: Filter
          required: false
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/EntityType'
                - xml:
                    name: member
            type: array
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccountAuthorizationDetailsResult:
                    $ref: '#/components/schemas/GetAccountAuthorizationDetailsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountAuthorizationDetails
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves information about all IAM users, groups, roles, and policies in your Amazon Web Services account, including their relationships to one another. Use this operation to obtain a snapshot of the configuration of IAM permissions (users, groups, roles, and policies) in your account.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back
        to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide similar functionality.</p> </note> <p>You can optionally filter the results using the <code>Filter</code> parameter. You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p>
      operationId: POST_GetAccountAuthorizationDetails
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAccountAuthorizationDetailsRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccountAuthorizationDetailsResult:
                    $ref: '#/components/schemas/GetAccountAuthorizationDetailsResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetAccountAuthorizationDetails
  /?Action=ListAccountAliases&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: 'Lists the account alias associated with the Amazon Web Services account (Note: you can have only one). For information about using an Amazon Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.'
      operationId: GET_ListAccountAliases
      parameters:
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAccountAliasesResult:
                    $ref: '#/components/schemas/ListAccountAliasesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccountAliases
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Lists the account alias associated with the Amazon Web Services account (Note: you can have only one). For information about using an Amazon Web Services account alias, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html">Using an alias for your Amazon Web Services account ID</a> in the <i>IAM User Guide</i>.'
      operationId: POST_ListAccountAliases
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAccountAliasesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAccountAliasesResult:
                    $ref: '#/components/schemas/ListAccountAliasesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccountAliases
  /?Action=GetAccessKeyLastUsed&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the Amazon Web Services service and Region that were specified in the last request made with that key.
      operationId: GET_GetAccessKeyLastUsed
      parameters:
        - description: <p>The identifier of an access key.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: AccessKeyId
          required: true
          schema:
            maxLength: 128
            minLength: 16
            pattern: '[\w]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccessKeyLastUsedResult:
                    $ref: '#/components/schemas/GetAccessKeyLastUsedResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: GetAccessKeyLastUsed
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Retrieves information about when the specified access key was last used. The information includes the date and time of last use, along with the Amazon Web Services service and Region that were specified in the last request made with that key.
      operationId: POST_GetAccessKeyLastUsed
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetAccessKeyLastUsedRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetAccessKeyLastUsedResult:
                    $ref: '#/components/schemas/GetAccessKeyLastUsedResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
      x-aws-operation-name: GetAccessKeyLastUsed
  /?Action=CreateAccessKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p> Creates a new Amazon Web Services secret access key and corresponding Amazon Web Services access key ID for the specified user. The default status for new keys is <code>Active</code>.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account
        root user credentials. This is true even if the Amazon Web Services account has no associated users.</p> <p> For information about quotas on the number of keys you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure the security of your Amazon Web Services account, the secret access key is accessible only during key and user creation. You must save the key
        (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</p> </important>
      operationId: GET_CreateAccessKey
      parameters:
        - description: '<p>The name of the IAM user that the new key will belong to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateAccessKeyResult:
                    $ref: '#/components/schemas/CreateAccessKeyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateAccessKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p> Creates a new Amazon Web Services secret access key and corresponding Amazon Web Services access key ID for the specified user. The default status for new keys is <code>Active</code>.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account
        root user credentials. This is true even if the Amazon Web Services account has no associated users.</p> <p> For information about quotas on the number of keys you can create, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <important> <p>To ensure the security of your Amazon Web Services account, the secret access key is accessible only during key and user creation. You must save the key
        (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys.</p> </important>
      operationId: POST_CreateAccessKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAccessKeyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreateAccessKeyResult:
                    $ref: '#/components/schemas/CreateAccessKeyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreateAccessKey
  /?Action=DeleteAccessKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: <p>Deletes the access key pair associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p>
      operationId: GET_DeleteAccessKey
      parameters:
        - description: '<p>The name of the user whose access key pair you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The access key ID for the access key ID and secret access key you want to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: AccessKeyId
          required: true
          schema:
            maxLength: 128
            minLength: 16
            pattern: '[\w]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccessKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the access key pair associated with the specified IAM user.</p> <p>If you do not specify a user name, IAM determines the user name implicitly based on the Amazon Web Services access key ID signing the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p>
      operationId: POST_DeleteAccessKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteAccessKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteAccessKey
  /?Action=ListAccessKeys&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Returns information about the access key IDs associated with the specified IAM user. If there is none, the operation returns an empty list.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This
        operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p> <note> <p>To ensure the security of your Amazon Web Services account, the secret access key is accessible only during key and user creation.</p> </note>
      operationId: GET_ListAccessKeys
      parameters:
        - description: '<p>The name of the user.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAccessKeysResult:
                    $ref: '#/components/schemas/ListAccessKeysResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccessKeys
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Returns information about the access key IDs associated with the specified IAM user. If there is none, the operation returns an empty list.</p> <p>Although each user is limited to a small number of keys, you can still paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>If the <code>UserName</code> field is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This
        operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services account root user credentials even if the Amazon Web Services account has no associated users.</p> <note> <p>To ensure the security of your Amazon Web Services account, the secret access key is accessible only during key and user creation.</p> </note>
      operationId: POST_ListAccessKeys
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListAccessKeysRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListAccessKeysResult:
                    $ref: '#/components/schemas/ListAccessKeysResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListAccessKeys
  /?Action=UpdateAccessKey&Version=2010-05-08&__nativeEndpoint=true:
    get:
      description: >-
        <p>Changes the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user's key as part of a key rotation workflow.</p> <p>If the <code>UserName</code> is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services
        account root user credentials even if the Amazon Web Services account has no associated users.</p> <p>For information about rotating keys, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html">Managing keys and certificates</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_UpdateAccessKey
      parameters:
        - description: '<p>The name of the user whose key you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: false
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The access key ID of the secret access key you want to update.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that can consist of any upper or lowercased letter or digit.</p>
          in: query
          name: AccessKeyId
          required: true
          schema:
            maxLength: 128
            minLength: 16
            pattern: '[\w]+'
            type: string
        - description: ' The status you want to assign to the secret access key. <code>Active</code> means that the key can be used for programmatic calls to Amazon Web Services, while <code>Inactive</code> means that the key cannot be used.'
          in: query
          name: Status
          required: true
          schema:
            enum:
              - Active
              - Inactive
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccessKey
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Changes the status of the specified access key from Active to Inactive, or vice versa. This operation can be used to disable a user's key as part of a key rotation workflow.</p> <p>If the <code>UserName</code> is not specified, the user name is determined implicitly based on the Amazon Web Services access key ID used to sign the request. This operation works for access keys under the Amazon Web Services account. Consequently, you can use this operation to manage Amazon Web Services
        account root user credentials even if the Amazon Web Services account has no associated users.</p> <p>For information about rotating keys, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html">Managing keys and certificates</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_UpdateAccessKey
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateAccessKeyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UpdateAccessKey
  /?Action=AttachGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Attaches the specified managed policy to the specified IAM group.</p> <p>You use this operation to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachGroupPolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the group to attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Attaches the specified managed policy to the specified IAM group.</p> <p>You use this operation to attach a managed policy to a group. To embed an inline policy in a group, use <a>PutGroupPolicy</a>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachGroupPolicy
  /?Action=AttachRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Attaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role's permission (access) policy.</p> <note> <p>You cannot use a managed policy as the role's trust policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this operation to attach a <i>managed</i> policy
        to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the
        <i>IAM User Guide</i>.</p>
      operationId: GET_AttachRolePolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the role to attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachRolePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Attaches the specified managed policy to the specified IAM role. When you attach a managed policy to a role, the managed policy becomes part of the role's permission (access) policy.</p> <note> <p>You cannot use a managed policy as the role's trust policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>.</p> </note> <p>Use this operation to attach a <i>managed</i> policy
        to a role. To embed an inline policy in a role, use <a>PutRolePolicy</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the
        <i>IAM User Guide</i>.</p>
      operationId: POST_AttachRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachRolePolicy
  /?Action=AttachUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Attaches the specified managed policy to the specified user.</p> <p>You use this operation to attach a <i>managed</i> policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_AttachUserPolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the IAM user to attach the policy to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to attach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachUserPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Attaches the specified managed policy to the specified user.</p> <p>You use this operation to attach a <i>managed</i> policy to a user. To embed an inline policy in a user, use <a>PutUserPolicy</a>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about policies, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_AttachUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/AttachUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PolicyNotAttachableException'
          description: PolicyNotAttachableException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: AttachUserPolicy
  /?Action=CreatePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Creates a new managed policy for your Amazon Web Services account.</p> <p>This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy's default version. For more information about policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policies in general, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_CreatePolicy
      parameters:
        - description: <p>The friendly name of the policy.</p> <p>IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both "MyResource" and "myresource".</p>
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The path for the policy.</p> <p>For more information about paths, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html">IAM identifiers</a> in the <i>IAM User Guide</i>.</p> <p>This parameter is optional. If it is not included, it defaults to a slash (/).</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that
            must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.</p> <note> <p>You cannot use an asterisk (*) in the path name.</p> </note>
          in: query
          name: Path
          required: false
          schema:
            maxLength: 512
            minLength: 1
            pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
            type: string
        - description: >-
            <p>The JSON policy document that you want to use as the content for the new policy.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum
            character counts of a managed policy with no whitespaces, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length">IAM and STS character quotas</a>.</p> <p>To learn more about JSON policy grammar, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html">Grammar of the IAM JSON policy language</a> in the <i>IAM User Guide</i>. </p> <p>The <a
            href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>),
            line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyDocument
          required: true
          schema:
            maxLength: 131072
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
        - description: <p>A friendly description of the policy.</p> <p>Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."</p> <p>The policy description is immutable. After a value is assigned, it cannot be changed.</p>
          in: query
          name: Description
          required: false
          schema:
            maxLength: 1000
            type: string
        - description: <p>A list of tags that you want to attach to the new IAM customer managed policy. Each tag consists of a key name and an associated value. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.</p> <note> <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.</p> </note>
          in: query
          name: Tags
          required: false
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: member
            maxItems: 50
            type: array
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreatePolicyResult:
                    $ref: '#/components/schemas/CreatePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Creates a new managed policy for your Amazon Web Services account.</p> <p>This operation creates a policy version with a version identifier of <code>v1</code> and sets v1 as the policy's default version. For more information about policy versions, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p> <p>As a best practice, you can validate your IAM policies. To learn more, see
        <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html">Validating IAM policies</a> in the <i>IAM User Guide</i>.</p> <p>For more information about managed policies in general, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_CreatePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  CreatePolicyResult:
                    $ref: '#/components/schemas/CreatePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
          description: EntityAlreadyExistsException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '485':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: CreatePolicy
  /?Action=DeleteGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified inline policy that is embedded in the specified IAM group.</p> <p>A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteGroupPolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) identifying the group that the policy is embedded in.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the specified IAM group.</p> <p>A group can also have managed policies attached to it. To detach a managed policy from a group, use <a>DetachGroupPolicy</a>. For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteGroupPolicy
  /?Action=DeletePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Deletes the specified managed policy.</p> <p>Before you can delete a managed policy, you must first detach the policy from all users, groups, and roles that it is attached to. In addition, you must delete all the policy's versions. The following steps describe the process for deleting a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups, and roles that the policy is attached to, using <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a>.
        To list all the users, groups, and roles that a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li> <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked as the default version. You delete the policy's default version in the next step of the process.</p> </li> <li> <p>Delete the policy (this automatically deletes
        the policy's default version) using this operation.</p> </li> </ul> <p>For information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeletePolicy
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to delete.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Deletes the specified managed policy.</p> <p>Before you can delete a managed policy, you must first detach the policy from all users, groups, and roles that it is attached to. In addition, you must delete all the policy's versions. The following steps describe the process for deleting a managed policy:</p> <ul> <li> <p>Detach the policy from all users, groups, and roles that the policy is attached to, using <a>DetachUserPolicy</a>, <a>DetachGroupPolicy</a>, or <a>DetachRolePolicy</a>.
        To list all the users, groups, and roles that a policy is attached to, use <a>ListEntitiesForPolicy</a>.</p> </li> <li> <p>Delete all versions of the policy using <a>DeletePolicyVersion</a>. To list the policy's versions, use <a>ListPolicyVersions</a>. You cannot use <a>DeletePolicyVersion</a> to delete the version that is marked as the default version. You delete the policy's default version in the next step of the process.</p> </li> <li> <p>Delete the policy (this automatically deletes
        the policy's default version) using this operation.</p> </li> </ul> <p>For information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeletePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeletePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteConflictException'
          description: DeleteConflictException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeletePolicy
  /?Action=DeleteRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified inline policy that is embedded in the specified IAM role.</p> <p>A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteRolePolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) identifying the role that the policy is embedded in.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the inline policy to delete from the specified IAM role.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the specified IAM role.</p> <p>A role can also have managed policies attached to it. To detach a managed policy from a role, use <a>DetachRolePolicy</a>. For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteRolePolicy
  /?Action=DeleteUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Deletes the specified inline policy that is embedded in the specified IAM user.</p> <p>A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DeleteUserPolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) identifying the user that the policy is embedded in.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name identifying the policy document to delete.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Deletes the specified inline policy that is embedded in the specified IAM user.</p> <p>A user can also have managed policies attached to it. To detach a managed policy from a user, use <a>DetachUserPolicy</a>. For more information about policies, refer to <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DeleteUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DeleteUserPolicy
  /?Action=DetachGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Removes the specified managed policy from the specified IAM group.</p> <p>A group can also have inline policies embedded with it. To delete an inline policy, use <a>DeleteGroupPolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachGroupPolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the IAM group to detach the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified IAM group.</p> <p>A group can also have inline policies embedded with it. To delete an inline policy, use <a>DeleteGroupPolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachGroupPolicy
  /?Action=DetachRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Removes the specified managed policy from the specified role.</p> <p>A role can also have inline policies embedded with it. To delete an inline policy, use <a>DeleteRolePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachRolePolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the IAM role to detach the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachRolePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified role.</p> <p>A role can also have inline policies embedded with it. To delete an inline policy, use <a>DeleteRolePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachRolePolicy
  /?Action=DetachUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: <p>Removes the specified managed policy from the specified user.</p> <p>A user can also have inline policies embedded with it. To delete an inline policy, use <a>DeleteUserPolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_DetachUserPolicy
      parameters:
        - description: '<p>The name (friendly name, not ARN) of the IAM user to detach the policy from.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: <p>The Amazon Resource Name (ARN) of the IAM policy you want to detach.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachUserPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: <p>Removes the specified managed policy from the specified user.</p> <p>A user can also have inline policies embedded with it. To delete an inline policy, use <a>DeleteUserPolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_DetachUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DetachUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: DetachUserPolicy
  /?Action=GetGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Retrieves the specified inline policy document that is embedded in the specified IAM group.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs
        provide similar functionality.</p> </note> <p>An IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the
        <i>IAM User Guide</i>.</p>
      operationId: GET_GetGroupPolicy
      parameters:
        - description: '<p>The name of the group the policy is associated with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetGroupPolicyResult:
                    $ref: '#/components/schemas/GetGroupPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves the specified inline policy document that is embedded in the specified IAM group.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs
        provide similar functionality.</p> </note> <p>An IAM group can also have managed policies attached to it. To retrieve a managed policy document that is attached to a group, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the
        <i>IAM User Guide</i>.</p>
      operationId: POST_GetGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetGroupPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetGroupPolicyResult:
                    $ref: '#/components/schemas/GetGroupPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetGroupPolicy
  /?Action=GetPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Retrieves information about the specified managed policy, including the policy's default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use <a>ListEntitiesForPolicy</a>. This operation returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p> <p>This operation
        retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: GET_GetPolicy
      parameters:
        - description: <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetPolicyResult:
                    $ref: '#/components/schemas/GetPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves information about the specified managed policy, including the policy's default version and the total number of IAM users, groups, and roles to which the policy is attached. To retrieve the list of the specific users, groups, and roles that the policy is attached to, use <a>ListEntitiesForPolicy</a>. This operation returns metadata about the policy. To retrieve the actual policy document for a specific version of the policy, use <a>GetPolicyVersion</a>.</p> <p>This operation
        retrieves information about managed policies. To retrieve information about an inline policy that is embedded with an IAM user, group, or role, use <a>GetUserPolicy</a>, <a>GetGroupPolicy</a>, or <a>GetRolePolicy</a>.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p>
      operationId: POST_GetPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetPolicyResult:
                    $ref: '#/components/schemas/GetPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetPolicy
  /?Action=GetRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Retrieves the specified inline policy document that is embedded with the specified IAM role.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs
        provide similar functionality.</p> </note> <p>An IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the
        <i>IAM User Guide</i>.</p> <p>For more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using roles to delegate permissions and federate identities</a>.</p>
      operationId: GET_GetRolePolicy
      parameters:
        - description: '<p>The name of the role associated with the policy.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetRolePolicyResult:
                    $ref: '#/components/schemas/GetRolePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRolePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves the specified inline policy document that is embedded with the specified IAM role.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs
        provide similar functionality.</p> </note> <p>An IAM role can also have managed policies attached to it. To retrieve a managed policy document that is attached to a role, use <a>GetPolicy</a> to determine the policy's default version, then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the
        <i>IAM User Guide</i>.</p> <p>For more information about roles, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using roles to delegate permissions and federate identities</a>.</p>
      operationId: POST_GetRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetRolePolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetRolePolicyResult:
                    $ref: '#/components/schemas/GetRolePolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetRolePolicy
  /?Action=GetUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Retrieves the specified inline policy document that is embedded in the specified IAM user.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide
        similar functionality.</p> </note> <p>An IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User
        Guide</i>.</p>
      operationId: GET_GetUserPolicy
      parameters:
        - description: '<p>The name of the user who the policy is associated with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the policy document to get.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetUserPolicyResult:
                    $ref: '#/components/schemas/GetUserPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUserPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Retrieves the specified inline policy document that is embedded in the specified IAM user.</p> <note> <p>Policies returned by this operation are URL-encoded compliant with <a href="https://tools.ietf.org/html/rfc3986">RFC 3986</a>. You can use a URL decoding method to convert the policy back to plain JSON text. For example, if you use Java, you can use the <code>decode</code> method of the <code>java.net.URLDecoder</code> utility class in the Java SDK. Other languages and SDKs provide
        similar functionality.</p> </note> <p>An IAM user can also have managed policies attached to it. To retrieve a managed policy document that is attached to a user, use <a>GetPolicy</a> to determine the policy's default version. Then use <a>GetPolicyVersion</a> to retrieve the policy document.</p> <p>For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User
        Guide</i>.</p>
      operationId: POST_GetUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/GetUserPolicyRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  GetUserPolicyResult:
                    $ref: '#/components/schemas/GetUserPolicyResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: GetUserPolicy
  /?Action=ListGroupPolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Lists the names of the inline policies that are embedded in the specified IAM group.</p> <p>An IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results
        using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the operation returns an empty list.</p>
      operationId: GET_ListGroupPolicies
      parameters:
        - description: '<p>The name of the group to list policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListGroupPoliciesResult:
                    $ref: '#/components/schemas/ListGroupPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupPolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists the names of the inline policies that are embedded in the specified IAM group.</p> <p>An IAM group can also have managed policies attached to it. To list the managed policies that are attached to a group, use <a>ListAttachedGroupPolicies</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results
        using the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified group, the operation returns an empty list.</p>
      operationId: POST_ListGroupPolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListGroupPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListGroupPoliciesResult:
                    $ref: '#/components/schemas/ListGroupPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListGroupPolicies
  /?Action=ListPolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Lists all the managed policies that are available in your Amazon Web Services account, including your own customer-defined managed policies and all Amazon Web Services managed policies.</p> <p>You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your Amazon Web Services account, set <code>Scope</code> to
        <code>Local</code>. To list only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <note> <p>IAM resource-listing operations return a
        subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a customer manged policy, see <a>GetPolicy</a>.</p> </note>
      operationId: GET_ListPolicies
      parameters:
        - description: <p>The scope to use for filtering the results.</p> <p>To list only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your Amazon Web Services account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>
          in: query
          name: Scope
          required: false
          schema:
            enum:
              - All
              - AWS
              - Local
            type: string
        - description: <p>A flag to filter the results to only the attached policies.</p> <p>When <code>OnlyAttached</code> is <code>true</code>, the returned list contains only the policies that are attached to an IAM user, group, or role. When <code>OnlyAttached</code> is <code>false</code>, or when the parameter is not included, all policies are returned.</p>
          in: query
          name: OnlyAttached
          required: false
          schema:
            type: boolean
        - description: >-
            The path prefix for filtering the results. This parameter is optional. If it is not included, it defaults to a slash (/), listing all policies. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (<code>\u0021</code>) through the DEL character
            (<code>\u007F</code>), including most punctuation characters, digits, and upper and lowercased letters.
          in: query
          name: PathPrefix
          required: false
          schema:
            maxLength: 512
            minLength: 1
            pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
            type: string
        - description: "<p>The policy usage method to use for filtering the results.</p> <p>To list only permissions policies, set\_<code>PolicyUsageFilter</code>\_to\_<code>PermissionsPolicy</code>. To list only the policies used to set permissions boundaries, set\_the value to\_<code>PermissionsBoundary</code>.</p> <p>This parameter is optional. If it is not included, all policies are returned. </p>"
          in: query
          name: PolicyUsageFilter
          required: false
          schema:
            description: <p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
            enum:
              - PermissionsPolicy
              - PermissionsBoundary
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPoliciesResult:
                    $ref: '#/components/schemas/ListPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists all the managed policies that are available in your Amazon Web Services account, including your own customer-defined managed policies and all Amazon Web Services managed policies.</p> <p>You can filter the list of policies that is returned using the optional <code>OnlyAttached</code>, <code>Scope</code>, and <code>PathPrefix</code> parameters. For example, to list only the customer managed policies in your Amazon Web Services account, set <code>Scope</code> to
        <code>Local</code>. To list only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>.</p> <p>You can paginate the results using the <code>MaxItems</code> and <code>Marker</code> parameters.</p> <p>For more information about managed policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <note> <p>IAM resource-listing operations return a
        subset of the available attributes for the resource. For example, this operation does not return tags, even though they are an attribute of the returned object. To view all of the information for a customer manged policy, see <a>GetPolicy</a>.</p> </note>
      operationId: POST_ListPolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListPoliciesResult:
                    $ref: '#/components/schemas/ListPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListPolicies
  /?Action=ListRolePolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Lists the names of the inline policies that are embedded in the specified IAM role.</p> <p>An IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using
        the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the operation returns an empty list.</p>
      operationId: GET_ListRolePolicies
      parameters:
        - description: '<p>The name of the role to list policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListRolePoliciesResult:
                    $ref: '#/components/schemas/ListRolePoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRolePolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists the names of the inline policies that are embedded in the specified IAM role.</p> <p>An IAM role can also have managed policies attached to it. To list the managed policies that are attached to a role, use <a>ListAttachedRolePolicies</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using
        the <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified role, the operation returns an empty list.</p>
      operationId: POST_ListRolePolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListRolePoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListRolePoliciesResult:
                    $ref: '#/components/schemas/ListRolePoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListRolePolicies
  /?Action=ListUserPolicies&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Lists the names of the inline policies embedded in the specified IAM user.</p> <p>An IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the
        <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the operation returns an empty list.</p>
      operationId: GET_ListUserPolicies
      parameters:
        - description: '<p>The name of the user to list policies for.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
          in: query
          name: Marker
          required: false
          schema:
            maxLength: 320
            minLength: 1
            pattern: '[\u0020-\u00FF]+'
            type: string
        - description: >-
            <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>,
            and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
          in: query
          name: MaxItems
          required: false
          schema:
            maximum: 1000
            minimum: 1
            type: integer
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListUserPoliciesResult:
                    $ref: '#/components/schemas/ListUserPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserPolicies
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Lists the names of the inline policies embedded in the specified IAM user.</p> <p>An IAM user can also have managed policies attached to it. To list the managed policies that are attached to a user, use <a>ListAttachedUserPolicies</a>. For more information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>You can paginate the results using the
        <code>MaxItems</code> and <code>Marker</code> parameters. If there are no inline policies embedded with the specified user, the operation returns an empty list.</p>
      operationId: POST_ListUserPolicies
      parameters:
        - description: Pagination limit
          in: query
          name: MaxItems
          required: false
          schema:
            type: string
        - description: Pagination token
          in: query
          name: Marker
          required: false
          schema:
            type: string
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/ListUserPoliciesRequest'
      responses:
        '200':
          content:
            text/xml:
              schema:
                properties:
                  ListUserPoliciesResult:
                    $ref: '#/components/schemas/ListUserPoliciesResponse'
                type: object
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: ListUserPolicies
  /?Action=PutGroupPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Adds or updates an inline policy document that is embedded in the specified IAM group.</p> <p>A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed in a group, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutGroupPolicy
      parameters:
        - description: '<p>The name of the group to associate the policy with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-.</p>'
          in: query
          name: GroupName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the policy document.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to = IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
            ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyDocument
          required: true
          schema:
            maxLength: 131072
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutGroupPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Adds or updates an inline policy document that is embedded in the specified IAM group.</p> <p>A user can also have managed policies attached to it. To attach a managed policy to a group, use <a>AttachGroupPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed in a group, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutGroupPolicy</code>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutGroupPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutGroupPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutGroupPolicy
  /?Action=PutRolePolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Adds or updates an inline policy document that is embedded in the specified IAM role.</p> <p>When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about IAM roles, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using roles to delegate permissions and federate identities</a>.</p> <p>A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline
        policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about the maximum number of inline policies that you can embed with a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutRolePolicy
      parameters:
        - description: '<p>The name of the role to associate the policy with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: RoleName
          required: true
          schema:
            maxLength: 64
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the policy document.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
            ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyDocument
          required: true
          schema:
            maxLength: 131072
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Adds or updates an inline policy document that is embedded in the specified IAM role.</p> <p>When you embed an inline policy in a role, the inline policy is used as part of the role's access (permissions) policy. The role's trust policy is created at the same time as the role, using <a>CreateRole</a>. You can update a role's trust policy using <a>UpdateAssumeRolePolicy</a>. For more information about IAM roles, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/roles-toplevel.html">Using roles to delegate permissions and federate identities</a>.</p> <p>A role can also have a managed policy attached to it. To attach a managed policy to a role, use <a>AttachRolePolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline
        policies</a> in the <i>IAM User Guide</i>.</p> <p>For information about the maximum number of inline policies that you can embed with a role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutRolePolicy</code>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutRolePolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutRolePolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UnmodifiableEntityException'
          description: UnmodifiableEntityException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutRolePolicy
  /?Action=PutUserPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Adds or updates an inline policy document that is embedded in the specified IAM user.</p> <p>An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed in a user, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: GET_PutUserPolicy
      parameters:
        - description: '<p>The name of the user to associate the policy with.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: UserName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: '<p>The name of the policy document.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyName
          required: true
          schema:
            maxLength: 128
            minLength: 1
            pattern: '[\w+=,.@-]+'
            type: string
        - description: >-
            <p>The policy document.</p> <p>You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.</p> <p>The <a href="http://wikipedia.org/wiki/regex">regex pattern</a> used to validate this parameter is a string of characters consisting of the following:</p> <ul> <li> <p>Any printable ASCII character
            ranging from the space character (<code>\u0020</code>) through the end of the ASCII character range</p> </li> <li> <p>The printable characters in the Basic Latin and Latin-1 Supplement character set (through <code>\u00FF</code>)</p> </li> <li> <p>The special characters tab (<code>\u0009</code>), line feed (<code>\u000A</code>), and carriage return (<code>\u000D</code>)</p> </li> </ul>
          in: query
          name: PolicyDocument
          required: true
          schema:
            maxLength: 131072
            minLength: 1
            pattern: '[\u0009\u000A\u000D\u0020-\u00FF]+'
            type: string
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Adds or updates an inline policy document that is embedded in the specified IAM user.</p> <p>An IAM user can also have a managed policy attached to it. To attach a managed policy to a user, use <a>AttachUserPolicy</a>. To create a new managed policy, use <a>CreatePolicy</a>. For information about policies, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html">Managed policies and inline policies</a> in the <i>IAM User Guide</i>.</p> <p>For
        information about the maximum number of inline policies that you can embed in a user, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html">IAM and STS quotas</a> in the <i>IAM User Guide</i>.</p> <note> <p>Because policy documents can be large, you should use POST rather than GET when calling <code>PutUserPolicy</code>. For general information about using the Query API with IAM, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/IAM_UsingQueryAPI.html">Making query requests</a> in the <i>IAM User Guide</i>.</p> </note>
      operationId: POST_PutUserPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutUserPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: PutUserPolicy
  /?Action=UntagPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: Removes the specified tags from the customer managed policy. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: GET_UntagPolicy
      parameters:
        - description: '<p>The ARN of the IAM customer managed policy from which you want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: A list of key names as a simple array of strings. The tags with matching keys are removed from the specified policy.
          in: query
          name: TagKeys
          required: true
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/tagKeyType'
                - xml:
                    name: member
            maxItems: 50
            type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes the specified tags from the customer managed policy. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User Guide</i>.
      operationId: POST_UntagPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UntagPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: UntagPolicy
  /?Action=TagPolicy&Version=2010-05-08&__nativeEndpoint=true:
    servers:
      - description: The general IAM multi-region endpoint
        url: https://iam.amazonaws.com
        variables:
          region:
            description: The AWS region
            enum:
              - us-east-1
              - us-east-2
              - us-west-1
              - us-west-2
              - us-gov-west-1
              - us-gov-east-1
              - ca-central-1
              - eu-north-1
              - eu-west-1
              - eu-west-2
              - eu-west-3
              - eu-central-1
              - eu-south-1
              - af-south-1
              - ap-northeast-1
              - ap-northeast-2
              - ap-northeast-3
              - ap-southeast-1
              - ap-southeast-2
              - ap-east-1
              - ap-south-1
              - sa-east-1
              - me-south-1
            default: us-east-1
    get:
      description: >-
        <p>Adds one or more tags to an IAM customer managed policy. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name <i>Project</i> and
        the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM customer managed policy that has a specified tag attached. For examples of policies that show how to use tags to control access, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note> <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User
        Guide</i>.</p> </li> <li> <p>Amazon Web Services always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note>
      operationId: GET_TagPolicy
      parameters:
        - description: '<p>The ARN of the IAM customer managed policy to which you want to add tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>'
          in: query
          name: PolicyArn
          required: true
          schema:
            description: <p>The Amazon Resource Name (ARN). ARNs are unique identifiers for Amazon Web Services resources.</p> <p>For more information about ARNs, go to <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>. </p>
            maxLength: 2048
            minLength: 20
            type: string
        - description: The list of tags that you want to attach to the IAM customer managed policy. Each tag consists of a key name and an associated value.
          in: query
          name: Tags
          required: true
          schema:
            items:
              allOf:
                - $ref: '#/components/schemas/Tag'
                - xml:
                    name: member
            maxItems: 50
            type: array
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagPolicy
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      description: >-
        <p>Adds one or more tags to an IAM customer managed policy. If a tag with the same key name already exists, then that tag is overwritten with the new value.</p> <p>A tag consists of a key name and an associated value. By assigning tags to your resources, you can do the following:</p> <ul> <li> <p> <b>Administrative grouping and discovery</b> - Attach tags to resources to aid in organization and search. For example, you could search for all resources with the key name <i>Project</i> and
        the value <i>MyImportantProject</i>. Or search for all resources with the key name <i>Cost Center</i> and the value <i>41200</i>. </p> </li> <li> <p> <b>Access control</b> - Include tags in IAM user-based and resource-based policies. You can use tags to restrict access to only an IAM customer managed policy that has a specified tag attached. For examples of policies that show how to use tags to control access, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Control access using IAM tags</a> in the <i>IAM User Guide</i>.</p> </li> </ul> <note> <ul> <li> <p>If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created. For more information about tagging, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html">Tagging IAM resources</a> in the <i>IAM User
        Guide</i>.</p> </li> <li> <p>Amazon Web Services always interprets the tag <code>Value</code> as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.</p> </li> </ul> </note>
      operationId: POST_TagPolicy
      parameters: []
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/TagPolicyRequest'
      responses:
        '200':
          description: Success
        '480':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchEntityException'
          description: NoSuchEntityException
        '481':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        '482':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidInputException'
          description: InvalidInputException
        '483':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ConcurrentModificationException'
          description: ConcurrentModificationException
        '484':
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
          description: ServiceFailureException
      x-aws-operation-name: TagPolicy
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
  queryParamTranspose:
    algorithm: AWSCanonical
