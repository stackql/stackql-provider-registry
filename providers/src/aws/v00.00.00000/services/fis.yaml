openapi: 3.0.0
info:
  title: FIS
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ExperimentTemplateId:
      type: string
    ExperimentTemplateDescription:
      type: string
      description: A description for the experiment template.
      maxLength: 512
    StopConditionSource:
      type: string
      maxLength: 64
    StopConditionValue:
      type: string
      minLength: 20
      maxLength: 2048
    ExperimentTemplateStopCondition:
      type: object
      additionalProperties: false
      properties:
        Source:
          $ref: '#/components/schemas/StopConditionSource'
        Value:
          $ref: '#/components/schemas/StopConditionValue'
      required:
        - Source
    CloudWatchDashboard:
      type: object
      additionalProperties: false
      properties:
        DashboardIdentifier:
          type: string
          minLength: 1
          maxLength: 512
      required:
        - DashboardIdentifier
    ExperimentTemplateStopConditionList:
      type: array
      description: One or more stop conditions.
      items:
        $ref: '#/components/schemas/ExperimentTemplateStopCondition'
    ResourceType:
      type: string
      description: The AWS resource type. The resource type must be supported for the specified action.
      maxLength: 64
    ResourceArn:
      type: string
      minLength: 20
      maxLength: 2048
    ResourceArnList:
      type: array
      description: The Amazon Resource Names (ARNs) of the target resources.
      items:
        $ref: '#/components/schemas/ResourceArn'
    ExperimentTemplateTargetSelectionMode:
      type: string
      description: Scopes the identified resources to a specific number of the resources at random, or a percentage of the resources.
      maxLength: 64
    ExperimentTemplateTargetFilterPath:
      type: string
      description: The attribute path for the filter.
      maxLength: 256
    ExperimentTemplateTargetFilterValue:
      type: string
      maxLength: 128
    ExperimentTemplateTargetFilterValues:
      type: array
      description: The attribute values for the filter.
      items:
        $ref: '#/components/schemas/ExperimentTemplateTargetFilterValue'
    ExperimentTemplateTargetFilter:
      type: object
      description: Describes a filter used for the target resource input in an experiment template.
      additionalProperties: false
      properties:
        Path:
          $ref: '#/components/schemas/ExperimentTemplateTargetFilterPath'
        Values:
          $ref: '#/components/schemas/ExperimentTemplateTargetFilterValues'
      required:
        - Path
        - Values
    ExperimentTemplateTargetFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ExperimentTemplateTargetFilter'
    ExperimentTemplateTarget:
      type: object
      description: Specifies a target for an experiment.
      additionalProperties: false
      properties:
        ResourceType:
          $ref: '#/components/schemas/ResourceType'
        ResourceArns:
          $ref: '#/components/schemas/ResourceArnList'
        ResourceTags:
          type: object
          x-patternProperties:
            .{1,128}:
              type: string
              maxLength: 256
          additionalProperties: false
        Parameters:
          type: object
          x-patternProperties:
            .{1,64}:
              type: string
              maxLength: 1024
          additionalProperties: false
        Filters:
          $ref: '#/components/schemas/ExperimentTemplateTargetFilterList'
        SelectionMode:
          $ref: '#/components/schemas/ExperimentTemplateTargetSelectionMode'
      required:
        - ResourceType
        - SelectionMode
    ExperimentTemplateTargetMap:
      type: object
      description: The targets for the experiment.
      x-patternProperties:
        .{1,64}:
          $ref: '#/components/schemas/ExperimentTemplateTarget'
      additionalProperties: false
    ActionId:
      type: string
      description: The ID of the action.
      maxLength: 64
    ExperimentTemplateActionItemDescription:
      type: string
      description: A description for the action.
      maxLength: 512
    ExperimentTemplateActionItemParameter:
      type: string
      maxLength: 1024
    ExperimentTemplateActionItemTarget:
      type: string
      maxLength: 64
    ExperimentTemplateActionItemStartAfter:
      type: string
      maxLength: 64
    ExperimentTemplateActionItemStartAfterList:
      type: array
      description: The names of the actions that must be completed before the current action starts.
      items:
        $ref: '#/components/schemas/ExperimentTemplateActionItemStartAfter'
    ExperimentTemplateAction:
      type: object
      description: Specifies an action for the experiment template.
      additionalProperties: false
      properties:
        ActionId:
          $ref: '#/components/schemas/ActionId'
        Description:
          $ref: '#/components/schemas/ExperimentTemplateActionItemDescription'
        Parameters:
          type: object
          description: The parameters for the action, if applicable.
          x-patternProperties:
            .{1,64}:
              $ref: '#/components/schemas/ExperimentTemplateActionItemParameter'
          additionalProperties: false
        Targets:
          type: object
          description: One or more targets for the action.
          x-patternProperties:
            .{1,64}:
              $ref: '#/components/schemas/ExperimentTemplateActionItemTarget'
          additionalProperties: false
        StartAfter:
          $ref: '#/components/schemas/ExperimentTemplateActionItemStartAfterList'
      required:
        - ActionId
    ExperimentTemplateActionMap:
      type: object
      description: The actions for the experiment.
      x-patternProperties:
        '[\S]{1,64}':
          $ref: '#/components/schemas/ExperimentTemplateAction'
      additionalProperties: false
    ExperimentTemplateLogConfiguration:
      type: object
      additionalProperties: false
      properties:
        CloudWatchLogsConfiguration:
          type: object
          additionalProperties: false
          properties:
            LogGroupArn:
              type: string
              minLength: 20
              maxLength: 2048
          required:
            - LogGroupArn
        S3Configuration:
          type: object
          additionalProperties: false
          properties:
            BucketName:
              type: string
              minLength: 3
              maxLength: 63
            Prefix:
              type: string
              minLength: 1
              maxLength: 1024
          required:
            - BucketName
        LogSchemaVersion:
          type: integer
          minimum: 1
      required:
        - LogSchemaVersion
    ExperimentTemplateExperimentOptions:
      type: object
      additionalProperties: false
      properties:
        AccountTargeting:
          type: string
          description: The account targeting setting for the experiment template.
          enum:
            - multi-account
            - single-account
        EmptyTargetResolutionMode:
          type: string
          description: The target resolution failure mode for the experiment template.
          enum:
            - fail
            - skip
    ExperimentTemplateExperimentReportConfiguration:
      type: object
      additionalProperties: false
      required:
        - Outputs
      properties:
        Outputs:
          type: object
          additionalProperties: false
          properties:
            ExperimentReportS3Configuration:
              type: object
              additionalProperties: false
              properties:
                BucketName:
                  type: string
                  minLength: 3
                  maxLength: 63
                Prefix:
                  type: string
                  minLength: 1
                  maxLength: 1024
              required:
                - BucketName
          required:
            - ExperimentReportS3Configuration
        DataSources:
          type: object
          additionalProperties: false
          properties:
            CloudWatchDashboards:
              type: array
              items:
                $ref: '#/components/schemas/CloudWatchDashboard'
        PreExperimentDuration:
          type: string
        PostExperimentDuration:
          type: string
    RoleArn:
      type: string
      description: The Amazon Resource Name (ARN) of an IAM role that grants the AWS FIS service permission to perform service actions on your behalf.
      maxLength: 1224
    ExperimentTemplate:
      type: object
      properties:
        Id:
          $ref: '#/components/schemas/ExperimentTemplateId'
        Description:
          $ref: '#/components/schemas/ExperimentTemplateDescription'
        Targets:
          $ref: '#/components/schemas/ExperimentTemplateTargetMap'
        Actions:
          $ref: '#/components/schemas/ExperimentTemplateActionMap'
        StopConditions:
          $ref: '#/components/schemas/ExperimentTemplateStopConditionList'
        LogConfiguration:
          $ref: '#/components/schemas/ExperimentTemplateLogConfiguration'
        RoleArn:
          $ref: '#/components/schemas/RoleArn'
        Tags:
          type: object
          x-patternProperties:
            .{1,128}:
              type: string
              maxLength: 256
          additionalProperties: false
        ExperimentOptions:
          $ref: '#/components/schemas/ExperimentTemplateExperimentOptions'
        ExperimentReportConfiguration:
          $ref: '#/components/schemas/ExperimentTemplateExperimentReportConfiguration'
      required:
        - Description
        - StopConditions
        - Targets
        - RoleArn
        - Tags
      x-stackql-resource-name: experiment_template
      description: Resource schema for AWS::FIS::ExperimentTemplate
      x-type-name: AWS::FIS::ExperimentTemplate
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - Tags
        - ExperimentOptions/AccountTargeting
      x-read-only-properties:
        - Id
      x-required-properties:
        - Description
        - StopConditions
        - Targets
        - RoleArn
        - Tags
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - fis:TagResource
          - fis:UntagResource
          - fis:ListTagsForResource
      x-required-permissions:
        create:
          - fis:CreateExperimentTemplate
          - fis:TagResource
          - iam:PassRole
        read:
          - fis:GetExperimentTemplate
          - fis:ListTagsForResource
        update:
          - fis:UpdateExperimentTemplate
          - fis:TagResource
          - fis:UntagResource
          - iam:PassRole
        delete:
          - fis:DeleteExperimentTemplate
        list:
          - fis:ListExperimentTemplates
          - fis:ListTagsForResource
    TargetExperimentTemplateId:
      type: string
      description: The ID of the experiment template.
    TargetAccountId:
      type: string
      description: The AWS account ID of the target account.
      maxLength: 512
    TargetAccountRoleArn:
      type: string
      description: The Amazon Resource Name (ARN) of an IAM role for the target account.
      maxLength: 1224
    TargetAccountConfigurationDescription:
      type: string
      description: The description of the target account.
      maxLength: 512
    TargetAccountConfiguration:
      type: object
      properties:
        ExperimentTemplateId:
          $ref: '#/components/schemas/TargetExperimentTemplateId'
        AccountId:
          $ref: '#/components/schemas/TargetAccountId'
        RoleArn:
          $ref: '#/components/schemas/TargetAccountRoleArn'
        Description:
          $ref: '#/components/schemas/TargetAccountConfigurationDescription'
      required:
        - ExperimentTemplateId
        - AccountId
        - RoleArn
      x-stackql-resource-name: target_account_configuration
      description: Resource schema for AWS::FIS::TargetAccountConfiguration
      x-type-name: AWS::FIS::TargetAccountConfiguration
      x-stackql-primary-identifier:
        - ExperimentTemplateId
        - AccountId
      x-create-only-properties:
        - ExperimentTemplateId
        - AccountId
      x-required-properties:
        - ExperimentTemplateId
        - AccountId
        - RoleArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - fis:CreateTargetAccountConfiguration
        read:
          - fis:GetTargetAccountConfiguration
        update:
          - fis:UpdateTargetAccountConfiguration
        delete:
          - fis:DeleteTargetAccountConfiguration
        list:
          - fis:ListTargetAccountConfigurations
    CreateExperimentTemplateRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              $ref: '#/components/schemas/ExperimentTemplateId'
            Description:
              $ref: '#/components/schemas/ExperimentTemplateDescription'
            Targets:
              $ref: '#/components/schemas/ExperimentTemplateTargetMap'
            Actions:
              $ref: '#/components/schemas/ExperimentTemplateActionMap'
            StopConditions:
              $ref: '#/components/schemas/ExperimentTemplateStopConditionList'
            LogConfiguration:
              $ref: '#/components/schemas/ExperimentTemplateLogConfiguration'
            RoleArn:
              $ref: '#/components/schemas/RoleArn'
            Tags:
              type: object
              x-patternProperties:
                .{1,128}:
                  type: string
                  maxLength: 256
              additionalProperties: false
            ExperimentOptions:
              $ref: '#/components/schemas/ExperimentTemplateExperimentOptions'
            ExperimentReportConfiguration:
              $ref: '#/components/schemas/ExperimentTemplateExperimentReportConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateExperimentTemplateRequest
      type: object
      required: []
    CreateTargetAccountConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ExperimentTemplateId:
              $ref: '#/components/schemas/TargetExperimentTemplateId'
            AccountId:
              $ref: '#/components/schemas/TargetAccountId'
            RoleArn:
              $ref: '#/components/schemas/TargetAccountRoleArn'
            Description:
              $ref: '#/components/schemas/TargetAccountConfigurationDescription'
          x-stackQL-stringOnly: true
      x-title: CreateTargetAccountConfigurationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    experiment_templates:
      name: experiment_templates
      id: aws.fis.experiment_templates
      x-cfn-schema-name: ExperimentTemplate
      x-cfn-type-name: AWS::FIS::ExperimentTemplate
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ExperimentTemplate&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FIS::ExperimentTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FIS::ExperimentTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FIS::ExperimentTemplate"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/experiment_templates/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/experiment_templates/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/experiment_templates/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Targets') as targets,
              JSON_EXTRACT(Properties, '$.Actions') as actions,
              JSON_EXTRACT(Properties, '$.StopConditions') as stop_conditions,
              JSON_EXTRACT(Properties, '$.LogConfiguration') as log_configuration,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ExperimentOptions') as experiment_options,
              JSON_EXTRACT(Properties, '$.ExperimentReportConfiguration') as experiment_report_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FIS::ExperimentTemplate'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Targets') as targets,
                JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
                JSON_EXTRACT(detail.Properties, '$.StopConditions') as stop_conditions,
                JSON_EXTRACT(detail.Properties, '$.LogConfiguration') as log_configuration,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.ExperimentOptions') as experiment_options,
                JSON_EXTRACT(detail.Properties, '$.ExperimentReportConfiguration') as experiment_report_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FIS::ExperimentTemplate'
                AND detail.data__TypeName = 'AWS::FIS::ExperimentTemplate'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Targets') as targets,
                  json_extract_path_text(Properties, 'Actions') as actions,
                  json_extract_path_text(Properties, 'StopConditions') as stop_conditions,
                  json_extract_path_text(Properties, 'LogConfiguration') as log_configuration,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ExperimentOptions') as experiment_options,
                  json_extract_path_text(Properties, 'ExperimentReportConfiguration') as experiment_report_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FIS::ExperimentTemplate'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Targets') as targets,
                    json_extract_path_text(detail.Properties, 'Actions') as actions,
                    json_extract_path_text(detail.Properties, 'StopConditions') as stop_conditions,
                    json_extract_path_text(detail.Properties, 'LogConfiguration') as log_configuration,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'ExperimentOptions') as experiment_options,
                    json_extract_path_text(detail.Properties, 'ExperimentReportConfiguration') as experiment_report_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FIS::ExperimentTemplate'
                    AND detail.data__TypeName = 'AWS::FIS::ExperimentTemplate'
                    AND listing.region = 'us-east-1'
    experiment_templates_list_only:
      name: experiment_templates_list_only
      id: aws.fis.experiment_templates_list_only
      x-cfn-schema-name: ExperimentTemplate
      x-cfn-type-name: AWS::FIS::ExperimentTemplate
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FIS::ExperimentTemplate'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FIS::ExperimentTemplate'
                AND region = 'us-east-1'
    experiment_template_tags:
      name: experiment_template_tags
      id: aws.fis.experiment_template_tags
      x-cfn-schema-name: ExperimentTemplate
      x-cfn-type-name: AWS::FIS::ExperimentTemplate
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Targets') as targets,
              JSON_EXTRACT(detail.Properties, '$.Actions') as actions,
              JSON_EXTRACT(detail.Properties, '$.StopConditions') as stop_conditions,
              JSON_EXTRACT(detail.Properties, '$.LogConfiguration') as log_configuration,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.ExperimentOptions') as experiment_options,
              JSON_EXTRACT(detail.Properties, '$.ExperimentReportConfiguration') as experiment_report_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::FIS::ExperimentTemplate'
              AND detail.data__TypeName = 'AWS::FIS::ExperimentTemplate'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Targets') as targets,
                json_extract_path_text(detail.Properties, 'Actions') as actions,
                json_extract_path_text(detail.Properties, 'StopConditions') as stop_conditions,
                json_extract_path_text(detail.Properties, 'LogConfiguration') as log_configuration,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'ExperimentOptions') as experiment_options,
                json_extract_path_text(detail.Properties, 'ExperimentReportConfiguration') as experiment_report_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::FIS::ExperimentTemplate'
                AND detail.data__TypeName = 'AWS::FIS::ExperimentTemplate'
                AND listing.region = 'us-east-1'
    target_account_configurations:
      name: target_account_configurations
      id: aws.fis.target_account_configurations
      x-cfn-schema-name: TargetAccountConfiguration
      x-cfn-type-name: AWS::FIS::TargetAccountConfiguration
      x-identifiers:
        - ExperimentTemplateId
        - AccountId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TargetAccountConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FIS::TargetAccountConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FIS::TargetAccountConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::FIS::TargetAccountConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/target_account_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/target_account_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/target_account_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ExperimentTemplateId') as experiment_template_id,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Description') as description
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
              AND data__Identifier = '<ExperimentTemplateId>|<AccountId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ExperimentTemplateId') as experiment_template_id,
                JSON_EXTRACT(detail.Properties, '$.AccountId') as account_id,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.Description') as description
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
                AND detail.data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ExperimentTemplateId') as experiment_template_id,
                  json_extract_path_text(Properties, 'AccountId') as account_id,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'Description') as description
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
                  AND data__Identifier = '<ExperimentTemplateId>|<AccountId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ExperimentTemplateId') as experiment_template_id,
                    json_extract_path_text(detail.Properties, 'AccountId') as account_id,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'Description') as description
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
                    AND detail.data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
                    AND listing.region = 'us-east-1'
    target_account_configurations_list_only:
      name: target_account_configurations_list_only
      id: aws.fis.target_account_configurations_list_only
      x-cfn-schema-name: TargetAccountConfiguration
      x-cfn-type-name: AWS::FIS::TargetAccountConfiguration
      x-identifiers:
        - ExperimentTemplateId
        - AccountId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ExperimentTemplateId') as experiment_template_id,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ExperimentTemplateId') as experiment_template_id,
                json_extract_path_text(Properties, 'AccountId') as account_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::FIS::TargetAccountConfiguration'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ExperimentTemplate&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateExperimentTemplate
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateExperimentTemplateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TargetAccountConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTargetAccountConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTargetAccountConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
