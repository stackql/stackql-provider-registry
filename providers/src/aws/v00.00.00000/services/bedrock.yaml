openapi: 3.0.0
info:
  title: Bedrock
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    APISchema:
      description: Contains information about the API Schema for the Action Group
      oneOf:
        - type: object
          title: S3
          properties:
            S3:
              $ref: '#/components/schemas/S3Identifier'
          required:
            - S3
          additionalProperties: false
        - type: object
          title: Payload
          properties:
            Payload:
              type: string
              description: String OpenAPI Payload
          required:
            - Payload
          additionalProperties: false
    ActionGroupExecutor:
      description: Type of Executors for an Action Group
      oneOf:
        - type: object
          title: Lambda
          properties:
            Lambda:
              type: string
              maxLength: 2048
              pattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$
              description: ARN of a Lambda.
          required:
            - Lambda
          additionalProperties: false
        - type: object
          title: CustomControl
          properties:
            CustomControl:
              $ref: '#/components/schemas/CustomControlMethod'
          required:
            - CustomControl
          additionalProperties: false
    ActionGroupSignature:
      type: string
      description: Action Group Signature for a BuiltIn Action
      enum:
        - AMAZON.UserInput
    ActionGroupState:
      type: string
      description: State of the action group
      enum:
        - ENABLED
        - DISABLED
    AgentActionGroup:
      type: object
      description: Contains the information of an Agent Action Group
      properties:
        ActionGroupName:
          type: string
          pattern: ^([0-9a-zA-Z][_-]?){1,100}$
          description: Name of the action group
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of action group
        ParentActionGroupSignature:
          $ref: '#/components/schemas/ActionGroupSignature'
        ActionGroupExecutor:
          $ref: '#/components/schemas/ActionGroupExecutor'
        ApiSchema:
          $ref: '#/components/schemas/APISchema'
        ActionGroupState:
          $ref: '#/components/schemas/ActionGroupState'
        FunctionSchema:
          $ref: '#/components/schemas/FunctionSchema'
        SkipResourceInUseCheckOnDelete:
          description: Specifies whether to allow deleting action group while it is in use.
          type: boolean
          default: false
      required:
        - ActionGroupName
      additionalProperties: false
    AgentKnowledgeBase:
      type: object
      description: Agent Knowledge Base
      properties:
        KnowledgeBaseId:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
          description: Identifier for a resource.
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the Resource.
        KnowledgeBaseState:
          $ref: '#/components/schemas/KnowledgeBaseState'
      required:
        - KnowledgeBaseId
        - Description
      additionalProperties: false
    AgentStatus:
      type: string
      description: Schema Type for Action APIs.
      enum:
        - CREATING
        - PREPARING
        - PREPARED
        - NOT_PREPARED
        - DELETING
        - FAILED
        - VERSIONING
        - UPDATING
    CreationMode:
      type: string
      description: Creation Mode for Prompt Configuration.
      enum:
        - DEFAULT
        - OVERRIDDEN
    CustomControlMethod:
      type: string
      description: Custom control of action execution
      enum:
        - RETURN_CONTROL
    Function:
      type: object
      description: Function definition
      properties:
        Name:
          type: string
          pattern: ^([0-9a-zA-Z][_-]?){1,100}$
          description: Name for a resource.
        Description:
          type: string
          maxLength: 1200
          minLength: 1
          description: Description of function
        Parameters:
          $ref: '#/components/schemas/ParameterMap'
      required:
        - Name
      additionalProperties: false
    FunctionSchema:
      description: Schema of Functions
      type: object
      x-title: Functions
      properties:
        Functions:
          type: array
          items:
            $ref: '#/components/schemas/Function'
          description: List of Function definitions
          x-insertionOrder: false
      required:
        - Functions
      additionalProperties: false
    InferenceConfiguration:
      type: object
      description: Configuration for inference in prompt configuration
      properties:
        Temperature:
          type: number
          maximum: 1
          minimum: 0
          description: Controls randomness, higher values increase diversity
        TopP:
          type: number
          maximum: 1
          minimum: 0
          description: Cumulative probability cutoff for token selection
        TopK:
          type: number
          maximum: 500
          minimum: 0
          description: Sample from the k most likely next tokens
        MaximumLength:
          type: number
          maximum: 4096
          minimum: 0
          description: Maximum length of output
        StopSequences:
          type: array
          items:
            type: string
          maxItems: 4
          minItems: 0
          description: List of stop sequences
          x-insertionOrder: false
      additionalProperties: false
    KnowledgeBaseState:
      type: string
      description: State of the knowledge base; whether it is enabled or disabled
      enum:
        - ENABLED
        - DISABLED
    ParameterDetail:
      type: object
      description: Parameter detail
      properties:
        Description:
          type: string
          maxLength: 500
          minLength: 1
          description: Description of function parameter.
        Type:
          $ref: '#/components/schemas/Type'
        Required:
          type: boolean
          description: Information about if a parameter is required for function call. Default to false.
      required:
        - Type
      additionalProperties: false
    ParameterMap:
      type: object
      description: A map of parameter name and detail
      x-patternProperties:
        ^([0-9a-zA-Z][_-]?){1,100}$:
          $ref: '#/components/schemas/ParameterDetail'
      additionalProperties: false
    PromptConfiguration:
      type: object
      description: BasePromptConfiguration per Prompt Type.
      properties:
        PromptType:
          $ref: '#/components/schemas/PromptType'
        PromptCreationMode:
          $ref: '#/components/schemas/CreationMode'
        PromptState:
          $ref: '#/components/schemas/PromptState'
        BasePromptTemplate:
          type: string
          maxLength: 100000
          minLength: 1
          description: Base Prompt Template.
        InferenceConfiguration:
          $ref: '#/components/schemas/InferenceConfiguration'
        ParserMode:
          $ref: '#/components/schemas/CreationMode'
      additionalProperties: false
    PromptOverrideConfiguration:
      type: object
      description: Configuration for prompt override.
      properties:
        PromptConfigurations:
          type: array
          items:
            $ref: '#/components/schemas/PromptConfiguration'
          maxItems: 10
          description: List of BasePromptConfiguration
          x-insertionOrder: false
        OverrideLambda:
          type: string
          maxLength: 2048
          pattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:function:[a-zA-Z0-9-_\.]+(:(\$LATEST|[a-zA-Z0-9-_]+))?$
          description: ARN of a Lambda.
      required:
        - PromptConfigurations
      additionalProperties: false
    PromptState:
      type: string
      description: Prompt State.
      enum:
        - ENABLED
        - DISABLED
    PromptType:
      type: string
      description: Prompt Type.
      enum:
        - PRE_PROCESSING
        - ORCHESTRATION
        - POST_PROCESSING
        - KNOWLEDGE_BASE_RESPONSE_GENERATION
    S3Identifier:
      type: object
      description: The identifier for the S3 resource.
      properties:
        S3BucketName:
          type: string
          maxLength: 63
          minLength: 3
          pattern: ^[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$
          description: A bucket in S3.
        S3ObjectKey:
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^[\.\-\!\*\_\'\(\)a-zA-Z0-9][\.\-\!\*\_\'\(\)\/a-zA-Z0-9]*$
          description: A object key in S3.
      additionalProperties: false
    TagsMap:
      type: object
      description: A map of tag keys and values
      x-patternProperties:
        ^[a-zA-Z0-9\s._:/=+@-]*$:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
          description: Value of a tag
      additionalProperties: false
    Type:
      type: string
      description: Parameter Type
      enum:
        - string
        - number
        - integer
        - boolean
        - array
    Agent:
      type: object
      properties:
        ActionGroups:
          type: array
          items:
            $ref: '#/components/schemas/AgentActionGroup'
          description: List of ActionGroups
          x-insertionOrder: false
        AgentArn:
          type: string
          maxLength: 2048
          pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent/[0-9a-zA-Z]{10}$
          description: Arn representation of the Agent.
        AgentId:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
          description: Identifier for a resource.
        AgentName:
          type: string
          pattern: ^([0-9a-zA-Z][_-]?){1,100}$
          description: Name for a resource.
        AgentResourceRoleArn:
          type: string
          maxLength: 2048
          description: ARN of a IAM role.
        AgentStatus:
          $ref: '#/components/schemas/AgentStatus'
        AgentVersion:
          type: string
          maxLength: 5
          minLength: 5
          pattern: ^DRAFT$
          description: Draft Agent Version.
        AutoPrepare:
          description: Specifies whether to automatically prepare after creating or updating the agent.
          type: boolean
          default: false
        CreatedAt:
          type: string
          description: Time Stamp.
          format: date-time
        CustomerEncryptionKeyArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
          description: A KMS key ARN
        SkipResourceInUseCheckOnDelete:
          description: Specifies whether to allow deleting agent while it is in use.
          type: boolean
          default: false
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the Resource.
        FailureReasons:
          type: array
          items:
            type: string
            maxLength: 2048
            description: Failure Reason for Error.
          maxItems: 2048
          description: Failure Reasons for Error.
          x-insertionOrder: false
        FoundationModel:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(([:][a-z0-9-]{1,63}){0,2})?/[a-z0-9]{12})|(:foundation-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})))|(([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2}))|(([0-9a-zA-Z][_-]?)+)$
          description: ARN or name of a Bedrock model.
        IdleSessionTTLInSeconds:
          type: number
          maximum: 3600
          minimum: 60
          description: Max Session Time.
        Instruction:
          type: string
          minLength: 40
          maxLength: 4000
          description: Instruction for the agent.
        KnowledgeBases:
          type: array
          items:
            $ref: '#/components/schemas/AgentKnowledgeBase'
          description: List of Agent Knowledge Bases
          x-insertionOrder: false
        PreparedAt:
          type: string
          description: Time Stamp.
          format: date-time
        PromptOverrideConfiguration:
          $ref: '#/components/schemas/PromptOverrideConfiguration'
        RecommendedActions:
          type: array
          items:
            type: string
            maxLength: 2048
            description: The recommended action users can take to resolve an error in failureReasons.
          maxItems: 2048
          description: The recommended actions users can take to resolve an error in failureReasons.
          x-insertionOrder: false
        Tags:
          $ref: '#/components/schemas/TagsMap'
        TestAliasTags:
          $ref: '#/components/schemas/TagsMap'
        UpdatedAt:
          type: string
          description: Time Stamp.
          format: date-time
      required:
        - AgentName
      x-stackql-resource-name: agent
      description: Definition of AWS::Bedrock::Agent Resource Type
      x-type-name: AWS::Bedrock::Agent
      x-stackql-primary-identifier:
        - AgentId
      x-write-only-properties:
        - AutoPrepare
        - SkipResourceInUseCheckOnDelete
        - ActionGroups/*/SkipResourceInUseCheckOnDelete
      x-read-only-properties:
        - AgentArn
        - AgentId
        - AgentStatus
        - AgentVersion
        - CreatedAt
        - FailureReasons
        - PreparedAt
        - RecommendedActions
        - UpdatedAt
      x-required-properties:
        - AgentName
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - bedrock:CreateAgent
          - bedrock:GetAgent
          - bedrock:PrepareAgent
          - bedrock:GetAgentKnowledgeBase
          - bedrock:AssociateAgentKnowledgeBase
          - bedrock:ListAgentKnowledgeBases
          - bedrock:CreateAgentActionGroup
          - bedrock:GetAgentActionGroup
          - bedrock:ListAgentActionGroups
          - bedrock:TagResource
          - bedrock:ListTagsForResource
          - iam:PassRole
        read:
          - bedrock:GetAgent
          - bedrock:GetAgentActionGroup
          - bedrock:ListAgentActionGroups
          - bedrock:GetAgentKnowledgeBase
          - bedrock:ListAgentKnowledgeBases
          - bedrock:ListTagsForResource
        update:
          - bedrock:GetAgent
          - bedrock:UpdateAgent
          - bedrock:PrepareAgent
          - bedrock:GetAgentKnowledgeBase
          - bedrock:UpdateAgentKnowledgeBase
          - bedrock:AssociateAgentKnowledgeBase
          - bedrock:DisassociateAgentKnowledgeBase
          - bedrock:ListAgentKnowledgeBases
          - bedrock:CreateAgentActionGroup
          - bedrock:GetAgentActionGroup
          - bedrock:UpdateAgentActionGroup
          - bedrock:DeleteAgentActionGroup
          - bedrock:ListAgentActionGroups
          - bedrock:TagResource
          - bedrock:UntagResource
          - bedrock:ListTagsForResource
          - iam:PassRole
        delete:
          - bedrock:GetAgent
          - bedrock:DeleteAgent
        list:
          - bedrock:ListAgents
    AgentAliasHistoryEvent:
      type: object
      description: History event for an alias for an Agent.
      properties:
        RoutingConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/AgentAliasRoutingConfigurationListItem'
          maxItems: 1
          description: Routing configuration for an Agent alias.
          x-insertionOrder: false
        EndDate:
          type: string
          description: Time Stamp.
        StartDate:
          type: string
          description: Time Stamp.
      additionalProperties: false
    AgentAliasRoutingConfigurationListItem:
      type: object
      description: Details about the routing configuration for an Agent alias.
      properties:
        AgentVersion:
          type: string
          maxLength: 5
          minLength: 1
          pattern: ^(DRAFT|[0-9]{0,4}[1-9][0-9]{0,4})$
          description: Agent Version.
      required:
        - AgentVersion
      additionalProperties: false
    AgentAliasStatus:
      type: string
      description: The statuses an Agent Alias can be in.
      enum:
        - CREATING
        - PREPARED
        - FAILED
        - UPDATING
        - DELETING
    AgentAlias:
      type: object
      properties:
        AgentAliasArn:
          type: string
          maxLength: 2048
          pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent-alias/[0-9a-zA-Z]{10}/[0-9a-zA-Z]{10}$
          description: Arn representation of the Agent Alias.
        AgentAliasHistoryEvents:
          type: array
          items:
            $ref: '#/components/schemas/AgentAliasHistoryEvent'
          maxItems: 10
          description: The list of history events for an alias for an Agent.
          x-insertionOrder: false
        AgentAliasId:
          type: string
          maxLength: 10
          minLength: 10
          pattern: ^(\bTSTALIASID\b|[0-9a-zA-Z]+)$
          description: Id for an Agent Alias generated at the server side.
        AgentAliasName:
          type: string
          pattern: ^([0-9a-zA-Z][_-]?){1,100}$
          description: Name for a resource.
        AgentAliasStatus:
          $ref: '#/components/schemas/AgentAliasStatus'
        AgentId:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
          description: Identifier for a resource.
        CreatedAt:
          type: string
          description: Time Stamp.
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the Resource.
        RoutingConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/AgentAliasRoutingConfigurationListItem'
          maxItems: 1
          description: Routing configuration for an Agent alias.
          x-insertionOrder: false
        Tags:
          $ref: '#/components/schemas/TagsMap'
        UpdatedAt:
          type: string
          description: Time Stamp.
      required:
        - AgentAliasName
        - AgentId
      x-stackql-resource-name: agent_alias
      description: Definition of AWS::Bedrock::AgentAlias Resource Type
      x-type-name: AWS::Bedrock::AgentAlias
      x-stackql-primary-identifier:
        - AgentId
        - AgentAliasId
      x-stackql-additional-identifiers:
        - - AgentAliasArn
      x-create-only-properties:
        - AgentId
      x-read-only-properties:
        - AgentAliasArn
        - AgentAliasHistoryEvents
        - AgentAliasId
        - AgentAliasStatus
        - CreatedAt
        - UpdatedAt
      x-required-properties:
        - AgentAliasName
        - AgentId
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - bedrock:PrepareAgent
          - bedrock:GetAgent
          - bedrock:CreateAgentAlias
          - bedrock:TagResource
          - bedrock:GetAgentAlias
          - bedrock:ListTagsForResource
        read:
          - bedrock:GetAgentAlias
          - bedrock:ListTagsForResource
        update:
          - bedrock:PrepareAgent
          - bedrock:GetAgent
          - bedrock:UpdateAgentAlias
          - bedrock:TagResource
          - bedrock:UntagResource
          - bedrock:GetAgentAlias
          - bedrock:ListTagsForResource
        delete:
          - bedrock:DeleteAgentAlias
        list:
          - bedrock:ListAgentAliases
    ChunkingConfiguration:
      type: object
      description: Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
      properties:
        ChunkingStrategy:
          $ref: '#/components/schemas/ChunkingStrategy'
        FixedSizeChunkingConfiguration:
          $ref: '#/components/schemas/FixedSizeChunkingConfiguration'
      required:
        - ChunkingStrategy
      additionalProperties: false
    ChunkingStrategy:
      type: string
      description: Knowledge base can split your source data into chunks. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for NONE, then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
      enum:
        - FIXED_SIZE
        - NONE
    DataSourceConfiguration:
      type: object
      description: Specifies a raw data source location to ingest.
      properties:
        Type:
          $ref: '#/components/schemas/DataSourceType'
        S3Configuration:
          $ref: '#/components/schemas/S3DataSourceConfiguration'
      required:
        - Type
        - S3Configuration
      additionalProperties: false
    DataSourceStatus:
      type: string
      description: The status of a data source.
      enum:
        - AVAILABLE
        - DELETING
        - DELETE_UNSUCCESSFUL
    DataSourceType:
      type: string
      description: The type of the data source location.
      enum:
        - S3
    DataDeletionPolicy:
      type: string
      description: The deletion policy for the data source.
      enum:
        - RETAIN
        - DELETE
    FixedSizeChunkingConfiguration:
      type: object
      description: Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
      properties:
        MaxTokens:
          type: integer
          minimum: 1
          description: The maximum number of tokens to include in a chunk.
        OverlapPercentage:
          type: integer
          maximum: 99
          minimum: 1
          description: The percentage of overlap between adjacent chunks of a data source.
      required:
        - MaxTokens
        - OverlapPercentage
      additionalProperties: false
    S3DataSourceConfiguration:
      type: object
      description: Contains information about the S3 configuration of the data source.
      properties:
        BucketArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws(|-cn|-us-gov):s3:::[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
          description: The ARN of the bucket that contains the data source.
        InclusionPrefixes:
          type: array
          items:
            type: string
            maxLength: 300
            minLength: 1
            description: Prefix for s3 object.
          maxItems: 1
          minItems: 1
          description: A list of S3 prefixes that define the object containing the data sources.
          x-insertionOrder: false
        BucketOwnerAccountId:
          type: string
          maxLength: 12
          minLength: 12
          pattern: ^[0-9]{12}$
          description: The account ID for the owner of the S3 bucket.
      required:
        - BucketArn
      additionalProperties: false
    ServerSideEncryptionConfiguration:
      type: object
      description: Contains details about the server-side encryption for the data source.
      properties:
        KmsKeyArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
          description: The ARN of the AWS KMS key used to encrypt the resource.
      additionalProperties: false
    VectorIngestionConfiguration:
      type: object
      description: Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
      properties:
        ChunkingConfiguration:
          $ref: '#/components/schemas/ChunkingConfiguration'
      additionalProperties: false
    DataSource:
      type: object
      properties:
        DataSourceConfiguration:
          $ref: '#/components/schemas/DataSourceConfiguration'
        DataSourceId:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
          description: Identifier for a resource.
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the Resource.
        KnowledgeBaseId:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
          description: The unique identifier of the knowledge base to which to add the data source.
        DataSourceStatus:
          $ref: '#/components/schemas/DataSourceStatus'
        Name:
          type: string
          pattern: ^([0-9a-zA-Z][_-]?){1,100}$
          description: The name of the data source.
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
        VectorIngestionConfiguration:
          $ref: '#/components/schemas/VectorIngestionConfiguration'
        DataDeletionPolicy:
          $ref: '#/components/schemas/DataDeletionPolicy'
        CreatedAt:
          type: string
          description: The time at which the data source was created.
        UpdatedAt:
          type: string
          description: The time at which the knowledge base was last updated.
        FailureReasons:
          type: array
          items:
            type: string
            maxLength: 2048
            description: Failure Reason for Error.
          maxItems: 2048
          description: The details of the failure reasons related to the data source.
          x-insertionOrder: false
      required:
        - DataSourceConfiguration
        - Name
        - KnowledgeBaseId
      x-stackql-resource-name: data_source
      description: Definition of AWS::Bedrock::DataSource Resource Type
      x-type-name: AWS::Bedrock::DataSource
      x-stackql-primary-identifier:
        - KnowledgeBaseId
        - DataSourceId
      x-create-only-properties:
        - KnowledgeBaseId
        - VectorIngestionConfiguration
      x-read-only-properties:
        - DataSourceId
        - DataSourceStatus
        - CreatedAt
        - UpdatedAt
        - FailureReasons
      x-required-properties:
        - DataSourceConfiguration
        - Name
        - KnowledgeBaseId
      x-tagging:
        taggable: false
        cloudFormationSystemTags: true
      x-required-permissions:
        create:
          - bedrock:CreateDataSource
          - bedrock:GetDataSource
          - bedrock:GetKnowledgeBase
        read:
          - bedrock:GetDataSource
        update:
          - bedrock:GetDataSource
          - bedrock:UpdateDataSource
        delete:
          - bedrock:GetDataSource
          - bedrock:DeleteDataSource
        list:
          - bedrock:ListDataSources
    ContentFilter:
      type: object
      description: Content filter in content policy.
      properties:
        Type:
          $ref: '#/components/schemas/ContentFilterType'
        InputStrength:
          $ref: '#/components/schemas/FilterStrength'
        OutputStrength:
          $ref: '#/components/schemas/FilterStrength'
      required:
        - InputStrength
        - OutputStrength
        - Type
      additionalProperties: false
    ContentFilterConfig:
      type: object
      description: Content filter config in content policy.
      properties:
        Type:
          $ref: '#/components/schemas/ContentFilterType'
        InputStrength:
          $ref: '#/components/schemas/FilterStrength'
        OutputStrength:
          $ref: '#/components/schemas/FilterStrength'
      required:
        - InputStrength
        - OutputStrength
        - Type
      additionalProperties: false
    ContentFilterType:
      type: string
      description: Type of filter in content policy
      enum:
        - SEXUAL
        - VIOLENCE
        - HATE
        - INSULTS
        - MISCONDUCT
        - PROMPT_ATTACK
    ContentPolicyConfig:
      type: object
      description: Content policy config for a guardrail.
      properties:
        FiltersConfig:
          type: array
          items:
            $ref: '#/components/schemas/ContentFilterConfig'
          maxItems: 6
          minItems: 1
          description: List of content filter configs in content policy.
      required:
        - FiltersConfig
      additionalProperties: false
    FilterStrength:
      type: string
      description: Strength for filters
      enum:
        - NONE
        - LOW
        - MEDIUM
        - HIGH
    GuardrailStatus:
      type: string
      description: Status of the guardrail
      enum:
        - CREATING
        - UPDATING
        - VERSIONING
        - READY
        - FAILED
        - DELETING
    ManagedWords:
      type: object
      description: A managed words definition.
      properties:
        Type:
          $ref: '#/components/schemas/ManagedWordsType'
      required:
        - Type
      additionalProperties: false
    ManagedWordsConfig:
      type: object
      description: A managed words config.
      properties:
        Type:
          $ref: '#/components/schemas/ManagedWordsType'
      required:
        - Type
      additionalProperties: false
    ManagedWordsType:
      type: string
      description: Options for managed words.
      enum:
        - PROFANITY
    PiiEntity:
      type: object
      description: Entity name and behavior.
      properties:
        Type:
          $ref: '#/components/schemas/PiiEntityType'
        Action:
          $ref: '#/components/schemas/SensitiveInformationAction'
      required:
        - Action
        - Type
      additionalProperties: false
    PiiEntityConfig:
      type: object
      description: Pii entity configuration.
      properties:
        Type:
          $ref: '#/components/schemas/PiiEntityType'
        Action:
          $ref: '#/components/schemas/SensitiveInformationAction'
      required:
        - Action
        - Type
      additionalProperties: false
    PiiEntityType:
      type: string
      description: The currently supported PII entities
      enum:
        - ADDRESS
        - AGE
        - AWS_ACCESS_KEY
        - AWS_SECRET_KEY
        - CA_HEALTH_NUMBER
        - CA_SOCIAL_INSURANCE_NUMBER
        - CREDIT_DEBIT_CARD_CVV
        - CREDIT_DEBIT_CARD_EXPIRY
        - CREDIT_DEBIT_CARD_NUMBER
        - DRIVER_ID
        - EMAIL
        - INTERNATIONAL_BANK_ACCOUNT_NUMBER
        - IP_ADDRESS
        - LICENSE_PLATE
        - MAC_ADDRESS
        - NAME
        - PASSWORD
        - PHONE
        - PIN
        - SWIFT_CODE
        - UK_NATIONAL_HEALTH_SERVICE_NUMBER
        - UK_NATIONAL_INSURANCE_NUMBER
        - UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER
        - URL
        - USERNAME
        - US_BANK_ACCOUNT_NUMBER
        - US_BANK_ROUTING_NUMBER
        - US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER
        - US_PASSPORT_NUMBER
        - US_SOCIAL_SECURITY_NUMBER
        - VEHICLE_IDENTIFICATION_NUMBER
    RegexConfig:
      type: object
      description: A regex configuration.
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          description: The regex name.
        Description:
          type: string
          maxLength: 1000
          minLength: 1
          description: The regex description.
        Pattern:
          type: string
          minLength: 1
          description: The regex pattern.
        Action:
          $ref: '#/components/schemas/SensitiveInformationAction'
      required:
        - Action
        - Name
        - Pattern
      additionalProperties: false
    SensitiveInformationAction:
      type: string
      description: Options for sensitive information action.
      enum:
        - BLOCK
        - ANONYMIZE
    SensitiveInformationPolicyConfig:
      type: object
      description: Sensitive information policy config for a guardrail.
      properties:
        PiiEntitiesConfig:
          type: array
          items:
            $ref: '#/components/schemas/PiiEntityConfig'
          minItems: 1
          uniqueItems: true
          description: List of entities.
        RegexesConfig:
          type: array
          items:
            $ref: '#/components/schemas/RegexConfig'
          minItems: 1
          description: List of regex.
      additionalProperties: false
    Tag:
      type: object
      description: Definition of the key/value pair for a tag
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
          description: Tag Key
        Value:
          type: string
          maxLength: 256
          minLength: 0
          pattern: ^[a-zA-Z0-9\s._:/=+@-]*$
          description: Tag Value
      required:
        - Key
        - Value
      additionalProperties: false
    Topic:
      type: object
      description: Topic in topic policy.
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[0-9a-zA-Z-_ !?.]+$
          description: Name of topic in topic policy
        Definition:
          type: string
          maxLength: 200
          minLength: 1
          description: Definition of topic in topic policy
        Examples:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
            description: Text example in topic policy
          minItems: 0
          description: List of text examples
        Type:
          $ref: '#/components/schemas/TopicType'
      required:
        - Definition
        - Name
        - Type
      additionalProperties: false
    TopicConfig:
      type: object
      description: Topic config in topic policy.
      properties:
        Name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[0-9a-zA-Z-_ !?.]+$
          description: Name of topic in topic policy
        Definition:
          type: string
          maxLength: 200
          minLength: 1
          description: Definition of topic in topic policy
        Examples:
          type: array
          items:
            type: string
            maxLength: 100
            minLength: 1
            description: Text example in topic policy
          minItems: 0
          description: List of text examples
        Type:
          $ref: '#/components/schemas/TopicType'
      required:
        - Definition
        - Name
        - Type
      additionalProperties: false
    TopicPolicyConfig:
      type: object
      description: Topic policy config for a guardrail.
      properties:
        TopicsConfig:
          type: array
          items:
            $ref: '#/components/schemas/TopicConfig'
          minItems: 1
          description: List of topic configs in topic policy.
      required:
        - TopicsConfig
      additionalProperties: false
    TopicType:
      type: string
      description: Type of topic in a policy
      enum:
        - DENY
    WordConfig:
      type: object
      description: A custom word config.
      properties:
        Text:
          type: string
          minLength: 1
          description: The custom word text.
      required:
        - Text
      additionalProperties: false
    WordPolicyConfig:
      type: object
      description: Word policy config for a guardrail.
      properties:
        WordsConfig:
          type: array
          items:
            $ref: '#/components/schemas/WordConfig'
          minItems: 1
          description: List of custom word configs.
        ManagedWordListsConfig:
          type: array
          items:
            $ref: '#/components/schemas/ManagedWordsConfig'
          description: A config for the list of managed words.
      additionalProperties: false
    Guardrail:
      type: object
      properties:
        BlockedInputMessaging:
          type: string
          maxLength: 500
          minLength: 1
          description: Messaging for when violations are detected in text
        BlockedOutputsMessaging:
          type: string
          maxLength: 500
          minLength: 1
          description: Messaging for when violations are detected in text
        ContentPolicyConfig:
          $ref: '#/components/schemas/ContentPolicyConfig'
        CreatedAt:
          type: string
          description: Time Stamp
          format: date-time
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the guardrail or its version
        FailureRecommendations:
          type: array
          items:
            type: string
            maxLength: 200
            minLength: 1
            description: Recommendation for guardrail failure status
          maxItems: 100
          description: List of failure recommendations
        GuardrailArn:
          type: string
          maxLength: 2048
          pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+$
          description: Arn representation for the guardrail
        GuardrailId:
          type: string
          maxLength: 64
          pattern: ^[a-z0-9]+$
          description: Unique id for the guardrail
        KmsKeyArn:
          type: string
          maxLength: 2048
          minLength: 1
          pattern: ^arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
          description: The KMS key with which the guardrail was encrypted at rest
        Name:
          type: string
          maxLength: 50
          minLength: 1
          pattern: ^[0-9a-zA-Z-_]+$
          description: Name of the guardrail
        SensitiveInformationPolicyConfig:
          $ref: '#/components/schemas/SensitiveInformationPolicyConfig'
        Status:
          $ref: '#/components/schemas/GuardrailStatus'
        StatusReasons:
          type: array
          items:
            type: string
            maxLength: 200
            minLength: 1
            description: Reason for guardrail status
          maxItems: 100
          description: List of status reasons
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          description: List of Tags
        TopicPolicyConfig:
          $ref: '#/components/schemas/TopicPolicyConfig'
        UpdatedAt:
          type: string
          description: Time Stamp
          format: date-time
        Version:
          type: string
          pattern: ^(([1-9][0-9]{0,7})|(DRAFT))$
          description: Guardrail version
        WordPolicyConfig:
          $ref: '#/components/schemas/WordPolicyConfig'
      required:
        - Name
        - BlockedInputMessaging
        - BlockedOutputsMessaging
      x-stackql-resource-name: guardrail
      description: Definition of AWS::Bedrock::Guardrail Resource Type
      x-type-name: AWS::Bedrock::Guardrail
      x-stackql-primary-identifier:
        - GuardrailArn
      x-read-only-properties:
        - CreatedAt
        - FailureRecommendations
        - GuardrailArn
        - GuardrailId
        - Status
        - StatusReasons
        - UpdatedAt
        - Version
      x-required-properties:
        - Name
        - BlockedInputMessaging
        - BlockedOutputsMessaging
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - bedrock:CreateGuardrail
          - bedrock:GetGuardrail
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:GenerateDataKey
          - kms:Decrypt
          - bedrock:TagResource
          - bedrock:ListTagsForResource
        read:
          - bedrock:GetGuardrail
          - kms:Decrypt
          - bedrock:ListTagsForResource
        update:
          - bedrock:UpdateGuardrail
          - bedrock:GetGuardrail
          - bedrock:ListTagsForResource
          - bedrock:TagResource
          - bedrock:UntagResource
          - kms:DescribeKey
          - kms:CreateGrant
          - kms:GenerateDataKey
          - kms:Decrypt
        delete:
          - bedrock:DeleteGuardrail
          - bedrock:GetGuardrail
          - kms:Decrypt
          - kms:RetireGrant
        list:
          - bedrock:ListGuardrails
    GuardrailVersion:
      type: object
      properties:
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the Guardrail version
        GuardrailArn:
          type: string
          maxLength: 2048
          pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+$
          description: Arn representation for the guardrail
        GuardrailId:
          type: string
          maxLength: 64
          pattern: ^[a-z0-9]+$
          description: Unique id for the guardrail
        GuardrailIdentifier:
          type: string
          maxLength: 2048
          pattern: ^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$
          description: Identifier (GuardrailId or GuardrailArn) for the guardrail
        Version:
          type: string
          pattern: ^[1-9][0-9]{0,7}$
          description: Guardrail version
      required:
        - GuardrailIdentifier
      x-stackql-resource-name: guardrail_version
      description: Definition of AWS::Bedrock::GuardrailVersion Resource Type
      x-type-name: AWS::Bedrock::GuardrailVersion
      x-stackql-primary-identifier:
        - GuardrailId
        - Version
      x-create-only-properties:
        - Description
        - GuardrailIdentifier
      x-write-only-properties:
        - GuardrailIdentifier
      x-read-only-properties:
        - GuardrailArn
        - GuardrailId
        - Version
      x-required-properties:
        - GuardrailIdentifier
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - bedrock:CreateGuardrailVersion
          - bedrock:GetGuardrail
          - kms:CreateGrant
          - kms:Decrypt
        read:
          - bedrock:GetGuardrail
          - kms:Decrypt
        delete:
          - bedrock:DeleteGuardrail
          - bedrock:GetGuardrail
          - kms:RetireGrant
    KnowledgeBaseConfiguration:
      type: object
      description: Contains details about the embeddings model used for the knowledge base.
      properties:
        Type:
          $ref: '#/components/schemas/KnowledgeBaseType'
        VectorKnowledgeBaseConfiguration:
          $ref: '#/components/schemas/VectorKnowledgeBaseConfiguration'
      required:
        - Type
        - VectorKnowledgeBaseConfiguration
      additionalProperties: false
    KnowledgeBaseStatus:
      type: string
      description: The status of a knowledge base.
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - UPDATING
        - FAILED
        - DELETE_UNSUCCESSFUL
    KnowledgeBaseStorageType:
      type: string
      description: The storage type of a knowledge base.
      enum:
        - OPENSEARCH_SERVERLESS
        - PINECONE
        - RDS
    KnowledgeBaseType:
      type: string
      description: The type of a knowledge base.
      enum:
        - VECTOR
    OpenSearchServerlessConfiguration:
      type: object
      description: Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
      properties:
        CollectionArn:
          type: string
          maxLength: 2048
          pattern: ^arn:aws:aoss:[a-z]{2}(-gov)?-[a-z]+-\d{1}:\d{12}:collection/[a-z0-9-]{3,32}$
          description: The ARN of the OpenSearch Service vector store.
        VectorIndexName:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the vector store.
        FieldMapping:
          $ref: '#/components/schemas/OpenSearchServerlessFieldMapping'
      required:
        - CollectionArn
        - FieldMapping
        - VectorIndexName
      additionalProperties: false
    OpenSearchServerlessFieldMapping:
      type: object
      description: A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
      properties:
        VectorField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
        TextField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
        MetadataField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores metadata about the vector store.
      required:
        - MetadataField
        - TextField
        - VectorField
      additionalProperties: false
    PineconeConfiguration:
      type: object
      description: Contains the storage configuration of the knowledge base in Pinecone.
      properties:
        ConnectionString:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The endpoint URL for your index management page.
        CredentialsSecretArn:
          type: string
          pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.@-]{1,512}$
          description: The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
        Namespace:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The namespace to be used to write new data to your database.
        FieldMapping:
          $ref: '#/components/schemas/PineconeFieldMapping'
      required:
        - ConnectionString
        - CredentialsSecretArn
        - FieldMapping
      additionalProperties: false
    PineconeFieldMapping:
      type: object
      description: Contains the names of the fields to which to map information about the vector store.
      properties:
        TextField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
        MetadataField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores metadata about the vector store.
      required:
        - MetadataField
        - TextField
      additionalProperties: false
    RdsConfiguration:
      type: object
      description: Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
      properties:
        ResourceArn:
          type: string
          pattern: ^arn:aws(|-cn|-us-gov):rds:[a-zA-Z0-9-]*:[0-9]{12}:cluster:[a-zA-Z0-9-]{1,63}$
          description: The ARN of the vector store.
        CredentialsSecretArn:
          type: string
          pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.@-]{1,512}$
          description: The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
        DatabaseName:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9_\-]+$
          description: The name of your Amazon RDS database.
        TableName:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9_\.\-]+$
          description: The name of the table in the database.
        FieldMapping:
          $ref: '#/components/schemas/RdsFieldMapping'
      required:
        - CredentialsSecretArn
        - DatabaseName
        - FieldMapping
        - ResourceArn
        - TableName
      additionalProperties: false
    RdsFieldMapping:
      type: object
      description: Contains the names of the fields to which to map information about the vector store.
      properties:
        PrimaryKeyField:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9_\-]+$
          description: The name of the field in which Amazon Bedrock stores the ID for each entry.
        VectorField:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9_\-]+$
          description: The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
        TextField:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9_\-]+$
          description: The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
        MetadataField:
          type: string
          maxLength: 63
          pattern: ^[a-zA-Z0-9_\-]+$
          description: The name of the field in which Amazon Bedrock stores metadata about the vector store.
      required:
        - MetadataField
        - PrimaryKeyField
        - TextField
        - VectorField
      additionalProperties: false
    RedisEnterpriseCloudConfiguration:
      type: object
      description: Contains the storage configuration of the knowledge base in Redis Enterprise Cloud.
      properties:
        Endpoint:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The endpoint URL of the Redis Enterprise Cloud database.
        VectorIndexName:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the vector index.
        CredentialsSecretArn:
          type: string
          pattern: ^arn:aws(|-cn|-us-gov):secretsmanager:[a-z0-9-]{1,20}:([0-9]{12}|):secret:[a-zA-Z0-9!/_+=.@-]{1,512}$
          description: The ARN of the secret that you created in AWS Secrets Manager that is linked to your Redis Enterprise Cloud database.
        FieldMapping:
          $ref: '#/components/schemas/RedisEnterpriseCloudFieldMapping'
      required:
        - CredentialsSecretArn
        - Endpoint
        - FieldMapping
        - VectorIndexName
      additionalProperties: false
    RedisEnterpriseCloudFieldMapping:
      type: object
      description: Contains the names of the fields to which to map information about the vector store.
      properties:
        VectorField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
        TextField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
        MetadataField:
          type: string
          maxLength: 2048
          pattern: ^.*$
          description: The name of the field in which Amazon Bedrock stores metadata about the vector store.
      required:
        - MetadataField
        - TextField
        - VectorField
      additionalProperties: false
    StorageConfiguration:
      type: object
      description: The vector store service in which the knowledge base is stored.
      properties:
        Type:
          $ref: '#/components/schemas/KnowledgeBaseStorageType'
        OpensearchServerlessConfiguration:
          $ref: '#/components/schemas/OpenSearchServerlessConfiguration'
        PineconeConfiguration:
          $ref: '#/components/schemas/PineconeConfiguration'
        RdsConfiguration:
          $ref: '#/components/schemas/RdsConfiguration'
      required:
        - Type
      oneOf:
        - required:
            - OpensearchServerlessConfiguration
        - required:
            - PineconeConfiguration
        - required:
            - RdsConfiguration
      additionalProperties: false
    VectorKnowledgeBaseConfiguration:
      type: object
      description: Contains details about the model used to create vector embeddings for the knowledge base.
      properties:
        EmbeddingModelArn:
          type: string
          maxLength: 1011
          minLength: 20
          pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}/[a-z0-9]{12})|(:foundation-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}))$
          description: The ARN of the model used to create vector embeddings for the knowledge base.
      required:
        - EmbeddingModelArn
      additionalProperties: false
    KnowledgeBase:
      type: object
      properties:
        Description:
          type: string
          maxLength: 200
          minLength: 1
          description: Description of the Resource.
        KnowledgeBaseConfiguration:
          $ref: '#/components/schemas/KnowledgeBaseConfiguration'
        KnowledgeBaseId:
          type: string
          pattern: ^[0-9a-zA-Z]{10}$
          description: The unique identifier of the knowledge base.
        KnowledgeBaseArn:
          type: string
          maxLength: 128
          minLength: 0
          pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-zA-Z0-9-]*:[0-9]{12}:knowledge-base/[0-9a-zA-Z]+$
          description: The ARN of the knowledge base.
        Name:
          type: string
          pattern: ^([0-9a-zA-Z][_-]?){1,100}$
          description: The name of the knowledge base.
        Status:
          $ref: '#/components/schemas/KnowledgeBaseStatus'
        RoleArn:
          type: string
          maxLength: 2048
          pattern: ^arn:aws(-[^:]+)?:iam::([0-9]{12})?:role/.+$
          description: The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
        CreatedAt:
          type: string
          description: The time at which the knowledge base was created.
        FailureReasons:
          type: array
          items:
            type: string
            maxLength: 2048
            description: Failure Reason for Error.
          maxItems: 2048
          description: A list of reasons that the API operation on the knowledge base failed.
          x-insertionOrder: false
        UpdatedAt:
          type: string
          description: The time at which the knowledge base was last updated.
        StorageConfiguration:
          $ref: '#/components/schemas/StorageConfiguration'
        Tags:
          $ref: '#/components/schemas/TagsMap'
      required:
        - KnowledgeBaseConfiguration
        - Name
        - RoleArn
        - StorageConfiguration
      x-stackql-resource-name: knowledge_base
      description: Definition of AWS::Bedrock::KnowledgeBase Resource Type
      x-type-name: AWS::Bedrock::KnowledgeBase
      x-stackql-primary-identifier:
        - KnowledgeBaseId
      x-create-only-properties:
        - StorageConfiguration
        - KnowledgeBaseConfiguration
      x-read-only-properties:
        - KnowledgeBaseId
        - KnowledgeBaseArn
        - CreatedAt
        - UpdatedAt
        - FailureReasons
        - Status
      x-required-properties:
        - KnowledgeBaseConfiguration
        - Name
        - RoleArn
        - StorageConfiguration
      x-tagging:
        cloudFormationSystemTags: true
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: true
        taggable: true
      x-required-permissions:
        create:
          - bedrock:CreateKnowledgeBase
          - bedrock:GetKnowledgeBase
          - bedrock:TagResource
          - bedrock:ListTagsForResource
          - bedrock:AssociateThirdPartyKnowledgeBase
          - iam:PassRole
        read:
          - bedrock:GetKnowledgeBase
          - bedrock:ListTagsForResource
        update:
          - bedrock:GetKnowledgeBase
          - bedrock:UpdateKnowledgeBase
          - bedrock:TagResource
          - bedrock:UntagResource
          - bedrock:ListTagsForResource
          - bedrock:AssociateThirdPartyKnowledgeBase
          - iam:PassRole
        delete:
          - bedrock:GetKnowledgeBase
          - bedrock:DeleteKnowledgeBase
          - bedrock:ListDataSources
        list:
          - bedrock:ListKnowledgeBases
    CreateAgentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ActionGroups:
              type: array
              items:
                $ref: '#/components/schemas/AgentActionGroup'
              description: List of ActionGroups
              x-insertionOrder: false
            AgentArn:
              type: string
              maxLength: 2048
              pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent/[0-9a-zA-Z]{10}$
              description: Arn representation of the Agent.
            AgentId:
              type: string
              pattern: ^[0-9a-zA-Z]{10}$
              description: Identifier for a resource.
            AgentName:
              type: string
              pattern: ^([0-9a-zA-Z][_-]?){1,100}$
              description: Name for a resource.
            AgentResourceRoleArn:
              type: string
              maxLength: 2048
              description: ARN of a IAM role.
            AgentStatus:
              $ref: '#/components/schemas/AgentStatus'
            AgentVersion:
              type: string
              maxLength: 5
              minLength: 5
              pattern: ^DRAFT$
              description: Draft Agent Version.
            AutoPrepare:
              description: Specifies whether to automatically prepare after creating or updating the agent.
              type: boolean
              default: false
            CreatedAt:
              type: string
              description: Time Stamp.
              format: date-time
            CustomerEncryptionKeyArn:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
              description: A KMS key ARN
            SkipResourceInUseCheckOnDelete:
              description: Specifies whether to allow deleting agent while it is in use.
              type: boolean
              default: false
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the Resource.
            FailureReasons:
              type: array
              items:
                type: string
                maxLength: 2048
                description: Failure Reason for Error.
              maxItems: 2048
              description: Failure Reasons for Error.
              x-insertionOrder: false
            FoundationModel:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:(([0-9]{12}:custom-model/[a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}(([:][a-z0-9-]{1,63}){0,2})?/[a-z0-9]{12})|(:foundation-model/([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2})))|(([a-z0-9-]{1,63}[.]{1}[a-z0-9-]{1,63}([.]?[a-z0-9-]{1,63})([:][a-z0-9-]{1,63}){0,2}))|(([0-9a-zA-Z][_-]?)+)$
              description: ARN or name of a Bedrock model.
            IdleSessionTTLInSeconds:
              type: number
              maximum: 3600
              minimum: 60
              description: Max Session Time.
            Instruction:
              type: string
              minLength: 40
              maxLength: 4000
              description: Instruction for the agent.
            KnowledgeBases:
              type: array
              items:
                $ref: '#/components/schemas/AgentKnowledgeBase'
              description: List of Agent Knowledge Bases
              x-insertionOrder: false
            PreparedAt:
              type: string
              description: Time Stamp.
              format: date-time
            PromptOverrideConfiguration:
              $ref: '#/components/schemas/PromptOverrideConfiguration'
            RecommendedActions:
              type: array
              items:
                type: string
                maxLength: 2048
                description: The recommended action users can take to resolve an error in failureReasons.
              maxItems: 2048
              description: The recommended actions users can take to resolve an error in failureReasons.
              x-insertionOrder: false
            Tags:
              $ref: '#/components/schemas/TagsMap'
            TestAliasTags:
              $ref: '#/components/schemas/TagsMap'
            UpdatedAt:
              type: string
              description: Time Stamp.
              format: date-time
          x-stackQL-stringOnly: true
      x-title: CreateAgentRequest
      type: object
      required: []
    CreateAgentAliasRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AgentAliasArn:
              type: string
              maxLength: 2048
              pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-z0-9-]{1,20}:[0-9]{12}:agent-alias/[0-9a-zA-Z]{10}/[0-9a-zA-Z]{10}$
              description: Arn representation of the Agent Alias.
            AgentAliasHistoryEvents:
              type: array
              items:
                $ref: '#/components/schemas/AgentAliasHistoryEvent'
              maxItems: 10
              description: The list of history events for an alias for an Agent.
              x-insertionOrder: false
            AgentAliasId:
              type: string
              maxLength: 10
              minLength: 10
              pattern: ^(\bTSTALIASID\b|[0-9a-zA-Z]+)$
              description: Id for an Agent Alias generated at the server side.
            AgentAliasName:
              type: string
              pattern: ^([0-9a-zA-Z][_-]?){1,100}$
              description: Name for a resource.
            AgentAliasStatus:
              $ref: '#/components/schemas/AgentAliasStatus'
            AgentId:
              type: string
              pattern: ^[0-9a-zA-Z]{10}$
              description: Identifier for a resource.
            CreatedAt:
              type: string
              description: Time Stamp.
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the Resource.
            RoutingConfiguration:
              type: array
              items:
                $ref: '#/components/schemas/AgentAliasRoutingConfigurationListItem'
              maxItems: 1
              description: Routing configuration for an Agent alias.
              x-insertionOrder: false
            Tags:
              $ref: '#/components/schemas/TagsMap'
            UpdatedAt:
              type: string
              description: Time Stamp.
          x-stackQL-stringOnly: true
      x-title: CreateAgentAliasRequest
      type: object
      required: []
    CreateDataSourceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DataSourceConfiguration:
              $ref: '#/components/schemas/DataSourceConfiguration'
            DataSourceId:
              type: string
              pattern: ^[0-9a-zA-Z]{10}$
              description: Identifier for a resource.
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the Resource.
            KnowledgeBaseId:
              type: string
              pattern: ^[0-9a-zA-Z]{10}$
              description: The unique identifier of the knowledge base to which to add the data source.
            DataSourceStatus:
              $ref: '#/components/schemas/DataSourceStatus'
            Name:
              type: string
              pattern: ^([0-9a-zA-Z][_-]?){1,100}$
              description: The name of the data source.
            ServerSideEncryptionConfiguration:
              $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
            VectorIngestionConfiguration:
              $ref: '#/components/schemas/VectorIngestionConfiguration'
            DataDeletionPolicy:
              $ref: '#/components/schemas/DataDeletionPolicy'
            CreatedAt:
              type: string
              description: The time at which the data source was created.
            UpdatedAt:
              type: string
              description: The time at which the knowledge base was last updated.
            FailureReasons:
              type: array
              items:
                type: string
                maxLength: 2048
                description: Failure Reason for Error.
              maxItems: 2048
              description: The details of the failure reasons related to the data source.
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateDataSourceRequest
      type: object
      required: []
    CreateGuardrailRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            BlockedInputMessaging:
              type: string
              maxLength: 500
              minLength: 1
              description: Messaging for when violations are detected in text
            BlockedOutputsMessaging:
              type: string
              maxLength: 500
              minLength: 1
              description: Messaging for when violations are detected in text
            ContentPolicyConfig:
              $ref: '#/components/schemas/ContentPolicyConfig'
            CreatedAt:
              type: string
              description: Time Stamp
              format: date-time
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the guardrail or its version
            FailureRecommendations:
              type: array
              items:
                type: string
                maxLength: 200
                minLength: 1
                description: Recommendation for guardrail failure status
              maxItems: 100
              description: List of failure recommendations
            GuardrailArn:
              type: string
              maxLength: 2048
              pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+$
              description: Arn representation for the guardrail
            GuardrailId:
              type: string
              maxLength: 64
              pattern: ^[a-z0-9]+$
              description: Unique id for the guardrail
            KmsKeyArn:
              type: string
              maxLength: 2048
              minLength: 1
              pattern: ^arn:aws(-[^:]+)?:kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$
              description: The KMS key with which the guardrail was encrypted at rest
            Name:
              type: string
              maxLength: 50
              minLength: 1
              pattern: ^[0-9a-zA-Z-_]+$
              description: Name of the guardrail
            SensitiveInformationPolicyConfig:
              $ref: '#/components/schemas/SensitiveInformationPolicyConfig'
            Status:
              $ref: '#/components/schemas/GuardrailStatus'
            StatusReasons:
              type: array
              items:
                type: string
                maxLength: 200
                minLength: 1
                description: Reason for guardrail status
              maxItems: 100
              description: List of status reasons
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 0
              description: List of Tags
            TopicPolicyConfig:
              $ref: '#/components/schemas/TopicPolicyConfig'
            UpdatedAt:
              type: string
              description: Time Stamp
              format: date-time
            Version:
              type: string
              pattern: ^(([1-9][0-9]{0,7})|(DRAFT))$
              description: Guardrail version
            WordPolicyConfig:
              $ref: '#/components/schemas/WordPolicyConfig'
          x-stackQL-stringOnly: true
      x-title: CreateGuardrailRequest
      type: object
      required: []
    CreateGuardrailVersionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the Guardrail version
            GuardrailArn:
              type: string
              maxLength: 2048
              pattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+$
              description: Arn representation for the guardrail
            GuardrailId:
              type: string
              maxLength: 64
              pattern: ^[a-z0-9]+$
              description: Unique id for the guardrail
            GuardrailIdentifier:
              type: string
              maxLength: 2048
              pattern: ^(([a-z0-9]+)|(arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:guardrail/[a-z0-9]+))$
              description: Identifier (GuardrailId or GuardrailArn) for the guardrail
            Version:
              type: string
              pattern: ^[1-9][0-9]{0,7}$
              description: Guardrail version
          x-stackQL-stringOnly: true
      x-title: CreateGuardrailVersionRequest
      type: object
      required: []
    CreateKnowledgeBaseRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Description:
              type: string
              maxLength: 200
              minLength: 1
              description: Description of the Resource.
            KnowledgeBaseConfiguration:
              $ref: '#/components/schemas/KnowledgeBaseConfiguration'
            KnowledgeBaseId:
              type: string
              pattern: ^[0-9a-zA-Z]{10}$
              description: The unique identifier of the knowledge base.
            KnowledgeBaseArn:
              type: string
              maxLength: 128
              minLength: 0
              pattern: ^arn:aws(|-cn|-us-gov):bedrock:[a-zA-Z0-9-]*:[0-9]{12}:knowledge-base/[0-9a-zA-Z]+$
              description: The ARN of the knowledge base.
            Name:
              type: string
              pattern: ^([0-9a-zA-Z][_-]?){1,100}$
              description: The name of the knowledge base.
            Status:
              $ref: '#/components/schemas/KnowledgeBaseStatus'
            RoleArn:
              type: string
              maxLength: 2048
              pattern: ^arn:aws(-[^:]+)?:iam::([0-9]{12})?:role/.+$
              description: The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
            CreatedAt:
              type: string
              description: The time at which the knowledge base was created.
            FailureReasons:
              type: array
              items:
                type: string
                maxLength: 2048
                description: Failure Reason for Error.
              maxItems: 2048
              description: A list of reasons that the API operation on the knowledge base failed.
              x-insertionOrder: false
            UpdatedAt:
              type: string
              description: The time at which the knowledge base was last updated.
            StorageConfiguration:
              $ref: '#/components/schemas/StorageConfiguration'
            Tags:
              $ref: '#/components/schemas/TagsMap'
          x-stackQL-stringOnly: true
      x-title: CreateKnowledgeBaseRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    agents:
      name: agents
      id: aws.bedrock.agents
      x-cfn-schema-name: Agent
      x-cfn-type-name: AWS::Bedrock::Agent
      x-identifiers:
        - AgentId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Agent&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::Agent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::Agent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::Agent"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/agents/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/agents/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/agents/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ActionGroups') as action_groups,
              JSON_EXTRACT(Properties, '$.AgentArn') as agent_arn,
              JSON_EXTRACT(Properties, '$.AgentId') as agent_id,
              JSON_EXTRACT(Properties, '$.AgentName') as agent_name,
              JSON_EXTRACT(Properties, '$.AgentResourceRoleArn') as agent_resource_role_arn,
              JSON_EXTRACT(Properties, '$.AgentStatus') as agent_status,
              JSON_EXTRACT(Properties, '$.AgentVersion') as agent_version,
              JSON_EXTRACT(Properties, '$.AutoPrepare') as auto_prepare,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.CustomerEncryptionKeyArn') as customer_encryption_key_arn,
              JSON_EXTRACT(Properties, '$.SkipResourceInUseCheckOnDelete') as skip_resource_in_use_check_on_delete,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FailureReasons') as failure_reasons,
              JSON_EXTRACT(Properties, '$.FoundationModel') as foundation_model,
              JSON_EXTRACT(Properties, '$.IdleSessionTTLInSeconds') as idle_session_ttl_in_seconds,
              JSON_EXTRACT(Properties, '$.Instruction') as instruction,
              JSON_EXTRACT(Properties, '$.KnowledgeBases') as knowledge_bases,
              JSON_EXTRACT(Properties, '$.PreparedAt') as prepared_at,
              JSON_EXTRACT(Properties, '$.PromptOverrideConfiguration') as prompt_override_configuration,
              JSON_EXTRACT(Properties, '$.RecommendedActions') as recommended_actions,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TestAliasTags') as test_alias_tags,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::Agent'
              AND data__Identifier = '<AgentId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ActionGroups') as action_groups,
                JSON_EXTRACT(detail.Properties, '$.AgentArn') as agent_arn,
                JSON_EXTRACT(detail.Properties, '$.AgentId') as agent_id,
                JSON_EXTRACT(detail.Properties, '$.AgentName') as agent_name,
                JSON_EXTRACT(detail.Properties, '$.AgentResourceRoleArn') as agent_resource_role_arn,
                JSON_EXTRACT(detail.Properties, '$.AgentStatus') as agent_status,
                JSON_EXTRACT(detail.Properties, '$.AgentVersion') as agent_version,
                JSON_EXTRACT(detail.Properties, '$.AutoPrepare') as auto_prepare,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.CustomerEncryptionKeyArn') as customer_encryption_key_arn,
                JSON_EXTRACT(detail.Properties, '$.SkipResourceInUseCheckOnDelete') as skip_resource_in_use_check_on_delete,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.FailureReasons') as failure_reasons,
                JSON_EXTRACT(detail.Properties, '$.FoundationModel') as foundation_model,
                JSON_EXTRACT(detail.Properties, '$.IdleSessionTTLInSeconds') as idle_session_ttl_in_seconds,
                JSON_EXTRACT(detail.Properties, '$.Instruction') as instruction,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBases') as knowledge_bases,
                JSON_EXTRACT(detail.Properties, '$.PreparedAt') as prepared_at,
                JSON_EXTRACT(detail.Properties, '$.PromptOverrideConfiguration') as prompt_override_configuration,
                JSON_EXTRACT(detail.Properties, '$.RecommendedActions') as recommended_actions,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TestAliasTags') as test_alias_tags,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Bedrock::Agent'
                AND detail.data__TypeName = 'AWS::Bedrock::Agent'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ActionGroups') as action_groups,
                  json_extract_path_text(Properties, 'AgentArn') as agent_arn,
                  json_extract_path_text(Properties, 'AgentId') as agent_id,
                  json_extract_path_text(Properties, 'AgentName') as agent_name,
                  json_extract_path_text(Properties, 'AgentResourceRoleArn') as agent_resource_role_arn,
                  json_extract_path_text(Properties, 'AgentStatus') as agent_status,
                  json_extract_path_text(Properties, 'AgentVersion') as agent_version,
                  json_extract_path_text(Properties, 'AutoPrepare') as auto_prepare,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'CustomerEncryptionKeyArn') as customer_encryption_key_arn,
                  json_extract_path_text(Properties, 'SkipResourceInUseCheckOnDelete') as skip_resource_in_use_check_on_delete,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'FailureReasons') as failure_reasons,
                  json_extract_path_text(Properties, 'FoundationModel') as foundation_model,
                  json_extract_path_text(Properties, 'IdleSessionTTLInSeconds') as idle_session_ttl_in_seconds,
                  json_extract_path_text(Properties, 'Instruction') as instruction,
                  json_extract_path_text(Properties, 'KnowledgeBases') as knowledge_bases,
                  json_extract_path_text(Properties, 'PreparedAt') as prepared_at,
                  json_extract_path_text(Properties, 'PromptOverrideConfiguration') as prompt_override_configuration,
                  json_extract_path_text(Properties, 'RecommendedActions') as recommended_actions,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TestAliasTags') as test_alias_tags,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::Agent'
                  AND data__Identifier = '<AgentId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ActionGroups') as action_groups,
                    json_extract_path_text(detail.Properties, 'AgentArn') as agent_arn,
                    json_extract_path_text(detail.Properties, 'AgentId') as agent_id,
                    json_extract_path_text(detail.Properties, 'AgentName') as agent_name,
                    json_extract_path_text(detail.Properties, 'AgentResourceRoleArn') as agent_resource_role_arn,
                    json_extract_path_text(detail.Properties, 'AgentStatus') as agent_status,
                    json_extract_path_text(detail.Properties, 'AgentVersion') as agent_version,
                    json_extract_path_text(detail.Properties, 'AutoPrepare') as auto_prepare,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'CustomerEncryptionKeyArn') as customer_encryption_key_arn,
                    json_extract_path_text(detail.Properties, 'SkipResourceInUseCheckOnDelete') as skip_resource_in_use_check_on_delete,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'FailureReasons') as failure_reasons,
                    json_extract_path_text(detail.Properties, 'FoundationModel') as foundation_model,
                    json_extract_path_text(detail.Properties, 'IdleSessionTTLInSeconds') as idle_session_ttl_in_seconds,
                    json_extract_path_text(detail.Properties, 'Instruction') as instruction,
                    json_extract_path_text(detail.Properties, 'KnowledgeBases') as knowledge_bases,
                    json_extract_path_text(detail.Properties, 'PreparedAt') as prepared_at,
                    json_extract_path_text(detail.Properties, 'PromptOverrideConfiguration') as prompt_override_configuration,
                    json_extract_path_text(detail.Properties, 'RecommendedActions') as recommended_actions,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TestAliasTags') as test_alias_tags,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Bedrock::Agent'
                    AND detail.data__TypeName = 'AWS::Bedrock::Agent'
                    AND listing.region = 'us-east-1'
    agents_list_only:
      name: agents_list_only
      id: aws.bedrock.agents_list_only
      x-cfn-schema-name: Agent
      x-cfn-type-name: AWS::Bedrock::Agent
      x-identifiers:
        - AgentId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AgentId') as agent_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::Agent'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AgentId') as agent_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::Agent'
                AND region = 'us-east-1'
    agent_tags:
      name: agent_tags
      id: aws.bedrock.agent_tags
      x-cfn-schema-name: Agent
      x-cfn-type-name: AWS::Bedrock::Agent
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ActionGroups') as action_groups,
              JSON_EXTRACT(detail.Properties, '$.AgentArn') as agent_arn,
              JSON_EXTRACT(detail.Properties, '$.AgentId') as agent_id,
              JSON_EXTRACT(detail.Properties, '$.AgentName') as agent_name,
              JSON_EXTRACT(detail.Properties, '$.AgentResourceRoleArn') as agent_resource_role_arn,
              JSON_EXTRACT(detail.Properties, '$.AgentStatus') as agent_status,
              JSON_EXTRACT(detail.Properties, '$.AgentVersion') as agent_version,
              JSON_EXTRACT(detail.Properties, '$.AutoPrepare') as auto_prepare,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.CustomerEncryptionKeyArn') as customer_encryption_key_arn,
              JSON_EXTRACT(detail.Properties, '$.SkipResourceInUseCheckOnDelete') as skip_resource_in_use_check_on_delete,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.FailureReasons') as failure_reasons,
              JSON_EXTRACT(detail.Properties, '$.FoundationModel') as foundation_model,
              JSON_EXTRACT(detail.Properties, '$.IdleSessionTTLInSeconds') as idle_session_ttl_in_seconds,
              JSON_EXTRACT(detail.Properties, '$.Instruction') as instruction,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBases') as knowledge_bases,
              JSON_EXTRACT(detail.Properties, '$.PreparedAt') as prepared_at,
              JSON_EXTRACT(detail.Properties, '$.PromptOverrideConfiguration') as prompt_override_configuration,
              JSON_EXTRACT(detail.Properties, '$.RecommendedActions') as recommended_actions,
              JSON_EXTRACT(detail.Properties, '$.TestAliasTags') as test_alias_tags,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Bedrock::Agent'
              AND detail.data__TypeName = 'AWS::Bedrock::Agent'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ActionGroups') as action_groups,
                json_extract_path_text(detail.Properties, 'AgentArn') as agent_arn,
                json_extract_path_text(detail.Properties, 'AgentId') as agent_id,
                json_extract_path_text(detail.Properties, 'AgentName') as agent_name,
                json_extract_path_text(detail.Properties, 'AgentResourceRoleArn') as agent_resource_role_arn,
                json_extract_path_text(detail.Properties, 'AgentStatus') as agent_status,
                json_extract_path_text(detail.Properties, 'AgentVersion') as agent_version,
                json_extract_path_text(detail.Properties, 'AutoPrepare') as auto_prepare,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'CustomerEncryptionKeyArn') as customer_encryption_key_arn,
                json_extract_path_text(detail.Properties, 'SkipResourceInUseCheckOnDelete') as skip_resource_in_use_check_on_delete,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'FailureReasons') as failure_reasons,
                json_extract_path_text(detail.Properties, 'FoundationModel') as foundation_model,
                json_extract_path_text(detail.Properties, 'IdleSessionTTLInSeconds') as idle_session_ttl_in_seconds,
                json_extract_path_text(detail.Properties, 'Instruction') as instruction,
                json_extract_path_text(detail.Properties, 'KnowledgeBases') as knowledge_bases,
                json_extract_path_text(detail.Properties, 'PreparedAt') as prepared_at,
                json_extract_path_text(detail.Properties, 'PromptOverrideConfiguration') as prompt_override_configuration,
                json_extract_path_text(detail.Properties, 'RecommendedActions') as recommended_actions,
                json_extract_path_text(detail.Properties, 'TestAliasTags') as test_alias_tags,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Bedrock::Agent'
                AND detail.data__TypeName = 'AWS::Bedrock::Agent'
                AND listing.region = 'us-east-1'
    agent_aliases:
      name: agent_aliases
      id: aws.bedrock.agent_aliases
      x-cfn-schema-name: AgentAlias
      x-cfn-type-name: AWS::Bedrock::AgentAlias
      x-identifiers:
        - AgentId
        - AgentAliasId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AgentAlias&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::AgentAlias"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::AgentAlias"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::AgentAlias"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/agent_aliases/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/agent_aliases/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/agent_aliases/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AgentAliasArn') as agent_alias_arn,
              JSON_EXTRACT(Properties, '$.AgentAliasHistoryEvents') as agent_alias_history_events,
              JSON_EXTRACT(Properties, '$.AgentAliasId') as agent_alias_id,
              JSON_EXTRACT(Properties, '$.AgentAliasName') as agent_alias_name,
              JSON_EXTRACT(Properties, '$.AgentAliasStatus') as agent_alias_status,
              JSON_EXTRACT(Properties, '$.AgentId') as agent_id,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RoutingConfiguration') as routing_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::AgentAlias'
              AND data__Identifier = '<AgentId>|<AgentAliasId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AgentAliasArn') as agent_alias_arn,
                JSON_EXTRACT(detail.Properties, '$.AgentAliasHistoryEvents') as agent_alias_history_events,
                JSON_EXTRACT(detail.Properties, '$.AgentAliasId') as agent_alias_id,
                JSON_EXTRACT(detail.Properties, '$.AgentAliasName') as agent_alias_name,
                JSON_EXTRACT(detail.Properties, '$.AgentAliasStatus') as agent_alias_status,
                JSON_EXTRACT(detail.Properties, '$.AgentId') as agent_id,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.RoutingConfiguration') as routing_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Bedrock::AgentAlias'
                AND detail.data__TypeName = 'AWS::Bedrock::AgentAlias'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AgentAliasArn') as agent_alias_arn,
                  json_extract_path_text(Properties, 'AgentAliasHistoryEvents') as agent_alias_history_events,
                  json_extract_path_text(Properties, 'AgentAliasId') as agent_alias_id,
                  json_extract_path_text(Properties, 'AgentAliasName') as agent_alias_name,
                  json_extract_path_text(Properties, 'AgentAliasStatus') as agent_alias_status,
                  json_extract_path_text(Properties, 'AgentId') as agent_id,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'RoutingConfiguration') as routing_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::AgentAlias'
                  AND data__Identifier = '<AgentId>|<AgentAliasId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AgentAliasArn') as agent_alias_arn,
                    json_extract_path_text(detail.Properties, 'AgentAliasHistoryEvents') as agent_alias_history_events,
                    json_extract_path_text(detail.Properties, 'AgentAliasId') as agent_alias_id,
                    json_extract_path_text(detail.Properties, 'AgentAliasName') as agent_alias_name,
                    json_extract_path_text(detail.Properties, 'AgentAliasStatus') as agent_alias_status,
                    json_extract_path_text(detail.Properties, 'AgentId') as agent_id,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'RoutingConfiguration') as routing_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Bedrock::AgentAlias'
                    AND detail.data__TypeName = 'AWS::Bedrock::AgentAlias'
                    AND listing.region = 'us-east-1'
    agent_aliases_list_only:
      name: agent_aliases_list_only
      id: aws.bedrock.agent_aliases_list_only
      x-cfn-schema-name: AgentAlias
      x-cfn-type-name: AWS::Bedrock::AgentAlias
      x-identifiers:
        - AgentId
        - AgentAliasId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AgentId') as agent_id,
              JSON_EXTRACT(Properties, '$.AgentAliasId') as agent_alias_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::AgentAlias'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AgentId') as agent_id,
                json_extract_path_text(Properties, 'AgentAliasId') as agent_alias_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::AgentAlias'
                AND region = 'us-east-1'
    agent_alias_tags:
      name: agent_alias_tags
      id: aws.bedrock.agent_alias_tags
      x-cfn-schema-name: AgentAlias
      x-cfn-type-name: AWS::Bedrock::AgentAlias
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AgentAliasArn') as agent_alias_arn,
              JSON_EXTRACT(detail.Properties, '$.AgentAliasHistoryEvents') as agent_alias_history_events,
              JSON_EXTRACT(detail.Properties, '$.AgentAliasId') as agent_alias_id,
              JSON_EXTRACT(detail.Properties, '$.AgentAliasName') as agent_alias_name,
              JSON_EXTRACT(detail.Properties, '$.AgentAliasStatus') as agent_alias_status,
              JSON_EXTRACT(detail.Properties, '$.AgentId') as agent_id,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.RoutingConfiguration') as routing_configuration,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Bedrock::AgentAlias'
              AND detail.data__TypeName = 'AWS::Bedrock::AgentAlias'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AgentAliasArn') as agent_alias_arn,
                json_extract_path_text(detail.Properties, 'AgentAliasHistoryEvents') as agent_alias_history_events,
                json_extract_path_text(detail.Properties, 'AgentAliasId') as agent_alias_id,
                json_extract_path_text(detail.Properties, 'AgentAliasName') as agent_alias_name,
                json_extract_path_text(detail.Properties, 'AgentAliasStatus') as agent_alias_status,
                json_extract_path_text(detail.Properties, 'AgentId') as agent_id,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'RoutingConfiguration') as routing_configuration,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Bedrock::AgentAlias'
                AND detail.data__TypeName = 'AWS::Bedrock::AgentAlias'
                AND listing.region = 'us-east-1'
    data_sources:
      name: data_sources
      id: aws.bedrock.data_sources
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::Bedrock::DataSource
      x-identifiers:
        - KnowledgeBaseId
        - DataSourceId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataSource&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::DataSource"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_sources/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DataSourceConfiguration') as data_source_configuration,
              JSON_EXTRACT(Properties, '$.DataSourceId') as data_source_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(Properties, '$.DataSourceStatus') as data_source_status,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
              JSON_EXTRACT(Properties, '$.VectorIngestionConfiguration') as vector_ingestion_configuration,
              JSON_EXTRACT(Properties, '$.DataDeletionPolicy') as data_deletion_policy,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.FailureReasons') as failure_reasons
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::DataSource'
              AND data__Identifier = '<KnowledgeBaseId>|<DataSourceId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DataSourceConfiguration') as data_source_configuration,
                JSON_EXTRACT(detail.Properties, '$.DataSourceId') as data_source_id,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseId') as knowledge_base_id,
                JSON_EXTRACT(detail.Properties, '$.DataSourceStatus') as data_source_status,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                JSON_EXTRACT(detail.Properties, '$.VectorIngestionConfiguration') as vector_ingestion_configuration,
                JSON_EXTRACT(detail.Properties, '$.DataDeletionPolicy') as data_deletion_policy,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.FailureReasons') as failure_reasons
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Bedrock::DataSource'
                AND detail.data__TypeName = 'AWS::Bedrock::DataSource'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DataSourceConfiguration') as data_source_configuration,
                  json_extract_path_text(Properties, 'DataSourceId') as data_source_id,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KnowledgeBaseId') as knowledge_base_id,
                  json_extract_path_text(Properties, 'DataSourceStatus') as data_source_status,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                  json_extract_path_text(Properties, 'VectorIngestionConfiguration') as vector_ingestion_configuration,
                  json_extract_path_text(Properties, 'DataDeletionPolicy') as data_deletion_policy,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'FailureReasons') as failure_reasons
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::DataSource'
                  AND data__Identifier = '<KnowledgeBaseId>|<DataSourceId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DataSourceConfiguration') as data_source_configuration,
                    json_extract_path_text(detail.Properties, 'DataSourceId') as data_source_id,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseId') as knowledge_base_id,
                    json_extract_path_text(detail.Properties, 'DataSourceStatus') as data_source_status,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ServerSideEncryptionConfiguration') as server_side_encryption_configuration,
                    json_extract_path_text(detail.Properties, 'VectorIngestionConfiguration') as vector_ingestion_configuration,
                    json_extract_path_text(detail.Properties, 'DataDeletionPolicy') as data_deletion_policy,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'FailureReasons') as failure_reasons
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Bedrock::DataSource'
                    AND detail.data__TypeName = 'AWS::Bedrock::DataSource'
                    AND listing.region = 'us-east-1'
    data_sources_list_only:
      name: data_sources_list_only
      id: aws.bedrock.data_sources_list_only
      x-cfn-schema-name: DataSource
      x-cfn-type-name: AWS::Bedrock::DataSource
      x-identifiers:
        - KnowledgeBaseId
        - DataSourceId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(Properties, '$.DataSourceId') as data_source_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::DataSource'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KnowledgeBaseId') as knowledge_base_id,
                json_extract_path_text(Properties, 'DataSourceId') as data_source_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::DataSource'
                AND region = 'us-east-1'
    guardrails:
      name: guardrails
      id: aws.bedrock.guardrails
      x-cfn-schema-name: Guardrail
      x-cfn-type-name: AWS::Bedrock::Guardrail
      x-identifiers:
        - GuardrailArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Guardrail&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::Guardrail"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::Guardrail"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::Guardrail"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/guardrails/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/guardrails/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/guardrails/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BlockedInputMessaging') as blocked_input_messaging,
              JSON_EXTRACT(Properties, '$.BlockedOutputsMessaging') as blocked_outputs_messaging,
              JSON_EXTRACT(Properties, '$.ContentPolicyConfig') as content_policy_config,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.FailureRecommendations') as failure_recommendations,
              JSON_EXTRACT(Properties, '$.GuardrailArn') as guardrail_arn,
              JSON_EXTRACT(Properties, '$.GuardrailId') as guardrail_id,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.StatusReasons') as status_reasons,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TopicPolicyConfig') as topic_policy_config,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.WordPolicyConfig') as word_policy_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::Guardrail'
              AND data__Identifier = '<GuardrailArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.BlockedInputMessaging') as blocked_input_messaging,
                JSON_EXTRACT(detail.Properties, '$.BlockedOutputsMessaging') as blocked_outputs_messaging,
                JSON_EXTRACT(detail.Properties, '$.ContentPolicyConfig') as content_policy_config,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.FailureRecommendations') as failure_recommendations,
                JSON_EXTRACT(detail.Properties, '$.GuardrailArn') as guardrail_arn,
                JSON_EXTRACT(detail.Properties, '$.GuardrailId') as guardrail_id,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.StatusReasons') as status_reasons,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.TopicPolicyConfig') as topic_policy_config,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.Version') as version,
                JSON_EXTRACT(detail.Properties, '$.WordPolicyConfig') as word_policy_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Bedrock::Guardrail'
                AND detail.data__TypeName = 'AWS::Bedrock::Guardrail'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'BlockedInputMessaging') as blocked_input_messaging,
                  json_extract_path_text(Properties, 'BlockedOutputsMessaging') as blocked_outputs_messaging,
                  json_extract_path_text(Properties, 'ContentPolicyConfig') as content_policy_config,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'FailureRecommendations') as failure_recommendations,
                  json_extract_path_text(Properties, 'GuardrailArn') as guardrail_arn,
                  json_extract_path_text(Properties, 'GuardrailId') as guardrail_id,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'StatusReasons') as status_reasons,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TopicPolicyConfig') as topic_policy_config,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'Version') as version,
                  json_extract_path_text(Properties, 'WordPolicyConfig') as word_policy_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::Guardrail'
                  AND data__Identifier = '<GuardrailArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'BlockedInputMessaging') as blocked_input_messaging,
                    json_extract_path_text(detail.Properties, 'BlockedOutputsMessaging') as blocked_outputs_messaging,
                    json_extract_path_text(detail.Properties, 'ContentPolicyConfig') as content_policy_config,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'FailureRecommendations') as failure_recommendations,
                    json_extract_path_text(detail.Properties, 'GuardrailArn') as guardrail_arn,
                    json_extract_path_text(detail.Properties, 'GuardrailId') as guardrail_id,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'StatusReasons') as status_reasons,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'TopicPolicyConfig') as topic_policy_config,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'Version') as version,
                    json_extract_path_text(detail.Properties, 'WordPolicyConfig') as word_policy_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Bedrock::Guardrail'
                    AND detail.data__TypeName = 'AWS::Bedrock::Guardrail'
                    AND listing.region = 'us-east-1'
    guardrails_list_only:
      name: guardrails_list_only
      id: aws.bedrock.guardrails_list_only
      x-cfn-schema-name: Guardrail
      x-cfn-type-name: AWS::Bedrock::Guardrail
      x-identifiers:
        - GuardrailArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.GuardrailArn') as guardrail_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::Guardrail'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'GuardrailArn') as guardrail_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::Guardrail'
                AND region = 'us-east-1'
    guardrail_tags:
      name: guardrail_tags
      id: aws.bedrock.guardrail_tags
      x-cfn-schema-name: Guardrail
      x-cfn-type-name: AWS::Bedrock::Guardrail
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.BlockedInputMessaging') as blocked_input_messaging,
              JSON_EXTRACT(detail.Properties, '$.BlockedOutputsMessaging') as blocked_outputs_messaging,
              JSON_EXTRACT(detail.Properties, '$.ContentPolicyConfig') as content_policy_config,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.FailureRecommendations') as failure_recommendations,
              JSON_EXTRACT(detail.Properties, '$.GuardrailArn') as guardrail_arn,
              JSON_EXTRACT(detail.Properties, '$.GuardrailId') as guardrail_id,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.StatusReasons') as status_reasons,
              JSON_EXTRACT(detail.Properties, '$.TopicPolicyConfig') as topic_policy_config,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(detail.Properties, '$.Version') as version,
              JSON_EXTRACT(detail.Properties, '$.WordPolicyConfig') as word_policy_config
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Bedrock::Guardrail'
              AND detail.data__TypeName = 'AWS::Bedrock::Guardrail'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'BlockedInputMessaging') as blocked_input_messaging,
                json_extract_path_text(detail.Properties, 'BlockedOutputsMessaging') as blocked_outputs_messaging,
                json_extract_path_text(detail.Properties, 'ContentPolicyConfig') as content_policy_config,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'FailureRecommendations') as failure_recommendations,
                json_extract_path_text(detail.Properties, 'GuardrailArn') as guardrail_arn,
                json_extract_path_text(detail.Properties, 'GuardrailId') as guardrail_id,
                json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'SensitiveInformationPolicyConfig') as sensitive_information_policy_config,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'StatusReasons') as status_reasons,
                json_extract_path_text(detail.Properties, 'TopicPolicyConfig') as topic_policy_config,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(detail.Properties, 'Version') as version,
                json_extract_path_text(detail.Properties, 'WordPolicyConfig') as word_policy_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Bedrock::Guardrail'
                AND detail.data__TypeName = 'AWS::Bedrock::Guardrail'
                AND listing.region = 'us-east-1'
    guardrail_versions:
      name: guardrail_versions
      id: aws.bedrock.guardrail_versions
      x-cfn-schema-name: GuardrailVersion
      x-cfn-type-name: AWS::Bedrock::GuardrailVersion
      x-identifiers:
        - GuardrailId
        - Version
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__GuardrailVersion&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::GuardrailVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::GuardrailVersion"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/guardrail_versions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/guardrail_versions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.GuardrailArn') as guardrail_arn,
              JSON_EXTRACT(Properties, '$.GuardrailId') as guardrail_id,
              JSON_EXTRACT(Properties, '$.GuardrailIdentifier') as guardrail_identifier,
              JSON_EXTRACT(Properties, '$.Version') as version
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::GuardrailVersion'
              AND data__Identifier = '<GuardrailId>|<Version>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'GuardrailArn') as guardrail_arn,
                json_extract_path_text(Properties, 'GuardrailId') as guardrail_id,
                json_extract_path_text(Properties, 'GuardrailIdentifier') as guardrail_identifier,
                json_extract_path_text(Properties, 'Version') as version
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::GuardrailVersion'
                AND data__Identifier = '<GuardrailId>|<Version>'
                AND region = 'us-east-1'
    knowledge_bases:
      name: knowledge_bases
      id: aws.bedrock.knowledge_bases
      x-cfn-schema-name: KnowledgeBase
      x-cfn-type-name: AWS::Bedrock::KnowledgeBase
      x-identifiers:
        - KnowledgeBaseId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__KnowledgeBase&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::KnowledgeBase"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::KnowledgeBase"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Bedrock::KnowledgeBase"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/knowledge_bases/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/knowledge_bases/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/knowledge_bases/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseConfiguration') as knowledge_base_configuration,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.FailureReasons') as failure_reasons,
              JSON_EXTRACT(Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(Properties, '$.StorageConfiguration') as storage_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::KnowledgeBase'
              AND data__Identifier = '<KnowledgeBaseId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseConfiguration') as knowledge_base_configuration,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseId') as knowledge_base_id,
                JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
                JSON_EXTRACT(detail.Properties, '$.FailureReasons') as failure_reasons,
                JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
                JSON_EXTRACT(detail.Properties, '$.StorageConfiguration') as storage_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                AND detail.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KnowledgeBaseConfiguration') as knowledge_base_configuration,
                  json_extract_path_text(Properties, 'KnowledgeBaseId') as knowledge_base_id,
                  json_extract_path_text(Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'FailureReasons') as failure_reasons,
                  json_extract_path_text(Properties, 'UpdatedAt') as updated_at,
                  json_extract_path_text(Properties, 'StorageConfiguration') as storage_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                  AND data__Identifier = '<KnowledgeBaseId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseConfiguration') as knowledge_base_configuration,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseId') as knowledge_base_id,
                    json_extract_path_text(detail.Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                    json_extract_path_text(detail.Properties, 'FailureReasons') as failure_reasons,
                    json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                    json_extract_path_text(detail.Properties, 'StorageConfiguration') as storage_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                    AND detail.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                    AND listing.region = 'us-east-1'
    knowledge_bases_list_only:
      name: knowledge_bases_list_only
      id: aws.bedrock.knowledge_bases_list_only
      x-cfn-schema-name: KnowledgeBase
      x-cfn-type-name: AWS::Bedrock::KnowledgeBase
      x-identifiers:
        - KnowledgeBaseId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.KnowledgeBaseId') as knowledge_base_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::KnowledgeBase'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'KnowledgeBaseId') as knowledge_base_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                AND region = 'us-east-1'
    knowledge_base_tags:
      name: knowledge_base_tags
      id: aws.bedrock.knowledge_base_tags
      x-cfn-schema-name: KnowledgeBase
      x-cfn-type-name: AWS::Bedrock::KnowledgeBase
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseConfiguration') as knowledge_base_configuration,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseId') as knowledge_base_id,
              JSON_EXTRACT(detail.Properties, '$.KnowledgeBaseArn') as knowledge_base_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(detail.Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(detail.Properties, '$.FailureReasons') as failure_reasons,
              JSON_EXTRACT(detail.Properties, '$.UpdatedAt') as updated_at,
              JSON_EXTRACT(detail.Properties, '$.StorageConfiguration') as storage_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
              AND detail.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseConfiguration') as knowledge_base_configuration,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseId') as knowledge_base_id,
                json_extract_path_text(detail.Properties, 'KnowledgeBaseArn') as knowledge_base_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                json_extract_path_text(detail.Properties, 'CreatedAt') as created_at,
                json_extract_path_text(detail.Properties, 'FailureReasons') as failure_reasons,
                json_extract_path_text(detail.Properties, 'UpdatedAt') as updated_at,
                json_extract_path_text(detail.Properties, 'StorageConfiguration') as storage_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                AND detail.data__TypeName = 'AWS::Bedrock::KnowledgeBase'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Agent&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAgent
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAgentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AgentAlias&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAgentAlias
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAgentAliasRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataSource&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataSource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataSourceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Guardrail&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGuardrail
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGuardrailRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__GuardrailVersion&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateGuardrailVersion
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateGuardrailVersionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__KnowledgeBase&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateKnowledgeBase
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateKnowledgeBaseRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
