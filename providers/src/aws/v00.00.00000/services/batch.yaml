openapi: 3.0.0
info:
  title: Batch
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ComputeResources:
      type: object
      additionalProperties: false
      properties:
        AllocationStrategy:
          type: string
        BidPercentage:
          type: integer
        DesiredvCpus:
          type: integer
        Ec2Configuration:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Ec2ConfigurationObject'
        Ec2KeyPair:
          type: string
        ImageId:
          type: string
        InstanceRole:
          type: string
        InstanceTypes:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        LaunchTemplate:
          $ref: '#/components/schemas/LaunchTemplateSpecification'
        MaxvCpus:
          type: integer
        MinvCpus:
          type: integer
        PlacementGroup:
          type: string
        SecurityGroupIds:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        SpotIamFleetRole:
          type: string
        Subnets:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            type: string
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
        Type:
          type: string
        UpdateToLatestImageVersion:
          type: boolean
          default: false
      required:
        - Subnets
        - Type
        - MaxvCpus
    Ec2ConfigurationObject:
      type: object
      additionalProperties: false
      properties:
        ImageIdOverride:
          type: string
        ImageType:
          type: string
        ImageKubernetesVersion:
          type: string
      required:
        - ImageType
    LaunchTemplateSpecification:
      type: object
      additionalProperties: false
      properties:
        LaunchTemplateId:
          type: string
        LaunchTemplateName:
          type: string
        Version:
          type: string
    UpdatePolicy:
      type: object
      additionalProperties: false
      properties:
        TerminateJobsOnUpdate:
          type: boolean
          default: false
        JobExecutionTimeoutMinutes:
          type: integer
          default: 30
    EksConfiguration:
      type: object
      additionalProperties: false
      properties:
        EksClusterArn:
          type: string
          default: false
        KubernetesNamespace:
          type: string
          default: false
      required:
        - EksClusterArn
        - KubernetesNamespace
    ComputeEnvironment:
      type: object
      properties:
        ComputeEnvironmentArn:
          type: string
        ComputeEnvironmentName:
          type: string
        ComputeResources:
          $ref: '#/components/schemas/ComputeResources'
        ReplaceComputeEnvironment:
          type: boolean
          default: true
        ServiceRole:
          type: string
        State:
          type: string
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
        Type:
          type: string
        UpdatePolicy:
          $ref: '#/components/schemas/UpdatePolicy'
        UnmanagedvCpus:
          type: integer
        EksConfiguration:
          $ref: '#/components/schemas/EksConfiguration'
      required:
        - Type
      x-stackql-resource-name: compute_environment
      description: Resource Type definition for AWS::Batch::ComputeEnvironment
      x-type-name: AWS::Batch::ComputeEnvironment
      x-stackql-primary-identifier:
        - ComputeEnvironmentArn
      x-stackql-additional-identifiers:
        - - ComputeEnvironmentName
      x-create-only-properties:
        - ComputeResources/SpotIamFleetRole
        - ComputeEnvironmentName
        - Tags
        - Type
        - EksConfiguration
      x-conditional-create-only-properties:
        - ComputeResources/AllocationStrategy
        - ComputeResources/BidPercentage
        - ComputeResources/Ec2Configuration
        - ComputeResources/Ec2KeyPair
        - ComputeResources/ImageId
        - ComputeResources/InstanceRole
        - ComputeResources/InstanceTypes
        - ComputeResources/LaunchTemplate
        - ComputeResources/PlacementGroup
        - ComputeResources/SecurityGroupIds
        - ComputeResources/Subnets
        - ComputeResources/Tags
        - ComputeResources/Type
      x-write-only-properties:
        - ComputeResources/UpdateToLatestImageVersion
        - ReplaceComputeEnvironment
        - UpdatePolicy
      x-read-only-properties:
        - ComputeEnvironmentArn
      x-required-properties:
        - Type
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - Batch:CreateComputeEnvironment
          - Batch:TagResource
          - Batch:DescribeComputeEnvironments
          - iam:CreateServiceLinkedRole
          - Iam:PassRole
          - Eks:DescribeCluster
        read:
          - Batch:DescribeComputeEnvironments
        update:
          - Batch:UpdateComputeEnvironment
          - Batch:DescribeComputeEnvironments
          - Batch:TagResource
          - Batch:UnTagResource
          - Iam:PassRole
          - Eks:DescribeCluster
        delete:
          - Batch:DeleteComputeEnvironment
          - Batch:DescribeComputeEnvironments
          - Batch:UpdateComputeEnvironment
          - Iam:PassRole
          - Eks:DescribeCluster
        list:
          - Batch:DescribeComputeEnvironments
    ResourceArn:
      description: ARN of the Scheduling Policy.
      type: string
    ComputeEnvironmentOrder:
      type: object
      additionalProperties: false
      properties:
        ComputeEnvironment:
          type: string
        Order:
          type: integer
      required:
        - ComputeEnvironment
        - Order
    JobStateTimeLimitAction:
      type: object
      additionalProperties: false
      properties:
        Action:
          type: string
          enum:
            - CANCEL
        MaxTimeSeconds:
          type: integer
          minimum: 600
          maximum: 86400
        Reason:
          type: string
        State:
          type: string
          enum:
            - RUNNABLE
      required:
        - Action
        - MaxTimeSeconds
        - Reason
        - State
    JobQueue:
      type: object
      properties:
        JobQueueName:
          type: string
          minLength: 1
          maxLength: 128
        JobQueueArn:
          $ref: '#/components/schemas/ResourceArn'
        ComputeEnvironmentOrder:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ComputeEnvironmentOrder'
        JobStateTimeLimitActions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/JobStateTimeLimitAction'
        Priority:
          type: integer
          minimum: 0
          maximum: 1000
        State:
          type: string
          enum:
            - DISABLED
            - ENABLED
        SchedulingPolicyArn:
          $ref: '#/components/schemas/ResourceArn'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
      required:
        - ComputeEnvironmentOrder
        - Priority
      x-stackql-resource-name: job_queue
      description: Resource Type definition for AWS::Batch::JobQueue
      x-type-name: AWS::Batch::JobQueue
      x-stackql-primary-identifier:
        - JobQueueArn
      x-create-only-properties:
        - Tags
        - JobQueueName
      x-read-only-properties:
        - JobQueueArn
      x-required-properties:
        - ComputeEnvironmentOrder
        - Priority
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - Batch:CreateJobQueue
          - Batch:TagResource
          - Batch:DescribeJobQueues
        read:
          - Batch:DescribeJobQueues
        update:
          - Batch:DescribeJobQueues
          - Batch:UpdateJobQueue
          - Batch:TagResource
          - Batch:UnTagResource
        delete:
          - Batch:UpdateJobQueue
          - Batch:DescribeJobQueues
          - Batch:DeleteJobQueue
        list:
          - Batch:DescribeJobQueues
    FairsharePolicy:
      description: Fair Share Policy for the Job Queue.
      type: object
      properties:
        ShareDecaySeconds:
          type: number
          minimum: 0
          maximum: 604800
        ComputeReservation:
          type: number
          minimum: 0
          maximum: 99
        ShareDistribution:
          description: List of Share Attributes
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ShareAttributes'
      required: []
      additionalProperties: false
    ShareAttributes:
      type: object
      properties:
        ShareIdentifier:
          type: string
        WeightFactor:
          type: number
          minimum: 0
          maximum: 1000
      required: []
      additionalProperties: false
    SchedulingPolicy:
      type: object
      properties:
        Name:
          description: Name of Scheduling Policy.
          type: string
          pattern: ''
        Arn:
          $ref: '#/components/schemas/ResourceArn'
        FairsharePolicy:
          $ref: '#/components/schemas/FairsharePolicy'
        Tags:
          type: object
          description: A key-value pair to associate with a resource.
          x-patternProperties:
            .*:
              type: string
          additionalProperties: false
      x-stackql-resource-name: scheduling_policy
      description: Resource Type schema for AWS::Batch::SchedulingPolicy
      x-type-name: AWS::Batch::SchedulingPolicy
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Tags
      x-read-only-properties:
        - Arn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - Batch:CreateSchedulingPolicy
          - Batch:TagResource
        read:
          - Batch:DescribeSchedulingPolicies
        update:
          - Batch:UpdateSchedulingPolicy
          - Batch:TagResource
          - Batch:UnTagResource
        delete:
          - Batch:DescribeSchedulingPolicies
          - Batch:DeleteSchedulingPolicy
        list:
          - Batch:ListSchedulingPolicies
          - Batch:DescribeSchedulingPolicies
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    compute_environments:
      name: compute_environments
      id: aws.batch.compute_environments
      x-cfn-schema-name: ComputeEnvironment
      x-cfn-type-name: AWS::Batch::ComputeEnvironment
      x-identifiers:
        - ComputeEnvironmentArn
      methods:
        create_resource:
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::ComputeEnvironment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/compute_environments/methods/create_resource'
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentArn') as compute_environment_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ComputeEnvironmentArn') as compute_environment_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
                AND region = 'us-east-1'
    compute_environment:
      name: compute_environment
      id: aws.batch.compute_environment
      x-cfn-schema-name: ComputeEnvironment
      x-cfn-type-name: AWS::Batch::ComputeEnvironment
      x-identifiers:
        - ComputeEnvironmentArn
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::ComputeEnvironment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::ComputeEnvironment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/compute_environment/methods/update_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/compute_environment/methods/delete_resource'
      x-type: get
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentArn') as compute_environment_arn,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentName') as compute_environment_name,
              JSON_EXTRACT(Properties, '$.ComputeResources') as compute_resources,
              JSON_EXTRACT(Properties, '$.ReplaceComputeEnvironment') as replace_compute_environment,
              JSON_EXTRACT(Properties, '$.ServiceRole') as service_role,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.UpdatePolicy') as update_policy,
              JSON_EXTRACT(Properties, '$.UnmanagedvCpus') as unmanagedv_cpus,
              JSON_EXTRACT(Properties, '$.EksConfiguration') as eks_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
              AND data__Identifier = '<ComputeEnvironmentArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'ComputeEnvironmentArn') as compute_environment_arn,
                json_extract_path_text(Properties, 'ComputeEnvironmentName') as compute_environment_name,
                json_extract_path_text(Properties, 'ComputeResources') as compute_resources,
                json_extract_path_text(Properties, 'ReplaceComputeEnvironment') as replace_compute_environment,
                json_extract_path_text(Properties, 'ServiceRole') as service_role,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Type') as type,
                json_extract_path_text(Properties, 'UpdatePolicy') as update_policy,
                json_extract_path_text(Properties, 'UnmanagedvCpus') as unmanagedv_cpus,
                json_extract_path_text(Properties, 'EksConfiguration') as eks_configuration
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::ComputeEnvironment'
                AND data__Identifier = '<ComputeEnvironmentArn>'
                AND region = 'us-east-1'
    job_queues:
      name: job_queues
      id: aws.batch.job_queues
      x-cfn-schema-name: JobQueue
      x-cfn-type-name: AWS::Batch::JobQueue
      x-identifiers:
        - JobQueueArn
      methods:
        create_resource:
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::JobQueue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/job_queues/methods/create_resource'
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.JobQueueArn') as job_queue_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::JobQueue'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'JobQueueArn') as job_queue_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::JobQueue'
                AND region = 'us-east-1'
    job_queue:
      name: job_queue
      id: aws.batch.job_queue
      x-cfn-schema-name: JobQueue
      x-cfn-type-name: AWS::Batch::JobQueue
      x-identifiers:
        - JobQueueArn
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::JobQueue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::JobQueue"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/job_queue/methods/update_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/job_queue/methods/delete_resource'
      x-type: get
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.JobQueueName') as job_queue_name,
              JSON_EXTRACT(Properties, '$.JobQueueArn') as job_queue_arn,
              JSON_EXTRACT(Properties, '$.ComputeEnvironmentOrder') as compute_environment_order,
              JSON_EXTRACT(Properties, '$.JobStateTimeLimitActions') as job_state_time_limit_actions,
              JSON_EXTRACT(Properties, '$.Priority') as priority,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.SchedulingPolicyArn') as scheduling_policy_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::JobQueue'
              AND data__Identifier = '<JobQueueArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'JobQueueName') as job_queue_name,
                json_extract_path_text(Properties, 'JobQueueArn') as job_queue_arn,
                json_extract_path_text(Properties, 'ComputeEnvironmentOrder') as compute_environment_order,
                json_extract_path_text(Properties, 'JobStateTimeLimitActions') as job_state_time_limit_actions,
                json_extract_path_text(Properties, 'Priority') as priority,
                json_extract_path_text(Properties, 'State') as state,
                json_extract_path_text(Properties, 'SchedulingPolicyArn') as scheduling_policy_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::JobQueue'
                AND data__Identifier = '<JobQueueArn>'
                AND region = 'us-east-1'
    scheduling_policies:
      name: scheduling_policies
      id: aws.batch.scheduling_policies
      x-cfn-schema-name: SchedulingPolicy
      x-cfn-type-name: AWS::Batch::SchedulingPolicy
      x-identifiers:
        - Arn
      methods:
        create_resource:
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::SchedulingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/scheduling_policies/methods/create_resource'
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
                AND region = 'us-east-1'
    scheduling_policy:
      name: scheduling_policy
      id: aws.batch.scheduling_policy
      x-cfn-schema-name: SchedulingPolicy
      x-cfn-type-name: AWS::Batch::SchedulingPolicy
      x-identifiers:
        - Arn
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::SchedulingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Batch::SchedulingPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/scheduling_policy/methods/update_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/scheduling_policy/methods/delete_resource'
      x-type: get
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.FairsharePolicy') as fairshare_policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'FairsharePolicy') as fairshare_policy,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Batch::SchedulingPolicy'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
x-stackQL-config:
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
