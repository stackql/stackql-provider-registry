openapi: 3.0.0
info:
  title: CloudFront
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AnycastIpList:
      type: object
      properties:
        AnycastIpList:
          $ref: '#/components/schemas/AnycastIpList'
        ETag:
          type: string
        Id:
          type: string
        IpCount:
          type: integer
        Name:
          maxLength: 64
          minLength: 1
          pattern: ^[a-zA-Z0-9-_]{1,64}$
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - IpCount
        - Name
      x-stackql-resource-name: anycast_ip_list
      description: Definition of AWS::CloudFront::AnycastIpList Resource Type
      x-type-name: AWS::CloudFront::AnycastIpList
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - IpCount
        - Name
        - Tags
      x-read-only-properties:
        - AnycastIpList
        - ETag
        - Id
      x-required-properties:
        - IpCount
        - Name
      x-tagging:
        cloudFormationSystemTags: false
        permissions:
          - cloudfront:TagResource
          - cloudfront:ListTagsForResource
        tagOnCreate: true
        tagProperty: /properties/Tags
        tagUpdatable: false
        taggable: true
      x-required-permissions:
        create:
          - cloudfront:CreateAnycastIpList
          - cloudfront:TagResource
        delete:
          - cloudfront:DeleteAnycastIpList
          - cloudfront:GetAnycastIpList
        list:
          - cloudfront:ListAnycastIpLists
        read:
          - cloudfront:GetAnycastIpList
          - cloudfront:ListTagsForResource
    Tag:
      additionalProperties: false
      properties:
        Key:
          type: string
          description: |-
            A string that contains ``Tag`` key.
             The string length should be between 1 and 128 characters. Valid characters include ``a-z``, ``A-Z``, ``0-9``, space, and the special characters ``_ - . : / = + @``.
        Value:
          type: string
          description: |-
            A string that contains an optional ``Tag`` value.
             The string length should be between 0 and 256 characters. Valid characters include ``a-z``, ``A-Z``, ``0-9``, space, and the special characters ``_ - . : / = + @``.
      required:
        - Value
        - Key
      type: object
      description: A complex type that contains ``Tag`` key and ``Tag`` value.
    Tags:
      additionalProperties: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      type: object
    CachePolicyConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
          description: A comment to describe the cache policy. The comment cannot be longer than 128 characters.
        DefaultTTL:
          minimum: 0
          multipleOf: 1
          type: number
          description: >-
            The default amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value as the object's time to live (TTL) only when the origin does *not* send ``Cache-Control`` or ``Expires`` headers with the object. For more information, see [Managing How Long Content Stays in an Edge Cache
            (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
             The default value for this field is 86400 seconds (one day). If the value of ``MinTTL`` is more than 86400 seconds, then the default value for this field is the same as the value of ``MinTTL``.
        MaxTTL:
          minimum: 0
          multipleOf: 1
          type: number
          description: >-
            The maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. CloudFront uses this value only when the origin sends ``Cache-Control`` or ``Expires`` headers with the object. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront
            Developer Guide*.
             The default value for this field is 31536000 seconds (one year). If the value of ``MinTTL`` or ``DefaultTTL`` is more than 31536000 seconds, then the default value for this field is the same as the value of ``DefaultTTL``.
        MinTTL:
          minimum: 0
          multipleOf: 1
          type: number
          description: The minimum amount of time, in seconds, that you want objects to stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
        Name:
          type: string
          description: A unique name to identify the cache policy.
        ParametersInCacheKeyAndForwardedToOrigin:
          $ref: '#/components/schemas/ParametersInCacheKeyAndForwardedToOrigin'
          description: The HTTP headers, cookies, and URL query strings to include in the cache key. The values included in the cache key are also included in requests that CloudFront sends to the origin.
      required:
        - Name
        - MinTTL
        - MaxTTL
        - DefaultTTL
        - ParametersInCacheKeyAndForwardedToOrigin
      type: object
      description: |-
        A cache policy configuration.
         This configuration determines the following:
          +  The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.
          +  The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.
          
         The headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can't find a valid object in its cache that matches the request's cache key. If you want to send values to the origin but *not* include them in the cache key, use ``OriginRequestPolicy``.
    CookiesConfig:
      additionalProperties: false
      properties:
        CookieBehavior:
          pattern: ^(none|whitelist|all|allExcept)$
          type: string
          description: |-
            Determines whether cookies in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:
              +   ``none`` – No cookies in viewer requests are included in requests that CloudFront sends to the origin. Even when this field is set to ``none``, any cookies that are listed in a ``CachePolicy`` *are* included in origin requests.
              +   ``whitelist`` – Only the cookies in viewer requests that are listed in the ``CookieNames`` type are included in requests that CloudFront sends to the origin.
              +   ``all`` – All cookies in viewer requests are included in requests that CloudFront sends to the origin.
              +   ``allExcept`` – All cookies in viewer requests are included in requests that CloudFront sends to the origin, *except* for those listed in the ``CookieNames`` type, which are not included.
        Cookies:
          items:
            type: string
          type: array
          uniqueItems: false
          description: Contains a list of cookie names.
      required:
        - CookieBehavior
      type: object
      description: An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in requests that CloudFront sends to the origin.
    HeadersConfig:
      additionalProperties: false
      properties:
        HeaderBehavior:
          pattern: ^(none|whitelist|allViewer|allViewerAndWhitelistCloudFront|allExcept)$
          type: string
          description: |-
            Determines whether any HTTP headers are included in requests that CloudFront sends to the origin. Valid values are:
              +   ``none`` – No HTTP headers in viewer requests are included in requests that CloudFront sends to the origin. Even when this field is set to ``none``, any headers that are listed in a ``CachePolicy`` *are* included in origin requests.
              +   ``whitelist`` – Only the HTTP headers that are listed in the ``Headers`` type are included in requests that CloudFront sends to the origin.
              +   ``allViewer`` – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin.
              +   ``allViewerAndWhitelistCloudFront`` – All HTTP headers in viewer requests and the additional CloudFront headers that are listed in the ``Headers`` type are included in requests that CloudFront sends to the origin. The additional headers are added by CloudFront.
              +   ``allExcept`` – All HTTP headers in viewer requests are included in requests that CloudFront sends to the origin, *except* for those listed in the ``Headers`` type, which are not included.
        Headers:
          items:
            type: string
          type: array
          uniqueItems: false
          description: Contains a list of HTTP header names.
      required:
        - HeaderBehavior
      type: object
      description: An object that determines whether any HTTP headers (and if so, which headers) are included in requests that CloudFront sends to the origin.
    ParametersInCacheKeyAndForwardedToOrigin:
      additionalProperties: false
      properties:
        CookiesConfig:
          $ref: '#/components/schemas/CookiesConfig'
          description: An object that determines whether any cookies in viewer requests (and if so, which cookies) are included in the cache key and in requests that CloudFront sends to the origin.
        EnableAcceptEncodingBrotli:
          type: boolean
          description: |-
            A flag that can affect whether the ``Accept-Encoding`` HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
             This field is related to the ``EnableAcceptEncodingGzip`` field. If one or both of these fields is ``true`` *and* the viewer request includes the ``Accept-Encoding`` header, then CloudFront does the following:
              +  Normalizes the value of the viewer's ``Accept-Encoding`` header
              +  Includes the normalized header in the cache key
              +  Includes the normalized header in the request to the origin, if a request is necessary
              
             For more information, see [Compression support](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-policy-compressed-objects) in the *Amazon CloudFront Developer Guide*.
             If you set this value to ``true``, and this cache behavior also has an origin request policy attached, do not include the ``Accept-Encoding`` header in the origin request policy. CloudFront always includes the ``Accept-Encoding`` header in origin requests when the value of this field is ``true``, so including this header in an origin request policy has no effect.
             If both of these fields are ``false``, then CloudFront treats the ``Accept-Encoding`` header the same as any other HTTP header in the viewer request. By default, it's not included in the cache key and it's not included in origin requests. In this case, you can manually add ``Accept-Encoding`` to the headers whitelist like any other HTTP header.
        EnableAcceptEncodingGzip:
          type: boolean
          description: |-
            A flag that can affect whether the ``Accept-Encoding`` HTTP header is included in the cache key and included in requests that CloudFront sends to the origin.
             This field is related to the ``EnableAcceptEncodingBrotli`` field. If one or both of these fields is ``true`` *and* the viewer request includes the ``Accept-Encoding`` header, then CloudFront does the following:
              +  Normalizes the value of the viewer's ``Accept-Encoding`` header
              +  Includes the normalized header in the cache key
              +  Includes the normalized header in the request to the origin, if a request is necessary
              
             For more information, see [Compression support](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-policy-compressed-objects) in the *Amazon CloudFront Developer Guide*.
             If you set this value to ``true``, and this cache behavior also has an origin request policy attached, do not include the ``Accept-Encoding`` header in the origin request policy. CloudFront always includes the ``Accept-Encoding`` header in origin requests when the value of this field is ``true``, so including this header in an origin request policy has no effect.
             If both of these fields are ``false``, then CloudFront treats the ``Accept-Encoding`` header the same as any other HTTP header in the viewer request. By default, it's not included in the cache key and it's not included in origin requests. In this case, you can manually add ``Accept-Encoding`` to the headers whitelist like any other HTTP header.
        HeadersConfig:
          $ref: '#/components/schemas/HeadersConfig'
          description: An object that determines whether any HTTP headers (and if so, which headers) are included in the cache key and in requests that CloudFront sends to the origin.
        QueryStringsConfig:
          $ref: '#/components/schemas/QueryStringsConfig'
          description: An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in the cache key and in requests that CloudFront sends to the origin.
      required:
        - EnableAcceptEncodingGzip
        - HeadersConfig
        - CookiesConfig
        - QueryStringsConfig
      type: object
      description: |-
        This object determines the values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.
         The headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can't find an object in its cache that matches the request's cache key. If you want to send values to the origin but *not* include them in the cache key, use ``OriginRequestPolicy``.
    QueryStringsConfig:
      additionalProperties: false
      properties:
        QueryStringBehavior:
          pattern: ^(none|whitelist|all|allExcept)$
          type: string
          description: |-
            Determines whether any URL query strings in viewer requests are included in requests that CloudFront sends to the origin. Valid values are:
              +   ``none`` – No query strings in viewer requests are included in requests that CloudFront sends to the origin. Even when this field is set to ``none``, any query strings that are listed in a ``CachePolicy`` *are* included in origin requests.
              +   ``whitelist`` – Only the query strings in viewer requests that are listed in the ``QueryStringNames`` type are included in requests that CloudFront sends to the origin.
              +   ``all`` – All query strings in viewer requests are included in requests that CloudFront sends to the origin.
              +   ``allExcept`` – All query strings in viewer requests are included in requests that CloudFront sends to the origin, *except* for those listed in the ``QueryStringNames`` type, which are not included.
        QueryStrings:
          items:
            type: string
          type: array
          uniqueItems: false
          description: Contains a list of query string names.
      required:
        - QueryStringBehavior
      type: object
      description: An object that determines whether any URL query strings in viewer requests (and if so, which query strings) are included in requests that CloudFront sends to the origin.
    CachePolicy:
      type: object
      properties:
        CachePolicyConfig:
          $ref: '#/components/schemas/CachePolicyConfig'
          description: The cache policy configuration.
        Id:
          type: string
          description: ''
        LastModifiedTime:
          type: string
          description: ''
      required:
        - CachePolicyConfig
      x-stackql-resource-name: cache_policy
      description: |-
        A cache policy.
         When it's attached to a cache behavior, the cache policy determines the following:
          +  The values that CloudFront includes in the cache key. These values can include HTTP headers, cookies, and URL query strings. CloudFront uses the cache key to find an object in its cache that it can return to the viewer.
          +  The default, minimum, and maximum time to live (TTL) values that you want objects to stay in the CloudFront cache.
          
         The headers, cookies, and query strings that are included in the cache key are also included in requests that CloudFront sends to the origin. CloudFront sends a request when it can't find a valid object in its cache that matches the request's cache key. If you want to send values to the origin but *not* include them in the cache key, use ``OriginRequestPolicy``.
      x-type-name: AWS::CloudFront::CachePolicy
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - LastModifiedTime
      x-required-properties:
        - CachePolicyConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateCachePolicy
        delete:
          - cloudfront:DeleteCachePolicy
          - cloudfront:GetCachePolicy
        list:
          - cloudfront:ListCachePolicies
        read:
          - cloudfront:GetCachePolicy
        update:
          - cloudfront:UpdateCachePolicy
          - cloudfront:GetCachePolicy
    CloudFrontOriginAccessIdentityConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
          description: A comment to describe the origin access identity. The comment cannot be longer than 128 characters.
      required:
        - Comment
      type: object
      description: Origin access identity configuration. Send a ``GET`` request to the ``/CloudFront API version/CloudFront/identity ID/config`` resource.
    CloudFrontOriginAccessIdentity:
      type: object
      properties:
        CloudFrontOriginAccessIdentityConfig:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
          description: The current configuration information for the identity.
        Id:
          type: string
          description: ''
        S3CanonicalUserId:
          type: string
          description: ''
      required:
        - CloudFrontOriginAccessIdentityConfig
      x-stackql-resource-name: cloud_front_origin_access_identity
      description: The request to create a new origin access identity (OAI). An origin access identity is a special CloudFront user that you can associate with Amazon S3 origins, so that you can secure all or just some of your Amazon S3 content. For more information, see [Restricting Access to Amazon S3 Content by Using an Origin Access Identity](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
      x-type-name: AWS::CloudFront::CloudFrontOriginAccessIdentity
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - S3CanonicalUserId
      x-required-properties:
        - CloudFrontOriginAccessIdentityConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateCloudFrontOriginAccessIdentity
        delete:
          - cloudfront:DeleteCloudFrontOriginAccessIdentity
          - cloudfront:GetCloudFrontOriginAccessIdentity
        list:
          - cloudfront:ListCloudFrontOriginAccessIdentities
        read:
          - cloudfront:GetCloudFrontOriginAccessIdentity
        update:
          - cloudfront:UpdateCloudFrontOriginAccessIdentity
          - cloudfront:GetCloudFrontOriginAccessIdentity
    ContinuousDeploymentPolicyConfig:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
          description: A Boolean that indicates whether this continuous deployment policy is enabled (in effect). When this value is ``true``, this policy is enabled and in effect. When this value is ``false``, this policy is not enabled and has no effect.
        SingleHeaderPolicyConfig:
          additionalProperties: false
          properties:
            Header:
              maxLength: 256
              minLength: 1
              type: string
            Value:
              maxLength: 1783
              minLength: 1
              type: string
          required:
            - Header
            - Value
          type: object
          description: This configuration determines which HTTP requests are sent to the staging distribution. If the HTTP request contains a header and value that matches what you specify here, the request is sent to the staging distribution. Otherwise the request is sent to the primary distribution.
        SingleWeightPolicyConfig:
          additionalProperties: false
          properties:
            SessionStickinessConfig:
              $ref: '#/components/schemas/SessionStickinessConfig'
            Weight:
              maximum: 1
              minimum: 0
              multipleOf: 0.01
              type: number
          required:
            - Weight
          type: object
          description: This configuration determines the percentage of HTTP requests that are sent to the staging distribution.
        StagingDistributionDnsNames:
          x-insertionOrder: true
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
          description: 'The CloudFront domain name of the staging distribution. For example: ``d111111abcdef8.cloudfront.net``.'
        TrafficConfig:
          $ref: '#/components/schemas/TrafficConfig'
          description: Contains the parameters for routing production traffic from your primary to staging distributions.
        Type:
          enum:
            - SingleWeight
            - SingleHeader
          type: string
          description: The type of traffic configuration.
      required:
        - Enabled
        - StagingDistributionDnsNames
      type: object
      description: Contains the configuration for a continuous deployment policy.
    SessionStickinessConfig:
      additionalProperties: false
      properties:
        IdleTTL:
          maximum: 3600
          minimum: 300
          multipleOf: 1
          type: integer
          description: The amount of time after which you want sessions to cease if no requests are received. Allowed values are 300–3600 seconds (5–60 minutes).
        MaximumTTL:
          maximum: 3600
          minimum: 300
          multipleOf: 1
          type: integer
          description: The maximum amount of time to consider requests from the viewer as being part of the same session. Allowed values are 300–3600 seconds (5–60 minutes).
      required:
        - IdleTTL
        - MaximumTTL
      type: object
      description: Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values.
    SingleHeaderConfig:
      additionalProperties: false
      properties:
        Header:
          maxLength: 256
          minLength: 1
          type: string
          description: The request header name that you want CloudFront to send to your staging distribution. The header must contain the prefix ``aws-cf-cd-``.
        Value:
          maxLength: 1783
          minLength: 1
          type: string
          description: The request header value.
      required:
        - Header
        - Value
      type: object
      description: Determines which HTTP requests are sent to the staging distribution.
    SingleWeightConfig:
      additionalProperties: false
      properties:
        SessionStickinessConfig:
          $ref: '#/components/schemas/SessionStickinessConfig'
          description: Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values.
        Weight:
          maximum: 1
          minimum: 0
          multipleOf: 0.01
          type: number
          description: The percentage of traffic to send to a staging distribution, expressed as a decimal number between 0 and 0.15. For example, a value of 0.10 means 10% of traffic is sent to the staging distribution.
      required:
        - Weight
      type: object
      description: This configuration determines the percentage of HTTP requests that are sent to the staging distribution.
    TrafficConfig:
      additionalProperties: false
      properties:
        SingleHeaderConfig:
          $ref: '#/components/schemas/SingleHeaderConfig'
          description: Determines which HTTP requests are sent to the staging distribution.
        SingleWeightConfig:
          $ref: '#/components/schemas/SingleWeightConfig'
          description: Contains the percentage of traffic to send to the staging distribution.
        Type:
          enum:
            - SingleWeight
            - SingleHeader
          type: string
          description: The type of traffic configuration.
      required:
        - Type
      type: object
      description: The traffic configuration of your continuous deployment.
    ContinuousDeploymentPolicy:
      type: object
      properties:
        ContinuousDeploymentPolicyConfig:
          $ref: '#/components/schemas/ContinuousDeploymentPolicyConfig'
          description: Contains the configuration for a continuous deployment policy.
        Id:
          type: string
          description: ''
        LastModifiedTime:
          type: string
          description: ''
      required:
        - ContinuousDeploymentPolicyConfig
      x-stackql-resource-name: continuous_deployment_policy
      description: |-
        Creates a continuous deployment policy that routes a subset of production traffic from a primary distribution to a staging distribution.
         After you create and update a staging distribution, you can use a continuous deployment policy to incrementally move traffic to the staging distribution. This enables you to test changes to a distribution's configuration before moving all of your production traffic to the new configuration.
         For more information, see [Using CloudFront continuous deployment to safely test CDN configuration changes](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/continuous-deployment.html) in the *Amazon CloudFront Developer Guide*.
      x-type-name: AWS::CloudFront::ContinuousDeploymentPolicy
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - LastModifiedTime
      x-required-properties:
        - ContinuousDeploymentPolicyConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateContinuousDeploymentPolicy
        delete:
          - cloudfront:DeleteContinuousDeploymentPolicy
          - cloudfront:GetContinuousDeploymentPolicy
        list:
          - cloudfront:ListContinuousDeploymentPolicies
        read:
          - cloudfront:GetContinuousDeploymentPolicy
        update:
          - cloudfront:UpdateContinuousDeploymentPolicy
          - cloudfront:GetContinuousDeploymentPolicy
    CacheBehavior:
      additionalProperties: false
      properties:
        AllowedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
              +  CloudFront forwards only ``GET`` and ``HEAD`` requests.
              +  CloudFront forwards only ``GET``, ``HEAD``, and ``OPTIONS`` requests.
              +  CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST``, and ``DELETE`` requests.
              
             If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
        CachePolicyId:
          type: string
          description: |-
            The unique identifier of the cache policy that is attached to this cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             A ``CacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
        CachedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
              +  CloudFront caches responses to ``GET`` and ``HEAD`` requests.
              +  CloudFront caches responses to ``GET``, ``HEAD``, and ``OPTIONS`` requests.
              
             If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
        Compress:
          default: false
          type: boolean
          description: Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
        DefaultTTL:
          default: 86400
          type: number
          description: |-
            This field is deprecated. We recommend that you use the ``DefaultTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
        FieldLevelEncryptionId:
          default: ''
          type: string
          description: The value of ``ID`` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.
        ForwardedValues:
          $ref: '#/components/schemas/ForwardedValues'
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
             If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
             A ``CacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
             A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
        FunctionAssociations:
          items:
            $ref: '#/components/schemas/FunctionAssociation'
          type: array
          uniqueItems: false
          description: A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the ``LIVE`` stage to associate them with a cache behavior.
        GrpcConfig:
          $ref: '#/components/schemas/GrpcConfig'
          description: The gRPC configuration for your cache behavior.
        LambdaFunctionAssociations:
          items:
            $ref: '#/components/schemas/LambdaFunctionAssociation'
          type: array
          uniqueItems: false
          description: A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
        MaxTTL:
          default: 31536000
          type: number
          description: |-
            This field is deprecated. We recommend that you use the ``MaxTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
        MinTTL:
          default: 0
          type: number
          description: |-
            This field is deprecated. We recommend that you use the ``MinTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
             You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``Headers``, if you specify ``1`` for ``Quantity`` and ``*`` for ``Name``).
        OriginRequestPolicyId:
          type: string
          description: >-
            The unique identifier of the origin request policy that is attached to this cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront
            Developer Guide*.
        PathPattern:
          type: string
          description: |-
            The pattern (for example, ``images/*.jpg``) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.
              You can optionally include a slash (``/``) at the beginning of the path pattern. For example, ``/images/*.jpg``. CloudFront behavior is the same with or without the leading ``/``.
              The path pattern for the default cache behavior is ``*`` and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.
             For more information, see [Path Pattern](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern) in the *Amazon CloudFront Developer Guide*.
        RealtimeLogConfigArn:
          type: string
          description: The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
        ResponseHeadersPolicyId:
          type: string
          description: The identifier for a response headers policy.
        SmoothStreaming:
          default: false
          type: boolean
          description: Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify ``true``; if not, specify ``false``. If you specify ``true`` for ``SmoothStreaming``, you can still distribute other content using this cache behavior if the content matches the value of ``PathPattern``.
        TargetOriginId:
          type: string
          description: The value of ``ID`` for the origin that you want CloudFront to route requests to when they match this cache behavior.
        TrustedKeyGroups:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
             When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
        TrustedSigners:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            We recommend using ``TrustedKeyGroups`` instead of ``TrustedSigners``.
              A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
             When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
        ViewerProtocolPolicy:
          type: string
          description: |-
            The protocol that viewers can use to access the files in the origin specified by ``TargetOriginId`` when a request matches the path pattern in ``PathPattern``. You can specify the following options:
              +   ``allow-all``: Viewers can use HTTP or HTTPS.
              +   ``redirect-to-https``: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
              +   ``https-only``: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
              
             For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
              The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects' cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see [Managing Cache Expiration](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
      required:
        - PathPattern
        - TargetOriginId
        - ViewerProtocolPolicy
      type: object
      description: |-
        A complex type that describes how CloudFront processes requests.
         You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.
         For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see [Quotas](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html) in the *Amazon CloudFront Developer Guide*.
         If you don't want to specify any cache behaviors, include only an empty ``CacheBehaviors`` element. Don't specify an empty individual ``CacheBehavior`` element, because this is invalid. For more information, see [CacheBehaviors](https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CacheBehaviors.html). 
         To delete all cache behaviors in an existing distribution, update the distribution configuration and include only an empty ``CacheBehaviors`` element.
         To add, change, or remove one or more cache behaviors, update the distribution configuration and specify all of the cache behaviors that you want to include in the updated distribution.
         For more information about cache behaviors, see [Cache Behavior Settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesCacheBehavior) in the *Amazon CloudFront Developer Guide*.
    Cookies:
      additionalProperties: false
      properties:
        Forward:
          type: string
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
             If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
             If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
             Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type.
             Amazon S3 doesn't process cookies. When the cache behavior is forwarding requests to an Amazon S3 origin, specify none for the ``Forward`` element.
        WhitelistedNames:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
             If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
             If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
             Required if you specify ``whitelist`` for the value of ``Forward``. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward selected cookies, the names of those cookies.
             If you specify ``all`` or ``none`` for the value of ``Forward``, omit ``WhitelistedNames``. If you change the value of ``Forward`` from ``whitelist`` to ``all`` or ``none`` and you don't delete the ``WhitelistedNames`` element and its child elements, CloudFront deletes them automatically.
             For the current limit on the number of cookie names that you can whitelist for each cache behavior, see [CloudFront Limits](https://docs.aws.amazon.com/general/latest/gr/xrefaws_service_limits.html#limits_cloudfront) in the *General Reference*.
      required:
        - Forward
      type: object
      description: |-
        This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
         If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
         If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
         A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in the *Amazon CloudFront Developer Guide*.
    CustomErrorResponse:
      additionalProperties: false
      properties:
        ErrorCachingMinTTL:
          default: 300
          type: number
          description: |-
            The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ``ErrorCode``. When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.
             For more information, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
        ErrorCode:
          type: integer
          description: The HTTP status code for which you want to specify a custom error page and/or a caching duration.
        ResponseCode:
          type: integer
          description: |-
            The HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:
              +  Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute ``200``, the response typically won't be intercepted.
              +  If you don't care about distinguishing among different client errors or server errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for all 4xx or 5xx errors.
              +  You might want to return a ``200`` status code (OK) and static website so your customers don't know that your website is down.
              
             If you specify a value for ``ResponseCode``, you must also specify a value for ``ResponsePagePath``.
        ResponsePagePath:
          type: string
          description: |-
            The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ``ErrorCode``, for example, ``/4xx-errors/403-forbidden.html``. If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:
              +  The value of ``PathPattern`` matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named ``/4xx-errors``. Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, ``/4xx-errors/*``.
              +  The value of ``TargetOriginId`` specifies the value of the ``ID`` element for the origin that contains your custom error pages.
              
             If you specify a value for ``ResponsePagePath``, you must also specify a value for ``ResponseCode``.
             We recommend that you store custom error pages in an Amazon S3 bucket. If you store custom error pages on an HTTP server and the server starts to return 5xx errors, CloudFront can't get the files that you want to return to viewers because the origin server is unavailable.
      required:
        - ErrorCode
      type: object
      description: |-
        A complex type that controls:
          +  Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
          +  How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
          
         For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
    CustomOriginConfig:
      additionalProperties: false
      properties:
        HTTPPort:
          default: 80
          type: integer
          description: The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
        HTTPSPort:
          default: 443
          type: integer
          description: The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
        OriginKeepaliveTimeout:
          default: 5
          type: integer
          description: |-
            Specifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 5 seconds.
             For more information, see [Keep-alive timeout (custom origins only)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout) in the *Amazon CloudFront Developer Guide*.
        OriginProtocolPolicy:
          type: string
          description: |-
            Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:
              +   ``http-only`` – CloudFront always uses HTTP to connect to the origin.
              +   ``match-viewer`` – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.
              +   ``https-only`` – CloudFront always uses HTTPS to connect to the origin.
        OriginReadTimeout:
          default: 30
          type: integer
          description: |-
            Specifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the *origin response timeout*. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 30 seconds.
             For more information, see [Response timeout (custom origins only)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) in the *Amazon CloudFront Developer Guide*.
        OriginSSLProtocols:
          default:
            - TLSv1
            - SSLv3
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include ``SSLv3``, ``TLSv1``, ``TLSv1.1``, and ``TLSv1.2``.
             For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide*.
      required:
        - OriginProtocolPolicy
      type: object
      description: A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
    DefaultCacheBehavior:
      additionalProperties: false
      properties:
        AllowedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
              +  CloudFront forwards only ``GET`` and ``HEAD`` requests.
              +  CloudFront forwards only ``GET``, ``HEAD``, and ``OPTIONS`` requests.
              +  CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST``, and ``DELETE`` requests.
              
             If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
        CachePolicyId:
          default: ''
          type: string
          description: |-
            The unique identifier of the cache policy that is attached to the default cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             A ``DefaultCacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
        CachedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
              +  CloudFront caches responses to ``GET`` and ``HEAD`` requests.
              +  CloudFront caches responses to ``GET``, ``HEAD``, and ``OPTIONS`` requests.
              
             If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
        Compress:
          default: false
          type: boolean
          description: Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify ``true``; if not, specify ``false``. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
        DefaultTTL:
          default: 86400
          type: number
          description: |-
            This field is deprecated. We recommend that you use the ``DefaultTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
        FieldLevelEncryptionId:
          default: ''
          type: string
          description: The value of ``ID`` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.
        ForwardedValues:
          $ref: '#/components/schemas/ForwardedValues'
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
             If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
             A ``DefaultCacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
             A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
        FunctionAssociations:
          items:
            $ref: '#/components/schemas/FunctionAssociation'
          type: array
          uniqueItems: false
          description: A list of CloudFront functions that are associated with this cache behavior. Your functions must be published to the ``LIVE`` stage to associate them with a cache behavior.
        GrpcConfig:
          $ref: '#/components/schemas/GrpcConfig'
          description: The gRPC configuration for your cache behavior.
        LambdaFunctionAssociations:
          items:
            $ref: '#/components/schemas/LambdaFunctionAssociation'
          type: array
          uniqueItems: false
          description: A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
        MaxTTL:
          default: 31536000
          type: number
          description: |-
            This field is deprecated. We recommend that you use the ``MaxTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
        MinTTL:
          default: 0
          type: number
          description: |-
            This field is deprecated. We recommend that you use the ``MinTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
             The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
             You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``Headers``, if you specify ``1`` for ``Quantity`` and ``*`` for ``Name``).
        OriginRequestPolicyId:
          default: ''
          type: string
          description: >-
            The unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront
            Developer Guide*.
        RealtimeLogConfigArn:
          default: ''
          type: string
          description: The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
        ResponseHeadersPolicyId:
          default: ''
          type: string
          description: The identifier for a response headers policy.
        SmoothStreaming:
          default: false
          type: boolean
          description: Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify ``true``; if not, specify ``false``. If you specify ``true`` for ``SmoothStreaming``, you can still distribute other content using this cache behavior if the content matches the value of ``PathPattern``.
        TargetOriginId:
          type: string
          description: The value of ``ID`` for the origin that you want CloudFront to route requests to when they use the default cache behavior.
        TrustedKeyGroups:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
             When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
        TrustedSigners:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            We recommend using ``TrustedKeyGroups`` instead of ``TrustedSigners``.
              A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
             When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
        ViewerProtocolPolicy:
          type: string
          description: |-
            The protocol that viewers can use to access the files in the origin specified by ``TargetOriginId`` when a request matches the path pattern in ``PathPattern``. You can specify the following options:
              +   ``allow-all``: Viewers can use HTTP or HTTPS.
              +   ``redirect-to-https``: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
              +   ``https-only``: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
              
             For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
              The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol to fetch the object. If you have recently changed from HTTP to HTTPS, we recommend that you clear your objects' cache because cached objects are protocol agnostic. That means that an edge location will return an object from the cache regardless of whether the current request protocol matches the protocol used previously. For more information, see [Managing Cache Expiration](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
      required:
        - TargetOriginId
        - ViewerProtocolPolicy
      type: object
      description: A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if request URLs don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior.
    DistributionConfig:
      additionalProperties: false
      properties:
        Aliases:
          items:
            type: string
          type: array
          uniqueItems: false
          description: A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
        AnycastIpListId:
          type: string
          description: ''
        CNAMEs:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            An alias for the CF distribution's domain name.
              This property is legacy. We recommend that you use [Aliases](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-aliases) instead.
        CacheBehaviors:
          items:
            $ref: '#/components/schemas/CacheBehavior'
          type: array
          uniqueItems: false
          description: A complex type that contains zero or more ``CacheBehavior`` elements.
        Comment:
          default: ''
          type: string
          description: A comment to describe the distribution. The comment cannot be longer than 128 characters.
        ContinuousDeploymentPolicyId:
          type: string
          description: The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.
        CustomErrorResponses:
          items:
            $ref: '#/components/schemas/CustomErrorResponse'
          type: array
          uniqueItems: false
          description: |-
            A complex type that controls the following:
              +  Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
              +  How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
              
             For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
        CustomOrigin:
          $ref: '#/components/schemas/LegacyCustomOrigin'
          description: |-
            The user-defined HTTP server that serves as the origin for content that CF distributes.
              This property is legacy. We recommend that you use [Origin](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html) instead.
        DefaultCacheBehavior:
          $ref: '#/components/schemas/DefaultCacheBehavior'
          description: A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior.
        DefaultRootObject:
          default: ''
          type: string
          description: >-
            When a viewer requests the root URL for your distribution, the default root object is the object that you want CloudFront to request from your origin. For example, if your root URL is ``https://www.example.com``, you can specify CloudFront to return the ``index.html`` file as the default root object. You can specify a default root object so that viewers see a specific file or object, instead of another object in your distribution (for example,
            ``https://www.example.com/product-description.html``). A default root object avoids exposing the contents of your distribution.
             You can specify the object name or a path to the object name (for example, ``index.html`` or ``exampleFolderName/index.html``). Your string can't begin with a forward slash (``/``). Only specify the object name or the path to the object.
             If you don't want to specify a default root object when you create a distribution, include an empty ``DefaultRootObject`` element.
             To delete the default root object from an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element.
             To replace the default root object, update the distribution configuration and specify the new object.
             For more information about the default root object, see [Specify a default root object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html) in the *Amazon CloudFront Developer Guide*.
        Enabled:
          type: boolean
          description: From this field, you can enable or disable the selected distribution.
        HttpVersion:
          default: http1.1
          type: string
          description: |-
            (Optional) Specify the HTTP version(s) that you want viewers to use to communicate with CF. The default value for new distributions is ``http1.1``.
             For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI).
             For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
        IPV6Enabled:
          type: boolean
          description: |-
            If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.
             In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress`` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-creating-signed-url-custom-policy.html) in the *Amazon CloudFront Developer Guide*.
             If you're using an R53AWSIntlong alias resource record set to route traffic to your CloudFront distribution, you need to create a second alias resource record set when both of the following are true:
              +  You enable IPv6 for the distribution
              +  You're using alternate domain names in the URLs for your objects
              
             For more information, see [Routing Traffic to an Amazon CloudFront Web Distribution by Using Your Domain Name](https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-cloudfront-distribution.html) in the *Developer Guide*.
             If you created a CNAME resource record set, either with R53AWSIntlong or with another DNS service, you don't need to make any changes. A CNAME record will route traffic to your distribution regardless of the IP address format of the viewer request.
        Logging:
          $ref: '#/components/schemas/Logging'
          description: |-
            A complex type that controls whether access logs are written for the distribution.
             For more information about logging, see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
        OriginGroups:
          $ref: '#/components/schemas/OriginGroups'
          description: |-
            A complex type that contains information about origin groups for this distribution.
             Specify a value for either the ``Origins`` or ``OriginGroups`` property.
        Origins:
          items:
            $ref: '#/components/schemas/Origin'
          type: array
          x-insertionOrder: false
          uniqueItems: false
          description: |-
            A complex type that contains information about origins for this distribution.
             Specify a value for either the ``Origins`` or ``OriginGroups`` property.
        PriceClass:
          default: PriceClass_All
          type: string
          description: |-
            The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``, CloudFront responds to requests for your objects from all CloudFront edge locations.
             If you specify a price class other than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.
             For more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
        Restrictions:
          $ref: '#/components/schemas/Restrictions'
          default:
            GeoRestriction:
              RestrictionType: none
          description: A complex type that identifies ways in which you want to restrict distribution of your content.
        S3Origin:
          $ref: '#/components/schemas/LegacyS3Origin'
          description: |-
            The origin as an S3 bucket.
              This property is legacy. We recommend that you use [Origin](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html) instead.
        Staging:
          type: boolean
          description: A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution. When this value is ``false``, this is not a staging distribution.
        ViewerCertificate:
          $ref: '#/components/schemas/ViewerCertificate'
          default:
            CloudFrontDefaultCertificate: true
          description: A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
        WebACLId:
          default: ''
          type: string
          description: |-
            A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111``. To specify a web ACL created using WAF Classic, use the ACL ID, for example ``a1b2c3d4-5678-90ab-cdef-EXAMPLE11111``.
              WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/what-is-aws-waf.html).
      required:
        - Enabled
        - DefaultCacheBehavior
      type: object
      description: A distribution configuration.
    ForwardedValues:
      additionalProperties: false
      properties:
        Cookies:
          $ref: '#/components/schemas/Cookies'
          default:
            Forward: none
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
             If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
             If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
             A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs Cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Cookies.html) in the *Amazon CloudFront Developer Guide*.
        Headers:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
             If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
             If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
             A complex type that specifies the ``Headers``, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versions of a specified object that is based on the header values in viewer requests.
             For more information, see [Caching Content Based on Request Headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html) in the *Amazon CloudFront Developer Guide*.
        QueryString:
          type: boolean
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
             If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
             If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
             Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of ``QueryString`` and on the values that you specify for ``QueryStringCacheKeys``, if any:
             If you specify true for ``QueryString`` and you don't specify any values for ``QueryStringCacheKeys``, CloudFront forwards all query string parameters to the origin and caches based on all query string parameters. Depending on how many query string parameters and values you have, this can adversely affect performance because CloudFront must forward more requests to the origin.
             If you specify true for ``QueryString`` and you specify one or more values for ``QueryStringCacheKeys``, CloudFront forwards all query string parameters to the origin, but it only caches based on the query string parameters that you specify.
             If you specify false for ``QueryString``, CloudFront doesn't forward any query string parameters to the origin, and doesn't cache based on query string parameters.
             For more information, see [Configuring CloudFront to Cache Based on Query String Parameters](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/QueryStringParameters.html) in the *Amazon CloudFront Developer Guide*.
        QueryStringCacheKeys:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
             If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
             If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
             A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.
      required:
        - QueryString
      type: object
      description: |-
        This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
         If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
         If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
         A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
    FunctionAssociation:
      additionalProperties: false
      properties:
        EventType:
          type: string
          description: The event type of the function, either ``viewer-request`` or ``viewer-response``. You cannot use origin-facing event types (``origin-request`` and ``origin-response``) with a CloudFront function.
        FunctionARN:
          type: string
          description: The Amazon Resource Name (ARN) of the function.
      type: object
      description: A CloudFront function that is associated with a cache behavior in a CloudFront distribution.
    GeoRestriction:
      additionalProperties: false
      properties:
        Locations:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute your content (``whitelist``) or not distribute your content (``blacklist``).
             The ``Location`` element is a two-letter, uppercase country code for a country that you want to include in your ``blacklist`` or ``whitelist``. Include one ``Location`` element for each country.
             CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the *International Organization for Standardization* website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.
        RestrictionType:
          type: string
          description: |-
            The method that you want to use to restrict distribution of your content by country:
              +   ``none``: No geo restriction is enabled, meaning access to content is not restricted by client geo location.
              +   ``blacklist``: The ``Location`` elements specify the countries in which you don't want CloudFront to distribute your content.
              +   ``whitelist``: The ``Location`` elements specify the countries in which you want CloudFront to distribute your content.
      required:
        - RestrictionType
      type: object
      description: A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
    GrpcConfig:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
          description: Enables your CloudFront distribution to receive gRPC requests and to proxy them directly to your origins.
      required:
        - Enabled
      type: object
      description: |-
        Amazon CloudFront supports gRPC, an open-source remote procedure call (RPC) framework built on HTTP/2. gRPC offers bi-directional streaming and binary protocol that buffers payloads, making it suitable for applications that require low latency communications.
         To enable your distribution to handle gRPC requests, you must include HTTP/2 as one of the supported ``HTTP`` versions and allow ``HTTP`` methods, including ``POST``.
         For more information, see [Using gRPC with CloudFront distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-using-grpc.html) in the *Amazon CloudFront Developer Guide*.
    LambdaFunctionAssociation:
      additionalProperties: false
      properties:
        EventType:
          type: string
          description: |-
            Specifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:
              +   ``viewer-request``: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.
              +   ``origin-request``: The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn't execute.
              +   ``origin-response``: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.
              +   ``viewer-response``: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.
             If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.
        IncludeBody:
          type: boolean
          description: A flag that allows a Lambda@Edge function to have read access to the body content. For more information, see [Accessing the Request Body by Choosing the Include Body Option](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html) in the Amazon CloudFront Developer Guide.
        LambdaFunctionARN:
          type: string
          description: The ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can't specify an alias or $LATEST.
      type: object
      description: A complex type that contains a Lambda@Edge function association.
    LegacyCustomOrigin:
      additionalProperties: false
      properties:
        DNSName:
          type: string
          description: The domain name assigned to your CF distribution.
        HTTPPort:
          default: 80
          type: integer
          description: The HTTP port that CF uses to connect to the origin. Specify the HTTP port that the origin listens on.
        HTTPSPort:
          default: 443
          type: integer
          description: The HTTPS port that CF uses to connect to the origin. Specify the HTTPS port that the origin listens on.
        OriginProtocolPolicy:
          type: string
          description: Specifies the protocol (HTTP or HTTPS) that CF uses to connect to the origin.
        OriginSSLProtocols:
          items:
            type: string
          type: array
          uniqueItems: false
          description: |-
            The minimum SSL/TLS protocol version that CF uses when communicating with your origin server over HTTPs.
             For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Developer Guide*.
      required:
        - DNSName
        - OriginProtocolPolicy
        - OriginSSLProtocols
      type: object
      description: |-
        A custom origin. A custom origin is any origin that is *not* an S3 bucket, with one exception. An S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
          This property is legacy. We recommend that you use [Origin](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html) instead.
    LegacyS3Origin:
      additionalProperties: false
      properties:
        DNSName:
          type: string
          description: The domain name assigned to your CF distribution.
        OriginAccessIdentity:
          default: ''
          type: string
          description: |-
            The CF origin access identity to associate with the distribution. Use an origin access identity to configure the distribution so that end users can only access objects in an S3 through CF.
              This property is legacy. We recommend that you use [OriginAccessControl](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-originaccesscontrol.html) instead.
      required:
        - DNSName
      type: object
      description: |-
        The origin as an S3 bucket. 
          This property is legacy. We recommend that you use [Origin](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-origin.html) instead.
    Logging:
      additionalProperties: false
      properties:
        Bucket:
          type: string
          description: The Amazon S3 bucket to store the access logs in, for example, ``amzn-s3-demo-bucket.s3.amazonaws.com``.
        IncludeCookies:
          default: false
          type: boolean
          description: Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
        Prefix:
          default: ''
          type: string
          description: An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example, ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty ``Prefix`` element in the ``Logging`` element.
      type: object
      description: |-
        A complex type that specifies whether access logs are written for the distribution.
          If you already enabled standard logging (legacy) and you want to enable standard logging (v2) to send your access logs to Amazon S3, we recommend that you specify a *different* Amazon S3 bucket or use a *separate path* in the same bucket (for example, use a log prefix or partitioning). This helps you keep track of which log files are associated with which logging subscription and prevents log files from overwriting each other. For more information, see [Standard logging (access logs)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
    Origin:
      additionalProperties: false
      properties:
        ConnectionAttempts:
          type: integer
          description: |-
            The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3.
             For a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout).
             For more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
        ConnectionTimeout:
          type: integer
          description: |-
            The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds.
             For more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
        CustomOriginConfig:
          $ref: '#/components/schemas/CustomOriginConfig'
          description: Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the ``S3OriginConfig`` type instead.
        DomainName:
          type: string
          description: |-
            The domain name for the origin.
             For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
        Id:
          type: string
          description: |-
            A unique identifier for the origin. This value must be unique within the distribution.
             Use this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
        OriginAccessControlId:
          type: string
          description: |-
            The unique identifier of an origin access control for this origin.
             For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
        OriginCustomHeaders:
          items:
            $ref: '#/components/schemas/OriginCustomHeader'
          type: array
          uniqueItems: false
          description: |-
            A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.
             For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
        OriginPath:
          default: ''
          type: string
          description: |-
            An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.
             For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
        OriginShield:
          $ref: '#/components/schemas/OriginShield'
          description: |-
            CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.
             For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
        S3OriginConfig:
          $ref: '#/components/schemas/S3OriginConfig'
          description: Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the ``CustomOriginConfig`` type instead.
      required:
        - DomainName
        - Id
      type: object
      description: |-
        An origin.
         An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:
          +  Use ``S3OriginConfig`` to specify an Amazon S3 bucket that is not configured with static website hosting.
          +  Use ``CustomOriginConfig`` to specify all other kinds of origins, including:
          +  An Amazon S3 bucket that is configured with static website hosting
          +  An Elastic Load Balancing load balancer
          +  An EMPlong endpoint
          +  An EMSlong container
          +  Any other HTTP server, running on an Amazon EC2 instance or any other kind of host
          
          
         For the current maximum number of origins that you can specify per distribution, see [General Quotas on Web Distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions) in the *Amazon CloudFront Developer Guide* (quotas were formerly referred to as limits).
    OriginCustomHeader:
      additionalProperties: false
      properties:
        HeaderName:
          type: string
          description: The name of a header that you want CloudFront to send to your origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
        HeaderValue:
          type: string
          description: The value for the header that you specified in the ``HeaderName`` field.
      required:
        - HeaderValue
        - HeaderName
      type: object
      description: A complex type that contains ``HeaderName`` and ``HeaderValue`` elements, if any, for this distribution.
    OriginGroup:
      additionalProperties: false
      properties:
        FailoverCriteria:
          $ref: '#/components/schemas/OriginGroupFailoverCriteria'
          description: A complex type that contains information about the failover criteria for an origin group.
        Id:
          type: string
          description: The origin group's ID.
        Members:
          $ref: '#/components/schemas/OriginGroupMembers'
          description: A complex type that contains information about the origins in an origin group.
        SelectionCriteria:
          $ref: '#/components/schemas/OriginGroupSelectionCriteria'
          description: The selection criteria for the origin group. For more information, see [Create an origin group](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html#concept_origin_groups.creating) in the *Amazon CloudFront Developer Guide*.
      required:
        - Id
        - FailoverCriteria
        - Members
      type: object
      description: |-
        An origin group includes two origins (a primary origin and a secondary origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specify the origin group instead of a single origin, and CloudFront will failover from the primary origin to the secondary origin under the failover conditions that you've chosen.
         Optionally, you can choose selection criteria for your origin group to specify how your origins are selected when your distribution routes viewer requests.
    OriginGroupFailoverCriteria:
      additionalProperties: false
      properties:
        StatusCodes:
          $ref: '#/components/schemas/StatusCodes'
          description: The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.
      required:
        - StatusCodes
      type: object
      description: A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
    OriginGroupMember:
      additionalProperties: false
      properties:
        OriginId:
          type: string
          description: The ID for an origin in an origin group.
      required:
        - OriginId
      type: object
      description: An origin in an origin group.
    OriginGroupMembers:
      additionalProperties: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/OriginGroupMember'
          type: array
          uniqueItems: false
          description: Items (origins) in an origin group.
        Quantity:
          type: integer
          description: The number of origins in an origin group.
      required:
        - Quantity
        - Items
      type: object
      description: A complex data type for the origins included in an origin group.
    OriginGroupSelectionCriteria:
      enum:
        - default
        - media-quality-based
      type: string
    OriginGroups:
      additionalProperties: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/OriginGroup'
          type: array
          uniqueItems: false
          description: The items (origin groups) in a distribution.
        Quantity:
          type: integer
          description: The number of origin groups.
      required:
        - Quantity
      type: object
      description: A complex data type for the origin groups specified for a distribution.
    OriginShield:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
          description: |-
            A flag that specifies whether Origin Shield is enabled.
             When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
        OriginShieldRegion:
          type: string
          description: |-
            The AWS-Region for Origin Shield.
             Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as ``us-east-2``.
             When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
      type: object
      description: |-
        CloudFront Origin Shield.
         Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
    Restrictions:
      additionalProperties: false
      properties:
        GeoRestriction:
          $ref: '#/components/schemas/GeoRestriction'
          description: A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
      required:
        - GeoRestriction
      type: object
      description: A complex type that identifies ways in which you want to restrict distribution of your content.
    S3OriginConfig:
      additionalProperties: false
      properties:
        OriginAccessIdentity:
          default: ''
          type: string
          description: |-
            If you're using origin access control (OAC) instead of origin access identity, specify an empty ``OriginAccessIdentity`` element. For more information, see [Restricting access to an](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.
              The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is:
              ``origin-access-identity/cloudfront/ID-of-origin-access-identity`` 
             The ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you created the origin access identity.
             If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.
             To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty ``OriginAccessIdentity`` element.
             To replace the origin access identity, update the distribution configuration and specify the new origin access identity.
             For more information about the origin access identity, see [Serving Private Content through CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
      type: object
      description: A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the ``CustomOriginConfig`` element instead.
    StatusCodes:
      additionalProperties: false
      properties:
        Items:
          items:
            type: integer
          type: array
          uniqueItems: false
          description: The items (status codes) for an origin group.
        Quantity:
          type: integer
          description: The number of status codes.
      required:
        - Quantity
        - Items
      type: object
      description: A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
    ViewerCertificate:
      additionalProperties: false
      properties:
        AcmCertificateArn:
          type: string
          description: |-
            In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.
              If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``).
             If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        CloudFrontDefaultCertificate:
          type: boolean
          description: |-
            If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
             If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:
              +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both) 
              +   ``MinimumProtocolVersion`` 
              +   ``SslSupportMethod``
        IamCertificateId:
          type: string
          description: |-
            In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.
              If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate.
             If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
        MinimumProtocolVersion:
          type: string
          description: |-
            If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:
              +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.
              +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.
              
             For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.
              On the CloudFront console, this setting is called *Security Policy*.
              When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-only``), you must specify ``TLSv1`` or higher. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
             If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net`` (you set ``CloudFrontDefaultCertificate`` to ``true``), CloudFront automatically sets the security policy to ``TLSv1`` regardless of the value that you set here.
        SslSupportMethod:
          type: string
          description: |-
            In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.
              If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
              +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.
              +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.
              +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).
              
             If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, don't set a value for this field.
      type: object
      description: |-
        A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
         If the distribution doesn't use ``Aliases`` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``—set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields empty.
         If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:
          +  Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don't support SNI.
          +  To accept HTTPS connections from only viewers that support SNI, set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
          +  To accept HTTPS connections from all viewers, including those that don't support SNI, set ``SSLSupportMethod`` to ``vip``. This is not recommended, and results in additional monthly charges from CloudFront. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
          
          +  The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for ``MinimumProtocolVersion``. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) in the *Amazon CloudFront Developer Guide*.
          +  The location of the SSL/TLS certificate, [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html) (recommended) or [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html). You specify the location by setting a value in one of the following fields (not both):
          +   ``ACMCertificateArn`` (In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.)
          +   ``IAMCertificateId`` (In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.)
          
          
         All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use ``ViewerProtocolPolicy`` in the ``CacheBehavior`` or ``DefaultCacheBehavior``. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use ``CustomOriginConfig``.
         For more information, see [Using HTTPS with CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html) and [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html) in the *Amazon CloudFront Developer Guide*.
    Distribution:
      type: object
      properties:
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
          description: The distribution's configuration.
        DomainName:
          type: string
          description: ''
        Id:
          type: string
          description: ''
        Tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          uniqueItems: false
          description: A complex type that contains zero or more ``Tag`` elements.
      required:
        - DistributionConfig
      x-stackql-resource-name: distribution
      description: A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
      x-type-name: AWS::CloudFront::Distribution
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - DomainName
      x-required-properties:
        - DistributionConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateDistribution
          - cloudfront:CreateDistributionWithTags
          - cloudfront:GetDistribution
          - cloudfront:GetDistributionConfig
          - cloudfront:TagResource
        delete:
          - cloudfront:DeleteDistribution
          - cloudfront:GetDistribution
          - cloudfront:GetDistributionConfig
        list:
          - cloudfront:ListDistributions
        read:
          - cloudfront:GetDistribution
          - cloudfront:GetDistributionConfig
        update:
          - cloudfront:GetDistribution
          - cloudfront:GetDistributionConfig
          - cloudfront:UpdateDistribution
          - cloudfront:UpdateDistributionWithStagingConfig
          - cloudfront:ListTagsForResource
          - cloudfront:TagResource
          - cloudfront:UntagResource
    FunctionConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
          description: A comment to describe the function.
        Runtime:
          type: string
          description: The function's runtime environment version.
        KeyValueStoreAssociations:
          items:
            $ref: '#/components/schemas/KeyValueStoreAssociation'
          type: array
          uniqueItems: true
          description: The configuration for the key value store associations.
      required:
        - Comment
        - Runtime
      type: object
      description: Contains configuration information about a CloudFront function.
    FunctionMetadata:
      additionalProperties: false
      properties:
        FunctionARN:
          type: string
          description: The Amazon Resource Name (ARN) of the function. The ARN uniquely identifies the function.
      type: object
      description: Contains metadata about a CloudFront function.
    KeyValueStoreAssociation:
      additionalProperties: false
      properties:
        KeyValueStoreARN:
          type: string
          description: The Amazon Resource Name (ARN) of the key value store association.
      required:
        - KeyValueStoreARN
      type: object
      description: The key value store association.
    Function:
      type: object
      properties:
        AutoPublish:
          type: boolean
          description: A flag that determines whether to automatically publish the function to the ``LIVE`` stage when it’s created. To automatically publish to the ``LIVE`` stage, set this property to ``true``.
        FunctionARN:
          type: string
          description: ''
        FunctionCode:
          type: string
          description: The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide*.
        FunctionConfig:
          $ref: '#/components/schemas/FunctionConfig'
          description: Contains configuration information about a CloudFront function.
        FunctionMetadata:
          $ref: '#/components/schemas/FunctionMetadata'
          description: Contains metadata about a CloudFront function.
        Name:
          type: string
          description: A name to identify the function.
        Stage:
          type: string
          description: ''
      required:
        - Name
        - FunctionConfig
        - FunctionCode
      x-stackql-resource-name: function
      description: |-
        Creates a CF function.
         To create a function, you provide the function code and some configuration information about the function. The response contains an Amazon Resource Name (ARN) that uniquely identifies the function, and the function’s stage.
         By default, when you create a function, it’s in the ``DEVELOPMENT`` stage. In this stage, you can [test the function](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/test-function.html) in the CF console (or with ``TestFunction`` in the CF API).
         When you’re ready to use your function with a CF distribution, publish the function to the ``LIVE`` stage. You can do this in the CF console, with ``PublishFunction`` in the CF API, or by updating the ``AWS::CloudFront::Function`` resource with the ``AutoPublish`` property set to ``true``. When the function is published to the ``LIVE`` stage, you can attach it to a distribution’s cache behavior, using the function’s ARN.
         To automatically publish the function to the ``LIVE`` stage when it’s created, set the ``AutoPublish`` property to ``true``.
      x-type-name: AWS::CloudFront::Function
      x-stackql-primary-identifier:
        - FunctionARN
      x-write-only-properties:
        - AutoPublish
      x-read-only-properties:
        - FunctionARN
        - FunctionMetadata/FunctionARN
        - Stage
      x-required-properties:
        - Name
        - FunctionConfig
        - FunctionCode
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateFunction
          - cloudfront:PublishFunction
          - cloudfront:DescribeFunction
        delete:
          - cloudfront:DeleteFunction
          - cloudfront:DescribeFunction
        list:
          - cloudfront:ListFunctions
        read:
          - cloudfront:DescribeFunction
          - cloudfront:GetFunction
        update:
          - cloudfront:UpdateFunction
          - cloudfront:PublishFunction
          - cloudfront:DescribeFunction
    KeyGroupConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
          description: A comment to describe the key group. The comment cannot be longer than 128 characters.
        Items:
          items:
            type: string
          type: array
          uniqueItems: false
          description: A list of the identifiers of the public keys in the key group.
        Name:
          type: string
          description: A name to identify the key group.
      required:
        - Name
        - Items
      type: object
      description: |-
        A key group configuration.
         A key group contains a list of public keys that you can use with [CloudFront signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html).
    KeyGroup:
      type: object
      properties:
        Id:
          type: string
          description: ''
        KeyGroupConfig:
          $ref: '#/components/schemas/KeyGroupConfig'
          description: The key group configuration.
        LastModifiedTime:
          type: string
          description: ''
      required:
        - KeyGroupConfig
      x-stackql-resource-name: key_group
      description: |-
        A key group.
         A key group contains a list of public keys that you can use with [CloudFront signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html).
      x-type-name: AWS::CloudFront::KeyGroup
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - LastModifiedTime
      x-required-properties:
        - KeyGroupConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateKeyGroup
        delete:
          - cloudfront:DeleteKeyGroup
          - cloudfront:GetKeyGroup
        list:
          - cloudfront:ListKeyGroups
        read:
          - cloudfront:GetKeyGroup
        update:
          - cloudfront:UpdateKeyGroup
          - cloudfront:GetKeyGroup
    ImportSource:
      additionalProperties: false
      properties:
        SourceType:
          type: string
          description: The source type of the import source for the key value store.
        SourceArn:
          type: string
          description: The Amazon Resource Name (ARN) of the import source for the key value store.
      required:
        - SourceType
        - SourceArn
      type: object
      description: The import source for the key value store.
    KeyValueStore:
      type: object
      properties:
        Arn:
          type: string
          description: ''
        Id:
          type: string
          description: ''
        Status:
          type: string
          description: ''
        Name:
          type: string
          description: The name of the key value store.
        Comment:
          type: string
          description: A comment for the key value store.
        ImportSource:
          $ref: '#/components/schemas/ImportSource'
          description: The import source for the key value store.
      required:
        - Name
      x-stackql-resource-name: key_value_store
      description: The key value store. Use this to separate data from function code, allowing you to update data without having to publish a new version of a function. The key value store holds keys and their corresponding values.
      x-type-name: AWS::CloudFront::KeyValueStore
      x-stackql-primary-identifier:
        - Name
      x-create-only-properties:
        - Name
      x-write-only-properties:
        - ImportSource
      x-read-only-properties:
        - Arn
        - Id
        - Status
      x-required-properties:
        - Name
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateKeyValueStore
          - cloudfront:DescribeKeyValueStore
          - s3:GetObject
          - s3:HeadObject
          - s3:GetBucketLocation
        delete:
          - cloudfront:DeleteKeyValueStore
          - cloudfront:DescribeKeyValueStore
        list:
          - cloudfront:ListKeyValueStores
        read:
          - cloudfront:DescribeKeyValueStore
        update:
          - cloudfront:UpdateKeyValueStore
          - cloudfront:DescribeKeyValueStore
    MonitoringSubscription:
      type: object
      properties:
        DistributionId:
          type: string
          description: The ID of the distribution that you are enabling metrics for.
        MonitoringSubscription:
          $ref: '#/components/schemas/MonitoringSubscription'
          description: A subscription configuration for additional CloudWatch metrics.
      required:
        - DistributionId
        - MonitoringSubscription
      x-stackql-resource-name: monitoring_subscription
      description: A monitoring subscription. This structure contains information about whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
      x-type-name: AWS::CloudFront::MonitoringSubscription
      x-stackql-primary-identifier:
        - DistributionId
      x-create-only-properties:
        - DistributionId
      x-required-properties:
        - DistributionId
        - MonitoringSubscription
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateMonitoringSubscription
        delete:
          - cloudfront:DeleteMonitoringSubscription
        read:
          - cloudfront:GetMonitoringSubscription
    RealtimeMetricsSubscriptionConfig:
      additionalProperties: false
      properties:
        RealtimeMetricsSubscriptionStatus:
          enum:
            - Enabled
            - Disabled
          type: string
          description: A flag that indicates whether additional CloudWatch metrics are enabled for a given CloudFront distribution.
      required:
        - RealtimeMetricsSubscriptionStatus
      type: object
      description: A subscription configuration for additional CloudWatch metrics.
    OriginAccessControlConfig:
      additionalProperties: false
      properties:
        Description:
          type: string
          description: A description of the origin access control.
        Name:
          type: string
          description: A name to identify the origin access control. You can specify up to 64 characters.
        OriginAccessControlOriginType:
          pattern: ^(s3|mediastore|lambda|mediapackagev2)$
          type: string
          description: The type of origin that this origin access control is for.
        SigningBehavior:
          pattern: ^(never|no-override|always)$
          type: string
          description: |-
            Specifies which requests CloudFront signs (adds authentication information to). Specify ``always`` for the most common use case. For more information, see [origin access control advanced settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#oac-advanced-settings) in the *Amazon CloudFront Developer Guide*.
             This field can have one of the following values:
              +   ``always`` – CloudFront signs all origin requests, overwriting the ``Authorization`` header from the viewer request if one exists.
              +   ``never`` – CloudFront doesn't sign any origin requests. This value turns off origin access control for all origins in all distributions that use this origin access control.
              +   ``no-override`` – If the viewer request doesn't contain the ``Authorization`` header, then CloudFront signs the origin request. If the viewer request contains the ``Authorization`` header, then CloudFront doesn't sign the origin request and instead passes along the ``Authorization`` header from the viewer request. *WARNING: To pass along the Authorization header from the viewer request, you must add the Authorization header to a cache policy for all cache behaviors that use origins associated with this origin access control.*
        SigningProtocol:
          pattern: ^(sigv4)$
          type: string
          description: The signing protocol of the origin access control, which determines how CloudFront signs (authenticates) requests. The only valid value is ``sigv4``.
      required:
        - Name
        - SigningProtocol
        - SigningBehavior
        - OriginAccessControlOriginType
      type: object
      description: |-
        Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.
         This makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.
         For more information about using a CloudFront origin access control, see [Restricting access to an origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.
    OriginAccessControl:
      type: object
      properties:
        Id:
          type: string
          description: ''
        OriginAccessControlConfig:
          $ref: '#/components/schemas/OriginAccessControlConfig'
          description: The origin access control.
      required:
        - OriginAccessControlConfig
      x-stackql-resource-name: origin_access_control
      description: |-
        Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.
         This makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.
         For more information about using a CloudFront origin access control, see [Restricting access to an origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.
      x-type-name: AWS::CloudFront::OriginAccessControl
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
      x-required-properties:
        - OriginAccessControlConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateOriginAccessControl
        delete:
          - cloudfront:DeleteOriginAccessControl
          - cloudfront:GetOriginAccessControl
        list:
          - cloudfront:ListOriginAccessControls
        read:
          - cloudfront:GetOriginAccessControl
        update:
          - cloudfront:UpdateOriginAccessControl
          - cloudfront:GetOriginAccessControl
    OriginRequestPolicyConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
          description: A comment to describe the origin request policy. The comment cannot be longer than 128 characters.
        CookiesConfig:
          $ref: '#/components/schemas/CookiesConfig'
          description: The cookies from viewer requests to include in origin requests.
        HeadersConfig:
          $ref: '#/components/schemas/HeadersConfig'
          description: The HTTP headers to include in origin requests. These can include headers from viewer requests and additional headers added by CloudFront.
        Name:
          type: string
          description: A unique name to identify the origin request policy.
        QueryStringsConfig:
          $ref: '#/components/schemas/QueryStringsConfig'
          description: The URL query strings from viewer requests to include in origin requests.
      required:
        - Name
        - HeadersConfig
        - CookiesConfig
        - QueryStringsConfig
      type: object
      description: |-
        An origin request policy configuration.
         This configuration determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:
          +  The request body and the URL path (without the domain name) from the viewer request.
          +  The headers that CloudFront automatically includes in every origin request, including ``Host``, ``User-Agent``, and ``X-Amz-Cf-Id``.
          +  All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.
          
         CloudFront sends a request when it can't find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use ``CachePolicy``.
    OriginRequestPolicy:
      type: object
      properties:
        Id:
          type: string
          description: ''
        LastModifiedTime:
          type: string
          description: ''
        OriginRequestPolicyConfig:
          $ref: '#/components/schemas/OriginRequestPolicyConfig'
          description: The origin request policy configuration.
      required:
        - OriginRequestPolicyConfig
      x-stackql-resource-name: origin_request_policy
      description: |-
        An origin request policy.
         When it's attached to a cache behavior, the origin request policy determines the values that CloudFront includes in requests that it sends to the origin. Each request that CloudFront sends to the origin includes the following:
          +  The request body and the URL path (without the domain name) from the viewer request.
          +  The headers that CloudFront automatically includes in every origin request, including ``Host``, ``User-Agent``, and ``X-Amz-Cf-Id``.
          +  All HTTP headers, cookies, and URL query strings that are specified in the cache policy or the origin request policy. These can include items from the viewer request and, in the case of headers, additional ones that are added by CloudFront.
          
         CloudFront sends a request when it can't find an object in its cache that matches the request. If you want to send values to the origin and also include them in the cache key, use ``CachePolicy``.
      x-type-name: AWS::CloudFront::OriginRequestPolicy
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - LastModifiedTime
      x-required-properties:
        - OriginRequestPolicyConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateOriginRequestPolicy
        delete:
          - cloudfront:DeleteOriginRequestPolicy
          - cloudfront:GetOriginRequestPolicy
        list:
          - cloudfront:ListOriginRequestPolicies
        read:
          - cloudfront:GetOriginRequestPolicy
        update:
          - cloudfront:UpdateOriginRequestPolicy
          - cloudfront:GetOriginRequestPolicy
    PublicKeyConfig:
      additionalProperties: false
      properties:
        CallerReference:
          type: string
          description: A string included in the request to help make sure that the request can't be replayed.
        Comment:
          type: string
          description: A comment to describe the public key. The comment cannot be longer than 128 characters.
        EncodedKey:
          type: string
          description: The public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html), or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html).
        Name:
          type: string
          description: A name to help identify the public key.
      required:
        - CallerReference
        - Name
        - EncodedKey
      type: object
      description: Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html), or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html).
    PublicKey:
      type: object
      properties:
        CreatedTime:
          type: string
          description: ''
        Id:
          type: string
          description: ''
        PublicKeyConfig:
          $ref: '#/components/schemas/PublicKeyConfig'
          description: Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html), or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html).
      required:
        - PublicKeyConfig
      x-stackql-resource-name: public_key
      description: A public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html), or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html).
      x-type-name: AWS::CloudFront::PublicKey
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - CreatedTime
      x-required-properties:
        - PublicKeyConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreatePublicKey
        delete:
          - cloudfront:DeletePublicKey
          - cloudfront:GetPublicKey
        list:
          - cloudfront:ListPublicKeys
        read:
          - cloudfront:GetPublicKey
        update:
          - cloudfront:UpdatePublicKey
          - cloudfront:GetPublicKey
    EndPoint:
      additionalProperties: false
      properties:
        KinesisStreamConfig:
          $ref: '#/components/schemas/KinesisStreamConfig'
          description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
        StreamType:
          type: string
          description: The type of data stream where you are sending real-time log data. The only valid value is ``Kinesis``.
      required:
        - KinesisStreamConfig
        - StreamType
      type: object
      description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.
    KinesisStreamConfig:
      additionalProperties: false
      properties:
        RoleArn:
          type: string
          description: |-
            The Amazon Resource Name (ARN) of an IAMlong (IAM) role that CloudFront can use to send real-time log data to your Kinesis data stream.
             For more information the IAM role, see [Real-time log configuration IAM role](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-iam-role) in the *Amazon CloudFront Developer Guide*.
        StreamArn:
          type: string
          description: The Amazon Resource Name (ARN) of the Kinesis data stream where you are sending real-time log data.
      required:
        - RoleArn
        - StreamArn
      type: object
      description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
    RealtimeLogConfig:
      type: object
      properties:
        Arn:
          type: string
          description: ''
        EndPoints:
          items:
            $ref: '#/components/schemas/EndPoint'
          minItems: 1
          type: array
          uniqueItems: false
          description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
        Fields:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: false
          description: |-
            A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
             For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide*.
        Name:
          type: string
          description: The unique name of this real-time log configuration.
        SamplingRate:
          maximum: 100
          minimum: 1
          multipleOf: 1
          type: number
          description: The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
      required:
        - Name
        - EndPoints
        - Fields
        - SamplingRate
      x-stackql-resource-name: realtime_log_config
      description: A real-time log configuration.
      x-type-name: AWS::CloudFront::RealtimeLogConfig
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - EndPoints
        - Fields
        - SamplingRate
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateRealtimeLogConfig
          - iam:PassRole
        delete:
          - cloudfront:DeleteRealtimeLogConfig
          - cloudfront:GetRealtimeLogConfig
        list:
          - cloudfront:ListRealtimeLogConfigs
        read:
          - cloudfront:GetRealtimeLogConfig
        update:
          - cloudfront:UpdateRealtimeLogConfig
          - cloudfront:GetRealtimeLogConfig
          - iam:PassRole
    AccessControlAllowHeaders:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
          description: The list of HTTP header names. You can specify ``*`` to allow all headers.
      required:
        - Items
      type: object
      description: |-
        A list of HTTP header names that CloudFront includes as values for the ``Access-Control-Allow-Headers`` HTTP response header.
         For more information about the ``Access-Control-Allow-Headers`` HTTP response header, see [Access-Control-Allow-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) in the MDN Web Docs.
    AccessControlAllowMethods:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
          description: |-
            The list of HTTP methods. Valid values are:
              +   ``GET`` 
              +   ``DELETE`` 
              +   ``HEAD`` 
              +   ``OPTIONS`` 
              +   ``PATCH`` 
              +   ``POST`` 
              +   ``PUT`` 
              +   ``ALL`` 
              
              ``ALL`` is a special value that includes all of the listed HTTP methods.
      required:
        - Items
      type: object
      description: |-
        A list of HTTP methods that CloudFront includes as values for the ``Access-Control-Allow-Methods`` HTTP response header.
         For more information about the ``Access-Control-Allow-Methods`` HTTP response header, see [Access-Control-Allow-Methods](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) in the MDN Web Docs.
    AccessControlAllowOrigins:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
          description: The list of origins (domain names). You can specify ``*`` to allow all origins.
      required:
        - Items
      type: object
      description: |-
        A list of origins (domain names) that CloudFront can use as the value for the ``Access-Control-Allow-Origin`` HTTP response header.
         For more information about the ``Access-Control-Allow-Origin`` HTTP response header, see [Access-Control-Allow-Origin](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) in the MDN Web Docs.
    AccessControlExposeHeaders:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
          description: The list of HTTP headers. You can specify ``*`` to expose all headers.
      required:
        - Items
      type: object
      description: |-
        A list of HTTP headers that CloudFront includes as values for the ``Access-Control-Expose-Headers`` HTTP response header.
         For more information about the ``Access-Control-Expose-Headers`` HTTP response header, see [Access-Control-Expose-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers) in the MDN Web Docs.
    ContentSecurityPolicy:
      additionalProperties: false
      properties:
        ContentSecurityPolicy:
          type: string
          description: |-
            The policy directives and their values that CloudFront includes as values for the ``Content-Security-Policy`` HTTP response header.
             For more information about the ``Content-Security-Policy`` HTTP response header, see [Content-Security-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) in the MDN Web Docs.
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides the ``Content-Security-Policy`` HTTP response header received from the origin with the one specified in this response headers policy.
      required:
        - Override
        - ContentSecurityPolicy
      type: object
      description: |-
        The policy directives and their values that CloudFront includes as values for the ``Content-Security-Policy`` HTTP response header.
         For more information about the ``Content-Security-Policy`` HTTP response header, see [Content-Security-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) in the MDN Web Docs.
    ContentTypeOptions:
      additionalProperties: false
      properties:
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides the ``X-Content-Type-Options`` HTTP response header received from the origin with the one specified in this response headers policy.
      required:
        - Override
      type: object
      description: |-
        Determines whether CloudFront includes the ``X-Content-Type-Options`` HTTP response header with its value set to ``nosniff``.
         For more information about the ``X-Content-Type-Options`` HTTP response header, see [X-Content-Type-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options) in the MDN Web Docs.
    CorsConfig:
      additionalProperties: false
      properties:
        AccessControlAllowCredentials:
          type: boolean
          description: |-
            A Boolean that CloudFront uses as the value for the ``Access-Control-Allow-Credentials`` HTTP response header.
             For more information about the ``Access-Control-Allow-Credentials`` HTTP response header, see [Access-Control-Allow-Credentials](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials) in the MDN Web Docs.
        AccessControlAllowHeaders:
          $ref: '#/components/schemas/AccessControlAllowHeaders'
          description: |-
            A list of HTTP header names that CloudFront includes as values for the ``Access-Control-Allow-Headers`` HTTP response header.
             For more information about the ``Access-Control-Allow-Headers`` HTTP response header, see [Access-Control-Allow-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Headers) in the MDN Web Docs.
        AccessControlAllowMethods:
          $ref: '#/components/schemas/AccessControlAllowMethods'
          description: |-
            A list of HTTP methods that CloudFront includes as values for the ``Access-Control-Allow-Methods`` HTTP response header.
             For more information about the ``Access-Control-Allow-Methods`` HTTP response header, see [Access-Control-Allow-Methods](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Methods) in the MDN Web Docs.
        AccessControlAllowOrigins:
          $ref: '#/components/schemas/AccessControlAllowOrigins'
          description: |-
            A list of origins (domain names) that CloudFront can use as the value for the ``Access-Control-Allow-Origin`` HTTP response header.
             For more information about the ``Access-Control-Allow-Origin`` HTTP response header, see [Access-Control-Allow-Origin](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin) in the MDN Web Docs.
        AccessControlExposeHeaders:
          $ref: '#/components/schemas/AccessControlExposeHeaders'
          description: |-
            A list of HTTP headers that CloudFront includes as values for the ``Access-Control-Expose-Headers`` HTTP response header.
             For more information about the ``Access-Control-Expose-Headers`` HTTP response header, see [Access-Control-Expose-Headers](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Expose-Headers) in the MDN Web Docs.
        AccessControlMaxAgeSec:
          type: integer
          description: |-
            A number that CloudFront uses as the value for the ``Access-Control-Max-Age`` HTTP response header.
             For more information about the ``Access-Control-Max-Age`` HTTP response header, see [Access-Control-Max-Age](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Max-Age) in the MDN Web Docs.
        OriginOverride:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides HTTP response headers received from the origin with the ones specified in this response headers policy.
      required:
        - AccessControlAllowOrigins
        - AccessControlAllowHeaders
        - AccessControlAllowMethods
        - AccessControlAllowCredentials
        - OriginOverride
      type: object
      description: |-
        A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS). CloudFront adds these headers to HTTP responses that it sends for CORS requests that match a cache behavior associated with this response headers policy.
         For more information about CORS, see [Cross-Origin Resource Sharing (CORS)](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) in the MDN Web Docs.
    CustomHeader:
      additionalProperties: false
      properties:
        Header:
          type: string
          description: The HTTP response header name.
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides a response header with the same name received from the origin with the header specified here.
        Value:
          type: string
          description: The value for the HTTP response header.
      required:
        - Header
        - Value
        - Override
      type: object
      description: An HTTP response header name and its value. CloudFront includes this header in HTTP responses that it sends for requests that match a cache behavior that's associated with this response headers policy.
    CustomHeadersConfig:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CustomHeader'
          type: array
          uniqueItems: false
          description: The list of HTTP response headers and their values.
      required:
        - Items
      type: object
      description: A list of HTTP response header names and their values. CloudFront includes these headers in HTTP responses that it sends for requests that match a cache behavior that's associated with this response headers policy.
    FrameOptions:
      additionalProperties: false
      properties:
        FrameOption:
          pattern: ^(DENY|SAMEORIGIN)$
          type: string
          description: |-
            The value of the ``X-Frame-Options`` HTTP response header. Valid values are ``DENY`` and ``SAMEORIGIN``.
             For more information about these values, see [X-Frame-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) in the MDN Web Docs.
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides the ``X-Frame-Options`` HTTP response header received from the origin with the one specified in this response headers policy.
      required:
        - Override
        - FrameOption
      type: object
      description: |-
        Determines whether CloudFront includes the ``X-Frame-Options`` HTTP response header and the header's value.
         For more information about the ``X-Frame-Options`` HTTP response header, see [X-Frame-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) in the MDN Web Docs.
    ReferrerPolicy:
      additionalProperties: false
      properties:
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides the ``Referrer-Policy`` HTTP response header received from the origin with the one specified in this response headers policy.
        ReferrerPolicy:
          pattern: ^(no-referrer|no-referrer-when-downgrade|origin|origin-when-cross-origin|same-origin|strict-origin|strict-origin-when-cross-origin|unsafe-url)$
          type: string
          description: |-
            Determines whether CloudFront includes the ``Referrer-Policy`` HTTP response header and the header's value.
             For more information about the ``Referrer-Policy`` HTTP response header, see [Referrer-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) in the MDN Web Docs.
      required:
        - Override
        - ReferrerPolicy
      type: object
      description: |-
        Determines whether CloudFront includes the ``Referrer-Policy`` HTTP response header and the header's value.
         For more information about the ``Referrer-Policy`` HTTP response header, see [Referrer-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) in the MDN Web Docs.
    RemoveHeader:
      additionalProperties: false
      properties:
        Header:
          type: string
          description: The HTTP header name.
      required:
        - Header
      type: object
      description: The name of an HTTP header that CloudFront removes from HTTP responses to requests that match the cache behavior that this response headers policy is attached to.
    RemoveHeadersConfig:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RemoveHeader'
          type: array
          uniqueItems: true
          description: The list of HTTP header names.
      required:
        - Items
      type: object
      description: A list of HTTP header names that CloudFront removes from HTTP responses to requests that match the cache behavior that this response headers policy is attached to.
    ResponseHeadersPolicyConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
          description: |-
            A comment to describe the response headers policy.
             The comment cannot be longer than 128 characters.
        CorsConfig:
          $ref: '#/components/schemas/CorsConfig'
          description: A configuration for a set of HTTP response headers that are used for cross-origin resource sharing (CORS).
        CustomHeadersConfig:
          $ref: '#/components/schemas/CustomHeadersConfig'
          description: A configuration for a set of custom HTTP response headers.
        Name:
          type: string
          description: |-
            A name to identify the response headers policy.
             The name must be unique for response headers policies in this AWS-account.
        RemoveHeadersConfig:
          $ref: '#/components/schemas/RemoveHeadersConfig'
          description: A configuration for a set of HTTP headers to remove from the HTTP response.
        SecurityHeadersConfig:
          $ref: '#/components/schemas/SecurityHeadersConfig'
          description: A configuration for a set of security-related HTTP response headers.
        ServerTimingHeadersConfig:
          $ref: '#/components/schemas/ServerTimingHeadersConfig'
          description: A configuration for enabling the ``Server-Timing`` header in HTTP responses sent from CloudFront.
      required:
        - Name
      type: object
      description: |-
        A response headers policy configuration.
         A response headers policy configuration contains metadata about the response headers policy, and configurations for sets of HTTP response headers.
    SecurityHeadersConfig:
      additionalProperties: false
      properties:
        ContentSecurityPolicy:
          $ref: '#/components/schemas/ContentSecurityPolicy'
          description: |-
            The policy directives and their values that CloudFront includes as values for the ``Content-Security-Policy`` HTTP response header.
             For more information about the ``Content-Security-Policy`` HTTP response header, see [Content-Security-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) in the MDN Web Docs.
        ContentTypeOptions:
          $ref: '#/components/schemas/ContentTypeOptions'
          description: |-
            Determines whether CloudFront includes the ``X-Content-Type-Options`` HTTP response header with its value set to ``nosniff``.
             For more information about the ``X-Content-Type-Options`` HTTP response header, see [X-Content-Type-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options) in the MDN Web Docs.
        FrameOptions:
          $ref: '#/components/schemas/FrameOptions'
          description: |-
            Determines whether CloudFront includes the ``X-Frame-Options`` HTTP response header and the header's value.
             For more information about the ``X-Frame-Options`` HTTP response header, see [X-Frame-Options](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options) in the MDN Web Docs.
        ReferrerPolicy:
          $ref: '#/components/schemas/ReferrerPolicy'
          description: |-
            Determines whether CloudFront includes the ``Referrer-Policy`` HTTP response header and the header's value.
             For more information about the ``Referrer-Policy`` HTTP response header, see [Referrer-Policy](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) in the MDN Web Docs.
        StrictTransportSecurity:
          $ref: '#/components/schemas/StrictTransportSecurity'
          description: |-
            Determines whether CloudFront includes the ``Strict-Transport-Security`` HTTP response header and the header's value.
             For more information about the ``Strict-Transport-Security`` HTTP response header, see [Security headers](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/understanding-response-headers-policies.html#understanding-response-headers-policies-security) in the *Amazon CloudFront Developer Guide* and [Strict-Transport-Security](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security) in the MDN Web Docs.
        XSSProtection:
          $ref: '#/components/schemas/XSSProtection'
          description: |-
            Determines whether CloudFront includes the ``X-XSS-Protection`` HTTP response header and the header's value.
             For more information about the ``X-XSS-Protection`` HTTP response header, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.
      required: []
      type: object
      description: A configuration for a set of security-related HTTP response headers. CloudFront adds these headers to HTTP responses that it sends for requests that match a cache behavior associated with this response headers policy.
    ServerTimingHeadersConfig:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
          description: A Boolean that determines whether CloudFront adds the ``Server-Timing`` header to HTTP responses that it sends in response to requests that match a cache behavior that's associated with this response headers policy.
        SamplingRate:
          maximum: 100
          minimum: 0
          multipleOf: 0.0001
          type: number
          description: >-
            A number 0–100 (inclusive) that specifies the percentage of responses that you want CloudFront to add the ``Server-Timing`` header to. When you set the sampling rate to 100, CloudFront adds the ``Server-Timing`` header to the HTTP response for every request that matches the cache behavior that this response headers policy is attached to. When you set it to 50, CloudFront adds the header to 50% of the responses for requests that match the cache behavior. You can set the sampling rate
            to any number 0–100 with up to four decimal places.
      required:
        - Enabled
      type: object
      description: A configuration for enabling the ``Server-Timing`` header in HTTP responses sent from CloudFront.
    StrictTransportSecurity:
      additionalProperties: false
      properties:
        AccessControlMaxAgeSec:
          type: integer
          description: A number that CloudFront uses as the value for the ``max-age`` directive in the ``Strict-Transport-Security`` HTTP response header.
        IncludeSubdomains:
          type: boolean
          description: A Boolean that determines whether CloudFront includes the ``includeSubDomains`` directive in the ``Strict-Transport-Security`` HTTP response header.
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides the ``Strict-Transport-Security`` HTTP response header received from the origin with the one specified in this response headers policy.
        Preload:
          type: boolean
          description: A Boolean that determines whether CloudFront includes the ``preload`` directive in the ``Strict-Transport-Security`` HTTP response header.
      required:
        - Override
        - AccessControlMaxAgeSec
      type: object
      description: |-
        Determines whether CloudFront includes the ``Strict-Transport-Security`` HTTP response header and the header's value.
         For more information about the ``Strict-Transport-Security`` HTTP response header, see [Strict-Transport-Security](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security) in the MDN Web Docs.
    XSSProtection:
      additionalProperties: false
      properties:
        ModeBlock:
          type: boolean
          description: |-
            A Boolean that determines whether CloudFront includes the ``mode=block`` directive in the ``X-XSS-Protection`` header.
             For more information about this directive, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.
        Override:
          type: boolean
          description: A Boolean that determines whether CloudFront overrides the ``X-XSS-Protection`` HTTP response header received from the origin with the one specified in this response headers policy.
        Protection:
          type: boolean
          description: |-
            A Boolean that determines the value of the ``X-XSS-Protection`` HTTP response header. When this setting is ``true``, the value of the ``X-XSS-Protection`` header is ``1``. When this setting is ``false``, the value of the ``X-XSS-Protection`` header is ``0``.
             For more information about these settings, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.
        ReportUri:
          type: string
          description: |-
            A reporting URI, which CloudFront uses as the value of the ``report`` directive in the ``X-XSS-Protection`` header.
             You cannot specify a ``ReportUri`` when ``ModeBlock`` is ``true``.
             For more information about using a reporting URL, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.
      required:
        - Override
        - Protection
      type: object
      description: |-
        Determines whether CloudFront includes the ``X-XSS-Protection`` HTTP response header and the header's value.
         For more information about the ``X-XSS-Protection`` HTTP response header, see [X-XSS-Protection](https://docs.aws.amazon.com/https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection) in the MDN Web Docs.
    ResponseHeadersPolicy:
      type: object
      properties:
        Id:
          type: string
          description: ''
        LastModifiedTime:
          type: string
          description: ''
        ResponseHeadersPolicyConfig:
          $ref: '#/components/schemas/ResponseHeadersPolicyConfig'
          description: A response headers policy configuration.
      required:
        - ResponseHeadersPolicyConfig
      x-stackql-resource-name: response_headers_policy
      description: |-
        A response headers policy.
         A response headers policy contains information about a set of HTTP response headers.
         After you create a response headers policy, you can use its ID to attach it to one or more cache behaviors in a CloudFront distribution. When it's attached to a cache behavior, the response headers policy affects the HTTP headers that CloudFront includes in HTTP responses to requests that match the cache behavior. CloudFront adds or removes response headers according to the configuration of the response headers policy.
         For more information, see [Adding or removing HTTP headers in CloudFront responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html) in the *Amazon CloudFront Developer Guide*.
      x-type-name: AWS::CloudFront::ResponseHeadersPolicy
      x-stackql-primary-identifier:
        - Id
      x-read-only-properties:
        - Id
        - LastModifiedTime
      x-required-properties:
        - ResponseHeadersPolicyConfig
      x-tagging:
        cloudFormationSystemTags: false
        tagOnCreate: false
        tagUpdatable: false
        taggable: false
      x-required-permissions:
        create:
          - cloudfront:CreateResponseHeadersPolicy
        delete:
          - cloudfront:DeleteResponseHeadersPolicy
          - cloudfront:GetResponseHeadersPolicy
        list:
          - cloudfront:ListResponseHeadersPolicies
        read:
          - cloudfront:GetResponseHeadersPolicy
        update:
          - cloudfront:UpdateResponseHeadersPolicy
          - cloudfront:GetResponseHeadersPolicy
    CreateAnycastIpListRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AnycastIpList:
              $ref: '#/components/schemas/AnycastIpList'
            ETag:
              type: string
            Id:
              type: string
            IpCount:
              type: integer
            Name:
              maxLength: 64
              minLength: 1
              pattern: ^[a-zA-Z0-9-_]{1,64}$
              type: string
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateAnycastIpListRequest
      type: object
      required: []
    CreateCachePolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CachePolicyConfig:
              $ref: '#/components/schemas/CachePolicyConfig'
              description: The cache policy configuration.
            Id:
              type: string
              description: ''
            LastModifiedTime:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateCachePolicyRequest
      type: object
      required: []
    CreateCloudFrontOriginAccessIdentityRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CloudFrontOriginAccessIdentityConfig:
              $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
              description: The current configuration information for the identity.
            Id:
              type: string
              description: ''
            S3CanonicalUserId:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateCloudFrontOriginAccessIdentityRequest
      type: object
      required: []
    CreateContinuousDeploymentPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ContinuousDeploymentPolicyConfig:
              $ref: '#/components/schemas/ContinuousDeploymentPolicyConfig'
              description: Contains the configuration for a continuous deployment policy.
            Id:
              type: string
              description: ''
            LastModifiedTime:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateContinuousDeploymentPolicyRequest
      type: object
      required: []
    CreateDistributionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DistributionConfig:
              $ref: '#/components/schemas/DistributionConfig'
              description: The distribution's configuration.
            DomainName:
              type: string
              description: ''
            Id:
              type: string
              description: ''
            Tags:
              items:
                $ref: '#/components/schemas/Tag'
              type: array
              uniqueItems: false
              description: A complex type that contains zero or more ``Tag`` elements.
          x-stackQL-stringOnly: true
      x-title: CreateDistributionRequest
      type: object
      required: []
    CreateFunctionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AutoPublish:
              type: boolean
              description: A flag that determines whether to automatically publish the function to the ``LIVE`` stage when it’s created. To automatically publish to the ``LIVE`` stage, set this property to ``true``.
            FunctionARN:
              type: string
              description: ''
            FunctionCode:
              type: string
              description: The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide*.
            FunctionConfig:
              $ref: '#/components/schemas/FunctionConfig'
              description: Contains configuration information about a CloudFront function.
            FunctionMetadata:
              $ref: '#/components/schemas/FunctionMetadata'
              description: Contains metadata about a CloudFront function.
            Name:
              type: string
              description: A name to identify the function.
            Stage:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateFunctionRequest
      type: object
      required: []
    CreateKeyGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
              description: ''
            KeyGroupConfig:
              $ref: '#/components/schemas/KeyGroupConfig'
              description: The key group configuration.
            LastModifiedTime:
              type: string
              description: ''
          x-stackQL-stringOnly: true
      x-title: CreateKeyGroupRequest
      type: object
      required: []
    CreateKeyValueStoreRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              description: ''
            Id:
              type: string
              description: ''
            Status:
              type: string
              description: ''
            Name:
              type: string
              description: The name of the key value store.
            Comment:
              type: string
              description: A comment for the key value store.
            ImportSource:
              $ref: '#/components/schemas/ImportSource'
              description: The import source for the key value store.
          x-stackQL-stringOnly: true
      x-title: CreateKeyValueStoreRequest
      type: object
      required: []
    CreateMonitoringSubscriptionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DistributionId:
              type: string
              description: The ID of the distribution that you are enabling metrics for.
            MonitoringSubscription:
              $ref: '#/components/schemas/MonitoringSubscription'
              description: A subscription configuration for additional CloudWatch metrics.
          x-stackQL-stringOnly: true
      x-title: CreateMonitoringSubscriptionRequest
      type: object
      required: []
    CreateOriginAccessControlRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
              description: ''
            OriginAccessControlConfig:
              $ref: '#/components/schemas/OriginAccessControlConfig'
              description: The origin access control.
          x-stackQL-stringOnly: true
      x-title: CreateOriginAccessControlRequest
      type: object
      required: []
    CreateOriginRequestPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
              description: ''
            LastModifiedTime:
              type: string
              description: ''
            OriginRequestPolicyConfig:
              $ref: '#/components/schemas/OriginRequestPolicyConfig'
              description: The origin request policy configuration.
          x-stackQL-stringOnly: true
      x-title: CreateOriginRequestPolicyRequest
      type: object
      required: []
    CreatePublicKeyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            CreatedTime:
              type: string
              description: ''
            Id:
              type: string
              description: ''
            PublicKeyConfig:
              $ref: '#/components/schemas/PublicKeyConfig'
              description: Configuration information about a public key that you can use with [signed URLs and signed cookies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html), or with [field-level encryption](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/field-level-encryption.html).
          x-stackQL-stringOnly: true
      x-title: CreatePublicKeyRequest
      type: object
      required: []
    CreateRealtimeLogConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              description: ''
            EndPoints:
              items:
                $ref: '#/components/schemas/EndPoint'
              minItems: 1
              type: array
              uniqueItems: false
              description: Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
            Fields:
              items:
                type: string
              minItems: 1
              type: array
              uniqueItems: false
              description: |-
                A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
                 For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide*.
            Name:
              type: string
              description: The unique name of this real-time log configuration.
            SamplingRate:
              maximum: 100
              minimum: 1
              multipleOf: 1
              type: number
              description: The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
          x-stackQL-stringOnly: true
      x-title: CreateRealtimeLogConfigRequest
      type: object
      required: []
    CreateResponseHeadersPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Id:
              type: string
              description: ''
            LastModifiedTime:
              type: string
              description: ''
            ResponseHeadersPolicyConfig:
              $ref: '#/components/schemas/ResponseHeadersPolicyConfig'
              description: A response headers policy configuration.
          x-stackQL-stringOnly: true
      x-title: CreateResponseHeadersPolicyRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    anycast_ip_lists:
      name: anycast_ip_lists
      id: aws.cloudfront.anycast_ip_lists
      x-cfn-schema-name: AnycastIpList
      x-cfn-type-name: AWS::CloudFront::AnycastIpList
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__AnycastIpList&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::AnycastIpList"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::AnycastIpList"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/anycast_ip_lists/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/anycast_ip_lists/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AnycastIpList') as anycast_ip_list,
              JSON_EXTRACT(Properties, '$.ETag') as e_tag,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IpCount') as ip_count,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::AnycastIpList'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AnycastIpList') as anycast_ip_list,
                JSON_EXTRACT(detail.Properties, '$.ETag') as e_tag,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.IpCount') as ip_count,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::AnycastIpList'
                AND detail.data__TypeName = 'AWS::CloudFront::AnycastIpList'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AnycastIpList') as anycast_ip_list,
                  json_extract_path_text(Properties, 'ETag') as e_tag,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'IpCount') as ip_count,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::AnycastIpList'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AnycastIpList') as anycast_ip_list,
                    json_extract_path_text(detail.Properties, 'ETag') as e_tag,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'IpCount') as ip_count,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::AnycastIpList'
                    AND detail.data__TypeName = 'AWS::CloudFront::AnycastIpList'
                    AND listing.region = 'us-east-1'
    anycast_ip_lists_list_only:
      name: anycast_ip_lists_list_only
      id: aws.cloudfront.anycast_ip_lists_list_only
      x-cfn-schema-name: AnycastIpList
      x-cfn-type-name: AWS::CloudFront::AnycastIpList
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::AnycastIpList'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::AnycastIpList'
                AND region = 'us-east-1'
    anycast_ip_list_tags:
      name: anycast_ip_list_tags
      id: aws.cloudfront.anycast_ip_list_tags
      x-cfn-schema-name: AnycastIpList
      x-cfn-type-name: AWS::CloudFront::AnycastIpList
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AnycastIpList') as anycast_ip_list,
              JSON_EXTRACT(detail.Properties, '$.ETag') as e_tag,
              JSON_EXTRACT(detail.Properties, '$.Id') as id,
              JSON_EXTRACT(detail.Properties, '$.IpCount') as ip_count,
              JSON_EXTRACT(detail.Properties, '$.Name') as name
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CloudFront::AnycastIpList'
              AND detail.data__TypeName = 'AWS::CloudFront::AnycastIpList'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AnycastIpList') as anycast_ip_list,
                json_extract_path_text(detail.Properties, 'ETag') as e_tag,
                json_extract_path_text(detail.Properties, 'Id') as id,
                json_extract_path_text(detail.Properties, 'IpCount') as ip_count,
                json_extract_path_text(detail.Properties, 'Name') as name
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CloudFront::AnycastIpList'
                AND detail.data__TypeName = 'AWS::CloudFront::AnycastIpList'
                AND listing.region = 'us-east-1'
    cache_policies:
      name: cache_policies
      id: aws.cloudfront.cache_policies
      x-cfn-schema-name: CachePolicy
      x-cfn-type-name: AWS::CloudFront::CachePolicy
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CachePolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::CachePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::CachePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::CachePolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cache_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cache_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cache_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig') as cache_policy_config,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::CachePolicy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.CachePolicyConfig') as cache_policy_config,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::CachePolicy'
                AND detail.data__TypeName = 'AWS::CloudFront::CachePolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CachePolicyConfig') as cache_policy_config,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::CachePolicy'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'CachePolicyConfig') as cache_policy_config,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::CachePolicy'
                    AND detail.data__TypeName = 'AWS::CloudFront::CachePolicy'
                    AND listing.region = 'us-east-1'
    cache_policies_list_only:
      name: cache_policies_list_only
      id: aws.cloudfront.cache_policies_list_only
      x-cfn-schema-name: CachePolicy
      x-cfn-type-name: AWS::CloudFront::CachePolicy
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::CachePolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::CachePolicy'
                AND region = 'us-east-1'
    cloud_front_origin_access_identities:
      name: cloud_front_origin_access_identities
      id: aws.cloudfront.cloud_front_origin_access_identities
      x-cfn-schema-name: CloudFrontOriginAccessIdentity
      x-cfn-type-name: AWS::CloudFront::CloudFrontOriginAccessIdentity
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CloudFrontOriginAccessIdentity&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::CloudFrontOriginAccessIdentity"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/cloud_front_origin_access_identities/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/cloud_front_origin_access_identities/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/cloud_front_origin_access_identities/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CloudFrontOriginAccessIdentityConfig') as cloud_front_origin_access_identity_config,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.S3CanonicalUserId') as s3_canonical_user_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.CloudFrontOriginAccessIdentityConfig') as cloud_front_origin_access_identity_config,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.S3CanonicalUserId') as s3_canonical_user_id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
                AND detail.data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CloudFrontOriginAccessIdentityConfig') as cloud_front_origin_access_identity_config,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'S3CanonicalUserId') as s3_canonical_user_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'CloudFrontOriginAccessIdentityConfig') as cloud_front_origin_access_identity_config,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'S3CanonicalUserId') as s3_canonical_user_id
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
                    AND detail.data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
                    AND listing.region = 'us-east-1'
    cloud_front_origin_access_identities_list_only:
      name: cloud_front_origin_access_identities_list_only
      id: aws.cloudfront.cloud_front_origin_access_identities_list_only
      x-cfn-schema-name: CloudFrontOriginAccessIdentity
      x-cfn-type-name: AWS::CloudFront::CloudFrontOriginAccessIdentity
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
                AND region = 'us-east-1'
    continuous_deployment_policies:
      name: continuous_deployment_policies
      id: aws.cloudfront.continuous_deployment_policies
      x-cfn-schema-name: ContinuousDeploymentPolicy
      x-cfn-type-name: AWS::CloudFront::ContinuousDeploymentPolicy
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ContinuousDeploymentPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::ContinuousDeploymentPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::ContinuousDeploymentPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::ContinuousDeploymentPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/continuous_deployment_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/continuous_deployment_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/continuous_deployment_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ContinuousDeploymentPolicyConfig') as continuous_deployment_policy_config,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ContinuousDeploymentPolicyConfig') as continuous_deployment_policy_config,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
                AND detail.data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ContinuousDeploymentPolicyConfig') as continuous_deployment_policy_config,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ContinuousDeploymentPolicyConfig') as continuous_deployment_policy_config,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
                    AND detail.data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
                    AND listing.region = 'us-east-1'
    continuous_deployment_policies_list_only:
      name: continuous_deployment_policies_list_only
      id: aws.cloudfront.continuous_deployment_policies_list_only
      x-cfn-schema-name: ContinuousDeploymentPolicy
      x-cfn-type-name: AWS::CloudFront::ContinuousDeploymentPolicy
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
                AND region = 'us-east-1'
    distributions:
      name: distributions
      id: aws.cloudfront.distributions
      x-cfn-schema-name: Distribution
      x-cfn-type-name: AWS::CloudFront::Distribution
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Distribution&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::Distribution"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::Distribution"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::Distribution"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/distributions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/distributions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/distributions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DistributionConfig') as distribution_config,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::Distribution'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DistributionConfig') as distribution_config,
                JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::Distribution'
                AND detail.data__TypeName = 'AWS::CloudFront::Distribution'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DistributionConfig') as distribution_config,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::Distribution'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DistributionConfig') as distribution_config,
                    json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::Distribution'
                    AND detail.data__TypeName = 'AWS::CloudFront::Distribution'
                    AND listing.region = 'us-east-1'
    distributions_list_only:
      name: distributions_list_only
      id: aws.cloudfront.distributions_list_only
      x-cfn-schema-name: Distribution
      x-cfn-type-name: AWS::CloudFront::Distribution
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::Distribution'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::Distribution'
                AND region = 'us-east-1'
    distribution_tags:
      name: distribution_tags
      id: aws.cloudfront.distribution_tags
      x-cfn-schema-name: Distribution
      x-cfn-type-name: AWS::CloudFront::Distribution
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DistributionConfig') as distribution_config,
              JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(detail.Properties, '$.Id') as id
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CloudFront::Distribution'
              AND detail.data__TypeName = 'AWS::CloudFront::Distribution'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DistributionConfig') as distribution_config,
                json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                json_extract_path_text(detail.Properties, 'Id') as id
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CloudFront::Distribution'
                AND detail.data__TypeName = 'AWS::CloudFront::Distribution'
                AND listing.region = 'us-east-1'
    functions:
      name: functions
      id: aws.cloudfront.functions
      x-cfn-schema-name: Function
      x-cfn-type-name: AWS::CloudFront::Function
      x-identifiers:
        - FunctionARN
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Function&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::Function"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::Function"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::Function"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/functions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/functions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/functions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AutoPublish') as auto_publish,
              JSON_EXTRACT(Properties, '$.FunctionARN') as function_arn,
              JSON_EXTRACT(Properties, '$.FunctionCode') as function_code,
              JSON_EXTRACT(Properties, '$.FunctionConfig') as function_config,
              JSON_EXTRACT(Properties, '$.FunctionMetadata') as function_metadata,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Stage') as stage
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::Function'
              AND data__Identifier = '<FunctionARN>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AutoPublish') as auto_publish,
                JSON_EXTRACT(detail.Properties, '$.FunctionARN') as function_arn,
                JSON_EXTRACT(detail.Properties, '$.FunctionCode') as function_code,
                JSON_EXTRACT(detail.Properties, '$.FunctionConfig') as function_config,
                JSON_EXTRACT(detail.Properties, '$.FunctionMetadata') as function_metadata,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Stage') as stage
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::Function'
                AND detail.data__TypeName = 'AWS::CloudFront::Function'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AutoPublish') as auto_publish,
                  json_extract_path_text(Properties, 'FunctionARN') as function_arn,
                  json_extract_path_text(Properties, 'FunctionCode') as function_code,
                  json_extract_path_text(Properties, 'FunctionConfig') as function_config,
                  json_extract_path_text(Properties, 'FunctionMetadata') as function_metadata,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Stage') as stage
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::Function'
                  AND data__Identifier = '<FunctionARN>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AutoPublish') as auto_publish,
                    json_extract_path_text(detail.Properties, 'FunctionARN') as function_arn,
                    json_extract_path_text(detail.Properties, 'FunctionCode') as function_code,
                    json_extract_path_text(detail.Properties, 'FunctionConfig') as function_config,
                    json_extract_path_text(detail.Properties, 'FunctionMetadata') as function_metadata,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Stage') as stage
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::Function'
                    AND detail.data__TypeName = 'AWS::CloudFront::Function'
                    AND listing.region = 'us-east-1'
    functions_list_only:
      name: functions_list_only
      id: aws.cloudfront.functions_list_only
      x-cfn-schema-name: Function
      x-cfn-type-name: AWS::CloudFront::Function
      x-identifiers:
        - FunctionARN
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FunctionARN') as function_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::Function'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FunctionARN') as function_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::Function'
                AND region = 'us-east-1'
    key_groups:
      name: key_groups
      id: aws.cloudfront.key_groups
      x-cfn-schema-name: KeyGroup
      x-cfn-type-name: AWS::CloudFront::KeyGroup
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__KeyGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::KeyGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::KeyGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::KeyGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/key_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/key_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/key_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.KeyGroupConfig') as key_group_config,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::KeyGroup'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.KeyGroupConfig') as key_group_config,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::KeyGroup'
                AND detail.data__TypeName = 'AWS::CloudFront::KeyGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'KeyGroupConfig') as key_group_config,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::KeyGroup'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'KeyGroupConfig') as key_group_config,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::KeyGroup'
                    AND detail.data__TypeName = 'AWS::CloudFront::KeyGroup'
                    AND listing.region = 'us-east-1'
    key_groups_list_only:
      name: key_groups_list_only
      id: aws.cloudfront.key_groups_list_only
      x-cfn-schema-name: KeyGroup
      x-cfn-type-name: AWS::CloudFront::KeyGroup
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::KeyGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::KeyGroup'
                AND region = 'us-east-1'
    key_value_stores:
      name: key_value_stores
      id: aws.cloudfront.key_value_stores
      x-cfn-schema-name: KeyValueStore
      x-cfn-type-name: AWS::CloudFront::KeyValueStore
      x-identifiers:
        - Name
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__KeyValueStore&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::KeyValueStore"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::KeyValueStore"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::KeyValueStore"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/key_value_stores/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/key_value_stores/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/key_value_stores/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Comment') as comment,
              JSON_EXTRACT(Properties, '$.ImportSource') as import_source
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::KeyValueStore'
              AND data__Identifier = '<Name>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Comment') as comment,
                JSON_EXTRACT(detail.Properties, '$.ImportSource') as import_source
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::KeyValueStore'
                AND detail.data__TypeName = 'AWS::CloudFront::KeyValueStore'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Comment') as comment,
                  json_extract_path_text(Properties, 'ImportSource') as import_source
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::KeyValueStore'
                  AND data__Identifier = '<Name>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Comment') as comment,
                    json_extract_path_text(detail.Properties, 'ImportSource') as import_source
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::KeyValueStore'
                    AND detail.data__TypeName = 'AWS::CloudFront::KeyValueStore'
                    AND listing.region = 'us-east-1'
    key_value_stores_list_only:
      name: key_value_stores_list_only
      id: aws.cloudfront.key_value_stores_list_only
      x-cfn-schema-name: KeyValueStore
      x-cfn-type-name: AWS::CloudFront::KeyValueStore
      x-identifiers:
        - Name
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::KeyValueStore'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Name') as name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::KeyValueStore'
                AND region = 'us-east-1'
    monitoring_subscriptions:
      name: monitoring_subscriptions
      id: aws.cloudfront.monitoring_subscriptions
      x-cfn-schema-name: MonitoringSubscription
      x-cfn-type-name: AWS::CloudFront::MonitoringSubscription
      x-identifiers:
        - DistributionId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MonitoringSubscription&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::MonitoringSubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::MonitoringSubscription"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/monitoring_subscriptions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/monitoring_subscriptions/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DistributionId') as distribution_id,
              JSON_EXTRACT(Properties, '$.MonitoringSubscription') as monitoring_subscription
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::MonitoringSubscription'
              AND data__Identifier = '<DistributionId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'DistributionId') as distribution_id,
                json_extract_path_text(Properties, 'MonitoringSubscription') as monitoring_subscription
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::MonitoringSubscription'
                AND data__Identifier = '<DistributionId>'
                AND region = 'us-east-1'
    origin_access_controls:
      name: origin_access_controls
      id: aws.cloudfront.origin_access_controls
      x-cfn-schema-name: OriginAccessControl
      x-cfn-type-name: AWS::CloudFront::OriginAccessControl
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__OriginAccessControl&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::OriginAccessControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::OriginAccessControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::OriginAccessControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/origin_access_controls/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/origin_access_controls/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/origin_access_controls/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.OriginAccessControlConfig') as origin_access_control_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::OriginAccessControl'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.OriginAccessControlConfig') as origin_access_control_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::OriginAccessControl'
                AND detail.data__TypeName = 'AWS::CloudFront::OriginAccessControl'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'OriginAccessControlConfig') as origin_access_control_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::OriginAccessControl'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'OriginAccessControlConfig') as origin_access_control_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::OriginAccessControl'
                    AND detail.data__TypeName = 'AWS::CloudFront::OriginAccessControl'
                    AND listing.region = 'us-east-1'
    origin_access_controls_list_only:
      name: origin_access_controls_list_only
      id: aws.cloudfront.origin_access_controls_list_only
      x-cfn-schema-name: OriginAccessControl
      x-cfn-type-name: AWS::CloudFront::OriginAccessControl
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::OriginAccessControl'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::OriginAccessControl'
                AND region = 'us-east-1'
    origin_request_policies:
      name: origin_request_policies
      id: aws.cloudfront.origin_request_policies
      x-cfn-schema-name: OriginRequestPolicy
      x-cfn-type-name: AWS::CloudFront::OriginRequestPolicy
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__OriginRequestPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::OriginRequestPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::OriginRequestPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::OriginRequestPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/origin_request_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/origin_request_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/origin_request_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.OriginRequestPolicyConfig') as origin_request_policy_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
                JSON_EXTRACT(detail.Properties, '$.OriginRequestPolicyConfig') as origin_request_policy_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
                AND detail.data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                  json_extract_path_text(Properties, 'OriginRequestPolicyConfig') as origin_request_policy_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                    json_extract_path_text(detail.Properties, 'OriginRequestPolicyConfig') as origin_request_policy_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
                    AND detail.data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
                    AND listing.region = 'us-east-1'
    origin_request_policies_list_only:
      name: origin_request_policies_list_only
      id: aws.cloudfront.origin_request_policies_list_only
      x-cfn-schema-name: OriginRequestPolicy
      x-cfn-type-name: AWS::CloudFront::OriginRequestPolicy
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
                AND region = 'us-east-1'
    public_keys:
      name: public_keys
      id: aws.cloudfront.public_keys
      x-cfn-schema-name: PublicKey
      x-cfn-type-name: AWS::CloudFront::PublicKey
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PublicKey&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::PublicKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::PublicKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::PublicKey"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/public_keys/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PublicKeyConfig') as public_key_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::PublicKey'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.CreatedTime') as created_time,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.PublicKeyConfig') as public_key_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::PublicKey'
                AND detail.data__TypeName = 'AWS::CloudFront::PublicKey'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'CreatedTime') as created_time,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'PublicKeyConfig') as public_key_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::PublicKey'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'CreatedTime') as created_time,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'PublicKeyConfig') as public_key_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::PublicKey'
                    AND detail.data__TypeName = 'AWS::CloudFront::PublicKey'
                    AND listing.region = 'us-east-1'
    public_keys_list_only:
      name: public_keys_list_only
      id: aws.cloudfront.public_keys_list_only
      x-cfn-schema-name: PublicKey
      x-cfn-type-name: AWS::CloudFront::PublicKey
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::PublicKey'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::PublicKey'
                AND region = 'us-east-1'
    realtime_log_configs:
      name: realtime_log_configs
      id: aws.cloudfront.realtime_log_configs
      x-cfn-schema-name: RealtimeLogConfig
      x-cfn-type-name: AWS::CloudFront::RealtimeLogConfig
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RealtimeLogConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::RealtimeLogConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::RealtimeLogConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::RealtimeLogConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/realtime_log_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/realtime_log_configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/realtime_log_configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.EndPoints') as end_points,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SamplingRate') as sampling_rate
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.EndPoints') as end_points,
                JSON_EXTRACT(detail.Properties, '$.Fields') as fields,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.SamplingRate') as sampling_rate
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
                AND detail.data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'EndPoints') as end_points,
                  json_extract_path_text(Properties, 'Fields') as fields,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'SamplingRate') as sampling_rate
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'EndPoints') as end_points,
                    json_extract_path_text(detail.Properties, 'Fields') as fields,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'SamplingRate') as sampling_rate
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
                    AND detail.data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
                    AND listing.region = 'us-east-1'
    realtime_log_configs_list_only:
      name: realtime_log_configs_list_only
      id: aws.cloudfront.realtime_log_configs_list_only
      x-cfn-schema-name: RealtimeLogConfig
      x-cfn-type-name: AWS::CloudFront::RealtimeLogConfig
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
                AND region = 'us-east-1'
    response_headers_policies:
      name: response_headers_policies
      id: aws.cloudfront.response_headers_policies
      x-cfn-schema-name: ResponseHeadersPolicy
      x-cfn-type-name: AWS::CloudFront::ResponseHeadersPolicy
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ResponseHeadersPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::ResponseHeadersPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::ResponseHeadersPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CloudFront::ResponseHeadersPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/response_headers_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/response_headers_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/response_headers_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig') as response_headers_policy_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.LastModifiedTime') as last_modified_time,
                JSON_EXTRACT(detail.Properties, '$.ResponseHeadersPolicyConfig') as response_headers_policy_config
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
                AND detail.data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'LastModifiedTime') as last_modified_time,
                  json_extract_path_text(Properties, 'ResponseHeadersPolicyConfig') as response_headers_policy_config
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'LastModifiedTime') as last_modified_time,
                    json_extract_path_text(detail.Properties, 'ResponseHeadersPolicyConfig') as response_headers_policy_config
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
                    AND detail.data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
                    AND listing.region = 'us-east-1'
    response_headers_policies_list_only:
      name: response_headers_policies_list_only
      id: aws.cloudfront.response_headers_policies_list_only
      x-cfn-schema-name: ResponseHeadersPolicy
      x-cfn-type-name: AWS::CloudFront::ResponseHeadersPolicy
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__AnycastIpList&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAnycastIpList
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAnycastIpListRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CachePolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCachePolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCachePolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CloudFrontOriginAccessIdentity&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCloudFrontOriginAccessIdentity
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCloudFrontOriginAccessIdentityRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ContinuousDeploymentPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateContinuousDeploymentPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateContinuousDeploymentPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Distribution&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDistribution
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDistributionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Function&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFunction
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFunctionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__KeyGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateKeyGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateKeyGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__KeyValueStore&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateKeyValueStore
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateKeyValueStoreRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MonitoringSubscription&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMonitoringSubscription
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMonitoringSubscriptionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__OriginAccessControl&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateOriginAccessControl
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateOriginAccessControlRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__OriginRequestPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateOriginRequestPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateOriginRequestPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PublicKey&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePublicKey
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePublicKeyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RealtimeLogConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRealtimeLogConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRealtimeLogConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ResponseHeadersPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResponseHeadersPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateResponseHeadersPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
