openapi: 3.0.0
info:
  title: CloudFront
  version: 1.0.0
paths: {}
components:
  schemas:
    CachePolicyConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
        DefaultTTL:
          minimum: 0
          multipleOf: 1
          type: number
        MaxTTL:
          minimum: 0
          multipleOf: 1
          type: number
        MinTTL:
          minimum: 0
          multipleOf: 1
          type: number
        Name:
          type: string
        ParametersInCacheKeyAndForwardedToOrigin:
          $ref: '#/components/schemas/ParametersInCacheKeyAndForwardedToOrigin'
      required:
        - Name
        - MinTTL
        - MaxTTL
        - DefaultTTL
        - ParametersInCacheKeyAndForwardedToOrigin
      type: object
    CookiesConfig:
      additionalProperties: false
      properties:
        CookieBehavior:
          pattern: ^(none|whitelist|all|allExcept)$
          type: string
        Cookies:
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - CookieBehavior
      type: object
    HeadersConfig:
      additionalProperties: false
      properties:
        HeaderBehavior:
          pattern: ^(none|whitelist|allViewer|allViewerAndWhitelistCloudFront|allExcept)$
          type: string
        Headers:
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - HeaderBehavior
      type: object
    ParametersInCacheKeyAndForwardedToOrigin:
      additionalProperties: false
      properties:
        CookiesConfig:
          $ref: '#/components/schemas/CookiesConfig'
        EnableAcceptEncodingBrotli:
          type: boolean
        EnableAcceptEncodingGzip:
          type: boolean
        HeadersConfig:
          $ref: '#/components/schemas/HeadersConfig'
        QueryStringsConfig:
          $ref: '#/components/schemas/QueryStringsConfig'
      required:
        - EnableAcceptEncodingGzip
        - HeadersConfig
        - CookiesConfig
        - QueryStringsConfig
      type: object
    QueryStringsConfig:
      additionalProperties: false
      properties:
        QueryStringBehavior:
          pattern: ^(none|whitelist|all|allExcept)$
          type: string
        QueryStrings:
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - QueryStringBehavior
      type: object
    CachePolicy:
      type: object
      properties:
        CachePolicyConfig:
          $ref: '#/components/schemas/CachePolicyConfig'
        Id:
          type: string
        LastModifiedTime:
          type: string
      required:
        - CachePolicyConfig
      x-stackql-resource-name: cache_policy
      x-stackql-primaryIdentifier:
        - Id
    CloudFrontOriginAccessIdentityConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
      required:
        - Comment
      type: object
    CloudFrontOriginAccessIdentity:
      type: object
      properties:
        CloudFrontOriginAccessIdentityConfig:
          $ref: '#/components/schemas/CloudFrontOriginAccessIdentityConfig'
        Id:
          type: string
        S3CanonicalUserId:
          type: string
      required:
        - CloudFrontOriginAccessIdentityConfig
      x-stackql-resource-name: cloud_front_origin_access_identity
      x-stackql-primaryIdentifier:
        - Id
    SingleWeightConfig:
      additionalProperties: false
      type: object
      properties:
        SessionStickinessConfig:
          $ref: '#/components/schemas/SessionStickinessConfig'
        Weight:
          multipleOf: 0.01
          maximum: 1
          type: number
          minimum: 0
      required:
        - Weight
    ContinuousDeploymentPolicyConfig:
      additionalProperties: false
      type: object
      properties:
        Enabled:
          type: boolean
        StagingDistributionDnsNames:
          minItems: 1
          uniqueItems: true
          x-insertionOrder: true
          type: array
          items:
            type: string
        TrafficConfig:
          $ref: '#/components/schemas/TrafficConfig'
      required:
        - Enabled
        - StagingDistributionDnsNames
    SingleHeaderConfig:
      additionalProperties: false
      type: object
      properties:
        Header:
          minLength: 1
          type: string
          maxLength: 256
        Value:
          minLength: 1
          type: string
          maxLength: 1783
      required:
        - Header
        - Value
    SessionStickinessConfig:
      additionalProperties: false
      type: object
      properties:
        IdleTTL:
          multipleOf: 1
          maximum: 3600
          type: integer
          minimum: 300
        MaximumTTL:
          multipleOf: 1
          maximum: 3600
          type: integer
          minimum: 300
      required:
        - IdleTTL
        - MaximumTTL
    TrafficConfig:
      additionalProperties: false
      type: object
      properties:
        SingleWeightConfig:
          $ref: '#/components/schemas/SingleWeightConfig'
        Type:
          type: string
          enum:
            - SingleWeight
            - SingleHeader
        SingleHeaderConfig:
          $ref: '#/components/schemas/SingleHeaderConfig'
      required:
        - Type
    ContinuousDeploymentPolicy:
      type: object
      properties:
        ContinuousDeploymentPolicyConfig:
          $ref: '#/components/schemas/ContinuousDeploymentPolicyConfig'
        LastModifiedTime:
          type: string
        Id:
          type: string
      required:
        - ContinuousDeploymentPolicyConfig
      x-stackql-resource-name: continuous_deployment_policy
      x-stackql-primaryIdentifier:
        - Id
    CacheBehavior:
      additionalProperties: false
      properties:
        AllowedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
        CachePolicyId:
          type: string
        CachedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
        Compress:
          default: false
          type: boolean
        DefaultTTL:
          default: 86400
          type: number
        FieldLevelEncryptionId:
          default: ''
          type: string
        ForwardedValues:
          $ref: '#/components/schemas/ForwardedValues'
        FunctionAssociations:
          items:
            $ref: '#/components/schemas/FunctionAssociation'
          type: array
          uniqueItems: false
        LambdaFunctionAssociations:
          items:
            $ref: '#/components/schemas/LambdaFunctionAssociation'
          type: array
          uniqueItems: false
        MaxTTL:
          default: 31536000
          type: number
        MinTTL:
          default: 0
          type: number
        OriginRequestPolicyId:
          type: string
        PathPattern:
          type: string
        RealtimeLogConfigArn:
          type: string
        ResponseHeadersPolicyId:
          type: string
        SmoothStreaming:
          default: false
          type: boolean
        TargetOriginId:
          type: string
        TrustedKeyGroups:
          items:
            type: string
          type: array
          uniqueItems: false
        TrustedSigners:
          items:
            type: string
          type: array
          uniqueItems: false
        ViewerProtocolPolicy:
          type: string
      required:
        - PathPattern
        - TargetOriginId
        - ViewerProtocolPolicy
      type: object
    Cookies:
      additionalProperties: false
      properties:
        Forward:
          type: string
        WhitelistedNames:
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - Forward
      type: object
    CustomErrorResponse:
      additionalProperties: false
      properties:
        ErrorCachingMinTTL:
          default: 300
          type: number
        ErrorCode:
          type: integer
        ResponseCode:
          type: integer
        ResponsePagePath:
          type: string
      required:
        - ErrorCode
      type: object
    CustomOriginConfig:
      additionalProperties: false
      properties:
        HTTPPort:
          default: 80
          type: integer
        HTTPSPort:
          default: 443
          type: integer
        OriginKeepaliveTimeout:
          default: 5
          type: integer
        OriginProtocolPolicy:
          type: string
        OriginReadTimeout:
          default: 30
          type: integer
        OriginSSLProtocols:
          default:
            - TLSv1
            - SSLv3
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - OriginProtocolPolicy
      type: object
    DefaultCacheBehavior:
      additionalProperties: false
      properties:
        AllowedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
        CachePolicyId:
          default: ''
          type: string
        CachedMethods:
          default:
            - GET
            - HEAD
          items:
            type: string
          type: array
          uniqueItems: false
        Compress:
          default: false
          type: boolean
        DefaultTTL:
          default: 86400
          type: number
        FieldLevelEncryptionId:
          default: ''
          type: string
        ForwardedValues:
          $ref: '#/components/schemas/ForwardedValues'
        FunctionAssociations:
          items:
            $ref: '#/components/schemas/FunctionAssociation'
          type: array
          uniqueItems: false
        LambdaFunctionAssociations:
          items:
            $ref: '#/components/schemas/LambdaFunctionAssociation'
          type: array
          uniqueItems: false
        MaxTTL:
          default: 31536000
          type: number
        MinTTL:
          default: 0
          type: number
        OriginRequestPolicyId:
          default: ''
          type: string
        RealtimeLogConfigArn:
          default: ''
          type: string
        ResponseHeadersPolicyId:
          default: ''
          type: string
        SmoothStreaming:
          default: false
          type: boolean
        TargetOriginId:
          type: string
        TrustedKeyGroups:
          items:
            type: string
          type: array
          uniqueItems: false
        TrustedSigners:
          items:
            type: string
          type: array
          uniqueItems: false
        ViewerProtocolPolicy:
          type: string
      required:
        - TargetOriginId
        - ViewerProtocolPolicy
      type: object
    DistributionConfig:
      additionalProperties: false
      properties:
        Aliases:
          items:
            type: string
          type: array
          uniqueItems: false
        CNAMEs:
          items:
            type: string
          type: array
          uniqueItems: false
        CacheBehaviors:
          items:
            $ref: '#/components/schemas/CacheBehavior'
          type: array
          uniqueItems: false
        Comment:
          default: ''
          type: string
        ContinuousDeploymentPolicyId:
          type: string
        CustomErrorResponses:
          items:
            $ref: '#/components/schemas/CustomErrorResponse'
          type: array
          uniqueItems: false
        CustomOrigin:
          $ref: '#/components/schemas/LegacyCustomOrigin'
        DefaultCacheBehavior:
          $ref: '#/components/schemas/DefaultCacheBehavior'
        DefaultRootObject:
          default: ''
          type: string
        Enabled:
          type: boolean
        HttpVersion:
          default: http1.1
          type: string
        IPV6Enabled:
          type: boolean
        Logging:
          $ref: '#/components/schemas/Logging'
        OriginGroups:
          $ref: '#/components/schemas/OriginGroups'
        Origins:
          items:
            $ref: '#/components/schemas/Origin'
          type: array
          uniqueItems: false
        PriceClass:
          default: PriceClass_All
          type: string
        Restrictions:
          $ref: '#/components/schemas/Restrictions'
          default:
            GeoRestriction:
              RestrictionType: none
        S3Origin:
          $ref: '#/components/schemas/LegacyS3Origin'
        Staging:
          type: boolean
        ViewerCertificate:
          $ref: '#/components/schemas/ViewerCertificate'
          default:
            CloudFrontDefaultCertificate: true
        WebACLId:
          default: ''
          type: string
      required:
        - Enabled
        - DefaultCacheBehavior
      type: object
    ForwardedValues:
      additionalProperties: false
      properties:
        Cookies:
          $ref: '#/components/schemas/Cookies'
          default:
            Forward: none
        Headers:
          items:
            type: string
          type: array
          uniqueItems: false
        QueryString:
          type: boolean
        QueryStringCacheKeys:
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - QueryString
      type: object
    FunctionAssociation:
      additionalProperties: false
      properties:
        EventType:
          type: string
        FunctionARN:
          type: string
      type: object
    GeoRestriction:
      additionalProperties: false
      properties:
        Locations:
          items:
            type: string
          type: array
          uniqueItems: false
        RestrictionType:
          type: string
      required:
        - RestrictionType
      type: object
    LambdaFunctionAssociation:
      additionalProperties: false
      properties:
        EventType:
          type: string
        IncludeBody:
          type: boolean
        LambdaFunctionARN:
          type: string
      type: object
    LegacyCustomOrigin:
      additionalProperties: false
      properties:
        DNSName:
          type: string
        HTTPPort:
          default: 80
          type: integer
        HTTPSPort:
          default: 443
          type: integer
        OriginProtocolPolicy:
          type: string
        OriginSSLProtocols:
          items:
            type: string
          type: array
          uniqueItems: false
      required:
        - DNSName
        - OriginProtocolPolicy
        - OriginSSLProtocols
      type: object
    LegacyS3Origin:
      additionalProperties: false
      properties:
        DNSName:
          type: string
        OriginAccessIdentity:
          default: ''
          type: string
      required:
        - DNSName
      type: object
    Logging:
      type: object
      additionalProperties: false
      properties:
        Bucket:
          type: string
        Enabled:
          type: boolean
        Prefix:
          type: string
      required:
        - Bucket
        - Enabled
        - Prefix
    Origin:
      additionalProperties: false
      properties:
        ConnectionAttempts:
          type: integer
        ConnectionTimeout:
          type: integer
        CustomOriginConfig:
          $ref: '#/components/schemas/CustomOriginConfig'
        DomainName:
          type: string
        Id:
          type: string
        OriginAccessControlId:
          type: string
        OriginCustomHeaders:
          items:
            $ref: '#/components/schemas/OriginCustomHeader'
          type: array
          uniqueItems: false
        OriginPath:
          default: ''
          type: string
        OriginShield:
          $ref: '#/components/schemas/OriginShield'
        S3OriginConfig:
          $ref: '#/components/schemas/S3OriginConfig'
      required:
        - DomainName
        - Id
      type: object
    OriginCustomHeader:
      additionalProperties: false
      properties:
        HeaderName:
          type: string
        HeaderValue:
          type: string
      required:
        - HeaderValue
        - HeaderName
      type: object
    OriginGroup:
      additionalProperties: false
      properties:
        FailoverCriteria:
          $ref: '#/components/schemas/OriginGroupFailoverCriteria'
        Id:
          type: string
        Members:
          $ref: '#/components/schemas/OriginGroupMembers'
      required:
        - Id
        - FailoverCriteria
        - Members
      type: object
    OriginGroupFailoverCriteria:
      additionalProperties: false
      properties:
        StatusCodes:
          $ref: '#/components/schemas/StatusCodes'
      required:
        - StatusCodes
      type: object
    OriginGroupMember:
      additionalProperties: false
      properties:
        OriginId:
          type: string
      required:
        - OriginId
      type: object
    OriginGroupMembers:
      additionalProperties: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/OriginGroupMember'
          type: array
          uniqueItems: false
        Quantity:
          type: integer
      required:
        - Quantity
        - Items
      type: object
    OriginGroups:
      additionalProperties: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/OriginGroup'
          type: array
          uniqueItems: false
        Quantity:
          type: integer
      required:
        - Quantity
      type: object
    OriginShield:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        OriginShieldRegion:
          type: string
      type: object
    Restrictions:
      additionalProperties: false
      properties:
        GeoRestriction:
          $ref: '#/components/schemas/GeoRestriction'
      required:
        - GeoRestriction
      type: object
    S3OriginConfig:
      additionalProperties: false
      properties:
        OriginAccessIdentity:
          default: ''
          type: string
      type: object
    StatusCodes:
      additionalProperties: false
      properties:
        Items:
          items:
            type: integer
          type: array
          uniqueItems: false
        Quantity:
          type: integer
      required:
        - Quantity
        - Items
      type: object
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
        Value:
          type: string
      required:
        - Value
        - Key
    ViewerCertificate:
      additionalProperties: false
      properties:
        AcmCertificateArn:
          type: string
        CloudFrontDefaultCertificate:
          type: boolean
        IamCertificateId:
          type: string
        MinimumProtocolVersion:
          type: string
        SslSupportMethod:
          type: string
      type: object
    Distribution:
      type: object
      properties:
        DistributionConfig:
          $ref: '#/components/schemas/DistributionConfig'
        DomainName:
          type: string
        Id:
          type: string
        Tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
          uniqueItems: false
      required:
        - DistributionConfig
      x-stackql-resource-name: distribution
      x-stackql-primaryIdentifier:
        - Id
    FunctionConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
        Runtime:
          type: string
      required:
        - Comment
        - Runtime
      type: object
    FunctionMetadata:
      additionalProperties: false
      properties:
        FunctionARN:
          type: string
      type: object
    Function:
      type: object
      properties:
        AutoPublish:
          type: boolean
        FunctionARN:
          type: string
        FunctionCode:
          type: string
        FunctionConfig:
          $ref: '#/components/schemas/FunctionConfig'
        FunctionMetadata:
          $ref: '#/components/schemas/FunctionMetadata'
        Name:
          type: string
        Stage:
          type: string
      required:
        - Name
        - FunctionConfig
        - FunctionCode
      x-stackql-resource-name: function
      x-stackql-primaryIdentifier:
        - FunctionARN
    KeyGroupConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
        Items:
          items:
            type: string
          type: array
          uniqueItems: false
        Name:
          type: string
      required:
        - Name
        - Items
      type: object
    KeyGroup:
      type: object
      properties:
        Id:
          type: string
        KeyGroupConfig:
          $ref: '#/components/schemas/KeyGroupConfig'
        LastModifiedTime:
          type: string
      required:
        - KeyGroupConfig
      x-stackql-resource-name: key_group
      x-stackql-primaryIdentifier:
        - Id
    MonitoringSubscription:
      type: object
      properties:
        DistributionId:
          type: string
        MonitoringSubscription:
          $ref: '#/components/schemas/MonitoringSubscription'
      required:
        - DistributionId
        - MonitoringSubscription
      x-stackql-resource-name: monitoring_subscription
      x-stackql-primaryIdentifier:
        - DistributionId
    RealtimeMetricsSubscriptionConfig:
      additionalProperties: false
      properties:
        RealtimeMetricsSubscriptionStatus:
          enum:
            - Enabled
            - Disabled
          type: string
      required:
        - RealtimeMetricsSubscriptionStatus
      type: object
    OriginAccessControlConfig:
      additionalProperties: false
      properties:
        Name:
          type: string
        Description:
          type: string
        SigningProtocol:
          pattern: ^(sigv4)$
          type: string
        SigningBehavior:
          pattern: ^(never|no-override|always)$
          type: string
        OriginAccessControlOriginType:
          pattern: ^(s3|mediastore)$
          type: string
      required:
        - Name
        - SigningProtocol
        - SigningBehavior
        - OriginAccessControlOriginType
      type: object
    OriginAccessControl:
      type: object
      properties:
        OriginAccessControlConfig:
          $ref: '#/components/schemas/OriginAccessControlConfig'
        Id:
          type: string
      required:
        - OriginAccessControlConfig
      x-stackql-resource-name: origin_access_control
      x-stackql-primaryIdentifier:
        - Id
    OriginRequestPolicyConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
        CookiesConfig:
          $ref: '#/components/schemas/CookiesConfig'
        HeadersConfig:
          $ref: '#/components/schemas/HeadersConfig'
        Name:
          type: string
        QueryStringsConfig:
          $ref: '#/components/schemas/QueryStringsConfig'
      required:
        - Name
        - HeadersConfig
        - CookiesConfig
        - QueryStringsConfig
      type: object
    OriginRequestPolicy:
      type: object
      properties:
        Id:
          type: string
        LastModifiedTime:
          type: string
        OriginRequestPolicyConfig:
          $ref: '#/components/schemas/OriginRequestPolicyConfig'
      required:
        - OriginRequestPolicyConfig
      x-stackql-resource-name: origin_request_policy
      x-stackql-primaryIdentifier:
        - Id
    PublicKeyConfig:
      additionalProperties: false
      properties:
        CallerReference:
          type: string
        Comment:
          type: string
        EncodedKey:
          type: string
        Name:
          type: string
      required:
        - CallerReference
        - Name
        - EncodedKey
      type: object
    PublicKey:
      type: object
      properties:
        CreatedTime:
          type: string
        Id:
          type: string
        PublicKeyConfig:
          $ref: '#/components/schemas/PublicKeyConfig'
      required:
        - PublicKeyConfig
      x-stackql-resource-name: public_key
      x-stackql-primaryIdentifier:
        - Id
    EndPoint:
      additionalProperties: false
      properties:
        KinesisStreamConfig:
          $ref: '#/components/schemas/KinesisStreamConfig'
        StreamType:
          type: string
      required:
        - KinesisStreamConfig
        - StreamType
      type: object
    KinesisStreamConfig:
      additionalProperties: false
      properties:
        RoleArn:
          type: string
        StreamArn:
          type: string
      required:
        - RoleArn
        - StreamArn
      type: object
    RealtimeLogConfig:
      type: object
      properties:
        Arn:
          type: string
        EndPoints:
          items:
            $ref: '#/components/schemas/EndPoint'
          minItems: 1
          type: array
          uniqueItems: false
        Fields:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: false
        Name:
          type: string
        SamplingRate:
          maximum: 100
          minimum: 1
          multipleOf: 1
          type: number
      required:
        - Name
        - EndPoints
        - Fields
        - SamplingRate
      x-stackql-resource-name: realtime_log_config
      x-stackql-primaryIdentifier:
        - Arn
    AccessControlAllowHeaders:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
      required:
        - Items
      type: object
    AccessControlAllowMethods:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
      required:
        - Items
      type: object
    AccessControlAllowOrigins:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
      required:
        - Items
      type: object
    AccessControlExposeHeaders:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            type: string
          type: array
      required:
        - Items
      type: object
    ContentSecurityPolicy:
      additionalProperties: false
      properties:
        ContentSecurityPolicy:
          type: string
        Override:
          type: boolean
      required:
        - Override
        - ContentSecurityPolicy
      type: object
    ContentTypeOptions:
      additionalProperties: false
      properties:
        Override:
          type: boolean
      required:
        - Override
      type: object
    CorsConfig:
      additionalProperties: false
      properties:
        AccessControlAllowCredentials:
          type: boolean
        AccessControlAllowHeaders:
          $ref: '#/components/schemas/AccessControlAllowHeaders'
        AccessControlAllowMethods:
          $ref: '#/components/schemas/AccessControlAllowMethods'
        AccessControlAllowOrigins:
          $ref: '#/components/schemas/AccessControlAllowOrigins'
        AccessControlExposeHeaders:
          $ref: '#/components/schemas/AccessControlExposeHeaders'
        AccessControlMaxAgeSec:
          type: integer
        OriginOverride:
          type: boolean
      required:
        - AccessControlAllowOrigins
        - AccessControlAllowHeaders
        - AccessControlAllowMethods
        - AccessControlAllowCredentials
        - OriginOverride
      type: object
    CustomHeader:
      additionalProperties: false
      properties:
        Header:
          type: string
        Override:
          type: boolean
        Value:
          type: string
      required:
        - Header
        - Value
        - Override
      type: object
    CustomHeadersConfig:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CustomHeader'
          type: array
          uniqueItems: false
      required:
        - Items
      type: object
    FrameOptions:
      additionalProperties: false
      properties:
        FrameOption:
          pattern: ^(DENY|SAMEORIGIN)$
          type: string
        Override:
          type: boolean
      required:
        - Override
        - FrameOption
      type: object
    ReferrerPolicy:
      additionalProperties: false
      properties:
        Override:
          type: boolean
        ReferrerPolicy:
          pattern: ^(no-referrer|no-referrer-when-downgrade|origin|origin-when-cross-origin|same-origin|strict-origin|strict-origin-when-cross-origin|unsafe-url)$
          type: string
      required:
        - Override
        - ReferrerPolicy
      type: object
    RemoveHeader:
      additionalProperties: false
      properties:
        Header:
          type: string
      required:
        - Header
      type: object
    RemoveHeadersConfig:
      additionalProperties: false
      properties:
        Items:
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/RemoveHeader'
          type: array
          uniqueItems: true
      required:
        - Items
      type: object
    ResponseHeadersPolicyConfig:
      additionalProperties: false
      properties:
        Comment:
          type: string
        CorsConfig:
          $ref: '#/components/schemas/CorsConfig'
        CustomHeadersConfig:
          $ref: '#/components/schemas/CustomHeadersConfig'
        Name:
          type: string
        RemoveHeadersConfig:
          $ref: '#/components/schemas/RemoveHeadersConfig'
        SecurityHeadersConfig:
          $ref: '#/components/schemas/SecurityHeadersConfig'
        ServerTimingHeadersConfig:
          $ref: '#/components/schemas/ServerTimingHeadersConfig'
      required:
        - Name
      type: object
    SecurityHeadersConfig:
      additionalProperties: false
      properties:
        ContentSecurityPolicy:
          $ref: '#/components/schemas/ContentSecurityPolicy'
        ContentTypeOptions:
          $ref: '#/components/schemas/ContentTypeOptions'
        FrameOptions:
          $ref: '#/components/schemas/FrameOptions'
        ReferrerPolicy:
          $ref: '#/components/schemas/ReferrerPolicy'
        StrictTransportSecurity:
          $ref: '#/components/schemas/StrictTransportSecurity'
        XSSProtection:
          $ref: '#/components/schemas/XSSProtection'
      required: []
      type: object
    ServerTimingHeadersConfig:
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        SamplingRate:
          maximum: 100
          minimum: 0
          multipleOf: 0.0001
          type: number
      required:
        - Enabled
      type: object
    StrictTransportSecurity:
      additionalProperties: false
      properties:
        AccessControlMaxAgeSec:
          type: integer
        IncludeSubdomains:
          type: boolean
        Override:
          type: boolean
        Preload:
          type: boolean
      required:
        - Override
        - AccessControlMaxAgeSec
      type: object
    XSSProtection:
      additionalProperties: false
      properties:
        ModeBlock:
          type: boolean
        Override:
          type: boolean
        Protection:
          type: boolean
        ReportUri:
          type: string
      required:
        - Override
        - Protection
      type: object
    ResponseHeadersPolicy:
      type: object
      properties:
        Id:
          type: string
        LastModifiedTime:
          type: string
        ResponseHeadersPolicyConfig:
          $ref: '#/components/schemas/ResponseHeadersPolicyConfig'
      required:
        - ResponseHeadersPolicyConfig
      x-stackql-resource-name: response_headers_policy
      x-stackql-primaryIdentifier:
        - Id
    StreamingDistributionConfig:
      type: object
      additionalProperties: false
      properties:
        Logging:
          $ref: '#/components/schemas/Logging'
        Comment:
          type: string
        PriceClass:
          type: string
        S3Origin:
          $ref: '#/components/schemas/S3Origin'
        Enabled:
          type: boolean
        Aliases:
          type: array
          uniqueItems: false
          items:
            type: string
        TrustedSigners:
          $ref: '#/components/schemas/TrustedSigners'
      required:
        - Comment
        - Enabled
        - S3Origin
        - TrustedSigners
    TrustedSigners:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        AwsAccountNumbers:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - Enabled
    S3Origin:
      type: object
      additionalProperties: false
      properties:
        DomainName:
          type: string
        OriginAccessIdentity:
          type: string
      required:
        - DomainName
        - OriginAccessIdentity
    StreamingDistribution:
      type: object
      properties:
        Id:
          type: string
        DomainName:
          type: string
        StreamingDistributionConfig:
          $ref: '#/components/schemas/StreamingDistributionConfig'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - StreamingDistributionConfig
        - Tags
      x-stackql-resource-name: streaming_distribution
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    cache_policies:
      name: cache_policies
      id: aws.cloudfront.cache_policies
      x-cfn-schema-name: CachePolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::CachePolicy'
    cache_policy:
      name: cache_policy
      id: aws.cloudfront.cache_policy
      x-cfn-schema-name: CachePolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig.Comment') as cache_policy_config_comment,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig.DefaultTTL') as cache_policy_config_default_tt_l,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig.MaxTTL') as cache_policy_config_max_tt_l,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig.MinTTL') as cache_policy_config_min_tt_l,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig.Name') as cache_policy_config_name,
              JSON_EXTRACT(Properties, '$.CachePolicyConfig.ParametersInCacheKeyAndForwardedToOrigin') as cache_policy_config_parameters_in_cache_key_and_forwarded_to_origin,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::CachePolicy'
    cloud_front_origin_access_identities:
      name: cloud_front_origin_access_identities
      id: aws.cloudfront.cloud_front_origin_access_identities
      x-cfn-schema-name: CloudFrontOriginAccessIdentity
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    cloud_front_origin_access_identity:
      name: cloud_front_origin_access_identity
      id: aws.cloudfront.cloud_front_origin_access_identity
      x-cfn-schema-name: CloudFrontOriginAccessIdentity
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CloudFrontOriginAccessIdentityConfig.Comment') as cloud_front_origin_access_identity_config_comment,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.S3CanonicalUserId') as s3_canonical_user_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    continuous_deployment_policies:
      name: continuous_deployment_policies
      id: aws.cloudfront.continuous_deployment_policies
      x-cfn-schema-name: ContinuousDeploymentPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
    continuous_deployment_policy:
      name: continuous_deployment_policy
      id: aws.cloudfront.continuous_deployment_policy
      x-cfn-schema-name: ContinuousDeploymentPolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ContinuousDeploymentPolicyConfig.Enabled') as continuous_deployment_policy_config_enabled,
              JSON_EXTRACT(Properties, '$.ContinuousDeploymentPolicyConfig.StagingDistributionDnsNames') as continuous_deployment_policy_config_staging_distribution_dns_names,
              JSON_EXTRACT(Properties, '$.ContinuousDeploymentPolicyConfig.TrafficConfig') as continuous_deployment_policy_config_traffic_config,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::ContinuousDeploymentPolicy'
    distributions:
      name: distributions
      id: aws.cloudfront.distributions
      x-cfn-schema-name: Distribution
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::Distribution'
    distribution:
      name: distribution
      id: aws.cloudfront.distribution
      x-cfn-schema-name: Distribution
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Aliases') as distribution_config_aliases,
              JSON_EXTRACT(Properties, '$.DistributionConfig.CNAMEs') as distribution_config_cn_am_es,
              JSON_EXTRACT(Properties, '$.DistributionConfig.CacheBehaviors') as distribution_config_cache_behaviors,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Comment') as distribution_config_comment,
              JSON_EXTRACT(Properties, '$.DistributionConfig.ContinuousDeploymentPolicyId') as distribution_config_continuous_deployment_policy_id,
              JSON_EXTRACT(Properties, '$.DistributionConfig.CustomErrorResponses') as distribution_config_custom_error_responses,
              JSON_EXTRACT(Properties, '$.DistributionConfig.CustomOrigin') as distribution_config_custom_origin,
              JSON_EXTRACT(Properties, '$.DistributionConfig.DefaultCacheBehavior') as distribution_config_default_cache_behavior,
              JSON_EXTRACT(Properties, '$.DistributionConfig.DefaultRootObject') as distribution_config_default_root_object,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Enabled') as distribution_config_enabled,
              JSON_EXTRACT(Properties, '$.DistributionConfig.HttpVersion') as distribution_config_http_version,
              JSON_EXTRACT(Properties, '$.DistributionConfig.IPV6Enabled') as distribution_config_ip_v6_enabled,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Logging') as distribution_config_logging,
              JSON_EXTRACT(Properties, '$.DistributionConfig.OriginGroups') as distribution_config_origin_groups,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Origins') as distribution_config_origins,
              JSON_EXTRACT(Properties, '$.DistributionConfig.PriceClass') as distribution_config_price_class,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Restrictions') as distribution_config_restrictions,
              JSON_EXTRACT(Properties, '$.DistributionConfig.S3Origin') as distribution_config_s3_origin,
              JSON_EXTRACT(Properties, '$.DistributionConfig.Staging') as distribution_config_staging,
              JSON_EXTRACT(Properties, '$.DistributionConfig.ViewerCertificate') as distribution_config_viewer_certificate,
              JSON_EXTRACT(Properties, '$.DistributionConfig.WebACLId') as distribution_config_web_ac_lid,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::Distribution'
    functions:
      name: functions
      id: aws.cloudfront.functions
      x-cfn-schema-name: Function
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FunctionARN') as function_ar_n
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::Function'
    function:
      name: function
      id: aws.cloudfront.function
      x-cfn-schema-name: Function
      x-type: get
      x-identifiers:
        - FunctionARN
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AutoPublish') as auto_publish,
              JSON_EXTRACT(Properties, '$.FunctionARN') as function_ar_n,
              JSON_EXTRACT(Properties, '$.FunctionCode') as function_code,
              JSON_EXTRACT(Properties, '$.FunctionConfig.Comment') as function_config_comment,
              JSON_EXTRACT(Properties, '$.FunctionConfig.Runtime') as function_config_runtime,
              JSON_EXTRACT(Properties, '$.FunctionMetadata.FunctionARN') as function_metadata_function_ar_n,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Stage') as stage
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::Function'
    key_groups:
      name: key_groups
      id: aws.cloudfront.key_groups
      x-cfn-schema-name: KeyGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::KeyGroup'
    key_group:
      name: key_group
      id: aws.cloudfront.key_group
      x-cfn-schema-name: KeyGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.KeyGroupConfig.Comment') as key_group_config_comment,
              JSON_EXTRACT(Properties, '$.KeyGroupConfig.Items') as key_group_config_items,
              JSON_EXTRACT(Properties, '$.KeyGroupConfig.Name') as key_group_config_name,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::KeyGroup'
    monitoring_subscriptions:
      name: monitoring_subscriptions
      id: aws.cloudfront.monitoring_subscriptions
      x-cfn-schema-name: MonitoringSubscription
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DistributionId') as distribution_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::MonitoringSubscription'
    monitoring_subscription:
      name: monitoring_subscription
      id: aws.cloudfront.monitoring_subscription
      x-cfn-schema-name: MonitoringSubscription
      x-type: get
      x-identifiers:
        - DistributionId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DistributionId') as distribution_id,
              JSON_EXTRACT(Properties, '$.MonitoringSubscription.DistributionId') as monitoring_subscription_distribution_id,
              JSON_EXTRACT(Properties, '$.MonitoringSubscription.MonitoringSubscription') as monitoring_subscription_monitoring_subscription
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::MonitoringSubscription'
    origin_access_controls:
      name: origin_access_controls
      id: aws.cloudfront.origin_access_controls
      x-cfn-schema-name: OriginAccessControl
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::OriginAccessControl'
    origin_access_control:
      name: origin_access_control
      id: aws.cloudfront.origin_access_control
      x-cfn-schema-name: OriginAccessControl
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.OriginAccessControlConfig.Name') as origin_access_control_config_name,
              JSON_EXTRACT(Properties, '$.OriginAccessControlConfig.Description') as origin_access_control_config_description,
              JSON_EXTRACT(Properties, '$.OriginAccessControlConfig.SigningProtocol') as origin_access_control_config_signing_protocol,
              JSON_EXTRACT(Properties, '$.OriginAccessControlConfig.SigningBehavior') as origin_access_control_config_signing_behavior,
              JSON_EXTRACT(Properties, '$.OriginAccessControlConfig.OriginAccessControlOriginType') as origin_access_control_config_origin_access_control_origin_type,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::OriginAccessControl'
    origin_request_policies:
      name: origin_request_policies
      id: aws.cloudfront.origin_request_policies
      x-cfn-schema-name: OriginRequestPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
    origin_request_policy:
      name: origin_request_policy
      id: aws.cloudfront.origin_request_policy
      x-cfn-schema-name: OriginRequestPolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.OriginRequestPolicyConfig.Comment') as origin_request_policy_config_comment,
              JSON_EXTRACT(Properties, '$.OriginRequestPolicyConfig.CookiesConfig') as origin_request_policy_config_cookies_config,
              JSON_EXTRACT(Properties, '$.OriginRequestPolicyConfig.HeadersConfig') as origin_request_policy_config_headers_config,
              JSON_EXTRACT(Properties, '$.OriginRequestPolicyConfig.Name') as origin_request_policy_config_name,
              JSON_EXTRACT(Properties, '$.OriginRequestPolicyConfig.QueryStringsConfig') as origin_request_policy_config_query_strings_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::OriginRequestPolicy'
    public_keys:
      name: public_keys
      id: aws.cloudfront.public_keys
      x-cfn-schema-name: PublicKey
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::PublicKey'
    public_key:
      name: public_key
      id: aws.cloudfront.public_key
      x-cfn-schema-name: PublicKey
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CreatedTime') as created_time,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PublicKeyConfig.CallerReference') as public_key_config_caller_reference,
              JSON_EXTRACT(Properties, '$.PublicKeyConfig.Comment') as public_key_config_comment,
              JSON_EXTRACT(Properties, '$.PublicKeyConfig.EncodedKey') as public_key_config_encoded_key,
              JSON_EXTRACT(Properties, '$.PublicKeyConfig.Name') as public_key_config_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::PublicKey'
    realtime_log_configs:
      name: realtime_log_configs
      id: aws.cloudfront.realtime_log_configs
      x-cfn-schema-name: RealtimeLogConfig
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
    realtime_log_config:
      name: realtime_log_config
      id: aws.cloudfront.realtime_log_config
      x-cfn-schema-name: RealtimeLogConfig
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.EndPoints') as end_points,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.SamplingRate') as sampling_rate
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::RealtimeLogConfig'
    response_headers_policies:
      name: response_headers_policies
      id: aws.cloudfront.response_headers_policies
      x-cfn-schema-name: ResponseHeadersPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
    response_headers_policy:
      name: response_headers_policy
      id: aws.cloudfront.response_headers_policy
      x-cfn-schema-name: ResponseHeadersPolicy
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LastModifiedTime') as last_modified_time,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.Comment') as response_headers_policy_config_comment,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.CorsConfig') as response_headers_policy_config_cors_config,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.CustomHeadersConfig') as response_headers_policy_config_custom_headers_config,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.Name') as response_headers_policy_config_name,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.RemoveHeadersConfig') as response_headers_policy_config_remove_headers_config,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.SecurityHeadersConfig') as response_headers_policy_config_security_headers_config,
              JSON_EXTRACT(Properties, '$.ResponseHeadersPolicyConfig.ServerTimingHeadersConfig') as response_headers_policy_config_server_timing_headers_config
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::ResponseHeadersPolicy'
    streaming_distributions:
      name: streaming_distributions
      id: aws.cloudfront.streaming_distributions
      x-cfn-schema-name: StreamingDistribution
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudFront::StreamingDistribution'
    streaming_distribution:
      name: streaming_distribution
      id: aws.cloudfront.streaming_distribution
      x-cfn-schema-name: StreamingDistribution
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.Logging') as streaming_distribution_config_logging,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.Comment') as streaming_distribution_config_comment,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.PriceClass') as streaming_distribution_config_price_class,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.S3Origin') as streaming_distribution_config_s3_origin,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.Enabled') as streaming_distribution_config_enabled,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.Aliases') as streaming_distribution_config_aliases,
              JSON_EXTRACT(Properties, '$.StreamingDistributionConfig.TrustedSigners') as streaming_distribution_config_trusted_signers,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudFront::StreamingDistribution'
