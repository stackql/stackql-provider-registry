openapi: 3.0.0
info:
  title: KinesisFirehose
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    DeliveryStreamEncryptionConfigurationInput:
      type: object
      additionalProperties: false
      properties:
        KeyARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::KMS::Key
            propertyPath: /properties/Arn
        KeyType:
          type: string
          enum:
            - AWS_OWNED_CMK
            - CUSTOMER_MANAGED_CMK
      required:
        - KeyType
    SplunkDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        HECAcknowledgmentTimeoutInSeconds:
          type: integer
          minimum: 180
          maximum: 600
        HECEndpoint:
          type: string
          minLength: 0
          maxLength: 2048
        HECEndpointType:
          type: string
          enum:
            - Raw
            - Event
        HECToken:
          type: string
          minLength: 0
          maxLength: 2048
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RetryOptions:
          $ref: '#/components/schemas/SplunkRetryOptions'
        S3BackupMode:
          type: string
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        SecretsManagerConfiguration:
          $ref: '#/components/schemas/SecretsManagerConfiguration'
        BufferingHints:
          $ref: '#/components/schemas/SplunkBufferingHints'
      required:
        - HECEndpoint
        - S3Configuration
        - HECEndpointType
    HttpEndpointDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        EndpointConfiguration:
          $ref: '#/components/schemas/HttpEndpointConfiguration'
        RequestConfiguration:
          $ref: '#/components/schemas/HttpEndpointRequestConfiguration'
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RetryOptions:
          $ref: '#/components/schemas/RetryOptions'
        S3BackupMode:
          type: string
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        SecretsManagerConfiguration:
          $ref: '#/components/schemas/SecretsManagerConfiguration'
      required:
        - EndpointConfiguration
        - S3Configuration
    KinesisStreamSourceConfiguration:
      type: object
      additionalProperties: false
      properties:
        KinesisStreamARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::Kinesis::Stream
            propertyPath: /properties/Arn
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
      required:
        - RoleARN
        - KinesisStreamARN
    DatabaseSourceConfiguration:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
          enum:
            - MySQL
            - PostgreSQL
        Endpoint:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^(?!\s*$).+
        Port:
          type: integer
          minimum: 0
          maximum: 65535
        SSLMode:
          type: string
          enum:
            - Disabled
            - Enabled
        Databases:
          $ref: '#/components/schemas/Databases'
        Tables:
          $ref: '#/components/schemas/DatabaseTables'
        Columns:
          $ref: '#/components/schemas/DatabaseColumns'
        SurrogateKeys:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 1024
            pattern: ^\S+$
        SnapshotWatermarkTable:
          $ref: '#/components/schemas/DatabaseTableName'
        DatabaseSourceAuthenticationConfiguration:
          $ref: '#/components/schemas/DatabaseSourceAuthenticationConfiguration'
        DatabaseSourceVPCConfiguration:
          $ref: '#/components/schemas/DatabaseSourceVPCConfiguration'
        Digest:
          type: string
          minLength: 1
          maxLength: 512
          pattern: .*
        PublicCertificate:
          type: string
          minLength: 1
          maxLength: 4096
          pattern: .*
      required:
        - Type
        - Endpoint
        - Port
        - Databases
        - Tables
        - SnapshotWatermarkTable
        - DatabaseSourceAuthenticationConfiguration
        - DatabaseSourceVPCConfiguration
    Databases:
      type: object
      additionalProperties: false
      properties:
        Include:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseName'
        Exclude:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseName'
    DatabaseName:
      type: string
      minLength: 1
      maxLength: 64
      pattern: '[\u0001-\uFFFF]*'
    DatabaseTables:
      type: object
      additionalProperties: false
      properties:
        Include:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseTableName'
        Exclude:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseTableName'
    DatabaseTableName:
      type: string
      minLength: 1
      maxLength: 129
      pattern: '[\u0001-\uFFFF]*'
    DatabaseColumns:
      type: object
      additionalProperties: false
      properties:
        Include:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseColumnName'
        Exclude:
          type: array
          items:
            $ref: '#/components/schemas/DatabaseColumnName'
    DatabaseColumnName:
      type: string
      minLength: 1
      maxLength: 194
      pattern: '[\u0001-\uFFFF]*'
    DatabaseSourceAuthenticationConfiguration:
      type: object
      additionalProperties: false
      properties:
        SecretsManagerConfiguration:
          $ref: '#/components/schemas/SecretsManagerConfiguration'
      required:
        - SecretsManagerConfiguration
    DatabaseSourceVPCConfiguration:
      type: object
      additionalProperties: false
      properties:
        VpcEndpointServiceName:
          $ref: '#/components/schemas/VpcEndpointServiceName'
      required:
        - VpcEndpointServiceName
    VpcEndpointServiceName:
      type: string
      minLength: 47
      maxLength: 255
      pattern: ([a-zA-Z0-9\-\_]+\.){2,3}vpce\.[a-zA-Z0-9\-]*\.vpce-svc\-[a-zA-Z0-9\-]{17}$
    MSKSourceConfiguration:
      type: object
      additionalProperties: false
      properties:
        MSKClusterARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::MSK::Cluster
            propertyPath: /properties/Arn
        TopicName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[a-zA-Z0-9\._\-]+'
        ReadFromTimestamp:
          type: string
        AuthenticationConfiguration:
          $ref: '#/components/schemas/AuthenticationConfiguration'
      required:
        - MSKClusterARN
        - TopicName
        - AuthenticationConfiguration
    AuthenticationConfiguration:
      type: object
      additionalProperties: false
      properties:
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        Connectivity:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
      required:
        - RoleARN
        - Connectivity
    VpcConfiguration:
      type: object
      additionalProperties: false
      properties:
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        SubnetIds:
          type: array
          uniqueItems: true
          items:
            type: string
            minLength: 1
            maxLength: 1024
            relationshipRef:
              typeName: AWS::EC2::Subnet
              propertyPath: /properties/SubnetId
          minItems: 1
          maxItems: 16
        SecurityGroupIds:
          type: array
          uniqueItems: true
          items:
            type: string
            minLength: 1
            maxLength: 1024
            relationshipRef:
              typeName: AWS::EC2::SecurityGroup
              propertyPath: /properties/GroupId
          minItems: 1
          maxItems: 5
      required:
        - RoleARN
        - SubnetIds
        - SecurityGroupIds
    DocumentIdOptions:
      type: object
      additionalProperties: false
      properties:
        DefaultDocumentIdFormat:
          type: string
          enum:
            - FIREHOSE_DEFAULT
            - NO_DOCUMENT_ID
      required:
        - DefaultDocumentIdFormat
    ExtendedS3DestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        BucketARN:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::S3::Bucket
            propertyPath: /properties/Arn
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        CompressionFormat:
          type: string
          enum:
            - UNCOMPRESSED
            - GZIP
            - ZIP
            - Snappy
            - HADOOP_SNAPPY
        CustomTimeZone:
          type: string
          minLength: 0
          maxLength: 50
        DataFormatConversionConfiguration:
          $ref: '#/components/schemas/DataFormatConversionConfiguration'
        DynamicPartitioningConfiguration:
          $ref: '#/components/schemas/DynamicPartitioningConfiguration'
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        ErrorOutputPrefix:
          type: string
          minLength: 0
          maxLength: 1024
        FileExtension:
          type: string
          minLength: 0
          maxLength: 128
          pattern: ^$|\.[0-9a-z!\-_.*'()]+
        Prefix:
          type: string
          minLength: 0
          maxLength: 1024
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        S3BackupConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        S3BackupMode:
          type: string
          enum:
            - Disabled
            - Enabled
      required:
        - BucketARN
        - RoleARN
    S3DestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        BucketARN:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::S3::Bucket
            propertyPath: /properties/Arn
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        CompressionFormat:
          type: string
          enum:
            - UNCOMPRESSED
            - GZIP
            - ZIP
            - Snappy
            - HADOOP_SNAPPY
        EncryptionConfiguration:
          $ref: '#/components/schemas/EncryptionConfiguration'
        ErrorOutputPrefix:
          type: string
          minLength: 0
          maxLength: 1024
        Prefix:
          type: string
          minLength: 0
          maxLength: 1024
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
      required:
        - BucketARN
        - RoleARN
    RedshiftDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        ClusterJDBCURL:
          type: string
          minLength: 1
          maxLength: 512
        CopyCommand:
          $ref: '#/components/schemas/CopyCommand'
        Password:
          type: string
          minLength: 6
          maxLength: 512
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RetryOptions:
          $ref: '#/components/schemas/RedshiftRetryOptions'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        S3BackupConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        S3BackupMode:
          type: string
          enum:
            - Disabled
            - Enabled
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        SecretsManagerConfiguration:
          $ref: '#/components/schemas/SecretsManagerConfiguration'
        Username:
          type: string
          minLength: 1
          maxLength: 512
      required:
        - S3Configuration
        - ClusterJDBCURL
        - CopyCommand
        - RoleARN
    ElasticsearchDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        BufferingHints:
          $ref: '#/components/schemas/ElasticsearchBufferingHints'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        DomainARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          anyOf:
            - relationshipRef:
                typeName: AWS::Elasticsearch::Domain
                propertyPath: /properties/Arn
            - relationshipRef:
                typeName: AWS::OpenSearchService::Domain
                propertyPath: /properties/Arn
        IndexName:
          type: string
          minLength: 1
          maxLength: 80
        IndexRotationPeriod:
          type: string
          enum:
            - NoRotation
            - OneHour
            - OneDay
            - OneWeek
            - OneMonth
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RetryOptions:
          $ref: '#/components/schemas/ElasticsearchRetryOptions'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        S3BackupMode:
          type: string
          enum:
            - FailedDocumentsOnly
            - AllDocuments
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        ClusterEndpoint:
          type: string
          minLength: 1
          maxLength: 512
          pattern: https:.*
        TypeName:
          type: string
          minLength: 0
          maxLength: 100
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
        DocumentIdOptions:
          $ref: '#/components/schemas/DocumentIdOptions'
      required:
        - IndexName
        - S3Configuration
        - RoleARN
    AmazonopensearchserviceDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        BufferingHints:
          $ref: '#/components/schemas/AmazonopensearchserviceBufferingHints'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        DomainARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
        IndexName:
          type: string
          minLength: 1
          maxLength: 80
        IndexRotationPeriod:
          type: string
          enum:
            - NoRotation
            - OneHour
            - OneDay
            - OneWeek
            - OneMonth
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RetryOptions:
          $ref: '#/components/schemas/AmazonopensearchserviceRetryOptions'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        S3BackupMode:
          type: string
          enum:
            - FailedDocumentsOnly
            - AllDocuments
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        ClusterEndpoint:
          type: string
          minLength: 1
          maxLength: 512
          pattern: https:.*
        TypeName:
          type: string
          minLength: 0
          maxLength: 100
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
        DocumentIdOptions:
          $ref: '#/components/schemas/DocumentIdOptions'
      required:
        - IndexName
        - S3Configuration
        - RoleARN
    AmazonOpenSearchServerlessDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        BufferingHints:
          $ref: '#/components/schemas/AmazonOpenSearchServerlessBufferingHints'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        IndexName:
          type: string
          minLength: 1
          maxLength: 80
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RetryOptions:
          $ref: '#/components/schemas/AmazonOpenSearchServerlessRetryOptions'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        S3BackupMode:
          type: string
          enum:
            - FailedDocumentsOnly
            - AllDocuments
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        CollectionEndpoint:
          type: string
          minLength: 1
          maxLength: 512
          pattern: https:.*
          x-relationshipRef:
            typeName: AWS::OpenSearchServerless::Collection
            propertyPath: /properties/CollectionEndpoint
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
      required:
        - IndexName
        - S3Configuration
        - RoleARN
    SnowflakeDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        AccountUrl:
          type: string
          minLength: 24
          maxLength: 2048
          pattern: .+?\.snowflakecomputing\.com
        PrivateKey:
          type: string
          minLength: 256
          maxLength: 4096
          pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
        KeyPassphrase:
          type: string
          minLength: 7
          maxLength: 255
        User:
          type: string
          minLength: 1
          maxLength: 255
        Database:
          type: string
          minLength: 1
          maxLength: 255
        Schema:
          type: string
          minLength: 1
          maxLength: 255
        Table:
          type: string
          minLength: 1
          maxLength: 255
        SnowflakeRoleConfiguration:
          $ref: '#/components/schemas/SnowflakeRoleConfiguration'
        DataLoadingOption:
          type: string
          enum:
            - JSON_MAPPING
            - VARIANT_CONTENT_MAPPING
            - VARIANT_CONTENT_AND_METADATA_MAPPING
        MetaDataColumnName:
          type: string
          minLength: 1
          maxLength: 255
        ContentColumnName:
          type: string
          minLength: 1
          maxLength: 255
        SnowflakeVpcConfiguration:
          $ref: '#/components/schemas/SnowflakeVpcConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        RetryOptions:
          $ref: '#/components/schemas/SnowflakeRetryOptions'
        S3BackupMode:
          type: string
          enum:
            - FailedDataOnly
            - AllData
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        SecretsManagerConfiguration:
          $ref: '#/components/schemas/SecretsManagerConfiguration'
        BufferingHints:
          $ref: '#/components/schemas/SnowflakeBufferingHints'
      required:
        - AccountUrl
        - Database
        - Schema
        - Table
        - RoleARN
        - S3Configuration
    IcebergDestinationConfiguration:
      type: object
      additionalProperties: false
      properties:
        DestinationTableConfigurationList:
          $ref: '#/components/schemas/DestinationTableConfigurationList'
        ProcessingConfiguration:
          $ref: '#/components/schemas/ProcessingConfiguration'
        CloudWatchLoggingOptions:
          $ref: '#/components/schemas/CloudWatchLoggingOptions'
        CatalogConfiguration:
          $ref: '#/components/schemas/CatalogConfiguration'
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        RetryOptions:
          $ref: '#/components/schemas/RetryOptions'
        s3BackupMode:
          type: string
          enum:
            - AllData
            - FailedDataOnly
        BufferingHints:
          $ref: '#/components/schemas/BufferingHints'
        S3Configuration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
      required:
        - RoleARN
        - CatalogConfiguration
        - S3Configuration
    CatalogConfiguration:
      type: object
      additionalProperties: false
      properties:
        CatalogArn:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
    DestinationTableConfiguration:
      type: object
      additionalProperties: false
      properties:
        DestinationTableName:
          type: string
          minLength: 1
          maxLength: 512
        DestinationDatabaseName:
          type: string
          minLength: 1
          maxLength: 512
        S3ErrorOutputPrefix:
          type: string
          minLength: 1
          maxLength: 1024
        UniqueKeys:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/UniqueKey'
      required:
        - DestinationDatabaseName
        - DestinationTableName
    UniqueKey:
      type: string
      minLength: 1
      maxLength: 512
    BufferingHints:
      type: object
      additionalProperties: false
      properties:
        IntervalInSeconds:
          type: integer
        SizeInMBs:
          type: integer
    ProcessingConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        Processors:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Processor'
    DestinationTableConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/DestinationTableConfiguration'
    SplunkRetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    ElasticsearchRetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    AmazonopensearchserviceRetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    AmazonOpenSearchServerlessRetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    SnowflakeRetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    RedshiftRetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    RetryOptions:
      type: object
      additionalProperties: false
      properties:
        DurationInSeconds:
          type: integer
    DataFormatConversionConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        InputFormatConfiguration:
          $ref: '#/components/schemas/InputFormatConfiguration'
        OutputFormatConfiguration:
          $ref: '#/components/schemas/OutputFormatConfiguration'
        SchemaConfiguration:
          $ref: '#/components/schemas/SchemaConfiguration'
    DynamicPartitioningConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        RetryOptions:
          $ref: '#/components/schemas/RetryOptions'
    CopyCommand:
      type: object
      additionalProperties: false
      properties:
        CopyOptions:
          type: string
          minLength: 0
          maxLength: 204800
        DataTableColumns:
          type: string
          minLength: 0
          maxLength: 204800
        DataTableName:
          type: string
          minLength: 1
          maxLength: 512
      required:
        - DataTableName
    EncryptionConfiguration:
      type: object
      additionalProperties: false
      properties:
        KMSEncryptionConfig:
          $ref: '#/components/schemas/KMSEncryptionConfig'
        NoEncryptionConfig:
          type: string
          enum:
            - NoEncryption
    ElasticsearchBufferingHints:
      type: object
      additionalProperties: false
      properties:
        IntervalInSeconds:
          type: integer
        SizeInMBs:
          type: integer
    AmazonopensearchserviceBufferingHints:
      type: object
      additionalProperties: false
      properties:
        IntervalInSeconds:
          type: integer
        SizeInMBs:
          type: integer
    AmazonOpenSearchServerlessBufferingHints:
      type: object
      additionalProperties: false
      properties:
        IntervalInSeconds:
          type: integer
        SizeInMBs:
          type: integer
    SplunkBufferingHints:
      type: object
      additionalProperties: false
      properties:
        IntervalInSeconds:
          type: integer
        SizeInMBs:
          type: integer
    SnowflakeBufferingHints:
      type: object
      additionalProperties: false
      properties:
        IntervalInSeconds:
          type: integer
        SizeInMBs:
          type: integer
    CloudWatchLoggingOptions:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        LogGroupName:
          type: string
          x-relationshipRef:
            typeName: AWS::Logs::LogGroup
            propertyPath: /properties/LogGroupName
        LogStreamName:
          type: string
          x-relationshipRef:
            typeName: AWS::Logs::LogStream
            propertyPath: /properties/LogStreamName
    OutputFormatConfiguration:
      type: object
      additionalProperties: false
      properties:
        Serializer:
          $ref: '#/components/schemas/Serializer'
    Processor:
      type: object
      additionalProperties: false
      properties:
        Parameters:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ProcessorParameter'
        Type:
          type: string
          enum:
            - RecordDeAggregation
            - Decompression
            - CloudWatchLogProcessing
            - Lambda
            - MetadataExtraction
            - AppendDelimiterToRecord
      required:
        - Type
    KMSEncryptionConfig:
      type: object
      additionalProperties: false
      properties:
        AWSKMSKeyARN:
          type: string
          x-relationshipRef:
            typeName: AWS::KMS::Key
            propertyPath: /properties/Arn
      required:
        - AWSKMSKeyARN
    InputFormatConfiguration:
      type: object
      additionalProperties: false
      properties:
        Deserializer:
          $ref: '#/components/schemas/Deserializer'
    SchemaConfiguration:
      type: object
      additionalProperties: false
      properties:
        CatalogId:
          type: string
        DatabaseName:
          type: string
          x-relationshipRef:
            typeName: AWS::Glue::Database
            propertyPath: /properties/Id
        Region:
          type: string
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        TableName:
          type: string
          x-relationshipRef:
            typeName: AWS::Glue::Table
            propertyPath: /properties/Id
        VersionId:
          type: string
    Serializer:
      type: object
      additionalProperties: false
      properties:
        OrcSerDe:
          $ref: '#/components/schemas/OrcSerDe'
        ParquetSerDe:
          $ref: '#/components/schemas/ParquetSerDe'
    ProcessorParameter:
      type: object
      additionalProperties: false
      properties:
        ParameterName:
          type: string
        ParameterValue:
          type: string
          anyOf:
            - relationshipRef:
                typeName: AWS::Lambda::Function
                propertyPath: /properties/Arn
            - relationshipRef:
                typeName: AWS::IAM::Role
                propertyPath: /properties/Arn
            - relationshipRef:
                typeName: AWS::Lambda::Alias
                propertyPath: /properties/Id
      required:
        - ParameterValue
        - ParameterName
    Deserializer:
      type: object
      additionalProperties: false
      properties:
        HiveJsonSerDe:
          $ref: '#/components/schemas/HiveJsonSerDe'
        OpenXJsonSerDe:
          $ref: '#/components/schemas/OpenXJsonSerDe'
    HiveJsonSerDe:
      type: object
      additionalProperties: false
      properties:
        TimestampFormats:
          type: array
          uniqueItems: true
          items:
            type: string
    OrcSerDe:
      type: object
      additionalProperties: false
      properties:
        BlockSizeBytes:
          type: integer
        BloomFilterColumns:
          type: array
          uniqueItems: true
          items:
            type: string
        BloomFilterFalsePositiveProbability:
          type: number
        Compression:
          type: string
        DictionaryKeyThreshold:
          type: number
        EnablePadding:
          type: boolean
        FormatVersion:
          type: string
        PaddingTolerance:
          type: number
        RowIndexStride:
          type: integer
        StripeSizeBytes:
          type: integer
    ParquetSerDe:
      type: object
      additionalProperties: false
      properties:
        BlockSizeBytes:
          type: integer
        Compression:
          type: string
        EnableDictionaryCompression:
          type: boolean
        MaxPaddingBytes:
          type: integer
        PageSizeBytes:
          type: integer
        WriterVersion:
          type: string
    OpenXJsonSerDe:
      type: object
      additionalProperties: false
      properties:
        CaseInsensitive:
          type: boolean
        ColumnToJsonKeyMappings:
          type: object
          additionalProperties: false
          x-patternProperties:
            '[a-zA-Z0-9]+':
              type: string
        ConvertDotsInJsonKeysToUnderscores:
          type: boolean
    HttpEndpointRequestConfiguration:
      type: object
      additionalProperties: false
      properties:
        ContentEncoding:
          type: string
          enum:
            - NONE
            - GZIP
        CommonAttributes:
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/HttpEndpointCommonAttribute'
          minItems: 0
          maxItems: 50
    HttpEndpointCommonAttribute:
      type: object
      additionalProperties: false
      properties:
        AttributeName:
          type: string
          minLength: 1
          maxLength: 256
        AttributeValue:
          type: string
          minLength: 0
          maxLength: 1024
      required:
        - AttributeName
        - AttributeValue
    HttpEndpointConfiguration:
      type: object
      additionalProperties: false
      properties:
        Url:
          type: string
          minLength: 1
          maxLength: 1000
        AccessKey:
          type: string
          minLength: 0
          maxLength: 4096
        Name:
          type: string
          minLength: 1
          maxLength: 256
      required:
        - Url
    SnowflakeRoleConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        SnowflakeRole:
          type: string
          minLength: 1
          maxLength: 255
    SnowflakeVpcConfiguration:
      type: object
      additionalProperties: false
      properties:
        PrivateLinkVpceId:
          type: string
          minLength: 47
          maxLength: 255
          pattern: ([a-zA-Z0-9\-\_]+\.){2,3}vpce\.[a-zA-Z0-9\-]*\.vpce-svc\-[a-zA-Z0-9\-]{17}$
      required:
        - PrivateLinkVpceId
    SecretsManagerConfiguration:
      type: object
      additionalProperties: false
      properties:
        Enabled:
          type: boolean
        RoleARN:
          type: string
          minLength: 1
          maxLength: 512
          pattern: arn:.*:iam::\d{12}:role/[a-zA-Z_0-9+=,.@\-_/]+
          x-relationshipRef:
            typeName: AWS::IAM::Role
            propertyPath: /properties/Arn
        SecretARN:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: arn:.*:secretsmanager:[a-zA-Z0-9\-]+:\d{12}:secret:[a-zA-Z0-9\-/_+=.@]+
          x-relationshipRef:
            typeName: AWS::SecretsManager::Secret
            propertyPath: /properties/Arn
      required:
        - Enabled
    Tag:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[\p{L}\p{Z}\p{N}_.:\/=+\-@%]*$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: ^[\p{L}\p{Z}\p{N}_.:\/=+\-@%]*$
          minLength: 0
          maxLength: 256
      required:
        - Key
    DeliveryStream:
      type: object
      properties:
        Arn:
          type: string
        DeliveryStreamEncryptionConfigurationInput:
          $ref: '#/components/schemas/DeliveryStreamEncryptionConfigurationInput'
        DeliveryStreamName:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[a-zA-Z0-9._-]+'
        DeliveryStreamType:
          type: string
          enum:
            - DatabaseAsSource
            - DirectPut
            - KinesisStreamAsSource
            - MSKAsSource
        ElasticsearchDestinationConfiguration:
          $ref: '#/components/schemas/ElasticsearchDestinationConfiguration'
        AmazonopensearchserviceDestinationConfiguration:
          $ref: '#/components/schemas/AmazonopensearchserviceDestinationConfiguration'
        AmazonOpenSearchServerlessDestinationConfiguration:
          $ref: '#/components/schemas/AmazonOpenSearchServerlessDestinationConfiguration'
        ExtendedS3DestinationConfiguration:
          $ref: '#/components/schemas/ExtendedS3DestinationConfiguration'
        DatabaseSourceConfiguration:
          $ref: '#/components/schemas/DatabaseSourceConfiguration'
        KinesisStreamSourceConfiguration:
          $ref: '#/components/schemas/KinesisStreamSourceConfiguration'
        MSKSourceConfiguration:
          $ref: '#/components/schemas/MSKSourceConfiguration'
        RedshiftDestinationConfiguration:
          $ref: '#/components/schemas/RedshiftDestinationConfiguration'
        S3DestinationConfiguration:
          $ref: '#/components/schemas/S3DestinationConfiguration'
        SplunkDestinationConfiguration:
          $ref: '#/components/schemas/SplunkDestinationConfiguration'
        HttpEndpointDestinationConfiguration:
          $ref: '#/components/schemas/HttpEndpointDestinationConfiguration'
        SnowflakeDestinationConfiguration:
          $ref: '#/components/schemas/SnowflakeDestinationConfiguration'
        IcebergDestinationConfiguration:
          $ref: '#/components/schemas/IcebergDestinationConfiguration'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          maxItems: 50
      x-stackql-resource-name: delivery_stream
      description: Resource Type definition for AWS::KinesisFirehose::DeliveryStream
      x-type-name: AWS::KinesisFirehose::DeliveryStream
      x-stackql-primary-identifier:
        - DeliveryStreamName
      x-create-only-properties:
        - DeliveryStreamName
        - DeliveryStreamType
        - ElasticsearchDestinationConfiguration/VpcConfiguration
        - AmazonopensearchserviceDestinationConfiguration/VpcConfiguration
        - AmazonOpenSearchServerlessDestinationConfiguration/VpcConfiguration
        - DatabaseSourceConfiguration
        - KinesisStreamSourceConfiguration
        - MSKSourceConfiguration
        - IcebergDestinationConfiguration
        - SnowflakeDestinationConfiguration/SnowflakeVpcConfiguration
      x-read-only-properties:
        - Arn
      x-required-permissions:
        create:
          - firehose:CreateDeliveryStream
          - firehose:DescribeDeliveryStream
          - iam:GetRole
          - iam:PassRole
          - kms:CreateGrant
          - kms:DescribeKey
        read:
          - firehose:DescribeDeliveryStream
          - firehose:ListTagsForDeliveryStream
        update:
          - firehose:UpdateDestination
          - firehose:DescribeDeliveryStream
          - firehose:StartDeliveryStreamEncryption
          - firehose:StopDeliveryStreamEncryption
          - firehose:ListTagsForDeliveryStream
          - firehose:TagDeliveryStream
          - firehose:UntagDeliveryStream
          - kms:CreateGrant
          - kms:RevokeGrant
          - kms:DescribeKey
        delete:
          - firehose:DeleteDeliveryStream
          - firehose:DescribeDeliveryStream
          - kms:RevokeGrant
          - kms:DescribeKey
        list:
          - firehose:ListDeliveryStreams
    CreateDeliveryStreamRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
            DeliveryStreamEncryptionConfigurationInput:
              $ref: '#/components/schemas/DeliveryStreamEncryptionConfigurationInput'
            DeliveryStreamName:
              type: string
              minLength: 1
              maxLength: 64
              pattern: '[a-zA-Z0-9._-]+'
            DeliveryStreamType:
              type: string
              enum:
                - DatabaseAsSource
                - DirectPut
                - KinesisStreamAsSource
                - MSKAsSource
            ElasticsearchDestinationConfiguration:
              $ref: '#/components/schemas/ElasticsearchDestinationConfiguration'
            AmazonopensearchserviceDestinationConfiguration:
              $ref: '#/components/schemas/AmazonopensearchserviceDestinationConfiguration'
            AmazonOpenSearchServerlessDestinationConfiguration:
              $ref: '#/components/schemas/AmazonOpenSearchServerlessDestinationConfiguration'
            ExtendedS3DestinationConfiguration:
              $ref: '#/components/schemas/ExtendedS3DestinationConfiguration'
            DatabaseSourceConfiguration:
              $ref: '#/components/schemas/DatabaseSourceConfiguration'
            KinesisStreamSourceConfiguration:
              $ref: '#/components/schemas/KinesisStreamSourceConfiguration'
            MSKSourceConfiguration:
              $ref: '#/components/schemas/MSKSourceConfiguration'
            RedshiftDestinationConfiguration:
              $ref: '#/components/schemas/RedshiftDestinationConfiguration'
            S3DestinationConfiguration:
              $ref: '#/components/schemas/S3DestinationConfiguration'
            SplunkDestinationConfiguration:
              $ref: '#/components/schemas/SplunkDestinationConfiguration'
            HttpEndpointDestinationConfiguration:
              $ref: '#/components/schemas/HttpEndpointDestinationConfiguration'
            SnowflakeDestinationConfiguration:
              $ref: '#/components/schemas/SnowflakeDestinationConfiguration'
            IcebergDestinationConfiguration:
              $ref: '#/components/schemas/IcebergDestinationConfiguration'
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
              maxItems: 50
          x-stackQL-stringOnly: true
      x-title: CreateDeliveryStreamRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    delivery_streams:
      name: delivery_streams
      id: aws.kinesisfirehose.delivery_streams
      x-cfn-schema-name: DeliveryStream
      x-cfn-type-name: AWS::KinesisFirehose::DeliveryStream
      x-identifiers:
        - DeliveryStreamName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DeliveryStream&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KinesisFirehose::DeliveryStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KinesisFirehose::DeliveryStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::KinesisFirehose::DeliveryStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/delivery_streams/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/delivery_streams/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/delivery_streams/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.DeliveryStreamEncryptionConfigurationInput') as delivery_stream_encryption_configuration_input,
              JSON_EXTRACT(Properties, '$.DeliveryStreamName') as delivery_stream_name,
              JSON_EXTRACT(Properties, '$.DeliveryStreamType') as delivery_stream_type,
              JSON_EXTRACT(Properties, '$.ElasticsearchDestinationConfiguration') as elasticsearch_destination_configuration,
              JSON_EXTRACT(Properties, '$.AmazonopensearchserviceDestinationConfiguration') as amazonopensearchservice_destination_configuration,
              JSON_EXTRACT(Properties, '$.AmazonOpenSearchServerlessDestinationConfiguration') as amazon_open_search_serverless_destination_configuration,
              JSON_EXTRACT(Properties, '$.ExtendedS3DestinationConfiguration') as extended_s3_destination_configuration,
              JSON_EXTRACT(Properties, '$.DatabaseSourceConfiguration') as database_source_configuration,
              JSON_EXTRACT(Properties, '$.KinesisStreamSourceConfiguration') as kinesis_stream_source_configuration,
              JSON_EXTRACT(Properties, '$.MSKSourceConfiguration') as msk_source_configuration,
              JSON_EXTRACT(Properties, '$.RedshiftDestinationConfiguration') as redshift_destination_configuration,
              JSON_EXTRACT(Properties, '$.S3DestinationConfiguration') as s3_destination_configuration,
              JSON_EXTRACT(Properties, '$.SplunkDestinationConfiguration') as splunk_destination_configuration,
              JSON_EXTRACT(Properties, '$.HttpEndpointDestinationConfiguration') as http_endpoint_destination_configuration,
              JSON_EXTRACT(Properties, '$.SnowflakeDestinationConfiguration') as snowflake_destination_configuration,
              JSON_EXTRACT(Properties, '$.IcebergDestinationConfiguration') as iceberg_destination_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
              AND data__Identifier = '<DeliveryStreamName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.DeliveryStreamEncryptionConfigurationInput') as delivery_stream_encryption_configuration_input,
                JSON_EXTRACT(detail.Properties, '$.DeliveryStreamName') as delivery_stream_name,
                JSON_EXTRACT(detail.Properties, '$.DeliveryStreamType') as delivery_stream_type,
                JSON_EXTRACT(detail.Properties, '$.ElasticsearchDestinationConfiguration') as elasticsearch_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.AmazonopensearchserviceDestinationConfiguration') as amazonopensearchservice_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.AmazonOpenSearchServerlessDestinationConfiguration') as amazon_open_search_serverless_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.ExtendedS3DestinationConfiguration') as extended_s3_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.DatabaseSourceConfiguration') as database_source_configuration,
                JSON_EXTRACT(detail.Properties, '$.KinesisStreamSourceConfiguration') as kinesis_stream_source_configuration,
                JSON_EXTRACT(detail.Properties, '$.MSKSourceConfiguration') as msk_source_configuration,
                JSON_EXTRACT(detail.Properties, '$.RedshiftDestinationConfiguration') as redshift_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.S3DestinationConfiguration') as s3_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.SplunkDestinationConfiguration') as splunk_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.HttpEndpointDestinationConfiguration') as http_endpoint_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.SnowflakeDestinationConfiguration') as snowflake_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.IcebergDestinationConfiguration') as iceberg_destination_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                AND detail.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'DeliveryStreamEncryptionConfigurationInput') as delivery_stream_encryption_configuration_input,
                  json_extract_path_text(Properties, 'DeliveryStreamName') as delivery_stream_name,
                  json_extract_path_text(Properties, 'DeliveryStreamType') as delivery_stream_type,
                  json_extract_path_text(Properties, 'ElasticsearchDestinationConfiguration') as elasticsearch_destination_configuration,
                  json_extract_path_text(Properties, 'AmazonopensearchserviceDestinationConfiguration') as amazonopensearchservice_destination_configuration,
                  json_extract_path_text(Properties, 'AmazonOpenSearchServerlessDestinationConfiguration') as amazon_open_search_serverless_destination_configuration,
                  json_extract_path_text(Properties, 'ExtendedS3DestinationConfiguration') as extended_s3_destination_configuration,
                  json_extract_path_text(Properties, 'DatabaseSourceConfiguration') as database_source_configuration,
                  json_extract_path_text(Properties, 'KinesisStreamSourceConfiguration') as kinesis_stream_source_configuration,
                  json_extract_path_text(Properties, 'MSKSourceConfiguration') as msk_source_configuration,
                  json_extract_path_text(Properties, 'RedshiftDestinationConfiguration') as redshift_destination_configuration,
                  json_extract_path_text(Properties, 'S3DestinationConfiguration') as s3_destination_configuration,
                  json_extract_path_text(Properties, 'SplunkDestinationConfiguration') as splunk_destination_configuration,
                  json_extract_path_text(Properties, 'HttpEndpointDestinationConfiguration') as http_endpoint_destination_configuration,
                  json_extract_path_text(Properties, 'SnowflakeDestinationConfiguration') as snowflake_destination_configuration,
                  json_extract_path_text(Properties, 'IcebergDestinationConfiguration') as iceberg_destination_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                  AND data__Identifier = '<DeliveryStreamName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'DeliveryStreamEncryptionConfigurationInput') as delivery_stream_encryption_configuration_input,
                    json_extract_path_text(detail.Properties, 'DeliveryStreamName') as delivery_stream_name,
                    json_extract_path_text(detail.Properties, 'DeliveryStreamType') as delivery_stream_type,
                    json_extract_path_text(detail.Properties, 'ElasticsearchDestinationConfiguration') as elasticsearch_destination_configuration,
                    json_extract_path_text(detail.Properties, 'AmazonopensearchserviceDestinationConfiguration') as amazonopensearchservice_destination_configuration,
                    json_extract_path_text(detail.Properties, 'AmazonOpenSearchServerlessDestinationConfiguration') as amazon_open_search_serverless_destination_configuration,
                    json_extract_path_text(detail.Properties, 'ExtendedS3DestinationConfiguration') as extended_s3_destination_configuration,
                    json_extract_path_text(detail.Properties, 'DatabaseSourceConfiguration') as database_source_configuration,
                    json_extract_path_text(detail.Properties, 'KinesisStreamSourceConfiguration') as kinesis_stream_source_configuration,
                    json_extract_path_text(detail.Properties, 'MSKSourceConfiguration') as msk_source_configuration,
                    json_extract_path_text(detail.Properties, 'RedshiftDestinationConfiguration') as redshift_destination_configuration,
                    json_extract_path_text(detail.Properties, 'S3DestinationConfiguration') as s3_destination_configuration,
                    json_extract_path_text(detail.Properties, 'SplunkDestinationConfiguration') as splunk_destination_configuration,
                    json_extract_path_text(detail.Properties, 'HttpEndpointDestinationConfiguration') as http_endpoint_destination_configuration,
                    json_extract_path_text(detail.Properties, 'SnowflakeDestinationConfiguration') as snowflake_destination_configuration,
                    json_extract_path_text(detail.Properties, 'IcebergDestinationConfiguration') as iceberg_destination_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                    AND detail.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                    AND listing.region = 'us-east-1'
    delivery_streams_list_only:
      name: delivery_streams_list_only
      id: aws.kinesisfirehose.delivery_streams_list_only
      x-cfn-schema-name: DeliveryStream
      x-cfn-type-name: AWS::KinesisFirehose::DeliveryStream
      x-identifiers:
        - DeliveryStreamName
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DeliveryStreamName') as delivery_stream_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DeliveryStreamName') as delivery_stream_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                AND region = 'us-east-1'
    delivery_stream_tags:
      name: delivery_stream_tags
      id: aws.kinesisfirehose.delivery_stream_tags
      x-cfn-schema-name: DeliveryStream
      x-cfn-type-name: AWS::KinesisFirehose::DeliveryStream
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.DeliveryStreamEncryptionConfigurationInput') as delivery_stream_encryption_configuration_input,
              JSON_EXTRACT(detail.Properties, '$.DeliveryStreamName') as delivery_stream_name,
              JSON_EXTRACT(detail.Properties, '$.DeliveryStreamType') as delivery_stream_type,
              JSON_EXTRACT(detail.Properties, '$.ElasticsearchDestinationConfiguration') as elasticsearch_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.AmazonopensearchserviceDestinationConfiguration') as amazonopensearchservice_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.AmazonOpenSearchServerlessDestinationConfiguration') as amazon_open_search_serverless_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.ExtendedS3DestinationConfiguration') as extended_s3_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.DatabaseSourceConfiguration') as database_source_configuration,
              JSON_EXTRACT(detail.Properties, '$.KinesisStreamSourceConfiguration') as kinesis_stream_source_configuration,
              JSON_EXTRACT(detail.Properties, '$.MSKSourceConfiguration') as msk_source_configuration,
              JSON_EXTRACT(detail.Properties, '$.RedshiftDestinationConfiguration') as redshift_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.S3DestinationConfiguration') as s3_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.SplunkDestinationConfiguration') as splunk_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.HttpEndpointDestinationConfiguration') as http_endpoint_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.SnowflakeDestinationConfiguration') as snowflake_destination_configuration,
              JSON_EXTRACT(detail.Properties, '$.IcebergDestinationConfiguration') as iceberg_destination_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
              AND detail.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'DeliveryStreamEncryptionConfigurationInput') as delivery_stream_encryption_configuration_input,
                json_extract_path_text(detail.Properties, 'DeliveryStreamName') as delivery_stream_name,
                json_extract_path_text(detail.Properties, 'DeliveryStreamType') as delivery_stream_type,
                json_extract_path_text(detail.Properties, 'ElasticsearchDestinationConfiguration') as elasticsearch_destination_configuration,
                json_extract_path_text(detail.Properties, 'AmazonopensearchserviceDestinationConfiguration') as amazonopensearchservice_destination_configuration,
                json_extract_path_text(detail.Properties, 'AmazonOpenSearchServerlessDestinationConfiguration') as amazon_open_search_serverless_destination_configuration,
                json_extract_path_text(detail.Properties, 'ExtendedS3DestinationConfiguration') as extended_s3_destination_configuration,
                json_extract_path_text(detail.Properties, 'DatabaseSourceConfiguration') as database_source_configuration,
                json_extract_path_text(detail.Properties, 'KinesisStreamSourceConfiguration') as kinesis_stream_source_configuration,
                json_extract_path_text(detail.Properties, 'MSKSourceConfiguration') as msk_source_configuration,
                json_extract_path_text(detail.Properties, 'RedshiftDestinationConfiguration') as redshift_destination_configuration,
                json_extract_path_text(detail.Properties, 'S3DestinationConfiguration') as s3_destination_configuration,
                json_extract_path_text(detail.Properties, 'SplunkDestinationConfiguration') as splunk_destination_configuration,
                json_extract_path_text(detail.Properties, 'HttpEndpointDestinationConfiguration') as http_endpoint_destination_configuration,
                json_extract_path_text(detail.Properties, 'SnowflakeDestinationConfiguration') as snowflake_destination_configuration,
                json_extract_path_text(detail.Properties, 'IcebergDestinationConfiguration') as iceberg_destination_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                AND detail.data__TypeName = 'AWS::KinesisFirehose::DeliveryStream'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DeliveryStream&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDeliveryStream
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDeliveryStreamRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
