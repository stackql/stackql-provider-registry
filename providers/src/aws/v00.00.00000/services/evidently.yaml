openapi: 3.0.0
info:
  title: Evidently
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    RunningStatusObject:
      type: object
      additionalProperties: false
      properties:
        Status:
          description: Provide START or STOP action to apply on an experiment
          type: string
        AnalysisCompleteTime:
          description: Provide the analysis Completion time for an experiment
          type: string
        Reason:
          description: Reason is a required input for stopping the experiment
          type: string
        DesiredState:
          description: Provide CANCELLED or COMPLETED desired state when stopping an experiment
          type: string
          pattern: ^(CANCELLED|COMPLETED)
      oneOf:
        - required:
            - Status
            - AnalysisCompleteTime
        - required:
            - Status
            - Reason
            - DesiredState
    TreatmentObject:
      type: object
      properties:
        TreatmentName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
        Feature:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:.*)
        Variation:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 255
      required:
        - TreatmentName
        - Feature
        - Variation
      additionalProperties: false
    MetricGoalObject:
      type: object
      properties:
        MetricName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\S]+$
        EntityIdKey:
          description: The JSON path to reference the entity id in the event.
          type: string
        ValueKey:
          description: The JSON path to reference the numerical metric value in the event.
          type: string
        EventPattern:
          description: Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
          type: string
        UnitLabel:
          type: string
          minLength: 1
          maxLength: 256
          pattern: .*
        DesiredChange:
          type: string
          enum:
            - INCREASE
            - DECREASE
      required:
        - MetricName
        - EntityIdKey
        - ValueKey
        - DesiredChange
      additionalProperties: false
    OnlineAbConfigObject:
      type: object
      properties:
        ControlTreatmentName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        TreatmentWeights:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TreatmentToWeight'
      additionalProperties: false
    TreatmentToWeight:
      type: object
      properties:
        Treatment:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        SplitWeight:
          type: integer
          minimum: 0
          maximum: 100000
      required:
        - Treatment
        - SplitWeight
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Experiment:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/experiment/[-a-zA-Z0-9._]*
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Project:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
          minLength: 0
          maxLength: 2048
        Description:
          type: string
          minLength: 0
          maxLength: 160
        RunningStatus:
          description: Start Experiment. Default is False
          $ref: '#/components/schemas/RunningStatusObject'
        RandomizationSalt:
          type: string
          minLength: 0
          maxLength: 127
          pattern: .*
        Treatments:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TreatmentObject'
          minItems: 2
          maxItems: 5
        MetricGoals:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/MetricGoalObject'
          minItems: 1
          maxItems: 3
        SamplingRate:
          type: integer
          minimum: 0
          maximum: 100000
        OnlineAbConfig:
          $ref: '#/components/schemas/OnlineAbConfigObject'
        Segment:
          type: string
          minLength: 0
          maxLength: 2048
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)
        RemoveSegment:
          type: boolean
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Project
        - Treatments
        - MetricGoals
        - OnlineAbConfig
      x-stackql-resource-name: experiment
      description: Resource Type definition for AWS::Evidently::Experiment.
      x-type-name: AWS::Evidently::Experiment
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Project
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - Project
        - Treatments
        - MetricGoals
        - OnlineAbConfig
      x-taggable: true
      x-required-permissions:
        create:
          - evidently:CreateExperiment
          - evidently:TagResource
          - evidently:GetExperiment
          - evidently:StartExperiment
        read:
          - evidently:GetExperiment
          - evidently:ListTagsForResource
        update:
          - evidently:UpdateExperiment
          - evidently:TagResource
          - evidently:UntagResource
          - evidently:GetExperiment
          - evidently:StartExperiment
          - evidently:StopExperiment
        delete:
          - evidently:DeleteExperiment
          - evidently:UntagResource
          - evidently:GetExperiment
    VariationObject:
      type: object
      properties:
        VariationName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        BooleanValue:
          type: boolean
        StringValue:
          type: string
          minLength: 0
          maxLength: 512
        LongValue:
          type: number
        DoubleValue:
          type: number
      oneOf:
        - required:
            - VariationName
            - StringValue
        - required:
            - VariationName
            - BooleanValue
        - required:
            - VariationName
            - LongValue
        - required:
            - VariationName
            - DoubleValue
      additionalProperties: false
    EntityOverride:
      type: object
      properties:
        EntityId:
          type: string
        Variation:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
      additionalProperties: false
    Feature:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/feature/[-a-zA-Z0-9._]*
          minLength: 0
          maxLength: 2048
        Project:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
          minLength: 0
          maxLength: 2048
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        EvaluationStrategy:
          type: string
          enum:
            - ALL_RULES
            - DEFAULT_VARIATION
        Variations:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/VariationObject'
          minItems: 1
          maxItems: 5
        DefaultVariation:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        EntityOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EntityOverride'
          x-insertionOrder: false
          uniqueItems: true
          minItems: 0
          maxItems: 2500
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Project
        - Variations
      x-stackql-resource-name: feature
      description: Resource Type definition for AWS::Evidently::Feature.
      x-type-name: AWS::Evidently::Feature
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Project
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - Project
        - Variations
      x-taggable: true
      x-required-permissions:
        create:
          - evidently:CreateFeature
          - evidently:TagResource
          - evidently:GetFeature
        read:
          - evidently:GetFeature
          - evidently:ListTagsForResource
        update:
          - evidently:UpdateFeature
          - evidently:ListTagsForResource
          - evidently:TagResource
          - evidently:UntagResource
          - evidently:GetFeature
        delete:
          - evidently:DeleteFeature
          - evidently:UntagResource
          - evidently:GetFeature
    ExecutionStatusObject:
      type: object
      additionalProperties: false
      properties:
        Status:
          description: Provide START or STOP action to apply on a launch
          type: string
        DesiredState:
          description: Provide CANCELLED or COMPLETED as the launch desired state. Defaults to Completed if not provided.
          type: string
        Reason:
          description: Provide a reason for stopping the launch. Defaults to empty if not provided.
          type: string
      required:
        - Status
    LaunchGroupObject:
      type: object
      properties:
        GroupName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        Feature:
          type: string
        Variation:
          type: string
      required:
        - GroupName
        - Feature
        - Variation
      additionalProperties: false
    GroupToWeight:
      type: object
      properties:
        GroupName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        SplitWeight:
          type: integer
      additionalProperties: false
      required:
        - GroupName
        - SplitWeight
    SegmentOverride:
      type: object
      properties:
        Segment:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)
        EvaluationOrder:
          type: integer
        Weights:
          type: array
          items:
            $ref: '#/components/schemas/GroupToWeight'
          uniqueItems: true
          x-insertionOrder: false
      additionalProperties: false
      required:
        - Segment
        - EvaluationOrder
        - Weights
    StepConfig:
      type: object
      properties:
        StartTime:
          type: string
        GroupWeights:
          type: array
          items:
            $ref: '#/components/schemas/GroupToWeight'
          uniqueItems: true
          x-insertionOrder: false
        SegmentOverrides:
          type: array
          items:
            $ref: '#/components/schemas/SegmentOverride'
          uniqueItems: true
          x-insertionOrder: false
      required:
        - StartTime
        - GroupWeights
      additionalProperties: false
    MetricDefinitionObject:
      type: object
      properties:
        MetricName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\S]+$
        EntityIdKey:
          description: The JSON path to reference the entity id in the event.
          type: string
        ValueKey:
          description: The JSON path to reference the numerical metric value in the event.
          type: string
        EventPattern:
          description: Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
          type: string
        UnitLabel:
          type: string
          minLength: 1
          maxLength: 256
          pattern: .*
      required:
        - MetricName
        - EntityIdKey
        - ValueKey
      additionalProperties: false
    Launch:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/launch/[-a-zA-Z0-9._]*
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Project:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
          minLength: 0
          maxLength: 2048
        Description:
          type: string
          minLength: 0
          maxLength: 160
        RandomizationSalt:
          type: string
          minLength: 0
          maxLength: 127
          pattern: .*
        ScheduledSplitsConfig:
          type: array
          items:
            $ref: '#/components/schemas/StepConfig'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 1
          maxItems: 6
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/LaunchGroupObject'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 1
          maxItems: 5
        MetricMonitors:
          type: array
          items:
            $ref: '#/components/schemas/MetricDefinitionObject'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 0
          maxItems: 3
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        ExecutionStatus:
          description: Start or Stop Launch Launch. Default is not started.
          $ref: '#/components/schemas/ExecutionStatusObject'
      required:
        - Name
        - Project
        - Groups
        - ScheduledSplitsConfig
      x-stackql-resource-name: launch
      description: Resource Type definition for AWS::Evidently::Launch.
      x-type-name: AWS::Evidently::Launch
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
        - Project
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
        - Project
        - Groups
        - ScheduledSplitsConfig
      x-taggable: true
      x-required-permissions:
        create:
          - evidently:CreateLaunch
          - evidently:TagResource
          - evidently:GetLaunch
          - evidently:StartLaunch
        read:
          - evidently:GetLaunch
          - evidently:ListTagsForResource
        update:
          - evidently:UpdateLaunch
          - evidently:ListTagsForResource
          - evidently:TagResource
          - evidently:UntagResource
          - evidently:GetLaunch
          - evidently:StartLaunch
          - evidently:StopLaunch
        delete:
          - evidently:DeleteLaunch
          - evidently:UntagResource
          - evidently:GetLaunch
    DataDeliveryObject:
      type: object
      description: Destinations for data.
      properties:
        S3:
          $ref: '#/components/schemas/S3Destination'
        LogGroup:
          type: string
          pattern: ^[-a-zA-Z0-9._/]+$
          minLength: 1
          maxLength: 512
      oneOf:
        - required:
            - S3
        - required:
            - LogGroup
      additionalProperties: false
    S3Destination:
      type: object
      properties:
        BucketName:
          type: string
          pattern: ^[a-z0-9][-a-z0-9]*[a-z0-9]$
          minLength: 3
          maxLength: 63
        Prefix:
          type: string
          pattern: ^[-a-zA-Z0-9!_.*'()/]*$
          minLength: 1
          maxLength: 1024
      required:
        - BucketName
      additionalProperties: false
    AppConfigResourceObject:
      type: object
      properties:
        ApplicationId:
          type: string
          pattern: '[a-z0-9]{4,7}'
        EnvironmentId:
          type: string
          pattern: '[a-z0-9]{4,7}'
      required:
        - ApplicationId
        - EnvironmentId
      additionalProperties: false
    Project:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*
          minLength: 0
          maxLength: 2048
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        DataDelivery:
          $ref: '#/components/schemas/DataDeliveryObject'
        AppConfigResource:
          $ref: '#/components/schemas/AppConfigResourceObject'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: project
      description: Resource Type definition for AWS::Evidently::Project
      x-type-name: AWS::Evidently::Project
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - Name
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
      x-taggable: true
      x-required-permissions:
        create:
          - evidently:CreateProject
          - evidently:GetProject
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - evidently:TagResource
          - evidently:ExportProjectAsConfiguration
          - appconfig:GetEnvironment
          - appconfig:CreateConfigurationProfile
          - appconfig:CreateHostedConfigurationVersion
          - appconfig:CreateExtensionAssociation
          - appconfig:TagResource
          - iam:GetRole
          - iam:CreateServiceLinkedRole
        read:
          - evidently:GetProject
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - s3:GetBucketPolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - evidently:ListTagsForResource
        update:
          - evidently:UpdateProject
          - evidently:UpdateProjectDataDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:ListLogDeliveries
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - evidently:TagResource
          - evidently:UntagResource
          - evidently:ListTagsForResource
          - evidently:GetProject
          - evidently:ExportProjectAsConfiguration
          - appconfig:GetEnvironment
          - appconfig:CreateConfigurationProfile
          - appconfig:CreateHostedConfigurationVersion
          - appconfig:CreateExtensionAssociation
          - appconfig:TagResource
          - iam:GetRole
          - iam:CreateServiceLinkedRole
        delete:
          - evidently:DeleteProject
          - evidently:GetProject
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - s3:GetBucketPolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - evidently:UntagResource
          - appconfig:DeleteHostedConfigurationVersion
          - appconfig:DeleteExtensionAssociation
          - appconfig:DeleteConfigurationProfile
    Segment:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*
          minLength: 0
          maxLength: 2048
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        Pattern:
          type: string
          minLength: 1
          maxLength: 1024
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: segment
      description: Resource Type definition for AWS::Evidently::Segment
      x-type-name: AWS::Evidently::Segment
      x-stackql-primary-identifier:
        - Arn
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Name
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: false
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - evidently:CreateSegment
          - evidently:GetSegment
          - evidently:TagResource
        read:
          - evidently:GetSegment
          - evidently:ListTagsForResource
        delete:
          - evidently:DeleteSegment
          - evidently:GetSegment
          - evidently:UntagResource
        list:
          - evidently:ListSegment
          - evidently:ListTagsForResource
    CreateExperimentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/experiment/[-a-zA-Z0-9._]*
            Name:
              type: string
              pattern: '[-a-zA-Z0-9._]*'
              minLength: 1
              maxLength: 127
            Project:
              type: string
              pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
              minLength: 0
              maxLength: 2048
            Description:
              type: string
              minLength: 0
              maxLength: 160
            RunningStatus:
              description: Start Experiment. Default is False
              $ref: '#/components/schemas/RunningStatusObject'
            RandomizationSalt:
              type: string
              minLength: 0
              maxLength: 127
              pattern: .*
            Treatments:
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/TreatmentObject'
              minItems: 2
              maxItems: 5
            MetricGoals:
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/MetricGoalObject'
              minItems: 1
              maxItems: 3
            SamplingRate:
              type: integer
              minimum: 0
              maximum: 100000
            OnlineAbConfig:
              $ref: '#/components/schemas/OnlineAbConfigObject'
            Segment:
              type: string
              minLength: 0
              maxLength: 2048
              pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)
            RemoveSegment:
              type: boolean
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateExperimentRequest
      type: object
      required: []
    CreateFeatureRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/feature/[-a-zA-Z0-9._]*
              minLength: 0
              maxLength: 2048
            Project:
              type: string
              pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
              minLength: 0
              maxLength: 2048
            Name:
              type: string
              pattern: '[-a-zA-Z0-9._]*'
              minLength: 1
              maxLength: 127
            Description:
              type: string
              minLength: 0
              maxLength: 160
            EvaluationStrategy:
              type: string
              enum:
                - ALL_RULES
                - DEFAULT_VARIATION
            Variations:
              type: array
              uniqueItems: true
              x-insertionOrder: true
              items:
                $ref: '#/components/schemas/VariationObject'
              minItems: 1
              maxItems: 5
            DefaultVariation:
              type: string
              pattern: '[-a-zA-Z0-9._]*'
              minLength: 1
              maxLength: 127
            EntityOverrides:
              type: array
              items:
                $ref: '#/components/schemas/EntityOverride'
              x-insertionOrder: false
              uniqueItems: true
              minItems: 0
              maxItems: 2500
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateFeatureRequest
      type: object
      required: []
    CreateLaunchRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/launch/[-a-zA-Z0-9._]*
            Name:
              type: string
              pattern: '[-a-zA-Z0-9._]*'
              minLength: 1
              maxLength: 127
            Project:
              type: string
              pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
              minLength: 0
              maxLength: 2048
            Description:
              type: string
              minLength: 0
              maxLength: 160
            RandomizationSalt:
              type: string
              minLength: 0
              maxLength: 127
              pattern: .*
            ScheduledSplitsConfig:
              type: array
              items:
                $ref: '#/components/schemas/StepConfig'
              uniqueItems: true
              x-insertionOrder: true
              minItems: 1
              maxItems: 6
            Groups:
              type: array
              items:
                $ref: '#/components/schemas/LaunchGroupObject'
              uniqueItems: true
              x-insertionOrder: true
              minItems: 1
              maxItems: 5
            MetricMonitors:
              type: array
              items:
                $ref: '#/components/schemas/MetricDefinitionObject'
              uniqueItems: true
              x-insertionOrder: true
              minItems: 0
              maxItems: 3
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            ExecutionStatus:
              description: Start or Stop Launch Launch. Default is not started.
              $ref: '#/components/schemas/ExecutionStatusObject'
          x-stackQL-stringOnly: true
      x-title: CreateLaunchRequest
      type: object
      required: []
    CreateProjectRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*
              minLength: 0
              maxLength: 2048
            Name:
              type: string
              pattern: '[-a-zA-Z0-9._]*'
              minLength: 1
              maxLength: 127
            Description:
              type: string
              minLength: 0
              maxLength: 160
            DataDelivery:
              $ref: '#/components/schemas/DataDeliveryObject'
            AppConfigResource:
              $ref: '#/components/schemas/AppConfigResourceObject'
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateProjectRequest
      type: object
      required: []
    CreateSegmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Arn:
              type: string
              pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*
              minLength: 0
              maxLength: 2048
            Name:
              type: string
              pattern: '[-a-zA-Z0-9._]*'
              minLength: 1
              maxLength: 127
            Description:
              type: string
              minLength: 0
              maxLength: 160
            Pattern:
              type: string
              minLength: 1
              maxLength: 1024
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateSegmentRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    experiments:
      name: experiments
      id: aws.evidently.experiments
      x-cfn-schema-name: Experiment
      x-cfn-type-name: AWS::Evidently::Experiment
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Experiment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Experiment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Experiment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Experiment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/experiments/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Project') as project,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RunningStatus') as running_status,
              JSON_EXTRACT(Properties, '$.RandomizationSalt') as randomization_salt,
              JSON_EXTRACT(Properties, '$.Treatments') as treatments,
              JSON_EXTRACT(Properties, '$.MetricGoals') as metric_goals,
              JSON_EXTRACT(Properties, '$.SamplingRate') as sampling_rate,
              JSON_EXTRACT(Properties, '$.OnlineAbConfig') as online_ab_config,
              JSON_EXTRACT(Properties, '$.Segment') as segment,
              JSON_EXTRACT(Properties, '$.RemoveSegment') as remove_segment,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Experiment'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Project') as project,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'RunningStatus') as running_status,
                json_extract_path_text(Properties, 'RandomizationSalt') as randomization_salt,
                json_extract_path_text(Properties, 'Treatments') as treatments,
                json_extract_path_text(Properties, 'MetricGoals') as metric_goals,
                json_extract_path_text(Properties, 'SamplingRate') as sampling_rate,
                json_extract_path_text(Properties, 'OnlineAbConfig') as online_ab_config,
                json_extract_path_text(Properties, 'Segment') as segment,
                json_extract_path_text(Properties, 'RemoveSegment') as remove_segment,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Experiment'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    features:
      name: features
      id: aws.evidently.features
      x-cfn-schema-name: Feature
      x-cfn-type-name: AWS::Evidently::Feature
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Feature&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Feature"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Feature"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Feature"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/features/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/features/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/features/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Project') as project,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EvaluationStrategy') as evaluation_strategy,
              JSON_EXTRACT(Properties, '$.Variations') as variations,
              JSON_EXTRACT(Properties, '$.DefaultVariation') as default_variation,
              JSON_EXTRACT(Properties, '$.EntityOverrides') as entity_overrides,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Feature'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Project') as project,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'EvaluationStrategy') as evaluation_strategy,
                json_extract_path_text(Properties, 'Variations') as variations,
                json_extract_path_text(Properties, 'DefaultVariation') as default_variation,
                json_extract_path_text(Properties, 'EntityOverrides') as entity_overrides,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Feature'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    launches:
      name: launches
      id: aws.evidently.launches
      x-cfn-schema-name: Launch
      x-cfn-type-name: AWS::Evidently::Launch
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Launch&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Launch"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Launch"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Launch"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/launches/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/launches/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/launches/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Project') as project,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RandomizationSalt') as randomization_salt,
              JSON_EXTRACT(Properties, '$.ScheduledSplitsConfig') as scheduled_splits_config,
              JSON_EXTRACT(Properties, '$.Groups') as groups,
              JSON_EXTRACT(Properties, '$.MetricMonitors') as metric_monitors,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ExecutionStatus') as execution_status
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Launch'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Project') as project,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'RandomizationSalt') as randomization_salt,
                json_extract_path_text(Properties, 'ScheduledSplitsConfig') as scheduled_splits_config,
                json_extract_path_text(Properties, 'Groups') as groups,
                json_extract_path_text(Properties, 'MetricMonitors') as metric_monitors,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'ExecutionStatus') as execution_status
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Launch'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    projects:
      name: projects
      id: aws.evidently.projects
      x-cfn-schema-name: Project
      x-cfn-type-name: AWS::Evidently::Project
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Project&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Project"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/projects/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/projects/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/projects/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DataDelivery') as data_delivery,
              JSON_EXTRACT(Properties, '$.AppConfigResource') as app_config_resource,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Project'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'DataDelivery') as data_delivery,
                json_extract_path_text(Properties, 'AppConfigResource') as app_config_resource,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Project'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    segments:
      name: segments
      id: aws.evidently.segments
      x-cfn-schema-name: Segment
      x-cfn-type-name: AWS::Evidently::Segment
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Segment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Segment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Evidently::Segment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/segments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/segments/methods/delete_resource'
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Segment'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Pattern') as pattern,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Evidently::Segment'
                AND detail.data__TypeName = 'AWS::Evidently::Segment'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Pattern') as pattern,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Segment'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Pattern') as pattern,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Evidently::Segment'
                    AND detail.data__TypeName = 'AWS::Evidently::Segment'
                    AND listing.region = 'us-east-1'
    segments_list_only:
      name: segments_list_only
      id: aws.evidently.segments_list_only
      x-cfn-schema-name: Segment
      x-cfn-type-name: AWS::Evidently::Segment
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Segment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Segment'
                AND region = 'us-east-1'
    segment_tags:
      name: segment_tags
      id: aws.evidently.segment_tags
      x-cfn-schema-name: Segment
      x-cfn-type-name: AWS::Evidently::Segment
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Pattern') as pattern
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Evidently::Segment'
              AND detail.data__TypeName = 'AWS::Evidently::Segment'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Pattern') as pattern
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Evidently::Segment'
                AND detail.data__TypeName = 'AWS::Evidently::Segment'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Experiment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateExperiment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateExperimentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Feature&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFeature
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFeatureRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Launch&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLaunch
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLaunchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Project&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProject
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Segment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateSegment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateSegmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
