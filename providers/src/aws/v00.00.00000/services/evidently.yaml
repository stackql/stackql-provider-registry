openapi: 3.0.0
info:
  title: Evidently
  version: 1.0.0
paths: {}
components:
  schemas:
    RunningStatusObject:
      type: object
      additionalProperties: false
      properties:
        Status:
          description: Provide START or STOP action to apply on an experiment
          type: string
        AnalysisCompleteTime:
          description: Provide the analysis Completion time for an experiment
          type: string
        Reason:
          description: Reason is a required input for stopping the experiment
          type: string
        DesiredState:
          description: Provide CANCELLED or COMPLETED desired state when stopping an experiment
          type: string
          pattern: ^(CANCELLED|COMPLETED)
      oneOf:
        - required:
            - Status
            - AnalysisCompleteTime
        - required:
            - Status
            - Reason
            - DesiredState
    TreatmentObject:
      type: object
      properties:
        TreatmentName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
        Feature:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:.*)
        Variation:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 255
      required:
        - TreatmentName
        - Feature
        - Variation
      additionalProperties: false
    MetricGoalObject:
      type: object
      properties:
        MetricName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\S]+$
        EntityIdKey:
          description: The JSON path to reference the entity id in the event.
          type: string
        ValueKey:
          description: The JSON path to reference the numerical metric value in the event.
          type: string
        EventPattern:
          description: Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
          type: string
        UnitLabel:
          type: string
          minLength: 1
          maxLength: 256
          pattern: .*
        DesiredChange:
          type: string
          enum:
            - INCREASE
            - DECREASE
      required:
        - MetricName
        - EntityIdKey
        - ValueKey
        - DesiredChange
      additionalProperties: false
    OnlineAbConfigObject:
      type: object
      properties:
        ControlTreatmentName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        TreatmentWeights:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/TreatmentToWeight'
      additionalProperties: false
    TreatmentToWeight:
      type: object
      properties:
        Treatment:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        SplitWeight:
          type: integer
          minimum: 0
          maximum: 100000
      required:
        - Treatment
        - SplitWeight
      additionalProperties: false
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    Experiment:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/experiment/[-a-zA-Z0-9._]*
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Project:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
          minLength: 0
          maxLength: 2048
        Description:
          type: string
          minLength: 0
          maxLength: 160
        RunningStatus:
          description: Start Experiment. Default is False
          $ref: '#/components/schemas/RunningStatusObject'
        RandomizationSalt:
          type: string
          minLength: 0
          maxLength: 127
          pattern: .*
        Treatments:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/TreatmentObject'
          minItems: 2
          maxItems: 5
        MetricGoals:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/MetricGoalObject'
          minItems: 1
          maxItems: 3
        SamplingRate:
          type: integer
          minimum: 0
          maximum: 100000
        OnlineAbConfig:
          $ref: '#/components/schemas/OnlineAbConfigObject'
        Segment:
          type: string
          minLength: 0
          maxLength: 2048
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)
        RemoveSegment:
          type: boolean
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Project
        - Treatments
        - MetricGoals
        - OnlineAbConfig
      x-stackql-resource-name: experiment
      x-stackql-primaryIdentifier:
        - Arn
    VariationObject:
      type: object
      properties:
        VariationName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        BooleanValue:
          type: boolean
        StringValue:
          type: string
          minLength: 0
          maxLength: 512
        LongValue:
          type: number
        DoubleValue:
          type: number
      oneOf:
        - required:
            - VariationName
            - StringValue
        - required:
            - VariationName
            - BooleanValue
        - required:
            - VariationName
            - LongValue
        - required:
            - VariationName
            - DoubleValue
      additionalProperties: false
    EntityOverride:
      type: object
      properties:
        EntityId:
          type: string
        Variation:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
      additionalProperties: false
    Feature:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/feature/[-a-zA-Z0-9._]*
          minLength: 0
          maxLength: 2048
        Project:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
          minLength: 0
          maxLength: 2048
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        EvaluationStrategy:
          type: string
          enum:
            - ALL_RULES
            - DEFAULT_VARIATION
        Variations:
          type: array
          uniqueItems: true
          x-insertionOrder: true
          items:
            $ref: '#/components/schemas/VariationObject'
          minItems: 1
          maxItems: 5
        DefaultVariation:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        EntityOverrides:
          type: array
          items:
            $ref: '#/components/schemas/EntityOverride'
          x-insertionOrder: false
          uniqueItems: true
          minItems: 0
          maxItems: 20
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - Project
        - Variations
      x-stackql-resource-name: feature
      x-stackql-primaryIdentifier:
        - Arn
    ExecutionStatusObject:
      type: object
      additionalProperties: false
      properties:
        Status:
          description: Provide START or STOP action to apply on a launch
          type: string
        DesiredState:
          description: Provide CANCELLED or COMPLETED as the launch desired state. Defaults to Completed if not provided.
          type: string
        Reason:
          description: Provide a reason for stopping the launch. Defaults to empty if not provided.
          type: string
      required:
        - Status
    LaunchGroupObject:
      type: object
      properties:
        GroupName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        Feature:
          type: string
        Variation:
          type: string
      required:
        - GroupName
        - Feature
        - Variation
      additionalProperties: false
    GroupToWeight:
      type: object
      properties:
        GroupName:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        SplitWeight:
          type: integer
      additionalProperties: false
      required:
        - GroupName
        - SplitWeight
    SegmentOverride:
      type: object
      properties:
        Segment:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*)
        EvaluationOrder:
          type: integer
        Weights:
          type: array
          items:
            $ref: '#/components/schemas/GroupToWeight'
          uniqueItems: true
          x-insertionOrder: false
      additionalProperties: false
      required:
        - Segment
        - EvaluationOrder
        - Weights
    StepConfig:
      type: object
      properties:
        StartTime:
          type: string
        GroupWeights:
          type: array
          items:
            $ref: '#/components/schemas/GroupToWeight'
          uniqueItems: true
          x-insertionOrder: false
        SegmentOverrides:
          type: array
          items:
            $ref: '#/components/schemas/SegmentOverride'
          uniqueItems: true
          x-insertionOrder: false
      required:
        - StartTime
        - GroupWeights
      additionalProperties: false
    MetricDefinitionObject:
      type: object
      properties:
        MetricName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\S]+$
        EntityIdKey:
          description: The JSON path to reference the entity id in the event.
          type: string
        ValueKey:
          description: The JSON path to reference the numerical metric value in the event.
          type: string
        EventPattern:
          description: Event patterns have the same structure as the events they match. Rules use event patterns to select events. An event pattern either matches an event or it doesn't.
          type: string
        UnitLabel:
          type: string
          minLength: 1
          maxLength: 256
          pattern: .*
      required:
        - MetricName
        - EntityIdKey
        - ValueKey
      additionalProperties: false
    Launch:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*/launch/[-a-zA-Z0-9._]*
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Project:
          type: string
          pattern: ([-a-zA-Z0-9._]*)|(arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*)
          minLength: 0
          maxLength: 2048
        Description:
          type: string
          minLength: 0
          maxLength: 160
        RandomizationSalt:
          type: string
          minLength: 0
          maxLength: 127
          pattern: .*
        ScheduledSplitsConfig:
          type: array
          items:
            $ref: '#/components/schemas/StepConfig'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 1
          maxItems: 6
        Groups:
          type: array
          items:
            $ref: '#/components/schemas/LaunchGroupObject'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 1
          maxItems: 5
        MetricMonitors:
          type: array
          items:
            $ref: '#/components/schemas/MetricDefinitionObject'
          uniqueItems: true
          x-insertionOrder: true
          minItems: 0
          maxItems: 3
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        ExecutionStatus:
          description: Start or Stop Launch Launch. Default is not started.
          $ref: '#/components/schemas/ExecutionStatusObject'
      required:
        - Name
        - Project
        - Groups
        - ScheduledSplitsConfig
      x-stackql-resource-name: launch
      x-stackql-primaryIdentifier:
        - Arn
    DataDeliveryObject:
      type: object
      description: Destinations for data.
      properties:
        S3:
          $ref: '#/components/schemas/S3Destination'
        LogGroup:
          type: string
          pattern: ^[-a-zA-Z0-9._/]+$
          minLength: 1
          maxLength: 512
      oneOf:
        - required:
            - S3
        - required:
            - LogGroup
      additionalProperties: false
    S3Destination:
      type: object
      properties:
        BucketName:
          type: string
          pattern: ^[a-z0-9][-a-z0-9]*[a-z0-9]$
          minLength: 3
          maxLength: 63
        Prefix:
          type: string
          pattern: ^[-a-zA-Z0-9!_.*'()/]*$
          minLength: 1
          maxLength: 1024
      required:
        - BucketName
      additionalProperties: false
    AppConfigResourceObject:
      type: object
      properties:
        ApplicationId:
          type: string
          pattern: '[a-z0-9]{4,7}'
        EnvironmentId:
          type: string
          pattern: '[a-z0-9]{4,7}'
      required:
        - ApplicationId
        - EnvironmentId
      additionalProperties: false
    Project:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:project/[-a-zA-Z0-9._]*
          minLength: 0
          maxLength: 2048
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        DataDelivery:
          $ref: '#/components/schemas/DataDeliveryObject'
        AppConfigResource:
          $ref: '#/components/schemas/AppConfigResourceObject'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: project
      x-stackql-primaryIdentifier:
        - Arn
    Segment:
      type: object
      properties:
        Arn:
          type: string
          pattern: arn:[^:]*:[^:]*:[^:]*:[^:]*:segment/[-a-zA-Z0-9._]*
          minLength: 0
          maxLength: 2048
        Name:
          type: string
          pattern: '[-a-zA-Z0-9._]*'
          minLength: 1
          maxLength: 127
        Description:
          type: string
          minLength: 0
          maxLength: 160
        Pattern:
          type: string
          minLength: 1
          maxLength: 1024
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: segment
      x-stackql-primaryIdentifier:
        - Arn
  x-stackQL-resources:
    experiments:
      name: experiments
      id: aws.evidently.experiments
      x-cfn-schema-name: Experiment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Experiment'
    experiment:
      name: experiment
      id: aws.evidently.experiment
      x-cfn-schema-name: Experiment
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Project') as project,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RunningStatus.Status') as running_status_status,
              JSON_EXTRACT(Properties, '$.RunningStatus.AnalysisCompleteTime') as running_status_analysis_complete_time,
              JSON_EXTRACT(Properties, '$.RunningStatus.Reason') as running_status_reason,
              JSON_EXTRACT(Properties, '$.RunningStatus.DesiredState') as running_status_desired_state,
              JSON_EXTRACT(Properties, '$.RandomizationSalt') as randomization_salt,
              JSON_EXTRACT(Properties, '$.Treatments') as treatments,
              JSON_EXTRACT(Properties, '$.MetricGoals') as metric_goals,
              JSON_EXTRACT(Properties, '$.SamplingRate') as sampling_rate,
              JSON_EXTRACT(Properties, '$.OnlineAbConfig.ControlTreatmentName') as online_ab_config_control_treatment_name,
              JSON_EXTRACT(Properties, '$.OnlineAbConfig.TreatmentWeights') as online_ab_config_treatment_weights,
              JSON_EXTRACT(Properties, '$.Segment') as segment,
              JSON_EXTRACT(Properties, '$.RemoveSegment') as remove_segment,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Experiment'
    features:
      name: features
      id: aws.evidently.features
      x-cfn-schema-name: Feature
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Feature'
    feature:
      name: feature
      id: aws.evidently.feature
      x-cfn-schema-name: Feature
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Project') as project,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EvaluationStrategy') as evaluation_strategy,
              JSON_EXTRACT(Properties, '$.Variations') as variations,
              JSON_EXTRACT(Properties, '$.DefaultVariation') as default_variation,
              JSON_EXTRACT(Properties, '$.EntityOverrides') as entity_overrides,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Feature'
    launches:
      name: launches
      id: aws.evidently.launches
      x-cfn-schema-name: Launch
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Launch'
    launch:
      name: launch
      id: aws.evidently.launch
      x-cfn-schema-name: Launch
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Project') as project,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.RandomizationSalt') as randomization_salt,
              JSON_EXTRACT(Properties, '$.ScheduledSplitsConfig') as scheduled_splits_config,
              JSON_EXTRACT(Properties, '$.Groups') as groups,
              JSON_EXTRACT(Properties, '$.MetricMonitors') as metric_monitors,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ExecutionStatus.Status') as execution_status_status,
              JSON_EXTRACT(Properties, '$.ExecutionStatus.DesiredState') as execution_status_desired_state,
              JSON_EXTRACT(Properties, '$.ExecutionStatus.Reason') as execution_status_reason
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Launch'
    projects:
      name: projects
      id: aws.evidently.projects
      x-cfn-schema-name: Project
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Project'
    project:
      name: project
      id: aws.evidently.project
      x-cfn-schema-name: Project
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.DataDelivery.S3') as data_delivery_s3,
              JSON_EXTRACT(Properties, '$.DataDelivery.LogGroup') as data_delivery_log_group,
              JSON_EXTRACT(Properties, '$.AppConfigResource.ApplicationId') as app_config_resource_application_id,
              JSON_EXTRACT(Properties, '$.AppConfigResource.EnvironmentId') as app_config_resource_environment_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Project'
    segments:
      name: segments
      id: aws.evidently.segments
      x-cfn-schema-name: Segment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Evidently::Segment'
    segment:
      name: segment
      id: aws.evidently.segment
      x-cfn-schema-name: Segment
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Evidently::Segment'
