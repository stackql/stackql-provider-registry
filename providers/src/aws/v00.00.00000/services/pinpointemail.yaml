openapi: 3.0.0
info:
  title: PinpointEmail
  version: 1.0.0
paths: {}
components:
  schemas:
    SendingOptions:
      type: object
      additionalProperties: false
      properties:
        SendingEnabled:
          type: boolean
    TrackingOptions:
      type: object
      additionalProperties: false
      properties:
        CustomRedirectDomain:
          type: string
    ReputationOptions:
      type: object
      additionalProperties: false
      properties:
        ReputationMetricsEnabled:
          type: boolean
    DeliveryOptions:
      type: object
      additionalProperties: false
      properties:
        SendingPoolName:
          type: string
    Tags:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
    ConfigurationSet:
      type: object
      properties:
        Id:
          type: string
        SendingOptions:
          $ref: '#/components/schemas/SendingOptions'
        TrackingOptions:
          $ref: '#/components/schemas/TrackingOptions'
        ReputationOptions:
          $ref: '#/components/schemas/ReputationOptions'
        DeliveryOptions:
          $ref: '#/components/schemas/DeliveryOptions'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: configuration_set
      x-stackql-primaryIdentifier:
        - Id
    EventDestination:
      type: object
      additionalProperties: false
      properties:
        SnsDestination:
          $ref: '#/components/schemas/SnsDestination'
        CloudWatchDestination:
          $ref: '#/components/schemas/CloudWatchDestination'
        Enabled:
          type: boolean
        MatchingEventTypes:
          type: array
          uniqueItems: false
          items:
            type: string
        PinpointDestination:
          $ref: '#/components/schemas/PinpointDestination'
        KinesisFirehoseDestination:
          $ref: '#/components/schemas/KinesisFirehoseDestination'
      required:
        - MatchingEventTypes
    SnsDestination:
      type: object
      additionalProperties: false
      properties:
        TopicArn:
          type: string
      required:
        - TopicArn
    PinpointDestination:
      type: object
      additionalProperties: false
      properties:
        ApplicationArn:
          type: string
    KinesisFirehoseDestination:
      type: object
      additionalProperties: false
      properties:
        DeliveryStreamArn:
          type: string
        IamRoleArn:
          type: string
      required:
        - DeliveryStreamArn
        - IamRoleArn
    CloudWatchDestination:
      type: object
      additionalProperties: false
      properties:
        DimensionConfigurations:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/DimensionConfiguration'
    DimensionConfiguration:
      type: object
      additionalProperties: false
      properties:
        DimensionValueSource:
          type: string
        DefaultDimensionValue:
          type: string
        DimensionName:
          type: string
      required:
        - DimensionValueSource
        - DefaultDimensionValue
        - DimensionName
    ConfigurationSetEventDestination:
      type: object
      properties:
        Id:
          type: string
        EventDestinationName:
          type: string
        ConfigurationSetName:
          type: string
        EventDestination:
          $ref: '#/components/schemas/EventDestination'
      required:
        - ConfigurationSetName
        - EventDestinationName
      x-stackql-resource-name: configuration_set_event_destination
      x-stackql-primaryIdentifier:
        - Id
    DedicatedIpPool:
      type: object
      properties:
        Id:
          type: string
        PoolName:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
      x-stackql-resource-name: dedicated_ip_pool
      x-stackql-primaryIdentifier:
        - Id
    MailFromAttributes:
      type: object
      additionalProperties: false
      properties:
        MailFromDomain:
          type: string
        BehaviorOnMxFailure:
          type: string
    Identity:
      type: object
      properties:
        Id:
          type: string
        IdentityDNSRecordName3:
          type: string
        IdentityDNSRecordName1:
          type: string
        IdentityDNSRecordName2:
          type: string
        IdentityDNSRecordValue3:
          type: string
        IdentityDNSRecordValue2:
          type: string
        IdentityDNSRecordValue1:
          type: string
        FeedbackForwardingEnabled:
          type: boolean
        DkimSigningEnabled:
          type: boolean
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tags'
        Name:
          type: string
        MailFromAttributes:
          $ref: '#/components/schemas/MailFromAttributes'
      required:
        - Name
      x-stackql-resource-name: identity
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    configuration_sets:
      name: configuration_sets
      id: aws.pinpointemail.configuration_sets
      x-cfn-schema-name: ConfigurationSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PinpointEmail::ConfigurationSet'
    configuration_set:
      name: configuration_set
      id: aws.pinpointemail.configuration_set
      x-cfn-schema-name: ConfigurationSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SendingOptions.SendingEnabled') as sending_options_sending_enabled,
              JSON_EXTRACT(Properties, '$.TrackingOptions.CustomRedirectDomain') as tracking_options_custom_redirect_domain,
              JSON_EXTRACT(Properties, '$.ReputationOptions.ReputationMetricsEnabled') as reputation_options_reputation_metrics_enabled,
              JSON_EXTRACT(Properties, '$.DeliveryOptions.SendingPoolName') as delivery_options_sending_pool_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PinpointEmail::ConfigurationSet'
    configuration_set_event_destinations:
      name: configuration_set_event_destinations
      id: aws.pinpointemail.configuration_set_event_destinations
      x-cfn-schema-name: ConfigurationSetEventDestination
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PinpointEmail::ConfigurationSetEventDestination'
    configuration_set_event_destination:
      name: configuration_set_event_destination
      id: aws.pinpointemail.configuration_set_event_destination
      x-cfn-schema-name: ConfigurationSetEventDestination
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.EventDestinationName') as event_destination_name,
              JSON_EXTRACT(Properties, '$.ConfigurationSetName') as configuration_set_name,
              JSON_EXTRACT(Properties, '$.EventDestination.SnsDestination') as event_destination_sns_destination,
              JSON_EXTRACT(Properties, '$.EventDestination.CloudWatchDestination') as event_destination_cloud_watch_destination,
              JSON_EXTRACT(Properties, '$.EventDestination.Enabled') as event_destination_enabled,
              JSON_EXTRACT(Properties, '$.EventDestination.MatchingEventTypes') as event_destination_matching_event_types,
              JSON_EXTRACT(Properties, '$.EventDestination.PinpointDestination') as event_destination_pinpoint_destination,
              JSON_EXTRACT(Properties, '$.EventDestination.KinesisFirehoseDestination') as event_destination_kinesis_firehose_destination
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PinpointEmail::ConfigurationSetEventDestination'
    dedicated_ip_pools:
      name: dedicated_ip_pools
      id: aws.pinpointemail.dedicated_ip_pools
      x-cfn-schema-name: DedicatedIpPool
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PinpointEmail::DedicatedIpPool'
    dedicated_ip_pool:
      name: dedicated_ip_pool
      id: aws.pinpointemail.dedicated_ip_pool
      x-cfn-schema-name: DedicatedIpPool
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.PoolName') as pool_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PinpointEmail::DedicatedIpPool'
    identities:
      name: identities
      id: aws.pinpointemail.identities
      x-cfn-schema-name: Identity
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::PinpointEmail::Identity'
    identity:
      name: identity
      id: aws.pinpointemail.identity
      x-cfn-schema-name: Identity
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IdentityDNSRecordName3') as identity_dn_srecord_name3,
              JSON_EXTRACT(Properties, '$.IdentityDNSRecordName1') as identity_dn_srecord_name1,
              JSON_EXTRACT(Properties, '$.IdentityDNSRecordName2') as identity_dn_srecord_name2,
              JSON_EXTRACT(Properties, '$.IdentityDNSRecordValue3') as identity_dn_srecord_value3,
              JSON_EXTRACT(Properties, '$.IdentityDNSRecordValue2') as identity_dn_srecord_value2,
              JSON_EXTRACT(Properties, '$.IdentityDNSRecordValue1') as identity_dn_srecord_value1,
              JSON_EXTRACT(Properties, '$.FeedbackForwardingEnabled') as feedback_forwarding_enabled,
              JSON_EXTRACT(Properties, '$.DkimSigningEnabled') as dkim_signing_enabled,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.MailFromAttributes.MailFromDomain') as mail_from_attributes_mail_from_domain,
              JSON_EXTRACT(Properties, '$.MailFromAttributes.BehaviorOnMxFailure') as mail_from_attributes_behavior_on_mx_failure
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::PinpointEmail::Identity'
