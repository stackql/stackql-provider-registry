openapi: 3.0.0
info:
  title: SSO
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Assignment:
      type: object
      properties:
        InstanceArn:
          description: The sso instance that the permission set is owned.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
          minLength: 10
          maxLength: 1224
        TargetId:
          description: The account id to be provisioned.
          type: string
          pattern: \d{12}
        TargetType:
          description: The type of resource to be provsioned to, only aws account now
          type: string
          enum:
            - AWS_ACCOUNT
        PermissionSetArn:
          description: The permission set that the assignemt will be assigned
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}
          minLength: 10
          maxLength: 1224
        PrincipalType:
          description: The assignee's type, user/group
          type: string
          enum:
            - USER
            - GROUP
        PrincipalId:
          description: The assignee's identifier, user id/group id
          type: string
          pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
          minLength: 1
          maxLength: 47
      required:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-stackql-resource-name: assignment
      description: Resource Type definition for SSO assignmet
      x-type-name: AWS::SSO::Assignment
      x-stackql-primary-identifier:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-create-only-properties:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-required-properties:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
      x-required-permissions:
        create:
          - sso:CreateAccountAssignment
          - sso:DescribeAccountAssignmentCreationStatus
          - sso:ListAccountAssignments
          - iam:GetSAMLProvider
          - iam:CreateSAMLProvider
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:CreateRole
          - iam:ListRolePolicies
        read:
          - sso:ListAccountAssignments
          - iam:GetSAMLProvider
          - iam:ListRolePolicies
        delete:
          - sso:ListAccountAssignments
          - sso:DeleteAccountAssignment
          - sso:DescribeAccountAssignmentDeletionStatus
          - iam:GetSAMLProvider
          - iam:ListRolePolicies
        list:
          - sso:ListAccountAssignments
          - iam:ListRolePolicies
    AccessControlAttributeValueSource:
      type: string
      minLength: 0
      maxLength: 256
      pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@\[\]\{\}\$\\"]*'
    AccessControlAttributeValueSourceList:
      type: array
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/AccessControlAttributeValueSource'
      maxItems: 1
    AccessControlAttributeValue:
      type: object
      properties:
        Source:
          $ref: '#/components/schemas/AccessControlAttributeValueSourceList'
      required:
        - Source
      additionalProperties: false
    AccessControlAttribute:
      type: object
      properties:
        Key:
          type: string
          pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@]+'
          minLength: 1
          maxLength: 128
        Value:
          $ref: '#/components/schemas/AccessControlAttributeValue'
      required:
        - Key
        - Value
      additionalProperties: false
    AccessControlAttributeList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/AccessControlAttribute'
      maxItems: 50
    InstanceAccessControlAttributeConfiguration:
      type: object
      properties:
        InstanceArn:
          description: The ARN of the AWS SSO instance under which the operation will be executed.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
          minLength: 10
          maxLength: 1224
        InstanceAccessControlAttributeConfiguration:
          description: The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
          type: object
          properties:
            AccessControlAttributes:
              $ref: '#/components/schemas/AccessControlAttributeList'
          required:
            - AccessControlAttributes
          additionalProperties: false
        AccessControlAttributes:
          $ref: '#/components/schemas/AccessControlAttributeList'
      required:
        - InstanceArn
      x-stackql-resource-name: instance_access_control_attribute_configuration
      description: Resource Type definition for SSO InstanceAccessControlAttributeConfiguration
      x-type-name: AWS::SSO::InstanceAccessControlAttributeConfiguration
      x-stackql-primary-identifier:
        - InstanceArn
      x-create-only-properties:
        - InstanceArn
      x-required-properties:
        - InstanceArn
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
      x-required-permissions:
        create:
          - sso:CreateInstanceAccessControlAttributeConfiguration
          - sso:UpdateApplicationProfileForAWSAccountInstance
          - sso:DescribeInstanceAccessControlAttributeConfiguration
        read:
          - sso:DescribeInstanceAccessControlAttributeConfiguration
        update:
          - sso:UpdateInstanceAccessControlAttributeConfiguration
          - sso:DescribeInstanceAccessControlAttributeConfiguration
        delete:
          - sso:DeleteInstanceAccessControlAttributeConfiguration
          - sso:DescribeInstanceAccessControlAttributeConfiguration
        list:
          - sso:DescribeInstanceAccessControlAttributeConfiguration
    Tag:
      description: The metadata that you apply to the permission set to help you categorize and organize them.
      type: object
      properties:
        Key:
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    ManagedPolicyArn:
      description: The managed policy to attach.
      type: string
      minLength: 20
      maxLength: 2048
    CustomerManagedPolicyReference:
      type: object
      properties:
        Name:
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        Path:
          type: string
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          minLength: 1
          maxLength: 512
      required:
        - Name
      additionalProperties: false
    PermissionsBoundary:
      type: object
      additionalProperties: false
      properties:
        CustomerManagedPolicyReference:
          $ref: '#/components/schemas/CustomerManagedPolicyReference'
        ManagedPolicyArn:
          $ref: '#/components/schemas/ManagedPolicyArn'
    PermissionSet:
      type: object
      properties:
        Name:
          description: The name you want to assign to this permission set.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 32
        PermissionSetArn:
          description: The permission set that the policy will be attached to
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}
          minLength: 10
          maxLength: 1224
        Description:
          description: The permission set description.
          type: string
          pattern: '[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]*'
          minLength: 1
          maxLength: 700
        InstanceArn:
          description: The sso instance arn that the permission set is owned.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
          minLength: 10
          maxLength: 1224
        SessionDuration:
          description: The length of time that a user can be signed in to an AWS account.
          type: string
          pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
          minLength: 1
          maxLength: 100
        RelayStateType:
          description: The relay state URL that redirect links to any service in the AWS Management Console.
          type: string
          pattern: '[a-zA-Z0-9&amp;$@#\/%?=~\-_''&quot;|!:,.;*+\[\]\ \(\)\{\}]+'
          minLength: 1
          maxLength: 240
        ManagedPolicies:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ManagedPolicyArn'
          maxItems: 20
          default: []
        InlinePolicy:
          description: The inline policy to put in permission set.
          type: object
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
        CustomerManagedPolicyReferences:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CustomerManagedPolicyReference'
          maxItems: 20
          default: []
        PermissionsBoundary:
          $ref: '#/components/schemas/PermissionsBoundary'
      required:
        - Name
        - InstanceArn
      x-stackql-resource-name: permission_set
      description: Resource Type definition for SSO PermissionSet
      x-type-name: AWS::SSO::PermissionSet
      x-stackql-primary-identifier:
        - InstanceArn
        - PermissionSetArn
      x-create-only-properties:
        - InstanceArn
        - Name
      x-read-only-properties:
        - PermissionSetArn
      x-required-properties:
        - Name
        - InstanceArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - sso:CreatePermissionSet
          - sso:PutInlinePolicyToPermissionSet
          - sso:AttachManagedPolicyToPermissionSet
          - sso:AttachCustomerManagedPolicyReferenceToPermissionSet
          - sso:PutPermissionsBoundaryToPermissionSet
          - sso:TagResource
          - sso:DescribePermissionSet
          - sso:ListTagsForResource
          - sso:ListManagedPoliciesInPermissionSet
          - sso:ListCustomerManagedPolicyReferencesInPermissionSet
          - sso:GetInlinePolicyForPermissionSet
          - sso:GetPermissionsBoundaryForPermissionSet
        read:
          - sso:DescribePermissionSet
          - sso:ListTagsForResource
          - sso:ListManagedPoliciesInPermissionSet
          - sso:ListCustomerManagedPolicyReferencesInPermissionSet
          - sso:GetInlinePolicyForPermissionSet
          - sso:GetPermissionsBoundaryForPermissionSet
        update:
          - sso:UpdatePermissionSet
          - sso:TagResource
          - sso:UntagResource
          - sso:ListTagsForResource
          - sso:AttachManagedPolicyToPermissionSet
          - sso:AttachCustomerManagedPolicyReferenceToPermissionSet
          - sso:DetachManagedPolicyFromPermissionSet
          - sso:DetachCustomerManagedPolicyReferenceFromPermissionSet
          - sso:ListManagedPoliciesInPermissionSet
          - sso:ListCustomerManagedPolicyReferencesInPermissionSet
          - sso:PutInlinePolicyToPermissionSet
          - sso:GetPermissionsBoundaryForPermissionSet
          - sso:DeletePermissionsBoundaryFromPermissionSet
          - sso:PutPermissionsBoundaryToPermissionSet
          - sso:DeleteInlinePolicyFromPermissionSet
          - sso:ProvisionPermissionSet
          - sso:DescribePermissionSet
          - sso:GetInlinePolicyForPermissionSet
          - sso:DescribePermissionSetProvisioningStatus
        delete:
          - sso:DeletePermissionSet
        list:
          - sso:DescribePermissionSet
    CreateAssignmentRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The sso instance that the permission set is owned.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
              minLength: 10
              maxLength: 1224
            TargetId:
              description: The account id to be provisioned.
              type: string
              pattern: \d{12}
            TargetType:
              description: The type of resource to be provsioned to, only aws account now
              type: string
              enum:
                - AWS_ACCOUNT
            PermissionSetArn:
              description: The permission set that the assignemt will be assigned
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}
              minLength: 10
              maxLength: 1224
            PrincipalType:
              description: The assignee's type, user/group
              type: string
              enum:
                - USER
                - GROUP
            PrincipalId:
              description: The assignee's identifier, user id/group id
              type: string
              pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
              minLength: 1
              maxLength: 47
          x-stackQL-stringOnly: true
      x-title: CreateAssignmentRequest
      type: object
      required: []
    CreateInstanceAccessControlAttributeConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceArn:
              description: The ARN of the AWS SSO instance under which the operation will be executed.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
              minLength: 10
              maxLength: 1224
            InstanceAccessControlAttributeConfiguration:
              description: The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
              type: object
              properties:
                AccessControlAttributes:
                  $ref: '#/components/schemas/AccessControlAttributeList'
              required:
                - AccessControlAttributes
              additionalProperties: false
            AccessControlAttributes:
              $ref: '#/components/schemas/AccessControlAttributeList'
          x-stackQL-stringOnly: true
      x-title: CreateInstanceAccessControlAttributeConfigurationRequest
      type: object
      required: []
    CreatePermissionSetRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Name:
              description: The name you want to assign to this permission set.
              type: string
              pattern: '[\w+=,.@-]+'
              minLength: 1
              maxLength: 32
            PermissionSetArn:
              description: The permission set that the policy will be attached to
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}
              minLength: 10
              maxLength: 1224
            Description:
              description: The permission set description.
              type: string
              pattern: '[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]*'
              minLength: 1
              maxLength: 700
            InstanceArn:
              description: The sso instance arn that the permission set is owned.
              type: string
              pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
              minLength: 10
              maxLength: 1224
            SessionDuration:
              description: The length of time that a user can be signed in to an AWS account.
              type: string
              pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
              minLength: 1
              maxLength: 100
            RelayStateType:
              description: The relay state URL that redirect links to any service in the AWS Management Console.
              type: string
              pattern: '[a-zA-Z0-9&amp;$@#\/%?=~\-_''&quot;|!:,.;*+\[\]\ \(\)\{\}]+'
              minLength: 1
              maxLength: 240
            ManagedPolicies:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/ManagedPolicyArn'
              maxItems: 20
              default: []
            InlinePolicy:
              description: The inline policy to put in permission set.
              type: object
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 50
            CustomerManagedPolicyReferences:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/CustomerManagedPolicyReference'
              maxItems: 20
              default: []
            PermissionsBoundary:
              $ref: '#/components/schemas/PermissionsBoundary'
          x-stackQL-stringOnly: true
      x-title: CreatePermissionSetRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    assignments:
      name: assignments
      id: aws.sso.assignments
      x-cfn-schema-name: Assignment
      x-cfn-type-name: AWS::SSO::Assignment
      x-identifiers:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Assignment&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::Assignment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::Assignment"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/assignments/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn,
              JSON_EXTRACT(Properties, '$.PrincipalType') as principal_type,
              JSON_EXTRACT(Properties, '$.PrincipalId') as principal_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::Assignment'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'TargetId') as target_id,
                json_extract_path_text(Properties, 'TargetType') as target_type,
                json_extract_path_text(Properties, 'PermissionSetArn') as permission_set_arn,
                json_extract_path_text(Properties, 'PrincipalType') as principal_type,
                json_extract_path_text(Properties, 'PrincipalId') as principal_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::Assignment'
                AND region = 'us-east-1'
    assignment:
      name: assignment
      id: aws.sso.assignment
      x-cfn-schema-name: Assignment
      x-cfn-type-name: AWS::SSO::Assignment
      x-identifiers:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-type: get
      methods: {}
      sqlVerbs:
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn,
              JSON_EXTRACT(Properties, '$.PrincipalType') as principal_type,
              JSON_EXTRACT(Properties, '$.PrincipalId') as principal_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::Assignment'
              AND data__Identifier = '<InstanceArn>|<TargetId>|<TargetType>|<PermissionSetArn>|<PrincipalType>|<PrincipalId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'TargetId') as target_id,
                json_extract_path_text(Properties, 'TargetType') as target_type,
                json_extract_path_text(Properties, 'PermissionSetArn') as permission_set_arn,
                json_extract_path_text(Properties, 'PrincipalType') as principal_type,
                json_extract_path_text(Properties, 'PrincipalId') as principal_id
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::Assignment'
                AND data__Identifier = '<InstanceArn>|<TargetId>|<TargetType>|<PermissionSetArn>|<PrincipalType>|<PrincipalId>'
                AND region = 'us-east-1'
    instance_access_control_attribute_configurations:
      name: instance_access_control_attribute_configurations
      id: aws.sso.instance_access_control_attribute_configurations
      x-cfn-schema-name: InstanceAccessControlAttributeConfiguration
      x-cfn-type-name: AWS::SSO::InstanceAccessControlAttributeConfiguration
      x-identifiers:
        - InstanceArn
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InstanceAccessControlAttributeConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::InstanceAccessControlAttributeConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::InstanceAccessControlAttributeConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/instance_access_control_attribute_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/instance_access_control_attribute_configurations/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::InstanceAccessControlAttributeConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::InstanceAccessControlAttributeConfiguration'
                AND region = 'us-east-1'
    instance_access_control_attribute_configuration:
      name: instance_access_control_attribute_configuration
      id: aws.sso.instance_access_control_attribute_configuration
      x-cfn-schema-name: InstanceAccessControlAttributeConfiguration
      x-cfn-type-name: AWS::SSO::InstanceAccessControlAttributeConfiguration
      x-identifiers:
        - InstanceArn
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::InstanceAccessControlAttributeConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/instance_access_control_attribute_configuration/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.InstanceAccessControlAttributeConfiguration') as instance_access_control_attribute_configuration,
              JSON_EXTRACT(Properties, '$.AccessControlAttributes') as access_control_attributes
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::InstanceAccessControlAttributeConfiguration'
              AND data__Identifier = '<InstanceArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'InstanceAccessControlAttributeConfiguration') as instance_access_control_attribute_configuration,
                json_extract_path_text(Properties, 'AccessControlAttributes') as access_control_attributes
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::InstanceAccessControlAttributeConfiguration'
                AND data__Identifier = '<InstanceArn>'
                AND region = 'us-east-1'
    permission_sets:
      name: permission_sets
      id: aws.sso.permission_sets
      x-cfn-schema-name: PermissionSet
      x-cfn-type-name: AWS::SSO::PermissionSet
      x-identifiers:
        - InstanceArn
        - PermissionSetArn
      x-type: list
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PermissionSet&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::PermissionSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::PermissionSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/permission_sets/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/permission_sets/methods/delete_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::PermissionSet'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'PermissionSetArn') as permission_set_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::PermissionSet'
                AND region = 'us-east-1'
    permission_set:
      name: permission_set
      id: aws.sso.permission_set
      x-cfn-schema-name: PermissionSet
      x-cfn-type-name: AWS::SSO::PermissionSet
      x-identifiers:
        - InstanceArn
        - PermissionSetArn
      x-type: get
      methods:
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::SSO::PermissionSet"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        update:
          - $ref: '#/components/x-stackQL-resources/permission_set/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.SessionDuration') as session_duration,
              JSON_EXTRACT(Properties, '$.RelayStateType') as relay_state_type,
              JSON_EXTRACT(Properties, '$.ManagedPolicies') as managed_policies,
              JSON_EXTRACT(Properties, '$.InlinePolicy') as inline_policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CustomerManagedPolicyReferences') as customer_managed_policy_references,
              JSON_EXTRACT(Properties, '$.PermissionsBoundary') as permissions_boundary
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::PermissionSet'
              AND data__Identifier = '<InstanceArn>|<PermissionSetArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'PermissionSetArn') as permission_set_arn,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'InstanceArn') as instance_arn,
                json_extract_path_text(Properties, 'SessionDuration') as session_duration,
                json_extract_path_text(Properties, 'RelayStateType') as relay_state_type,
                json_extract_path_text(Properties, 'ManagedPolicies') as managed_policies,
                json_extract_path_text(Properties, 'InlinePolicy') as inline_policy,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'CustomerManagedPolicyReferences') as customer_managed_policy_references,
                json_extract_path_text(Properties, 'PermissionsBoundary') as permissions_boundary
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::PermissionSet'
                AND data__Identifier = '<InstanceArn>|<PermissionSetArn>'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Assignment&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateAssignment
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAssignmentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InstanceAccessControlAttributeConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInstanceAccessControlAttributeConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInstanceAccessControlAttributeConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PermissionSet&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePermissionSet
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePermissionSetRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  pagination:
    requestTranslate:
      algorithm: drop_double_underscore_params
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
