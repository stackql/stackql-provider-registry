openapi: 3.0.0
info:
  title: SSO
  version: 1.0.0
paths: {}
components:
  schemas:
    Assignment:
      type: object
      properties:
        InstanceArn:
          description: The sso instance that the permission set is owned.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
          minLength: 10
          maxLength: 1224
        TargetId:
          description: The account id to be provisioned.
          type: string
          pattern: \d{12}
        TargetType:
          description: The type of resource to be provsioned to, only aws account now
          type: string
          enum:
            - AWS_ACCOUNT
        PermissionSetArn:
          description: The permission set that the assignemt will be assigned
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}
          minLength: 10
          maxLength: 1224
        PrincipalType:
          description: The assignee's type, user/group
          type: string
          enum:
            - USER
            - GROUP
        PrincipalId:
          description: The assignee's identifier, user id/group id
          type: string
          pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
          minLength: 1
          maxLength: 47
      required:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      x-stackql-resource-name: assignment
      x-stackql-primaryIdentifier:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
    AccessControlAttributeValueSource:
      type: string
      minLength: 0
      maxLength: 256
      pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@\[\]\{\}\$\\"]*'
    AccessControlAttributeValueSourceList:
      type: array
      x-insertionOrder: true
      items:
        $ref: '#/components/schemas/AccessControlAttributeValueSource'
      maxItems: 1
    AccessControlAttributeValue:
      type: object
      properties:
        Source:
          $ref: '#/components/schemas/AccessControlAttributeValueSourceList'
      required:
        - Source
      additionalProperties: false
    AccessControlAttribute:
      type: object
      properties:
        Key:
          type: string
          pattern: '[\p{L}\p{Z}\p{N}_.:\/=+\-@]+'
          minLength: 1
          maxLength: 128
        Value:
          $ref: '#/components/schemas/AccessControlAttributeValue'
      required:
        - Key
        - Value
      additionalProperties: false
    AccessControlAttributeList:
      type: array
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/AccessControlAttribute'
      maxItems: 50
    InstanceAccessControlAttributeConfiguration:
      type: object
      properties:
        InstanceArn:
          description: The ARN of the AWS SSO instance under which the operation will be executed.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
          minLength: 10
          maxLength: 1224
        InstanceAccessControlAttributeConfiguration:
          description: The InstanceAccessControlAttributeConfiguration property has been deprecated but is still supported for backwards compatibility purposes. We recomend that you use  AccessControlAttributes property instead.
          type: object
          properties:
            AccessControlAttributes:
              $ref: '#/components/schemas/AccessControlAttributeList'
          required:
            - AccessControlAttributes
          additionalProperties: false
        AccessControlAttributes:
          $ref: '#/components/schemas/AccessControlAttributeList'
      required:
        - InstanceArn
      x-stackql-resource-name: instance_access_control_attribute_configuration
      x-stackql-primaryIdentifier:
        - InstanceArn
    Tag:
      description: The metadata that you apply to the permission set to help you categorize and organize them.
      type: object
      properties:
        Key:
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        Value:
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 0
          maxLength: 256
      required:
        - Key
        - Value
      additionalProperties: false
    ManagedPolicyArn:
      description: The managed policy to attach.
      type: string
      minLength: 20
      maxLength: 2048
    CustomerManagedPolicyReference:
      type: object
      properties:
        Name:
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 128
        Path:
          type: string
          pattern: ((/[A-Za-z0-9\.,\+@=_-]+)*)/
          minLength: 1
          maxLength: 512
      required:
        - Name
      additionalProperties: false
    PermissionsBoundary:
      type: object
      additionalProperties: false
      properties:
        CustomerManagedPolicyReference:
          $ref: '#/components/schemas/CustomerManagedPolicyReference'
        ManagedPolicyArn:
          $ref: '#/components/schemas/ManagedPolicyArn'
    PermissionSet:
      type: object
      properties:
        Name:
          description: The name you want to assign to this permission set.
          type: string
          pattern: '[\w+=,.@-]+'
          minLength: 1
          maxLength: 32
        PermissionSetArn:
          description: The permission set that the policy will be attached to
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::permissionSet/(sso)?ins-[a-zA-Z0-9-.]{16}/ps-[a-zA-Z0-9-./]{16}
          minLength: 10
          maxLength: 1224
        Description:
          description: The permission set description.
          type: string
          pattern: '[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]*'
          minLength: 1
          maxLength: 700
        InstanceArn:
          description: The sso instance arn that the permission set is owned.
          type: string
          pattern: arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):sso:::instance/(sso)?ins-[a-zA-Z0-9-.]{16}
          minLength: 10
          maxLength: 1224
        SessionDuration:
          description: The length of time that a user can be signed in to an AWS account.
          type: string
          pattern: ^(-?)P(?=\d|T\d)(?:(\d+)Y)?(?:(\d+)M)?(?:(\d+)([DW]))?(?:T(?:(\d+)H)?(?:(\d+)M)?(?:(\d+(?:\.\d+)?)S)?)?$
          minLength: 1
          maxLength: 100
        RelayStateType:
          description: The relay state URL that redirect links to any service in the AWS Management Console.
          type: string
          pattern: '[a-zA-Z0-9&amp;$@#\/%?=~\-_''&quot;|!:,.;*+\[\]\ \(\)\{\}]+'
          minLength: 1
          maxLength: 240
        ManagedPolicies:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ManagedPolicyArn'
          maxItems: 20
          default: []
        InlinePolicy:
          type: string
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
        CustomerManagedPolicyReferences:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/CustomerManagedPolicyReference'
          maxItems: 20
          default: []
        PermissionsBoundary:
          $ref: '#/components/schemas/PermissionsBoundary'
      required:
        - Name
        - InstanceArn
      x-stackql-resource-name: permission_set
      x-stackql-primaryIdentifier:
        - InstanceArn
        - PermissionSetArn
  x-stackQL-resources:
    assignments:
      name: assignments
      id: aws.sso.assignments
      x-cfn-schema-name: Assignment
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn,
              JSON_EXTRACT(Properties, '$.PrincipalType') as principal_type,
              JSON_EXTRACT(Properties, '$.PrincipalId') as principal_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::Assignment'
    assignment:
      name: assignment
      id: aws.sso.assignment
      x-cfn-schema-name: Assignment
      x-type: get
      x-identifiers:
        - InstanceArn
        - TargetId
        - TargetType
        - PermissionSetArn
        - PrincipalType
        - PrincipalId
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.TargetId') as target_id,
              JSON_EXTRACT(Properties, '$.TargetType') as target_type,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn,
              JSON_EXTRACT(Properties, '$.PrincipalType') as principal_type,
              JSON_EXTRACT(Properties, '$.PrincipalId') as principal_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::Assignment'
    instance_access_control_attribute_configurations:
      name: instance_access_control_attribute_configurations
      id: aws.sso.instance_access_control_attribute_configurations
      x-cfn-schema-name: InstanceAccessControlAttributeConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::InstanceAccessControlAttributeConfiguration'
    instance_access_control_attribute_configuration:
      name: instance_access_control_attribute_configuration
      id: aws.sso.instance_access_control_attribute_configuration
      x-cfn-schema-name: InstanceAccessControlAttributeConfiguration
      x-type: get
      x-identifiers:
        - InstanceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.InstanceAccessControlAttributeConfiguration') as instance_access_control_attribute_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::InstanceAccessControlAttributeConfiguration'
    permission_sets:
      name: permission_sets
      id: aws.sso.permission_sets
      x-cfn-schema-name: PermissionSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::SSO::PermissionSet'
    permission_set:
      name: permission_set
      id: aws.sso.permission_set
      x-cfn-schema-name: PermissionSet
      x-type: get
      x-identifiers:
        - InstanceArn
        - PermissionSetArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.PermissionSetArn') as permission_set_arn,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.InstanceArn') as instance_arn,
              JSON_EXTRACT(Properties, '$.SessionDuration') as session_duration,
              JSON_EXTRACT(Properties, '$.RelayStateType') as relay_state_type,
              JSON_EXTRACT(Properties, '$.ManagedPolicies') as managed_policies,
              JSON_EXTRACT(Properties, '$.InlinePolicy') as inline_policy,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CustomerManagedPolicyReferences') as customer_managed_policy_references,
              JSON_EXTRACT(Properties, '$.PermissionsBoundary.CustomerManagedPolicyReference') as permissions_boundary_customer_managed_policy_reference,
              JSON_EXTRACT(Properties, '$.PermissionsBoundary.ManagedPolicyArn') as permissions_boundary_managed_policy_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::SSO::PermissionSet'
