openapi: 3.0.0
info:
  title: CodeArtifact
  version: 1.0.0
paths: {}
components:
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Domain:
      type: object
      properties:
        DomainName:
          description: The name of the domain.
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        Name:
          description: The name of the domain. This field is used for GetAtt
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        Owner:
          description: The 12-digit account ID of the AWS account that owns the domain. This field is used for GetAtt
          pattern: '[0-9]{12}'
          type: string
        EncryptionKey:
          description: The ARN of an AWS Key Management Service (AWS KMS) key associated with a domain.
          type: string
        PermissionsPolicyDocument:
          description: The access control resource policy on the provided domain.
          type: object
          minLength: 2
          maxLength: 5120
        Tags:
          type: array
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The ARN of the domain.
          type: string
          minLength: 1
          maxLength: 2048
      required:
        - DomainName
      x-stackql-resource-name: domain
      description: The resource schema to create a CodeArtifact domain.
      x-type-name: AWS::CodeArtifact::Domain
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DomainName
        - EncryptionKey
      x-read-only-properties:
        - Owner
        - Name
        - EncryptionKey
        - Arn
      x-required-properties:
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - codeartifact:CreateDomain
          - codeartifact:DescribeDomain
          - codeartifact:PutDomainPermissionsPolicy
          - codeartifact:GetDomainPermissionsPolicy
          - codeartifact:TagResource
        read:
          - codeartifact:DescribeDomain
          - codeartifact:GetDomainPermissionsPolicy
          - codeartifact:ListTagsForResource
        update:
          - codeartifact:PutDomainPermissionsPolicy
          - codeartifact:DeleteDomainPermissionsPolicy
          - codeartifact:GetDomainPermissionsPolicy
          - codeartifact:TagResource
          - codeartifact:UntagResource
        delete:
          - codeartifact:DeleteDomain
          - codeartifact:DescribeDomain
        list:
          - codeartifact:ListDomains
    OriginConfiguration:
      type: object
      properties:
        Restrictions:
          description: The origin configuration that is applied to the package group.
          type: object
          $ref: '#/components/schemas/Restrictions'
      required:
        - Restrictions
      additionalProperties: false
    Restrictions:
      type: object
      properties:
        Publish:
          type: object
          description: The publish restriction determines if new package versions can be published.
          $ref: '#/components/schemas/RestrictionType'
        ExternalUpstream:
          type: object
          description: The external upstream restriction determines if new package versions can be ingested or retained from external connections.
          $ref: '#/components/schemas/RestrictionType'
        InternalUpstream:
          type: object
          description: The internal upstream restriction determines if new package versions can be ingested or retained from upstream repositories.
          $ref: '#/components/schemas/RestrictionType'
      additionalProperties: false
    RestrictionType:
      type: object
      properties:
        RestrictionMode:
          type: string
          enum:
            - ALLOW
            - BLOCK
            - ALLOW_SPECIFIC_REPOSITORIES
            - INHERIT
        Repositories:
          type: array
          items:
            type: string
      required:
        - RestrictionMode
      additionalProperties: false
    PackageGroup:
      type: object
      properties:
        DomainName:
          description: The name of the domain that contains the package group.
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        DomainOwner:
          description: The 12-digit account ID of the AWS account that owns the domain.
          pattern: '[0-9]{12}'
          type: string
        Pattern:
          description: The package group pattern that is used to gather packages.
          type: string
          minLength: 2
          maxLength: 520
        ContactInfo:
          description: The contact info of the package group.
          type: string
          maxLength: 1000
        Description:
          description: The text description of the package group.
          type: string
          maxLength: 1000
        OriginConfiguration:
          description: The package origin configuration of the package group.
          type: object
          $ref: '#/components/schemas/OriginConfiguration'
        Tags:
          type: array
          description: An array of key-value pairs to apply to the package group.
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The ARN of the package group.
          type: string
          minLength: 1
          maxLength: 2048
      required:
        - Pattern
        - DomainName
      x-stackql-resource-name: package_group
      description: The resource schema to create a CodeArtifact package group.
      x-type-name: AWS::CodeArtifact::PackageGroup
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DomainName
        - Pattern
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Pattern
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - codeartifact:CreatePackageGroup
          - codeartifact:DescribePackageGroup
          - codeartifact:UpdatePackageGroup
          - codeartifact:UpdatePackageGroupOriginConfiguration
          - codeartifact:ListAllowedRepositoriesForGroup
          - codeartifact:ListTagsForResource
          - codeartifact:TagResource
        read:
          - codeartifact:DescribePackageGroup
          - codeartifact:ListAllowedRepositoriesForGroup
          - codeartifact:ListTagsForResource
        update:
          - codeartifact:UpdatePackageGroup
          - codeartifact:UpdatePackageGroupOriginConfiguration
          - codeartifact:DescribePackageGroup
          - codeartifact:ListAllowedRepositoriesForGroup
          - codeartifact:ListTagsForResource
          - codeartifact:TagResource
          - codeartifact:UntagResource
        delete:
          - codeartifact:DeletePackageGroup
          - codeartifact:DescribePackageGroup
        list:
          - codeartifact:ListPackageGroups
    Repository:
      type: object
      properties:
        RepositoryName:
          description: The name of the repository.
          type: string
          pattern: ^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$
          minLength: 2
          maxLength: 100
        Name:
          description: The name of the repository. This is used for GetAtt
          type: string
          pattern: ^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$
          minLength: 2
          maxLength: 100
        DomainName:
          description: The name of the domain that contains the repository.
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        DomainOwner:
          description: The 12-digit account ID of the AWS account that owns the domain.
          pattern: '[0-9]{12}'
          type: string
        Description:
          description: A text description of the repository.
          type: string
          maxLength: 1000
        Arn:
          description: The ARN of the repository.
          type: string
          minLength: 1
          maxLength: 2048
        ExternalConnections:
          description: A list of external connections associated with the repository.
          type: array
          items:
            type: string
        Upstreams:
          description: A list of upstream repositories associated with the repository.
          type: array
          items:
            type: string
        PermissionsPolicyDocument:
          description: The access control resource policy on the provided repository.
          type: object
          minLength: 2
          maxLength: 5120
        Tags:
          type: array
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - RepositoryName
        - DomainName
      x-stackql-resource-name: repository
      description: The resource schema to create a CodeArtifact repository.
      x-type-name: AWS::CodeArtifact::Repository
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - RepositoryName
        - DomainName
        - DomainOwner
      x-read-only-properties:
        - Name
        - DomainOwner
        - Arn
      x-required-properties:
        - RepositoryName
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - codeartifact:CreateRepository
          - codeartifact:DescribeRepository
          - codeartifact:PutRepositoryPermissionsPolicy
          - codeartifact:AssociateExternalConnection
          - codeartifact:AssociateWithDownstreamRepository
          - codeartifact:TagResource
        read:
          - codeartifact:DescribeRepository
          - codeartifact:GetRepositoryPermissionsPolicy
          - codeartifact:ListTagsForResource
        update:
          - codeartifact:PutRepositoryPermissionsPolicy
          - codeartifact:DeleteRepositoryPermissionsPolicy
          - codeartifact:AssociateExternalConnection
          - codeartifact:DisassociateExternalConnection
          - codeartifact:UpdateRepository
          - codeartifact:DescribeRepository
          - codeartifact:AssociateWithDownstreamRepository
          - codeartifact:TagResource
          - codeartifact:UntagResource
        delete:
          - codeartifact:DeleteRepository
          - codeartifact:DescribeRepository
        list:
          - codeartifact:ListRepositories
  x-stackQL-resources:
    domains:
      name: domains
      id: aws.codeartifact.domains
      x-cfn-schema-name: Domain
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
                AND region = 'us-east-1'
    domain:
      name: domain
      id: aws.codeartifact.domain
      x-cfn-schema-name: Domain
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Owner') as owner,
              JSON_EXTRACT(Properties, '$.EncryptionKey') as encryption_key,
              JSON_EXTRACT(Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'DomainName') as domain_name,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'Owner') as owner,
                json_extract_path_text(Properties, 'EncryptionKey') as encryption_key,
                json_extract_path_text(Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    package_groups:
      name: package_groups
      id: aws.codeartifact.package_groups
      x-cfn-schema-name: PackageGroup
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND region = 'us-east-1'
    package_group:
      name: package_group
      id: aws.codeartifact.package_group
      x-cfn-schema-name: PackageGroup
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainOwner') as domain_owner,
              JSON_EXTRACT(Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(Properties, '$.ContactInfo') as contact_info,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.OriginConfiguration') as origin_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'DomainName') as domain_name,
                json_extract_path_text(Properties, 'DomainOwner') as domain_owner,
                json_extract_path_text(Properties, 'Pattern') as pattern,
                json_extract_path_text(Properties, 'ContactInfo') as contact_info,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'OriginConfiguration') as origin_configuration,
                json_extract_path_text(Properties, 'Tags') as tags,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
    repositories:
      name: repositories
      id: aws.codeartifact.repositories
      x-cfn-schema-name: Repository
      x-type: list
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
                AND region = 'us-east-1'
    repository:
      name: repository
      id: aws.codeartifact.repository
      x-cfn-schema-name: Repository
      x-type: get
      x-identifiers:
        - Arn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RepositoryName') as repository_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainOwner') as domain_owner,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ExternalConnections') as external_connections,
              JSON_EXTRACT(Properties, '$.Upstreams') as upstreams,
              JSON_EXTRACT(Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'RepositoryName') as repository_name,
                json_extract_path_text(Properties, 'Name') as name,
                json_extract_path_text(Properties, 'DomainName') as domain_name,
                json_extract_path_text(Properties, 'DomainOwner') as domain_owner,
                json_extract_path_text(Properties, 'Description') as description,
                json_extract_path_text(Properties, 'Arn') as arn,
                json_extract_path_text(Properties, 'ExternalConnections') as external_connections,
                json_extract_path_text(Properties, 'Upstreams') as upstreams,
                json_extract_path_text(Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
                AND data__Identifier = '<Arn>'
                AND region = 'us-east-1'
