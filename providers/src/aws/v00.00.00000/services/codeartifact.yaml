openapi: 3.0.0
info:
  title: CodeArtifact
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      properties:
        Key:
          type: string
          description: 'The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 256
      required:
        - Value
        - Key
      additionalProperties: false
    Domain:
      type: object
      properties:
        DomainName:
          description: The name of the domain.
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        Name:
          description: The name of the domain. This field is used for GetAtt
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        Owner:
          description: The 12-digit account ID of the AWS account that owns the domain. This field is used for GetAtt
          pattern: '[0-9]{12}'
          type: string
        EncryptionKey:
          description: The ARN of an AWS Key Management Service (AWS KMS) key associated with a domain.
          type: string
        PermissionsPolicyDocument:
          description: The access control resource policy on the provided domain.
          type: object
          minLength: 2
          maxLength: 5120
        Tags:
          type: array
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The ARN of the domain.
          type: string
          minLength: 1
          maxLength: 2048
      required:
        - DomainName
      x-stackql-resource-name: domain
      description: The resource schema to create a CodeArtifact domain.
      x-type-name: AWS::CodeArtifact::Domain
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DomainName
        - EncryptionKey
      x-read-only-properties:
        - Owner
        - Name
        - EncryptionKey
        - Arn
      x-required-properties:
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - codeartifact:ListTagsForResource
          - codeartifact:UntagResource
          - codeartifact:TagResource
      x-required-permissions:
        create:
          - codeartifact:CreateDomain
          - codeartifact:DescribeDomain
          - codeartifact:PutDomainPermissionsPolicy
          - codeartifact:GetDomainPermissionsPolicy
          - codeartifact:TagResource
          - codeartifact:ListTagsForResource
        read:
          - codeartifact:DescribeDomain
          - codeartifact:GetDomainPermissionsPolicy
          - codeartifact:ListTagsForResource
        update:
          - codeartifact:DescribeDomain
          - codeartifact:PutDomainPermissionsPolicy
          - codeartifact:DeleteDomainPermissionsPolicy
          - codeartifact:GetDomainPermissionsPolicy
          - codeartifact:TagResource
          - codeartifact:UntagResource
          - codeartifact:ListTagsForResource
        delete:
          - codeartifact:DeleteDomain
          - codeartifact:DescribeDomain
        list:
          - codeartifact:ListDomains
    OriginConfiguration:
      type: object
      properties:
        Restrictions:
          description: The origin configuration that is applied to the package group.
          type: object
          $ref: '#/components/schemas/Restrictions'
      required:
        - Restrictions
      additionalProperties: false
    Restrictions:
      type: object
      properties:
        Publish:
          type: object
          description: The publish restriction determines if new package versions can be published.
          $ref: '#/components/schemas/RestrictionType'
        ExternalUpstream:
          type: object
          description: The external upstream restriction determines if new package versions can be ingested or retained from external connections.
          $ref: '#/components/schemas/RestrictionType'
        InternalUpstream:
          type: object
          description: The internal upstream restriction determines if new package versions can be ingested or retained from upstream repositories.
          $ref: '#/components/schemas/RestrictionType'
      additionalProperties: false
    RestrictionType:
      type: object
      properties:
        RestrictionMode:
          type: string
          enum:
            - ALLOW
            - BLOCK
            - ALLOW_SPECIFIC_REPOSITORIES
            - INHERIT
        Repositories:
          type: array
          items:
            type: string
      required:
        - RestrictionMode
      additionalProperties: false
    PackageGroup:
      type: object
      properties:
        DomainName:
          description: The name of the domain that contains the package group.
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        DomainOwner:
          description: The 12-digit account ID of the AWS account that owns the domain.
          pattern: '[0-9]{12}'
          type: string
        Pattern:
          description: The package group pattern that is used to gather packages.
          type: string
          minLength: 2
          maxLength: 520
        ContactInfo:
          description: The contact info of the package group.
          type: string
          maxLength: 1000
        Description:
          description: The text description of the package group.
          type: string
          maxLength: 1000
        OriginConfiguration:
          description: The package origin configuration of the package group.
          type: object
          $ref: '#/components/schemas/OriginConfiguration'
        Tags:
          type: array
          description: An array of key-value pairs to apply to the package group.
          items:
            $ref: '#/components/schemas/Tag'
        Arn:
          description: The ARN of the package group.
          type: string
          minLength: 1
          maxLength: 2048
      required:
        - Pattern
        - DomainName
      x-stackql-resource-name: package_group
      description: The resource schema to create a CodeArtifact package group.
      x-type-name: AWS::CodeArtifact::PackageGroup
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - DomainName
        - Pattern
      x-read-only-properties:
        - Arn
      x-required-properties:
        - Pattern
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - codeartifact:ListTagsForResource
          - codeartifact:UntagResource
          - codeartifact:TagResource
      x-required-permissions:
        create:
          - codeartifact:CreatePackageGroup
          - codeartifact:DescribePackageGroup
          - codeartifact:UpdatePackageGroup
          - codeartifact:UpdatePackageGroupOriginConfiguration
          - codeartifact:ListAllowedRepositoriesForGroup
          - codeartifact:ListTagsForResource
          - codeartifact:TagResource
        read:
          - codeartifact:DescribePackageGroup
          - codeartifact:ListAllowedRepositoriesForGroup
          - codeartifact:ListTagsForResource
        update:
          - codeartifact:UpdatePackageGroup
          - codeartifact:UpdatePackageGroupOriginConfiguration
          - codeartifact:DescribePackageGroup
          - codeartifact:ListAllowedRepositoriesForGroup
          - codeartifact:ListTagsForResource
          - codeartifact:TagResource
          - codeartifact:UntagResource
        delete:
          - codeartifact:DeletePackageGroup
          - codeartifact:DescribePackageGroup
        list:
          - codeartifact:ListPackageGroups
    Repository:
      type: object
      properties:
        RepositoryName:
          description: The name of the repository.
          type: string
          pattern: ^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$
          minLength: 2
          maxLength: 100
        Name:
          description: The name of the repository. This is used for GetAtt
          type: string
          pattern: ^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$
          minLength: 2
          maxLength: 100
        DomainName:
          description: The name of the domain that contains the repository.
          type: string
          pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
          minLength: 2
          maxLength: 50
        DomainOwner:
          description: The 12-digit account ID of the AWS account that owns the domain.
          pattern: '[0-9]{12}'
          type: string
        Description:
          description: A text description of the repository.
          type: string
          maxLength: 1000
        Arn:
          description: The ARN of the repository.
          type: string
          minLength: 1
          maxLength: 2048
        ExternalConnections:
          description: A list of external connections associated with the repository.
          type: array
          items:
            type: string
        Upstreams:
          description: A list of upstream repositories associated with the repository.
          type: array
          items:
            type: string
        PermissionsPolicyDocument:
          description: The access control resource policy on the provided repository.
          type: object
          minLength: 2
          maxLength: 5120
        Tags:
          type: array
          description: An array of key-value pairs to apply to this resource.
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - RepositoryName
        - DomainName
      x-stackql-resource-name: repository
      description: The resource schema to create a CodeArtifact repository.
      x-type-name: AWS::CodeArtifact::Repository
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - RepositoryName
        - DomainName
        - DomainOwner
      x-read-only-properties:
        - Name
        - DomainOwner
        - Arn
      x-required-properties:
        - RepositoryName
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - codeartifact:ListTagsForResource
          - codeartifact:UntagResource
          - codeartifact:TagResource
      x-required-permissions:
        create:
          - codeartifact:CreateRepository
          - codeartifact:DescribeRepository
          - codeartifact:PutRepositoryPermissionsPolicy
          - codeartifact:GetRepositoryPermissionsPolicy
          - codeartifact:AssociateExternalConnection
          - codeartifact:AssociateWithDownstreamRepository
          - codeartifact:TagResource
          - codeartifact:ListTagsForResource
        read:
          - codeartifact:DescribeRepository
          - codeartifact:GetRepositoryPermissionsPolicy
          - codeartifact:ListTagsForResource
        update:
          - codeartifact:PutRepositoryPermissionsPolicy
          - codeartifact:GetRepositoryPermissionsPolicy
          - codeartifact:DeleteRepositoryPermissionsPolicy
          - codeartifact:AssociateExternalConnection
          - codeartifact:DisassociateExternalConnection
          - codeartifact:UpdateRepository
          - codeartifact:DescribeRepository
          - codeartifact:AssociateWithDownstreamRepository
          - codeartifact:TagResource
          - codeartifact:UntagResource
          - codeartifact:ListTagsForResource
        delete:
          - codeartifact:DeleteRepository
          - codeartifact:DescribeRepository
        list:
          - codeartifact:ListRepositories
    CreateDomainRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              description: The name of the domain.
              type: string
              pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
              minLength: 2
              maxLength: 50
            Name:
              description: The name of the domain. This field is used for GetAtt
              type: string
              pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
              minLength: 2
              maxLength: 50
            Owner:
              description: The 12-digit account ID of the AWS account that owns the domain. This field is used for GetAtt
              pattern: '[0-9]{12}'
              type: string
            EncryptionKey:
              description: The ARN of an AWS Key Management Service (AWS KMS) key associated with a domain.
              type: string
            PermissionsPolicyDocument:
              description: The access control resource policy on the provided domain.
              type: object
              minLength: 2
              maxLength: 5120
            Tags:
              type: array
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
            Arn:
              description: The ARN of the domain.
              type: string
              minLength: 1
              maxLength: 2048
          x-stackQL-stringOnly: true
      x-title: CreateDomainRequest
      type: object
      required: []
    CreatePackageGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              description: The name of the domain that contains the package group.
              type: string
              pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
              minLength: 2
              maxLength: 50
            DomainOwner:
              description: The 12-digit account ID of the AWS account that owns the domain.
              pattern: '[0-9]{12}'
              type: string
            Pattern:
              description: The package group pattern that is used to gather packages.
              type: string
              minLength: 2
              maxLength: 520
            ContactInfo:
              description: The contact info of the package group.
              type: string
              maxLength: 1000
            Description:
              description: The text description of the package group.
              type: string
              maxLength: 1000
            OriginConfiguration:
              description: The package origin configuration of the package group.
              type: object
              $ref: '#/components/schemas/OriginConfiguration'
            Tags:
              type: array
              description: An array of key-value pairs to apply to the package group.
              items:
                $ref: '#/components/schemas/Tag'
            Arn:
              description: The ARN of the package group.
              type: string
              minLength: 1
              maxLength: 2048
          x-stackQL-stringOnly: true
      x-title: CreatePackageGroupRequest
      type: object
      required: []
    CreateRepositoryRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RepositoryName:
              description: The name of the repository.
              type: string
              pattern: ^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$
              minLength: 2
              maxLength: 100
            Name:
              description: The name of the repository. This is used for GetAtt
              type: string
              pattern: ^([A-Za-z0-9][A-Za-z0-9._\-]{1,99})$
              minLength: 2
              maxLength: 100
            DomainName:
              description: The name of the domain that contains the repository.
              type: string
              pattern: ^([a-z][a-z0-9\-]{0,48}[a-z0-9])$
              minLength: 2
              maxLength: 50
            DomainOwner:
              description: The 12-digit account ID of the AWS account that owns the domain.
              pattern: '[0-9]{12}'
              type: string
            Description:
              description: A text description of the repository.
              type: string
              maxLength: 1000
            Arn:
              description: The ARN of the repository.
              type: string
              minLength: 1
              maxLength: 2048
            ExternalConnections:
              description: A list of external connections associated with the repository.
              type: array
              items:
                type: string
            Upstreams:
              description: A list of upstream repositories associated with the repository.
              type: array
              items:
                type: string
            PermissionsPolicyDocument:
              description: The access control resource policy on the provided repository.
              type: object
              minLength: 2
              maxLength: 5120
            Tags:
              type: array
              description: An array of key-value pairs to apply to this resource.
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateRepositoryRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    domains:
      name: domains
      id: aws.codeartifact.domains
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::CodeArtifact::Domain
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/domains/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.Owner') as owner,
              JSON_EXTRACT(Properties, '$.EncryptionKey') as encryption_key,
              JSON_EXTRACT(Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.Owner') as owner,
                JSON_EXTRACT(detail.Properties, '$.EncryptionKey') as encryption_key,
                JSON_EXTRACT(detail.Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CodeArtifact::Domain'
                AND detail.data__TypeName = 'AWS::CodeArtifact::Domain'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'Owner') as owner,
                  json_extract_path_text(Properties, 'EncryptionKey') as encryption_key,
                  json_extract_path_text(Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'Owner') as owner,
                    json_extract_path_text(detail.Properties, 'EncryptionKey') as encryption_key,
                    json_extract_path_text(detail.Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CodeArtifact::Domain'
                    AND detail.data__TypeName = 'AWS::CodeArtifact::Domain'
                    AND listing.region = 'us-east-1'
    domains_list_only:
      name: domains_list_only
      id: aws.codeartifact.domains_list_only
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::CodeArtifact::Domain
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Domain'
                AND region = 'us-east-1'
    domain_tags:
      name: domain_tags
      id: aws.codeartifact.domain_tags
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::CodeArtifact::Domain
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.Owner') as owner,
              JSON_EXTRACT(detail.Properties, '$.EncryptionKey') as encryption_key,
              JSON_EXTRACT(detail.Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CodeArtifact::Domain'
              AND detail.data__TypeName = 'AWS::CodeArtifact::Domain'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'Owner') as owner,
                json_extract_path_text(detail.Properties, 'EncryptionKey') as encryption_key,
                json_extract_path_text(detail.Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CodeArtifact::Domain'
                AND detail.data__TypeName = 'AWS::CodeArtifact::Domain'
                AND listing.region = 'us-east-1'
    package_groups:
      name: package_groups
      id: aws.codeartifact.package_groups
      x-cfn-schema-name: PackageGroup
      x-cfn-type-name: AWS::CodeArtifact::PackageGroup
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__PackageGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::PackageGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::PackageGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::PackageGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/package_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/package_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/package_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainOwner') as domain_owner,
              JSON_EXTRACT(Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(Properties, '$.ContactInfo') as contact_info,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.OriginConfiguration') as origin_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(detail.Properties, '$.DomainOwner') as domain_owner,
                JSON_EXTRACT(detail.Properties, '$.Pattern') as pattern,
                JSON_EXTRACT(detail.Properties, '$.ContactInfo') as contact_info,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.OriginConfiguration') as origin_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND detail.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'DomainOwner') as domain_owner,
                  json_extract_path_text(Properties, 'Pattern') as pattern,
                  json_extract_path_text(Properties, 'ContactInfo') as contact_info,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'OriginConfiguration') as origin_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'Arn') as arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                    json_extract_path_text(detail.Properties, 'DomainOwner') as domain_owner,
                    json_extract_path_text(detail.Properties, 'Pattern') as pattern,
                    json_extract_path_text(detail.Properties, 'ContactInfo') as contact_info,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'OriginConfiguration') as origin_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'Arn') as arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                    AND detail.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                    AND listing.region = 'us-east-1'
    package_groups_list_only:
      name: package_groups_list_only
      id: aws.codeartifact.package_groups_list_only
      x-cfn-schema-name: PackageGroup
      x-cfn-type-name: AWS::CodeArtifact::PackageGroup
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND region = 'us-east-1'
    package_group_tags:
      name: package_group_tags
      id: aws.codeartifact.package_group_tags
      x-cfn-schema-name: PackageGroup
      x-cfn-type-name: AWS::CodeArtifact::PackageGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(detail.Properties, '$.DomainOwner') as domain_owner,
              JSON_EXTRACT(detail.Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(detail.Properties, '$.ContactInfo') as contact_info,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.OriginConfiguration') as origin_configuration,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
              AND detail.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                json_extract_path_text(detail.Properties, 'DomainOwner') as domain_owner,
                json_extract_path_text(detail.Properties, 'Pattern') as pattern,
                json_extract_path_text(detail.Properties, 'ContactInfo') as contact_info,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'OriginConfiguration') as origin_configuration,
                json_extract_path_text(detail.Properties, 'Arn') as arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND detail.data__TypeName = 'AWS::CodeArtifact::PackageGroup'
                AND listing.region = 'us-east-1'
    repositories:
      name: repositories
      id: aws.codeartifact.repositories
      x-cfn-schema-name: Repository
      x-cfn-type-name: AWS::CodeArtifact::Repository
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Repository&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::Repository"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::Repository"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CodeArtifact::Repository"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/repositories/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RepositoryName') as repository_name,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainOwner') as domain_owner,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ExternalConnections') as external_connections,
              JSON_EXTRACT(Properties, '$.Upstreams') as upstreams,
              JSON_EXTRACT(Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.RepositoryName') as repository_name,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(detail.Properties, '$.DomainOwner') as domain_owner,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ExternalConnections') as external_connections,
                JSON_EXTRACT(detail.Properties, '$.Upstreams') as upstreams,
                JSON_EXTRACT(detail.Properties, '$.PermissionsPolicyDocument') as permissions_policy_document,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::CodeArtifact::Repository'
                AND detail.data__TypeName = 'AWS::CodeArtifact::Repository'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'RepositoryName') as repository_name,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'DomainOwner') as domain_owner,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ExternalConnections') as external_connections,
                  json_extract_path_text(Properties, 'Upstreams') as upstreams,
                  json_extract_path_text(Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'RepositoryName') as repository_name,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                    json_extract_path_text(detail.Properties, 'DomainOwner') as domain_owner,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ExternalConnections') as external_connections,
                    json_extract_path_text(detail.Properties, 'Upstreams') as upstreams,
                    json_extract_path_text(detail.Properties, 'PermissionsPolicyDocument') as permissions_policy_document,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::CodeArtifact::Repository'
                    AND detail.data__TypeName = 'AWS::CodeArtifact::Repository'
                    AND listing.region = 'us-east-1'
    repositories_list_only:
      name: repositories_list_only
      id: aws.codeartifact.repositories_list_only
      x-cfn-schema-name: Repository
      x-cfn-type-name: AWS::CodeArtifact::Repository
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CodeArtifact::Repository'
                AND region = 'us-east-1'
    repository_tags:
      name: repository_tags
      id: aws.codeartifact.repository_tags
      x-cfn-schema-name: Repository
      x-cfn-type-name: AWS::CodeArtifact::Repository
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.RepositoryName') as repository_name,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(detail.Properties, '$.DomainOwner') as domain_owner,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.ExternalConnections') as external_connections,
              JSON_EXTRACT(detail.Properties, '$.Upstreams') as upstreams,
              JSON_EXTRACT(detail.Properties, '$.PermissionsPolicyDocument') as permissions_policy_document
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::CodeArtifact::Repository'
              AND detail.data__TypeName = 'AWS::CodeArtifact::Repository'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'RepositoryName') as repository_name,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                json_extract_path_text(detail.Properties, 'DomainOwner') as domain_owner,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'ExternalConnections') as external_connections,
                json_extract_path_text(detail.Properties, 'Upstreams') as upstreams,
                json_extract_path_text(detail.Properties, 'PermissionsPolicyDocument') as permissions_policy_document
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::CodeArtifact::Repository'
                AND detail.data__TypeName = 'AWS::CodeArtifact::Repository'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDomain
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__PackageGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreatePackageGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreatePackageGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Repository&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRepository
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRepositoryRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
