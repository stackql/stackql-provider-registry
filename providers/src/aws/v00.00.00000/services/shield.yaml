openapi: 3.0.0
info:
  title: Shield
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    DRTAccess:
      type: object
      properties:
        AccountId:
          type: string
        LogBucketList:
          description: Authorizes the Shield Response Team (SRT) to access the specified Amazon S3 bucket containing log data such as Application Load Balancer access logs, CloudFront logs, or logs from third party sources. You can associate up to 10 Amazon S3 buckets with your subscription.
          type: array
          x-insertionOrder: false
          minItems: 0
          maxItems: 10
          items:
            type: string
            minLength: 3
            maxLength: 63
        RoleArn:
          description: Authorizes the Shield Response Team (SRT) using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks. This enables the SRT to inspect your AWS WAF configuration and create or update AWS WAF rules and web ACLs.
          type: string
          maxLength: 2048
      required:
        - RoleArn
      x-stackql-resource-name: drt_access
      description: Config the role and list of Amazon S3 log buckets used by the Shield Response Team (SRT) to access your AWS account while assisting with attack mitigation.
      x-type-name: AWS::Shield::DRTAccess
      x-stackql-primary-identifier:
        - AccountId
      x-read-only-properties:
        - AccountId
      x-required-properties:
        - RoleArn
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - shield:DescribeDRTAccess
          - shield:AssociateDRTLogBucket
          - shield:AssociateDRTRole
          - iam:PassRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
        delete:
          - shield:DescribeDRTAccess
          - shield:DisassociateDRTLogBucket
          - shield:DisassociateDRTRole
          - iam:PassRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:DeleteBucketPolicy
        read:
          - shield:DescribeDRTAccess
        update:
          - shield:DescribeDRTAccess
          - shield:AssociateDRTLogBucket
          - shield:AssociateDRTRole
          - shield:DisassociateDRTLogBucket
          - shield:DisassociateDRTRole
          - iam:PassRole
          - iam:GetRole
          - iam:ListAttachedRolePolicies
          - s3:GetBucketPolicy
          - s3:PutBucketPolicy
          - s3:DeleteBucketPolicy
        list:
          - shield:DescribeDRTAccess
    EmergencyContact:
      description: An emergency contact is used by Shield Response Team (SRT) to contact you for escalations to the SRT and to initiate proactive customer support. An emergency contact requires an email address.
      type: object
      additionalProperties: false
      required:
        - EmailAddress
      properties:
        ContactNotes:
          description: Additional notes regarding the contact.
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^[\w\s\.\-,:/()+@]*$
        EmailAddress:
          description: The email address for the contact.
          type: string
          minLength: 1
          maxLength: 150
          pattern: ^\S+@\S+\.\S+$
        PhoneNumber:
          description: The phone number for the contact
          type: string
          minLength: 1
          maxLength: 16
          pattern: ^\+[1-9]\d{1,14}$
    ProactiveEngagement:
      type: object
      properties:
        AccountId:
          type: string
        ProactiveEngagementStatus:
          description: |-
            If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
            If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
          type: string
          enum:
            - ENABLED
            - DISABLED
        EmergencyContactList:
          description: |-
            A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
            To enable proactive engagement, the contact list must include at least one phone number.
          type: array
          x-insertionOrder: false
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/EmergencyContact'
      required:
        - ProactiveEngagementStatus
        - EmergencyContactList
      x-stackql-resource-name: proactive_engagement
      description: Authorizes the Shield Response Team (SRT) to use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
      x-type-name: AWS::Shield::ProactiveEngagement
      x-stackql-primary-identifier:
        - AccountId
      x-read-only-properties:
        - AccountId
      x-required-properties:
        - ProactiveEngagementStatus
        - EmergencyContactList
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
          - shield:AssociateProactiveEngagementDetails
          - shield:UpdateEmergencyContactSettings
          - shield:EnableProactiveEngagement
        delete:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
          - shield:UpdateEmergencyContactSettings
          - shield:DisableProactiveEngagement
        read:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
        update:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
          - shield:UpdateEmergencyContactSettings
          - shield:EnableProactiveEngagement
          - shield:DisableProactiveEngagement
        list:
          - shield:DescribeSubscription
          - shield:DescribeEmergencyContactSettings
    Tag:
      description: >-
        A tag associated with an AWS resource. Tags are key:value pairs that you can use to categorize and manage your resources, for purposes like billing or other management. Typically, the tag key represents a category, such as "environment", and the tag value represents a specific value within that category, such as "test," "development," or "production". Or you might set the tag key to "customer" and the value to the customer name or ID. You can specify one or more tags to add to each AWS
        resource, up to 50 tags for a resource.
      type: object
      additionalProperties: false
      required:
        - Key
        - Value
      properties:
        Key:
          description: Part of the key:value pair that defines a tag. You can use a tag key to describe a category of information, such as "customer." Tag keys are case-sensitive.
          type: string
          minLength: 1
          maxLength: 128
        Value:
          description: Part of the key:value pair that defines a tag. You can use a tag value to describe a specific value within a category, such as "companyA" or "companyB." Tag values are case-sensitive.
          type: string
          minLength: 0
          maxLength: 256
    ApplicationLayerAutomaticResponseConfiguration:
      description: The automatic application layer DDoS mitigation settings for a Protection. This configuration determines whether Shield Advanced automatically manages rules in the web ACL in order to respond to application layer events that Shield Advanced determines to be DDoS attacks.
      type: object
      additionalProperties: false
      required:
        - Action
        - Status
      properties:
        Action:
          type: object
          description: Specifies the action setting that Shield Advanced should use in the AWS WAF rules that it creates on behalf of the protected resource in response to DDoS attacks. You specify this as part of the configuration for the automatic application layer DDoS mitigation feature, when you enable or update automatic mitigation. Shield Advanced creates the AWS WAF rules in a Shield Advanced-managed rule group, inside the web ACL that you have associated with the resource.
          oneOf:
            - type: object
              additionalProperties: false
              properties:
                Count:
                  description: |-
                    Specifies that Shield Advanced should configure its AWS WAF rules with the AWS WAF `Count` action.
                    You must specify exactly one action, either `Block` or `Count`.
                  type: object
                  additionalProperties: false
            - type: object
              additionalProperties: false
              properties:
                Block:
                  description: |-
                    Specifies that Shield Advanced should configure its AWS WAF rules with the AWS WAF `Block` action.
                    You must specify exactly one action, either `Block` or `Count`.
                  type: object
                  additionalProperties: false
        Status:
          description: Indicates whether automatic application layer DDoS mitigation is enabled for the protection.
          type: string
          enum:
            - ENABLED
            - DISABLED
    Protection:
      type: object
      properties:
        ProtectionId:
          description: The unique identifier (ID) of the protection.
          type: string
        ProtectionArn:
          description: The ARN (Amazon Resource Name) of the protection.
          type: string
        Name:
          description: Friendly name for the Protection.
          type: string
          minLength: 1
          maxLength: 128
          pattern: '[ a-zA-Z0-9_\.\-]*'
        ResourceArn:
          description: The ARN (Amazon Resource Name) of the resource to be protected.
          type: string
          minLength: 1
          maxLength: 2048
        HealthCheckArns:
          description: The Amazon Resource Names (ARNs) of the health check to associate with the protection.
          type: array
          x-insertionOrder: false
          maxItems: 1
          items:
            type: string
            minLength: 1
            maxLength: 2048
        ApplicationLayerAutomaticResponseConfiguration:
          $ref: '#/components/schemas/ApplicationLayerAutomaticResponseConfiguration'
        Tags:
          description: One or more tag key-value pairs for the Protection object.
          type: array
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
        - ResourceArn
      x-stackql-resource-name: protection
      description: Enables AWS Shield Advanced for a specific AWS resource. The resource can be an Amazon CloudFront distribution, Amazon Route 53 hosted zone, AWS Global Accelerator standard accelerator, Elastic IP Address, Application Load Balancer, or a Classic Load Balancer. You can protect Amazon EC2 instances and Network Load Balancers by association with protected Amazon EC2 Elastic IP addresses.
      x-type-name: AWS::Shield::Protection
      x-stackql-primary-identifier:
        - ProtectionArn
      x-create-only-properties:
        - Name
        - ResourceArn
      x-read-only-properties:
        - ProtectionId
        - ProtectionArn
      x-required-properties:
        - Name
        - ResourceArn
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - shield:CreateProtection
          - shield:DeleteProtection
          - shield:DescribeProtection
          - shield:ListProtections
          - shield:EnableApplicationLayerAutomaticResponse
          - shield:AssociateHealthCheck
          - shield:TagResource
          - ec2:DescribeAddresses
          - elasticloadbalancing:DescribeLoadBalancers
          - route53:GetHealthCheck
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
        delete:
          - shield:DeleteProtection
          - shield:UntagResource
        read:
          - shield:DescribeProtection
          - shield:ListTagsForResource
        update:
          - shield:DescribeProtection
          - shield:AssociateHealthCheck
          - shield:DisassociateHealthCheck
          - shield:EnableApplicationLayerAutomaticResponse
          - shield:UpdateApplicationLayerAutomaticResponse
          - shield:DisableApplicationLayerAutomaticResponse
          - shield:ListTagsForResource
          - shield:TagResource
          - shield:UntagResource
          - route53:GetHealthCheck
          - iam:GetRole
          - iam:CreateServiceLinkedRole
          - wafv2:GetWebACLForResource
          - wafv2:GetWebACL
        list:
          - shield:ListProtections
    ProtectionGroup:
      type: object
      properties:
        ProtectionGroupId:
          description: The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
          type: string
          pattern: '[a-zA-Z0-9\-]*'
          minLength: 1
          maxLength: 36
        ProtectionGroupArn:
          description: The ARN (Amazon Resource Name) of the protection group.
          type: string
        Aggregation:
          description: |-
            Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
            * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
            * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
            * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
          type: string
          enum:
            - SUM
            - MEAN
            - MAX
        Pattern:
          description: The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
          type: string
          enum:
            - ALL
            - ARBITRARY
            - BY_RESOURCE_TYPE
        Members:
          description: The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
          type: array
          x-insertionOrder: false
          maxItems: 10000
          items:
            type: string
            minLength: 1
            maxLength: 2048
        ResourceType:
          description: The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
          type: string
          enum:
            - CLOUDFRONT_DISTRIBUTION
            - ROUTE_53_HOSTED_ZONE
            - ELASTIC_IP_ALLOCATION
            - CLASSIC_LOAD_BALANCER
            - APPLICATION_LOAD_BALANCER
            - GLOBAL_ACCELERATOR
        Tags:
          description: One or more tag key-value pairs for the Protection object.
          type: array
          x-insertionOrder: false
          maxItems: 200
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Aggregation
        - Pattern
        - ProtectionGroupId
      x-stackql-resource-name: protection_group
      description: A grouping of protected resources so they can be handled as a collective. This resource grouping improves the accuracy of detection and reduces false positives.
      x-type-name: AWS::Shield::ProtectionGroup
      x-stackql-primary-identifier:
        - ProtectionGroupArn
      x-create-only-properties:
        - ProtectionGroupId
      x-read-only-properties:
        - ProtectionGroupArn
      x-required-properties:
        - Aggregation
        - Pattern
        - ProtectionGroupId
      x-replacement-strategy: delete_then_create
      x-tagging:
        taggable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: false
        permissions:
          - shield:ListTagsForResource
          - shield:UntagResource
          - shield:TagResource
      x-required-permissions:
        create:
          - shield:CreateProtectionGroup
          - shield:TagResource
        delete:
          - shield:DeleteProtectionGroup
          - shield:UntagResource
        read:
          - shield:DescribeProtectionGroup
          - shield:ListTagsForResource
        update:
          - shield:UpdateProtectionGroup
          - shield:ListTagsForResource
          - shield:TagResource
          - shield:UntagResource
        list:
          - shield:ListProtectionGroups
    CreateDRTAccessRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AccountId:
              type: string
            LogBucketList:
              description: Authorizes the Shield Response Team (SRT) to access the specified Amazon S3 bucket containing log data such as Application Load Balancer access logs, CloudFront logs, or logs from third party sources. You can associate up to 10 Amazon S3 buckets with your subscription.
              type: array
              x-insertionOrder: false
              minItems: 0
              maxItems: 10
              items:
                type: string
                minLength: 3
                maxLength: 63
            RoleArn:
              description: Authorizes the Shield Response Team (SRT) using the specified role, to access your AWS account to assist with DDoS attack mitigation during potential attacks. This enables the SRT to inspect your AWS WAF configuration and create or update AWS WAF rules and web ACLs.
              type: string
              maxLength: 2048
          x-stackQL-stringOnly: true
      x-title: CreateDRTAccessRequest
      type: object
      required: []
    CreateProactiveEngagementRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AccountId:
              type: string
            ProactiveEngagementStatus:
              description: |-
                If `ENABLED`, the Shield Response Team (SRT) will use email and phone to notify contacts about escalations to the SRT and to initiate proactive customer support.
                If `DISABLED`, the SRT will not proactively notify contacts about escalations or to initiate proactive customer support.
              type: string
              enum:
                - ENABLED
                - DISABLED
            EmergencyContactList:
              description: |-
                A list of email addresses and phone numbers that the Shield Response Team (SRT) can use to contact you for escalations to the SRT and to initiate proactive customer support.
                To enable proactive engagement, the contact list must include at least one phone number.
              type: array
              x-insertionOrder: false
              minItems: 1
              maxItems: 10
              items:
                $ref: '#/components/schemas/EmergencyContact'
          x-stackQL-stringOnly: true
      x-title: CreateProactiveEngagementRequest
      type: object
      required: []
    CreateProtectionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ProtectionId:
              description: The unique identifier (ID) of the protection.
              type: string
            ProtectionArn:
              description: The ARN (Amazon Resource Name) of the protection.
              type: string
            Name:
              description: Friendly name for the Protection.
              type: string
              minLength: 1
              maxLength: 128
              pattern: '[ a-zA-Z0-9_\.\-]*'
            ResourceArn:
              description: The ARN (Amazon Resource Name) of the resource to be protected.
              type: string
              minLength: 1
              maxLength: 2048
            HealthCheckArns:
              description: The Amazon Resource Names (ARNs) of the health check to associate with the protection.
              type: array
              x-insertionOrder: false
              maxItems: 1
              items:
                type: string
                minLength: 1
                maxLength: 2048
            ApplicationLayerAutomaticResponseConfiguration:
              $ref: '#/components/schemas/ApplicationLayerAutomaticResponseConfiguration'
            Tags:
              description: One or more tag key-value pairs for the Protection object.
              type: array
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateProtectionRequest
      type: object
      required: []
    CreateProtectionGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ProtectionGroupId:
              description: The name of the protection group. You use this to identify the protection group in lists and to manage the protection group, for example to update, delete, or describe it.
              type: string
              pattern: '[a-zA-Z0-9\-]*'
              minLength: 1
              maxLength: 36
            ProtectionGroupArn:
              description: The ARN (Amazon Resource Name) of the protection group.
              type: string
            Aggregation:
              description: |-
                Defines how AWS Shield combines resource data for the group in order to detect, mitigate, and report events.
                * Sum - Use the total traffic across the group. This is a good choice for most cases. Examples include Elastic IP addresses for EC2 instances that scale manually or automatically.
                * Mean - Use the average of the traffic across the group. This is a good choice for resources that share traffic uniformly. Examples include accelerators and load balancers.
                * Max - Use the highest traffic from each resource. This is useful for resources that don't share traffic and for resources that share that traffic in a non-uniform way. Examples include Amazon CloudFront and origin resources for CloudFront distributions.
              type: string
              enum:
                - SUM
                - MEAN
                - MAX
            Pattern:
              description: The criteria to use to choose the protected resources for inclusion in the group. You can include all resources that have protections, provide a list of resource Amazon Resource Names (ARNs), or include all resources of a specified resource type.
              type: string
              enum:
                - ALL
                - ARBITRARY
                - BY_RESOURCE_TYPE
            Members:
              description: The Amazon Resource Names (ARNs) of the resources to include in the protection group. You must set this when you set `Pattern` to `ARBITRARY` and you must not set it for any other `Pattern` setting.
              type: array
              x-insertionOrder: false
              maxItems: 10000
              items:
                type: string
                minLength: 1
                maxLength: 2048
            ResourceType:
              description: The resource type to include in the protection group. All protected resources of this type are included in the protection group. Newly protected resources of this type are automatically added to the group. You must set this when you set `Pattern` to `BY_RESOURCE_TYPE` and you must not set it for any other `Pattern` setting.
              type: string
              enum:
                - CLOUDFRONT_DISTRIBUTION
                - ROUTE_53_HOSTED_ZONE
                - ELASTIC_IP_ALLOCATION
                - CLASSIC_LOAD_BALANCER
                - APPLICATION_LOAD_BALANCER
                - GLOBAL_ACCELERATOR
            Tags:
              description: One or more tag key-value pairs for the Protection object.
              type: array
              x-insertionOrder: false
              maxItems: 200
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateProtectionGroupRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    drt_accesses:
      name: drt_accesses
      id: aws.shield.drt_accesses
      x-cfn-schema-name: DRTAccess
      x-cfn-type-name: AWS::Shield::DRTAccess
      x-identifiers:
        - AccountId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DRTAccess&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::DRTAccess"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::DRTAccess"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::DRTAccess"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/drt_accesses/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/drt_accesses/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/drt_accesses/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.LogBucketList') as log_bucket_list,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::DRTAccess'
              AND data__Identifier = '<AccountId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AccountId') as account_id,
                JSON_EXTRACT(detail.Properties, '$.LogBucketList') as log_bucket_list,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Shield::DRTAccess'
                AND detail.data__TypeName = 'AWS::Shield::DRTAccess'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AccountId') as account_id,
                  json_extract_path_text(Properties, 'LogBucketList') as log_bucket_list,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::DRTAccess'
                  AND data__Identifier = '<AccountId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AccountId') as account_id,
                    json_extract_path_text(detail.Properties, 'LogBucketList') as log_bucket_list,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Shield::DRTAccess'
                    AND detail.data__TypeName = 'AWS::Shield::DRTAccess'
                    AND listing.region = 'us-east-1'
    drt_accesses_list_only:
      name: drt_accesses_list_only
      id: aws.shield.drt_accesses_list_only
      x-cfn-schema-name: DRTAccess
      x-cfn-type-name: AWS::Shield::DRTAccess
      x-identifiers:
        - AccountId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::DRTAccess'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountId') as account_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::DRTAccess'
                AND region = 'us-east-1'
    proactive_engagements:
      name: proactive_engagements
      id: aws.shield.proactive_engagements
      x-cfn-schema-name: ProactiveEngagement
      x-cfn-type-name: AWS::Shield::ProactiveEngagement
      x-identifiers:
        - AccountId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ProactiveEngagement&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::ProactiveEngagement"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::ProactiveEngagement"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::ProactiveEngagement"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/proactive_engagements/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/proactive_engagements/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/proactive_engagements/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id,
              JSON_EXTRACT(Properties, '$.ProactiveEngagementStatus') as proactive_engagement_status,
              JSON_EXTRACT(Properties, '$.EmergencyContactList') as emergency_contact_list
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
              AND data__Identifier = '<AccountId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AccountId') as account_id,
                JSON_EXTRACT(detail.Properties, '$.ProactiveEngagementStatus') as proactive_engagement_status,
                JSON_EXTRACT(detail.Properties, '$.EmergencyContactList') as emergency_contact_list
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Shield::ProactiveEngagement'
                AND detail.data__TypeName = 'AWS::Shield::ProactiveEngagement'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AccountId') as account_id,
                  json_extract_path_text(Properties, 'ProactiveEngagementStatus') as proactive_engagement_status,
                  json_extract_path_text(Properties, 'EmergencyContactList') as emergency_contact_list
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
                  AND data__Identifier = '<AccountId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AccountId') as account_id,
                    json_extract_path_text(detail.Properties, 'ProactiveEngagementStatus') as proactive_engagement_status,
                    json_extract_path_text(detail.Properties, 'EmergencyContactList') as emergency_contact_list
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Shield::ProactiveEngagement'
                    AND detail.data__TypeName = 'AWS::Shield::ProactiveEngagement'
                    AND listing.region = 'us-east-1'
    proactive_engagements_list_only:
      name: proactive_engagements_list_only
      id: aws.shield.proactive_engagements_list_only
      x-cfn-schema-name: ProactiveEngagement
      x-cfn-type-name: AWS::Shield::ProactiveEngagement
      x-identifiers:
        - AccountId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AccountId') as account_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'AccountId') as account_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProactiveEngagement'
                AND region = 'us-east-1'
    protections:
      name: protections
      id: aws.shield.protections
      x-cfn-schema-name: Protection
      x-cfn-type-name: AWS::Shield::Protection
      x-identifiers:
        - ProtectionArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Protection&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::Protection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::Protection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::Protection"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/protections/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/protections/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/protections/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ProtectionId') as protection_id,
              JSON_EXTRACT(Properties, '$.ProtectionArn') as protection_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.HealthCheckArns') as health_check_arns,
              JSON_EXTRACT(Properties, '$.ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::Protection'
              AND data__Identifier = '<ProtectionArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ProtectionId') as protection_id,
                JSON_EXTRACT(detail.Properties, '$.ProtectionArn') as protection_arn,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ResourceArn') as resource_arn,
                JSON_EXTRACT(detail.Properties, '$.HealthCheckArns') as health_check_arns,
                JSON_EXTRACT(detail.Properties, '$.ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Shield::Protection'
                AND detail.data__TypeName = 'AWS::Shield::Protection'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ProtectionId') as protection_id,
                  json_extract_path_text(Properties, 'ProtectionArn') as protection_arn,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ResourceArn') as resource_arn,
                  json_extract_path_text(Properties, 'HealthCheckArns') as health_check_arns,
                  json_extract_path_text(Properties, 'ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::Protection'
                  AND data__Identifier = '<ProtectionArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ProtectionId') as protection_id,
                    json_extract_path_text(detail.Properties, 'ProtectionArn') as protection_arn,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ResourceArn') as resource_arn,
                    json_extract_path_text(detail.Properties, 'HealthCheckArns') as health_check_arns,
                    json_extract_path_text(detail.Properties, 'ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Shield::Protection'
                    AND detail.data__TypeName = 'AWS::Shield::Protection'
                    AND listing.region = 'us-east-1'
    protections_list_only:
      name: protections_list_only
      id: aws.shield.protections_list_only
      x-cfn-schema-name: Protection
      x-cfn-type-name: AWS::Shield::Protection
      x-identifiers:
        - ProtectionArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProtectionArn') as protection_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::Protection'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProtectionArn') as protection_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::Protection'
                AND region = 'us-east-1'
    protection_tags:
      name: protection_tags
      id: aws.shield.protection_tags
      x-cfn-schema-name: Protection
      x-cfn-type-name: AWS::Shield::Protection
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ProtectionId') as protection_id,
              JSON_EXTRACT(detail.Properties, '$.ProtectionArn') as protection_arn,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(detail.Properties, '$.HealthCheckArns') as health_check_arns,
              JSON_EXTRACT(detail.Properties, '$.ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Shield::Protection'
              AND detail.data__TypeName = 'AWS::Shield::Protection'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ProtectionId') as protection_id,
                json_extract_path_text(detail.Properties, 'ProtectionArn') as protection_arn,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ResourceArn') as resource_arn,
                json_extract_path_text(detail.Properties, 'HealthCheckArns') as health_check_arns,
                json_extract_path_text(detail.Properties, 'ApplicationLayerAutomaticResponseConfiguration') as application_layer_automatic_response_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Shield::Protection'
                AND detail.data__TypeName = 'AWS::Shield::Protection'
                AND listing.region = 'us-east-1'
    protection_groups:
      name: protection_groups
      id: aws.shield.protection_groups
      x-cfn-schema-name: ProtectionGroup
      x-cfn-type-name: AWS::Shield::ProtectionGroup
      x-identifiers:
        - ProtectionGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ProtectionGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::ProtectionGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::ProtectionGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Shield::ProtectionGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/protection_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/protection_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/protection_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ProtectionGroupId') as protection_group_id,
              JSON_EXTRACT(Properties, '$.ProtectionGroupArn') as protection_group_arn,
              JSON_EXTRACT(Properties, '$.Aggregation') as aggregation,
              JSON_EXTRACT(Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(Properties, '$.Members') as members,
              JSON_EXTRACT(Properties, '$.ResourceType') as resource_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
              AND data__Identifier = '<ProtectionGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ProtectionGroupId') as protection_group_id,
                JSON_EXTRACT(detail.Properties, '$.ProtectionGroupArn') as protection_group_arn,
                JSON_EXTRACT(detail.Properties, '$.Aggregation') as aggregation,
                JSON_EXTRACT(detail.Properties, '$.Pattern') as pattern,
                JSON_EXTRACT(detail.Properties, '$.Members') as members,
                JSON_EXTRACT(detail.Properties, '$.ResourceType') as resource_type,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND detail.data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ProtectionGroupId') as protection_group_id,
                  json_extract_path_text(Properties, 'ProtectionGroupArn') as protection_group_arn,
                  json_extract_path_text(Properties, 'Aggregation') as aggregation,
                  json_extract_path_text(Properties, 'Pattern') as pattern,
                  json_extract_path_text(Properties, 'Members') as members,
                  json_extract_path_text(Properties, 'ResourceType') as resource_type,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
                  AND data__Identifier = '<ProtectionGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ProtectionGroupId') as protection_group_id,
                    json_extract_path_text(detail.Properties, 'ProtectionGroupArn') as protection_group_arn,
                    json_extract_path_text(detail.Properties, 'Aggregation') as aggregation,
                    json_extract_path_text(detail.Properties, 'Pattern') as pattern,
                    json_extract_path_text(detail.Properties, 'Members') as members,
                    json_extract_path_text(detail.Properties, 'ResourceType') as resource_type,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Shield::ProtectionGroup'
                    AND detail.data__TypeName = 'AWS::Shield::ProtectionGroup'
                    AND listing.region = 'us-east-1'
    protection_groups_list_only:
      name: protection_groups_list_only
      id: aws.shield.protection_groups_list_only
      x-cfn-schema-name: ProtectionGroup
      x-cfn-type-name: AWS::Shield::ProtectionGroup
      x-identifiers:
        - ProtectionGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ProtectionGroupArn') as protection_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ProtectionGroupArn') as protection_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND region = 'us-east-1'
    protection_group_tags:
      name: protection_group_tags
      id: aws.shield.protection_group_tags
      x-cfn-schema-name: ProtectionGroup
      x-cfn-type-name: AWS::Shield::ProtectionGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ProtectionGroupId') as protection_group_id,
              JSON_EXTRACT(detail.Properties, '$.ProtectionGroupArn') as protection_group_arn,
              JSON_EXTRACT(detail.Properties, '$.Aggregation') as aggregation,
              JSON_EXTRACT(detail.Properties, '$.Pattern') as pattern,
              JSON_EXTRACT(detail.Properties, '$.Members') as members,
              JSON_EXTRACT(detail.Properties, '$.ResourceType') as resource_type
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Shield::ProtectionGroup'
              AND detail.data__TypeName = 'AWS::Shield::ProtectionGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ProtectionGroupId') as protection_group_id,
                json_extract_path_text(detail.Properties, 'ProtectionGroupArn') as protection_group_arn,
                json_extract_path_text(detail.Properties, 'Aggregation') as aggregation,
                json_extract_path_text(detail.Properties, 'Pattern') as pattern,
                json_extract_path_text(detail.Properties, 'Members') as members,
                json_extract_path_text(detail.Properties, 'ResourceType') as resource_type
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND detail.data__TypeName = 'AWS::Shield::ProtectionGroup'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DRTAccess&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDRTAccess
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDRTAccessRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ProactiveEngagement&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProactiveEngagement
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProactiveEngagementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Protection&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProtection
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProtectionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ProtectionGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateProtectionGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateProtectionGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
