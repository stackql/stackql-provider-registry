openapi: 3.0.0
info:
  title: BCMDataExports
  version: 1.0.0
paths: {}
components:
  schemas:
    CompressionOption:
      type: string
      enum:
        - GZIP
        - PARQUET
    DataQuery:
      type: object
      properties:
        QueryStatement:
          type: string
          maxLength: 36000
          minLength: 1
          pattern: ^[\S\s]*$
        TableConfigurations:
          $ref: '#/components/schemas/TableConfigurations'
      required:
        - QueryStatement
      additionalProperties: false
    DestinationConfigurations:
      type: object
      properties:
        S3Destination:
          $ref: '#/components/schemas/S3Destination'
      required:
        - S3Destination
      additionalProperties: false
    Export:
      type: object
      properties:
        Export:
          $ref: '#/components/schemas/Export'
        ExportArn:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[-a-z0-9]*:[-a-z0-9]+:[-a-z0-9]*:[0-9]{12}:[-a-zA-Z0-9/:_]+$
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/ResourceTag'
          maxItems: 200
          minItems: 0
      required:
        - Export
      x-stackql-resource-name: export
      description: Definition of AWS::BCMDataExports::Export Resource Type
      x-type-name: AWS::BCMDataExports::Export
      x-documentation-url: https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DataExports_CreateExport.html#API_DataExports_CreateExport_RequestSyntax
      x-stackql-primary-identifier:
        - ExportArn
      x-create-only-properties:
        - Export/Name
        - Export/DataQuery/TableConfigurations
        - Export/RefreshCadence
      x-read-only-properties:
        - ExportArn
      x-required-properties:
        - Export
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - bcm-data-exports:CreateExport
          - bcm-data-exports:GetExport
          - bcm-data-exports:ListTagsForResource
          - bcm-data-exports:TagResource
          - cur:PutReportDefinition
        read:
          - bcm-data-exports:GetExport
          - bcm-data-exports:ListTagsForResource
        update:
          - bcm-data-exports:UpdateExport
          - bcm-data-exports:TagResource
          - bcm-data-exports:UntagResource
          - bcm-data-exports:GetExport
          - bcm-data-exports:ListTagsForResource
        delete:
          - bcm-data-exports:DeleteExport
        list:
          - bcm-data-exports:ListExports
    FormatOption:
      type: string
      enum:
        - TEXT_OR_CSV
        - PARQUET
    FrequencyOption:
      type: string
      enum:
        - SYNCHRONOUS
    OverwriteOption:
      type: string
      enum:
        - CREATE_NEW_REPORT
        - OVERWRITE_REPORT
    RefreshCadence:
      type: object
      properties:
        Frequency:
          $ref: '#/components/schemas/FrequencyOption'
      required:
        - Frequency
      additionalProperties: false
    ResourceTag:
      type: object
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
        Value:
          type: string
          maxLength: 256
          minLength: 0
      required:
        - Key
        - Value
      additionalProperties: false
    S3Destination:
      type: object
      properties:
        S3Bucket:
          type: string
          maxLength: 1024
          minLength: 0
          pattern: ^[\S\s]*$
        S3Prefix:
          type: string
          maxLength: 1024
          minLength: 0
          pattern: ^[\S\s]*$
        S3Region:
          type: string
          maxLength: 1024
          minLength: 0
          pattern: ^[\S\s]*$
        S3OutputConfigurations:
          $ref: '#/components/schemas/S3OutputConfigurations'
      required:
        - S3Bucket
        - S3OutputConfigurations
        - S3Prefix
        - S3Region
      additionalProperties: false
    S3OutputConfigurations:
      type: object
      properties:
        OutputType:
          $ref: '#/components/schemas/S3OutputType'
        Format:
          $ref: '#/components/schemas/FormatOption'
        Compression:
          $ref: '#/components/schemas/CompressionOption'
        Overwrite:
          $ref: '#/components/schemas/OverwriteOption'
      required:
        - Compression
        - Format
        - OutputType
        - Overwrite
      additionalProperties: false
    S3OutputType:
      type: string
      enum:
        - CUSTOM
    TableConfigurations:
      type: object
      x-patternProperties:
        ^[\S\s]*$:
          $ref: '#/components/schemas/TableProperties'
      additionalProperties: false
    TableProperties:
      type: object
      x-patternProperties:
        ^[\S\s]*$:
          type: string
          maxLength: 1024
          minLength: 0
          pattern: ^[\S\s]*$
      additionalProperties: false
  x-stackQL-resources:
    exports:
      name: exports
      id: aws.bcmdataexports.exports
      x-cfn-schema-name: Export
      x-type: list
      x-identifiers:
        - ExportArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ExportArn') as export_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::BCMDataExports::Export'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ExportArn') as export_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::BCMDataExports::Export'
                AND region = 'us-east-1'
    export:
      name: export
      id: aws.bcmdataexports.export
      x-cfn-schema-name: Export
      x-type: get
      x-identifiers:
        - ExportArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Export') as export,
              JSON_EXTRACT(Properties, '$.ExportArn') as export_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::BCMDataExports::Export'
              AND data__Identifier = '<ExportArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'Export') as export,
                json_extract_path_text(Properties, 'ExportArn') as export_arn,
                json_extract_path_text(Properties, 'Tags') as tags
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::BCMDataExports::Export'
                AND data__Identifier = '<ExportArn>'
                AND region = 'us-east-1'
