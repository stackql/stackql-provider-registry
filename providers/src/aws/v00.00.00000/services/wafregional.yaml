openapi: 3.0.0
info:
  title: WAFRegional
  version: 1.0.0
paths: {}
components:
  schemas:
    ByteMatchTuple:
      type: object
      additionalProperties: false
      properties:
        TargetString:
          type: string
        TargetStringBase64:
          type: string
        PositionalConstraint:
          type: string
        TextTransformation:
          type: string
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
      required:
        - PositionalConstraint
        - TextTransformation
        - FieldToMatch
    FieldToMatch:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Data:
          type: string
      required:
        - Type
    ByteMatchSet:
      type: object
      properties:
        Id:
          type: string
        ByteMatchTuples:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ByteMatchTuple'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: byte_match_set
      x-stackql-primaryIdentifier:
        - Id
    GeoMatchConstraint:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Value:
          type: string
      required:
        - Value
        - Type
    GeoMatchSet:
      type: object
      properties:
        Id:
          type: string
        GeoMatchConstraints:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/GeoMatchConstraint'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: geo_match_set
      x-stackql-primaryIdentifier:
        - Id
    IPSetDescriptor:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        Value:
          type: string
      required:
        - Value
        - Type
    IPSet:
      type: object
      properties:
        Id:
          type: string
        IPSetDescriptors:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/IPSetDescriptor'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: ip_set
      x-stackql-primaryIdentifier:
        - Id
    Predicate:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
        DataId:
          type: string
        Negated:
          type: boolean
      required:
        - Type
        - Negated
        - DataId
    RateBasedRule:
      type: object
      properties:
        Id:
          type: string
        MetricName:
          type: string
        RateLimit:
          type: integer
        MatchPredicates:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Predicate'
        RateKey:
          type: string
        Name:
          type: string
      required:
        - MetricName
        - RateLimit
        - RateKey
        - Name
      x-stackql-resource-name: rate_based_rule
      x-stackql-primaryIdentifier:
        - Id
    RegexPatternSet:
      type: object
      properties:
        Id:
          type: string
        RegexPatternStrings:
          type: array
          uniqueItems: false
          items:
            type: string
        Name:
          type: string
      required:
        - RegexPatternStrings
        - Name
      x-stackql-resource-name: regex_pattern_set
      x-stackql-primaryIdentifier:
        - Id
    Rule:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        Priority:
          type: integer
        RuleId:
          type: string
      required:
        - Action
        - Priority
        - RuleId
    SizeConstraint:
      type: object
      additionalProperties: false
      properties:
        ComparisonOperator:
          type: string
        Size:
          type: integer
        TextTransformation:
          type: string
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
      required:
        - ComparisonOperator
        - TextTransformation
        - Size
        - FieldToMatch
    SizeConstraintSet:
      type: object
      properties:
        Id:
          type: string
        SizeConstraints:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SizeConstraint'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: size_constraint_set
      x-stackql-primaryIdentifier:
        - Id
    SqlInjectionMatchTuple:
      type: object
      additionalProperties: false
      properties:
        TextTransformation:
          type: string
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
      required:
        - TextTransformation
        - FieldToMatch
    SqlInjectionMatchSet:
      type: object
      properties:
        Id:
          type: string
        SqlInjectionMatchTuples:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SqlInjectionMatchTuple'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: sql_injection_match_set
      x-stackql-primaryIdentifier:
        - Id
    Action:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
      required:
        - Type
    WebACL:
      type: object
      properties:
        Id:
          type: string
        MetricName:
          type: string
        DefaultAction:
          $ref: '#/components/schemas/Action'
        Rules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Rule'
        Name:
          type: string
      required:
        - DefaultAction
        - MetricName
        - Name
      x-stackql-resource-name: web_acl
      x-stackql-primaryIdentifier:
        - Id
    WebACLAssociation:
      type: object
      properties:
        Id:
          type: string
        ResourceArn:
          type: string
        WebACLId:
          type: string
      required:
        - ResourceArn
        - WebACLId
      x-stackql-resource-name: webacl_association
      x-stackql-primaryIdentifier:
        - Id
    XssMatchTuple:
      type: object
      additionalProperties: false
      properties:
        TextTransformation:
          type: string
        FieldToMatch:
          $ref: '#/components/schemas/FieldToMatch'
      required:
        - TextTransformation
        - FieldToMatch
    XssMatchSet:
      type: object
      properties:
        Id:
          type: string
        XssMatchTuples:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/XssMatchTuple'
        Name:
          type: string
      required:
        - Name
      x-stackql-resource-name: xss_match_set
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    byte_match_sets:
      name: byte_match_sets
      id: aws.wafregional.byte_match_sets
      x-cfn-schema-name: ByteMatchSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::ByteMatchSet'
    byte_match_set:
      name: byte_match_set
      id: aws.wafregional.byte_match_set
      x-cfn-schema-name: ByteMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ByteMatchTuples') as byte_match_tuples,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::ByteMatchSet'
    geo_match_sets:
      name: geo_match_sets
      id: aws.wafregional.geo_match_sets
      x-cfn-schema-name: GeoMatchSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::GeoMatchSet'
    geo_match_set:
      name: geo_match_set
      id: aws.wafregional.geo_match_set
      x-cfn-schema-name: GeoMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.GeoMatchConstraints') as geo_match_constraints,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::GeoMatchSet'
    ip_sets:
      name: ip_sets
      id: aws.wafregional.ip_sets
      x-cfn-schema-name: IPSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::IPSet'
    ip_set:
      name: ip_set
      id: aws.wafregional.ip_set
      x-cfn-schema-name: IPSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.IPSetDescriptors') as i_pset_descriptors,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::IPSet'
    rate_based_rules:
      name: rate_based_rules
      id: aws.wafregional.rate_based_rules
      x-cfn-schema-name: RateBasedRule
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::RateBasedRule'
    rate_based_rule:
      name: rate_based_rule
      id: aws.wafregional.rate_based_rule
      x-cfn-schema-name: RateBasedRule
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.RateLimit') as rate_limit,
              JSON_EXTRACT(Properties, '$.MatchPredicates') as match_predicates,
              JSON_EXTRACT(Properties, '$.RateKey') as rate_key,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::RateBasedRule'
    regex_pattern_sets:
      name: regex_pattern_sets
      id: aws.wafregional.regex_pattern_sets
      x-cfn-schema-name: RegexPatternSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::RegexPatternSet'
    regex_pattern_set:
      name: regex_pattern_set
      id: aws.wafregional.regex_pattern_set
      x-cfn-schema-name: RegexPatternSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.RegexPatternStrings') as regex_pattern_strings,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::RegexPatternSet'
    size_constraint_sets:
      name: size_constraint_sets
      id: aws.wafregional.size_constraint_sets
      x-cfn-schema-name: SizeConstraintSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::SizeConstraintSet'
    size_constraint_set:
      name: size_constraint_set
      id: aws.wafregional.size_constraint_set
      x-cfn-schema-name: SizeConstraintSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SizeConstraints') as size_constraints,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::SizeConstraintSet'
    sql_injection_match_sets:
      name: sql_injection_match_sets
      id: aws.wafregional.sql_injection_match_sets
      x-cfn-schema-name: SqlInjectionMatchSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::SqlInjectionMatchSet'
    sql_injection_match_set:
      name: sql_injection_match_set
      id: aws.wafregional.sql_injection_match_set
      x-cfn-schema-name: SqlInjectionMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SqlInjectionMatchTuples') as sql_injection_match_tuples,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::SqlInjectionMatchSet'
    web_acls:
      name: web_acls
      id: aws.wafregional.web_acls
      x-cfn-schema-name: WebACL
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::WebACL'
    web_acl:
      name: web_acl
      id: aws.wafregional.web_acl
      x-cfn-schema-name: WebACL
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MetricName') as metric_name,
              JSON_EXTRACT(Properties, '$.DefaultAction.Type') as default_action_type,
              JSON_EXTRACT(Properties, '$.Rules') as rules,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::WebACL'
    webacl_associations:
      name: webacl_associations
      id: aws.wafregional.webacl_associations
      x-cfn-schema-name: WebACLAssociation
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::WebACLAssociation'
    webacl_association:
      name: webacl_association
      id: aws.wafregional.webacl_association
      x-cfn-schema-name: WebACLAssociation
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.WebACLId') as web_ac_lid
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::WebACLAssociation'
    xss_match_sets:
      name: xss_match_sets
      id: aws.wafregional.xss_match_sets
      x-cfn-schema-name: XssMatchSet
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::WAFRegional::XssMatchSet'
    xss_match_set:
      name: xss_match_set
      id: aws.wafregional.xss_match_set
      x-cfn-schema-name: XssMatchSet
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.XssMatchTuples') as xss_match_tuples,
              JSON_EXTRACT(Properties, '$.Name') as name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::WAFRegional::XssMatchSet'
