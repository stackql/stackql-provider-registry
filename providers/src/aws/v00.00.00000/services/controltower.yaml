openapi: 3.0.0
info:
  title: ControlTower
  version: 1.0.0
paths: {}
components:
  schemas:
    EnabledControl:
      type: object
      properties:
        ControlIdentifier:
          description: Arn of the control.
          type: string
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          minLength: 20
          maxLength: 2048
        TargetIdentifier:
          description: Arn for Organizational unit to which the control needs to be applied
          type: string
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          minLength: 20
          maxLength: 2048
      required:
        - TargetIdentifier
        - ControlIdentifier
      x-stackql-resource-name: enabled_control
      x-stackql-primaryIdentifier:
        - TargetIdentifier
        - ControlIdentifier
  x-stackQL-resources:
    enabled_controls:
      name: enabled_controls
      id: aws.controltower.enabled_controls
      x-cfn-schema-name: EnabledControl
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.ControlIdentifier') as control_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
    enabled_control:
      name: enabled_control
      id: aws.controltower.enabled_control
      x-cfn-schema-name: EnabledControl
      x-type: get
      x-identifiers:
        - TargetIdentifier
        - ControlIdentifier
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ControlIdentifier') as control_identifier,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
