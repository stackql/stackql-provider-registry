openapi: 3.0.0
info:
  title: ControlTower
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Parameter:
      type: object
      properties:
        Key:
          type: string
          maxLength: 256
          minLength: 1
        Value:
          $ref: '#/components/schemas/AnyType'
      additionalProperties: false
    Tag:
      additionalProperties: false
      type: object
      properties:
        Value:
          minLength: 0
          type: string
          maxLength: 256
        Key:
          minLength: 1
          type: string
          maxLength: 256
    AnyType:
      anyOf:
        - type: string
        - type: object
        - type: number
        - type: array
          items:
            anyOf:
              - type: boolean
              - type: number
              - type: object
              - type: string
          insertionOrder: false
        - type: boolean
    EnabledBaseline:
      type: object
      properties:
        BaselineIdentifier:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        BaselineVersion:
          type: string
          pattern: ^\d+(?:\.\d+){0,2}$
        EnabledBaselineIdentifier:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        TargetIdentifier:
          type: string
          maxLength: 2048
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
        Parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          x-insertionOrder: false
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          x-insertionOrder: false
      required:
        - BaselineIdentifier
        - TargetIdentifier
        - BaselineVersion
      x-stackql-resource-name: enabled_baseline
      description: Definition of AWS::ControlTower::EnabledBaseline Resource Type
      x-type-name: AWS::ControlTower::EnabledBaseline
      x-stackql-primary-identifier:
        - EnabledBaselineIdentifier
      x-create-only-properties:
        - TargetIdentifier
        - BaselineIdentifier
      x-read-only-properties:
        - EnabledBaselineIdentifier
      x-required-properties:
        - BaselineIdentifier
        - TargetIdentifier
        - BaselineVersion
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - controltower:EnableBaseline
          - controltower:TagResource
          - controltower:GetBaselineOperation
          - controltower:GetEnabledBaseline
          - controltower:ListTagsForResource
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProvisioningArtifact
        read:
          - controltower:GetEnabledBaseline
          - controltower:ListEnabledBaselines
          - controltower:ListTagsForResource
        update:
          - controltower:UpdateEnabledBaseline
          - controltower:GetBaselineOperation
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProvisioningArtifact
          - controltower:TagResource
          - controltower:ListTagsForResource
          - controltower:GetEnabledBaseline
        delete:
          - controltower:DisableBaseline
          - controltower:GetBaselineOperation
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProvisioningArtifact
        list:
          - controltower:ListEnabledBaselines
    EnabledControlParameter:
      type: object
      properties:
        Value:
          anyOf:
            - type: array
              items:
                anyOf:
                  - type: string
                  - type: number
                  - type: object
                  - type: boolean
              minItems: 1
              insertionOrder: false
            - type: string
            - type: number
            - type: object
            - type: boolean
        Key:
          type: string
      required:
        - Value
        - Key
      additionalProperties: false
    EnabledControl:
      type: object
      properties:
        ControlIdentifier:
          description: Arn of the control.
          type: string
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          minLength: 20
          maxLength: 2048
        TargetIdentifier:
          description: Arn for Organizational unit to which the control needs to be applied
          type: string
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          minLength: 20
          maxLength: 2048
        Parameters:
          description: Parameters to configure the enabled control behavior.
          type: array
          items:
            $ref: '#/components/schemas/EnabledControlParameter'
          minItems: 1
          x-insertionOrder: false
        Tags:
          description: A set of tags to assign to the enabled control.
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 1
          x-insertionOrder: false
      required:
        - TargetIdentifier
        - ControlIdentifier
      x-stackql-resource-name: enabled_control
      description: Enables a control on a specified target.
      x-type-name: AWS::ControlTower::EnabledControl
      x-stackql-primary-identifier:
        - TargetIdentifier
        - ControlIdentifier
      x-create-only-properties:
        - TargetIdentifier
        - ControlIdentifier
      x-required-properties:
        - TargetIdentifier
        - ControlIdentifier
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - controltower:UntagResource
          - controltower:TagResource
          - controltower:ListTagsForResource
      x-required-permissions:
        create:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:GetControlOperation
          - controltower:EnableControl
          - controltower:TagResource
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:ListPoliciesForTarget
          - organizations:ListTargetsForPolicy
          - organizations:DescribePolicy
        update:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:GetControlOperation
          - controltower:UpdateEnabledControl
          - controltower:UntagResource
          - controltower:TagResource
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:ListPoliciesForTarget
          - organizations:ListTargetsForPolicy
          - organizations:DescribePolicy
        delete:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:GetControlOperation
          - controltower:DisableControl
          - organizations:UpdatePolicy
          - organizations:DeletePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:ListPoliciesForTarget
          - organizations:ListTargetsForPolicy
          - organizations:DescribePolicy
        read:
          - controltower:ListEnabledControls
          - controltower:GetEnabledControl
          - controltower:ListTagsForResource
        list:
          - controltower:ListEnabledControls
    LandingZoneStatus:
      type: string
      enum:
        - ACTIVE
        - PROCESSING
        - FAILED
    LandingZoneDriftStatus:
      type: string
      enum:
        - DRIFTED
        - IN_SYNC
    LandingZone:
      type: object
      properties:
        Status:
          $ref: '#/components/schemas/LandingZoneStatus'
        LatestAvailableVersion:
          minLength: 3
          pattern: \d+.\d+
          type: string
          maxLength: 10
        Version:
          minLength: 3
          pattern: \d+.\d+
          type: string
          maxLength: 10
        DriftStatus:
          $ref: '#/components/schemas/LandingZoneDriftStatus'
        Arn:
          minLength: 20
          pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
          type: string
          maxLength: 2048
        Manifest: {}
        LandingZoneIdentifier:
          type: string
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Manifest
        - Version
      x-stackql-resource-name: landing_zone
      description: Definition of AWS::ControlTower::LandingZone Resource Type
      x-type-name: AWS::ControlTower::LandingZone
      x-stackql-primary-identifier:
        - LandingZoneIdentifier
      x-read-only-properties:
        - LandingZoneIdentifier
        - Arn
        - Status
        - LatestAvailableVersion
        - DriftStatus
      x-required-properties:
        - Manifest
        - Version
      x-tagging:
        permissions:
          - controltower:UntagResource
          - controltower:TagResource
          - controltower:ListTagsForResource
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        tagProperty: /properties/Tags
        cloudFormationSystemTags: true
      x-required-permissions:
        read:
          - controltower:GetLandingZone
          - controltower:ListTagsForResource
        create:
          - controltower:CreateLandingZone
          - controltower:GetLandingZoneOperation
          - controltower:ListTagsForResource
          - controltower:TagResource
          - controltower:GetLandingZone
          - cloudformation:DescribeOrganizationsAccess
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - sso:GetPeregrineStatus
          - sso:ListDirectoryAssociations
          - sso:StartPeregrine
          - sso:RegisterRegion
        update:
          - controltower:UpdateLandingZone
          - controltower:GetLandingZoneOperation
          - controltower:ListTagsForResource
          - controltower:TagResource
          - controltower:GetLandingZone
          - controltower:UntagResource
          - cloudformation:DescribeOrganizationsAccess
          - servicecatalog:AssociatePrincipalWithPortfolio
          - servicecatalog:AssociateProductWithPortfolio
          - servicecatalog:CreatePortfolio
          - servicecatalog:CreateProduct
          - servicecatalog:CreateProvisioningArtifact
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:UpdatePortfolio
          - servicecatalog:UpdateProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - organizations:CreateOrganizationalUnit
          - organizations:CreateOrganization
          - organizations:UpdatePolicy
          - organizations:CreatePolicy
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:EnablePolicyType
          - organizations:EnableAWSServiceAccess
          - organizations:ListRoots
          - sso:GetPeregrineStatus
          - sso:ListDirectoryAssociations
          - sso:StartPeregrine
          - sso:RegisterRegion
        list:
          - controltower:ListLandingZones
        delete:
          - controltower:DeleteLandingZone
          - controltower:GetLandingZone
          - controltower:GetLandingZoneOperation
          - cloudformation:DescribeOrganizationsAccess
          - servicecatalog:ListPortfolios
          - servicecatalog:ListProvisioningArtifacts
          - servicecatalog:SearchProductsAsAdmin
          - servicecatalog:DeleteProvisioningArtifact
          - servicecatalog:ListPrincipalsForPortfolio
          - servicecatalog:DeleteProduct
          - servicecatalog:DisassociatePrincipalFromPortfolio
          - servicecatalog:DisassociateProductFromPortfolio
          - servicecatalog:DeletePortfolio
          - organizations:AttachPolicy
          - organizations:DetachPolicy
          - organizations:DeletePolicy
          - organizations:ListRoots
          - sso:GetPeregrineStatus
          - sso:ListDirectoryAssociations
          - iam:DeleteRolePolicy
          - iam:DetachRolePolicy
          - iam:DeleteRole
    CreateEnabledBaselineRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            BaselineIdentifier:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
            BaselineVersion:
              type: string
              pattern: ^\d+(?:\.\d+){0,2}$
            EnabledBaselineIdentifier:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
            TargetIdentifier:
              type: string
              maxLength: 2048
              minLength: 20
              pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
            Parameters:
              type: array
              items:
                $ref: '#/components/schemas/Parameter'
              x-insertionOrder: false
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateEnabledBaselineRequest
      type: object
      required: []
    CreateEnabledControlRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ControlIdentifier:
              description: Arn of the control.
              type: string
              pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
              minLength: 20
              maxLength: 2048
            TargetIdentifier:
              description: Arn for Organizational unit to which the control needs to be applied
              type: string
              pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
              minLength: 20
              maxLength: 2048
            Parameters:
              description: Parameters to configure the enabled control behavior.
              type: array
              items:
                $ref: '#/components/schemas/EnabledControlParameter'
              minItems: 1
              x-insertionOrder: false
            Tags:
              description: A set of tags to assign to the enabled control.
              type: array
              maxItems: 50
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 1
              x-insertionOrder: false
          x-stackQL-stringOnly: true
      x-title: CreateEnabledControlRequest
      type: object
      required: []
    CreateLandingZoneRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Status:
              $ref: '#/components/schemas/LandingZoneStatus'
            LatestAvailableVersion:
              minLength: 3
              pattern: \d+.\d+
              type: string
              maxLength: 10
            Version:
              minLength: 3
              pattern: \d+.\d+
              type: string
              maxLength: 10
            DriftStatus:
              $ref: '#/components/schemas/LandingZoneDriftStatus'
            Arn:
              minLength: 20
              pattern: ^arn:aws[0-9a-zA-Z_\-:\/]+$
              type: string
              maxLength: 2048
            Manifest: {}
            LandingZoneIdentifier:
              type: string
            Tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateLandingZoneRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    enabled_baselines:
      name: enabled_baselines
      id: aws.controltower.enabled_baselines
      x-cfn-schema-name: EnabledBaseline
      x-cfn-type-name: AWS::ControlTower::EnabledBaseline
      x-identifiers:
        - EnabledBaselineIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EnabledBaseline&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::EnabledBaseline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::EnabledBaseline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::EnabledBaseline"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/enabled_baselines/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/enabled_baselines/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/enabled_baselines/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.BaselineIdentifier') as baseline_identifier,
              JSON_EXTRACT(Properties, '$.BaselineVersion') as baseline_version,
              JSON_EXTRACT(Properties, '$.EnabledBaselineIdentifier') as enabled_baseline_identifier,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
              AND data__Identifier = '<EnabledBaselineIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.BaselineIdentifier') as baseline_identifier,
                JSON_EXTRACT(detail.Properties, '$.BaselineVersion') as baseline_version,
                JSON_EXTRACT(detail.Properties, '$.EnabledBaselineIdentifier') as enabled_baseline_identifier,
                JSON_EXTRACT(detail.Properties, '$.TargetIdentifier') as target_identifier,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND detail.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'BaselineIdentifier') as baseline_identifier,
                  json_extract_path_text(Properties, 'BaselineVersion') as baseline_version,
                  json_extract_path_text(Properties, 'EnabledBaselineIdentifier') as enabled_baseline_identifier,
                  json_extract_path_text(Properties, 'TargetIdentifier') as target_identifier,
                  json_extract_path_text(Properties, 'Parameters') as parameters,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                  AND data__Identifier = '<EnabledBaselineIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'BaselineIdentifier') as baseline_identifier,
                    json_extract_path_text(detail.Properties, 'BaselineVersion') as baseline_version,
                    json_extract_path_text(detail.Properties, 'EnabledBaselineIdentifier') as enabled_baseline_identifier,
                    json_extract_path_text(detail.Properties, 'TargetIdentifier') as target_identifier,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                    AND detail.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                    AND listing.region = 'us-east-1'
    enabled_baselines_list_only:
      name: enabled_baselines_list_only
      id: aws.controltower.enabled_baselines_list_only
      x-cfn-schema-name: EnabledBaseline
      x-cfn-type-name: AWS::ControlTower::EnabledBaseline
      x-identifiers:
        - EnabledBaselineIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EnabledBaselineIdentifier') as enabled_baseline_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'EnabledBaselineIdentifier') as enabled_baseline_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND region = 'us-east-1'
    enabled_baseline_tags:
      name: enabled_baseline_tags
      id: aws.controltower.enabled_baseline_tags
      x-cfn-schema-name: EnabledBaseline
      x-cfn-type-name: AWS::ControlTower::EnabledBaseline
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.BaselineIdentifier') as baseline_identifier,
              JSON_EXTRACT(detail.Properties, '$.BaselineVersion') as baseline_version,
              JSON_EXTRACT(detail.Properties, '$.EnabledBaselineIdentifier') as enabled_baseline_identifier,
              JSON_EXTRACT(detail.Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
              AND detail.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'BaselineIdentifier') as baseline_identifier,
                json_extract_path_text(detail.Properties, 'BaselineVersion') as baseline_version,
                json_extract_path_text(detail.Properties, 'EnabledBaselineIdentifier') as enabled_baseline_identifier,
                json_extract_path_text(detail.Properties, 'TargetIdentifier') as target_identifier,
                json_extract_path_text(detail.Properties, 'Parameters') as parameters
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND detail.data__TypeName = 'AWS::ControlTower::EnabledBaseline'
                AND listing.region = 'us-east-1'
    enabled_controls:
      name: enabled_controls
      id: aws.controltower.enabled_controls
      x-cfn-schema-name: EnabledControl
      x-cfn-type-name: AWS::ControlTower::EnabledControl
      x-identifiers:
        - TargetIdentifier
        - ControlIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EnabledControl&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::EnabledControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::EnabledControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::EnabledControl"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/enabled_controls/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/enabled_controls/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/enabled_controls/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ControlIdentifier') as control_identifier,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.Parameters') as parameters,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
              AND data__Identifier = '<TargetIdentifier>|<ControlIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ControlIdentifier') as control_identifier,
                JSON_EXTRACT(detail.Properties, '$.TargetIdentifier') as target_identifier,
                JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND detail.data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ControlIdentifier') as control_identifier,
                  json_extract_path_text(Properties, 'TargetIdentifier') as target_identifier,
                  json_extract_path_text(Properties, 'Parameters') as parameters,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
                  AND data__Identifier = '<TargetIdentifier>|<ControlIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ControlIdentifier') as control_identifier,
                    json_extract_path_text(detail.Properties, 'TargetIdentifier') as target_identifier,
                    json_extract_path_text(detail.Properties, 'Parameters') as parameters,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledControl'
                    AND detail.data__TypeName = 'AWS::ControlTower::EnabledControl'
                    AND listing.region = 'us-east-1'
    enabled_controls_list_only:
      name: enabled_controls_list_only
      id: aws.controltower.enabled_controls_list_only
      x-cfn-schema-name: EnabledControl
      x-cfn-type-name: AWS::ControlTower::EnabledControl
      x-identifiers:
        - TargetIdentifier
        - ControlIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(Properties, '$.ControlIdentifier') as control_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TargetIdentifier') as target_identifier,
                json_extract_path_text(Properties, 'ControlIdentifier') as control_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND region = 'us-east-1'
    enabled_control_tags:
      name: enabled_control_tags
      id: aws.controltower.enabled_control_tags
      x-cfn-schema-name: EnabledControl
      x-cfn-type-name: AWS::ControlTower::EnabledControl
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ControlIdentifier') as control_identifier,
              JSON_EXTRACT(detail.Properties, '$.TargetIdentifier') as target_identifier,
              JSON_EXTRACT(detail.Properties, '$.Parameters') as parameters
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledControl'
              AND detail.data__TypeName = 'AWS::ControlTower::EnabledControl'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ControlIdentifier') as control_identifier,
                json_extract_path_text(detail.Properties, 'TargetIdentifier') as target_identifier,
                json_extract_path_text(detail.Properties, 'Parameters') as parameters
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND detail.data__TypeName = 'AWS::ControlTower::EnabledControl'
                AND listing.region = 'us-east-1'
    landing_zones:
      name: landing_zones
      id: aws.controltower.landing_zones
      x-cfn-schema-name: LandingZone
      x-cfn-type-name: AWS::ControlTower::LandingZone
      x-identifiers:
        - LandingZoneIdentifier
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LandingZone&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::LandingZone"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::LandingZone"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::ControlTower::LandingZone"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/landing_zones/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/landing_zones/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/landing_zones/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.LatestAvailableVersion') as latest_available_version,
              JSON_EXTRACT(Properties, '$.Version') as version,
              JSON_EXTRACT(Properties, '$.DriftStatus') as drift_status,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Manifest') as manifest,
              JSON_EXTRACT(Properties, '$.LandingZoneIdentifier') as landing_zone_identifier,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
              AND data__Identifier = '<LandingZoneIdentifier>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.LatestAvailableVersion') as latest_available_version,
                JSON_EXTRACT(detail.Properties, '$.Version') as version,
                JSON_EXTRACT(detail.Properties, '$.DriftStatus') as drift_status,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.Manifest') as manifest,
                JSON_EXTRACT(detail.Properties, '$.LandingZoneIdentifier') as landing_zone_identifier,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::ControlTower::LandingZone'
                AND detail.data__TypeName = 'AWS::ControlTower::LandingZone'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'LatestAvailableVersion') as latest_available_version,
                  json_extract_path_text(Properties, 'Version') as version,
                  json_extract_path_text(Properties, 'DriftStatus') as drift_status,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'Manifest') as manifest,
                  json_extract_path_text(Properties, 'LandingZoneIdentifier') as landing_zone_identifier,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
                  AND data__Identifier = '<LandingZoneIdentifier>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'LatestAvailableVersion') as latest_available_version,
                    json_extract_path_text(detail.Properties, 'Version') as version,
                    json_extract_path_text(detail.Properties, 'DriftStatus') as drift_status,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'Manifest') as manifest,
                    json_extract_path_text(detail.Properties, 'LandingZoneIdentifier') as landing_zone_identifier,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::ControlTower::LandingZone'
                    AND detail.data__TypeName = 'AWS::ControlTower::LandingZone'
                    AND listing.region = 'us-east-1'
    landing_zones_list_only:
      name: landing_zones_list_only
      id: aws.controltower.landing_zones_list_only
      x-cfn-schema-name: LandingZone
      x-cfn-type-name: AWS::ControlTower::LandingZone
      x-identifiers:
        - LandingZoneIdentifier
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LandingZoneIdentifier') as landing_zone_identifier
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'LandingZoneIdentifier') as landing_zone_identifier
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::ControlTower::LandingZone'
                AND region = 'us-east-1'
    landing_zone_tags:
      name: landing_zone_tags
      id: aws.controltower.landing_zone_tags
      x-cfn-schema-name: LandingZone
      x-cfn-type-name: AWS::ControlTower::LandingZone
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Status') as status,
              JSON_EXTRACT(detail.Properties, '$.LatestAvailableVersion') as latest_available_version,
              JSON_EXTRACT(detail.Properties, '$.Version') as version,
              JSON_EXTRACT(detail.Properties, '$.DriftStatus') as drift_status,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.Manifest') as manifest,
              JSON_EXTRACT(detail.Properties, '$.LandingZoneIdentifier') as landing_zone_identifier
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::ControlTower::LandingZone'
              AND detail.data__TypeName = 'AWS::ControlTower::LandingZone'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Status') as status,
                json_extract_path_text(detail.Properties, 'LatestAvailableVersion') as latest_available_version,
                json_extract_path_text(detail.Properties, 'Version') as version,
                json_extract_path_text(detail.Properties, 'DriftStatus') as drift_status,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'Manifest') as manifest,
                json_extract_path_text(detail.Properties, 'LandingZoneIdentifier') as landing_zone_identifier
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::ControlTower::LandingZone'
                AND detail.data__TypeName = 'AWS::ControlTower::LandingZone'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EnabledBaseline&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnabledBaseline
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnabledBaselineRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EnabledControl&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEnabledControl
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEnabledControlRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LandingZone&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLandingZone
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLandingZoneRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
