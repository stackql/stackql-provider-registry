openapi: 3.0.0
info:
  title: Amplify
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AutoBranchCreationConfig:
      type: object
      additionalProperties: false
      properties:
        AutoBranchCreationPatterns:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 2048
        BasicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        BuildSpec:
          type: string
          minLength: 1
          maxLength: 25000
        EnableAutoBranchCreation:
          type: boolean
        EnableAutoBuild:
          type: boolean
        EnablePerformanceMode:
          type: boolean
        EnablePullRequestPreview:
          type: boolean
        EnvironmentVariables:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        Framework:
          type: string
          maxLength: 255
          pattern: (?s).*
        PullRequestEnvironmentName:
          type: string
          maxLength: 20
          pattern: (?s).*
        Stage:
          type: string
          enum:
            - EXPERIMENTAL
            - BETA
            - PULL_REQUEST
            - PRODUCTION
            - DEVELOPMENT
    BasicAuthConfig:
      type: object
      additionalProperties: false
      properties:
        EnableBasicAuth:
          type: boolean
        Username:
          type: string
          minLength: 1
          maxLength: 255
        Password:
          type: string
          minLength: 1
          maxLength: 255
      required:
        - Username
        - Password
    CacheConfig:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
          enum:
            - AMPLIFY_MANAGED
            - AMPLIFY_MANAGED_NO_COOKIES
    CustomRule:
      type: object
      additionalProperties: false
      properties:
        Condition:
          type: string
          minLength: 0
          maxLength: 2048
          pattern: (?s).*
        Status:
          type: string
          minLength: 3
          maxLength: 7
          pattern: .{3,7}
        Target:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: (?s).+
        Source:
          type: string
          minLength: 1
          maxLength: 2048
          pattern: (?s).+
      required:
        - Target
        - Source
    EnvironmentVariable:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
          maxLength: 255
          pattern: (?s).*
        Value:
          type: string
          maxLength: 5500
          pattern: (?s).*
      required:
        - Name
        - Value
    Tag:
      type: object
      additionalProperties: false
      x-insertionOrder: false
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
        Value:
          type: string
          minLength: 0
          maxLength: 256
          pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      required:
        - Key
        - Value
    App:
      type: object
      properties:
        AccessToken:
          type: string
          minLength: 1
          maxLength: 255
        AppId:
          type: string
          minLength: 1
          maxLength: 20
          pattern: d[a-z0-9]+
        AppName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
        Arn:
          type: string
          maxLength: 1000
          pattern: (?s).*
        AutoBranchCreationConfig:
          $ref: '#/components/schemas/AutoBranchCreationConfig'
        BasicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        BuildSpec:
          type: string
          minLength: 1
          maxLength: 25000
          pattern: (?s).+
        CacheConfig:
          $ref: '#/components/schemas/CacheConfig'
        CustomHeaders:
          type: string
          minLength: 0
          maxLength: 25000
          pattern: (?s).*
        CustomRules:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomRule'
        DefaultDomain:
          type: string
          minLength: 0
          maxLength: 1000
        Description:
          type: string
          maxLength: 1000
          pattern: (?s).*
        EnableBranchAutoDeletion:
          type: boolean
        EnvironmentVariables:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        IAMServiceRole:
          type: string
          minLength: 1
          maxLength: 1000
          pattern: (?s).*
        Name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
        OauthToken:
          type: string
          maxLength: 1000
          pattern: (?s).*
        Platform:
          type: string
          enum:
            - WEB
            - WEB_DYNAMIC
            - WEB_COMPUTE
        Repository:
          type: string
          pattern: (?s).*
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Name
      x-stackql-resource-name: app
      description: The AWS::Amplify::App resource creates Apps in the Amplify Console. An App is a collection of branches.
      x-type-name: AWS::Amplify::App
      x-stackql-primary-identifier:
        - Arn
      x-write-only-properties:
        - AccessToken
        - BasicAuthConfig
        - OauthToken
        - AutoBranchCreationConfig
      x-read-only-properties:
        - AppId
        - AppName
        - Arn
        - DefaultDomain
      x-required-properties:
        - Name
      x-required-permissions:
        create:
          - amplify:GetApp
          - amplify:CreateApp
          - amplify:TagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - sns:CreateTopic
          - sns:Subscribe
          - iam:PassRole
        delete:
          - amplify:GetApp
          - amplify:DeleteApp
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - codecommit:PutRepositoryTriggers
          - sns:Unsubscribe
          - iam:PassRole
        list:
          - amplify:GetApp
          - amplify:ListApps
          - amplify:ListTagsForResource
          - iam:PassRole
        read:
          - amplify:GetApp
          - amplify:ListTagsForResource
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - iam:PassRole
        update:
          - amplify:GetApp
          - amplify:UpdateApp
          - amplify:ListTagsForResource
          - amplify:TagResource
          - amplify:UntagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - sns:CreateTopic
          - sns:Subscribe
          - sns:Unsubscribe
          - iam:PassRole
    Backend:
      type: object
      additionalProperties: false
      properties:
        StackArn:
          type: string
          minLength: 20
          maxLength: 2048
    Branch:
      type: object
      properties:
        AppId:
          type: string
          minLength: 1
          maxLength: 20
          pattern: d[a-z0-9]+
        Arn:
          type: string
          maxLength: 1000
          pattern: (?s).*
        BasicAuthConfig:
          $ref: '#/components/schemas/BasicAuthConfig'
        Backend:
          $ref: '#/components/schemas/Backend'
        BranchName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
        BuildSpec:
          type: string
          minLength: 1
          maxLength: 25000
          pattern: (?s).+
        Description:
          type: string
          maxLength: 1000
          pattern: (?s).*
        EnableAutoBuild:
          type: boolean
        EnablePerformanceMode:
          type: boolean
        EnablePullRequestPreview:
          type: boolean
        EnvironmentVariables:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/EnvironmentVariable'
        Framework:
          type: string
          maxLength: 255
          pattern: (?s).*
        PullRequestEnvironmentName:
          type: string
          maxLength: 20
          pattern: (?s).*
        Stage:
          type: string
          enum:
            - EXPERIMENTAL
            - BETA
            - PULL_REQUEST
            - PRODUCTION
            - DEVELOPMENT
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - AppId
        - BranchName
      x-stackql-resource-name: branch
      description: The AWS::Amplify::Branch resource creates a new branch within an app.
      x-type-name: AWS::Amplify::Branch
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - AppId
        - BranchName
      x-write-only-properties:
        - BasicAuthConfig
      x-read-only-properties:
        - Arn
      x-required-properties:
        - AppId
        - BranchName
      x-required-permissions:
        create:
          - amplify:GetBranch
          - amplify:CreateBranch
          - amplify:TagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - s3:GetObject
          - s3:GetObjectAcl
          - s3:PutObject
          - s3:PutObjectAcl
          - sns:CreateTopic
          - sns:Subscribe
          - iam:PassRole
        delete:
          - amplify:GetBranch
          - amplify:DeleteBranch
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - sns:Unsubscribe
          - iam:PassRole
        list:
          - amplify:GetBranch
          - amplify:ListBranches
          - amplify:ListTagsForResource
          - iam:PassRole
        read:
          - amplify:GetBranch
          - amplify:ListTagsForResource
          - codecommit:GetRepository
          - codecommit:GetRepositoryTriggers
          - s3:GetObject
          - s3:GetObjectAcl
          - iam:PassRole
        update:
          - amplify:GetBranch
          - amplify:UpdateBranch
          - amplify:ListTagsForResource
          - amplify:TagResource
          - amplify:UntagResource
          - codecommit:GetRepository
          - codecommit:PutRepositoryTriggers
          - codecommit:GetRepositoryTriggers
          - s3:GetObject
          - s3:GetObjectAcl
          - s3:PutObject
          - s3:PutObjectAcl
          - sns:CreateTopic
          - sns:Subscribe
          - sns:Unsubscribe
          - iam:PassRole
    CertificateSettings:
      type: object
      additionalProperties: false
      properties:
        CertificateType:
          type: string
          enum:
            - AMPLIFY_MANAGED
            - CUSTOM
        CustomCertificateArn:
          type: string
          pattern: ^arn:aws:acm:[a-z0-9-]+:\d{12}:certificate\/.+$
    Certificate:
      type: object
      additionalProperties: false
      properties:
        CertificateType:
          type: string
          enum:
            - AMPLIFY_MANAGED
            - CUSTOM
        CertificateArn:
          type: string
          pattern: '"^arn:aws:acm:[a-z0-9-]+:\d{12}:certificate\/.+$"'
        CertificateVerificationDNSRecord:
          type: string
          maxLength: 1000
    SubDomainSetting:
      type: object
      additionalProperties: false
      properties:
        Prefix:
          type: string
          maxLength: 255
          pattern: (?s).*
        BranchName:
          type: string
          minLength: 1
          maxLength: 255
          pattern: (?s).+
      required:
        - Prefix
        - BranchName
    Domain:
      type: object
      properties:
        AppId:
          type: string
          minLength: 1
          maxLength: 20
          pattern: d[a-z0-9]+
        Arn:
          type: string
          maxLength: 1000
          pattern: (?s).*
        AutoSubDomainCreationPatterns:
          type: array
          uniqueItems: false
          items:
            type: string
            minLength: 1
            maxLength: 2048
            pattern: (?s).+
        AutoSubDomainIAMRole:
          type: string
          pattern: ^$|^arn:.+:iam::\d{12}:role.+
          maxLength: 1000
        CertificateRecord:
          type: string
          maxLength: 1000
        Certificate:
          $ref: '#/components/schemas/Certificate'
        CertificateSettings:
          $ref: '#/components/schemas/CertificateSettings'
        DomainName:
          type: string
          pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\.)?$
          maxLength: 255
        DomainStatus:
          type: string
        UpdateStatus:
          type: string
        EnableAutoSubDomain:
          type: boolean
        StatusReason:
          type: string
          maxLength: 1000
        SubDomainSettings:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/SubDomainSetting'
          maxItems: 255
      required:
        - AppId
        - DomainName
        - SubDomainSettings
      x-stackql-resource-name: domain
      description: The AWS::Amplify::Domain resource allows you to connect a custom domain to your app.
      x-type-name: AWS::Amplify::Domain
      x-stackql-primary-identifier:
        - Arn
      x-create-only-properties:
        - AppId
        - DomainName
      x-write-only-properties:
        - CertificateSettings
      x-read-only-properties:
        - Arn
        - DomainStatus
        - StatusReason
        - CertificateRecord
        - Certificate
        - UpdateStatus
      x-required-properties:
        - AppId
        - DomainName
        - SubDomainSettings
      x-required-permissions:
        create:
          - amplify:CreateDomainAssociation
          - route53:ListHostedZones
          - route53:ChangeResourceRecordSets
          - iam:PassRole
          - amplify:TagResource
        delete:
          - amplify:DeleteDomainAssociation
          - iam:PassRole
          - amplify:DeleteDomainAssociation
        list:
          - amplify:ListDomainAssociations
          - iam:PassRole
          - amplify:ListTagsForResource
        read:
          - amplify:GetDomainAssociation
          - route53:ListHostedZones
          - iam:PassRole
          - amplify:ListTagsForResource
        update:
          - amplify:UpdateDomainAssociation
          - route53:ListHostedZones
          - route53:ChangeResourceRecordSets
          - iam:PassRole
          - amplify:ListTagsForResource
          - amplify:TagResource
          - amplify:UntagResource
    CreateAppRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AccessToken:
              type: string
              minLength: 1
              maxLength: 255
            AppId:
              type: string
              minLength: 1
              maxLength: 20
              pattern: d[a-z0-9]+
            AppName:
              type: string
              minLength: 1
              maxLength: 255
              pattern: (?s).+
            Arn:
              type: string
              maxLength: 1000
              pattern: (?s).*
            AutoBranchCreationConfig:
              $ref: '#/components/schemas/AutoBranchCreationConfig'
            BasicAuthConfig:
              $ref: '#/components/schemas/BasicAuthConfig'
            BuildSpec:
              type: string
              minLength: 1
              maxLength: 25000
              pattern: (?s).+
            CacheConfig:
              $ref: '#/components/schemas/CacheConfig'
            CustomHeaders:
              type: string
              minLength: 0
              maxLength: 25000
              pattern: (?s).*
            CustomRules:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/CustomRule'
            DefaultDomain:
              type: string
              minLength: 0
              maxLength: 1000
            Description:
              type: string
              maxLength: 1000
              pattern: (?s).*
            EnableBranchAutoDeletion:
              type: boolean
            EnvironmentVariables:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/EnvironmentVariable'
            IAMServiceRole:
              type: string
              minLength: 1
              maxLength: 1000
              pattern: (?s).*
            Name:
              type: string
              minLength: 1
              maxLength: 255
              pattern: (?s).+
            OauthToken:
              type: string
              maxLength: 1000
              pattern: (?s).*
            Platform:
              type: string
              enum:
                - WEB
                - WEB_DYNAMIC
                - WEB_COMPUTE
            Repository:
              type: string
              pattern: (?s).*
            Tags:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateAppRequest
      type: object
      required: []
    CreateBranchRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppId:
              type: string
              minLength: 1
              maxLength: 20
              pattern: d[a-z0-9]+
            Arn:
              type: string
              maxLength: 1000
              pattern: (?s).*
            BasicAuthConfig:
              $ref: '#/components/schemas/BasicAuthConfig'
            Backend:
              $ref: '#/components/schemas/Backend'
            BranchName:
              type: string
              minLength: 1
              maxLength: 255
              pattern: (?s).+
            BuildSpec:
              type: string
              minLength: 1
              maxLength: 25000
              pattern: (?s).+
            Description:
              type: string
              maxLength: 1000
              pattern: (?s).*
            EnableAutoBuild:
              type: boolean
            EnablePerformanceMode:
              type: boolean
            EnablePullRequestPreview:
              type: boolean
            EnvironmentVariables:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/EnvironmentVariable'
            Framework:
              type: string
              maxLength: 255
              pattern: (?s).*
            PullRequestEnvironmentName:
              type: string
              maxLength: 20
              pattern: (?s).*
            Stage:
              type: string
              enum:
                - EXPERIMENTAL
                - BETA
                - PULL_REQUEST
                - PRODUCTION
                - DEVELOPMENT
            Tags:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateBranchRequest
      type: object
      required: []
    CreateDomainRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AppId:
              type: string
              minLength: 1
              maxLength: 20
              pattern: d[a-z0-9]+
            Arn:
              type: string
              maxLength: 1000
              pattern: (?s).*
            AutoSubDomainCreationPatterns:
              type: array
              uniqueItems: false
              items:
                type: string
                minLength: 1
                maxLength: 2048
                pattern: (?s).+
            AutoSubDomainIAMRole:
              type: string
              pattern: ^$|^arn:.+:iam::\d{12}:role.+
              maxLength: 1000
            CertificateRecord:
              type: string
              maxLength: 1000
            Certificate:
              $ref: '#/components/schemas/Certificate'
            CertificateSettings:
              $ref: '#/components/schemas/CertificateSettings'
            DomainName:
              type: string
              pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\.)?$
              maxLength: 255
            DomainStatus:
              type: string
            UpdateStatus:
              type: string
            EnableAutoSubDomain:
              type: boolean
            StatusReason:
              type: string
              maxLength: 1000
            SubDomainSettings:
              type: array
              uniqueItems: false
              items:
                $ref: '#/components/schemas/SubDomainSetting'
              maxItems: 255
          x-stackQL-stringOnly: true
      x-title: CreateDomainRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    apps:
      name: apps
      id: aws.amplify.apps
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::Amplify::App
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__App&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::App"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/apps/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/apps/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/apps/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AccessToken') as access_token,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.AppName') as app_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AutoBranchCreationConfig') as auto_branch_creation_config,
              JSON_EXTRACT(Properties, '$.BasicAuthConfig') as basic_auth_config,
              JSON_EXTRACT(Properties, '$.BuildSpec') as build_spec,
              JSON_EXTRACT(Properties, '$.CacheConfig') as cache_config,
              JSON_EXTRACT(Properties, '$.CustomHeaders') as custom_headers,
              JSON_EXTRACT(Properties, '$.CustomRules') as custom_rules,
              JSON_EXTRACT(Properties, '$.DefaultDomain') as default_domain,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EnableBranchAutoDeletion') as enable_branch_auto_deletion,
              JSON_EXTRACT(Properties, '$.EnvironmentVariables') as environment_variables,
              JSON_EXTRACT(Properties, '$.IAMServiceRole') as iam_service_role,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.OauthToken') as oauth_token,
              JSON_EXTRACT(Properties, '$.Platform') as platform,
              JSON_EXTRACT(Properties, '$.Repository') as repository,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::App'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AccessToken') as access_token,
                JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
                JSON_EXTRACT(detail.Properties, '$.AppName') as app_name,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AutoBranchCreationConfig') as auto_branch_creation_config,
                JSON_EXTRACT(detail.Properties, '$.BasicAuthConfig') as basic_auth_config,
                JSON_EXTRACT(detail.Properties, '$.BuildSpec') as build_spec,
                JSON_EXTRACT(detail.Properties, '$.CacheConfig') as cache_config,
                JSON_EXTRACT(detail.Properties, '$.CustomHeaders') as custom_headers,
                JSON_EXTRACT(detail.Properties, '$.CustomRules') as custom_rules,
                JSON_EXTRACT(detail.Properties, '$.DefaultDomain') as default_domain,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EnableBranchAutoDeletion') as enable_branch_auto_deletion,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentVariables') as environment_variables,
                JSON_EXTRACT(detail.Properties, '$.IAMServiceRole') as iam_service_role,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.OauthToken') as oauth_token,
                JSON_EXTRACT(detail.Properties, '$.Platform') as platform,
                JSON_EXTRACT(detail.Properties, '$.Repository') as repository,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Amplify::App'
                AND detail.data__TypeName = 'AWS::Amplify::App'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AccessToken') as access_token,
                  json_extract_path_text(Properties, 'AppId') as app_id,
                  json_extract_path_text(Properties, 'AppName') as app_name,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AutoBranchCreationConfig') as auto_branch_creation_config,
                  json_extract_path_text(Properties, 'BasicAuthConfig') as basic_auth_config,
                  json_extract_path_text(Properties, 'BuildSpec') as build_spec,
                  json_extract_path_text(Properties, 'CacheConfig') as cache_config,
                  json_extract_path_text(Properties, 'CustomHeaders') as custom_headers,
                  json_extract_path_text(Properties, 'CustomRules') as custom_rules,
                  json_extract_path_text(Properties, 'DefaultDomain') as default_domain,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EnableBranchAutoDeletion') as enable_branch_auto_deletion,
                  json_extract_path_text(Properties, 'EnvironmentVariables') as environment_variables,
                  json_extract_path_text(Properties, 'IAMServiceRole') as iam_service_role,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'OauthToken') as oauth_token,
                  json_extract_path_text(Properties, 'Platform') as platform,
                  json_extract_path_text(Properties, 'Repository') as repository,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::App'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AccessToken') as access_token,
                    json_extract_path_text(detail.Properties, 'AppId') as app_id,
                    json_extract_path_text(detail.Properties, 'AppName') as app_name,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AutoBranchCreationConfig') as auto_branch_creation_config,
                    json_extract_path_text(detail.Properties, 'BasicAuthConfig') as basic_auth_config,
                    json_extract_path_text(detail.Properties, 'BuildSpec') as build_spec,
                    json_extract_path_text(detail.Properties, 'CacheConfig') as cache_config,
                    json_extract_path_text(detail.Properties, 'CustomHeaders') as custom_headers,
                    json_extract_path_text(detail.Properties, 'CustomRules') as custom_rules,
                    json_extract_path_text(detail.Properties, 'DefaultDomain') as default_domain,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EnableBranchAutoDeletion') as enable_branch_auto_deletion,
                    json_extract_path_text(detail.Properties, 'EnvironmentVariables') as environment_variables,
                    json_extract_path_text(detail.Properties, 'IAMServiceRole') as iam_service_role,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'OauthToken') as oauth_token,
                    json_extract_path_text(detail.Properties, 'Platform') as platform,
                    json_extract_path_text(detail.Properties, 'Repository') as repository,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Amplify::App'
                    AND detail.data__TypeName = 'AWS::Amplify::App'
                    AND listing.region = 'us-east-1'
    apps_list_only:
      name: apps_list_only
      id: aws.amplify.apps_list_only
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::Amplify::App
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::App'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::App'
                AND region = 'us-east-1'
    app_tags:
      name: app_tags
      id: aws.amplify.app_tags
      x-cfn-schema-name: App
      x-cfn-type-name: AWS::Amplify::App
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AccessToken') as access_token,
              JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
              JSON_EXTRACT(detail.Properties, '$.AppName') as app_name,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.AutoBranchCreationConfig') as auto_branch_creation_config,
              JSON_EXTRACT(detail.Properties, '$.BasicAuthConfig') as basic_auth_config,
              JSON_EXTRACT(detail.Properties, '$.BuildSpec') as build_spec,
              JSON_EXTRACT(detail.Properties, '$.CacheConfig') as cache_config,
              JSON_EXTRACT(detail.Properties, '$.CustomHeaders') as custom_headers,
              JSON_EXTRACT(detail.Properties, '$.CustomRules') as custom_rules,
              JSON_EXTRACT(detail.Properties, '$.DefaultDomain') as default_domain,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EnableBranchAutoDeletion') as enable_branch_auto_deletion,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentVariables') as environment_variables,
              JSON_EXTRACT(detail.Properties, '$.IAMServiceRole') as iam_service_role,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.OauthToken') as oauth_token,
              JSON_EXTRACT(detail.Properties, '$.Platform') as platform,
              JSON_EXTRACT(detail.Properties, '$.Repository') as repository
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Amplify::App'
              AND detail.data__TypeName = 'AWS::Amplify::App'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AccessToken') as access_token,
                json_extract_path_text(detail.Properties, 'AppId') as app_id,
                json_extract_path_text(detail.Properties, 'AppName') as app_name,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'AutoBranchCreationConfig') as auto_branch_creation_config,
                json_extract_path_text(detail.Properties, 'BasicAuthConfig') as basic_auth_config,
                json_extract_path_text(detail.Properties, 'BuildSpec') as build_spec,
                json_extract_path_text(detail.Properties, 'CacheConfig') as cache_config,
                json_extract_path_text(detail.Properties, 'CustomHeaders') as custom_headers,
                json_extract_path_text(detail.Properties, 'CustomRules') as custom_rules,
                json_extract_path_text(detail.Properties, 'DefaultDomain') as default_domain,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EnableBranchAutoDeletion') as enable_branch_auto_deletion,
                json_extract_path_text(detail.Properties, 'EnvironmentVariables') as environment_variables,
                json_extract_path_text(detail.Properties, 'IAMServiceRole') as iam_service_role,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'OauthToken') as oauth_token,
                json_extract_path_text(detail.Properties, 'Platform') as platform,
                json_extract_path_text(detail.Properties, 'Repository') as repository
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Amplify::App'
                AND detail.data__TypeName = 'AWS::Amplify::App'
                AND listing.region = 'us-east-1'
    branches:
      name: branches
      id: aws.amplify.branches
      x-cfn-schema-name: Branch
      x-cfn-type-name: AWS::Amplify::Branch
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Branch&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::Branch"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::Branch"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::Branch"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/branches/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/branches/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/branches/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.BasicAuthConfig') as basic_auth_config,
              JSON_EXTRACT(Properties, '$.Backend') as backend,
              JSON_EXTRACT(Properties, '$.BranchName') as branch_name,
              JSON_EXTRACT(Properties, '$.BuildSpec') as build_spec,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EnableAutoBuild') as enable_auto_build,
              JSON_EXTRACT(Properties, '$.EnablePerformanceMode') as enable_performance_mode,
              JSON_EXTRACT(Properties, '$.EnablePullRequestPreview') as enable_pull_request_preview,
              JSON_EXTRACT(Properties, '$.EnvironmentVariables') as environment_variables,
              JSON_EXTRACT(Properties, '$.Framework') as framework,
              JSON_EXTRACT(Properties, '$.PullRequestEnvironmentName') as pull_request_environment_name,
              JSON_EXTRACT(Properties, '$.Stage') as stage,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::Branch'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.BasicAuthConfig') as basic_auth_config,
                JSON_EXTRACT(detail.Properties, '$.Backend') as backend,
                JSON_EXTRACT(detail.Properties, '$.BranchName') as branch_name,
                JSON_EXTRACT(detail.Properties, '$.BuildSpec') as build_spec,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EnableAutoBuild') as enable_auto_build,
                JSON_EXTRACT(detail.Properties, '$.EnablePerformanceMode') as enable_performance_mode,
                JSON_EXTRACT(detail.Properties, '$.EnablePullRequestPreview') as enable_pull_request_preview,
                JSON_EXTRACT(detail.Properties, '$.EnvironmentVariables') as environment_variables,
                JSON_EXTRACT(detail.Properties, '$.Framework') as framework,
                JSON_EXTRACT(detail.Properties, '$.PullRequestEnvironmentName') as pull_request_environment_name,
                JSON_EXTRACT(detail.Properties, '$.Stage') as stage,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Amplify::Branch'
                AND detail.data__TypeName = 'AWS::Amplify::Branch'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppId') as app_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'BasicAuthConfig') as basic_auth_config,
                  json_extract_path_text(Properties, 'Backend') as backend,
                  json_extract_path_text(Properties, 'BranchName') as branch_name,
                  json_extract_path_text(Properties, 'BuildSpec') as build_spec,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EnableAutoBuild') as enable_auto_build,
                  json_extract_path_text(Properties, 'EnablePerformanceMode') as enable_performance_mode,
                  json_extract_path_text(Properties, 'EnablePullRequestPreview') as enable_pull_request_preview,
                  json_extract_path_text(Properties, 'EnvironmentVariables') as environment_variables,
                  json_extract_path_text(Properties, 'Framework') as framework,
                  json_extract_path_text(Properties, 'PullRequestEnvironmentName') as pull_request_environment_name,
                  json_extract_path_text(Properties, 'Stage') as stage,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::Branch'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppId') as app_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'BasicAuthConfig') as basic_auth_config,
                    json_extract_path_text(detail.Properties, 'Backend') as backend,
                    json_extract_path_text(detail.Properties, 'BranchName') as branch_name,
                    json_extract_path_text(detail.Properties, 'BuildSpec') as build_spec,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EnableAutoBuild') as enable_auto_build,
                    json_extract_path_text(detail.Properties, 'EnablePerformanceMode') as enable_performance_mode,
                    json_extract_path_text(detail.Properties, 'EnablePullRequestPreview') as enable_pull_request_preview,
                    json_extract_path_text(detail.Properties, 'EnvironmentVariables') as environment_variables,
                    json_extract_path_text(detail.Properties, 'Framework') as framework,
                    json_extract_path_text(detail.Properties, 'PullRequestEnvironmentName') as pull_request_environment_name,
                    json_extract_path_text(detail.Properties, 'Stage') as stage,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Amplify::Branch'
                    AND detail.data__TypeName = 'AWS::Amplify::Branch'
                    AND listing.region = 'us-east-1'
    branches_list_only:
      name: branches_list_only
      id: aws.amplify.branches_list_only
      x-cfn-schema-name: Branch
      x-cfn-type-name: AWS::Amplify::Branch
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::Branch'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::Branch'
                AND region = 'us-east-1'
    branch_tags:
      name: branch_tags
      id: aws.amplify.branch_tags
      x-cfn-schema-name: Branch
      x-cfn-type-name: AWS::Amplify::Branch
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.BasicAuthConfig') as basic_auth_config,
              JSON_EXTRACT(detail.Properties, '$.Backend') as backend,
              JSON_EXTRACT(detail.Properties, '$.BranchName') as branch_name,
              JSON_EXTRACT(detail.Properties, '$.BuildSpec') as build_spec,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EnableAutoBuild') as enable_auto_build,
              JSON_EXTRACT(detail.Properties, '$.EnablePerformanceMode') as enable_performance_mode,
              JSON_EXTRACT(detail.Properties, '$.EnablePullRequestPreview') as enable_pull_request_preview,
              JSON_EXTRACT(detail.Properties, '$.EnvironmentVariables') as environment_variables,
              JSON_EXTRACT(detail.Properties, '$.Framework') as framework,
              JSON_EXTRACT(detail.Properties, '$.PullRequestEnvironmentName') as pull_request_environment_name,
              JSON_EXTRACT(detail.Properties, '$.Stage') as stage
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::Amplify::Branch'
              AND detail.data__TypeName = 'AWS::Amplify::Branch'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'AppId') as app_id,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'BasicAuthConfig') as basic_auth_config,
                json_extract_path_text(detail.Properties, 'Backend') as backend,
                json_extract_path_text(detail.Properties, 'BranchName') as branch_name,
                json_extract_path_text(detail.Properties, 'BuildSpec') as build_spec,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EnableAutoBuild') as enable_auto_build,
                json_extract_path_text(detail.Properties, 'EnablePerformanceMode') as enable_performance_mode,
                json_extract_path_text(detail.Properties, 'EnablePullRequestPreview') as enable_pull_request_preview,
                json_extract_path_text(detail.Properties, 'EnvironmentVariables') as environment_variables,
                json_extract_path_text(detail.Properties, 'Framework') as framework,
                json_extract_path_text(detail.Properties, 'PullRequestEnvironmentName') as pull_request_environment_name,
                json_extract_path_text(detail.Properties, 'Stage') as stage
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::Amplify::Branch'
                AND detail.data__TypeName = 'AWS::Amplify::Branch'
                AND listing.region = 'us-east-1'
    domains:
      name: domains
      id: aws.amplify.domains
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::Amplify::Domain
      x-identifiers:
        - Arn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Amplify::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/domains/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AppId') as app_id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.AutoSubDomainCreationPatterns') as auto_sub_domain_creation_patterns,
              JSON_EXTRACT(Properties, '$.AutoSubDomainIAMRole') as auto_sub_domain_iam_role,
              JSON_EXTRACT(Properties, '$.CertificateRecord') as certificate_record,
              JSON_EXTRACT(Properties, '$.Certificate') as certificate,
              JSON_EXTRACT(Properties, '$.CertificateSettings') as certificate_settings,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DomainStatus') as domain_status,
              JSON_EXTRACT(Properties, '$.UpdateStatus') as update_status,
              JSON_EXTRACT(Properties, '$.EnableAutoSubDomain') as enable_auto_sub_domain,
              JSON_EXTRACT(Properties, '$.StatusReason') as status_reason,
              JSON_EXTRACT(Properties, '$.SubDomainSettings') as sub_domain_settings
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::Domain'
              AND data__Identifier = '<Arn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AppId') as app_id,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.AutoSubDomainCreationPatterns') as auto_sub_domain_creation_patterns,
                JSON_EXTRACT(detail.Properties, '$.AutoSubDomainIAMRole') as auto_sub_domain_iam_role,
                JSON_EXTRACT(detail.Properties, '$.CertificateRecord') as certificate_record,
                JSON_EXTRACT(detail.Properties, '$.Certificate') as certificate,
                JSON_EXTRACT(detail.Properties, '$.CertificateSettings') as certificate_settings,
                JSON_EXTRACT(detail.Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(detail.Properties, '$.DomainStatus') as domain_status,
                JSON_EXTRACT(detail.Properties, '$.UpdateStatus') as update_status,
                JSON_EXTRACT(detail.Properties, '$.EnableAutoSubDomain') as enable_auto_sub_domain,
                JSON_EXTRACT(detail.Properties, '$.StatusReason') as status_reason,
                JSON_EXTRACT(detail.Properties, '$.SubDomainSettings') as sub_domain_settings
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Amplify::Domain'
                AND detail.data__TypeName = 'AWS::Amplify::Domain'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AppId') as app_id,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'AutoSubDomainCreationPatterns') as auto_sub_domain_creation_patterns,
                  json_extract_path_text(Properties, 'AutoSubDomainIAMRole') as auto_sub_domain_iam_role,
                  json_extract_path_text(Properties, 'CertificateRecord') as certificate_record,
                  json_extract_path_text(Properties, 'Certificate') as certificate,
                  json_extract_path_text(Properties, 'CertificateSettings') as certificate_settings,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'DomainStatus') as domain_status,
                  json_extract_path_text(Properties, 'UpdateStatus') as update_status,
                  json_extract_path_text(Properties, 'EnableAutoSubDomain') as enable_auto_sub_domain,
                  json_extract_path_text(Properties, 'StatusReason') as status_reason,
                  json_extract_path_text(Properties, 'SubDomainSettings') as sub_domain_settings
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Amplify::Domain'
                  AND data__Identifier = '<Arn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AppId') as app_id,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'AutoSubDomainCreationPatterns') as auto_sub_domain_creation_patterns,
                    json_extract_path_text(detail.Properties, 'AutoSubDomainIAMRole') as auto_sub_domain_iam_role,
                    json_extract_path_text(detail.Properties, 'CertificateRecord') as certificate_record,
                    json_extract_path_text(detail.Properties, 'Certificate') as certificate,
                    json_extract_path_text(detail.Properties, 'CertificateSettings') as certificate_settings,
                    json_extract_path_text(detail.Properties, 'DomainName') as domain_name,
                    json_extract_path_text(detail.Properties, 'DomainStatus') as domain_status,
                    json_extract_path_text(detail.Properties, 'UpdateStatus') as update_status,
                    json_extract_path_text(detail.Properties, 'EnableAutoSubDomain') as enable_auto_sub_domain,
                    json_extract_path_text(detail.Properties, 'StatusReason') as status_reason,
                    json_extract_path_text(detail.Properties, 'SubDomainSettings') as sub_domain_settings
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Amplify::Domain'
                    AND detail.data__TypeName = 'AWS::Amplify::Domain'
                    AND listing.region = 'us-east-1'
    domains_list_only:
      name: domains_list_only
      id: aws.amplify.domains_list_only
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::Amplify::Domain
      x-identifiers:
        - Arn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Arn') as arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::Domain'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Arn') as arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Amplify::Domain'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__App&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApp
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Branch&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateBranch
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateBranchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDomain
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
