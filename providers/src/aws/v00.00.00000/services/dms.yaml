openapi: 3.0.0
info:
  title: DMS
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Tag:
      type: object
      description: |-
        <p>The key or keys of the key-value pairs for the resource tag or tags assigned to the
                    resource.</p>
      properties:
        Key:
          type: string
          maxLength: 128
          minLength: 1
          description: <p>Tag key.</p>
        Value:
          type: string
          maxLength: 256
          minLength: 1
          description: <p>Tag value.</p>
      required:
        - Key
        - Value
      additionalProperties: false
    DataMigrationSettings:
      type: object
      properties:
        CloudwatchLogsEnabled:
          type: boolean
          description: The property specifies whether to enable the Cloudwatch log.
        NumberOfJobs:
          type: integer
          description: The number of parallel jobs that trigger parallel threads to unload the tables from the source, and then load them to the target.
          minimum: 1
          maximum: 50
        SelectionRules:
          type: string
          description: The property specifies the rules of selecting objects for data migration.
      additionalProperties: false
    SourceDataSettings:
      type: object
      properties:
        CDCStartPosition:
          type: string
          description: The property is a point in the database engine's log that defines a time where you can begin CDC.
          maxLength: 40
        CDCStartTime:
          type: string
          description: The property indicates the start time for a change data capture (CDC) operation. The value is server time in UTC format.
          maxLength: 40
        CDCStopTime:
          type: string
          description: The property indicates the stop time for a change data capture (CDC) operation. The value is server time in UTC format.
          maxLength: 40
        SlotName:
          type: string
          description: The property sets the name of a previously created logical replication slot for a change data capture (CDC) load of the source instance.
          maxLength: 255
      additionalProperties: false
    DataMigration:
      type: object
      properties:
        DataMigrationName:
          description: The property describes a name to identify the data migration.
          type: string
          minLength: 1
          maxLength: 300
        DataMigrationArn:
          description: The property describes an ARN of the data migration.
          type: string
          minLength: 1
          maxLength: 300
        DataMigrationIdentifier:
          description: The property describes an ARN of the data migration.
          type: string
          minLength: 1
          maxLength: 300
        DataMigrationCreateTime:
          description: The property describes the create time of the data migration.
          type: string
          minLength: 1
          maxLength: 40
        ServiceAccessRoleArn:
          description: The property describes Amazon Resource Name (ARN) of the service access role.
          type: string
          minLength: 1
          maxLength: 300
        MigrationProjectIdentifier:
          description: The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        DataMigrationType:
          description: The property describes the type of migration.
          type: string
          enum:
            - full-load
            - cdc
            - full-load-and-cdc
        DataMigrationSettings:
          description: The property describes the settings for the data migration.
          $ref: '#/components/schemas/DataMigrationSettings'
        SourceDataSettings:
          description: The property describes the settings for the data migration.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/SourceDataSettings'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - DataMigrationType
        - MigrationProjectIdentifier
        - ServiceAccessRoleArn
      x-stackql-resource-name: data_migration
      description: Resource schema for AWS::DMS::DataMigration.
      x-type-name: AWS::DMS::DataMigration
      x-stackql-primary-identifier:
        - DataMigrationArn
      x-stackql-additional-identifiers:
        - - DataMigrationName
      x-write-only-properties:
        - DataMigrationIdentifier
      x-read-only-properties:
        - DataMigrationArn
        - DataMigrationCreateTime
      x-required-properties:
        - DataMigrationType
        - MigrationProjectIdentifier
        - ServiceAccessRoleArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
      x-required-permissions:
        create:
          - dms:CreateDataMigration
          - dms:DescribeDataMigrations
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:PassRole
        read:
          - dms:DescribeDataMigrations
          - dms:ListTagsForResource
        update:
          - dms:ModifyDataMigration
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
          - iam:PassRole
        delete:
          - dms:DeleteDataMigration
          - dms:RemoveTagsFromResource
        list:
          - dms:DescribeDataMigrations
          - dms:ListTagsForResource
    DmsSslModeValue:
      type: string
      enum:
        - none
        - require
        - verify-ca
        - verify-full
    MongoDbSslModeValue:
      type: string
      enum:
        - none
        - require
        - verify-full
    MongoDbAuthType:
      type: string
      enum:
        - 'no'
        - password
    MongoDbAuthMechanism:
      type: string
      enum:
        - default
        - mongodb_cr
        - scram_sha_1
    DataProvider:
      type: object
      properties:
        DataProviderName:
          description: The property describes a name to identify the data provider.
          type: string
          minLength: 1
          maxLength: 255
        DataProviderIdentifier:
          description: The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        DataProviderArn:
          description: The data provider ARN.
          type: string
          minLength: 1
          maxLength: 255
        DataProviderCreationTime:
          description: The data provider creation time.
          type: string
          minLength: 1
          maxLength: 40
        Description:
          description: The optional description of the data provider.
          type: string
          minLength: 1
          maxLength: 255
        Engine:
          description: The property describes a data engine for the data provider.
          type: string
          enum:
            - aurora
            - aurora_postgresql
            - mysql
            - oracle
            - postgres
            - sqlserver
            - redshift
            - mariadb
            - mongodb
            - docdb
        ExactSettings:
          description: The property describes the exact settings which can be modified
          type: boolean
          default: false
        Settings:
          description: The property identifies the exact type of settings for the data provider.
          type: object
          properties:
            PostgreSqlSettings:
              description: PostgreSqlSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                DatabaseName:
                  type: string
                SslMode:
                  type: object
                  $ref: '#/components/schemas/DmsSslModeValue'
                CertificateArn:
                  type: string
              required:
                - ServerName
                - Port
                - SslMode
                - DatabaseName
              additionalProperties: false
            MySqlSettings:
              description: MySqlSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                SslMode:
                  type: object
                  $ref: '#/components/schemas/DmsSslModeValue'
                CertificateArn:
                  type: string
              required:
                - ServerName
                - Port
                - SslMode
              additionalProperties: false
            OracleSettings:
              description: OracleSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                DatabaseName:
                  type: string
                SslMode:
                  type: object
                  $ref: '#/components/schemas/DmsSslModeValue'
                CertificateArn:
                  type: string
                AsmServer:
                  type: string
                SecretsManagerOracleAsmSecretId:
                  type: string
                SecretsManagerOracleAsmAccessRoleArn:
                  type: string
                SecretsManagerSecurityDbEncryptionSecretId:
                  type: string
                SecretsManagerSecurityDbEncryptionAccessRoleArn:
                  type: string
              required:
                - ServerName
                - Port
                - SslMode
                - DatabaseName
              additionalProperties: false
            MicrosoftSqlServerSettings:
              description: MicrosoftSqlServerSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                DatabaseName:
                  type: string
                SslMode:
                  type: object
                  $ref: '#/components/schemas/DmsSslModeValue'
                CertificateArn:
                  type: string
              required:
                - ServerName
                - Port
                - SslMode
                - DatabaseName
              additionalProperties: false
            RedshiftSettings:
              description: RedshiftSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                DatabaseName:
                  type: string
              required:
                - ServerName
                - Port
                - DatabaseName
              additionalProperties: false
            MariaDbSettings:
              description: MariaDbSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                SslMode:
                  type: object
                  $ref: '#/components/schemas/DmsSslModeValue'
                CertificateArn:
                  type: string
              required:
                - ServerName
                - Port
                - SslMode
              additionalProperties: false
            DocDbSettings:
              description: DocDbSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                DatabaseName:
                  type: string
                SslMode:
                  type: object
                  $ref: '#/components/schemas/MongoDbSslModeValue'
                CertificateArn:
                  type: string
              required:
                - ServerName
                - Port
                - DatabaseName
              additionalProperties: false
            MongoDbSettings:
              description: MongoDbSettings property identifier.
              type: object
              properties:
                ServerName:
                  type: string
                Port:
                  type: integer
                DatabaseName:
                  type: string
                SslMode:
                  type: object
                  $ref: '#/components/schemas/MongoDbSslModeValue'
                CertificateArn:
                  type: string
                AuthType:
                  type: object
                  $ref: '#/components/schemas/MongoDbAuthType'
                AuthSource:
                  type: string
                AuthMechanism:
                  type: object
                  $ref: '#/components/schemas/MongoDbAuthMechanism'
              required:
                - ServerName
                - Port
              additionalProperties: false
          anyOf:
            - required:
                - PostgreSqlSettings
            - required:
                - MySqlSettings
            - required:
                - OracleSettings
            - required:
                - MicrosoftSqlServerSettings
            - required:
                - RedshiftSettings
            - required:
                - DocDbSettings
            - required:
                - MariaDbSettings
            - required:
                - MongoDbSettings
          additionalProperties: false
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Engine
      x-stackql-resource-name: data_provider
      description: Resource schema for AWS::DMS::DataProvider
      x-type-name: AWS::DMS::DataProvider
      x-stackql-primary-identifier:
        - DataProviderArn
      x-stackql-additional-identifiers:
        - - DataProviderName
      x-write-only-properties:
        - DataProviderIdentifier
        - ExactSettings
      x-read-only-properties:
        - DataProviderArn
        - DataProviderCreationTime
      x-required-properties:
        - Engine
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
      x-required-permissions:
        create:
          - dms:CreateDataProvider
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:GetRole
          - iam:PassRole
        read:
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:ListTagsForResource
        update:
          - dms:UpdateDataProvider
          - dms:ModifyDataProvider
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
        delete:
          - dms:DeleteDataProvider
        list:
          - dms:ListDataProviders
          - dms:DescribeDataProviders
          - dms:ListTagsForResource
    InstanceProfile:
      type: object
      properties:
        InstanceProfileArn:
          description: The property describes an ARN of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileIdentifier:
          description: The property describes an identifier for the instance profile. It is used for describing/deleting/modifying. Can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        AvailabilityZone:
          description: The property describes an availability zone of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        Description:
          description: The optional description of the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        KmsKeyArn:
          description: The property describes kms key arn for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        PubliclyAccessible:
          description: The property describes the publicly accessible of the instance profile
          type: boolean
          default: false
        NetworkType:
          description: The property describes a network type for the instance profile.
          type: string
          enum:
            - IPV4
            - DUAL
        InstanceProfileName:
          description: The property describes a name for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileCreationTime:
          description: The property describes a creating time of the instance profile.
          type: string
          minLength: 1
          maxLength: 40
        SubnetGroupIdentifier:
          description: The property describes a subnet group identifier for the instance profile.
          type: string
          minLength: 1
          maxLength: 255
        VpcSecurityGroups:
          description: The property describes vps security groups for the instance profile.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: instance_profile
      description: Resource schema for AWS::DMS::InstanceProfile.
      x-type-name: AWS::DMS::InstanceProfile
      x-stackql-primary-identifier:
        - InstanceProfileArn
      x-stackql-additional-identifiers:
        - - InstanceProfileName
      x-write-only-properties:
        - InstanceProfileIdentifier
      x-read-only-properties:
        - InstanceProfileArn
        - InstanceProfileCreationTime
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
      x-required-permissions:
        create:
          - dms:CreateInstanceProfile
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:AddTagsToResource
          - dms:ListTagsForResource
        read:
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:ListTagsForResource
        update:
          - dms:UpdateInstanceProfile
          - dms:ModifyInstanceProfile
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
        delete:
          - dms:DeleteInstanceProfile
        list:
          - dms:ListInstanceProfiles
          - dms:DescribeInstanceProfiles
          - dms:ListTagsForResource
    DataProviderDescriptor:
      type: object
      description: It is an object that describes Source and Target DataProviders and credentials for connecting to databases that are used in MigrationProject
      additionalProperties: false
      properties:
        DataProviderIdentifier:
          type: string
        DataProviderName:
          type: string
        DataProviderArn:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
    MigrationProject:
      type: object
      properties:
        MigrationProjectName:
          description: The property describes a name to identify the migration project.
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectIdentifier:
          description: The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectArn:
          description: The property describes an ARN of the migration project.
          type: string
          minLength: 1
          maxLength: 255
        MigrationProjectCreationTime:
          description: The property describes a creating time of the migration project.
          type: string
          minLength: 1
          maxLength: 40
        InstanceProfileIdentifier:
          description: The property describes an instance profile identifier for the migration project. For create
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileName:
          description: The property describes an instance profile name for the migration project. For read
          type: string
          minLength: 1
          maxLength: 255
        InstanceProfileArn:
          description: The property describes an instance profile arn for the migration project. For read
          type: string
          minLength: 1
          maxLength: 255
        TransformationRules:
          description: The property describes transformation rules for the migration project.
          type: string
        Description:
          description: The optional description of the migration project.
          type: string
          minLength: 1
          maxLength: 255
        SchemaConversionApplicationAttributes:
          description: The property describes schema conversion application attributes for the migration project.
          type: object
          additionalProperties: false
          properties:
            S3BucketPath:
              type: string
            S3BucketRoleArn:
              type: string
        SourceDataProviderDescriptors:
          description: The property describes source data provider descriptors for the migration project.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataProviderDescriptor'
        TargetDataProviderDescriptors:
          description: The property describes target data provider descriptors for the migration project.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataProviderDescriptor'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: migration_project
      description: Resource schema for AWS::DMS::MigrationProject
      x-type-name: AWS::DMS::MigrationProject
      x-stackql-primary-identifier:
        - MigrationProjectArn
      x-stackql-additional-identifiers:
        - - MigrationProjectName
      x-write-only-properties:
        - MigrationProjectIdentifier
        - InstanceProfileIdentifier
        - SourceDataProviderDescriptors/*/DataProviderIdentifier
        - TargetDataProviderDescriptors/*/DataProviderIdentifier
      x-read-only-properties:
        - MigrationProjectArn
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
      x-required-permissions:
        create:
          - dms:CreateMigrationProject
          - dms:ListMigrationProjects
          - dms:DescribeMigrationProjects
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:PassRole
        read:
          - dms:DescribeMigrationProjects
          - dms:ListMigrationProjects
          - dms:ListTagsForResource
        update:
          - dms:UpdateMigrationProject
          - dms:ModifyMigrationProject
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
          - iam:PassRole
        delete:
          - dms:DeleteMigrationProject
        list:
          - dms:ListMigrationProjects
          - dms:DescribeMigrationProjects
          - dms:ListTagsForResource
    ComputeConfig:
      description: Configuration parameters for provisioning a AWS DMS Serverless replication
      type: object
      properties:
        AvailabilityZone:
          type: string
        DnsNameServers:
          type: string
        KmsKeyId:
          type: string
        MaxCapacityUnits:
          type: integer
        MinCapacityUnits:
          type: integer
        MultiAZ:
          type: boolean
        PreferredMaintenanceWindow:
          type: string
        ReplicationSubnetGroupId:
          type: string
        VpcSecurityGroupIds:
          type: array
          items:
            type: string
      required:
        - MaxCapacityUnits
      additionalProperties: false
    ReplicationConfig:
      type: object
      properties:
        ReplicationConfigIdentifier:
          description: A unique identifier of replication configuration
          type: string
        ReplicationConfigArn:
          description: The Amazon Resource Name (ARN) of the Replication Config
          type: string
        SourceEndpointArn:
          description: The Amazon Resource Name (ARN) of the source endpoint for this AWS DMS Serverless replication configuration
          type: string
        TargetEndpointArn:
          description: The Amazon Resource Name (ARN) of the target endpoint for this AWS DMS Serverless replication configuration
          type: string
        ReplicationType:
          description: The type of AWS DMS Serverless replication to provision using this replication configuration
          type: string
          enum:
            - full-load
            - full-load-and-cdc
            - cdc
        ComputeConfig:
          $ref: '#/components/schemas/ComputeConfig'
        ReplicationSettings:
          description: JSON settings for Servereless replications that are provisioned using this replication configuration
          type: object
        SupplementalSettings:
          description: JSON settings for specifying supplemental data
          type: object
        ResourceIdentifier:
          description: A unique value or name that you get set for a given resource that can be used to construct an Amazon Resource Name (ARN) for that resource
          type: string
        TableMappings:
          description: JSON table mappings for AWS DMS Serverless replications that are provisioned using this replication configuration
          type: object
        Tags:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 1
          description: <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
      required:
        - ReplicationConfigIdentifier
        - SourceEndpointArn
        - TargetEndpointArn
        - ReplicationType
        - ComputeConfig
        - TableMappings
      x-stackql-resource-name: replication_config
      description: A replication configuration that you later provide to configure and start a AWS DMS Serverless replication
      x-type-name: AWS::DMS::ReplicationConfig
      x-stackql-primary-identifier:
        - ReplicationConfigArn
      x-stackql-additional-identifiers:
        - - ReplicationConfigIdentifier
      x-create-only-properties:
        - ResourceIdentifier
      x-read-only-properties:
        - ReplicationConfigArn
      x-required-properties:
        - ReplicationConfigIdentifier
        - SourceEndpointArn
        - TargetEndpointArn
        - ReplicationType
        - ComputeConfig
        - TableMappings
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - dms:RemoveTagsFromResource
      x-required-permissions:
        create:
          - dms:CreateReplicationConfig
          - dms:AddTagsToResource
          - dms:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:UpdateRoleDescription
        read:
          - dms:DescribeReplicationConfigs
          - dms:ListTagsForResource
        update:
          - dms:ModifyReplicationConfig
          - dms:AddTagsToResource
          - dms:RemoveTagsFromResource
          - dms:ListTagsForResource
          - iam:CreateServiceLinkedRole
          - iam:AttachRolePolicy
          - iam:PutRolePolicy
          - iam:UpdateRoleDescription
        list:
          - dms:DescribeReplicationConfigs
          - dms:ListTagsForResource
        delete:
          - dms:DescribeReplicationConfigs
          - dms:DeleteReplicationConfig
          - dms:ListTagsForResource
          - iam:DeleteServiceLinkedRole
          - iam:GetServiceLinkedRoleDeletionStatus
    CreateDataMigrationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DataMigrationName:
              description: The property describes a name to identify the data migration.
              type: string
              minLength: 1
              maxLength: 300
            DataMigrationArn:
              description: The property describes an ARN of the data migration.
              type: string
              minLength: 1
              maxLength: 300
            DataMigrationIdentifier:
              description: The property describes an ARN of the data migration.
              type: string
              minLength: 1
              maxLength: 300
            DataMigrationCreateTime:
              description: The property describes the create time of the data migration.
              type: string
              minLength: 1
              maxLength: 40
            ServiceAccessRoleArn:
              description: The property describes Amazon Resource Name (ARN) of the service access role.
              type: string
              minLength: 1
              maxLength: 300
            MigrationProjectIdentifier:
              description: The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
              type: string
              minLength: 1
              maxLength: 255
            DataMigrationType:
              description: The property describes the type of migration.
              type: string
              enum:
                - full-load
                - cdc
                - full-load-and-cdc
            DataMigrationSettings:
              description: The property describes the settings for the data migration.
              $ref: '#/components/schemas/DataMigrationSettings'
            SourceDataSettings:
              description: The property describes the settings for the data migration.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/SourceDataSettings'
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateDataMigrationRequest
      type: object
      required: []
    CreateDataProviderRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DataProviderName:
              description: The property describes a name to identify the data provider.
              type: string
              minLength: 1
              maxLength: 255
            DataProviderIdentifier:
              description: The property describes an identifier for the data provider. It is used for describing/deleting/modifying can be name/arn
              type: string
              minLength: 1
              maxLength: 255
            DataProviderArn:
              description: The data provider ARN.
              type: string
              minLength: 1
              maxLength: 255
            DataProviderCreationTime:
              description: The data provider creation time.
              type: string
              minLength: 1
              maxLength: 40
            Description:
              description: The optional description of the data provider.
              type: string
              minLength: 1
              maxLength: 255
            Engine:
              description: The property describes a data engine for the data provider.
              type: string
              enum:
                - aurora
                - aurora_postgresql
                - mysql
                - oracle
                - postgres
                - sqlserver
                - redshift
                - mariadb
                - mongodb
                - docdb
            ExactSettings:
              description: The property describes the exact settings which can be modified
              type: boolean
              default: false
            Settings:
              description: The property identifies the exact type of settings for the data provider.
              type: object
              properties:
                PostgreSqlSettings:
                  description: PostgreSqlSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - SslMode
                    - DatabaseName
                  additionalProperties: false
                MySqlSettings:
                  description: MySqlSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - SslMode
                  additionalProperties: false
                OracleSettings:
                  description: OracleSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                    AsmServer:
                      type: string
                    SecretsManagerOracleAsmSecretId:
                      type: string
                    SecretsManagerOracleAsmAccessRoleArn:
                      type: string
                    SecretsManagerSecurityDbEncryptionSecretId:
                      type: string
                    SecretsManagerSecurityDbEncryptionAccessRoleArn:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - SslMode
                    - DatabaseName
                  additionalProperties: false
                MicrosoftSqlServerSettings:
                  description: MicrosoftSqlServerSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - SslMode
                    - DatabaseName
                  additionalProperties: false
                RedshiftSettings:
                  description: RedshiftSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - DatabaseName
                  additionalProperties: false
                MariaDbSettings:
                  description: MariaDbSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/DmsSslModeValue'
                    CertificateArn:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - SslMode
                  additionalProperties: false
                DocDbSettings:
                  description: DocDbSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/MongoDbSslModeValue'
                    CertificateArn:
                      type: string
                  required:
                    - ServerName
                    - Port
                    - DatabaseName
                  additionalProperties: false
                MongoDbSettings:
                  description: MongoDbSettings property identifier.
                  type: object
                  properties:
                    ServerName:
                      type: string
                    Port:
                      type: integer
                    DatabaseName:
                      type: string
                    SslMode:
                      type: object
                      $ref: '#/components/schemas/MongoDbSslModeValue'
                    CertificateArn:
                      type: string
                    AuthType:
                      type: object
                      $ref: '#/components/schemas/MongoDbAuthType'
                    AuthSource:
                      type: string
                    AuthMechanism:
                      type: object
                      $ref: '#/components/schemas/MongoDbAuthMechanism'
                  required:
                    - ServerName
                    - Port
                  additionalProperties: false
              anyOf:
                - required:
                    - PostgreSqlSettings
                - required:
                    - MySqlSettings
                - required:
                    - OracleSettings
                - required:
                    - MicrosoftSqlServerSettings
                - required:
                    - RedshiftSettings
                - required:
                    - DocDbSettings
                - required:
                    - MariaDbSettings
                - required:
                    - MongoDbSettings
              additionalProperties: false
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateDataProviderRequest
      type: object
      required: []
    CreateInstanceProfileRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            InstanceProfileArn:
              description: The property describes an ARN of the instance profile.
              type: string
              minLength: 1
              maxLength: 255
            InstanceProfileIdentifier:
              description: The property describes an identifier for the instance profile. It is used for describing/deleting/modifying. Can be name/arn
              type: string
              minLength: 1
              maxLength: 255
            AvailabilityZone:
              description: The property describes an availability zone of the instance profile.
              type: string
              minLength: 1
              maxLength: 255
            Description:
              description: The optional description of the instance profile.
              type: string
              minLength: 1
              maxLength: 255
            KmsKeyArn:
              description: The property describes kms key arn for the instance profile.
              type: string
              minLength: 1
              maxLength: 255
            PubliclyAccessible:
              description: The property describes the publicly accessible of the instance profile
              type: boolean
              default: false
            NetworkType:
              description: The property describes a network type for the instance profile.
              type: string
              enum:
                - IPV4
                - DUAL
            InstanceProfileName:
              description: The property describes a name for the instance profile.
              type: string
              minLength: 1
              maxLength: 255
            InstanceProfileCreationTime:
              description: The property describes a creating time of the instance profile.
              type: string
              minLength: 1
              maxLength: 40
            SubnetGroupIdentifier:
              description: The property describes a subnet group identifier for the instance profile.
              type: string
              minLength: 1
              maxLength: 255
            VpcSecurityGroups:
              description: The property describes vps security groups for the instance profile.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                type: string
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateInstanceProfileRequest
      type: object
      required: []
    CreateMigrationProjectRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            MigrationProjectName:
              description: The property describes a name to identify the migration project.
              type: string
              minLength: 1
              maxLength: 255
            MigrationProjectIdentifier:
              description: The property describes an identifier for the migration project. It is used for describing/deleting/modifying can be name/arn
              type: string
              minLength: 1
              maxLength: 255
            MigrationProjectArn:
              description: The property describes an ARN of the migration project.
              type: string
              minLength: 1
              maxLength: 255
            MigrationProjectCreationTime:
              description: The property describes a creating time of the migration project.
              type: string
              minLength: 1
              maxLength: 40
            InstanceProfileIdentifier:
              description: The property describes an instance profile identifier for the migration project. For create
              type: string
              minLength: 1
              maxLength: 255
            InstanceProfileName:
              description: The property describes an instance profile name for the migration project. For read
              type: string
              minLength: 1
              maxLength: 255
            InstanceProfileArn:
              description: The property describes an instance profile arn for the migration project. For read
              type: string
              minLength: 1
              maxLength: 255
            TransformationRules:
              description: The property describes transformation rules for the migration project.
              type: string
            Description:
              description: The optional description of the migration project.
              type: string
              minLength: 1
              maxLength: 255
            SchemaConversionApplicationAttributes:
              description: The property describes schema conversion application attributes for the migration project.
              type: object
              additionalProperties: false
              properties:
                S3BucketPath:
                  type: string
                S3BucketRoleArn:
                  type: string
            SourceDataProviderDescriptors:
              description: The property describes source data provider descriptors for the migration project.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/DataProviderDescriptor'
            TargetDataProviderDescriptors:
              description: The property describes target data provider descriptors for the migration project.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/DataProviderDescriptor'
            Tags:
              description: An array of key-value pairs to apply to this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateMigrationProjectRequest
      type: object
      required: []
    CreateReplicationConfigRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            ReplicationConfigIdentifier:
              description: A unique identifier of replication configuration
              type: string
            ReplicationConfigArn:
              description: The Amazon Resource Name (ARN) of the Replication Config
              type: string
            SourceEndpointArn:
              description: The Amazon Resource Name (ARN) of the source endpoint for this AWS DMS Serverless replication configuration
              type: string
            TargetEndpointArn:
              description: The Amazon Resource Name (ARN) of the target endpoint for this AWS DMS Serverless replication configuration
              type: string
            ReplicationType:
              description: The type of AWS DMS Serverless replication to provision using this replication configuration
              type: string
              enum:
                - full-load
                - full-load-and-cdc
                - cdc
            ComputeConfig:
              $ref: '#/components/schemas/ComputeConfig'
            ReplicationSettings:
              description: JSON settings for Servereless replications that are provisioned using this replication configuration
              type: object
            SupplementalSettings:
              description: JSON settings for specifying supplemental data
              type: object
            ResourceIdentifier:
              description: A unique value or name that you get set for a given resource that can be used to construct an Amazon Resource Name (ARN) for that resource
              type: string
            TableMappings:
              description: JSON table mappings for AWS DMS Serverless replications that are provisioned using this replication configuration
              type: object
            Tags:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              maxItems: 200
              minItems: 1
              description: <p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>
          x-stackQL-stringOnly: true
      x-title: CreateReplicationConfigRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    data_migrations:
      name: data_migrations
      id: aws.dms.data_migrations
      x-cfn-schema-name: DataMigration
      x-cfn-type-name: AWS::DMS::DataMigration
      x-identifiers:
        - DataMigrationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataMigration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::DataMigration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::DataMigration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::DataMigration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_migrations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_migrations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_migrations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DataMigrationName') as data_migration_name,
              JSON_EXTRACT(Properties, '$.DataMigrationArn') as data_migration_arn,
              JSON_EXTRACT(Properties, '$.DataMigrationIdentifier') as data_migration_identifier,
              JSON_EXTRACT(Properties, '$.DataMigrationCreateTime') as data_migration_create_time,
              JSON_EXTRACT(Properties, '$.ServiceAccessRoleArn') as service_access_role_arn,
              JSON_EXTRACT(Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
              JSON_EXTRACT(Properties, '$.DataMigrationType') as data_migration_type,
              JSON_EXTRACT(Properties, '$.DataMigrationSettings') as data_migration_settings,
              JSON_EXTRACT(Properties, '$.SourceDataSettings') as source_data_settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataMigration'
              AND data__Identifier = '<DataMigrationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DataMigrationName') as data_migration_name,
                JSON_EXTRACT(detail.Properties, '$.DataMigrationArn') as data_migration_arn,
                JSON_EXTRACT(detail.Properties, '$.DataMigrationIdentifier') as data_migration_identifier,
                JSON_EXTRACT(detail.Properties, '$.DataMigrationCreateTime') as data_migration_create_time,
                JSON_EXTRACT(detail.Properties, '$.ServiceAccessRoleArn') as service_access_role_arn,
                JSON_EXTRACT(detail.Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
                JSON_EXTRACT(detail.Properties, '$.DataMigrationType') as data_migration_type,
                JSON_EXTRACT(detail.Properties, '$.DataMigrationSettings') as data_migration_settings,
                JSON_EXTRACT(detail.Properties, '$.SourceDataSettings') as source_data_settings,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DMS::DataMigration'
                AND detail.data__TypeName = 'AWS::DMS::DataMigration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DataMigrationName') as data_migration_name,
                  json_extract_path_text(Properties, 'DataMigrationArn') as data_migration_arn,
                  json_extract_path_text(Properties, 'DataMigrationIdentifier') as data_migration_identifier,
                  json_extract_path_text(Properties, 'DataMigrationCreateTime') as data_migration_create_time,
                  json_extract_path_text(Properties, 'ServiceAccessRoleArn') as service_access_role_arn,
                  json_extract_path_text(Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                  json_extract_path_text(Properties, 'DataMigrationType') as data_migration_type,
                  json_extract_path_text(Properties, 'DataMigrationSettings') as data_migration_settings,
                  json_extract_path_text(Properties, 'SourceDataSettings') as source_data_settings,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataMigration'
                  AND data__Identifier = '<DataMigrationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DataMigrationName') as data_migration_name,
                    json_extract_path_text(detail.Properties, 'DataMigrationArn') as data_migration_arn,
                    json_extract_path_text(detail.Properties, 'DataMigrationIdentifier') as data_migration_identifier,
                    json_extract_path_text(detail.Properties, 'DataMigrationCreateTime') as data_migration_create_time,
                    json_extract_path_text(detail.Properties, 'ServiceAccessRoleArn') as service_access_role_arn,
                    json_extract_path_text(detail.Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                    json_extract_path_text(detail.Properties, 'DataMigrationType') as data_migration_type,
                    json_extract_path_text(detail.Properties, 'DataMigrationSettings') as data_migration_settings,
                    json_extract_path_text(detail.Properties, 'SourceDataSettings') as source_data_settings,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DMS::DataMigration'
                    AND detail.data__TypeName = 'AWS::DMS::DataMigration'
                    AND listing.region = 'us-east-1'
    data_migrations_list_only:
      name: data_migrations_list_only
      id: aws.dms.data_migrations_list_only
      x-cfn-schema-name: DataMigration
      x-cfn-type-name: AWS::DMS::DataMigration
      x-identifiers:
        - DataMigrationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataMigrationArn') as data_migration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataMigration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataMigrationArn') as data_migration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataMigration'
                AND region = 'us-east-1'
    data_migration_tags:
      name: data_migration_tags
      id: aws.dms.data_migration_tags
      x-cfn-schema-name: DataMigration
      x-cfn-type-name: AWS::DMS::DataMigration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DataMigrationName') as data_migration_name,
              JSON_EXTRACT(detail.Properties, '$.DataMigrationArn') as data_migration_arn,
              JSON_EXTRACT(detail.Properties, '$.DataMigrationIdentifier') as data_migration_identifier,
              JSON_EXTRACT(detail.Properties, '$.DataMigrationCreateTime') as data_migration_create_time,
              JSON_EXTRACT(detail.Properties, '$.ServiceAccessRoleArn') as service_access_role_arn,
              JSON_EXTRACT(detail.Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
              JSON_EXTRACT(detail.Properties, '$.DataMigrationType') as data_migration_type,
              JSON_EXTRACT(detail.Properties, '$.DataMigrationSettings') as data_migration_settings,
              JSON_EXTRACT(detail.Properties, '$.SourceDataSettings') as source_data_settings
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::DMS::DataMigration'
              AND detail.data__TypeName = 'AWS::DMS::DataMigration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DataMigrationName') as data_migration_name,
                json_extract_path_text(detail.Properties, 'DataMigrationArn') as data_migration_arn,
                json_extract_path_text(detail.Properties, 'DataMigrationIdentifier') as data_migration_identifier,
                json_extract_path_text(detail.Properties, 'DataMigrationCreateTime') as data_migration_create_time,
                json_extract_path_text(detail.Properties, 'ServiceAccessRoleArn') as service_access_role_arn,
                json_extract_path_text(detail.Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                json_extract_path_text(detail.Properties, 'DataMigrationType') as data_migration_type,
                json_extract_path_text(detail.Properties, 'DataMigrationSettings') as data_migration_settings,
                json_extract_path_text(detail.Properties, 'SourceDataSettings') as source_data_settings
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::DMS::DataMigration'
                AND detail.data__TypeName = 'AWS::DMS::DataMigration'
                AND listing.region = 'us-east-1'
    data_providers:
      name: data_providers
      id: aws.dms.data_providers
      x-cfn-schema-name: DataProvider
      x-cfn-type-name: AWS::DMS::DataProvider
      x-identifiers:
        - DataProviderArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__DataProvider&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::DataProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::DataProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::DataProvider"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/data_providers/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/data_providers/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/data_providers/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DataProviderName') as data_provider_name,
              JSON_EXTRACT(Properties, '$.DataProviderIdentifier') as data_provider_identifier,
              JSON_EXTRACT(Properties, '$.DataProviderArn') as data_provider_arn,
              JSON_EXTRACT(Properties, '$.DataProviderCreationTime') as data_provider_creation_time,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Engine') as engine,
              JSON_EXTRACT(Properties, '$.ExactSettings') as exact_settings,
              JSON_EXTRACT(Properties, '$.Settings') as settings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataProvider'
              AND data__Identifier = '<DataProviderArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.DataProviderName') as data_provider_name,
                JSON_EXTRACT(detail.Properties, '$.DataProviderIdentifier') as data_provider_identifier,
                JSON_EXTRACT(detail.Properties, '$.DataProviderArn') as data_provider_arn,
                JSON_EXTRACT(detail.Properties, '$.DataProviderCreationTime') as data_provider_creation_time,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Engine') as engine,
                JSON_EXTRACT(detail.Properties, '$.ExactSettings') as exact_settings,
                JSON_EXTRACT(detail.Properties, '$.Settings') as settings,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DMS::DataProvider'
                AND detail.data__TypeName = 'AWS::DMS::DataProvider'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DataProviderName') as data_provider_name,
                  json_extract_path_text(Properties, 'DataProviderIdentifier') as data_provider_identifier,
                  json_extract_path_text(Properties, 'DataProviderArn') as data_provider_arn,
                  json_extract_path_text(Properties, 'DataProviderCreationTime') as data_provider_creation_time,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Engine') as engine,
                  json_extract_path_text(Properties, 'ExactSettings') as exact_settings,
                  json_extract_path_text(Properties, 'Settings') as settings,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::DataProvider'
                  AND data__Identifier = '<DataProviderArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'DataProviderName') as data_provider_name,
                    json_extract_path_text(detail.Properties, 'DataProviderIdentifier') as data_provider_identifier,
                    json_extract_path_text(detail.Properties, 'DataProviderArn') as data_provider_arn,
                    json_extract_path_text(detail.Properties, 'DataProviderCreationTime') as data_provider_creation_time,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Engine') as engine,
                    json_extract_path_text(detail.Properties, 'ExactSettings') as exact_settings,
                    json_extract_path_text(detail.Properties, 'Settings') as settings,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DMS::DataProvider'
                    AND detail.data__TypeName = 'AWS::DMS::DataProvider'
                    AND listing.region = 'us-east-1'
    data_providers_list_only:
      name: data_providers_list_only
      id: aws.dms.data_providers_list_only
      x-cfn-schema-name: DataProvider
      x-cfn-type-name: AWS::DMS::DataProvider
      x-identifiers:
        - DataProviderArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.DataProviderArn') as data_provider_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataProvider'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'DataProviderArn') as data_provider_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::DataProvider'
                AND region = 'us-east-1'
    data_provider_tags:
      name: data_provider_tags
      id: aws.dms.data_provider_tags
      x-cfn-schema-name: DataProvider
      x-cfn-type-name: AWS::DMS::DataProvider
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.DataProviderName') as data_provider_name,
              JSON_EXTRACT(detail.Properties, '$.DataProviderIdentifier') as data_provider_identifier,
              JSON_EXTRACT(detail.Properties, '$.DataProviderArn') as data_provider_arn,
              JSON_EXTRACT(detail.Properties, '$.DataProviderCreationTime') as data_provider_creation_time,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.Engine') as engine,
              JSON_EXTRACT(detail.Properties, '$.ExactSettings') as exact_settings,
              JSON_EXTRACT(detail.Properties, '$.Settings') as settings
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::DMS::DataProvider'
              AND detail.data__TypeName = 'AWS::DMS::DataProvider'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'DataProviderName') as data_provider_name,
                json_extract_path_text(detail.Properties, 'DataProviderIdentifier') as data_provider_identifier,
                json_extract_path_text(detail.Properties, 'DataProviderArn') as data_provider_arn,
                json_extract_path_text(detail.Properties, 'DataProviderCreationTime') as data_provider_creation_time,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'Engine') as engine,
                json_extract_path_text(detail.Properties, 'ExactSettings') as exact_settings,
                json_extract_path_text(detail.Properties, 'Settings') as settings
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::DMS::DataProvider'
                AND detail.data__TypeName = 'AWS::DMS::DataProvider'
                AND listing.region = 'us-east-1'
    instance_profiles:
      name: instance_profiles
      id: aws.dms.instance_profiles
      x-cfn-schema-name: InstanceProfile
      x-cfn-type-name: AWS::DMS::InstanceProfile
      x-identifiers:
        - InstanceProfileArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__InstanceProfile&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::InstanceProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::InstanceProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::InstanceProfile"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/instance_profiles/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(Properties, '$.NetworkType') as network_type,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceProfileCreationTime') as instance_profile_creation_time,
              JSON_EXTRACT(Properties, '$.SubnetGroupIdentifier') as subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroups') as vpc_security_groups,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
              AND data__Identifier = '<InstanceProfileArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileArn') as instance_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
                JSON_EXTRACT(detail.Properties, '$.AvailabilityZone') as availability_zone,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
                JSON_EXTRACT(detail.Properties, '$.PubliclyAccessible') as publicly_accessible,
                JSON_EXTRACT(detail.Properties, '$.NetworkType') as network_type,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileName') as instance_profile_name,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileCreationTime') as instance_profile_creation_time,
                JSON_EXTRACT(detail.Properties, '$.SubnetGroupIdentifier') as subnet_group_identifier,
                JSON_EXTRACT(detail.Properties, '$.VpcSecurityGroups') as vpc_security_groups,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DMS::InstanceProfile'
                AND detail.data__TypeName = 'AWS::DMS::InstanceProfile'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn,
                  json_extract_path_text(Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                  json_extract_path_text(Properties, 'AvailabilityZone') as availability_zone,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'KmsKeyArn') as kms_key_arn,
                  json_extract_path_text(Properties, 'PubliclyAccessible') as publicly_accessible,
                  json_extract_path_text(Properties, 'NetworkType') as network_type,
                  json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                  json_extract_path_text(Properties, 'InstanceProfileCreationTime') as instance_profile_creation_time,
                  json_extract_path_text(Properties, 'SubnetGroupIdentifier') as subnet_group_identifier,
                  json_extract_path_text(Properties, 'VpcSecurityGroups') as vpc_security_groups,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
                  AND data__Identifier = '<InstanceProfileArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'InstanceProfileArn') as instance_profile_arn,
                    json_extract_path_text(detail.Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                    json_extract_path_text(detail.Properties, 'AvailabilityZone') as availability_zone,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                    json_extract_path_text(detail.Properties, 'PubliclyAccessible') as publicly_accessible,
                    json_extract_path_text(detail.Properties, 'NetworkType') as network_type,
                    json_extract_path_text(detail.Properties, 'InstanceProfileName') as instance_profile_name,
                    json_extract_path_text(detail.Properties, 'InstanceProfileCreationTime') as instance_profile_creation_time,
                    json_extract_path_text(detail.Properties, 'SubnetGroupIdentifier') as subnet_group_identifier,
                    json_extract_path_text(detail.Properties, 'VpcSecurityGroups') as vpc_security_groups,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DMS::InstanceProfile'
                    AND detail.data__TypeName = 'AWS::DMS::InstanceProfile'
                    AND listing.region = 'us-east-1'
    instance_profiles_list_only:
      name: instance_profiles_list_only
      id: aws.dms.instance_profiles_list_only
      x-cfn-schema-name: InstanceProfile
      x-cfn-type-name: AWS::DMS::InstanceProfile
      x-identifiers:
        - InstanceProfileArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::InstanceProfile'
                AND region = 'us-east-1'
    instance_profile_tags:
      name: instance_profile_tags
      id: aws.dms.instance_profile_tags
      x-cfn-schema-name: InstanceProfile
      x-cfn-type-name: AWS::DMS::InstanceProfile
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(detail.Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.KmsKeyArn') as kms_key_arn,
              JSON_EXTRACT(detail.Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(detail.Properties, '$.NetworkType') as network_type,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileCreationTime') as instance_profile_creation_time,
              JSON_EXTRACT(detail.Properties, '$.SubnetGroupIdentifier') as subnet_group_identifier,
              JSON_EXTRACT(detail.Properties, '$.VpcSecurityGroups') as vpc_security_groups
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::DMS::InstanceProfile'
              AND detail.data__TypeName = 'AWS::DMS::InstanceProfile'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'InstanceProfileArn') as instance_profile_arn,
                json_extract_path_text(detail.Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                json_extract_path_text(detail.Properties, 'AvailabilityZone') as availability_zone,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'KmsKeyArn') as kms_key_arn,
                json_extract_path_text(detail.Properties, 'PubliclyAccessible') as publicly_accessible,
                json_extract_path_text(detail.Properties, 'NetworkType') as network_type,
                json_extract_path_text(detail.Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(detail.Properties, 'InstanceProfileCreationTime') as instance_profile_creation_time,
                json_extract_path_text(detail.Properties, 'SubnetGroupIdentifier') as subnet_group_identifier,
                json_extract_path_text(detail.Properties, 'VpcSecurityGroups') as vpc_security_groups
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::DMS::InstanceProfile'
                AND detail.data__TypeName = 'AWS::DMS::InstanceProfile'
                AND listing.region = 'us-east-1'
    migration_projects:
      name: migration_projects
      id: aws.dms.migration_projects
      x-cfn-schema-name: MigrationProject
      x-cfn-type-name: AWS::DMS::MigrationProject
      x-identifiers:
        - MigrationProjectArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__MigrationProject&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::MigrationProject"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::MigrationProject"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::MigrationProject"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/migration_projects/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/migration_projects/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/migration_projects/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.MigrationProjectName') as migration_project_name,
              JSON_EXTRACT(Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
              JSON_EXTRACT(Properties, '$.MigrationProjectArn') as migration_project_arn,
              JSON_EXTRACT(Properties, '$.MigrationProjectCreationTime') as migration_project_creation_time,
              JSON_EXTRACT(Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(Properties, '$.TransformationRules') as transformation_rules,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
              JSON_EXTRACT(Properties, '$.SourceDataProviderDescriptors') as source_data_provider_descriptors,
              JSON_EXTRACT(Properties, '$.TargetDataProviderDescriptors') as target_data_provider_descriptors,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::MigrationProject'
              AND data__Identifier = '<MigrationProjectArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.MigrationProjectName') as migration_project_name,
                JSON_EXTRACT(detail.Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
                JSON_EXTRACT(detail.Properties, '$.MigrationProjectArn') as migration_project_arn,
                JSON_EXTRACT(detail.Properties, '$.MigrationProjectCreationTime') as migration_project_creation_time,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileName') as instance_profile_name,
                JSON_EXTRACT(detail.Properties, '$.InstanceProfileArn') as instance_profile_arn,
                JSON_EXTRACT(detail.Properties, '$.TransformationRules') as transformation_rules,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
                JSON_EXTRACT(detail.Properties, '$.SourceDataProviderDescriptors') as source_data_provider_descriptors,
                JSON_EXTRACT(detail.Properties, '$.TargetDataProviderDescriptors') as target_data_provider_descriptors,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DMS::MigrationProject'
                AND detail.data__TypeName = 'AWS::DMS::MigrationProject'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'MigrationProjectName') as migration_project_name,
                  json_extract_path_text(Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                  json_extract_path_text(Properties, 'MigrationProjectArn') as migration_project_arn,
                  json_extract_path_text(Properties, 'MigrationProjectCreationTime') as migration_project_creation_time,
                  json_extract_path_text(Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                  json_extract_path_text(Properties, 'InstanceProfileName') as instance_profile_name,
                  json_extract_path_text(Properties, 'InstanceProfileArn') as instance_profile_arn,
                  json_extract_path_text(Properties, 'TransformationRules') as transformation_rules,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
                  json_extract_path_text(Properties, 'SourceDataProviderDescriptors') as source_data_provider_descriptors,
                  json_extract_path_text(Properties, 'TargetDataProviderDescriptors') as target_data_provider_descriptors,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::MigrationProject'
                  AND data__Identifier = '<MigrationProjectArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'MigrationProjectName') as migration_project_name,
                    json_extract_path_text(detail.Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                    json_extract_path_text(detail.Properties, 'MigrationProjectArn') as migration_project_arn,
                    json_extract_path_text(detail.Properties, 'MigrationProjectCreationTime') as migration_project_creation_time,
                    json_extract_path_text(detail.Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                    json_extract_path_text(detail.Properties, 'InstanceProfileName') as instance_profile_name,
                    json_extract_path_text(detail.Properties, 'InstanceProfileArn') as instance_profile_arn,
                    json_extract_path_text(detail.Properties, 'TransformationRules') as transformation_rules,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
                    json_extract_path_text(detail.Properties, 'SourceDataProviderDescriptors') as source_data_provider_descriptors,
                    json_extract_path_text(detail.Properties, 'TargetDataProviderDescriptors') as target_data_provider_descriptors,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DMS::MigrationProject'
                    AND detail.data__TypeName = 'AWS::DMS::MigrationProject'
                    AND listing.region = 'us-east-1'
    migration_projects_list_only:
      name: migration_projects_list_only
      id: aws.dms.migration_projects_list_only
      x-cfn-schema-name: MigrationProject
      x-cfn-type-name: AWS::DMS::MigrationProject
      x-identifiers:
        - MigrationProjectArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.MigrationProjectArn') as migration_project_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::MigrationProject'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'MigrationProjectArn') as migration_project_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::MigrationProject'
                AND region = 'us-east-1'
    migration_project_tags:
      name: migration_project_tags
      id: aws.dms.migration_project_tags
      x-cfn-schema-name: MigrationProject
      x-cfn-type-name: AWS::DMS::MigrationProject
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.MigrationProjectName') as migration_project_name,
              JSON_EXTRACT(detail.Properties, '$.MigrationProjectIdentifier') as migration_project_identifier,
              JSON_EXTRACT(detail.Properties, '$.MigrationProjectArn') as migration_project_arn,
              JSON_EXTRACT(detail.Properties, '$.MigrationProjectCreationTime') as migration_project_creation_time,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileIdentifier') as instance_profile_identifier,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileName') as instance_profile_name,
              JSON_EXTRACT(detail.Properties, '$.InstanceProfileArn') as instance_profile_arn,
              JSON_EXTRACT(detail.Properties, '$.TransformationRules') as transformation_rules,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
              JSON_EXTRACT(detail.Properties, '$.SourceDataProviderDescriptors') as source_data_provider_descriptors,
              JSON_EXTRACT(detail.Properties, '$.TargetDataProviderDescriptors') as target_data_provider_descriptors
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::DMS::MigrationProject'
              AND detail.data__TypeName = 'AWS::DMS::MigrationProject'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'MigrationProjectName') as migration_project_name,
                json_extract_path_text(detail.Properties, 'MigrationProjectIdentifier') as migration_project_identifier,
                json_extract_path_text(detail.Properties, 'MigrationProjectArn') as migration_project_arn,
                json_extract_path_text(detail.Properties, 'MigrationProjectCreationTime') as migration_project_creation_time,
                json_extract_path_text(detail.Properties, 'InstanceProfileIdentifier') as instance_profile_identifier,
                json_extract_path_text(detail.Properties, 'InstanceProfileName') as instance_profile_name,
                json_extract_path_text(detail.Properties, 'InstanceProfileArn') as instance_profile_arn,
                json_extract_path_text(detail.Properties, 'TransformationRules') as transformation_rules,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'SchemaConversionApplicationAttributes') as schema_conversion_application_attributes,
                json_extract_path_text(detail.Properties, 'SourceDataProviderDescriptors') as source_data_provider_descriptors,
                json_extract_path_text(detail.Properties, 'TargetDataProviderDescriptors') as target_data_provider_descriptors
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::DMS::MigrationProject'
                AND detail.data__TypeName = 'AWS::DMS::MigrationProject'
                AND listing.region = 'us-east-1'
    replication_configs:
      name: replication_configs
      id: aws.dms.replication_configs
      x-cfn-schema-name: ReplicationConfig
      x-cfn-type-name: AWS::DMS::ReplicationConfig
      x-identifiers:
        - ReplicationConfigArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ReplicationConfig&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::ReplicationConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::ReplicationConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::DMS::ReplicationConfig"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/replication_configs/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/replication_configs/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/replication_configs/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.ReplicationConfigIdentifier') as replication_config_identifier,
              JSON_EXTRACT(Properties, '$.ReplicationConfigArn') as replication_config_arn,
              JSON_EXTRACT(Properties, '$.SourceEndpointArn') as source_endpoint_arn,
              JSON_EXTRACT(Properties, '$.TargetEndpointArn') as target_endpoint_arn,
              JSON_EXTRACT(Properties, '$.ReplicationType') as replication_type,
              JSON_EXTRACT(Properties, '$.ComputeConfig') as compute_config,
              JSON_EXTRACT(Properties, '$.ReplicationSettings') as replication_settings,
              JSON_EXTRACT(Properties, '$.SupplementalSettings') as supplemental_settings,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.TableMappings') as table_mappings,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
              AND data__Identifier = '<ReplicationConfigArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.ReplicationConfigIdentifier') as replication_config_identifier,
                JSON_EXTRACT(detail.Properties, '$.ReplicationConfigArn') as replication_config_arn,
                JSON_EXTRACT(detail.Properties, '$.SourceEndpointArn') as source_endpoint_arn,
                JSON_EXTRACT(detail.Properties, '$.TargetEndpointArn') as target_endpoint_arn,
                JSON_EXTRACT(detail.Properties, '$.ReplicationType') as replication_type,
                JSON_EXTRACT(detail.Properties, '$.ComputeConfig') as compute_config,
                JSON_EXTRACT(detail.Properties, '$.ReplicationSettings') as replication_settings,
                JSON_EXTRACT(detail.Properties, '$.SupplementalSettings') as supplemental_settings,
                JSON_EXTRACT(detail.Properties, '$.ResourceIdentifier') as resource_identifier,
                JSON_EXTRACT(detail.Properties, '$.TableMappings') as table_mappings,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND detail.data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'ReplicationConfigIdentifier') as replication_config_identifier,
                  json_extract_path_text(Properties, 'ReplicationConfigArn') as replication_config_arn,
                  json_extract_path_text(Properties, 'SourceEndpointArn') as source_endpoint_arn,
                  json_extract_path_text(Properties, 'TargetEndpointArn') as target_endpoint_arn,
                  json_extract_path_text(Properties, 'ReplicationType') as replication_type,
                  json_extract_path_text(Properties, 'ComputeConfig') as compute_config,
                  json_extract_path_text(Properties, 'ReplicationSettings') as replication_settings,
                  json_extract_path_text(Properties, 'SupplementalSettings') as supplemental_settings,
                  json_extract_path_text(Properties, 'ResourceIdentifier') as resource_identifier,
                  json_extract_path_text(Properties, 'TableMappings') as table_mappings,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
                  AND data__Identifier = '<ReplicationConfigArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'ReplicationConfigIdentifier') as replication_config_identifier,
                    json_extract_path_text(detail.Properties, 'ReplicationConfigArn') as replication_config_arn,
                    json_extract_path_text(detail.Properties, 'SourceEndpointArn') as source_endpoint_arn,
                    json_extract_path_text(detail.Properties, 'TargetEndpointArn') as target_endpoint_arn,
                    json_extract_path_text(detail.Properties, 'ReplicationType') as replication_type,
                    json_extract_path_text(detail.Properties, 'ComputeConfig') as compute_config,
                    json_extract_path_text(detail.Properties, 'ReplicationSettings') as replication_settings,
                    json_extract_path_text(detail.Properties, 'SupplementalSettings') as supplemental_settings,
                    json_extract_path_text(detail.Properties, 'ResourceIdentifier') as resource_identifier,
                    json_extract_path_text(detail.Properties, 'TableMappings') as table_mappings,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::DMS::ReplicationConfig'
                    AND detail.data__TypeName = 'AWS::DMS::ReplicationConfig'
                    AND listing.region = 'us-east-1'
    replication_configs_list_only:
      name: replication_configs_list_only
      id: aws.dms.replication_configs_list_only
      x-cfn-schema-name: ReplicationConfig
      x-cfn-type-name: AWS::DMS::ReplicationConfig
      x-identifiers:
        - ReplicationConfigArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationConfigArn') as replication_config_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ReplicationConfigArn') as replication_config_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND region = 'us-east-1'
    replication_config_tags:
      name: replication_config_tags
      id: aws.dms.replication_config_tags
      x-cfn-schema-name: ReplicationConfig
      x-cfn-type-name: AWS::DMS::ReplicationConfig
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.ReplicationConfigIdentifier') as replication_config_identifier,
              JSON_EXTRACT(detail.Properties, '$.ReplicationConfigArn') as replication_config_arn,
              JSON_EXTRACT(detail.Properties, '$.SourceEndpointArn') as source_endpoint_arn,
              JSON_EXTRACT(detail.Properties, '$.TargetEndpointArn') as target_endpoint_arn,
              JSON_EXTRACT(detail.Properties, '$.ReplicationType') as replication_type,
              JSON_EXTRACT(detail.Properties, '$.ComputeConfig') as compute_config,
              JSON_EXTRACT(detail.Properties, '$.ReplicationSettings') as replication_settings,
              JSON_EXTRACT(detail.Properties, '$.SupplementalSettings') as supplemental_settings,
              JSON_EXTRACT(detail.Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(detail.Properties, '$.TableMappings') as table_mappings
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::DMS::ReplicationConfig'
              AND detail.data__TypeName = 'AWS::DMS::ReplicationConfig'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'ReplicationConfigIdentifier') as replication_config_identifier,
                json_extract_path_text(detail.Properties, 'ReplicationConfigArn') as replication_config_arn,
                json_extract_path_text(detail.Properties, 'SourceEndpointArn') as source_endpoint_arn,
                json_extract_path_text(detail.Properties, 'TargetEndpointArn') as target_endpoint_arn,
                json_extract_path_text(detail.Properties, 'ReplicationType') as replication_type,
                json_extract_path_text(detail.Properties, 'ComputeConfig') as compute_config,
                json_extract_path_text(detail.Properties, 'ReplicationSettings') as replication_settings,
                json_extract_path_text(detail.Properties, 'SupplementalSettings') as supplemental_settings,
                json_extract_path_text(detail.Properties, 'ResourceIdentifier') as resource_identifier,
                json_extract_path_text(detail.Properties, 'TableMappings') as table_mappings
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND detail.data__TypeName = 'AWS::DMS::ReplicationConfig'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataMigration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataMigration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataMigrationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__DataProvider&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDataProvider
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDataProviderRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__InstanceProfile&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateInstanceProfile
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateInstanceProfileRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__MigrationProject&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateMigrationProject
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateMigrationProjectRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ReplicationConfig&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateReplicationConfig
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateReplicationConfigRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
