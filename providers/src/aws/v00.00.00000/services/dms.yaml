openapi: 3.0.0
info:
  title: DMS
  version: 1.0.0
paths: {}
components:
  schemas:
    Certificate:
      type: object
      properties:
        Id:
          type: string
        CertificateIdentifier:
          type: string
        CertificatePem:
          type: string
        CertificateWallet:
          type: string
      x-stackql-resource-name: certificate
      x-stackql-primaryIdentifier:
        - Id
    RedisSettings:
      type: object
      additionalProperties: false
      properties:
        SslSecurityProtocol:
          type: string
        AuthUserName:
          type: string
        ServerName:
          type: string
        Port:
          type: number
        SslCaCertificateArn:
          type: string
        AuthPassword:
          type: string
        AuthType:
          type: string
    SybaseSettings:
      type: object
      additionalProperties: false
      properties:
        SecretsManagerAccessRoleArn:
          type: string
        SecretsManagerSecretId:
          type: string
    IbmDb2Settings:
      type: object
      additionalProperties: false
      properties:
        SecretsManagerSecretId:
          type: string
        SetDataCaptureChanges:
          type: boolean
        SecretsManagerAccessRoleArn:
          type: string
        CurrentLsn:
          type: string
        MaxKBytesPerRead:
          type: integer
    OracleSettings:
      type: object
      additionalProperties: false
      properties:
        AsmPassword:
          type: string
        DirectPathParallelLoad:
          type: boolean
        AdditionalArchivedLogDestId:
          type: integer
        SpatialDataOptionToGeoJsonFunctionName:
          type: string
        ReplacePathPrefix:
          type: boolean
        FailTasksOnLobTruncation:
          type: boolean
        AsmServer:
          type: string
        SecretsManagerOracleAsmAccessRoleArn:
          type: string
        OraclePathPrefix:
          type: string
        ReadAheadBlocks:
          type: integer
        StandbyDelayTime:
          type: integer
        AllowSelectNestedTables:
          type: boolean
        AddSupplementalLogging:
          type: boolean
        SecretsManagerSecretId:
          type: string
        UseBFile:
          type: boolean
        EnableHomogenousTablespace:
          type: boolean
        AsmUser:
          type: string
        UseDirectPathFullLoad:
          type: boolean
        SecurityDbEncryption:
          type: string
        ParallelAsmReadThreads:
          type: integer
        ArchivedLogDestId:
          type: integer
        UsePathPrefix:
          type: string
        UseLogminerReader:
          type: boolean
        SecurityDbEncryptionName:
          type: string
        DirectPathNoLog:
          type: boolean
        SecretsManagerOracleAsmSecretId:
          type: string
        CharLengthSemantics:
          type: string
        NumberDatatypeScale:
          type: integer
        ReadTableSpaceName:
          type: boolean
        AccessAlternateDirectly:
          type: boolean
        UseAlternateFolderForOnline:
          type: boolean
        ArchivedLogsOnly:
          type: boolean
        ExtraArchivedLogDestIds:
          type: array
          uniqueItems: false
          items:
            type: integer
        RetryInterval:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
    KafkaSettings:
      type: object
      additionalProperties: false
      properties:
        Broker:
          type: string
        SaslPassword:
          type: string
        MessageFormat:
          type: string
        SslClientCertificateArn:
          type: string
        IncludeTransactionDetails:
          type: boolean
        SecurityProtocol:
          type: string
        IncludeTableAlterOperations:
          type: boolean
        SslCaCertificateArn:
          type: string
        IncludeControlDetails:
          type: boolean
        IncludePartitionValue:
          type: boolean
        NoHexPrefix:
          type: boolean
        SslClientKeyArn:
          type: string
        SslClientKeyPassword:
          type: string
        SaslUserName:
          type: string
        MessageMaxBytes:
          type: integer
        Topic:
          type: string
        PartitionIncludeSchemaTable:
          type: boolean
        IncludeNullAndEmpty:
          type: boolean
    MySqlSettings:
      type: object
      additionalProperties: false
      properties:
        ServerTimezone:
          type: string
        EventsPollInterval:
          type: integer
        ParallelLoadThreads:
          type: integer
        AfterConnectScript:
          type: string
        MaxFileSize:
          type: integer
        TargetDbType:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        CleanSourceMetadataOnMismatch:
          type: boolean
    NeptuneSettings:
      type: object
      additionalProperties: false
      properties:
        MaxRetryCount:
          type: integer
        MaxFileSize:
          type: integer
        S3BucketFolder:
          type: string
        ErrorRetryDuration:
          type: integer
        IamAuthEnabled:
          type: boolean
        S3BucketName:
          type: string
        ServiceAccessRoleArn:
          type: string
    ElasticsearchSettings:
      type: object
      additionalProperties: false
      properties:
        EndpointUri:
          type: string
        ErrorRetryDuration:
          type: integer
        FullLoadErrorPercentage:
          type: integer
        ServiceAccessRoleArn:
          type: string
    S3Settings:
      type: object
      additionalProperties: false
      properties:
        TimestampColumnName:
          type: string
        EnableStatistics:
          type: boolean
        DatePartitionSequence:
          type: string
        IncludeOpForFullLoad:
          type: boolean
        CsvNullValue:
          type: string
        CdcInsertsAndUpdates:
          type: boolean
        BucketName:
          type: string
        ServerSideEncryptionKmsKeyId:
          type: string
        UseTaskStartTimeForFullLoadTimestamp:
          type: boolean
        DataFormat:
          type: string
        CsvDelimiter:
          type: string
        IgnoreHeaderRows:
          type: integer
        CannedAclForObjects:
          type: string
        Rfc4180:
          type: boolean
        ServiceAccessRoleArn:
          type: string
        ParquetTimestampInMillisecond:
          type: boolean
        PreserveTransactions:
          type: boolean
        BucketFolder:
          type: string
        DatePartitionDelimiter:
          type: string
        EncodingType:
          type: string
        ParquetVersion:
          type: string
        AddColumnName:
          type: boolean
        CdcMinFileSize:
          type: integer
        ExternalTableDefinition:
          type: string
        UseCsvNoSupValue:
          type: boolean
        MaxFileSize:
          type: integer
        CsvNoSupValue:
          type: string
        CdcPath:
          type: string
        CsvRowDelimiter:
          type: string
        RowGroupLength:
          type: integer
        CdcMaxBatchInterval:
          type: integer
        DataPageSize:
          type: integer
        DictPageSizeLimit:
          type: integer
        DatePartitionEnabled:
          type: boolean
        CompressionType:
          type: string
        DatePartitionTimezone:
          type: string
        CdcInsertsOnly:
          type: boolean
        EncryptionMode:
          type: string
    DocDbSettings:
      type: object
      additionalProperties: false
      properties:
        SecretsManagerSecretId:
          type: string
        DocsToInvestigate:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
        ExtractDocId:
          type: boolean
        NestingLevel:
          type: string
    DynamoDbSettings:
      type: object
      additionalProperties: false
      properties:
        ServiceAccessRoleArn:
          type: string
    KinesisSettings:
      type: object
      additionalProperties: false
      properties:
        MessageFormat:
          type: string
        IncludeTransactionDetails:
          type: boolean
        IncludeTableAlterOperations:
          type: boolean
        IncludeControlDetails:
          type: boolean
        IncludePartitionValue:
          type: boolean
        StreamArn:
          type: string
        ServiceAccessRoleArn:
          type: string
        NoHexPrefix:
          type: boolean
        PartitionIncludeSchemaTable:
          type: boolean
        IncludeNullAndEmpty:
          type: boolean
    GcpMySQLSettings:
      type: object
      additionalProperties: false
      properties:
        AfterConnectScript:
          type: string
        Port:
          type: integer
        DatabaseName:
          type: string
        CleanSourceMetadataOnMismatch:
          type: boolean
        ServerTimezone:
          type: string
        EventsPollInterval:
          type: integer
        ParallelLoadThreads:
          type: integer
        Username:
          type: string
        MaxFileSize:
          type: integer
        ServerName:
          type: string
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        Password:
          type: string
    MicrosoftSqlServerSettings:
      type: object
      additionalProperties: false
      properties:
        ReadBackupOnly:
          type: boolean
        BcpPacketSize:
          type: integer
        QuerySingleAlwaysOnNode:
          type: boolean
        SafeguardPolicy:
          type: string
        UseThirdPartyBackupDevice:
          type: boolean
        SecretsManagerSecretId:
          type: string
        ControlTablesFileGroup:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        UseBcpFullLoad:
          type: boolean
    RedshiftSettings:
      type: object
      additionalProperties: false
      properties:
        ConnectionTimeout:
          type: integer
        AfterConnectScript:
          type: string
        FileTransferUploadStreams:
          type: integer
        BucketName:
          type: string
        ServerSideEncryptionKmsKeyId:
          type: string
        ExplicitIds:
          type: boolean
        SecretsManagerSecretId:
          type: string
        TruncateColumns:
          type: boolean
        ServiceAccessRoleArn:
          type: string
        ReplaceChars:
          type: string
        TimeFormat:
          type: string
        BucketFolder:
          type: string
        ReplaceInvalidChars:
          type: string
        RemoveQuotes:
          type: boolean
        LoadTimeout:
          type: integer
        MaxFileSize:
          type: integer
        TrimBlanks:
          type: boolean
        DateFormat:
          type: string
        CompUpdate:
          type: boolean
        AcceptAnyDate:
          type: boolean
        WriteBufferSize:
          type: integer
        SecretsManagerAccessRoleArn:
          type: string
        CaseSensitiveNames:
          type: boolean
        EmptyAsNull:
          type: boolean
        EncryptionMode:
          type: string
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    MongoDbSettings:
      type: object
      additionalProperties: false
      properties:
        Port:
          type: integer
        ExtractDocId:
          type: string
        DatabaseName:
          type: string
        AuthSource:
          type: string
        AuthMechanism:
          type: string
        Username:
          type: string
        DocsToInvestigate:
          type: string
        ServerName:
          type: string
        SecretsManagerSecretId:
          type: string
        AuthType:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        Password:
          type: string
        NestingLevel:
          type: string
    PostgreSqlSettings:
      type: object
      additionalProperties: false
      properties:
        PluginName:
          type: string
        AfterConnectScript:
          type: string
        ExecuteTimeout:
          type: integer
        DdlArtifactsSchema:
          type: string
        FailTasksOnLobTruncation:
          type: boolean
        HeartbeatEnable:
          type: boolean
        CaptureDdls:
          type: boolean
        MaxFileSize:
          type: integer
        HeartbeatFrequency:
          type: integer
        SecretsManagerSecretId:
          type: string
        SecretsManagerAccessRoleArn:
          type: string
        HeartbeatSchema:
          type: string
        SlotName:
          type: string
    Endpoint:
      type: object
      properties:
        SybaseSettings:
          $ref: '#/components/schemas/SybaseSettings'
        RedisSettings:
          $ref: '#/components/schemas/RedisSettings'
        OracleSettings:
          $ref: '#/components/schemas/OracleSettings'
        KafkaSettings:
          $ref: '#/components/schemas/KafkaSettings'
        Port:
          type: integer
        MySqlSettings:
          $ref: '#/components/schemas/MySqlSettings'
        S3Settings:
          $ref: '#/components/schemas/S3Settings'
        ResourceIdentifier:
          type: string
        KinesisSettings:
          $ref: '#/components/schemas/KinesisSettings'
        SslMode:
          type: string
        RedshiftSettings:
          $ref: '#/components/schemas/RedshiftSettings'
        EndpointType:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
        Password:
          type: string
        MongoDbSettings:
          $ref: '#/components/schemas/MongoDbSettings'
        IbmDb2Settings:
          $ref: '#/components/schemas/IbmDb2Settings'
        KmsKeyId:
          type: string
        ExternalId:
          type: string
        DatabaseName:
          type: string
        NeptuneSettings:
          $ref: '#/components/schemas/NeptuneSettings'
        ElasticsearchSettings:
          $ref: '#/components/schemas/ElasticsearchSettings'
        EngineName:
          type: string
        DocDbSettings:
          $ref: '#/components/schemas/DocDbSettings'
        DynamoDbSettings:
          $ref: '#/components/schemas/DynamoDbSettings'
        Username:
          type: string
        MicrosoftSqlServerSettings:
          $ref: '#/components/schemas/MicrosoftSqlServerSettings'
        GcpMySQLSettings:
          $ref: '#/components/schemas/GcpMySQLSettings'
        ServerName:
          type: string
        ExtraConnectionAttributes:
          type: string
        Id:
          type: string
        EndpointIdentifier:
          type: string
        CertificateArn:
          type: string
        PostgreSqlSettings:
          $ref: '#/components/schemas/PostgreSqlSettings'
      required:
        - EndpointType
        - EngineName
      x-stackql-resource-name: endpoint
      x-stackql-primaryIdentifier:
        - Id
    EventSubscription:
      type: object
      properties:
        SourceType:
          type: string
        EventCategories:
          type: array
          uniqueItems: false
          items:
            type: string
        Enabled:
          type: boolean
        SubscriptionName:
          type: string
        SnsTopicArn:
          type: string
        SourceIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - SnsTopicArn
      x-stackql-resource-name: event_subscription
      x-stackql-primaryIdentifier:
        - Id
    ReplicationInstance:
      type: object
      properties:
        ReplicationInstanceIdentifier:
          type: string
        EngineVersion:
          type: string
        KmsKeyId:
          type: string
        AvailabilityZone:
          type: string
        PreferredMaintenanceWindow:
          type: string
        AutoMinorVersionUpgrade:
          type: boolean
        ReplicationSubnetGroupIdentifier:
          type: string
        ReplicationInstancePrivateIpAddresses:
          type: string
        AllocatedStorage:
          type: integer
        ResourceIdentifier:
          type: string
        VpcSecurityGroupIds:
          type: array
          uniqueItems: false
          items:
            type: string
        AllowMajorVersionUpgrade:
          type: boolean
        ReplicationInstanceClass:
          type: string
        PubliclyAccessible:
          type: boolean
        Id:
          type: string
        MultiAZ:
          type: boolean
        ReplicationInstancePublicIpAddresses:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ReplicationInstanceClass
      x-stackql-resource-name: replication_instance
      x-stackql-primaryIdentifier:
        - Id
    ReplicationSubnetGroup:
      type: object
      properties:
        ReplicationSubnetGroupDescription:
          type: string
        Id:
          type: string
        ReplicationSubnetGroupIdentifier:
          type: string
        SubnetIds:
          type: array
          uniqueItems: false
          items:
            type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - ReplicationSubnetGroupDescription
        - SubnetIds
      x-stackql-resource-name: replication_subnet_group
      x-stackql-primaryIdentifier:
        - Id
    ReplicationTask:
      type: object
      properties:
        ReplicationTaskSettings:
          type: string
        CdcStartPosition:
          type: string
        CdcStopPosition:
          type: string
        MigrationType:
          type: string
        TargetEndpointArn:
          type: string
        ReplicationInstanceArn:
          type: string
        TaskData:
          type: string
        CdcStartTime:
          type: number
        ResourceIdentifier:
          type: string
        TableMappings:
          type: string
        ReplicationTaskIdentifier:
          type: string
        SourceEndpointArn:
          type: string
        Id:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TableMappings
        - SourceEndpointArn
        - MigrationType
        - TargetEndpointArn
        - ReplicationInstanceArn
      x-stackql-resource-name: replication_task
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    certificates:
      name: certificates
      id: aws.dms.certificates
      x-cfn-schema-name: Certificate
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::Certificate'
    certificate:
      name: certificate
      id: aws.dms.certificate
      x-cfn-schema-name: Certificate
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.CertificateIdentifier') as certificate_identifier,
              JSON_EXTRACT(Properties, '$.CertificatePem') as certificate_pem,
              JSON_EXTRACT(Properties, '$.CertificateWallet') as certificate_wallet
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::Certificate'
    endpoints:
      name: endpoints
      id: aws.dms.endpoints
      x-cfn-schema-name: Endpoint
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::Endpoint'
    endpoint:
      name: endpoint
      id: aws.dms.endpoint
      x-cfn-schema-name: Endpoint
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SybaseSettings.SecretsManagerAccessRoleArn') as sybase_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.SybaseSettings.SecretsManagerSecretId') as sybase_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.RedisSettings.SslSecurityProtocol') as redis_settings_ssl_security_protocol,
              JSON_EXTRACT(Properties, '$.RedisSettings.AuthUserName') as redis_settings_auth_user_name,
              JSON_EXTRACT(Properties, '$.RedisSettings.ServerName') as redis_settings_server_name,
              JSON_EXTRACT(Properties, '$.RedisSettings.Port') as redis_settings_port,
              JSON_EXTRACT(Properties, '$.RedisSettings.SslCaCertificateArn') as redis_settings_ssl_ca_certificate_arn,
              JSON_EXTRACT(Properties, '$.RedisSettings.AuthPassword') as redis_settings_auth_password,
              JSON_EXTRACT(Properties, '$.RedisSettings.AuthType') as redis_settings_auth_type,
              JSON_EXTRACT(Properties, '$.OracleSettings.AsmPassword') as oracle_settings_asm_password,
              JSON_EXTRACT(Properties, '$.OracleSettings.DirectPathParallelLoad') as oracle_settings_direct_path_parallel_load,
              JSON_EXTRACT(Properties, '$.OracleSettings.AdditionalArchivedLogDestId') as oracle_settings_additional_archived_log_dest_id,
              JSON_EXTRACT(Properties, '$.OracleSettings.SpatialDataOptionToGeoJsonFunctionName') as oracle_settings_spatial_data_option_to_geo_json_function_name,
              JSON_EXTRACT(Properties, '$.OracleSettings.ReplacePathPrefix') as oracle_settings_replace_path_prefix,
              JSON_EXTRACT(Properties, '$.OracleSettings.FailTasksOnLobTruncation') as oracle_settings_fail_tasks_on_lob_truncation,
              JSON_EXTRACT(Properties, '$.OracleSettings.AsmServer') as oracle_settings_asm_server,
              JSON_EXTRACT(Properties, '$.OracleSettings.SecretsManagerOracleAsmAccessRoleArn') as oracle_settings_secrets_manager_oracle_asm_access_role_arn,
              JSON_EXTRACT(Properties, '$.OracleSettings.OraclePathPrefix') as oracle_settings_oracle_path_prefix,
              JSON_EXTRACT(Properties, '$.OracleSettings.ReadAheadBlocks') as oracle_settings_read_ahead_blocks,
              JSON_EXTRACT(Properties, '$.OracleSettings.StandbyDelayTime') as oracle_settings_standby_delay_time,
              JSON_EXTRACT(Properties, '$.OracleSettings.AllowSelectNestedTables') as oracle_settings_allow_select_nested_tables,
              JSON_EXTRACT(Properties, '$.OracleSettings.AddSupplementalLogging') as oracle_settings_add_supplemental_logging,
              JSON_EXTRACT(Properties, '$.OracleSettings.SecretsManagerSecretId') as oracle_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.OracleSettings.UseBFile') as oracle_settings_use_bfile,
              JSON_EXTRACT(Properties, '$.OracleSettings.EnableHomogenousTablespace') as oracle_settings_enable_homogenous_tablespace,
              JSON_EXTRACT(Properties, '$.OracleSettings.AsmUser') as oracle_settings_asm_user,
              JSON_EXTRACT(Properties, '$.OracleSettings.UseDirectPathFullLoad') as oracle_settings_use_direct_path_full_load,
              JSON_EXTRACT(Properties, '$.OracleSettings.SecurityDbEncryption') as oracle_settings_security_db_encryption,
              JSON_EXTRACT(Properties, '$.OracleSettings.ParallelAsmReadThreads') as oracle_settings_parallel_asm_read_threads,
              JSON_EXTRACT(Properties, '$.OracleSettings.ArchivedLogDestId') as oracle_settings_archived_log_dest_id,
              JSON_EXTRACT(Properties, '$.OracleSettings.UsePathPrefix') as oracle_settings_use_path_prefix,
              JSON_EXTRACT(Properties, '$.OracleSettings.UseLogminerReader') as oracle_settings_use_logminer_reader,
              JSON_EXTRACT(Properties, '$.OracleSettings.SecurityDbEncryptionName') as oracle_settings_security_db_encryption_name,
              JSON_EXTRACT(Properties, '$.OracleSettings.DirectPathNoLog') as oracle_settings_direct_path_no_log,
              JSON_EXTRACT(Properties, '$.OracleSettings.SecretsManagerOracleAsmSecretId') as oracle_settings_secrets_manager_oracle_asm_secret_id,
              JSON_EXTRACT(Properties, '$.OracleSettings.CharLengthSemantics') as oracle_settings_char_length_semantics,
              JSON_EXTRACT(Properties, '$.OracleSettings.NumberDatatypeScale') as oracle_settings_number_datatype_scale,
              JSON_EXTRACT(Properties, '$.OracleSettings.ReadTableSpaceName') as oracle_settings_read_table_space_name,
              JSON_EXTRACT(Properties, '$.OracleSettings.AccessAlternateDirectly') as oracle_settings_access_alternate_directly,
              JSON_EXTRACT(Properties, '$.OracleSettings.UseAlternateFolderForOnline') as oracle_settings_use_alternate_folder_for_online,
              JSON_EXTRACT(Properties, '$.OracleSettings.ArchivedLogsOnly') as oracle_settings_archived_logs_only,
              JSON_EXTRACT(Properties, '$.OracleSettings.ExtraArchivedLogDestIds') as oracle_settings_extra_archived_log_dest_ids,
              JSON_EXTRACT(Properties, '$.OracleSettings.RetryInterval') as oracle_settings_retry_interval,
              JSON_EXTRACT(Properties, '$.OracleSettings.SecretsManagerAccessRoleArn') as oracle_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.KafkaSettings.Broker') as kafka_settings_broker,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SaslPassword') as kafka_settings_sasl_password,
              JSON_EXTRACT(Properties, '$.KafkaSettings.MessageFormat') as kafka_settings_message_format,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SslClientCertificateArn') as kafka_settings_ssl_client_certificate_arn,
              JSON_EXTRACT(Properties, '$.KafkaSettings.IncludeTransactionDetails') as kafka_settings_include_transaction_details,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SecurityProtocol') as kafka_settings_security_protocol,
              JSON_EXTRACT(Properties, '$.KafkaSettings.IncludeTableAlterOperations') as kafka_settings_include_table_alter_operations,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SslCaCertificateArn') as kafka_settings_ssl_ca_certificate_arn,
              JSON_EXTRACT(Properties, '$.KafkaSettings.IncludeControlDetails') as kafka_settings_include_control_details,
              JSON_EXTRACT(Properties, '$.KafkaSettings.IncludePartitionValue') as kafka_settings_include_partition_value,
              JSON_EXTRACT(Properties, '$.KafkaSettings.NoHexPrefix') as kafka_settings_no_hex_prefix,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SslClientKeyArn') as kafka_settings_ssl_client_key_arn,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SslClientKeyPassword') as kafka_settings_ssl_client_key_password,
              JSON_EXTRACT(Properties, '$.KafkaSettings.SaslUserName') as kafka_settings_sasl_user_name,
              JSON_EXTRACT(Properties, '$.KafkaSettings.MessageMaxBytes') as kafka_settings_message_max_bytes,
              JSON_EXTRACT(Properties, '$.KafkaSettings.Topic') as kafka_settings_topic,
              JSON_EXTRACT(Properties, '$.KafkaSettings.PartitionIncludeSchemaTable') as kafka_settings_partition_include_schema_table,
              JSON_EXTRACT(Properties, '$.KafkaSettings.IncludeNullAndEmpty') as kafka_settings_include_null_and_empty,
              JSON_EXTRACT(Properties, '$.Port') as port,
              JSON_EXTRACT(Properties, '$.MySqlSettings.ServerTimezone') as my_sql_settings_server_timezone,
              JSON_EXTRACT(Properties, '$.MySqlSettings.EventsPollInterval') as my_sql_settings_events_poll_interval,
              JSON_EXTRACT(Properties, '$.MySqlSettings.ParallelLoadThreads') as my_sql_settings_parallel_load_threads,
              JSON_EXTRACT(Properties, '$.MySqlSettings.AfterConnectScript') as my_sql_settings_after_connect_script,
              JSON_EXTRACT(Properties, '$.MySqlSettings.MaxFileSize') as my_sql_settings_max_file_size,
              JSON_EXTRACT(Properties, '$.MySqlSettings.TargetDbType') as my_sql_settings_target_db_type,
              JSON_EXTRACT(Properties, '$.MySqlSettings.SecretsManagerSecretId') as my_sql_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.MySqlSettings.SecretsManagerAccessRoleArn') as my_sql_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.MySqlSettings.CleanSourceMetadataOnMismatch') as my_sql_settings_clean_source_metadata_on_mismatch,
              JSON_EXTRACT(Properties, '$.S3Settings.TimestampColumnName') as s3_settings_timestamp_column_name,
              JSON_EXTRACT(Properties, '$.S3Settings.EnableStatistics') as s3_settings_enable_statistics,
              JSON_EXTRACT(Properties, '$.S3Settings.DatePartitionSequence') as s3_settings_date_partition_sequence,
              JSON_EXTRACT(Properties, '$.S3Settings.IncludeOpForFullLoad') as s3_settings_include_op_for_full_load,
              JSON_EXTRACT(Properties, '$.S3Settings.CsvNullValue') as s3_settings_csv_null_value,
              JSON_EXTRACT(Properties, '$.S3Settings.CdcInsertsAndUpdates') as s3_settings_cdc_inserts_and_updates,
              JSON_EXTRACT(Properties, '$.S3Settings.BucketName') as s3_settings_bucket_name,
              JSON_EXTRACT(Properties, '$.S3Settings.ServerSideEncryptionKmsKeyId') as s3_settings_server_side_encryption_kms_key_id,
              JSON_EXTRACT(Properties, '$.S3Settings.UseTaskStartTimeForFullLoadTimestamp') as s3_settings_use_task_start_time_for_full_load_timestamp,
              JSON_EXTRACT(Properties, '$.S3Settings.DataFormat') as s3_settings_data_format,
              JSON_EXTRACT(Properties, '$.S3Settings.CsvDelimiter') as s3_settings_csv_delimiter,
              JSON_EXTRACT(Properties, '$.S3Settings.IgnoreHeaderRows') as s3_settings_ignore_header_rows,
              JSON_EXTRACT(Properties, '$.S3Settings.CannedAclForObjects') as s3_settings_canned_acl_for_objects,
              JSON_EXTRACT(Properties, '$.S3Settings.Rfc4180') as s3_settings_rfc4180,
              JSON_EXTRACT(Properties, '$.S3Settings.ServiceAccessRoleArn') as s3_settings_service_access_role_arn,
              JSON_EXTRACT(Properties, '$.S3Settings.ParquetTimestampInMillisecond') as s3_settings_parquet_timestamp_in_millisecond,
              JSON_EXTRACT(Properties, '$.S3Settings.PreserveTransactions') as s3_settings_preserve_transactions,
              JSON_EXTRACT(Properties, '$.S3Settings.BucketFolder') as s3_settings_bucket_folder,
              JSON_EXTRACT(Properties, '$.S3Settings.DatePartitionDelimiter') as s3_settings_date_partition_delimiter,
              JSON_EXTRACT(Properties, '$.S3Settings.EncodingType') as s3_settings_encoding_type,
              JSON_EXTRACT(Properties, '$.S3Settings.ParquetVersion') as s3_settings_parquet_version,
              JSON_EXTRACT(Properties, '$.S3Settings.AddColumnName') as s3_settings_add_column_name,
              JSON_EXTRACT(Properties, '$.S3Settings.CdcMinFileSize') as s3_settings_cdc_min_file_size,
              JSON_EXTRACT(Properties, '$.S3Settings.ExternalTableDefinition') as s3_settings_external_table_definition,
              JSON_EXTRACT(Properties, '$.S3Settings.UseCsvNoSupValue') as s3_settings_use_csv_no_sup_value,
              JSON_EXTRACT(Properties, '$.S3Settings.MaxFileSize') as s3_settings_max_file_size,
              JSON_EXTRACT(Properties, '$.S3Settings.CsvNoSupValue') as s3_settings_csv_no_sup_value,
              JSON_EXTRACT(Properties, '$.S3Settings.CdcPath') as s3_settings_cdc_path,
              JSON_EXTRACT(Properties, '$.S3Settings.CsvRowDelimiter') as s3_settings_csv_row_delimiter,
              JSON_EXTRACT(Properties, '$.S3Settings.RowGroupLength') as s3_settings_row_group_length,
              JSON_EXTRACT(Properties, '$.S3Settings.CdcMaxBatchInterval') as s3_settings_cdc_max_batch_interval,
              JSON_EXTRACT(Properties, '$.S3Settings.DataPageSize') as s3_settings_data_page_size,
              JSON_EXTRACT(Properties, '$.S3Settings.DictPageSizeLimit') as s3_settings_dict_page_size_limit,
              JSON_EXTRACT(Properties, '$.S3Settings.DatePartitionEnabled') as s3_settings_date_partition_enabled,
              JSON_EXTRACT(Properties, '$.S3Settings.CompressionType') as s3_settings_compression_type,
              JSON_EXTRACT(Properties, '$.S3Settings.DatePartitionTimezone') as s3_settings_date_partition_timezone,
              JSON_EXTRACT(Properties, '$.S3Settings.CdcInsertsOnly') as s3_settings_cdc_inserts_only,
              JSON_EXTRACT(Properties, '$.S3Settings.EncryptionMode') as s3_settings_encryption_mode,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.KinesisSettings.MessageFormat') as kinesis_settings_message_format,
              JSON_EXTRACT(Properties, '$.KinesisSettings.IncludeTransactionDetails') as kinesis_settings_include_transaction_details,
              JSON_EXTRACT(Properties, '$.KinesisSettings.IncludeTableAlterOperations') as kinesis_settings_include_table_alter_operations,
              JSON_EXTRACT(Properties, '$.KinesisSettings.IncludeControlDetails') as kinesis_settings_include_control_details,
              JSON_EXTRACT(Properties, '$.KinesisSettings.IncludePartitionValue') as kinesis_settings_include_partition_value,
              JSON_EXTRACT(Properties, '$.KinesisSettings.StreamArn') as kinesis_settings_stream_arn,
              JSON_EXTRACT(Properties, '$.KinesisSettings.ServiceAccessRoleArn') as kinesis_settings_service_access_role_arn,
              JSON_EXTRACT(Properties, '$.KinesisSettings.NoHexPrefix') as kinesis_settings_no_hex_prefix,
              JSON_EXTRACT(Properties, '$.KinesisSettings.PartitionIncludeSchemaTable') as kinesis_settings_partition_include_schema_table,
              JSON_EXTRACT(Properties, '$.KinesisSettings.IncludeNullAndEmpty') as kinesis_settings_include_null_and_empty,
              JSON_EXTRACT(Properties, '$.SslMode') as ssl_mode,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.ConnectionTimeout') as redshift_settings_connection_timeout,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.AfterConnectScript') as redshift_settings_after_connect_script,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.FileTransferUploadStreams') as redshift_settings_file_transfer_upload_streams,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.BucketName') as redshift_settings_bucket_name,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.ServerSideEncryptionKmsKeyId') as redshift_settings_server_side_encryption_kms_key_id,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.ExplicitIds') as redshift_settings_explicit_ids,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.SecretsManagerSecretId') as redshift_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.TruncateColumns') as redshift_settings_truncate_columns,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.ServiceAccessRoleArn') as redshift_settings_service_access_role_arn,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.ReplaceChars') as redshift_settings_replace_chars,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.TimeFormat') as redshift_settings_time_format,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.BucketFolder') as redshift_settings_bucket_folder,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.ReplaceInvalidChars') as redshift_settings_replace_invalid_chars,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.RemoveQuotes') as redshift_settings_remove_quotes,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.LoadTimeout') as redshift_settings_load_timeout,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.MaxFileSize') as redshift_settings_max_file_size,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.TrimBlanks') as redshift_settings_trim_blanks,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.DateFormat') as redshift_settings_date_format,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.CompUpdate') as redshift_settings_comp_update,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.AcceptAnyDate') as redshift_settings_accept_any_date,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.WriteBufferSize') as redshift_settings_write_buffer_size,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.SecretsManagerAccessRoleArn') as redshift_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.CaseSensitiveNames') as redshift_settings_case_sensitive_names,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.EmptyAsNull') as redshift_settings_empty_as_null,
              JSON_EXTRACT(Properties, '$.RedshiftSettings.EncryptionMode') as redshift_settings_encryption_mode,
              JSON_EXTRACT(Properties, '$.EndpointType') as endpoint_type,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Password') as password,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.Port') as mongo_db_settings_port,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.ExtractDocId') as mongo_db_settings_extract_doc_id,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.DatabaseName') as mongo_db_settings_database_name,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.AuthSource') as mongo_db_settings_auth_source,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.AuthMechanism') as mongo_db_settings_auth_mechanism,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.Username') as mongo_db_settings_username,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.DocsToInvestigate') as mongo_db_settings_docs_to_investigate,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.ServerName') as mongo_db_settings_server_name,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.SecretsManagerSecretId') as mongo_db_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.AuthType') as mongo_db_settings_auth_type,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.SecretsManagerAccessRoleArn') as mongo_db_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.Password') as mongo_db_settings_password,
              JSON_EXTRACT(Properties, '$.MongoDbSettings.NestingLevel') as mongo_db_settings_nesting_level,
              JSON_EXTRACT(Properties, '$.IbmDb2Settings.SecretsManagerSecretId') as ibm_db2_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.IbmDb2Settings.SetDataCaptureChanges') as ibm_db2_settings_set_data_capture_changes,
              JSON_EXTRACT(Properties, '$.IbmDb2Settings.SecretsManagerAccessRoleArn') as ibm_db2_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.IbmDb2Settings.CurrentLsn') as ibm_db2_settings_current_lsn,
              JSON_EXTRACT(Properties, '$.IbmDb2Settings.MaxKBytesPerRead') as ibm_db2_settings_max_kbytes_per_read,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.ExternalId') as external_id,
              JSON_EXTRACT(Properties, '$.DatabaseName') as database_name,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.MaxRetryCount') as neptune_settings_max_retry_count,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.MaxFileSize') as neptune_settings_max_file_size,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.S3BucketFolder') as neptune_settings_s3_bucket_folder,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.ErrorRetryDuration') as neptune_settings_error_retry_duration,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.IamAuthEnabled') as neptune_settings_iam_auth_enabled,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.S3BucketName') as neptune_settings_s3_bucket_name,
              JSON_EXTRACT(Properties, '$.NeptuneSettings.ServiceAccessRoleArn') as neptune_settings_service_access_role_arn,
              JSON_EXTRACT(Properties, '$.ElasticsearchSettings.EndpointUri') as elasticsearch_settings_endpoint_uri,
              JSON_EXTRACT(Properties, '$.ElasticsearchSettings.ErrorRetryDuration') as elasticsearch_settings_error_retry_duration,
              JSON_EXTRACT(Properties, '$.ElasticsearchSettings.FullLoadErrorPercentage') as elasticsearch_settings_full_load_error_percentage,
              JSON_EXTRACT(Properties, '$.ElasticsearchSettings.ServiceAccessRoleArn') as elasticsearch_settings_service_access_role_arn,
              JSON_EXTRACT(Properties, '$.EngineName') as engine_name,
              JSON_EXTRACT(Properties, '$.DocDbSettings.SecretsManagerSecretId') as doc_db_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.DocDbSettings.DocsToInvestigate') as doc_db_settings_docs_to_investigate,
              JSON_EXTRACT(Properties, '$.DocDbSettings.SecretsManagerAccessRoleArn') as doc_db_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.DocDbSettings.ExtractDocId') as doc_db_settings_extract_doc_id,
              JSON_EXTRACT(Properties, '$.DocDbSettings.NestingLevel') as doc_db_settings_nesting_level,
              JSON_EXTRACT(Properties, '$.DynamoDbSettings.ServiceAccessRoleArn') as dynamo_db_settings_service_access_role_arn,
              JSON_EXTRACT(Properties, '$.Username') as username,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.ReadBackupOnly') as microsoft_sql_server_settings_read_backup_only,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.BcpPacketSize') as microsoft_sql_server_settings_bcp_packet_size,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.QuerySingleAlwaysOnNode') as microsoft_sql_server_settings_query_single_always_on_node,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.SafeguardPolicy') as microsoft_sql_server_settings_safeguard_policy,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.UseThirdPartyBackupDevice') as microsoft_sql_server_settings_use_third_party_backup_device,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.SecretsManagerSecretId') as microsoft_sql_server_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.ControlTablesFileGroup') as microsoft_sql_server_settings_control_tables_file_group,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.SecretsManagerAccessRoleArn') as microsoft_sql_server_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.MicrosoftSqlServerSettings.UseBcpFullLoad') as microsoft_sql_server_settings_use_bcp_full_load,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.AfterConnectScript') as gcp_my_sq_lsettings_after_connect_script,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.Port') as gcp_my_sq_lsettings_port,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.DatabaseName') as gcp_my_sq_lsettings_database_name,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.CleanSourceMetadataOnMismatch') as gcp_my_sq_lsettings_clean_source_metadata_on_mismatch,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.ServerTimezone') as gcp_my_sq_lsettings_server_timezone,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.EventsPollInterval') as gcp_my_sq_lsettings_events_poll_interval,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.ParallelLoadThreads') as gcp_my_sq_lsettings_parallel_load_threads,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.Username') as gcp_my_sq_lsettings_username,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.MaxFileSize') as gcp_my_sq_lsettings_max_file_size,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.ServerName') as gcp_my_sq_lsettings_server_name,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.SecretsManagerSecretId') as gcp_my_sq_lsettings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.SecretsManagerAccessRoleArn') as gcp_my_sq_lsettings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.GcpMySQLSettings.Password') as gcp_my_sq_lsettings_password,
              JSON_EXTRACT(Properties, '$.ServerName') as server_name,
              JSON_EXTRACT(Properties, '$.ExtraConnectionAttributes') as extra_connection_attributes,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.EndpointIdentifier') as endpoint_identifier,
              JSON_EXTRACT(Properties, '$.CertificateArn') as certificate_arn,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.PluginName') as postgre_sql_settings_plugin_name,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.AfterConnectScript') as postgre_sql_settings_after_connect_script,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.ExecuteTimeout') as postgre_sql_settings_execute_timeout,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.DdlArtifactsSchema') as postgre_sql_settings_ddl_artifacts_schema,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.FailTasksOnLobTruncation') as postgre_sql_settings_fail_tasks_on_lob_truncation,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.HeartbeatEnable') as postgre_sql_settings_heartbeat_enable,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.CaptureDdls') as postgre_sql_settings_capture_ddls,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.MaxFileSize') as postgre_sql_settings_max_file_size,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.HeartbeatFrequency') as postgre_sql_settings_heartbeat_frequency,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.SecretsManagerSecretId') as postgre_sql_settings_secrets_manager_secret_id,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.SecretsManagerAccessRoleArn') as postgre_sql_settings_secrets_manager_access_role_arn,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.HeartbeatSchema') as postgre_sql_settings_heartbeat_schema,
              JSON_EXTRACT(Properties, '$.PostgreSqlSettings.SlotName') as postgre_sql_settings_slot_name
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::Endpoint'
    event_subscriptions:
      name: event_subscriptions
      id: aws.dms.event_subscriptions
      x-cfn-schema-name: EventSubscription
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::EventSubscription'
    event_subscription:
      name: event_subscription
      id: aws.dms.event_subscription
      x-cfn-schema-name: EventSubscription
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.SourceType') as source_type,
              JSON_EXTRACT(Properties, '$.EventCategories') as event_categories,
              JSON_EXTRACT(Properties, '$.Enabled') as enabled,
              JSON_EXTRACT(Properties, '$.SubscriptionName') as subscription_name,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn,
              JSON_EXTRACT(Properties, '$.SourceIds') as source_ids,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::EventSubscription'
    replication_instances:
      name: replication_instances
      id: aws.dms.replication_instances
      x-cfn-schema-name: ReplicationInstance
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationInstance'
    replication_instance:
      name: replication_instance
      id: aws.dms.replication_instance
      x-cfn-schema-name: ReplicationInstance
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationInstanceIdentifier') as replication_instance_identifier,
              JSON_EXTRACT(Properties, '$.EngineVersion') as engine_version,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.AvailabilityZone') as availability_zone,
              JSON_EXTRACT(Properties, '$.PreferredMaintenanceWindow') as preferred_maintenance_window,
              JSON_EXTRACT(Properties, '$.AutoMinorVersionUpgrade') as auto_minor_version_upgrade,
              JSON_EXTRACT(Properties, '$.ReplicationSubnetGroupIdentifier') as replication_subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.ReplicationInstancePrivateIpAddresses') as replication_instance_private_ip_addresses,
              JSON_EXTRACT(Properties, '$.AllocatedStorage') as allocated_storage,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.VpcSecurityGroupIds') as vpc_security_group_ids,
              JSON_EXTRACT(Properties, '$.AllowMajorVersionUpgrade') as allow_major_version_upgrade,
              JSON_EXTRACT(Properties, '$.ReplicationInstanceClass') as replication_instance_class,
              JSON_EXTRACT(Properties, '$.PubliclyAccessible') as publicly_accessible,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.MultiAZ') as multi_az,
              JSON_EXTRACT(Properties, '$.ReplicationInstancePublicIpAddresses') as replication_instance_public_ip_addresses,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationInstance'
    replication_subnet_groups:
      name: replication_subnet_groups
      id: aws.dms.replication_subnet_groups
      x-cfn-schema-name: ReplicationSubnetGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationSubnetGroup'
    replication_subnet_group:
      name: replication_subnet_group
      id: aws.dms.replication_subnet_group
      x-cfn-schema-name: ReplicationSubnetGroup
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationSubnetGroupDescription') as replication_subnet_group_description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.ReplicationSubnetGroupIdentifier') as replication_subnet_group_identifier,
              JSON_EXTRACT(Properties, '$.SubnetIds') as subnet_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationSubnetGroup'
    replication_tasks:
      name: replication_tasks
      id: aws.dms.replication_tasks
      x-cfn-schema-name: ReplicationTask
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::DMS::ReplicationTask'
    replication_task:
      name: replication_task
      id: aws.dms.replication_task
      x-cfn-schema-name: ReplicationTask
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ReplicationTaskSettings') as replication_task_settings,
              JSON_EXTRACT(Properties, '$.CdcStartPosition') as cdc_start_position,
              JSON_EXTRACT(Properties, '$.CdcStopPosition') as cdc_stop_position,
              JSON_EXTRACT(Properties, '$.MigrationType') as migration_type,
              JSON_EXTRACT(Properties, '$.TargetEndpointArn') as target_endpoint_arn,
              JSON_EXTRACT(Properties, '$.ReplicationInstanceArn') as replication_instance_arn,
              JSON_EXTRACT(Properties, '$.TaskData') as task_data,
              JSON_EXTRACT(Properties, '$.CdcStartTime') as cdc_start_time,
              JSON_EXTRACT(Properties, '$.ResourceIdentifier') as resource_identifier,
              JSON_EXTRACT(Properties, '$.TableMappings') as table_mappings,
              JSON_EXTRACT(Properties, '$.ReplicationTaskIdentifier') as replication_task_identifier,
              JSON_EXTRACT(Properties, '$.SourceEndpointArn') as source_endpoint_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::DMS::ReplicationTask'
