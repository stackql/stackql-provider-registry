openapi: 3.0.0
info:
  title: EMRServerless
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    Architecture:
      description: The cpu architecture of an application.
      enum:
        - ARM64
        - X86_64
      type: string
    ImageConfigurationInput:
      type: object
      description: The image configuration.
      properties:
        ImageUri:
          type: string
          maxLength: 1024
          minLength: 1
          pattern: ^([a-z0-9]+[a-z0-9-.]*)\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\:([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))$
          description: The URI of an image in the Amazon ECR registry. This field is required when you create a new application. If you leave this field blank in an update, Amazon EMR will remove the image configuration.
      additionalProperties: false
    InteractiveConfiguration:
      additionalProperties: false
      type: object
      properties:
        LivyEndpointEnabled:
          description: Enables an Apache Livy endpoint that you can connect to and run interactive jobs
          type: boolean
          default: false
        StudioEnabled:
          description: Enabled you to connect an Application to Amazon EMR Studio to run interactive workloads in a notebook
          type: boolean
          default: false
    ConfigurationList:
      type: array
      description: Runtime configuration for batch and interactive JobRun.
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/ConfigurationObject'
    SchedulerConfiguration:
      type: object
      description: The scheduler configuration for batch and streaming jobs running on this application. Supported with release labels emr-7.0.0 and above.
      additionalProperties: false
      properties:
        QueueTimeoutMinutes:
          description: The maximum duration in minutes for the job in QUEUED state. If scheduler configuration is enabled on your application, the default value is 360 minutes (6 hours). The valid range is from 15 to 720.
          type: integer
        MaxConcurrentRuns:
          description: The maximum concurrent job runs on this application. If scheduler configuration is enabled on your application, the default value is 15. The valid range is 1 to 1000.
          type: integer
    MonitoringConfiguration:
      type: object
      description: Monitoring configuration for batch and interactive JobRun.
      additionalProperties: false
      properties:
        S3MonitoringConfiguration:
          description: S3 monitoring configurations for a JobRun.
          $ref: '#/components/schemas/S3MonitoringConfiguration'
        ManagedPersistenceMonitoringConfiguration:
          description: Managed log persistence configurations for a JobRun.
          $ref: '#/components/schemas/ManagedPersistenceMonitoringConfiguration'
        CloudWatchLoggingConfiguration:
          description: CloudWatch logging configurations for a JobRun.
          $ref: '#/components/schemas/CloudWatchLoggingConfiguration'
    S3MonitoringConfiguration:
      additionalProperties: false
      properties:
        LogUri:
          $ref: '#/components/schemas/UriString'
        EncryptionKeyArn:
          description: KMS key ARN to encrypt the logs stored in given s3
          $ref: '#/components/schemas/EncryptionKeyArn'
    ManagedPersistenceMonitoringConfiguration:
      additionalProperties: false
      properties:
        Enabled:
          description: If set to false, managed logging will be turned off. Defaults to true.
          type: boolean
          default: true
        EncryptionKeyArn:
          description: KMS key ARN to encrypt the logs stored in managed persistence
          $ref: '#/components/schemas/EncryptionKeyArn'
    CloudWatchLoggingConfiguration:
      additionalProperties: false
      properties:
        Enabled:
          description: If set to false, CloudWatch logging will be turned off. Defaults to false.
          type: boolean
          default: false
        LogGroupName:
          description: Log-group name to produce log-streams on CloudWatch. If undefined, logs will be produced in a default log-group /aws/emr-serverless
          $ref: '#/components/schemas/LogGroupName'
        LogStreamNamePrefix:
          description: Log-stream name prefix by which log-stream names will start in the CloudWatch Log-group.
          $ref: '#/components/schemas/LogStreamNamePrefix'
        EncryptionKeyArn:
          description: KMS key ARN to encrypt the logs stored in given CloudWatch log-group.
          $ref: '#/components/schemas/EncryptionKeyArn'
        LogTypeMap:
          description: The specific log-streams which need to be uploaded to CloudWatch.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/LogTypeMapKeyValuePair'
    LogTypeMapKeyValuePair:
      type: object
      additionalProperties: false
      properties:
        Key:
          $ref: '#/components/schemas/WorkerTypeString'
        Value:
          $ref: '#/components/schemas/LogTypeList'
      required:
        - Key
        - Value
    LogTypeList:
      description: 'List of Applicable values: [STDOUT, STDERR, HIVE_LOG, TEZ_AM, SYSTEM_LOGS]'
      type: array
      x-insertionOrder: false
      uniqueItems: true
      minItems: 1
      maxItems: 5
      items:
        $ref: '#/components/schemas/LogTypeString'
    InitialCapacityConfigMap:
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/InitialCapacityConfigKeyValuePair'
    InitialCapacityConfigKeyValuePair:
      type: object
      additionalProperties: false
      properties:
        Key:
          description: Worker type for an analytics framework.
          type: string
          minLength: 1
          maxLength: 50
          pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
        Value:
          $ref: '#/components/schemas/InitialCapacityConfig'
      required:
        - Key
        - Value
    InitialCapacityConfig:
      type: object
      additionalProperties: false
      properties:
        WorkerCount:
          description: Initial count of workers to be initialized when an Application is started. This count will be continued to be maintained until the Application is stopped
          type: integer
          format: int64
          minimum: 1
          maximum: 1000000
        WorkerConfiguration:
          $ref: '#/components/schemas/WorkerConfiguration'
      required:
        - WorkerCount
        - WorkerConfiguration
    WorkerConfiguration:
      type: object
      additionalProperties: false
      properties:
        Cpu:
          description: Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
          $ref: '#/components/schemas/CpuSize'
        Memory:
          description: Per worker memory resource. GB is the only supported unit and specifying GB is optional.
          $ref: '#/components/schemas/MemorySize'
        Disk:
          description: Per worker Disk resource. GB is the only supported unit and specifying GB is optional
          $ref: '#/components/schemas/DiskSize'
        DiskType:
          description: Per worker DiskType resource. Shuffle optimized and Standard are only supported types and specifying diskType is optional
          $ref: '#/components/schemas/DiskType'
      required:
        - Cpu
        - Memory
    MaximumAllowedResources:
      type: object
      additionalProperties: false
      properties:
        Cpu:
          description: Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
          $ref: '#/components/schemas/CpuSize'
        Memory:
          description: Per worker memory resource. GB is the only supported unit and specifying GB is optional.
          $ref: '#/components/schemas/MemorySize'
        Disk:
          description: Per worker Disk resource. GB is the only supported unit and specifying GB is optional
          $ref: '#/components/schemas/DiskSize'
      required:
        - Cpu
        - Memory
    AutoStartConfiguration:
      description: Configuration for Auto Start of Application
      type: object
      additionalProperties: false
      properties:
        Enabled:
          description: If set to true, the Application will automatically start. Defaults to true.
          type: boolean
          default: true
      required: []
    AutoStopConfiguration:
      description: Configuration for Auto Stop of Application
      type: object
      additionalProperties: false
      properties:
        Enabled:
          description: If set to true, the Application will automatically stop after being idle. Defaults to true.
          type: boolean
          default: true
        IdleTimeoutMinutes:
          type: integer
          description: The amount of time [in minutes] to wait before auto stopping the Application when idle. Defaults to 15 minutes.
      required: []
    NetworkConfiguration:
      type: object
      additionalProperties: false
      properties:
        SubnetIds:
          description: The ID of the subnets in the VPC to which you want to connect your job or application.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 16
          items:
            $ref: '#/components/schemas/SubnetId'
        SecurityGroupIds:
          description: The ID of the security groups in the VPC to which you want to connect your job or application.
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 5
          items:
            $ref: '#/components/schemas/SecurityGroupId'
      required: []
    SubnetId:
      description: Identifier of a subnet
      type: string
      minLength: 1
      maxLength: 32
      pattern: ^[-0-9a-zA-Z]+
    SecurityGroupId:
      description: Identifier of a security group
      type: string
      minLength: 1
      maxLength: 32
      pattern: ^[-0-9a-zA-Z]+
    UriString:
      type: string
      maxLength: 10280
      minLength: 1
      pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\r\n\t]*'
    EncryptionKeyArn:
      type: string
      maxLength: 2048
      minLength: 20
      pattern: ^arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\-]*:(\d{12})?:key\/[a-zA-Z0-9-]+$
    Classification:
      type: string
      maxLength: 1024
      minLength: 1
      pattern: .*\S.*
    LogGroupName:
      type: string
      maxLength: 512
      minLength: 1
      pattern: ^[\.\-_/#A-Za-z0-9]+$
    LogStreamNamePrefix:
      type: string
      maxLength: 512
      minLength: 1
      pattern: ^[^:*]*$
    LogTypeString:
      type: string
      maxLength: 50
      minLength: 1
      pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
    WorkerTypeString:
      type: string
      maxLength: 50
      minLength: 1
      pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
    Tag:
      description: A key-value pair to associate with a resource.
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          description: 'The value for the tag. You can specify a value that is 1 to 128 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 1
          maxLength: 128
          pattern: ^[A-Za-z0-9 /_.:=+@-]+$
        Value:
          type: string
          description: 'The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. '
          minLength: 0
          maxLength: 256
          pattern: ^[A-Za-z0-9 /_.:=+@-]*$
      required:
        - Key
        - Value
    ConfigurationObject:
      type: object
      description: Configuration for a JobRun.
      additionalProperties: false
      properties:
        Classification:
          description: String with a maximum length of 1024.
          $ref: '#/components/schemas/Classification'
        Properties:
          type: object
          additionalProperties: false
          x-patternProperties:
            ^[a-zA-Z]+[-a-zA-Z0-9_.]*$:
              $ref: '#/components/schemas/SensitivePropertiesMap'
        Configurations:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ConfigurationObject'
      required:
        - Classification
    SensitivePropertiesMap:
      type: string
      minLength: 1
      maxLength: 1024
      pattern: .*\S.*
    SensitivePropertiesKeyValuePair:
      type: string
      minLength: 1
      maxLength: 1024
      pattern: .*\S.*
    CpuSize:
      description: Per worker CPU resource. vCPU is the only supported unit and specifying vCPU is optional.
      type: string
      minLength: 1
      maxLength: 15
      pattern: ^[1-9][0-9]*(\s)?(vCPU|vcpu|VCPU)?$
    MemorySize:
      description: Per worker memory resource. GB is the only supported unit and specifying GB is optional.
      type: string
      minLength: 1
      maxLength: 15
      pattern: ^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)?$
    DiskSize:
      description: Per worker Disk resource. GB is the only supported unit and specifying GB is optional
      type: string
      minLength: 1
      maxLength: 15
      pattern: ^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)$
    DiskType:
      description: Per worker DiskType resource. Shuffle optimized and Standard are only supported types and specifying diskType is optional
      type: string
      pattern: ^(SHUFFLE_OPTIMIZED|[Ss]huffle_[Oo]ptimized|STANDARD|[Ss]tandard)$
    WorkerTypeSpecificationInput:
      type: object
      description: The specifications for a worker type.
      properties:
        ImageConfiguration:
          $ref: '#/components/schemas/ImageConfigurationInput'
      additionalProperties: false
    WorkerTypeSpecificationInputMap:
      type: object
      x-patternProperties:
        ^[a-zA-Z]+[-_]*[a-zA-Z]+$:
          $ref: '#/components/schemas/WorkerTypeSpecificationInput'
      additionalProperties: false
    Application:
      type: object
      properties:
        Architecture:
          $ref: '#/components/schemas/Architecture'
        Name:
          description: User friendly Application name.
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9._\/#-]+$
        ReleaseLabel:
          description: EMR release label.
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[A-Za-z0-9._/-]+$
        Type:
          description: The type of the application
          type: string
        InitialCapacity:
          description: Initial capacity initialized when an Application is started.
          $ref: '#/components/schemas/InitialCapacityConfigMap'
        MaximumCapacity:
          description: Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
          $ref: '#/components/schemas/MaximumAllowedResources'
        Tags:
          description: Tag map with key and value
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        AutoStartConfiguration:
          description: Configuration for Auto Start of Application.
          $ref: '#/components/schemas/AutoStartConfiguration'
        AutoStopConfiguration:
          description: Configuration for Auto Stop of Application.
          $ref: '#/components/schemas/AutoStopConfiguration'
        ImageConfiguration:
          $ref: '#/components/schemas/ImageConfigurationInput'
        MonitoringConfiguration:
          $ref: '#/components/schemas/MonitoringConfiguration'
        RuntimeConfiguration:
          $ref: '#/components/schemas/ConfigurationList'
        InteractiveConfiguration:
          $ref: '#/components/schemas/InteractiveConfiguration'
        NetworkConfiguration:
          description: Network Configuration for customer VPC connectivity.
          $ref: '#/components/schemas/NetworkConfiguration'
        Arn:
          description: The Amazon Resource Name (ARN) of the EMR Serverless Application.
          type: string
          pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\d{12}):\/applications\/[0-9a-zA-Z]+$
        ApplicationId:
          description: The ID of the EMR Serverless Application.
          type: string
          minLength: 1
          maxLength: 64
        WorkerTypeSpecifications:
          description: The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
          $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
        SchedulerConfiguration:
          description: The scheduler configuration for batch and streaming jobs running on this application. Supported with release labels emr-7.0.0 and above.
          $ref: '#/components/schemas/SchedulerConfiguration'
      required:
        - ReleaseLabel
        - Type
      x-stackql-resource-name: application
      description: Resource schema for AWS::EMRServerless::Application Type
      x-type-name: AWS::EMRServerless::Application
      x-stackql-primary-identifier:
        - ApplicationId
      x-create-only-properties:
        - Name
        - Type
      x-conditional-create-only-properties:
        - Architecture
        - ReleaseLabel
        - WorkerTypeSpecifications
        - MaximumCapacity
        - InitialCapacity
        - AutoStartConfiguration
        - AutoStopConfiguration
        - NetworkConfiguration
        - ImageConfiguration
        - MonitoringConfiguration
        - RuntimeConfiguration
        - InteractiveConfiguration
        - SchedulerConfiguration
      x-read-only-properties:
        - Arn
        - ApplicationId
      x-required-properties:
        - ReleaseLabel
        - Type
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: false
        tagProperty: /properties/Tags
        permissions:
          - emr-serverless:TagResource
          - emr-serverless:UntagResource
          - kms:TagResource
          - kms:UntagResource
      x-required-permissions:
        create:
          - kms:CreateKey
          - kms:CreateAlias
          - kms:DescribeKey
          - kms:EnableKey
          - kms:ListGrants
          - kms:ListAliases
          - kms:ListKeyPolicies
          - kms:ListKeys
          - kms:PutKeyPolicy
          - kms:UpdateKeyDescription
          - kms:UpdateAlias
          - kms:UpdatePrimaryRegion
          - kms:RevokeGrant
          - kms:DisableKey
          - kms:DisableKeyRotation
          - kms:GetKeyPolicy
          - kms:GetKeyRotationStatus
          - kms:DeleteAlias
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          - kms:GenerateDataKey
          - kms:TagResource
          - kms:UntagResource
          - kms:Decrypt
          - emr-serverless:CreateApplication
          - emr-serverless:TagResource
          - emr-serverless:GetApplication
          - iam:CreateServiceLinkedRole
          - ec2:CreateNetworkInterface
          - ecr:BatchGetImage
          - ecr:DescribeImages
          - ecr:GetDownloadUrlForLayer
        read:
          - emr-serverless:GetApplication
        update:
          - emr-serverless:UpdateApplication
          - emr-serverless:TagResource
          - emr-serverless:UntagResource
          - emr-serverless:GetApplication
          - ec2:CreateNetworkInterface
          - ecr:BatchGetImage
          - ecr:DescribeImages
          - ecr:GetDownloadUrlForLayer
          - kms:CreateKey
          - kms:CreateAlias
          - kms:DescribeKey
          - kms:EnableKey
          - kms:ListGrants
          - kms:ListAliases
          - kms:ListKeyPolicies
          - kms:ListKeys
          - kms:PutKeyPolicy
          - kms:UpdateKeyDescription
          - kms:UpdateAlias
          - kms:UpdatePrimaryRegion
          - kms:RevokeGrant
          - kms:DisableKey
          - kms:DisableKeyRotation
          - kms:GetKeyPolicy
          - kms:GetKeyRotationStatus
          - kms:DeleteAlias
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          - kms:GenerateDataKey
          - kms:TagResource
          - kms:UntagResource
          - kms:Decrypt
        delete:
          - emr-serverless:DeleteApplication
          - emr-serverless:GetApplication
        list:
          - emr-serverless:ListApplications
    CreateApplicationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            Architecture:
              $ref: '#/components/schemas/Architecture'
            Name:
              description: User friendly Application name.
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[A-Za-z0-9._\/#-]+$
            ReleaseLabel:
              description: EMR release label.
              type: string
              minLength: 1
              maxLength: 64
              pattern: ^[A-Za-z0-9._/-]+$
            Type:
              description: The type of the application
              type: string
            InitialCapacity:
              description: Initial capacity initialized when an Application is started.
              $ref: '#/components/schemas/InitialCapacityConfigMap'
            MaximumCapacity:
              description: Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
              $ref: '#/components/schemas/MaximumAllowedResources'
            Tags:
              description: Tag map with key and value
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
            AutoStartConfiguration:
              description: Configuration for Auto Start of Application.
              $ref: '#/components/schemas/AutoStartConfiguration'
            AutoStopConfiguration:
              description: Configuration for Auto Stop of Application.
              $ref: '#/components/schemas/AutoStopConfiguration'
            ImageConfiguration:
              $ref: '#/components/schemas/ImageConfigurationInput'
            MonitoringConfiguration:
              $ref: '#/components/schemas/MonitoringConfiguration'
            RuntimeConfiguration:
              $ref: '#/components/schemas/ConfigurationList'
            InteractiveConfiguration:
              $ref: '#/components/schemas/InteractiveConfiguration'
            NetworkConfiguration:
              description: Network Configuration for customer VPC connectivity.
              $ref: '#/components/schemas/NetworkConfiguration'
            Arn:
              description: The Amazon Resource Name (ARN) of the EMR Serverless Application.
              type: string
              pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\d{12}):\/applications\/[0-9a-zA-Z]+$
            ApplicationId:
              description: The ID of the EMR Serverless Application.
              type: string
              minLength: 1
              maxLength: 64
            WorkerTypeSpecifications:
              description: The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
              $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
            SchedulerConfiguration:
              description: The scheduler configuration for batch and streaming jobs running on this application. Supported with release labels emr-7.0.0 and above.
              $ref: '#/components/schemas/SchedulerConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateApplicationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    applications:
      name: applications
      id: aws.emrserverless.applications
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::EMRServerless::Application
      x-identifiers:
        - ApplicationId
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMRServerless::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMRServerless::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::EMRServerless::Application"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/applications/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/applications/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/applications/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.ReleaseLabel') as release_label,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.InitialCapacity') as initial_capacity,
              JSON_EXTRACT(Properties, '$.MaximumCapacity') as maximum_capacity,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.AutoStartConfiguration') as auto_start_configuration,
              JSON_EXTRACT(Properties, '$.AutoStopConfiguration') as auto_stop_configuration,
              JSON_EXTRACT(Properties, '$.ImageConfiguration') as image_configuration,
              JSON_EXTRACT(Properties, '$.MonitoringConfiguration') as monitoring_configuration,
              JSON_EXTRACT(Properties, '$.RuntimeConfiguration') as runtime_configuration,
              JSON_EXTRACT(Properties, '$.InteractiveConfiguration') as interactive_configuration,
              JSON_EXTRACT(Properties, '$.NetworkConfiguration') as network_configuration,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(Properties, '$.WorkerTypeSpecifications') as worker_type_specifications,
              JSON_EXTRACT(Properties, '$.SchedulerConfiguration') as scheduler_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMRServerless::Application'
              AND data__Identifier = '<ApplicationId>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.Architecture') as architecture,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.ReleaseLabel') as release_label,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.InitialCapacity') as initial_capacity,
                JSON_EXTRACT(detail.Properties, '$.MaximumCapacity') as maximum_capacity,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags,
                JSON_EXTRACT(detail.Properties, '$.AutoStartConfiguration') as auto_start_configuration,
                JSON_EXTRACT(detail.Properties, '$.AutoStopConfiguration') as auto_stop_configuration,
                JSON_EXTRACT(detail.Properties, '$.ImageConfiguration') as image_configuration,
                JSON_EXTRACT(detail.Properties, '$.MonitoringConfiguration') as monitoring_configuration,
                JSON_EXTRACT(detail.Properties, '$.RuntimeConfiguration') as runtime_configuration,
                JSON_EXTRACT(detail.Properties, '$.InteractiveConfiguration') as interactive_configuration,
                JSON_EXTRACT(detail.Properties, '$.NetworkConfiguration') as network_configuration,
                JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
                JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
                JSON_EXTRACT(detail.Properties, '$.WorkerTypeSpecifications') as worker_type_specifications,
                JSON_EXTRACT(detail.Properties, '$.SchedulerConfiguration') as scheduler_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::EMRServerless::Application'
                AND detail.data__TypeName = 'AWS::EMRServerless::Application'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'Architecture') as architecture,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'ReleaseLabel') as release_label,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'InitialCapacity') as initial_capacity,
                  json_extract_path_text(Properties, 'MaximumCapacity') as maximum_capacity,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'AutoStartConfiguration') as auto_start_configuration,
                  json_extract_path_text(Properties, 'AutoStopConfiguration') as auto_stop_configuration,
                  json_extract_path_text(Properties, 'ImageConfiguration') as image_configuration,
                  json_extract_path_text(Properties, 'MonitoringConfiguration') as monitoring_configuration,
                  json_extract_path_text(Properties, 'RuntimeConfiguration') as runtime_configuration,
                  json_extract_path_text(Properties, 'InteractiveConfiguration') as interactive_configuration,
                  json_extract_path_text(Properties, 'NetworkConfiguration') as network_configuration,
                  json_extract_path_text(Properties, 'Arn') as arn,
                  json_extract_path_text(Properties, 'ApplicationId') as application_id,
                  json_extract_path_text(Properties, 'WorkerTypeSpecifications') as worker_type_specifications,
                  json_extract_path_text(Properties, 'SchedulerConfiguration') as scheduler_configuration
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::EMRServerless::Application'
                  AND data__Identifier = '<ApplicationId>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'Architecture') as architecture,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'ReleaseLabel') as release_label,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'InitialCapacity') as initial_capacity,
                    json_extract_path_text(detail.Properties, 'MaximumCapacity') as maximum_capacity,
                    json_extract_path_text(detail.Properties, 'Tags') as tags,
                    json_extract_path_text(detail.Properties, 'AutoStartConfiguration') as auto_start_configuration,
                    json_extract_path_text(detail.Properties, 'AutoStopConfiguration') as auto_stop_configuration,
                    json_extract_path_text(detail.Properties, 'ImageConfiguration') as image_configuration,
                    json_extract_path_text(detail.Properties, 'MonitoringConfiguration') as monitoring_configuration,
                    json_extract_path_text(detail.Properties, 'RuntimeConfiguration') as runtime_configuration,
                    json_extract_path_text(detail.Properties, 'InteractiveConfiguration') as interactive_configuration,
                    json_extract_path_text(detail.Properties, 'NetworkConfiguration') as network_configuration,
                    json_extract_path_text(detail.Properties, 'Arn') as arn,
                    json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                    json_extract_path_text(detail.Properties, 'WorkerTypeSpecifications') as worker_type_specifications,
                    json_extract_path_text(detail.Properties, 'SchedulerConfiguration') as scheduler_configuration
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::EMRServerless::Application'
                    AND detail.data__TypeName = 'AWS::EMRServerless::Application'
                    AND listing.region = 'us-east-1'
    applications_list_only:
      name: applications_list_only
      id: aws.emrserverless.applications_list_only
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::EMRServerless::Application
      x-identifiers:
        - ApplicationId
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ApplicationId') as application_id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMRServerless::Application'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'ApplicationId') as application_id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::EMRServerless::Application'
                AND region = 'us-east-1'
    application_tags:
      name: application_tags
      id: aws.emrserverless.application_tags
      x-cfn-schema-name: Application
      x-cfn-type-name: AWS::EMRServerless::Application
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.Architecture') as architecture,
              JSON_EXTRACT(detail.Properties, '$.Name') as name,
              JSON_EXTRACT(detail.Properties, '$.ReleaseLabel') as release_label,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.InitialCapacity') as initial_capacity,
              JSON_EXTRACT(detail.Properties, '$.MaximumCapacity') as maximum_capacity,
              JSON_EXTRACT(detail.Properties, '$.AutoStartConfiguration') as auto_start_configuration,
              JSON_EXTRACT(detail.Properties, '$.AutoStopConfiguration') as auto_stop_configuration,
              JSON_EXTRACT(detail.Properties, '$.ImageConfiguration') as image_configuration,
              JSON_EXTRACT(detail.Properties, '$.MonitoringConfiguration') as monitoring_configuration,
              JSON_EXTRACT(detail.Properties, '$.RuntimeConfiguration') as runtime_configuration,
              JSON_EXTRACT(detail.Properties, '$.InteractiveConfiguration') as interactive_configuration,
              JSON_EXTRACT(detail.Properties, '$.NetworkConfiguration') as network_configuration,
              JSON_EXTRACT(detail.Properties, '$.Arn') as arn,
              JSON_EXTRACT(detail.Properties, '$.ApplicationId') as application_id,
              JSON_EXTRACT(detail.Properties, '$.WorkerTypeSpecifications') as worker_type_specifications,
              JSON_EXTRACT(detail.Properties, '$.SchedulerConfiguration') as scheduler_configuration
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::EMRServerless::Application'
              AND detail.data__TypeName = 'AWS::EMRServerless::Application'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'Architecture') as architecture,
                json_extract_path_text(detail.Properties, 'Name') as name,
                json_extract_path_text(detail.Properties, 'ReleaseLabel') as release_label,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'InitialCapacity') as initial_capacity,
                json_extract_path_text(detail.Properties, 'MaximumCapacity') as maximum_capacity,
                json_extract_path_text(detail.Properties, 'AutoStartConfiguration') as auto_start_configuration,
                json_extract_path_text(detail.Properties, 'AutoStopConfiguration') as auto_stop_configuration,
                json_extract_path_text(detail.Properties, 'ImageConfiguration') as image_configuration,
                json_extract_path_text(detail.Properties, 'MonitoringConfiguration') as monitoring_configuration,
                json_extract_path_text(detail.Properties, 'RuntimeConfiguration') as runtime_configuration,
                json_extract_path_text(detail.Properties, 'InteractiveConfiguration') as interactive_configuration,
                json_extract_path_text(detail.Properties, 'NetworkConfiguration') as network_configuration,
                json_extract_path_text(detail.Properties, 'Arn') as arn,
                json_extract_path_text(detail.Properties, 'ApplicationId') as application_id,
                json_extract_path_text(detail.Properties, 'WorkerTypeSpecifications') as worker_type_specifications,
                json_extract_path_text(detail.Properties, 'SchedulerConfiguration') as scheduler_configuration
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::EMRServerless::Application'
                AND detail.data__TypeName = 'AWS::EMRServerless::Application'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Application&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateApplication
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
