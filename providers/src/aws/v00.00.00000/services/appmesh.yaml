openapi: 3.0.0
info:
  title: AppMesh
  version: 1.0.0
paths: {}
components:
  schemas:
    GatewayRouteHostnameMatch:
      type: object
      additionalProperties: false
      properties:
        Suffix:
          type: string
        Exact:
          type: string
    QueryParameter:
      type: object
      additionalProperties: false
      properties:
        Name:
          type: string
        Match:
          $ref: '#/components/schemas/HttpQueryParameterMatch'
      required:
        - Name
    GatewayRouteVirtualService:
      type: object
      additionalProperties: false
      properties:
        VirtualServiceName:
          type: string
      required:
        - VirtualServiceName
    GatewayRouteTarget:
      type: object
      additionalProperties: false
      properties:
        VirtualService:
          $ref: '#/components/schemas/GatewayRouteVirtualService'
        Port:
          type: integer
      required:
        - VirtualService
    GrpcGatewayRouteMetadata:
      type: object
      additionalProperties: false
      properties:
        Invert:
          type: boolean
        Name:
          type: string
        Match:
          $ref: '#/components/schemas/GatewayRouteMetadataMatch'
      required:
        - Name
    GrpcGatewayRouteMatch:
      type: object
      additionalProperties: false
      properties:
        Hostname:
          $ref: '#/components/schemas/GatewayRouteHostnameMatch'
        Metadata:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/GrpcGatewayRouteMetadata'
        ServiceName:
          type: string
        Port:
          type: integer
    HttpQueryParameterMatch:
      type: object
      additionalProperties: false
      properties:
        Exact:
          type: string
    HttpGatewayRoutePrefixRewrite:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        DefaultPrefix:
          type: string
    GrpcGatewayRoute:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/GrpcGatewayRouteAction'
        Match:
          $ref: '#/components/schemas/GrpcGatewayRouteMatch'
      required:
        - Action
        - Match
    GatewayRouteSpec:
      type: object
      additionalProperties: false
      properties:
        HttpRoute:
          $ref: '#/components/schemas/HttpGatewayRoute'
        Http2Route:
          $ref: '#/components/schemas/HttpGatewayRoute'
        GrpcRoute:
          $ref: '#/components/schemas/GrpcGatewayRoute'
        Priority:
          type: integer
    HttpGatewayRouteMatch:
      type: object
      additionalProperties: false
      properties:
        Path:
          $ref: '#/components/schemas/HttpPathMatch'
        Headers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/HttpGatewayRouteHeader'
        Port:
          type: integer
        Hostname:
          $ref: '#/components/schemas/GatewayRouteHostnameMatch'
        Prefix:
          type: string
        Method:
          type: string
        QueryParameters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/QueryParameter'
    HttpGatewayRouteAction:
      type: object
      additionalProperties: false
      properties:
        Target:
          $ref: '#/components/schemas/GatewayRouteTarget'
        Rewrite:
          $ref: '#/components/schemas/HttpGatewayRouteRewrite'
      required:
        - Target
    GrpcGatewayRouteRewrite:
      type: object
      additionalProperties: false
      properties:
        Hostname:
          $ref: '#/components/schemas/GatewayRouteHostnameRewrite'
    HttpGatewayRouteHeader:
      type: object
      additionalProperties: false
      properties:
        Invert:
          type: boolean
        Name:
          type: string
        Match:
          $ref: '#/components/schemas/HttpGatewayRouteHeaderMatch'
      required:
        - Name
    GatewayRouteRangeMatch:
      type: object
      additionalProperties: false
      properties:
        Start:
          type: integer
        End:
          type: integer
      required:
        - Start
        - End
    GrpcGatewayRouteAction:
      type: object
      additionalProperties: false
      properties:
        Target:
          $ref: '#/components/schemas/GatewayRouteTarget'
        Rewrite:
          $ref: '#/components/schemas/GrpcGatewayRouteRewrite'
      required:
        - Target
    HttpGatewayRouteHeaderMatch:
      type: object
      additionalProperties: false
      properties:
        Suffix:
          type: string
        Exact:
          type: string
        Prefix:
          type: string
        Regex:
          type: string
        Range:
          $ref: '#/components/schemas/GatewayRouteRangeMatch'
    HttpGatewayRoutePathRewrite:
      type: object
      additionalProperties: false
      properties:
        Exact:
          type: string
    GatewayRouteMetadataMatch:
      type: object
      additionalProperties: false
      properties:
        Suffix:
          type: string
        Exact:
          type: string
        Prefix:
          type: string
        Regex:
          type: string
        Range:
          $ref: '#/components/schemas/GatewayRouteRangeMatch'
    Tag:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    HttpPathMatch:
      type: object
      additionalProperties: false
      properties:
        Regex:
          type: string
        Exact:
          type: string
    HttpGatewayRoute:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/HttpGatewayRouteAction'
        Match:
          $ref: '#/components/schemas/HttpGatewayRouteMatch'
      required:
        - Action
        - Match
    HttpGatewayRouteRewrite:
      type: object
      additionalProperties: false
      properties:
        Path:
          $ref: '#/components/schemas/HttpGatewayRoutePathRewrite'
        Hostname:
          $ref: '#/components/schemas/GatewayRouteHostnameRewrite'
        Prefix:
          $ref: '#/components/schemas/HttpGatewayRoutePrefixRewrite'
    GatewayRouteHostnameRewrite:
      type: object
      additionalProperties: false
      properties:
        DefaultTargetHostname:
          type: string
    GatewayRoute:
      type: object
      properties:
        Uid:
          type: string
        MeshName:
          type: string
        VirtualGatewayName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        GatewayRouteName:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/GatewayRouteSpec'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MeshName
        - VirtualGatewayName
        - Spec
      x-stackql-resource-name: gateway_route
      x-stackql-primaryIdentifier:
        - Id
    MeshSpec:
      type: object
      additionalProperties: false
      properties:
        EgressFilter:
          $ref: '#/components/schemas/EgressFilter'
        ServiceDiscovery:
          $ref: '#/components/schemas/MeshServiceDiscovery'
    EgressFilter:
      type: object
      additionalProperties: false
      properties:
        Type:
          type: string
      required:
        - Type
    MeshServiceDiscovery:
      type: object
      additionalProperties: false
      properties:
        IpPreference:
          type: string
    Mesh:
      type: object
      properties:
        Uid:
          type: string
        MeshName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/MeshSpec'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      x-stackql-resource-name: mesh
      x-stackql-primaryIdentifier:
        - Id
    HttpRetryPolicy:
      type: object
      additionalProperties: false
      properties:
        MaxRetries:
          type: integer
        TcpRetryEvents:
          type: array
          uniqueItems: false
          items:
            type: string
        PerRetryTimeout:
          $ref: '#/components/schemas/Duration'
        HttpRetryEvents:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - MaxRetries
        - PerRetryTimeout
    GrpcRoute:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/GrpcRouteAction'
        RetryPolicy:
          $ref: '#/components/schemas/GrpcRetryPolicy'
        Timeout:
          $ref: '#/components/schemas/GrpcTimeout'
        Match:
          $ref: '#/components/schemas/GrpcRouteMatch'
      required:
        - Action
        - Match
    HttpRouteAction:
      type: object
      additionalProperties: false
      properties:
        WeightedTargets:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/WeightedTarget'
      required:
        - WeightedTargets
    TcpRoute:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/TcpRouteAction'
        Timeout:
          $ref: '#/components/schemas/TcpTimeout'
        Match:
          $ref: '#/components/schemas/TcpRouteMatch'
      required:
        - Action
    HttpRouteHeader:
      type: object
      additionalProperties: false
      properties:
        Invert:
          type: boolean
        Name:
          type: string
        Match:
          $ref: '#/components/schemas/HeaderMatchMethod'
      required:
        - Name
    GrpcTimeout:
      type: object
      additionalProperties: false
      properties:
        PerRequest:
          $ref: '#/components/schemas/Duration'
        Idle:
          $ref: '#/components/schemas/Duration'
    GrpcRouteMetadataMatchMethod:
      type: object
      additionalProperties: false
      properties:
        Suffix:
          type: string
        Exact:
          type: string
        Prefix:
          type: string
        Regex:
          type: string
        Range:
          $ref: '#/components/schemas/MatchRange'
    GrpcRouteMetadata:
      type: object
      additionalProperties: false
      properties:
        Invert:
          type: boolean
        Name:
          type: string
        Match:
          $ref: '#/components/schemas/GrpcRouteMetadataMatchMethod'
      required:
        - Name
    HeaderMatchMethod:
      type: object
      additionalProperties: false
      properties:
        Suffix:
          type: string
        Exact:
          type: string
        Prefix:
          type: string
        Regex:
          type: string
        Range:
          $ref: '#/components/schemas/MatchRange'
    GrpcRetryPolicy:
      type: object
      additionalProperties: false
      properties:
        MaxRetries:
          type: integer
        TcpRetryEvents:
          type: array
          uniqueItems: false
          items:
            type: string
        PerRetryTimeout:
          $ref: '#/components/schemas/Duration'
        GrpcRetryEvents:
          type: array
          uniqueItems: false
          items:
            type: string
        HttpRetryEvents:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - MaxRetries
        - PerRetryTimeout
    TcpTimeout:
      type: object
      additionalProperties: false
      properties:
        Idle:
          $ref: '#/components/schemas/Duration'
    WeightedTarget:
      type: object
      additionalProperties: false
      properties:
        VirtualNode:
          type: string
        Weight:
          type: integer
        Port:
          type: integer
      required:
        - VirtualNode
        - Weight
    HttpTimeout:
      type: object
      additionalProperties: false
      properties:
        PerRequest:
          $ref: '#/components/schemas/Duration'
        Idle:
          $ref: '#/components/schemas/Duration'
    TcpRouteAction:
      type: object
      additionalProperties: false
      properties:
        WeightedTargets:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/WeightedTarget'
      required:
        - WeightedTargets
    GrpcRouteMatch:
      type: object
      additionalProperties: false
      properties:
        Metadata:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/GrpcRouteMetadata'
        MethodName:
          type: string
        ServiceName:
          type: string
        Port:
          type: integer
    MatchRange:
      type: object
      additionalProperties: false
      properties:
        Start:
          type: integer
        End:
          type: integer
      required:
        - Start
        - End
    Duration:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: integer
        Unit:
          type: string
      required:
        - Value
        - Unit
    RouteSpec:
      type: object
      additionalProperties: false
      properties:
        HttpRoute:
          $ref: '#/components/schemas/HttpRoute'
        Http2Route:
          $ref: '#/components/schemas/HttpRoute'
        GrpcRoute:
          $ref: '#/components/schemas/GrpcRoute'
        TcpRoute:
          $ref: '#/components/schemas/TcpRoute'
        Priority:
          type: integer
    TcpRouteMatch:
      type: object
      additionalProperties: false
      properties:
        Port:
          type: integer
    HttpRoute:
      type: object
      additionalProperties: false
      properties:
        Action:
          $ref: '#/components/schemas/HttpRouteAction'
        RetryPolicy:
          $ref: '#/components/schemas/HttpRetryPolicy'
        Timeout:
          $ref: '#/components/schemas/HttpTimeout'
        Match:
          $ref: '#/components/schemas/HttpRouteMatch'
      required:
        - Action
        - Match
    GrpcRouteAction:
      type: object
      additionalProperties: false
      properties:
        WeightedTargets:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/WeightedTarget'
      required:
        - WeightedTargets
    HttpRouteMatch:
      type: object
      additionalProperties: false
      properties:
        Path:
          $ref: '#/components/schemas/HttpPathMatch'
        Scheme:
          type: string
        Headers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/HttpRouteHeader'
        Port:
          type: integer
        Prefix:
          type: string
        Method:
          type: string
        QueryParameters:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/QueryParameter'
    Route:
      type: object
      properties:
        Uid:
          type: string
        MeshName:
          type: string
        VirtualRouterName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        RouteName:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/RouteSpec'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MeshName
        - VirtualRouterName
        - Spec
      x-stackql-resource-name: route
      x-stackql-primaryIdentifier:
        - Id
    VirtualGatewayListener:
      type: object
      additionalProperties: false
      properties:
        ConnectionPool:
          $ref: '#/components/schemas/VirtualGatewayConnectionPool'
        HealthCheck:
          $ref: '#/components/schemas/VirtualGatewayHealthCheckPolicy'
        TLS:
          $ref: '#/components/schemas/VirtualGatewayListenerTls'
        PortMapping:
          $ref: '#/components/schemas/VirtualGatewayPortMapping'
      required:
        - PortMapping
    VirtualGatewayListenerTlsValidationContextTrust:
      type: object
      additionalProperties: false
      properties:
        File:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContextFileTrust'
        SDS:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContextSdsTrust'
    VirtualGatewayAccessLog:
      type: object
      additionalProperties: false
      properties:
        File:
          $ref: '#/components/schemas/VirtualGatewayFileAccessLog'
    VirtualGatewaySpec:
      type: object
      additionalProperties: false
      properties:
        Logging:
          $ref: '#/components/schemas/VirtualGatewayLogging'
        Listeners:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VirtualGatewayListener'
        BackendDefaults:
          $ref: '#/components/schemas/VirtualGatewayBackendDefaults'
      required:
        - Listeners
    VirtualGatewayClientPolicy:
      type: object
      additionalProperties: false
      properties:
        TLS:
          $ref: '#/components/schemas/VirtualGatewayClientPolicyTls'
    VirtualGatewayHttpConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxConnections:
          type: integer
        MaxPendingRequests:
          type: integer
      required:
        - MaxConnections
    VirtualGatewayClientPolicyTls:
      type: object
      additionalProperties: false
      properties:
        Validation:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContext'
        Ports:
          type: array
          uniqueItems: false
          items:
            type: integer
        Enforce:
          type: boolean
        Certificate:
          $ref: '#/components/schemas/VirtualGatewayClientTlsCertificate'
      required:
        - Validation
    VirtualGatewayListenerTlsCertificate:
      type: object
      additionalProperties: false
      properties:
        SDS:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsSdsCertificate'
        ACM:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsAcmCertificate'
        File:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsFileCertificate'
    VirtualGatewayTlsValidationContextSdsTrust:
      type: object
      additionalProperties: false
      properties:
        SecretName:
          type: string
      required:
        - SecretName
    VirtualGatewayFileAccessLog:
      type: object
      additionalProperties: false
      properties:
        Path:
          type: string
        Format:
          $ref: '#/components/schemas/LoggingFormat'
      required:
        - Path
    LoggingFormat:
      type: object
      additionalProperties: false
      properties:
        Text:
          type: string
        Json:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/JsonFormatRef'
    VirtualGatewayTlsValidationContext:
      type: object
      additionalProperties: false
      properties:
        SubjectAlternativeNames:
          $ref: '#/components/schemas/SubjectAlternativeNames'
        Trust:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContextTrust'
      required:
        - Trust
    VirtualGatewayListenerTlsValidationContext:
      type: object
      additionalProperties: false
      properties:
        SubjectAlternativeNames:
          $ref: '#/components/schemas/SubjectAlternativeNames'
        Trust:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsValidationContextTrust'
      required:
        - Trust
    VirtualGatewayTlsValidationContextFileTrust:
      type: object
      additionalProperties: false
      properties:
        CertificateChain:
          type: string
      required:
        - CertificateChain
    JsonFormatRef:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    VirtualGatewayHealthCheckPolicy:
      type: object
      additionalProperties: false
      properties:
        Path:
          type: string
        UnhealthyThreshold:
          type: integer
        Port:
          type: integer
        HealthyThreshold:
          type: integer
        TimeoutMillis:
          type: integer
        Protocol:
          type: string
        IntervalMillis:
          type: integer
      required:
        - UnhealthyThreshold
        - HealthyThreshold
        - TimeoutMillis
        - Protocol
        - IntervalMillis
    SubjectAlternativeNameMatchers:
      type: object
      additionalProperties: false
      properties:
        Exact:
          type: array
          uniqueItems: false
          items:
            type: string
    VirtualGatewayTlsValidationContextTrust:
      type: object
      additionalProperties: false
      properties:
        SDS:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContextSdsTrust'
        ACM:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContextAcmTrust'
        File:
          $ref: '#/components/schemas/VirtualGatewayTlsValidationContextFileTrust'
    VirtualGatewayListenerTlsAcmCertificate:
      type: object
      additionalProperties: false
      properties:
        CertificateArn:
          type: string
      required:
        - CertificateArn
    VirtualGatewayConnectionPool:
      type: object
      additionalProperties: false
      properties:
        HTTP:
          $ref: '#/components/schemas/VirtualGatewayHttpConnectionPool'
        HTTP2:
          $ref: '#/components/schemas/VirtualGatewayHttp2ConnectionPool'
        GRPC:
          $ref: '#/components/schemas/VirtualGatewayGrpcConnectionPool'
    SubjectAlternativeNames:
      type: object
      additionalProperties: false
      properties:
        Match:
          $ref: '#/components/schemas/SubjectAlternativeNameMatchers'
      required:
        - Match
    VirtualGatewayClientTlsCertificate:
      type: object
      additionalProperties: false
      properties:
        File:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsFileCertificate'
        SDS:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsSdsCertificate'
    VirtualGatewayBackendDefaults:
      type: object
      additionalProperties: false
      properties:
        ClientPolicy:
          $ref: '#/components/schemas/VirtualGatewayClientPolicy'
    VirtualGatewayLogging:
      type: object
      additionalProperties: false
      properties:
        AccessLog:
          $ref: '#/components/schemas/VirtualGatewayAccessLog'
    VirtualGatewayGrpcConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxRequests:
          type: integer
      required:
        - MaxRequests
    VirtualGatewayListenerTlsSdsCertificate:
      type: object
      additionalProperties: false
      properties:
        SecretName:
          type: string
      required:
        - SecretName
    VirtualGatewayListenerTlsFileCertificate:
      type: object
      additionalProperties: false
      properties:
        CertificateChain:
          type: string
        PrivateKey:
          type: string
      required:
        - PrivateKey
        - CertificateChain
    VirtualGatewayPortMapping:
      type: object
      additionalProperties: false
      properties:
        Protocol:
          type: string
        Port:
          type: integer
      required:
        - Port
        - Protocol
    VirtualGatewayHttp2ConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxRequests:
          type: integer
      required:
        - MaxRequests
    VirtualGatewayTlsValidationContextAcmTrust:
      type: object
      additionalProperties: false
      properties:
        CertificateAuthorityArns:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - CertificateAuthorityArns
    VirtualGatewayListenerTls:
      type: object
      additionalProperties: false
      properties:
        Validation:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsValidationContext'
        Mode:
          type: string
        Certificate:
          $ref: '#/components/schemas/VirtualGatewayListenerTlsCertificate'
      required:
        - Mode
        - Certificate
    VirtualGateway:
      type: object
      properties:
        Uid:
          type: string
        VirtualGatewayName:
          type: string
        MeshName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/VirtualGatewaySpec'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MeshName
        - Spec
      x-stackql-resource-name: virtual_gateway
      x-stackql-primaryIdentifier:
        - Id
    AccessLog:
      type: object
      additionalProperties: false
      properties:
        File:
          $ref: '#/components/schemas/FileAccessLog'
    ListenerTimeout:
      type: object
      additionalProperties: false
      properties:
        TCP:
          $ref: '#/components/schemas/TcpTimeout'
        HTTP:
          $ref: '#/components/schemas/HttpTimeout'
        HTTP2:
          $ref: '#/components/schemas/HttpTimeout'
        GRPC:
          $ref: '#/components/schemas/GrpcTimeout'
    TlsValidationContextAcmTrust:
      type: object
      additionalProperties: false
      properties:
        CertificateAuthorityArns:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - CertificateAuthorityArns
    ClientPolicy:
      type: object
      additionalProperties: false
      properties:
        TLS:
          $ref: '#/components/schemas/ClientPolicyTls'
    FileAccessLog:
      type: object
      additionalProperties: false
      properties:
        Path:
          type: string
        Format:
          $ref: '#/components/schemas/LoggingFormat'
      required:
        - Path
    Listener:
      type: object
      additionalProperties: false
      properties:
        ConnectionPool:
          $ref: '#/components/schemas/VirtualNodeConnectionPool'
        Timeout:
          $ref: '#/components/schemas/ListenerTimeout'
        HealthCheck:
          $ref: '#/components/schemas/HealthCheck'
        TLS:
          $ref: '#/components/schemas/ListenerTls'
        PortMapping:
          $ref: '#/components/schemas/PortMapping'
        OutlierDetection:
          $ref: '#/components/schemas/OutlierDetection'
      required:
        - PortMapping
    TlsValidationContextTrust:
      type: object
      additionalProperties: false
      properties:
        SDS:
          $ref: '#/components/schemas/TlsValidationContextSdsTrust'
        ACM:
          $ref: '#/components/schemas/TlsValidationContextAcmTrust'
        File:
          $ref: '#/components/schemas/TlsValidationContextFileTrust'
    HealthCheck:
      type: object
      additionalProperties: false
      properties:
        Path:
          type: string
        UnhealthyThreshold:
          type: integer
        Port:
          type: integer
        HealthyThreshold:
          type: integer
        TimeoutMillis:
          type: integer
        Protocol:
          type: string
        IntervalMillis:
          type: integer
      required:
        - UnhealthyThreshold
        - HealthyThreshold
        - TimeoutMillis
        - Protocol
        - IntervalMillis
    VirtualNodeConnectionPool:
      type: object
      additionalProperties: false
      properties:
        TCP:
          $ref: '#/components/schemas/VirtualNodeTcpConnectionPool'
        HTTP:
          $ref: '#/components/schemas/VirtualNodeHttpConnectionPool'
        HTTP2:
          $ref: '#/components/schemas/VirtualNodeHttp2ConnectionPool'
        GRPC:
          $ref: '#/components/schemas/VirtualNodeGrpcConnectionPool'
    TlsValidationContextFileTrust:
      type: object
      additionalProperties: false
      properties:
        CertificateChain:
          type: string
      required:
        - CertificateChain
    ListenerTlsFileCertificate:
      type: object
      additionalProperties: false
      properties:
        CertificateChain:
          type: string
        PrivateKey:
          type: string
      required:
        - PrivateKey
        - CertificateChain
    ListenerTlsValidationContextTrust:
      type: object
      additionalProperties: false
      properties:
        File:
          $ref: '#/components/schemas/TlsValidationContextFileTrust'
        SDS:
          $ref: '#/components/schemas/TlsValidationContextSdsTrust'
    ListenerTlsCertificate:
      type: object
      additionalProperties: false
      properties:
        SDS:
          $ref: '#/components/schemas/ListenerTlsSdsCertificate'
        ACM:
          $ref: '#/components/schemas/ListenerTlsAcmCertificate'
        File:
          $ref: '#/components/schemas/ListenerTlsFileCertificate'
    PortMapping:
      type: object
      additionalProperties: false
      properties:
        Protocol:
          type: string
        Port:
          type: integer
      required:
        - Port
        - Protocol
    ListenerTls:
      type: object
      additionalProperties: false
      properties:
        Validation:
          $ref: '#/components/schemas/ListenerTlsValidationContext'
        Mode:
          type: string
        Certificate:
          $ref: '#/components/schemas/ListenerTlsCertificate'
      required:
        - Mode
        - Certificate
    VirtualNodeTcpConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxConnections:
          type: integer
      required:
        - MaxConnections
    ServiceDiscovery:
      type: object
      additionalProperties: false
      properties:
        DNS:
          $ref: '#/components/schemas/DnsServiceDiscovery'
        AWSCloudMap:
          $ref: '#/components/schemas/AwsCloudMapServiceDiscovery'
    ListenerTlsAcmCertificate:
      type: object
      additionalProperties: false
      properties:
        CertificateArn:
          type: string
      required:
        - CertificateArn
    VirtualNodeSpec:
      type: object
      additionalProperties: false
      properties:
        Logging:
          $ref: '#/components/schemas/Logging'
        Backends:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Backend'
        Listeners:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Listener'
        BackendDefaults:
          $ref: '#/components/schemas/BackendDefaults'
        ServiceDiscovery:
          $ref: '#/components/schemas/ServiceDiscovery'
    Logging:
      type: object
      additionalProperties: false
      properties:
        AccessLog:
          $ref: '#/components/schemas/AccessLog'
    DnsServiceDiscovery:
      type: object
      additionalProperties: false
      properties:
        Hostname:
          type: string
        IpPreference:
          type: string
        ResponseType:
          type: string
      required:
        - Hostname
    VirtualNodeHttp2ConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxRequests:
          type: integer
      required:
        - MaxRequests
    ClientPolicyTls:
      type: object
      additionalProperties: false
      properties:
        Validation:
          $ref: '#/components/schemas/TlsValidationContext'
        Ports:
          type: array
          uniqueItems: false
          items:
            type: integer
        Enforce:
          type: boolean
        Certificate:
          $ref: '#/components/schemas/ClientTlsCertificate'
      required:
        - Validation
    VirtualServiceBackend:
      type: object
      additionalProperties: false
      properties:
        VirtualServiceName:
          type: string
        ClientPolicy:
          $ref: '#/components/schemas/ClientPolicy'
      required:
        - VirtualServiceName
    AwsCloudMapServiceDiscovery:
      type: object
      additionalProperties: false
      properties:
        Attributes:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/AwsCloudMapInstanceAttribute'
        NamespaceName:
          type: string
        ServiceName:
          type: string
        IpPreference:
          type: string
      required:
        - NamespaceName
        - ServiceName
    TlsValidationContext:
      type: object
      additionalProperties: false
      properties:
        SubjectAlternativeNames:
          $ref: '#/components/schemas/SubjectAlternativeNames'
        Trust:
          $ref: '#/components/schemas/TlsValidationContextTrust'
      required:
        - Trust
    AwsCloudMapInstanceAttribute:
      type: object
      additionalProperties: false
      properties:
        Value:
          type: string
        Key:
          type: string
      required:
        - Value
        - Key
    BackendDefaults:
      type: object
      additionalProperties: false
      properties:
        ClientPolicy:
          $ref: '#/components/schemas/ClientPolicy'
    ListenerTlsSdsCertificate:
      type: object
      additionalProperties: false
      properties:
        SecretName:
          type: string
      required:
        - SecretName
    TlsValidationContextSdsTrust:
      type: object
      additionalProperties: false
      properties:
        SecretName:
          type: string
      required:
        - SecretName
    Backend:
      type: object
      additionalProperties: false
      properties:
        VirtualService:
          $ref: '#/components/schemas/VirtualServiceBackend'
    ListenerTlsValidationContext:
      type: object
      additionalProperties: false
      properties:
        SubjectAlternativeNames:
          $ref: '#/components/schemas/SubjectAlternativeNames'
        Trust:
          $ref: '#/components/schemas/ListenerTlsValidationContextTrust'
      required:
        - Trust
    ClientTlsCertificate:
      type: object
      additionalProperties: false
      properties:
        File:
          $ref: '#/components/schemas/ListenerTlsFileCertificate'
        SDS:
          $ref: '#/components/schemas/ListenerTlsSdsCertificate'
    OutlierDetection:
      type: object
      additionalProperties: false
      properties:
        MaxEjectionPercent:
          type: integer
        BaseEjectionDuration:
          $ref: '#/components/schemas/Duration'
        MaxServerErrors:
          type: integer
        Interval:
          $ref: '#/components/schemas/Duration'
      required:
        - MaxEjectionPercent
        - BaseEjectionDuration
        - MaxServerErrors
        - Interval
    VirtualNodeGrpcConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxRequests:
          type: integer
      required:
        - MaxRequests
    VirtualNodeHttpConnectionPool:
      type: object
      additionalProperties: false
      properties:
        MaxConnections:
          type: integer
        MaxPendingRequests:
          type: integer
      required:
        - MaxConnections
    VirtualNode:
      type: object
      properties:
        Uid:
          type: string
        MeshName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/VirtualNodeSpec'
        VirtualNodeName:
          type: string
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MeshName
        - Spec
      x-stackql-resource-name: virtual_node
      x-stackql-primaryIdentifier:
        - Id
    VirtualRouterSpec:
      type: object
      additionalProperties: false
      properties:
        Listeners:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VirtualRouterListener'
      required:
        - Listeners
    VirtualRouterListener:
      type: object
      additionalProperties: false
      properties:
        PortMapping:
          $ref: '#/components/schemas/PortMapping'
      required:
        - PortMapping
    VirtualRouter:
      type: object
      properties:
        Uid:
          type: string
        MeshName:
          type: string
        VirtualRouterName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/VirtualRouterSpec'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MeshName
        - Spec
      x-stackql-resource-name: virtual_router
      x-stackql-primaryIdentifier:
        - Id
    VirtualNodeServiceProvider:
      type: object
      additionalProperties: false
      properties:
        VirtualNodeName:
          type: string
      required:
        - VirtualNodeName
    VirtualServiceProvider:
      type: object
      additionalProperties: false
      properties:
        VirtualNode:
          $ref: '#/components/schemas/VirtualNodeServiceProvider'
        VirtualRouter:
          $ref: '#/components/schemas/VirtualRouterServiceProvider'
    VirtualServiceSpec:
      type: object
      additionalProperties: false
      properties:
        Provider:
          $ref: '#/components/schemas/VirtualServiceProvider'
    VirtualRouterServiceProvider:
      type: object
      additionalProperties: false
      properties:
        VirtualRouterName:
          type: string
      required:
        - VirtualRouterName
    VirtualService:
      type: object
      properties:
        Uid:
          type: string
        MeshName:
          type: string
        MeshOwner:
          type: string
        ResourceOwner:
          type: string
        Id:
          type: string
        VirtualServiceName:
          type: string
        Arn:
          type: string
        Spec:
          $ref: '#/components/schemas/VirtualServiceSpec'
        Tags:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - MeshName
        - VirtualServiceName
        - Spec
      x-stackql-resource-name: virtual_service
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    gateway_routes:
      name: gateway_routes
      id: aws.appmesh.gateway_routes
      x-cfn-schema-name: GatewayRoute
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::GatewayRoute'
    gateway_route:
      name: gateway_route
      id: aws.appmesh.gateway_route
      x-cfn-schema-name: GatewayRoute
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.VirtualGatewayName') as virtual_gateway_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.GatewayRouteName') as gateway_route_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.HttpRoute') as spec_http_route,
              JSON_EXTRACT(Properties, '$.Spec.Http2Route') as spec_http2_route,
              JSON_EXTRACT(Properties, '$.Spec.GrpcRoute') as spec_grpc_route,
              JSON_EXTRACT(Properties, '$.Spec.Priority') as spec_priority,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::GatewayRoute'
    meshes:
      name: meshes
      id: aws.appmesh.meshes
      x-cfn-schema-name: Mesh
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::Mesh'
    mesh:
      name: mesh
      id: aws.appmesh.mesh
      x-cfn-schema-name: Mesh
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.EgressFilter') as spec_egress_filter,
              JSON_EXTRACT(Properties, '$.Spec.ServiceDiscovery') as spec_service_discovery,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::Mesh'
    routes:
      name: routes
      id: aws.appmesh.routes
      x-cfn-schema-name: Route
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::Route'
    route:
      name: route
      id: aws.appmesh.route
      x-cfn-schema-name: Route
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.VirtualRouterName') as virtual_router_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.RouteName') as route_name,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.HttpRoute') as spec_http_route,
              JSON_EXTRACT(Properties, '$.Spec.Http2Route') as spec_http2_route,
              JSON_EXTRACT(Properties, '$.Spec.GrpcRoute') as spec_grpc_route,
              JSON_EXTRACT(Properties, '$.Spec.TcpRoute') as spec_tcp_route,
              JSON_EXTRACT(Properties, '$.Spec.Priority') as spec_priority,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::Route'
    virtual_gateways:
      name: virtual_gateways
      id: aws.appmesh.virtual_gateways
      x-cfn-schema-name: VirtualGateway
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::VirtualGateway'
    virtual_gateway:
      name: virtual_gateway
      id: aws.appmesh.virtual_gateway
      x-cfn-schema-name: VirtualGateway
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.VirtualGatewayName') as virtual_gateway_name,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.Logging') as spec_logging,
              JSON_EXTRACT(Properties, '$.Spec.Listeners') as spec_listeners,
              JSON_EXTRACT(Properties, '$.Spec.BackendDefaults') as spec_backend_defaults,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::VirtualGateway'
    virtual_nodes:
      name: virtual_nodes
      id: aws.appmesh.virtual_nodes
      x-cfn-schema-name: VirtualNode
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::VirtualNode'
    virtual_node:
      name: virtual_node
      id: aws.appmesh.virtual_node
      x-cfn-schema-name: VirtualNode
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.Logging') as spec_logging,
              JSON_EXTRACT(Properties, '$.Spec.Backends') as spec_backends,
              JSON_EXTRACT(Properties, '$.Spec.Listeners') as spec_listeners,
              JSON_EXTRACT(Properties, '$.Spec.BackendDefaults') as spec_backend_defaults,
              JSON_EXTRACT(Properties, '$.Spec.ServiceDiscovery') as spec_service_discovery,
              JSON_EXTRACT(Properties, '$.VirtualNodeName') as virtual_node_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::VirtualNode'
    virtual_routers:
      name: virtual_routers
      id: aws.appmesh.virtual_routers
      x-cfn-schema-name: VirtualRouter
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::VirtualRouter'
    virtual_router:
      name: virtual_router
      id: aws.appmesh.virtual_router
      x-cfn-schema-name: VirtualRouter
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.VirtualRouterName') as virtual_router_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.Listeners') as spec_listeners,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::VirtualRouter'
    virtual_services:
      name: virtual_services
      id: aws.appmesh.virtual_services
      x-cfn-schema-name: VirtualService
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::AppMesh::VirtualService'
    virtual_service:
      name: virtual_service
      id: aws.appmesh.virtual_service
      x-cfn-schema-name: VirtualService
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Uid') as uid,
              JSON_EXTRACT(Properties, '$.MeshName') as mesh_name,
              JSON_EXTRACT(Properties, '$.MeshOwner') as mesh_owner,
              JSON_EXTRACT(Properties, '$.ResourceOwner') as resource_owner,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.VirtualServiceName') as virtual_service_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Spec.Provider') as spec_provider,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::AppMesh::VirtualService'
