openapi: 3.0.0
info:
  title: Greengrass
  version: 1.0.0
paths: {}
components:
  schemas:
    ConnectorDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        Connectors:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Connector'
        ConnectorDefinitionId:
          type: string
      required:
        - Connectors
        - ConnectorDefinitionId
      x-stackql-resource-name: connector_definition_version
      x-stackql-primaryIdentifier:
        - Id
    Connector:
      type: object
      additionalProperties: false
      properties:
        ConnectorArn:
          type: string
        Parameters:
          type: object
        Id:
          type: string
      required:
        - ConnectorArn
        - Id
    ConnectorDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/ConnectorDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: connector_definition
      x-stackql-primaryIdentifier:
        - Id
    CoreDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        Cores:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Core'
        CoreDefinitionId:
          type: string
      required:
        - Cores
        - CoreDefinitionId
      x-stackql-resource-name: core_definition_version
      x-stackql-primaryIdentifier:
        - Id
    Core:
      type: object
      additionalProperties: false
      properties:
        SyncShadow:
          type: boolean
        ThingArn:
          type: string
        Id:
          type: string
        CertificateArn:
          type: string
      required:
        - ThingArn
        - Id
        - CertificateArn
    CoreDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/CoreDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: core_definition
      x-stackql-primaryIdentifier:
        - Id
    DeviceDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        DeviceDefinitionId:
          type: string
        Devices:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Device'
      required:
        - Devices
        - DeviceDefinitionId
      x-stackql-resource-name: device_definition_version
      x-stackql-primaryIdentifier:
        - Id
    Device:
      type: object
      additionalProperties: false
      properties:
        SyncShadow:
          type: boolean
        ThingArn:
          type: string
        Id:
          type: string
        CertificateArn:
          type: string
      required:
        - ThingArn
        - Id
        - CertificateArn
    DeviceDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/DeviceDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: device_definition
      x-stackql-primaryIdentifier:
        - Id
    FunctionDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        DefaultConfig:
          $ref: '#/components/schemas/DefaultConfig'
        Functions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Function'
        FunctionDefinitionId:
          type: string
      required:
        - FunctionDefinitionId
        - Functions
      x-stackql-resource-name: function_definition_version
      x-stackql-primaryIdentifier:
        - Id
    DefaultConfig:
      type: object
      additionalProperties: false
      properties:
        Execution:
          $ref: '#/components/schemas/Execution'
      required:
        - Execution
    Function:
      type: object
      additionalProperties: false
      properties:
        FunctionArn:
          type: string
        FunctionConfiguration:
          $ref: '#/components/schemas/FunctionConfiguration'
        Id:
          type: string
      required:
        - FunctionArn
        - FunctionConfiguration
        - Id
    Execution:
      type: object
      additionalProperties: false
      properties:
        IsolationMode:
          type: string
        RunAs:
          $ref: '#/components/schemas/RunAs'
    FunctionConfiguration:
      type: object
      additionalProperties: false
      properties:
        MemorySize:
          type: integer
        Pinned:
          type: boolean
        ExecArgs:
          type: string
        Timeout:
          type: integer
        EncodingType:
          type: string
        Environment:
          $ref: '#/components/schemas/Environment'
        Executable:
          type: string
    RunAs:
      type: object
      additionalProperties: false
      properties:
        Uid:
          type: integer
        Gid:
          type: integer
    Environment:
      type: object
      additionalProperties: false
      properties:
        Variables:
          type: object
        Execution:
          $ref: '#/components/schemas/Execution'
        ResourceAccessPolicies:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ResourceAccessPolicy'
        AccessSysfs:
          type: boolean
    ResourceAccessPolicy:
      type: object
      additionalProperties: false
      properties:
        ResourceId:
          type: string
        Permission:
          type: string
      required:
        - ResourceId
    FunctionDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/FunctionDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: function_definition
      x-stackql-primaryIdentifier:
        - Id
    GroupVersion:
      type: object
      properties:
        Id:
          type: string
        LoggerDefinitionVersionArn:
          type: string
        DeviceDefinitionVersionArn:
          type: string
        FunctionDefinitionVersionArn:
          type: string
        CoreDefinitionVersionArn:
          type: string
        ResourceDefinitionVersionArn:
          type: string
        ConnectorDefinitionVersionArn:
          type: string
        SubscriptionDefinitionVersionArn:
          type: string
        GroupId:
          type: string
      required:
        - GroupId
      x-stackql-resource-name: group_version
      x-stackql-primaryIdentifier:
        - Id
    Group:
      type: object
      properties:
        RoleAttachedAt:
          type: string
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        RoleArn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/GroupVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: group
      x-stackql-primaryIdentifier:
        - Id
    LoggerDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        LoggerDefinitionId:
          type: string
        Loggers:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Logger'
      required:
        - Loggers
        - LoggerDefinitionId
      x-stackql-resource-name: logger_definition_version
      x-stackql-primaryIdentifier:
        - Id
    Logger:
      type: object
      additionalProperties: false
      properties:
        Space:
          type: integer
        Type:
          type: string
        Level:
          type: string
        Id:
          type: string
        Component:
          type: string
      required:
        - Type
        - Level
        - Id
        - Component
    LoggerDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/LoggerDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: logger_definition
      x-stackql-primaryIdentifier:
        - Id
    SecretsManagerSecretResourceData:
      type: object
      additionalProperties: false
      properties:
        ARN:
          type: string
        AdditionalStagingLabelsToDownload:
          type: array
          uniqueItems: false
          items:
            type: string
      required:
        - ARN
    ResourceDataContainer:
      type: object
      additionalProperties: false
      properties:
        LocalVolumeResourceData:
          $ref: '#/components/schemas/LocalVolumeResourceData'
        LocalDeviceResourceData:
          $ref: '#/components/schemas/LocalDeviceResourceData'
        S3MachineLearningModelResourceData:
          $ref: '#/components/schemas/S3MachineLearningModelResourceData'
        SecretsManagerSecretResourceData:
          $ref: '#/components/schemas/SecretsManagerSecretResourceData'
        SageMakerMachineLearningModelResourceData:
          $ref: '#/components/schemas/SageMakerMachineLearningModelResourceData'
    SageMakerMachineLearningModelResourceData:
      type: object
      additionalProperties: false
      properties:
        OwnerSetting:
          $ref: '#/components/schemas/ResourceDownloadOwnerSetting'
        SageMakerJobArn:
          type: string
        DestinationPath:
          type: string
      required:
        - DestinationPath
        - SageMakerJobArn
    ResourceInstance:
      type: object
      additionalProperties: false
      properties:
        ResourceDataContainer:
          $ref: '#/components/schemas/ResourceDataContainer'
        Id:
          type: string
        Name:
          type: string
      required:
        - ResourceDataContainer
        - Id
        - Name
    LocalVolumeResourceData:
      type: object
      additionalProperties: false
      properties:
        SourcePath:
          type: string
        DestinationPath:
          type: string
        GroupOwnerSetting:
          $ref: '#/components/schemas/GroupOwnerSetting'
      required:
        - SourcePath
        - DestinationPath
    LocalDeviceResourceData:
      type: object
      additionalProperties: false
      properties:
        SourcePath:
          type: string
        GroupOwnerSetting:
          $ref: '#/components/schemas/GroupOwnerSetting'
      required:
        - SourcePath
    S3MachineLearningModelResourceData:
      type: object
      additionalProperties: false
      properties:
        OwnerSetting:
          $ref: '#/components/schemas/ResourceDownloadOwnerSetting'
        DestinationPath:
          type: string
        S3Uri:
          type: string
      required:
        - DestinationPath
        - S3Uri
    ResourceDownloadOwnerSetting:
      type: object
      additionalProperties: false
      properties:
        GroupPermission:
          type: string
        GroupOwner:
          type: string
      required:
        - GroupOwner
        - GroupPermission
    ResourceDefinitionVersion:
      type: object
      properties:
        ResourceDefinitionId:
          type: string
        Resources:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ResourceInstance'
        Id:
          type: string
      required:
        - Resources
        - ResourceDefinitionId
      x-stackql-resource-name: resource_definition_version
      x-stackql-primaryIdentifier:
        - Id
    GroupOwnerSetting:
      type: object
      additionalProperties: false
      properties:
        AutoAddGroupOwner:
          type: boolean
        GroupOwner:
          type: string
      required:
        - AutoAddGroupOwner
    ResourceDefinition:
      type: object
      properties:
        Id:
          type: string
        Arn:
          type: string
        LatestVersionArn:
          type: string
        Tags:
          type: object
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/ResourceDefinitionVersion'
      required:
        - Name
      x-stackql-resource-name: resource_definition
      x-stackql-primaryIdentifier:
        - Id
    SubscriptionDefinitionVersion:
      type: object
      properties:
        Id:
          type: string
        SubscriptionDefinitionId:
          type: string
        Subscriptions:
          type: array
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Subscription'
      required:
        - SubscriptionDefinitionId
        - Subscriptions
      x-stackql-resource-name: subscription_definition_version
      x-stackql-primaryIdentifier:
        - Id
    Subscription:
      type: object
      additionalProperties: false
      properties:
        Target:
          type: string
        Id:
          type: string
        Source:
          type: string
        Subject:
          type: string
      required:
        - Target
        - Id
        - Source
        - Subject
    SubscriptionDefinition:
      type: object
      properties:
        LatestVersionArn:
          type: string
        Id:
          type: string
        Arn:
          type: string
        Name:
          type: string
        InitialVersion:
          $ref: '#/components/schemas/SubscriptionDefinitionVersion'
        Tags:
          type: object
      required:
        - Name
      x-stackql-resource-name: subscription_definition
      x-stackql-primaryIdentifier:
        - Id
  x-stackQL-resources:
    connector_definition_versions:
      name: connector_definition_versions
      id: aws.greengrass.connector_definition_versions
      x-cfn-schema-name: ConnectorDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ConnectorDefinitionVersion'
    connector_definition_version:
      name: connector_definition_version
      id: aws.greengrass.connector_definition_version
      x-cfn-schema-name: ConnectorDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Connectors') as connectors,
              JSON_EXTRACT(Properties, '$.ConnectorDefinitionId') as connector_definition_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::ConnectorDefinitionVersion'
    connector_definitions:
      name: connector_definitions
      id: aws.greengrass.connector_definitions
      x-cfn-schema-name: ConnectorDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ConnectorDefinition'
    connector_definition:
      name: connector_definition
      id: aws.greengrass.connector_definition
      x-cfn-schema-name: ConnectorDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Connectors') as initial_version_connectors,
              JSON_EXTRACT(Properties, '$.InitialVersion.ConnectorDefinitionId') as initial_version_connector_definition_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::ConnectorDefinition'
    core_definition_versions:
      name: core_definition_versions
      id: aws.greengrass.core_definition_versions
      x-cfn-schema-name: CoreDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::CoreDefinitionVersion'
    core_definition_version:
      name: core_definition_version
      id: aws.greengrass.core_definition_version
      x-cfn-schema-name: CoreDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Cores') as cores,
              JSON_EXTRACT(Properties, '$.CoreDefinitionId') as core_definition_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::CoreDefinitionVersion'
    core_definitions:
      name: core_definitions
      id: aws.greengrass.core_definitions
      x-cfn-schema-name: CoreDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::CoreDefinition'
    core_definition:
      name: core_definition
      id: aws.greengrass.core_definition
      x-cfn-schema-name: CoreDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Cores') as initial_version_cores,
              JSON_EXTRACT(Properties, '$.InitialVersion.CoreDefinitionId') as initial_version_core_definition_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::CoreDefinition'
    device_definition_versions:
      name: device_definition_versions
      id: aws.greengrass.device_definition_versions
      x-cfn-schema-name: DeviceDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::DeviceDefinitionVersion'
    device_definition_version:
      name: device_definition_version
      id: aws.greengrass.device_definition_version
      x-cfn-schema-name: DeviceDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DeviceDefinitionId') as device_definition_id,
              JSON_EXTRACT(Properties, '$.Devices') as devices
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::DeviceDefinitionVersion'
    device_definitions:
      name: device_definitions
      id: aws.greengrass.device_definitions
      x-cfn-schema-name: DeviceDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::DeviceDefinition'
    device_definition:
      name: device_definition
      id: aws.greengrass.device_definition
      x-cfn-schema-name: DeviceDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.DeviceDefinitionId') as initial_version_device_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Devices') as initial_version_devices,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::DeviceDefinition'
    function_definition_versions:
      name: function_definition_versions
      id: aws.greengrass.function_definition_versions
      x-cfn-schema-name: FunctionDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::FunctionDefinitionVersion'
    function_definition_version:
      name: function_definition_version
      id: aws.greengrass.function_definition_version
      x-cfn-schema-name: FunctionDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.DefaultConfig.Execution') as default_config_execution,
              JSON_EXTRACT(Properties, '$.Functions') as functions,
              JSON_EXTRACT(Properties, '$.FunctionDefinitionId') as function_definition_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::FunctionDefinitionVersion'
    function_definitions:
      name: function_definitions
      id: aws.greengrass.function_definitions
      x-cfn-schema-name: FunctionDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::FunctionDefinition'
    function_definition:
      name: function_definition
      id: aws.greengrass.function_definition
      x-cfn-schema-name: FunctionDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.DefaultConfig') as initial_version_default_config,
              JSON_EXTRACT(Properties, '$.InitialVersion.Functions') as initial_version_functions,
              JSON_EXTRACT(Properties, '$.InitialVersion.FunctionDefinitionId') as initial_version_function_definition_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::FunctionDefinition'
    group_versions:
      name: group_versions
      id: aws.greengrass.group_versions
      x-cfn-schema-name: GroupVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::GroupVersion'
    group_version:
      name: group_version
      id: aws.greengrass.group_version
      x-cfn-schema-name: GroupVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LoggerDefinitionVersionArn') as logger_definition_version_arn,
              JSON_EXTRACT(Properties, '$.DeviceDefinitionVersionArn') as device_definition_version_arn,
              JSON_EXTRACT(Properties, '$.FunctionDefinitionVersionArn') as function_definition_version_arn,
              JSON_EXTRACT(Properties, '$.CoreDefinitionVersionArn') as core_definition_version_arn,
              JSON_EXTRACT(Properties, '$.ResourceDefinitionVersionArn') as resource_definition_version_arn,
              JSON_EXTRACT(Properties, '$.ConnectorDefinitionVersionArn') as connector_definition_version_arn,
              JSON_EXTRACT(Properties, '$.SubscriptionDefinitionVersionArn') as subscription_definition_version_arn,
              JSON_EXTRACT(Properties, '$.GroupId') as group_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::GroupVersion'
    groups:
      name: groups
      id: aws.greengrass.groups
      x-cfn-schema-name: Group
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::Group'
    group:
      name: group
      id: aws.greengrass.group
      x-cfn-schema-name: Group
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RoleAttachedAt') as role_attached_at,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.LoggerDefinitionVersionArn') as initial_version_logger_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.DeviceDefinitionVersionArn') as initial_version_device_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.FunctionDefinitionVersionArn') as initial_version_function_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.CoreDefinitionVersionArn') as initial_version_core_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.ResourceDefinitionVersionArn') as initial_version_resource_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.ConnectorDefinitionVersionArn') as initial_version_connector_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.SubscriptionDefinitionVersionArn') as initial_version_subscription_definition_version_arn,
              JSON_EXTRACT(Properties, '$.InitialVersion.GroupId') as initial_version_group_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::Group'
    logger_definition_versions:
      name: logger_definition_versions
      id: aws.greengrass.logger_definition_versions
      x-cfn-schema-name: LoggerDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::LoggerDefinitionVersion'
    logger_definition_version:
      name: logger_definition_version
      id: aws.greengrass.logger_definition_version
      x-cfn-schema-name: LoggerDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.LoggerDefinitionId') as logger_definition_id,
              JSON_EXTRACT(Properties, '$.Loggers') as loggers
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::LoggerDefinitionVersion'
    logger_definitions:
      name: logger_definitions
      id: aws.greengrass.logger_definitions
      x-cfn-schema-name: LoggerDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::LoggerDefinition'
    logger_definition:
      name: logger_definition
      id: aws.greengrass.logger_definition
      x-cfn-schema-name: LoggerDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.LoggerDefinitionId') as initial_version_logger_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Loggers') as initial_version_loggers,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::LoggerDefinition'
    resource_definition_versions:
      name: resource_definition_versions
      id: aws.greengrass.resource_definition_versions
      x-cfn-schema-name: ResourceDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ResourceDefinitionVersion'
    resource_definition_version:
      name: resource_definition_version
      id: aws.greengrass.resource_definition_version
      x-cfn-schema-name: ResourceDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceDefinitionId') as resource_definition_id,
              JSON_EXTRACT(Properties, '$.Resources') as resources,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::ResourceDefinitionVersion'
    resource_definitions:
      name: resource_definitions
      id: aws.greengrass.resource_definitions
      x-cfn-schema-name: ResourceDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::ResourceDefinition'
    resource_definition:
      name: resource_definition
      id: aws.greengrass.resource_definition
      x-cfn-schema-name: ResourceDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.ResourceDefinitionId') as initial_version_resource_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Resources') as initial_version_resources,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::ResourceDefinition'
    subscription_definition_versions:
      name: subscription_definition_versions
      id: aws.greengrass.subscription_definition_versions
      x-cfn-schema-name: SubscriptionDefinitionVersion
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::SubscriptionDefinitionVersion'
    subscription_definition_version:
      name: subscription_definition_version
      id: aws.greengrass.subscription_definition_version
      x-cfn-schema-name: SubscriptionDefinitionVersion
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.SubscriptionDefinitionId') as subscription_definition_id,
              JSON_EXTRACT(Properties, '$.Subscriptions') as subscriptions
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::SubscriptionDefinitionVersion'
    subscription_definitions:
      name: subscription_definitions
      id: aws.greengrass.subscription_definitions
      x-cfn-schema-name: SubscriptionDefinition
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Greengrass::SubscriptionDefinition'
    subscription_definition:
      name: subscription_definition
      id: aws.greengrass.subscription_definition
      x-cfn-schema-name: SubscriptionDefinition
      x-type: get
      x-identifiers:
        - Id
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.LatestVersionArn') as latest_version_arn,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.InitialVersion.Id') as initial_version_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.SubscriptionDefinitionId') as initial_version_subscription_definition_id,
              JSON_EXTRACT(Properties, '$.InitialVersion.Subscriptions') as initial_version_subscriptions,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Greengrass::SubscriptionDefinition'
