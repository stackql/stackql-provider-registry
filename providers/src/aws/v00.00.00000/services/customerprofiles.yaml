openapi: 3.0.0
info:
  title: CustomerProfiles
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    DomainName:
      description: The unique name of the domain.
      type: string
      pattern: ^[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 64
    CalculatedAttributeName:
      description: The unique name of the calculated attribute.
      type: string
      pattern: ^[a-zA-Z_][a-zA-Z_0-9-]*$
      minLength: 1
      maxLength: 255
    DisplayName:
      description: The display name of the calculated attribute.
      type: string
      pattern: ^[a-zA-Z_][a-zA-Z_0-9-\s]*$
      minLength: 1
      maxLength: 255
    Description:
      description: The description of the calculated attribute.
      type: string
      minLength: 1
      maxLength: 1000
    AttributeName:
      description: The name of an attribute defined in a profile object type.
      type: string
      pattern: ^[a-zA-Z0-9_.-]+$
      minLength: 1
      maxLength: 64
    AttributeItem:
      description: The details of a single attribute item specified in the mathematical expression.
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/AttributeName'
      required:
        - Name
      additionalProperties: false
    AttributeList:
      description: A list of attribute items specified in the mathematical expression.
      type: array
      items:
        $ref: '#/components/schemas/AttributeItem'
      x-insertionOrder: false
      uniqueItems: true
      minItems: 1
      maxItems: 2
    Expression:
      description: Mathematical expression that is performed on attribute items provided in the attribute list. Each element in the expression should follow the structure of "{ObjectTypeName.AttributeName}".
      type: string
      minLength: 1
      maxLength: 255
    AttributeDetails:
      description: Mathematical expression and a list of attribute items specified in that expression.
      type: object
      properties:
        Attributes:
          $ref: '#/components/schemas/AttributeList'
        Expression:
          $ref: '#/components/schemas/Expression'
      required:
        - Attributes
        - Expression
      additionalProperties: false
    RangeUnit:
      description: The unit of time.
      type: string
      enum:
        - DAYS
    RangeValue:
      description: The amount of time of the specified unit.
      type: integer
      minimum: 1
      maximum: 366
    Range:
      description: The relative time period over which data is included in the aggregation.
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/RangeValue'
        Unit:
          $ref: '#/components/schemas/RangeUnit'
      required:
        - Value
        - Unit
      additionalProperties: false
    ObjectCount:
      description: The number of profile objects used for the calculated attribute.
      type: integer
      minimum: 1
      maximum: 100
    ThresholdValue:
      description: The value of the threshold.
      type: string
      minLength: 1
      maxLength: 255
    ThresholdOperator:
      description: The operator of the threshold.
      type: string
      enum:
        - EQUAL_TO
        - GREATER_THAN
        - LESS_THAN
        - NOT_EQUAL_TO
    Threshold:
      description: The threshold for the calculated attribute.
      type: object
      properties:
        Value:
          $ref: '#/components/schemas/ThresholdValue'
        Operator:
          $ref: '#/components/schemas/ThresholdOperator'
      required:
        - Value
        - Operator
      additionalProperties: false
    Conditions:
      description: The conditions including range, object count, and threshold for the calculated attribute.
      type: object
      properties:
        Range:
          $ref: '#/components/schemas/Range'
        ObjectCount:
          $ref: '#/components/schemas/ObjectCount'
        Threshold:
          $ref: '#/components/schemas/Threshold'
      additionalProperties: false
    Statistic:
      description: The aggregation operation to perform for the calculated attribute.
      type: string
      enum:
        - FIRST_OCCURRENCE
        - LAST_OCCURRENCE
        - COUNT
        - SUM
        - MINIMUM
        - MAXIMUM
        - AVERAGE
        - MAX_OCCURRENCE
    Tag:
      type: object
      properties:
        Key:
          type: string
          pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
          minLength: 1
          maxLength: 128
        Value:
          type: string
          minLength: 0
          maxLength: 256
      additionalProperties: false
      required:
        - Key
        - Value
    Tags:
      description: An array of key-value pairs to apply to this resource.
      type: array
      uniqueItems: true
      x-insertionOrder: false
      items:
        $ref: '#/components/schemas/Tag'
      minItems: 0
      maxItems: 50
    CalculatedAttributeDefinition:
      type: object
      properties:
        DomainName:
          $ref: '#/components/schemas/DomainName'
        CalculatedAttributeName:
          $ref: '#/components/schemas/CalculatedAttributeName'
        DisplayName:
          $ref: '#/components/schemas/DisplayName'
        Description:
          $ref: '#/components/schemas/Description'
        AttributeDetails:
          $ref: '#/components/schemas/AttributeDetails'
        Conditions:
          $ref: '#/components/schemas/Conditions'
        Statistic:
          $ref: '#/components/schemas/Statistic'
        CreatedAt:
          description: The timestamp of when the calculated attribute definition was created.
          type: string
        LastUpdatedAt:
          description: The timestamp of when the calculated attribute definition was most recently edited.
          type: string
        Tags:
          $ref: '#/components/schemas/Tags'
      required:
        - DomainName
        - CalculatedAttributeName
        - AttributeDetails
        - Statistic
      x-stackql-resource-name: calculated_attribute_definition
      description: A calculated attribute definition for Customer Profiles
      x-type-name: AWS::CustomerProfiles::CalculatedAttributeDefinition
      x-stackql-primary-identifier:
        - DomainName
        - CalculatedAttributeName
      x-create-only-properties:
        - DomainName
        - CalculatedAttributeName
      x-read-only-properties:
        - CreatedAt
        - LastUpdatedAt
      x-required-properties:
        - DomainName
        - CalculatedAttributeName
        - AttributeDetails
        - Statistic
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - profile:CreateCalculatedAttributeDefinition
          - profile:TagResource
        read:
          - profile:GetCalculatedAttributeDefinition
        update:
          - profile:GetCalculatedAttributeDefinition
          - profile:UpdateCalculatedAttributeDefinition
          - profile:UntagResource
          - profile:TagResource
        delete:
          - profile:DeleteCalculatedAttributeDefinition
        list:
          - profile:ListCalculatedAttributeDefinitions
    DomainStats:
      type: object
      description: Usage-specific statistics about the domain.
      properties:
        MeteringProfileCount:
          description: The number of profiles that you are currently paying for in the domain. If you have more than 100 objects associated with a single profile, that profile counts as two profiles. If you have more than 200 objects, that profile counts as three, and so on.
          type: number
        ObjectCount:
          description: The total number of objects in domain.
          type: number
        ProfileCount:
          description: The total number of profiles currently in the domain.
          type: number
        TotalSize:
          description: The total size, in bytes, of all objects in the domain.
          type: number
      additionalProperties: false
    S3ExportingConfig:
      type: object
      description: The S3 location where Identity Resolution Jobs write result files.
      properties:
        S3BucketName:
          description: The name of the S3 bucket where Identity Resolution Jobs write result files.
          type: string
          minLength: 3
          maxLength: 63
          pattern: ^[a-z0-9.-]+$
        S3KeyName:
          description: The S3 key name of the location where Identity Resolution Jobs write result files.
          type: string
          minLength: 1
          maxLength: 800
          pattern: .*
      required:
        - S3BucketName
      additionalProperties: false
    ExportingConfig:
      type: object
      description: Configuration information for exporting Identity Resolution results, for example, to an S3 bucket.
      properties:
        S3Exporting:
          $ref: '#/components/schemas/S3ExportingConfig'
      additionalProperties: false
    JobSchedule:
      type: object
      description: The day and time when do you want to start the Identity Resolution Job every week.
      properties:
        DayOfTheWeek:
          description: The day when the Identity Resolution Job should run every week.
          type: string
          enum:
            - SUNDAY
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
        Time:
          description: The time when the Identity Resolution Job should run every week.
          type: string
          minLength: 3
          maxLength: 5
          pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
      required:
        - DayOfTheWeek
        - Time
      additionalProperties: false
    ConflictResolution:
      type: object
      description: 'How the auto-merging process should resolve conflicts between different profiles. For example, if Profile A and Profile B have the same FirstName and LastName (and that is the matching criteria), which EmailAddress should be used? '
      properties:
        ConflictResolvingModel:
          description: How the auto-merging process should resolve conflicts between different profiles.
          type: string
          enum:
            - RECENCY
            - SOURCE
        SourceName:
          description: The ObjectType name that is used to resolve profile merging conflicts when choosing SOURCE as the ConflictResolvingModel.
          type: string
          minLength: 1
          maxLength: 255
      required:
        - ConflictResolvingModel
      additionalProperties: false
    MatchingAttributes:
      type: array
      minItems: 1
      maxItems: 20
      items:
        type: string
        minLength: 1
        maxLength: 255
    Consolidation:
      description: A list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged.
      type: object
      properties:
        MatchingAttributesList:
          description: A list of matching criteria.
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/MatchingAttributes'
      required:
        - MatchingAttributesList
      additionalProperties: false
    AutoMerging:
      type: object
      description: Configuration information about the auto-merging process.
      properties:
        Enabled:
          description: The flag that enables the auto-merging of duplicate profiles.
          type: boolean
        ConflictResolution:
          $ref: '#/components/schemas/ConflictResolution'
        Consolidation:
          $ref: '#/components/schemas/Consolidation'
        MinAllowedConfidenceScoreForMerging:
          description: A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles.
          type: number
          minimum: 0
          maximum: 1
      required:
        - Enabled
      additionalProperties: false
    MatchingRuleAttributeList:
      description: A single rule level of the MatchRules. Configures how the rule-based matching process should match profiles.
      type: array
      minItems: 1
      maxItems: 15
      items:
        type: string
        minLength: 1
        maxLength: 255
    MatchingRule:
      description: Specifies how does the rule-based matching process should match profiles.
      type: object
      properties:
        Rule:
          $ref: '#/components/schemas/MatchingRuleAttributeList'
      required:
        - Rule
      additionalProperties: false
    AttributeTypesSelector:
      description: Configures information about the AttributeTypesSelector where the rule-based identity resolution uses to match profiles.
      type: object
      properties:
        AttributeMatchingModel:
          description: Configures the AttributeMatchingModel, you can either choose ONE_TO_ONE or MANY_TO_MANY.
          type: string
          enum:
            - ONE_TO_ONE
            - MANY_TO_MANY
        Address:
          description: The Address type. You can choose from Address, BusinessAddress, MaillingAddress, and ShippingAddress. You only can use the Address type in the MatchingRule. For example, if you want to match profile based on BusinessAddress.City or MaillingAddress.City, you need to choose the BusinessAddress and the MaillingAddress to represent the Address type and specify the Address.City on the matching rule.
          type: array
          minItems: 1
          maxItems: 4
          items:
            type: string
            minLength: 1
            maxLength: 255
        EmailAddress:
          description: The Email type. You can choose from EmailAddress, BusinessEmailAddress and PersonalEmailAddress. You only can use the EmailAddress type in the MatchingRule. For example, if you want to match profile based on PersonalEmailAddress or BusinessEmailAddress, you need to choose the PersonalEmailAddress and the BusinessEmailAddress to represent the EmailAddress type and only specify the EmailAddress on the matching rule.
          type: array
          minItems: 1
          maxItems: 3
          items:
            type: string
            minLength: 1
            maxLength: 255
        PhoneNumber:
          description: The PhoneNumber type. You can choose from PhoneNumber, HomePhoneNumber, and MobilePhoneNumber. You only can use the PhoneNumber type in the MatchingRule. For example, if you want to match a profile based on Phone or HomePhone, you need to choose the Phone and the HomePhone to represent the PhoneNumber type and only specify the PhoneNumber on the matching rule.
          type: array
          minItems: 1
          maxItems: 4
          items:
            type: string
            minLength: 1
            maxLength: 255
      required:
        - AttributeMatchingModel
      additionalProperties: false
    Matching:
      description: >-
        The process of matching duplicate profiles. If Matching = true, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. After the Identity Resolution Job completes, use the GetMatches API to return and review the results. Or, if you have configured ExportingConfig in the
        MatchingRequest, you can download the results from S3.
      type: object
      properties:
        Enabled:
          description: The flag that enables the matching process of duplicate profiles.
          type: boolean
        AutoMerging:
          $ref: '#/components/schemas/AutoMerging'
        ExportingConfig:
          $ref: '#/components/schemas/ExportingConfig'
        JobSchedule:
          $ref: '#/components/schemas/JobSchedule'
      required:
        - Enabled
      additionalProperties: false
    RuleBasedMatching:
      description: The process of matching duplicate profiles using the Rule-Based matching. If RuleBasedMatching = true, Amazon Connect Customer Profiles will start to match and merge your profiles according to your configuration in the RuleBasedMatchingRequest. You can use the ListRuleBasedMatches and GetSimilarProfiles API to return and review the results. Also, if you have configured ExportingConfig in the RuleBasedMatchingRequest, you can download the results from S3.
      type: object
      properties:
        Enabled:
          description: The flag that enables the rule-based matching process of duplicate profiles.
          type: boolean
        AttributeTypesSelector:
          $ref: '#/components/schemas/AttributeTypesSelector'
        ConflictResolution:
          $ref: '#/components/schemas/ConflictResolution'
        ExportingConfig:
          $ref: '#/components/schemas/ExportingConfig'
        MatchingRules:
          description: Configures how the rule-based matching process should match profiles. You can have up to 15 MatchingRule in the MatchingRules.
          type: array
          minItems: 1
          maxItems: 15
          items:
            $ref: '#/components/schemas/MatchingRule'
        MaxAllowedRuleLevelForMatching:
          description: Indicates the maximum allowed rule level for matching.
          type: integer
          minimum: 1
          maximum: 15
        MaxAllowedRuleLevelForMerging:
          description: Indicates the maximum allowed rule level for merging.
          type: integer
          minimum: 1
          maximum: 15
        Status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - ACTIVE
      required:
        - Enabled
      additionalProperties: false
    Domain:
      type: object
      properties:
        DomainName:
          description: The unique name of the domain.
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
        DeadLetterQueueUrl:
          description: The URL of the SQS dead letter queue
          type: string
          minLength: 0
          maxLength: 255
        DefaultEncryptionKey:
          description: The default encryption key
          type: string
          minLength: 0
          maxLength: 255
        DefaultExpirationDays:
          description: The default number of days until the data within the domain expires.
          type: integer
          minimum: 1
          maximum: 1098
        Matching:
          $ref: '#/components/schemas/Matching'
        RuleBasedMatching:
          $ref: '#/components/schemas/RuleBasedMatching'
        Stats:
          $ref: '#/components/schemas/DomainStats'
        Tags:
          description: The tags (keys and values) associated with the domain
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        CreatedAt:
          description: The time of this integration got created
          type: string
        LastUpdatedAt:
          description: The time of this integration got last updated at
          type: string
      required:
        - DomainName
        - DefaultExpirationDays
      x-stackql-resource-name: domain
      description: A domain defined for 3rd party data source in Profile Service
      x-type-name: AWS::CustomerProfiles::Domain
      x-stackql-primary-identifier:
        - DomainName
      x-create-only-properties:
        - DomainName
      x-read-only-properties:
        - LastUpdatedAt
        - CreatedAt
        - RuleBasedMatching/Status
        - Stats
      x-required-properties:
        - DomainName
        - DefaultExpirationDays
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - profile:CreateDomain
          - profile:TagResource
        read:
          - profile:GetDomain
        update:
          - profile:GetDomain
          - profile:UpdateDomain
          - profile:UntagResource
          - profile:TagResource
        delete:
          - profile:DeleteDomain
        list:
          - profile:ListDomains
    Uri:
      description: The StreamARN of the destination to deliver profile events to. For example, arn:aws:kinesis:region:account-id:stream/stream-name
      type: string
      minLength: 1
      maxLength: 255
    Status:
      description: The status of enabling the Kinesis stream as a destination for export.
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
    EventStream:
      type: object
      properties:
        DomainName:
          description: The unique name of the domain.
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
        EventStreamName:
          description: The name of the event stream.
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 255
        Uri:
          $ref: '#/components/schemas/Uri'
        EventStreamArn:
          description: A unique identifier for the event stream.
          type: string
          minLength: 1
          maxLength: 255
        Tags:
          description: The tags used to organize, track, or control access for this resource.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        CreatedAt:
          description: The timestamp of when the export was created.
          type: string
        State:
          description: The operational state of destination stream for export.
          type: string
          enum:
            - RUNNING
            - STOPPED
        DestinationDetails:
          description: Details regarding the Kinesis stream.
          type: object
          properties:
            Uri:
              $ref: '#/components/schemas/Uri'
            Status:
              $ref: '#/components/schemas/Status'
          required:
            - Uri
            - Status
          additionalProperties: false
      required:
        - DomainName
        - EventStreamName
        - Uri
      x-stackql-resource-name: event_stream
      description: An Event Stream resource of Amazon Connect Customer Profiles
      x-type-name: AWS::CustomerProfiles::EventStream
      x-stackql-primary-identifier:
        - DomainName
        - EventStreamName
      x-create-only-properties:
        - DomainName
        - EventStreamName
        - Uri
      x-read-only-properties:
        - DestinationDetails
        - CreatedAt
        - State
        - EventStreamArn
      x-required-properties:
        - DomainName
        - EventStreamName
        - Uri
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - profile:CreateEventStream
          - iam:PutRolePolicy
          - kinesis:DescribeStreamSummary
          - profile:TagResource
        read:
          - profile:GetEventStream
          - kinesis:DescribeStreamSummary
        update:
          - kinesis:DescribeStreamSummary
          - profile:GetEventStream
          - profile:UntagResource
          - profile:TagResource
        delete:
          - profile:DeleteEventStream
          - iam:DeleteRolePolicy
        list:
          - profile:ListEventStreams
    Object:
      type: string
      maxLength: 512
      pattern: \S+
      additionalProperties: false
    MarketoSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    S3SourceProperties:
      type: object
      properties:
        BucketName:
          type: string
          minLength: 3
          maxLength: 63
          pattern: \S+
        BucketPrefix:
          type: string
          maxLength: 512
          pattern: .*
      required:
        - BucketName
      additionalProperties: false
    SalesforceSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
        EnableDynamicFieldUpdate:
          type: boolean
        IncludeDeletedRecords:
          type: boolean
      required:
        - Object
      additionalProperties: false
    ServiceNowSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    ZendeskSourceProperties:
      type: object
      properties:
        Object:
          $ref: '#/components/schemas/Object'
      required:
        - Object
      additionalProperties: false
    SourceConnectorProperties:
      type: object
      properties:
        Marketo:
          $ref: '#/components/schemas/MarketoSourceProperties'
        S3:
          $ref: '#/components/schemas/S3SourceProperties'
        Salesforce:
          $ref: '#/components/schemas/SalesforceSourceProperties'
        ServiceNow:
          $ref: '#/components/schemas/ServiceNowSourceProperties'
        Zendesk:
          $ref: '#/components/schemas/ZendeskSourceProperties'
      additionalProperties: false
    ConnectorType:
      type: string
      enum:
        - Salesforce
        - Marketo
        - ServiceNow
        - Zendesk
        - S3
    IncrementalPullConfig:
      type: object
      properties:
        DatetimeTypeFieldName:
          type: string
          maxLength: 256
      additionalProperties: false
    SourceFlowConfig:
      type: object
      properties:
        ConnectorType:
          $ref: '#/components/schemas/ConnectorType'
        ConnectorProfileName:
          type: string
          maxLength: 256
          pattern: '[\w/!@#+=.-]+'
        IncrementalPullConfig:
          $ref: '#/components/schemas/IncrementalPullConfig'
        SourceConnectorProperties:
          $ref: '#/components/schemas/SourceConnectorProperties'
      required:
        - ConnectorType
        - SourceConnectorProperties
      additionalProperties: false
    ConnectorOperator:
      type: object
      properties:
        Marketo:
          $ref: '#/components/schemas/MarketoConnectorOperator'
        S3:
          $ref: '#/components/schemas/S3ConnectorOperator'
        Salesforce:
          $ref: '#/components/schemas/SalesforceConnectorOperator'
        ServiceNow:
          $ref: '#/components/schemas/ServiceNowConnectorOperator'
        Zendesk:
          $ref: '#/components/schemas/ZendeskConnectorOperator'
      additionalProperties: false
    Operator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    MarketoConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    S3ConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    SalesforceConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    ServiceNowConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - LESS_THAN
        - GREATER_THAN
        - CONTAINS
        - BETWEEN
        - LESS_THAN_OR_EQUAL_TO
        - GREATER_THAN_OR_EQUAL_TO
        - EQUAL_TO
        - NOT_EQUAL_TO
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    ZendeskConnectorOperator:
      type: string
      enum:
        - PROJECTION
        - GREATER_THAN
        - ADDITION
        - MULTIPLICATION
        - DIVISION
        - SUBTRACTION
        - MASK_ALL
        - MASK_FIRST_N
        - MASK_LAST_N
        - VALIDATE_NON_NULL
        - VALIDATE_NON_ZERO
        - VALIDATE_NON_NEGATIVE
        - VALIDATE_NUMERIC
        - NO_OP
    OperatorPropertiesKeys:
      type: string
      enum:
        - VALUE
        - VALUES
        - DATA_TYPE
        - UPPER_BOUND
        - LOWER_BOUND
        - SOURCE_DATA_TYPE
        - DESTINATION_DATA_TYPE
        - VALIDATION_ACTION
        - MASK_VALUE
        - MASK_LENGTH
        - TRUNCATE_LENGTH
        - MATH_OPERATION_FIELDS_ORDER
        - CONCAT_FORMAT
        - SUBFIELD_CATEGORY_MAP
    DestinationField:
      type: string
      maxLength: 256
      pattern: .*
    TaskType:
      type: string
      enum:
        - Arithmetic
        - Filter
        - Map
        - Mask
        - Merge
        - Truncate
        - Validate
    TaskPropertiesMap:
      type: object
      properties:
        OperatorPropertyKey:
          $ref: '#/components/schemas/OperatorPropertiesKeys'
        Property:
          type: string
          maxLength: 2048
          pattern: .+
      required:
        - OperatorPropertyKey
        - Property
      additionalProperties: false
    Task:
      type: object
      properties:
        ConnectorOperator:
          $ref: '#/components/schemas/ConnectorOperator'
        SourceFields:
          type: array
          items:
            type: string
            maxLength: 2048
            pattern: .*
        DestinationField:
          $ref: '#/components/schemas/DestinationField'
        TaskType:
          $ref: '#/components/schemas/TaskType'
        TaskProperties:
          type: array
          items:
            $ref: '#/components/schemas/TaskPropertiesMap'
      required:
        - SourceFields
        - TaskType
      additionalProperties: false
    TriggerType:
      type: string
      enum:
        - Scheduled
        - Event
        - OnDemand
    Date:
      type: number
    ScheduledTriggerProperties:
      type: object
      properties:
        ScheduleExpression:
          type: string
          maxLength: 256
          pattern: .*
        DataPullMode:
          type: string
          enum:
            - Incremental
            - Complete
        ScheduleStartTime:
          $ref: '#/components/schemas/Date'
        ScheduleEndTime:
          $ref: '#/components/schemas/Date'
        Timezone:
          type: string
          maxLength: 256
          pattern: .*
        ScheduleOffset:
          type: integer
          minimum: 0
          maximum: 36000
        FirstExecutionFrom:
          $ref: '#/components/schemas/Date'
      required:
        - ScheduleExpression
      additionalProperties: false
    TriggerProperties:
      type: object
      properties:
        Scheduled:
          $ref: '#/components/schemas/ScheduledTriggerProperties'
      additionalProperties: false
    TriggerConfig:
      type: object
      properties:
        TriggerType:
          $ref: '#/components/schemas/TriggerType'
        TriggerProperties:
          $ref: '#/components/schemas/TriggerProperties'
      required:
        - TriggerType
      additionalProperties: false
    FlowDefinition:
      type: object
      properties:
        FlowName:
          type: string
          pattern: '[a-zA-Z0-9][\w!@#.-]+'
          maxLength: 256
        Description:
          type: string
          pattern: '[\w!@#\-.?,\s]*'
          maxLength: 2048
        KmsArn:
          type: string
          pattern: arn:aws:kms:.*:[0-9]+:.*
          minLength: 20
          maxLength: 2048
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        TriggerConfig:
          $ref: '#/components/schemas/TriggerConfig'
        SourceFlowConfig:
          $ref: '#/components/schemas/SourceFlowConfig'
      required:
        - FlowName
        - KmsArn
        - Tasks
        - TriggerConfig
        - SourceFlowConfig
      additionalProperties: false
    ObjectTypeMapping:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 255
        Value:
          type: string
          pattern: ^[a-zA-Z_][a-zA-Z_0-9-]*$
          minLength: 1
          maxLength: 255
      additionalProperties: false
      required:
        - Key
        - Value
    Integration:
      type: object
      properties:
        DomainName:
          description: The unique name of the domain.
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
        Uri:
          description: The URI of the S3 bucket or any other type of data source.
          type: string
          minLength: 1
          maxLength: 255
        FlowDefinition:
          $ref: '#/components/schemas/FlowDefinition'
        ObjectTypeName:
          description: The name of the ObjectType defined for the 3rd party data in Profile Service
          type: string
          pattern: ^[a-zA-Z_][a-zA-Z_0-9-]*$
          minLength: 1
          maxLength: 255
        CreatedAt:
          description: The time of this integration got created
          type: string
        LastUpdatedAt:
          description: The time of this integration got last updated at
          type: string
        Tags:
          description: The tags (keys and values) associated with the integration
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        ObjectTypeNames:
          description: The mapping between 3rd party event types and ObjectType names
          type: array
          items:
            $ref: '#/components/schemas/ObjectTypeMapping'
      required:
        - DomainName
      x-stackql-resource-name: integration
      description: The resource schema for creating an Amazon Connect Customer Profiles Integration.
      x-type-name: AWS::CustomerProfiles::Integration
      x-stackql-primary-identifier:
        - DomainName
        - Uri
      x-create-only-properties:
        - DomainName
        - Uri
      x-write-only-properties:
        - FlowDefinition
      x-read-only-properties:
        - LastUpdatedAt
        - CreatedAt
      x-required-properties:
        - DomainName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - profile:GetIntegration
          - profile:PutIntegration
          - appflow:CreateFlow
          - app-integrations:CreateEventIntegrationAssociation
          - app-integrations:GetEventIntegration
          - events:ListTargetsByRule
          - events:PutRule
          - events:PutTargets
          - events:PutEvents
          - profile:TagResource
        read:
          - profile:GetIntegration
        delete:
          - profile:DeleteIntegration
          - appflow:DeleteFlow
          - app-integrations:ListEventIntegrationAssociations
          - app-integrations:DeleteEventIntegrationAssociation
          - events:RemoveTargets
          - events:ListTargetsByRule
          - events:DeleteRule
        update:
          - profile:PutIntegration
          - profile:GetIntegration
          - appflow:CreateFlow
          - app-integrations:GetEventIntegration
          - app-integrations:CreateEventIntegrationAssociation
          - app-integrations:ListEventIntegrationAssociations
          - app-integrations:DeleteEventIntegrationAssociation
          - events:ListTargetsByRule
          - events:RemoveTargets
          - events:DeleteRule
          - events:PutRule
          - events:PutTargets
          - events:PutEvents
          - profile:UntagResource
          - profile:TagResource
        list:
          - profile:ListIntegrations
    FieldMap:
      type: object
      properties:
        Name:
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
        ObjectTypeField:
          $ref: '#/components/schemas/ObjectTypeField'
      additionalProperties: false
    ObjectTypeField:
      description: Represents a field in a ProfileObjectType.
      type: object
      properties:
        Source:
          description: 'A field of a ProfileObject. For example: _source.FirstName, where "_source" is a ProfileObjectType of a Zendesk user and "FirstName" is a field in that ObjectType.'
          type: string
          minLength: 1
          maxLength: 1000
        Target:
          description: 'The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.'
          type: string
          minLength: 1
          maxLength: 1000
        ContentType:
          description: The content type of the field. Used for determining equality when searching.
          type: string
          enum:
            - STRING
            - NUMBER
            - PHONE_NUMBER
            - EMAIL_ADDRESS
            - NAME
      additionalProperties: false
    KeyMap:
      type: object
      properties:
        Name:
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
        ObjectTypeKeyList:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/ObjectTypeKey'
      additionalProperties: false
    ObjectTypeKey:
      description: An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.
      type: object
      properties:
        FieldNames:
          description: 'The reference for the key name of the fields map. '
          type: array
          items:
            type: string
            pattern: ^[a-zA-Z0-9_-]+$
            minLength: 1
            maxLength: 64
        StandardIdentifiers:
          description: >-
            The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the
            profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.
          type: array
          items:
            type: string
            enum:
              - PROFILE
              - UNIQUE
              - SECONDARY
              - LOOKUP_ONLY
              - NEW_ONLY
              - ASSET
              - CASE
              - ORDER
      additionalProperties: false
    ObjectType:
      type: object
      properties:
        DomainName:
          description: The unique name of the domain.
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
        ObjectTypeName:
          description: The name of the profile object type.
          type: string
          pattern: ^[a-zA-Z_][a-zA-Z_0-9-]*$
          minLength: 1
          maxLength: 255
        AllowProfileCreation:
          description: Indicates whether a profile should be created when data is received.
          type: boolean
        Description:
          description: Description of the profile object type.
          type: string
          minLength: 1
          maxLength: 1000
        EncryptionKey:
          description: The default encryption key
          type: string
          minLength: 0
          maxLength: 255
        ExpirationDays:
          description: The default number of days until the data within the domain expires.
          type: integer
          minimum: 1
          maximum: 1098
        Fields:
          description: A list of the name and ObjectType field.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/FieldMap'
        Keys:
          description: A list of unique keys that can be used to map data to the profile.
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/KeyMap'
        CreatedAt:
          description: The time of this integration got created.
          type: string
        LastUpdatedAt:
          description: The time of this integration got last updated at.
          type: string
        SourceLastUpdatedTimestampFormat:
          description: The format of your sourceLastUpdatedTimestamp that was previously set up.
          type: string
          minLength: 1
          maxLength: 255
        Tags:
          description: The tags (keys and values) associated with the integration.
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          minItems: 0
          maxItems: 50
        TemplateId:
          description: A unique identifier for the object template.
          type: string
          pattern: ^[a-zA-Z0-9_-]+$
          minLength: 1
          maxLength: 64
      required:
        - DomainName
        - ObjectTypeName
        - Description
      x-stackql-resource-name: object_type
      description: An ObjectType resource of Amazon Connect Customer Profiles
      x-type-name: AWS::CustomerProfiles::ObjectType
      x-stackql-primary-identifier:
        - DomainName
        - ObjectTypeName
      x-create-only-properties:
        - DomainName
        - ObjectTypeName
      x-read-only-properties:
        - LastUpdatedAt
        - CreatedAt
      x-required-properties:
        - DomainName
        - ObjectTypeName
        - Description
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
      x-required-permissions:
        create:
          - profile:GetProfileObjectType
          - profile:PutProfileObjectType
          - profile:TagResource
        read:
          - profile:GetProfileObjectType
        update:
          - profile:GetProfileObjectType
          - profile:PutProfileObjectType
          - profile:UntagResource
          - profile:TagResource
        delete:
          - profile:DeleteProfileObjectType
        list:
          - profile:ListProfileObjectTypes
    CreateCalculatedAttributeDefinitionRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              $ref: '#/components/schemas/DomainName'
            CalculatedAttributeName:
              $ref: '#/components/schemas/CalculatedAttributeName'
            DisplayName:
              $ref: '#/components/schemas/DisplayName'
            Description:
              $ref: '#/components/schemas/Description'
            AttributeDetails:
              $ref: '#/components/schemas/AttributeDetails'
            Conditions:
              $ref: '#/components/schemas/Conditions'
            Statistic:
              $ref: '#/components/schemas/Statistic'
            CreatedAt:
              description: The timestamp of when the calculated attribute definition was created.
              type: string
            LastUpdatedAt:
              description: The timestamp of when the calculated attribute definition was most recently edited.
              type: string
            Tags:
              $ref: '#/components/schemas/Tags'
          x-stackQL-stringOnly: true
      x-title: CreateCalculatedAttributeDefinitionRequest
      type: object
      required: []
    CreateDomainRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              description: The unique name of the domain.
              type: string
              pattern: ^[a-zA-Z0-9_-]+$
              minLength: 1
              maxLength: 64
            DeadLetterQueueUrl:
              description: The URL of the SQS dead letter queue
              type: string
              minLength: 0
              maxLength: 255
            DefaultEncryptionKey:
              description: The default encryption key
              type: string
              minLength: 0
              maxLength: 255
            DefaultExpirationDays:
              description: The default number of days until the data within the domain expires.
              type: integer
              minimum: 1
              maximum: 1098
            Matching:
              $ref: '#/components/schemas/Matching'
            RuleBasedMatching:
              $ref: '#/components/schemas/RuleBasedMatching'
            Stats:
              $ref: '#/components/schemas/DomainStats'
            Tags:
              description: The tags (keys and values) associated with the domain
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
            CreatedAt:
              description: The time of this integration got created
              type: string
            LastUpdatedAt:
              description: The time of this integration got last updated at
              type: string
          x-stackQL-stringOnly: true
      x-title: CreateDomainRequest
      type: object
      required: []
    CreateEventStreamRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              description: The unique name of the domain.
              type: string
              pattern: ^[a-zA-Z0-9_-]+$
              minLength: 1
              maxLength: 64
            EventStreamName:
              description: The name of the event stream.
              type: string
              pattern: ^[a-zA-Z0-9_-]+$
              minLength: 1
              maxLength: 255
            Uri:
              $ref: '#/components/schemas/Uri'
            EventStreamArn:
              description: A unique identifier for the event stream.
              type: string
              minLength: 1
              maxLength: 255
            Tags:
              description: The tags used to organize, track, or control access for this resource.
              type: array
              uniqueItems: true
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
            CreatedAt:
              description: The timestamp of when the export was created.
              type: string
            State:
              description: The operational state of destination stream for export.
              type: string
              enum:
                - RUNNING
                - STOPPED
            DestinationDetails:
              description: Details regarding the Kinesis stream.
              type: object
              properties:
                Uri:
                  $ref: '#/components/schemas/Uri'
                Status:
                  $ref: '#/components/schemas/Status'
              required:
                - Uri
                - Status
              additionalProperties: false
          x-stackQL-stringOnly: true
      x-title: CreateEventStreamRequest
      type: object
      required: []
    CreateIntegrationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              description: The unique name of the domain.
              type: string
              pattern: ^[a-zA-Z0-9_-]+$
              minLength: 1
              maxLength: 64
            Uri:
              description: The URI of the S3 bucket or any other type of data source.
              type: string
              minLength: 1
              maxLength: 255
            FlowDefinition:
              $ref: '#/components/schemas/FlowDefinition'
            ObjectTypeName:
              description: The name of the ObjectType defined for the 3rd party data in Profile Service
              type: string
              pattern: ^[a-zA-Z_][a-zA-Z_0-9-]*$
              minLength: 1
              maxLength: 255
            CreatedAt:
              description: The time of this integration got created
              type: string
            LastUpdatedAt:
              description: The time of this integration got last updated at
              type: string
            Tags:
              description: The tags (keys and values) associated with the integration
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
            ObjectTypeNames:
              description: The mapping between 3rd party event types and ObjectType names
              type: array
              items:
                $ref: '#/components/schemas/ObjectTypeMapping'
          x-stackQL-stringOnly: true
      x-title: CreateIntegrationRequest
      type: object
      required: []
    CreateObjectTypeRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            DomainName:
              description: The unique name of the domain.
              type: string
              pattern: ^[a-zA-Z0-9_-]+$
              minLength: 1
              maxLength: 64
            ObjectTypeName:
              description: The name of the profile object type.
              type: string
              pattern: ^[a-zA-Z_][a-zA-Z_0-9-]*$
              minLength: 1
              maxLength: 255
            AllowProfileCreation:
              description: Indicates whether a profile should be created when data is received.
              type: boolean
            Description:
              description: Description of the profile object type.
              type: string
              minLength: 1
              maxLength: 1000
            EncryptionKey:
              description: The default encryption key
              type: string
              minLength: 0
              maxLength: 255
            ExpirationDays:
              description: The default number of days until the data within the domain expires.
              type: integer
              minimum: 1
              maximum: 1098
            Fields:
              description: A list of the name and ObjectType field.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/FieldMap'
            Keys:
              description: A list of unique keys that can be used to map data to the profile.
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/KeyMap'
            CreatedAt:
              description: The time of this integration got created.
              type: string
            LastUpdatedAt:
              description: The time of this integration got last updated at.
              type: string
            SourceLastUpdatedTimestampFormat:
              description: The format of your sourceLastUpdatedTimestamp that was previously set up.
              type: string
              minLength: 1
              maxLength: 255
            Tags:
              description: The tags (keys and values) associated with the integration.
              type: array
              items:
                $ref: '#/components/schemas/Tag'
              minItems: 0
              maxItems: 50
            TemplateId:
              description: A unique identifier for the object template.
              type: string
              pattern: ^[a-zA-Z0-9_-]+$
              minLength: 1
              maxLength: 64
          x-stackQL-stringOnly: true
      x-title: CreateObjectTypeRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    calculated_attribute_definitions:
      name: calculated_attribute_definitions
      id: aws.customerprofiles.calculated_attribute_definitions
      x-cfn-schema-name: CalculatedAttributeDefinition
      x-cfn-type-name: AWS::CustomerProfiles::CalculatedAttributeDefinition
      x-identifiers:
        - DomainName
        - CalculatedAttributeName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__CalculatedAttributeDefinition&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::CalculatedAttributeDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::CalculatedAttributeDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::CalculatedAttributeDefinition"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/calculated_attribute_definitions/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/calculated_attribute_definitions/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/calculated_attribute_definitions/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.CalculatedAttributeName') as calculated_attribute_name,
              JSON_EXTRACT(Properties, '$.DisplayName') as display_name,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.AttributeDetails') as attribute_details,
              JSON_EXTRACT(Properties, '$.Conditions') as conditions,
              JSON_EXTRACT(Properties, '$.Statistic') as statistic,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.LastUpdatedAt') as last_updated_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::CalculatedAttributeDefinition'
              AND data__Identifier = '<DomainName>|<CalculatedAttributeName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(Properties, '$.CalculatedAttributeName') as calculated_attribute_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::CalculatedAttributeDefinition'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'CalculatedAttributeName') as calculated_attribute_name,
                  json_extract_path_text(Properties, 'DisplayName') as display_name,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'AttributeDetails') as attribute_details,
                  json_extract_path_text(Properties, 'Conditions') as conditions,
                  json_extract_path_text(Properties, 'Statistic') as statistic,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'LastUpdatedAt') as last_updated_at,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::CalculatedAttributeDefinition'
                  AND data__Identifier = '<DomainName>|<CalculatedAttributeName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'DomainName') as domain_name,
                    json_extract_path_text(Properties, 'CalculatedAttributeName') as calculated_attribute_name
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::CalculatedAttributeDefinition'
                    AND region = 'us-east-1'
    domains:
      name: domains
      id: aws.customerprofiles.domains
      x-cfn-schema-name: Domain
      x-cfn-type-name: AWS::CustomerProfiles::Domain
      x-identifiers:
        - DomainName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::Domain"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/domains/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/domains/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/domains/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.DeadLetterQueueUrl') as dead_letter_queue_url,
              JSON_EXTRACT(Properties, '$.DefaultEncryptionKey') as default_encryption_key,
              JSON_EXTRACT(Properties, '$.DefaultExpirationDays') as default_expiration_days,
              JSON_EXTRACT(Properties, '$.Matching') as matching,
              JSON_EXTRACT(Properties, '$.RuleBasedMatching') as rule_based_matching,
              JSON_EXTRACT(Properties, '$.Stats') as stats,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.LastUpdatedAt') as last_updated_at
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::Domain'
              AND data__Identifier = '<DomainName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.DomainName') as domain_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::Domain'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'DeadLetterQueueUrl') as dead_letter_queue_url,
                  json_extract_path_text(Properties, 'DefaultEncryptionKey') as default_encryption_key,
                  json_extract_path_text(Properties, 'DefaultExpirationDays') as default_expiration_days,
                  json_extract_path_text(Properties, 'Matching') as matching,
                  json_extract_path_text(Properties, 'RuleBasedMatching') as rule_based_matching,
                  json_extract_path_text(Properties, 'Stats') as stats,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'LastUpdatedAt') as last_updated_at
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::Domain'
                  AND data__Identifier = '<DomainName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'DomainName') as domain_name
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::Domain'
                    AND region = 'us-east-1'
    event_streams:
      name: event_streams
      id: aws.customerprofiles.event_streams
      x-cfn-schema-name: EventStream
      x-cfn-type-name: AWS::CustomerProfiles::EventStream
      x-identifiers:
        - DomainName
        - EventStreamName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__EventStream&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::EventStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::EventStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::EventStream"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/event_streams/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/event_streams/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/event_streams/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.EventStreamName') as event_stream_name,
              JSON_EXTRACT(Properties, '$.Uri') as uri,
              JSON_EXTRACT(Properties, '$.EventStreamArn') as event_stream_arn,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.State') as state,
              JSON_EXTRACT(Properties, '$.DestinationDetails') as destination_details
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::EventStream'
              AND data__Identifier = '<DomainName>|<EventStreamName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(Properties, '$.EventStreamName') as event_stream_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::EventStream'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'EventStreamName') as event_stream_name,
                  json_extract_path_text(Properties, 'Uri') as uri,
                  json_extract_path_text(Properties, 'EventStreamArn') as event_stream_arn,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'State') as state,
                  json_extract_path_text(Properties, 'DestinationDetails') as destination_details
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::EventStream'
                  AND data__Identifier = '<DomainName>|<EventStreamName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'DomainName') as domain_name,
                    json_extract_path_text(Properties, 'EventStreamName') as event_stream_name
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::EventStream'
                    AND region = 'us-east-1'
    integrations:
      name: integrations
      id: aws.customerprofiles.integrations
      x-cfn-schema-name: Integration
      x-cfn-type-name: AWS::CustomerProfiles::Integration
      x-identifiers:
        - DomainName
        - Uri
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Integration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::Integration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::Integration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::Integration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/integrations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/integrations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/integrations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.Uri') as uri,
              JSON_EXTRACT(Properties, '$.FlowDefinition') as flow_definition,
              JSON_EXTRACT(Properties, '$.ObjectTypeName') as object_type_name,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.LastUpdatedAt') as last_updated_at,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.ObjectTypeNames') as object_type_names
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::Integration'
              AND data__Identifier = '<DomainName>|<Uri>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(Properties, '$.Uri') as uri
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::Integration'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'Uri') as uri,
                  json_extract_path_text(Properties, 'FlowDefinition') as flow_definition,
                  json_extract_path_text(Properties, 'ObjectTypeName') as object_type_name,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'LastUpdatedAt') as last_updated_at,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'ObjectTypeNames') as object_type_names
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::Integration'
                  AND data__Identifier = '<DomainName>|<Uri>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'DomainName') as domain_name,
                    json_extract_path_text(Properties, 'Uri') as uri
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::Integration'
                    AND region = 'us-east-1'
    object_types:
      name: object_types
      id: aws.customerprofiles.object_types
      x-cfn-schema-name: ObjectType
      x-cfn-type-name: AWS::CustomerProfiles::ObjectType
      x-identifiers:
        - DomainName
        - ObjectTypeName
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__ObjectType&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::ObjectType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::ObjectType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::CustomerProfiles::ObjectType"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/object_types/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/object_types/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/object_types/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
              JSON_EXTRACT(Properties, '$.ObjectTypeName') as object_type_name,
              JSON_EXTRACT(Properties, '$.AllowProfileCreation') as allow_profile_creation,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EncryptionKey') as encryption_key,
              JSON_EXTRACT(Properties, '$.ExpirationDays') as expiration_days,
              JSON_EXTRACT(Properties, '$.Fields') as fields,
              JSON_EXTRACT(Properties, '$.Keys') as keys,
              JSON_EXTRACT(Properties, '$.CreatedAt') as created_at,
              JSON_EXTRACT(Properties, '$.LastUpdatedAt') as last_updated_at,
              JSON_EXTRACT(Properties, '$.SourceLastUpdatedTimestampFormat') as source_last_updated_timestamp_format,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TemplateId') as template_id
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::ObjectType'
              AND data__Identifier = '<DomainName>|<ObjectTypeName>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                region,
                JSON_EXTRACT(Properties, '$.DomainName') as domain_name,
                JSON_EXTRACT(Properties, '$.ObjectTypeName') as object_type_name
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::ObjectType'
                AND region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'DomainName') as domain_name,
                  json_extract_path_text(Properties, 'ObjectTypeName') as object_type_name,
                  json_extract_path_text(Properties, 'AllowProfileCreation') as allow_profile_creation,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EncryptionKey') as encryption_key,
                  json_extract_path_text(Properties, 'ExpirationDays') as expiration_days,
                  json_extract_path_text(Properties, 'Fields') as fields,
                  json_extract_path_text(Properties, 'Keys') as keys,
                  json_extract_path_text(Properties, 'CreatedAt') as created_at,
                  json_extract_path_text(Properties, 'LastUpdatedAt') as last_updated_at,
                  json_extract_path_text(Properties, 'SourceLastUpdatedTimestampFormat') as source_last_updated_timestamp_format,
                  json_extract_path_text(Properties, 'Tags') as tags,
                  json_extract_path_text(Properties, 'TemplateId') as template_id
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CustomerProfiles::ObjectType'
                  AND data__Identifier = '<DomainName>|<ObjectTypeName>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    region,
                    json_extract_path_text(Properties, 'DomainName') as domain_name,
                    json_extract_path_text(Properties, 'ObjectTypeName') as object_type_name
                    FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CustomerProfiles::ObjectType'
                    AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__CalculatedAttributeDefinition&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateCalculatedAttributeDefinition
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateCalculatedAttributeDefinitionRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Domain&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateDomain
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateDomainRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__EventStream&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateEventStream
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateEventStreamRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Integration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateIntegration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateIntegrationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__ObjectType&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateObjectType
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateObjectTypeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
