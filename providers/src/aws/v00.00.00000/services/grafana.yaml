openapi: 3.0.0
info:
  title: Grafana
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    AssertionAttributes:
      type: object
      description: Maps Grafana friendly names to the IdPs SAML attributes.
      properties:
        Name:
          type: string
          maxLength: 256
          minLength: 1
          description: Name of the attribute within the SAML assert to use as the users name in Grafana.
        Login:
          type: string
          maxLength: 256
          minLength: 1
          description: Name of the attribute within the SAML assert to use as the users login handle in Grafana.
        Email:
          type: string
          maxLength: 256
          minLength: 1
          description: Name of the attribute within the SAML assert to use as the users email in Grafana.
        Groups:
          type: string
          maxLength: 256
          minLength: 1
          description: Name of the attribute within the SAML assert to use as the users groups in Grafana.
        Role:
          type: string
          maxLength: 256
          minLength: 1
          description: Name of the attribute within the SAML assert to use as the users roles in Grafana.
        Org:
          type: string
          maxLength: 256
          minLength: 1
          description: Name of the attribute within the SAML assert to use as the users organizations in Grafana.
      additionalProperties: false
    IdpMetadata:
      type: object
      description: IdP Metadata used to configure SAML authentication in Grafana.
      properties:
        Url:
          type: string
          maxLength: 2048
          minLength: 1
          description: URL that vends the IdPs metadata.
        Xml:
          type: string
          description: XML blob of the IdPs metadata.
      additionalProperties: false
    RoleValues:
      type: object
      description: Maps SAML roles to the Grafana Editor and Admin roles.
      properties:
        Editor:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 256
            minLength: 1
            description: A single SAML role.
          description: List of SAML roles which will be mapped into the Grafana Editor role.
        Admin:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 256
            minLength: 1
            description: A single SAML role.
          description: List of SAML roles which will be mapped into the Grafana Admin role.
      additionalProperties: false
    SamlConfiguration:
      type: object
      description: SAML configuration data associated with an AMG workspace.
      properties:
        IdpMetadata:
          $ref: '#/components/schemas/IdpMetadata'
        AssertionAttributes:
          $ref: '#/components/schemas/AssertionAttributes'
        RoleValues:
          $ref: '#/components/schemas/RoleValues'
        AllowedOrganizations:
          type: array
          x-insertionOrder: false
          items:
            type: string
            maxLength: 256
            minLength: 1
            description: A single SAML organization.
          description: List of SAML organizations allowed to access Grafana.
        LoginValidityDuration:
          type: number
          description: The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.
      required:
        - IdpMetadata
      additionalProperties: false
    NetworkAccessControl:
      type: object
      description: The configuration settings for Network Access Control.
      properties:
        PrefixListIds:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 0
          maxItems: 5
          items:
            type: string
            minLength: 1
            description: Prefix List Ids
          description: The list of prefix list IDs. A prefix list is a list of CIDR ranges of IP addresses. The IP addresses specified are allowed to access your workspace. If the list is not included in the configuration then no IP addresses will be allowed to access the workspace.
        VpceIds:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 0
          maxItems: 5
          items:
            type: string
            minLength: 1
            description: VPCE Ids
          description: The list of Amazon VPC endpoint IDs for the workspace. If a NetworkAccessConfiguration is specified then only VPC endpoints specified here will be allowed to access the workspace.
      additionalProperties: false
    VpcConfiguration:
      type: object
      description: The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.
      properties:
        SecurityGroupIds:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 1
          maxItems: 5
          items:
            type: string
            minLength: 1
            maxLength: 255
            description: VPC Security Group Id
          description: The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.
        SubnetIds:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          minItems: 2
          maxItems: 6
          items:
            type: string
            minLength: 1
            maxLength: 255
            description: VPC Subnet Id
          description: The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.
      required:
        - SecurityGroupIds
        - SubnetIds
      additionalProperties: false
    AccountAccessType:
      type: string
      description: These enums represent valid account access types. Specifically these enums determine whether the workspace can access AWS resources in the AWS account only, or whether it can also access resources in other accounts in the same organization. If the value CURRENT_ACCOUNT is used, a workspace role ARN must be provided. If the value is ORGANIZATION, a list of organizational units must be provided.
      enum:
        - CURRENT_ACCOUNT
        - ORGANIZATION
    AuthenticationProviderTypes:
      type: string
      description: Valid workspace authentication providers.
      enum:
        - AWS_SSO
        - SAML
    DataSourceType:
      type: string
      description: These enums represent valid AWS data sources that can be queried via the Grafana workspace. These data sources are primarily used to help customers visualize which data sources have been added to a service managed workspace IAM role.
      enum:
        - AMAZON_OPENSEARCH_SERVICE
        - CLOUDWATCH
        - PROMETHEUS
        - XRAY
        - TIMESTREAM
        - SITEWISE
        - ATHENA
        - REDSHIFT
    NotificationDestinationType:
      type: string
      description: These enums represent valid AWS notification destinations that the Grafana workspace has permission to use. These notification destinations are primarily used to help customers visualize which destinations have been added to a service managed IAM role.
      enum:
        - SNS
    PermissionType:
      type: string
      description: These enums represent valid permission types to use when creating or configuring a Grafana workspace. The SERVICE_MANAGED permission type means the Managed Grafana service will create a workspace IAM role on your behalf. The CUSTOMER_MANAGED permission type means that the customer is expected to provide an IAM role that the Grafana workspace can use to query data sources.
      enum:
        - CUSTOMER_MANAGED
        - SERVICE_MANAGED
    WorkspaceStatus:
      type: string
      description: These enums represent the status of a workspace.
      enum:
        - ACTIVE
        - CREATING
        - DELETING
        - FAILED
        - UPDATING
        - UPGRADING
        - VERSION_UPDATING
        - DELETION_FAILED
        - CREATION_FAILED
        - UPDATE_FAILED
        - UPGRADE_FAILED
        - LICENSE_REMOVAL_FAILED
        - VERSION_UPDATE_FAILED
    SamlConfigurationStatus:
      type: string
      description: Valid SAML configuration statuses.
      enum:
        - CONFIGURED
        - NOT_CONFIGURED
    Workspace:
      type: object
      properties:
        AuthenticationProviders:
          type: array
          x-insertionOrder: false
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AuthenticationProviderTypes'
          description: List of authentication providers to enable.
        SsoClientId:
          type: string
          description: The client ID of the AWS SSO Managed Application.
        SamlConfiguration:
          $ref: '#/components/schemas/SamlConfiguration'
        NetworkAccessControl:
          $ref: '#/components/schemas/NetworkAccessControl'
        VpcConfiguration:
          $ref: '#/components/schemas/VpcConfiguration'
        SamlConfigurationStatus:
          $ref: '#/components/schemas/SamlConfigurationStatus'
        ClientToken:
          type: string
          pattern: ^[!-~]{1,64}$
          description: A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
        Status:
          $ref: '#/components/schemas/WorkspaceStatus'
        CreationTimestamp:
          type: string
          description: Timestamp when the workspace was created.
          format: date-time
        ModificationTimestamp:
          type: string
          description: Timestamp when the workspace was last modified
          format: date-time
        GrafanaVersion:
          type: string
          maxLength: 255
          minLength: 1
          description: The version of Grafana to support in your workspace.
        Endpoint:
          type: string
          maxLength: 2048
          minLength: 1
          description: Endpoint for the Grafana workspace.
        AccountAccessType:
          $ref: '#/components/schemas/AccountAccessType'
        OrganizationRoleName:
          type: string
          maxLength: 2048
          minLength: 1
          description: The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
        PermissionType:
          $ref: '#/components/schemas/PermissionType'
        StackSetName:
          type: string
          description: The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
        DataSources:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataSourceType'
          description: List of data sources on the service managed IAM role.
        Description:
          type: string
          maxLength: 2048
          minLength: 0
          description: Description of a workspace.
        Id:
          type: string
          pattern: ^g-[0-9a-f]{10}$
          description: The id that uniquely identifies a Grafana workspace.
        Name:
          type: string
          pattern: ^[a-zA-Z0-9-._~]{1,255}$
          description: The user friendly name of a workspace.
        NotificationDestinations:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/NotificationDestinationType'
          description: List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
        OrganizationalUnits:
          type: array
          x-insertionOrder: false
          items:
            type: string
            description: Id of an organizational unit.
          description: List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
        RoleArn:
          type: string
          maxLength: 2048
          minLength: 1
          description: IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
        PluginAdminEnabled:
          type: boolean
          description: Allow workspace admins to install plugins
      required:
        - AuthenticationProviders
        - PermissionType
        - AccountAccessType
      x-stackql-resource-name: workspace
      description: Definition of AWS::Grafana::Workspace Resource Type
      x-type-name: AWS::Grafana::Workspace
      x-stackql-primary-identifier:
        - Id
      x-create-only-properties:
        - ClientToken
      x-write-only-properties:
        - ClientToken
      x-read-only-properties:
        - Id
        - SsoClientId
        - SamlConfigurationStatus
        - Endpoint
        - Status
        - CreationTimestamp
        - ModificationTimestamp
      x-required-properties:
        - AuthenticationProviders
        - PermissionType
        - AccountAccessType
      x-tagging:
        taggable: false
        tagOnCreate: false
        tagUpdatable: false
        cloudFormationSystemTags: false
      x-required-permissions:
        create:
          - grafana:CreateWorkspace
          - grafana:DescribeWorkspace
          - grafana:DescribeWorkspaceAuthentication
          - grafana:DescribeWorkspaceConfiguration
          - grafana:UpdateWorkspaceAuthentication
          - sso:DescribeRegisteredRegions
          - sso:CreateManagedApplicationInstance
          - organizations:DescribeOrganization
          - sso:GetSharedSsoConfiguration
          - iam:PassRole
          - ec2:GetManagedPrefixListEntries
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:CreateServiceLinkedRole
          - sso:ListApplicationInstances
          - sso:GetApplicationInstance
        read:
          - grafana:DescribeWorkspace
          - grafana:DescribeWorkspaceAuthentication
          - grafana:DescribeWorkspaceConfiguration
        update:
          - grafana:DescribeWorkspace
          - grafana:DescribeWorkspaceAuthentication
          - grafana:DescribeWorkspaceConfiguration
          - grafana:UpdateWorkspace
          - grafana:UpdateWorkspaceAuthentication
          - grafana:UpdateWorkspaceConfiguration
          - sso:DescribeRegisteredRegions
          - sso:CreateManagedApplicationInstance
          - ec2:GetManagedPrefixListEntries
          - iam:PassRole
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:CreateServiceLinkedRole
          - sso:ListApplicationInstances
          - sso:GetApplicationInstance
        delete:
          - grafana:DeleteWorkspace
          - grafana:DescribeWorkspace
          - grafana:DescribeWorkspaceAuthentication
          - grafana:DescribeWorkspaceConfiguration
          - sso:DeleteManagedApplicationInstance
          - sso:DescribeRegisteredRegions
        list:
          - grafana:ListWorkspaces
          - grafana:DescribeWorkspaceAuthentication
          - grafana:DescribeWorkspaceConfiguration
    CreateWorkspaceRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            AuthenticationProviders:
              type: array
              x-insertionOrder: false
              minItems: 1
              uniqueItems: true
              items:
                $ref: '#/components/schemas/AuthenticationProviderTypes'
              description: List of authentication providers to enable.
            SsoClientId:
              type: string
              description: The client ID of the AWS SSO Managed Application.
            SamlConfiguration:
              $ref: '#/components/schemas/SamlConfiguration'
            NetworkAccessControl:
              $ref: '#/components/schemas/NetworkAccessControl'
            VpcConfiguration:
              $ref: '#/components/schemas/VpcConfiguration'
            SamlConfigurationStatus:
              $ref: '#/components/schemas/SamlConfigurationStatus'
            ClientToken:
              type: string
              pattern: ^[!-~]{1,64}$
              description: A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.
            Status:
              $ref: '#/components/schemas/WorkspaceStatus'
            CreationTimestamp:
              type: string
              description: Timestamp when the workspace was created.
              format: date-time
            ModificationTimestamp:
              type: string
              description: Timestamp when the workspace was last modified
              format: date-time
            GrafanaVersion:
              type: string
              maxLength: 255
              minLength: 1
              description: The version of Grafana to support in your workspace.
            Endpoint:
              type: string
              maxLength: 2048
              minLength: 1
              description: Endpoint for the Grafana workspace.
            AccountAccessType:
              $ref: '#/components/schemas/AccountAccessType'
            OrganizationRoleName:
              type: string
              maxLength: 2048
              minLength: 1
              description: The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
            PermissionType:
              $ref: '#/components/schemas/PermissionType'
            StackSetName:
              type: string
              description: The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
            DataSources:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/DataSourceType'
              description: List of data sources on the service managed IAM role.
            Description:
              type: string
              maxLength: 2048
              minLength: 0
              description: Description of a workspace.
            Id:
              type: string
              pattern: ^g-[0-9a-f]{10}$
              description: The id that uniquely identifies a Grafana workspace.
            Name:
              type: string
              pattern: ^[a-zA-Z0-9-._~]{1,255}$
              description: The user friendly name of a workspace.
            NotificationDestinations:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/NotificationDestinationType'
              description: List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
            OrganizationalUnits:
              type: array
              x-insertionOrder: false
              items:
                type: string
                description: Id of an organizational unit.
              description: List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
            RoleArn:
              type: string
              maxLength: 2048
              minLength: 1
              description: IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
            PluginAdminEnabled:
              type: boolean
              description: Allow workspace admins to install plugins
          x-stackQL-stringOnly: true
      x-title: CreateWorkspaceRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    workspaces:
      name: workspaces
      id: aws.grafana.workspaces
      x-cfn-schema-name: Workspace
      x-cfn-type-name: AWS::Grafana::Workspace
      x-identifiers:
        - Id
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Workspace&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Grafana::Workspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Grafana::Workspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::Grafana::Workspace"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/workspaces/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.AuthenticationProviders') as authentication_providers,
              JSON_EXTRACT(Properties, '$.SsoClientId') as sso_client_id,
              JSON_EXTRACT(Properties, '$.SamlConfiguration') as saml_configuration,
              JSON_EXTRACT(Properties, '$.NetworkAccessControl') as network_access_control,
              JSON_EXTRACT(Properties, '$.VpcConfiguration') as vpc_configuration,
              JSON_EXTRACT(Properties, '$.SamlConfigurationStatus') as saml_configuration_status,
              JSON_EXTRACT(Properties, '$.ClientToken') as client_token,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.CreationTimestamp') as creation_timestamp,
              JSON_EXTRACT(Properties, '$.ModificationTimestamp') as modification_timestamp,
              JSON_EXTRACT(Properties, '$.GrafanaVersion') as grafana_version,
              JSON_EXTRACT(Properties, '$.Endpoint') as endpoint,
              JSON_EXTRACT(Properties, '$.AccountAccessType') as account_access_type,
              JSON_EXTRACT(Properties, '$.OrganizationRoleName') as organization_role_name,
              JSON_EXTRACT(Properties, '$.PermissionType') as permission_type,
              JSON_EXTRACT(Properties, '$.StackSetName') as stack_set_name,
              JSON_EXTRACT(Properties, '$.DataSources') as data_sources,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Id') as id,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.NotificationDestinations') as notification_destinations,
              JSON_EXTRACT(Properties, '$.OrganizationalUnits') as organizational_units,
              JSON_EXTRACT(Properties, '$.RoleArn') as role_arn,
              JSON_EXTRACT(Properties, '$.PluginAdminEnabled') as plugin_admin_enabled
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Grafana::Workspace'
              AND data__Identifier = '<Id>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.AuthenticationProviders') as authentication_providers,
                JSON_EXTRACT(detail.Properties, '$.SsoClientId') as sso_client_id,
                JSON_EXTRACT(detail.Properties, '$.SamlConfiguration') as saml_configuration,
                JSON_EXTRACT(detail.Properties, '$.NetworkAccessControl') as network_access_control,
                JSON_EXTRACT(detail.Properties, '$.VpcConfiguration') as vpc_configuration,
                JSON_EXTRACT(detail.Properties, '$.SamlConfigurationStatus') as saml_configuration_status,
                JSON_EXTRACT(detail.Properties, '$.ClientToken') as client_token,
                JSON_EXTRACT(detail.Properties, '$.Status') as status,
                JSON_EXTRACT(detail.Properties, '$.CreationTimestamp') as creation_timestamp,
                JSON_EXTRACT(detail.Properties, '$.ModificationTimestamp') as modification_timestamp,
                JSON_EXTRACT(detail.Properties, '$.GrafanaVersion') as grafana_version,
                JSON_EXTRACT(detail.Properties, '$.Endpoint') as endpoint,
                JSON_EXTRACT(detail.Properties, '$.AccountAccessType') as account_access_type,
                JSON_EXTRACT(detail.Properties, '$.OrganizationRoleName') as organization_role_name,
                JSON_EXTRACT(detail.Properties, '$.PermissionType') as permission_type,
                JSON_EXTRACT(detail.Properties, '$.StackSetName') as stack_set_name,
                JSON_EXTRACT(detail.Properties, '$.DataSources') as data_sources,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Id') as id,
                JSON_EXTRACT(detail.Properties, '$.Name') as name,
                JSON_EXTRACT(detail.Properties, '$.NotificationDestinations') as notification_destinations,
                JSON_EXTRACT(detail.Properties, '$.OrganizationalUnits') as organizational_units,
                JSON_EXTRACT(detail.Properties, '$.RoleArn') as role_arn,
                JSON_EXTRACT(detail.Properties, '$.PluginAdminEnabled') as plugin_admin_enabled
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::Grafana::Workspace'
                AND detail.data__TypeName = 'AWS::Grafana::Workspace'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'AuthenticationProviders') as authentication_providers,
                  json_extract_path_text(Properties, 'SsoClientId') as sso_client_id,
                  json_extract_path_text(Properties, 'SamlConfiguration') as saml_configuration,
                  json_extract_path_text(Properties, 'NetworkAccessControl') as network_access_control,
                  json_extract_path_text(Properties, 'VpcConfiguration') as vpc_configuration,
                  json_extract_path_text(Properties, 'SamlConfigurationStatus') as saml_configuration_status,
                  json_extract_path_text(Properties, 'ClientToken') as client_token,
                  json_extract_path_text(Properties, 'Status') as status,
                  json_extract_path_text(Properties, 'CreationTimestamp') as creation_timestamp,
                  json_extract_path_text(Properties, 'ModificationTimestamp') as modification_timestamp,
                  json_extract_path_text(Properties, 'GrafanaVersion') as grafana_version,
                  json_extract_path_text(Properties, 'Endpoint') as endpoint,
                  json_extract_path_text(Properties, 'AccountAccessType') as account_access_type,
                  json_extract_path_text(Properties, 'OrganizationRoleName') as organization_role_name,
                  json_extract_path_text(Properties, 'PermissionType') as permission_type,
                  json_extract_path_text(Properties, 'StackSetName') as stack_set_name,
                  json_extract_path_text(Properties, 'DataSources') as data_sources,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Id') as id,
                  json_extract_path_text(Properties, 'Name') as name,
                  json_extract_path_text(Properties, 'NotificationDestinations') as notification_destinations,
                  json_extract_path_text(Properties, 'OrganizationalUnits') as organizational_units,
                  json_extract_path_text(Properties, 'RoleArn') as role_arn,
                  json_extract_path_text(Properties, 'PluginAdminEnabled') as plugin_admin_enabled
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::Grafana::Workspace'
                  AND data__Identifier = '<Id>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'AuthenticationProviders') as authentication_providers,
                    json_extract_path_text(detail.Properties, 'SsoClientId') as sso_client_id,
                    json_extract_path_text(detail.Properties, 'SamlConfiguration') as saml_configuration,
                    json_extract_path_text(detail.Properties, 'NetworkAccessControl') as network_access_control,
                    json_extract_path_text(detail.Properties, 'VpcConfiguration') as vpc_configuration,
                    json_extract_path_text(detail.Properties, 'SamlConfigurationStatus') as saml_configuration_status,
                    json_extract_path_text(detail.Properties, 'ClientToken') as client_token,
                    json_extract_path_text(detail.Properties, 'Status') as status,
                    json_extract_path_text(detail.Properties, 'CreationTimestamp') as creation_timestamp,
                    json_extract_path_text(detail.Properties, 'ModificationTimestamp') as modification_timestamp,
                    json_extract_path_text(detail.Properties, 'GrafanaVersion') as grafana_version,
                    json_extract_path_text(detail.Properties, 'Endpoint') as endpoint,
                    json_extract_path_text(detail.Properties, 'AccountAccessType') as account_access_type,
                    json_extract_path_text(detail.Properties, 'OrganizationRoleName') as organization_role_name,
                    json_extract_path_text(detail.Properties, 'PermissionType') as permission_type,
                    json_extract_path_text(detail.Properties, 'StackSetName') as stack_set_name,
                    json_extract_path_text(detail.Properties, 'DataSources') as data_sources,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Id') as id,
                    json_extract_path_text(detail.Properties, 'Name') as name,
                    json_extract_path_text(detail.Properties, 'NotificationDestinations') as notification_destinations,
                    json_extract_path_text(detail.Properties, 'OrganizationalUnits') as organizational_units,
                    json_extract_path_text(detail.Properties, 'RoleArn') as role_arn,
                    json_extract_path_text(detail.Properties, 'PluginAdminEnabled') as plugin_admin_enabled
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::Grafana::Workspace'
                    AND detail.data__TypeName = 'AWS::Grafana::Workspace'
                    AND listing.region = 'us-east-1'
    workspaces_list_only:
      name: workspaces_list_only
      id: aws.grafana.workspaces_list_only
      x-cfn-schema-name: Workspace
      x-cfn-type-name: AWS::Grafana::Workspace
      x-identifiers:
        - Id
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Id') as id
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Grafana::Workspace'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'Id') as id
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::Grafana::Workspace'
                AND region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Workspace&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateWorkspace
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateWorkspaceRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
