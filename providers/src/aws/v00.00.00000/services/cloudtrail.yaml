openapi: 3.0.0
info:
  title: CloudTrail
  version: 1.0.0
paths: {}
components:
  schemas:
    Destination:
      description: The resource that receives events arriving from a channel.
      type: object
      properties:
        Type:
          description: The type of destination for events arriving from a channel.
          type: string
          enum:
            - EVENT_DATA_STORE
        Location:
          description: The ARN of a resource that receives events from a channel.
          type: string
          minLength: 3
          maxLength: 1024
          pattern: (^[a-zA-Z0-9._/\-:]+$)
      required:
        - Type
        - Location
      additionalProperties: false
    UUID:
      type: string
      minLength: 36
      maxLength: 36
      pattern: (^[a-f0-9\-]+$)
    Timestamp:
      type: string
    ChannelArn:
      description: The Amazon Resource Name (ARN) of a channel.
      type: string
      minLength: 3
      maxLength: 256
      pattern: (^[a-zA-Z0-9._/\-:]+$)
    ChannelName:
      description: The name of the channel.
      type: string
      minLength: 3
      maxLength: 128
      pattern: (^[a-zA-Z0-9._\-]+$)
    Tag:
      description: An arbitrary set of tags (key-value pairs) for this trail.
      type: object
      additionalProperties: false
      properties:
        Key:
          description: 'The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          type: string
        Value:
          description: 'The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.'
          type: string
      required:
        - Value
        - Key
    Channel:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/ChannelName'
        Source:
          description: The ARN of an on-premises storage solution or application, or a partner event source.
          type: string
          minLength: 1
          maxLength: 256
          pattern: (.*)
        Destinations:
          description: One or more resources to which events arriving through a channel are logged and stored.
          type: array
          items:
            $ref: '#/components/schemas/Destination'
          maxItems: 10
          uniqueItems: true
          x-insertionOrder: false
        ChannelArn:
          $ref: '#/components/schemas/ChannelArn'
        Tags:
          description: An array of key-value pairs to apply to this resource.
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: channel
      x-stackql-primaryIdentifier:
        - ChannelArn
    AdvancedFieldSelector:
      description: A single selector statement in an advanced event selector.
      type: object
      additionalProperties: false
      properties:
        Field:
          description: A field in an event record on which to filter events to be logged. Supported fields include readOnly, eventCategory, eventSource (for management events), eventName, resources.type, and resources.ARN.
          type: string
          pattern: ([\w|\d|\.|_]+)
          minLength: 1
          maxLength: 1000
        Equals:
          description: An operator that includes events that match the exact value of the event record field specified as the value of Field. This is the only valid operator that you can use with the readOnly, eventCategory, and resources.type fields.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
            pattern: (.+)
            minLength: 1
            maxLength: 2048
        StartsWith:
          description: An operator that includes events that match the first few characters of the event record field specified as the value of Field.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
            pattern: (.+)
            minLength: 1
            maxLength: 2048
        EndsWith:
          description: An operator that includes events that match the last few characters of the event record field specified as the value of Field.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
            pattern: (.+)
            minLength: 1
            maxLength: 2048
        NotEquals:
          description: An operator that excludes events that match the exact value of the event record field specified as the value of Field.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
            pattern: (.+)
            minLength: 1
            maxLength: 2048
        NotStartsWith:
          description: An operator that excludes events that match the first few characters of the event record field specified as the value of Field.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
            pattern: (.+)
            minLength: 1
            maxLength: 2048
        NotEndsWith:
          description: An operator that excludes events that match the last few characters of the event record field specified as the value of Field.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            type: string
            pattern: (.+)
            minLength: 1
            maxLength: 2048
      required:
        - Field
    AdvancedEventSelector:
      description: Advanced event selectors let you create fine-grained selectors for the following AWS CloudTrail event record Ô¨Åelds. They help you control costs by logging only those events that are important to you.
      type: object
      additionalProperties: false
      properties:
        Name:
          description: An optional, descriptive name for an advanced event selector, such as "Log data events for only two S3 buckets".
          type: string
          minLength: 1
          maxLength: 1000
        FieldSelectors:
          description: Contains all selector statements in an advanced event selector.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          minItems: 1
          items:
            $ref: '#/components/schemas/AdvancedFieldSelector'
      required:
        - FieldSelectors
    EventDataStore:
      type: object
      properties:
        AdvancedEventSelectors:
          description: The advanced event selectors that were used to select events for the data store.
          type: array
          items:
            $ref: '#/components/schemas/AdvancedEventSelector'
          uniqueItems: true
          x-insertionOrder: false
        CreatedTimestamp:
          description: The timestamp of the event data store's creation.
          $ref: '#/components/schemas/Timestamp'
        EventDataStoreArn:
          description: The ARN of the event data store.
          type: string
        MultiRegionEnabled:
          description: Indicates whether the event data store includes events from all regions, or only from the region in which it was created.
          type: boolean
        Name:
          description: The name of the event data store.
          type: string
        OrganizationEnabled:
          description: Indicates that an event data store is collecting logged events for an organization.
          type: boolean
        RetentionPeriod:
          description: The retention period, in days.
          type: integer
        Status:
          description: The status of an event data store. Values are ENABLED and PENDING_DELETION.
          type: string
        TerminationProtectionEnabled:
          description: Indicates whether the event data store is protected from termination.
          type: boolean
        UpdatedTimestamp:
          description: The timestamp showing when an event data store was updated, if applicable. UpdatedTimestamp is always either the same or newer than the time shown in CreatedTimestamp.
          $ref: '#/components/schemas/Timestamp'
        KmsKeyId:
          description: Specifies the KMS key ID to use to encrypt the events delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
          type: string
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
      required: []
      x-stackql-resource-name: event_data_store
      x-stackql-primaryIdentifier:
        - EventDataStoreArn
    ResourcePolicy:
      type: object
      properties:
        ResourceArn:
          description: The ARN of the AWS CloudTrail resource to which the policy applies.
          type: string
        ResourcePolicy:
          type: string
      required:
        - ResourceArn
        - ResourcePolicy
      x-stackql-resource-name: resource_policy
      x-stackql-primaryIdentifier:
        - ResourceArn
    DataResource:
      description: CloudTrail supports data event logging for Amazon S3 objects and AWS Lambda functions. You can specify up to 250 resources for an individual event selector, but the total number of data resources cannot exceed 250 across all event selectors in a trail. This limit does not apply if you configure resource logging for all data events.
      type: object
      additionalProperties: false
      properties:
        Type:
          description: The resource type in which you want to log data events. You can specify AWS::S3::Object or AWS::Lambda::Function resources.
          type: string
        Values:
          description: An array of Amazon Resource Name (ARN) strings or partial ARN strings for the specified objects.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
      required:
        - Type
    EventSelector:
      description: The type of email sending events to publish to the event destination.
      type: object
      additionalProperties: false
      properties:
        DataResources:
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/DataResource'
        IncludeManagementEvents:
          description: Specify if you want your event selector to include management events for your trail.
          type: boolean
        ReadWriteType:
          description: Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation.
          type: string
          enum:
            - All
            - ReadOnly
            - WriteOnly
        ExcludeManagementEventSources:
          description: An optional list of service event sources from which you do not want management events to be logged on your trail. In this release, the list can be empty (disables the filter), or it can filter out AWS Key Management Service events by containing "kms.amazonaws.com". By default, ExcludeManagementEventSources is empty, and AWS KMS events are included in events that are logged to your trail.
          type: array
          uniqueItems: true
          x-insertionOrder: false
          items:
            type: string
    InsightSelector:
      description: A string that contains insight types that are logged on a trail.
      type: object
      additionalProperties: false
      properties:
        InsightType:
          description: The type of insight to log on a trail.
          type: string
    Trail:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          description: Specifies a log group name using an Amazon Resource Name (ARN), a unique identifier that represents the log group to which CloudTrail logs will be delivered. Not required unless you specify CloudWatchLogsRoleArn.
          type: string
        CloudWatchLogsRoleArn:
          description: Specifies the role for the CloudWatch Logs endpoint to assume to write to a user's log group.
          type: string
        EnableLogFileValidation:
          description: Specifies whether log file validation is enabled. The default is false.
          type: boolean
        EventSelectors:
          description: >-
            Use event selectors to further specify the management and data event settings for your trail. By default, trails created without specific event selectors will be configured to log all read and write management events, and no data events. When an event occurs in your account, CloudTrail evaluates the event selector for all trails. For each trail, if the event matches any event selector, the trail processes and logs the event. If the event doesn't match any event selector, the trail
            doesn't log the event. You can configure up to five event selectors for a trail.
          type: array
          items:
            $ref: '#/components/schemas/EventSelector'
          maxItems: 5
          uniqueItems: true
          x-insertionOrder: false
        IncludeGlobalServiceEvents:
          description: Specifies whether the trail is publishing events from global services such as IAM to the log files.
          type: boolean
        IsLogging:
          description: Whether the CloudTrail is currently logging AWS API calls.
          type: boolean
        IsMultiRegionTrail:
          description: >-
            Specifies whether the trail applies only to the current region or to all regions. The default is false. If the trail exists only in the current region and this value is set to true, shadow trails (replications of the trail) will be created in the other regions. If the trail exists in all regions and this value is set to false, the trail will remain in the region where it was created, and its shadow trails in other regions will be deleted. As a best practice, consider using trails
            that log events in all regions.
          type: boolean
        IsOrganizationTrail:
          description: Specifies whether the trail is created for all accounts in an organization in AWS Organizations, or only for the current AWS account. The default is false, and cannot be true unless the call is made on behalf of an AWS account that is the master account for an organization in AWS Organizations.
          type: boolean
        KMSKeyId:
          description: Specifies the KMS key ID to use to encrypt the logs delivered by CloudTrail. The value can be an alias name prefixed by 'alias/', a fully specified ARN to an alias, a fully specified ARN to a key, or a globally unique identifier.
          type: string
        S3BucketName:
          description: Specifies the name of the Amazon S3 bucket designated for publishing log files. See Amazon S3 Bucket Naming Requirements.
          type: string
        S3KeyPrefix:
          description: Specifies the Amazon S3 key prefix that comes after the name of the bucket you have designated for log file delivery. For more information, see Finding Your CloudTrail Log Files. The maximum length is 200 characters.
          type: string
          maxLength: 200
        SnsTopicName:
          description: Specifies the name of the Amazon SNS topic defined for notification of log file delivery. The maximum length is 256 characters.
          type: string
          maxLength: 256
        Tags:
          type: array
          uniqueItems: false
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/Tag'
        TrailName:
          type: string
          pattern: (^[a-zA-Z0-9]$)|(^[a-zA-Z0-9]([a-zA-Z0-9\._-])*[a-zA-Z0-9]$)
          minLength: 3
          maxLength: 128
        Arn:
          type: string
        SnsTopicArn:
          type: string
        InsightSelectors:
          description: Lets you enable Insights event logging by specifying the Insights selectors that you want to enable on an existing trail.
          type: array
          items:
            $ref: '#/components/schemas/InsightSelector'
          uniqueItems: true
          x-insertionOrder: false
      required:
        - S3BucketName
        - IsLogging
      x-stackql-resource-name: trail
      x-stackql-primaryIdentifier:
        - TrailName
  x-stackQL-resources:
    channels:
      name: channels
      id: aws.cloudtrail.channels
      x-cfn-schema-name: Channel
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ChannelArn') as channel_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudTrail::Channel'
    channel:
      name: channel
      id: aws.cloudtrail.channel
      x-cfn-schema-name: Channel
      x-type: get
      x-identifiers:
        - ChannelArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.Source') as source,
              JSON_EXTRACT(Properties, '$.Destinations') as destinations,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudTrail::Channel'
    event_data_stores:
      name: event_data_stores
      id: aws.cloudtrail.event_data_stores
      x-cfn-schema-name: EventDataStore
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.EventDataStoreArn') as event_data_store_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudTrail::EventDataStore'
    event_data_store:
      name: event_data_store
      id: aws.cloudtrail.event_data_store
      x-cfn-schema-name: EventDataStore
      x-type: get
      x-identifiers:
        - EventDataStoreArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.AdvancedEventSelectors') as advanced_event_selectors,
              JSON_EXTRACT(Properties, '$.EventDataStoreArn') as event_data_store_arn,
              JSON_EXTRACT(Properties, '$.MultiRegionEnabled') as multi_region_enabled,
              JSON_EXTRACT(Properties, '$.Name') as name,
              JSON_EXTRACT(Properties, '$.OrganizationEnabled') as organization_enabled,
              JSON_EXTRACT(Properties, '$.RetentionPeriod') as retention_period,
              JSON_EXTRACT(Properties, '$.Status') as status,
              JSON_EXTRACT(Properties, '$.TerminationProtectionEnabled') as termination_protection_enabled,
              JSON_EXTRACT(Properties, '$.KmsKeyId') as kms_key_id,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudTrail::EventDataStore'
    resource_policies:
      name: resource_policies
      id: aws.cloudtrail.resource_policies
      x-cfn-schema-name: ResourcePolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudTrail::ResourcePolicy'
    resource_policy:
      name: resource_policy
      id: aws.cloudtrail.resource_policy
      x-cfn-schema-name: ResourcePolicy
      x-type: get
      x-identifiers:
        - ResourceArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.ResourceArn') as resource_arn,
              JSON_EXTRACT(Properties, '$.ResourcePolicy') as resource_policy
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudTrail::ResourcePolicy'
    trails:
      name: trails
      id: aws.cloudtrail.trails
      x-cfn-schema-name: Trail
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TrailName') as trail_name
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::CloudTrail::Trail'
    trail:
      name: trail
      id: aws.cloudtrail.trail
      x-cfn-schema-name: Trail
      x-type: get
      x-identifiers:
        - TrailName
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.CloudWatchLogsLogGroupArn') as cloud_watch_logs_log_group_arn,
              JSON_EXTRACT(Properties, '$.CloudWatchLogsRoleArn') as cloud_watch_logs_role_arn,
              JSON_EXTRACT(Properties, '$.EnableLogFileValidation') as enable_log_file_validation,
              JSON_EXTRACT(Properties, '$.EventSelectors') as event_selectors,
              JSON_EXTRACT(Properties, '$.IncludeGlobalServiceEvents') as include_global_service_events,
              JSON_EXTRACT(Properties, '$.IsLogging') as is_logging,
              JSON_EXTRACT(Properties, '$.IsMultiRegionTrail') as is_multi_region_trail,
              JSON_EXTRACT(Properties, '$.IsOrganizationTrail') as is_organization_trail,
              JSON_EXTRACT(Properties, '$.KMSKeyId') as k_ms_key_id,
              JSON_EXTRACT(Properties, '$.S3BucketName') as s3_bucket_name,
              JSON_EXTRACT(Properties, '$.S3KeyPrefix') as s3_key_prefix,
              JSON_EXTRACT(Properties, '$.SnsTopicName') as sns_topic_name,
              JSON_EXTRACT(Properties, '$.Tags') as tags,
              JSON_EXTRACT(Properties, '$.TrailName') as trail_name,
              JSON_EXTRACT(Properties, '$.Arn') as arn,
              JSON_EXTRACT(Properties, '$.SnsTopicArn') as sns_topic_arn,
              JSON_EXTRACT(Properties, '$.InsightSelectors') as insight_selectors
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::CloudTrail::Trail'
