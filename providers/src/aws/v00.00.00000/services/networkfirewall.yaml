openapi: 3.0.0
info:
  title: NetworkFirewall
  version: 2.0.0
  x-serviceName: cloudcontrolapi
servers:
  - url: https://cloudcontrolapi.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The CloudControlApi multi-region endpoint
  - url: https://cloudcontrolapi.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CloudControlApi endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  x-cloud-control-schemas:
    AlreadyExistsException: {}
    CancelResourceRequestInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: CancelResourceRequestInput
      type: object
    CancelResourceRequestOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    ClientToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    ClientTokenConflictException: {}
    ConcurrentModificationException: {}
    ConcurrentOperationException: {}
    CreateResourceInput:
      properties:
        ClientToken:
          type: string
        DesiredState:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/Properties'
            - description: >-
                <p>Structured data format representing the desired state of the resource, consisting of that resource's properties and their desired values.</p> <note> <p>Cloud Control API currently supports JSON as a structured data format.</p> </note> <pre><code> &lt;p&gt;Specify the desired state as one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A JSON blob&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;A local path containing the desired state in JSON data format&lt;/p&gt;
                &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href=&quot;https://docs.aws.amazon.com/cloudcontrolapi/latest/userguide/resource-operations-create.html#resource-operations-create-desiredstate&quot;&gt;Composing the desired state of the resource&lt;/a&gt; in the &lt;i&gt;Amazon Web Services Cloud Control API User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;For more information about the properties of a specific resource, refer to the related topic for the resource in the
                &lt;a href=&quot;https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html&quot;&gt;Resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation Users Guide&lt;/i&gt;.&lt;/p&gt; </code></pre>
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - DesiredState
      title: CreateResourceInput
      type: object
    CreateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    DeleteResourceInput:
      properties:
        ClientToken:
          type: string
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
      required:
        - Identifier
      title: DeleteResourceInput
      type: object
    DeleteResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    GeneralServiceException: {}
    GetResourceInput:
      properties:
        TypeName:
          $ref: '#/components/x-cloud-control-schemas/TypeName'
        Identifier:
          $ref: '#/components/x-cloud-control-schemas/Identifier'
        TypeVersionId:
          $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
        RoleArn:
          $ref: '#/components/x-cloud-control-schemas/RoleArn'
      required:
        - TypeName
        - Identifier
      title: GetResourceInput
      type: object
    GetResourceOutput:
      properties:
        ResourceDescription:
          $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
        TypeName:
          type: string
      type: object
    GetResourceRequestStatusInput:
      properties:
        RequestToken:
          $ref: '#/components/x-cloud-control-schemas/RequestToken'
      required:
        - RequestToken
      title: GetResourceRequestStatusInput
      type: object
    GetResourceRequestStatusOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
    HandlerErrorCode:
      enum:
        - NotUpdatable
        - InvalidRequest
        - AccessDenied
        - InvalidCredentials
        - AlreadyExists
        - NotFound
        - ResourceConflict
        - Throttling
        - ServiceLimitExceeded
        - NotStabilized
        - GeneralServiceException
        - ServiceInternalError
        - ServiceTimeout
        - NetworkFailure
        - InternalFailure
      type: string
    HandlerFailureException: {}
    HandlerInternalFailureException: {}
    HandlerNextToken:
      maxLength: 2048
      minLength: 1
      pattern: .+
      type: string
    Identifier:
      maxLength: 1024
      minLength: 1
      pattern: .+
      type: string
    InvalidCredentialsException: {}
    InvalidRequestException: {}
    MaxResults:
      maximum: 100
      minimum: 1
      type: integer
    NetworkFailureException: {}
    NextToken:
      maxLength: 2048
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    NotStabilizedException: {}
    NotUpdatableException: {}
    Operation:
      enum:
        - CREATE
        - DELETE
        - UPDATE
      type: string
    OperationStatus:
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - CANCEL_IN_PROGRESS
        - CANCEL_COMPLETE
      type: string
    OperationStatuses:
      items:
        $ref: '#/components/x-cloud-control-schemas/OperationStatus'
      type: array
    Operations:
      items:
        $ref: '#/components/x-cloud-control-schemas/Operation'
      type: array
    PatchDocument:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    PrivateTypeException: {}
    ProgressEvent:
      example:
        ErrorCode: string
        EventTime: number
        Identifier: string
        Operation: string
        OperationStatus: string
        RequestToken: string
        ResourceModel: string
        RetryAfter: number
        StatusMessage: string
        TypeName: string
      properties:
        ErrorCode:
          type: string
        EventTime:
          type: number
        Identifier:
          type: string
        Operation:
          type: string
        OperationStatus:
          type: string
        RequestToken:
          type: string
        ResourceModel:
          type: string
        RetryAfter:
          type: number
        StatusMessage:
          type: string
        TypeName:
          type: string
      type: object
    Properties:
      format: password
      maxLength: 65536
      minLength: 1
      pattern: '[\s\S]*'
      type: string
    RequestToken:
      maxLength: 128
      minLength: 1
      pattern: '[-A-Za-z0-9+/=]+'
      type: string
    RequestTokenNotFoundException: {}
    ResourceConflictException: {}
    ResourceDescription:
      description: Represents information about a provisioned resource.
      properties:
        Identifier:
          type: string
        Properties:
          type: string
      type: object
    ResourceDescriptions:
      items:
        $ref: '#/components/x-cloud-control-schemas/ResourceDescription'
      type: array
    ResourceNotFoundException: {}
    ResourceRequestStatusFilter:
      description: The filter criteria to use in determining the requests returned.
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/OperationStatuses'
            - description: >-
                <p>The operation statuses to include in the filter.</p> <ul> <li> <p> <code>PENDING</code>: The operation has been requested, but not yet initiated.</p> </li> <li> <p> <code>IN_PROGRESS</code>: The operation is in progress.</p> </li> <li> <p> <code>SUCCESS</code>: The operation completed.</p> </li> <li> <p> <code>FAILED</code>: The operation failed.</p> </li> <li> <p> <code>CANCEL_IN_PROGRESS</code>: The operation is in the process of being canceled.</p> </li> <li> <p>
                <code>CANCEL_COMPLETE</code>: The operation has been canceled.</p> </li> </ul>
      type: object
    ResourceRequestStatusSummaries:
      items:
        $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: array
    RoleArn:
      maxLength: 2048
      minLength: 20
      pattern: arn:.+:iam::[0-9]{12}:role/.+
      type: string
    ServiceInternalErrorException: {}
    ServiceLimitExceededException: {}
    StatusMessage:
      maxLength: 1024
      minLength: 0
      pattern: '[\s\S]*'
      type: string
    ThrottlingException: {}
    Timestamp:
      format: date-time
      type: string
    TypeName:
      maxLength: 196
      minLength: 10
      pattern: '[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}::[A-Za-z0-9]{2,64}'
      type: string
    TypeNotFoundException: {}
    TypeVersionId:
      maxLength: 128
      minLength: 1
      pattern: '[A-Za-z0-9-]+'
      type: string
    UnsupportedActionException: {}
    UpdateResourceInput:
      properties:
        undefined:
          allOf:
            - $ref: '#/components/x-cloud-control-schemas/PatchDocument'
      required:
        - Identifier
        - PatchDocument
      title: UpdateResourceInput
      type: object
    UpdateResourceOutput:
      properties:
        ProgressEvent:
          $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
      type: object
  schemas:
    ResourceArn:
      description: A resource ARN.
      type: string
      pattern: ^(arn:aws.*)$
      minLength: 1
      maxLength: 256
    EndpointId:
      description: An endpoint Id.
      type: string
    SubnetMapping:
      type: object
      properties:
        SubnetId:
          description: A SubnetId.
          type: string
        IPAddressType:
          description: A IPAddressType
          type: string
      required:
        - SubnetId
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^.*$
        Value:
          type: string
          minLength: 0
          maxLength: 255
          pattern: ^.*$
      required:
        - Key
        - Value
      additionalProperties: false
    Firewall:
      type: object
      properties:
        FirewallName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        FirewallArn:
          $ref: '#/components/schemas/ResourceArn'
        FirewallId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        FirewallPolicyArn:
          $ref: '#/components/schemas/ResourceArn'
        VpcId:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^vpc-[0-9a-f]+$
        SubnetMappings:
          type: array
          minItems: 1
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SubnetMapping'
        DeleteProtection:
          type: boolean
        SubnetChangeProtection:
          type: boolean
        FirewallPolicyChangeProtection:
          type: boolean
        Description:
          type: string
          maxLength: 512
          pattern: ^.*$
        EndpointIds:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/EndpointId'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FirewallName
        - FirewallPolicyArn
        - VpcId
        - SubnetMappings
      x-stackql-resource-name: firewall
      description: Resource type definition for AWS::NetworkFirewall::Firewall
      x-type-name: AWS::NetworkFirewall::Firewall
      x-stackql-primary-identifier:
        - FirewallArn
      x-create-only-properties:
        - VpcId
        - FirewallName
      x-read-only-properties:
        - FirewallArn
        - FirewallId
        - EndpointIds
      x-required-properties:
        - FirewallName
        - FirewallPolicyArn
        - VpcId
        - SubnetMappings
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - network-firewall:ListTagsForResource
      x-required-permissions:
        create:
          - ec2:CreateVpcEndpoint
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeSubnets
          - ec2:DescribeVpcs
          - iam:CreateServiceLinkedRole
          - network-firewall:CreateFirewall
          - network-firewall:DescribeFirewallPolicy
          - network-firewall:DescribeRuleGroup
          - network-firewall:TagResource
          - network-firewall:AssociateSubnets
          - network-firewall:AssociateFirewallPolicy
          - network-firewall:DescribeFirewall
        read:
          - network-firewall:DescribeFirewall
          - network-firewall:ListTagsForResource
        update:
          - network-firewall:AssociateSubnets
          - network-firewall:DisassociateSubnets
          - network-firewall:UpdateFirewallDescription
          - network-firewall:UpdateFirewallDeleteProtection
          - network-firewall:UpdateSubnetChangeProtection
          - network-firewall:UpdateFirewallPolicyChangeProtection
          - network-firewall:AssociateFirewallPolicy
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - network-firewall:DescribeFirewall
        delete:
          - ec2:DeleteVpcEndpoints
          - ec2:DescribeRouteTables
          - logs:DescribeLogGroups
          - logs:DescribeResourcePolicies
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - network-firewall:DeleteFirewall
          - network-firewall:UntagResource
          - network-firewall:DescribeFirewall
        list:
          - network-firewall:ListFirewalls
    FirewallPolicy:
      type: object
      properties:
        FirewallPolicyName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        FirewallPolicyArn:
          $ref: '#/components/schemas/ResourceArn'
        FirewallPolicy:
          $ref: '#/components/schemas/FirewallPolicy'
        FirewallPolicyId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        Description:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FirewallPolicyName
        - FirewallPolicy
      x-stackql-resource-name: firewall_policy
      description: Resource type definition for AWS::NetworkFirewall::FirewallPolicy
      x-type-name: AWS::NetworkFirewall::FirewallPolicy
      x-stackql-primary-identifier:
        - FirewallPolicyArn
      x-create-only-properties:
        - FirewallPolicyName
      x-read-only-properties:
        - FirewallPolicyArn
        - FirewallPolicyId
      x-required-properties:
        - FirewallPolicyName
        - FirewallPolicy
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - network-firewall:ListTagsForResource
      x-required-permissions:
        create:
          - network-firewall:CreateFirewallPolicy
          - network-firewall:DescribeFirewallPolicy
          - network-firewall:ListTLSInspectionConfigurations
          - network-firewall:TagResource
          - network-firewall:ListRuleGroups
        read:
          - network-firewall:DescribeFirewallPolicy
          - network-firewall:ListTagsForResources
        update:
          - network-firewall:UpdateFirewallPolicy
          - network-firewall:DescribeFirewallPolicy
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - network-firewall:ListRuleGroups
          - network-firewall:ListTLSInspectionConfigurations
        delete:
          - network-firewall:DeleteFirewallPolicy
          - network-firewall:DescribeFirewallPolicy
          - network-firewall:UntagResource
        list:
          - network-firewall:ListFirewallPolicies
    RuleVariables:
      type: object
      properties:
        IPSets:
          type: object
          x-patternProperties:
            ^[A-Za-z0-9_]{1,32}$:
              $ref: '#/components/schemas/IPSet'
          additionalProperties: false
        PortSets:
          type: object
          x-patternProperties:
            ^[A-Za-z0-9_]{1,32}$:
              $ref: '#/components/schemas/PortSet'
          additionalProperties: false
      additionalProperties: false
    CustomAction:
      type: object
      properties:
        ActionName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9]+$
        ActionDefinition:
          $ref: '#/components/schemas/ActionDefinition'
      required:
        - ActionName
        - ActionDefinition
      additionalProperties: false
    ActionDefinition:
      type: object
      properties:
        PublishMetricAction:
          $ref: '#/components/schemas/PublishMetricAction'
      additionalProperties: false
    PublishMetricAction:
      type: object
      properties:
        Dimensions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Dimension'
      required:
        - Dimensions
      additionalProperties: false
    Dimension:
      type: object
      properties:
        Value:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_ ]+$
      required:
        - Value
      additionalProperties: false
    StatefulRuleGroupReference:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
        Priority:
          $ref: '#/components/schemas/Priority'
        Override:
          $ref: '#/components/schemas/StatefulRuleGroupOverride'
      required:
        - ResourceArn
      additionalProperties: false
    StatelessRuleGroupReference:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
        Priority:
          $ref: '#/components/schemas/Priority'
      required:
        - ResourceArn
        - Priority
      additionalProperties: false
    Priority:
      type: integer
      minimum: 1
      maximum: 65535
    VariableDefinition:
      type: string
      minLength: 1
      pattern: ^.*$
    IPSet:
      type: object
      properties:
        Definition:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VariableDefinition'
      additionalProperties: false
    StatefulRuleGroupOverride:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/OverrideAction'
      additionalProperties: false
    OverrideAction:
      type: string
      enum:
        - DROP_TO_ALERT
    StatefulEngineOptions:
      type: object
      properties:
        RuleOrder:
          $ref: '#/components/schemas/RuleOrder'
        StreamExceptionPolicy:
          $ref: '#/components/schemas/StreamExceptionPolicy'
        FlowTimeouts:
          type: object
          properties:
            TcpIdleTimeoutSeconds:
              type: integer
              minimum: 60
              maximum: 6000
          additionalProperties: false
      additionalProperties: false
    RuleOrder:
      type: string
      enum:
        - DEFAULT_ACTION_ORDER
        - STRICT_ORDER
    StreamExceptionPolicy:
      type: string
      enum:
        - DROP
        - CONTINUE
        - REJECT
    LoggingConfiguration:
      type: object
      properties:
        FirewallName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        FirewallArn:
          $ref: '#/components/schemas/ResourceArn'
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
      required:
        - FirewallArn
        - LoggingConfiguration
      x-stackql-resource-name: logging_configuration
      description: Resource type definition for AWS::NetworkFirewall::LoggingConfiguration
      x-type-name: AWS::NetworkFirewall::LoggingConfiguration
      x-stackql-primary-identifier:
        - FirewallArn
      x-create-only-properties:
        - FirewallName
        - FirewallArn
      x-required-properties:
        - FirewallArn
        - LoggingConfiguration
      x-tagging:
        taggable: false
      x-required-permissions:
        create:
          - logs:CreateLogDelivery
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - iam:CreateServiceLinkedRole
          - firehose:TagDeliveryStream
          - network-firewall:UpdateLoggingConfiguration
          - network-firewall:DescribeLoggingConfiguration
        read:
          - logs:GetLogDelivery
          - logs:ListLogDeliveries
          - network-firewall:DescribeLoggingConfiguration
        update:
          - logs:CreateLogDelivery
          - logs:DeleteLogDelivery
          - logs:GetLogDelivery
          - logs:UpdateLogDelivery
          - logs:ListLogDeliveries
          - s3:PutBucketPolicy
          - s3:GetBucketPolicy
          - logs:PutResourcePolicy
          - logs:DescribeResourcePolicies
          - logs:DescribeLogGroups
          - iam:CreateServiceLinkedRole
          - firehose:TagDeliveryStream
          - network-firewall:UpdateLoggingConfiguration
          - network-firewall:DescribeLoggingConfiguration
        delete:
          - logs:DeleteLogDelivery
          - logs:ListLogDeliveries
          - logs:GetLogDelivery
          - network-firewall:UpdateLoggingConfiguration
          - network-firewall:DescribeLoggingConfiguration
    LogDestinationConfig:
      type: object
      properties:
        LogType:
          type: string
          enum:
            - ALERT
            - FLOW
            - TLS
        LogDestinationType:
          type: string
          enum:
            - S3
            - CloudWatchLogs
            - KinesisDataFirehose
        LogDestination:
          type: object
          description: A key-value pair to configure the logDestinations.
          x-patternProperties:
            ^[0-9A-Za-z.\-_@\/]+$:
              type: string
              minLength: 1
              maxLength: 1024
          minProperties: 1
          additionalProperties: false
      required:
        - LogType
        - LogDestinationType
        - LogDestination
      additionalProperties: false
    RulesString:
      type: string
      minLength: 0
      maxLength: 1000000
    RuleGroup:
      type: object
      properties:
        RuleGroupName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        RuleGroupArn:
          $ref: '#/components/schemas/ResourceArn'
        RuleGroupId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        RuleGroup:
          $ref: '#/components/schemas/RuleGroup'
        Type:
          type: string
          enum:
            - STATELESS
            - STATEFUL
        Capacity:
          type: integer
        Description:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Type
        - Capacity
        - RuleGroupName
      x-stackql-resource-name: rule_group
      description: Resource type definition for AWS::NetworkFirewall::RuleGroup
      x-type-name: AWS::NetworkFirewall::RuleGroup
      x-stackql-primary-identifier:
        - RuleGroupArn
      x-create-only-properties:
        - RuleGroupName
        - Capacity
        - Type
      x-read-only-properties:
        - RuleGroupArn
        - RuleGroupId
      x-required-properties:
        - Type
        - Capacity
        - RuleGroupName
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - network-firewall:ListTagsForResource
      x-required-permissions:
        create:
          - network-firewall:CreateRuleGroup
          - network-firewall:DescribeRuleGroup
          - network-firewall:TagResource
          - network-firewall:ListRuleGroups
          - iam:CreateServiceLinkedRole
          - ec2:GetManagedPrefixListEntries
        read:
          - network-firewall:DescribeRuleGroup
          - network-firewall:ListTagsForResources
        update:
          - network-firewall:UpdateRuleGroup
          - network-firewall:DescribeRuleGroup
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - iam:CreateServiceLinkedRole
          - ec2:GetManagedPrefixListEntries
        delete:
          - network-firewall:DeleteRuleGroup
          - network-firewall:DescribeRuleGroup
          - network-firewall:UntagResource
        list:
          - network-firewall:ListRuleGroups
    PortSet:
      type: object
      properties:
        Definition:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VariableDefinition'
      additionalProperties: false
    ReferenceSets:
      type: object
      properties:
        IPSetReferences:
          type: object
          x-patternProperties:
            ^[A-Za-z0-9_]{1,32}$:
              $ref: '#/components/schemas/IPSetReference'
          additionalProperties: false
      additionalProperties: false
    IPSetReference:
      type: object
      properties:
        ReferenceArn:
          $ref: '#/components/schemas/ResourceArn'
      additionalProperties: false
    RulesSource:
      type: object
      properties:
        RulesString:
          $ref: '#/components/schemas/RulesString'
        RulesSourceList:
          $ref: '#/components/schemas/RulesSourceList'
        StatefulRules:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/StatefulRule'
        StatelessRulesAndCustomActions:
          $ref: '#/components/schemas/StatelessRulesAndCustomActions'
      additionalProperties: false
    RulesSourceList:
      type: object
      properties:
        Targets:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            type: string
        TargetTypes:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TargetType'
        GeneratedRulesType:
          $ref: '#/components/schemas/GeneratedRulesType'
      required:
        - Targets
        - TargetTypes
        - GeneratedRulesType
      additionalProperties: false
    TargetType:
      type: string
      enum:
        - TLS_SNI
        - HTTP_HOST
    GeneratedRulesType:
      type: string
      enum:
        - ALLOWLIST
        - DENYLIST
    StatefulRule:
      type: object
      properties:
        Action:
          type: string
          enum:
            - PASS
            - DROP
            - ALERT
            - REJECT
        Header:
          $ref: '#/components/schemas/Header'
        RuleOptions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/RuleOption'
      required:
        - Action
        - Header
        - RuleOptions
      additionalProperties: false
    Header:
      type: object
      properties:
        Protocol:
          type: string
          enum:
            - IP
            - TCP
            - UDP
            - ICMP
            - HTTP
            - FTP
            - TLS
            - SMB
            - DNS
            - DCERPC
            - SSH
            - SMTP
            - IMAP
            - MSN
            - KRB5
            - IKEV2
            - TFTP
            - NTP
            - DHCP
        Source:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^.*$
        SourcePort:
          $ref: '#/components/schemas/Port'
        Direction:
          type: string
          enum:
            - FORWARD
            - ANY
        Destination:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^.*$
        DestinationPort:
          $ref: '#/components/schemas/Port'
      required:
        - Protocol
        - Source
        - SourcePort
        - Direction
        - Destination
        - DestinationPort
      additionalProperties: false
    RuleOption:
      type: object
      properties:
        Keyword:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^.*$
        Settings:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Setting'
      required:
        - Keyword
      additionalProperties: false
    Setting:
      type: string
      minLength: 1
      maxLength: 8192
      pattern: ^.*$
    Port:
      type: string
      minLength: 1
      maxLength: 1024
      pattern: ^.*$
    StatelessRulesAndCustomActions:
      type: object
      properties:
        StatelessRules:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/StatelessRule'
        CustomActions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomAction'
      required:
        - StatelessRules
      additionalProperties: false
    StatelessRule:
      type: object
      properties:
        RuleDefinition:
          $ref: '#/components/schemas/RuleDefinition'
        Priority:
          type: integer
          minimum: 1
          maximum: 65535
      required:
        - RuleDefinition
        - Priority
      additionalProperties: false
    RuleDefinition:
      type: object
      properties:
        MatchAttributes:
          $ref: '#/components/schemas/MatchAttributes'
        Actions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            type: string
      required:
        - MatchAttributes
        - Actions
      additionalProperties: false
    MatchAttributes:
      type: object
      properties:
        Sources:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Address'
        Destinations:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Address'
        SourcePorts:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PortRange'
        DestinationPorts:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PortRange'
        Protocols:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ProtocolNumber'
        TCPFlags:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TCPFlagField'
      additionalProperties: false
    Address:
      type: object
      properties:
        AddressDefinition:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^([a-fA-F\d:\.]+/\d{1,3})$
      required:
        - AddressDefinition
      additionalProperties: false
    PortRange:
      type: object
      properties:
        FromPort:
          $ref: '#/components/schemas/PortRangeBound'
        ToPort:
          $ref: '#/components/schemas/PortRangeBound'
      required:
        - FromPort
        - ToPort
      additionalProperties: false
    PortRangeBound:
      type: integer
      minimum: 0
      maximum: 65535
    ProtocolNumber:
      type: integer
      minimum: 0
      maximum: 255
    TCPFlagField:
      type: object
      properties:
        Flags:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TCPFlag'
        Masks:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TCPFlag'
      required:
        - Flags
      additionalProperties: false
    TCPFlag:
      type: string
      enum:
        - FIN
        - SYN
        - RST
        - PSH
        - ACK
        - URG
        - ECE
        - CWR
    StatefulRuleOptions:
      type: object
      properties:
        RuleOrder:
          $ref: '#/components/schemas/RuleOrder'
      additionalProperties: false
    TLSInspectionConfiguration:
      type: object
      properties:
        TLSInspectionConfigurationName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        TLSInspectionConfigurationArn:
          $ref: '#/components/schemas/ResourceArn'
        TLSInspectionConfiguration:
          $ref: '#/components/schemas/TLSInspectionConfiguration'
        TLSInspectionConfigurationId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        Description:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - TLSInspectionConfigurationName
        - TLSInspectionConfiguration
      x-stackql-resource-name: tls_inspection_configuration
      description: Resource type definition for AWS::NetworkFirewall::TLSInspectionConfiguration
      x-type-name: AWS::NetworkFirewall::TLSInspectionConfiguration
      x-stackql-primary-identifier:
        - TLSInspectionConfigurationArn
      x-create-only-properties:
        - TLSInspectionConfigurationName
      x-read-only-properties:
        - TLSInspectionConfigurationArn
        - TLSInspectionConfigurationId
      x-required-properties:
        - TLSInspectionConfigurationName
        - TLSInspectionConfiguration
      x-tagging:
        taggable: true
        tagOnCreate: true
        tagUpdatable: true
        cloudFormationSystemTags: true
        tagProperty: /properties/Tags
        permissions:
          - network-firewall:TagResource
          - network-firewall:UntagResource
          - network-firewall:ListTagsForResource
      x-required-permissions:
        create:
          - iam:CreateServiceLinkedRole
          - network-firewall:CreateTLSInspectionConfiguration
          - network-firewall:DescribeTLSInspectionConfiguration
          - network-firewall:TagResource
        read:
          - network-firewall:DescribeTLSInspectionConfiguration
          - network-firewall:ListTagsForResources
        update:
          - network-firewall:UpdateTLSInspectionConfiguration
          - network-firewall:DescribeTLSInspectionConfiguration
          - network-firewall:TagResource
          - network-firewall:UntagResource
        delete:
          - network-firewall:DeleteTLSInspectionConfiguration
          - network-firewall:DescribeTLSInspectionConfiguration
          - network-firewall:UntagResource
        list:
          - network-firewall:ListTLSInspectionConfigurations
    ServerCertificateConfiguration:
      type: object
      properties:
        ServerCertificates:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ServerCertificate'
        Scopes:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ServerCertificateScope'
        CertificateAuthorityArn:
          $ref: '#/components/schemas/ResourceArn'
        CheckCertificateRevocationStatus:
          type: object
          properties:
            RevokedStatusAction:
              $ref: '#/components/schemas/RevokedStatusAction'
            UnknownStatusAction:
              $ref: '#/components/schemas/UnknownStatusAction'
          additionalProperties: false
      additionalProperties: false
    RevokedStatusAction:
      type: string
      enum:
        - PASS
        - DROP
        - REJECT
    UnknownStatusAction:
      type: string
      enum:
        - PASS
        - DROP
        - REJECT
    ServerCertificate:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
      additionalProperties: false
    ServerCertificateScope:
      type: object
      properties:
        Sources:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Address'
        Destinations:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Address'
        SourcePorts:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PortRange'
        DestinationPorts:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PortRange'
        Protocols:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ProtocolNumber'
      additionalProperties: false
    CreateFirewallRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FirewallName:
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^[a-zA-Z0-9-]+$
            FirewallArn:
              $ref: '#/components/schemas/ResourceArn'
            FirewallId:
              type: string
              minLength: 36
              maxLength: 36
              pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
            FirewallPolicyArn:
              $ref: '#/components/schemas/ResourceArn'
            VpcId:
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^vpc-[0-9a-f]+$
            SubnetMappings:
              type: array
              minItems: 1
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/SubnetMapping'
            DeleteProtection:
              type: boolean
            SubnetChangeProtection:
              type: boolean
            FirewallPolicyChangeProtection:
              type: boolean
            Description:
              type: string
              maxLength: 512
              pattern: ^.*$
            EndpointIds:
              type: array
              x-insertionOrder: false
              items:
                $ref: '#/components/schemas/EndpointId'
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateFirewallRequest
      type: object
      required: []
    CreateFirewallPolicyRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FirewallPolicyName:
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^[a-zA-Z0-9-]+$
            FirewallPolicyArn:
              $ref: '#/components/schemas/ResourceArn'
            FirewallPolicy:
              $ref: '#/components/schemas/FirewallPolicy'
            FirewallPolicyId:
              type: string
              minLength: 36
              maxLength: 36
              pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
            Description:
              type: string
              minLength: 1
              maxLength: 512
              pattern: ^.*$
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateFirewallPolicyRequest
      type: object
      required: []
    CreateLoggingConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            FirewallName:
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^[a-zA-Z0-9-]+$
            FirewallArn:
              $ref: '#/components/schemas/ResourceArn'
            LoggingConfiguration:
              $ref: '#/components/schemas/LoggingConfiguration'
          x-stackQL-stringOnly: true
      x-title: CreateLoggingConfigurationRequest
      type: object
      required: []
    CreateRuleGroupRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            RuleGroupName:
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^[a-zA-Z0-9-]+$
            RuleGroupArn:
              $ref: '#/components/schemas/ResourceArn'
            RuleGroupId:
              type: string
              minLength: 36
              maxLength: 36
              pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
            RuleGroup:
              $ref: '#/components/schemas/RuleGroup'
            Type:
              type: string
              enum:
                - STATELESS
                - STATEFUL
            Capacity:
              type: integer
            Description:
              type: string
              minLength: 1
              maxLength: 512
              pattern: ^.*$
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateRuleGroupRequest
      type: object
      required: []
    CreateTLSInspectionConfigurationRequest:
      properties:
        ClientToken:
          type: string
        RoleArn:
          type: string
        TypeName:
          type: string
        TypeVersionId:
          type: string
        DesiredState:
          type: object
          properties:
            TLSInspectionConfigurationName:
              type: string
              minLength: 1
              maxLength: 128
              pattern: ^[a-zA-Z0-9-]+$
            TLSInspectionConfigurationArn:
              $ref: '#/components/schemas/ResourceArn'
            TLSInspectionConfiguration:
              $ref: '#/components/schemas/TLSInspectionConfiguration'
            TLSInspectionConfigurationId:
              type: string
              minLength: 36
              maxLength: 36
              pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
            Description:
              type: string
              minLength: 1
              maxLength: 512
              pattern: ^.*$
            Tags:
              type: array
              x-insertionOrder: false
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Tag'
          x-stackQL-stringOnly: true
      x-title: CreateTLSInspectionConfigurationRequest
      type: object
      required: []
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  x-stackQL-resources:
    firewalls:
      name: firewalls
      id: aws.networkfirewall.firewalls
      x-cfn-schema-name: Firewall
      x-cfn-type-name: AWS::NetworkFirewall::Firewall
      x-identifiers:
        - FirewallArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__Firewall&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::Firewall"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::Firewall"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::Firewall"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/firewalls/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/firewalls/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/firewalls/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FirewallName') as firewall_name,
              JSON_EXTRACT(Properties, '$.FirewallArn') as firewall_arn,
              JSON_EXTRACT(Properties, '$.FirewallId') as firewall_id,
              JSON_EXTRACT(Properties, '$.FirewallPolicyArn') as firewall_policy_arn,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.SubnetMappings') as subnet_mappings,
              JSON_EXTRACT(Properties, '$.DeleteProtection') as delete_protection,
              JSON_EXTRACT(Properties, '$.SubnetChangeProtection') as subnet_change_protection,
              JSON_EXTRACT(Properties, '$.FirewallPolicyChangeProtection') as firewall_policy_change_protection,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EndpointIds') as endpoint_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::Firewall'
              AND data__Identifier = '<FirewallArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FirewallName') as firewall_name,
                JSON_EXTRACT(detail.Properties, '$.FirewallArn') as firewall_arn,
                JSON_EXTRACT(detail.Properties, '$.FirewallId') as firewall_id,
                JSON_EXTRACT(detail.Properties, '$.FirewallPolicyArn') as firewall_policy_arn,
                JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id,
                JSON_EXTRACT(detail.Properties, '$.SubnetMappings') as subnet_mappings,
                JSON_EXTRACT(detail.Properties, '$.DeleteProtection') as delete_protection,
                JSON_EXTRACT(detail.Properties, '$.SubnetChangeProtection') as subnet_change_protection,
                JSON_EXTRACT(detail.Properties, '$.FirewallPolicyChangeProtection') as firewall_policy_change_protection,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.EndpointIds') as endpoint_ids,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::Firewall'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::Firewall'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FirewallName') as firewall_name,
                  json_extract_path_text(Properties, 'FirewallArn') as firewall_arn,
                  json_extract_path_text(Properties, 'FirewallId') as firewall_id,
                  json_extract_path_text(Properties, 'FirewallPolicyArn') as firewall_policy_arn,
                  json_extract_path_text(Properties, 'VpcId') as vpc_id,
                  json_extract_path_text(Properties, 'SubnetMappings') as subnet_mappings,
                  json_extract_path_text(Properties, 'DeleteProtection') as delete_protection,
                  json_extract_path_text(Properties, 'SubnetChangeProtection') as subnet_change_protection,
                  json_extract_path_text(Properties, 'FirewallPolicyChangeProtection') as firewall_policy_change_protection,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'EndpointIds') as endpoint_ids,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::Firewall'
                  AND data__Identifier = '<FirewallArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FirewallName') as firewall_name,
                    json_extract_path_text(detail.Properties, 'FirewallArn') as firewall_arn,
                    json_extract_path_text(detail.Properties, 'FirewallId') as firewall_id,
                    json_extract_path_text(detail.Properties, 'FirewallPolicyArn') as firewall_policy_arn,
                    json_extract_path_text(detail.Properties, 'VpcId') as vpc_id,
                    json_extract_path_text(detail.Properties, 'SubnetMappings') as subnet_mappings,
                    json_extract_path_text(detail.Properties, 'DeleteProtection') as delete_protection,
                    json_extract_path_text(detail.Properties, 'SubnetChangeProtection') as subnet_change_protection,
                    json_extract_path_text(detail.Properties, 'FirewallPolicyChangeProtection') as firewall_policy_change_protection,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'EndpointIds') as endpoint_ids,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::NetworkFirewall::Firewall'
                    AND detail.data__TypeName = 'AWS::NetworkFirewall::Firewall'
                    AND listing.region = 'us-east-1'
    firewalls_list_only:
      name: firewalls_list_only
      id: aws.networkfirewall.firewalls_list_only
      x-cfn-schema-name: Firewall
      x-cfn-type-name: AWS::NetworkFirewall::Firewall
      x-identifiers:
        - FirewallArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallArn') as firewall_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::Firewall'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FirewallArn') as firewall_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::Firewall'
                AND region = 'us-east-1'
    firewall_tags:
      name: firewall_tags
      id: aws.networkfirewall.firewall_tags
      x-cfn-schema-name: Firewall
      x-cfn-type-name: AWS::NetworkFirewall::Firewall
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.FirewallName') as firewall_name,
              JSON_EXTRACT(detail.Properties, '$.FirewallArn') as firewall_arn,
              JSON_EXTRACT(detail.Properties, '$.FirewallId') as firewall_id,
              JSON_EXTRACT(detail.Properties, '$.FirewallPolicyArn') as firewall_policy_arn,
              JSON_EXTRACT(detail.Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(detail.Properties, '$.SubnetMappings') as subnet_mappings,
              JSON_EXTRACT(detail.Properties, '$.DeleteProtection') as delete_protection,
              JSON_EXTRACT(detail.Properties, '$.SubnetChangeProtection') as subnet_change_protection,
              JSON_EXTRACT(detail.Properties, '$.FirewallPolicyChangeProtection') as firewall_policy_change_protection,
              JSON_EXTRACT(detail.Properties, '$.Description') as description,
              JSON_EXTRACT(detail.Properties, '$.EndpointIds') as endpoint_ids
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::NetworkFirewall::Firewall'
              AND detail.data__TypeName = 'AWS::NetworkFirewall::Firewall'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'FirewallName') as firewall_name,
                json_extract_path_text(detail.Properties, 'FirewallArn') as firewall_arn,
                json_extract_path_text(detail.Properties, 'FirewallId') as firewall_id,
                json_extract_path_text(detail.Properties, 'FirewallPolicyArn') as firewall_policy_arn,
                json_extract_path_text(detail.Properties, 'VpcId') as vpc_id,
                json_extract_path_text(detail.Properties, 'SubnetMappings') as subnet_mappings,
                json_extract_path_text(detail.Properties, 'DeleteProtection') as delete_protection,
                json_extract_path_text(detail.Properties, 'SubnetChangeProtection') as subnet_change_protection,
                json_extract_path_text(detail.Properties, 'FirewallPolicyChangeProtection') as firewall_policy_change_protection,
                json_extract_path_text(detail.Properties, 'Description') as description,
                json_extract_path_text(detail.Properties, 'EndpointIds') as endpoint_ids
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::Firewall'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::Firewall'
                AND listing.region = 'us-east-1'
    firewall_policies:
      name: firewall_policies
      id: aws.networkfirewall.firewall_policies
      x-cfn-schema-name: FirewallPolicy
      x-cfn-type-name: AWS::NetworkFirewall::FirewallPolicy
      x-identifiers:
        - FirewallPolicyArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__FirewallPolicy&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::FirewallPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::FirewallPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::FirewallPolicy"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/firewall_policies/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FirewallPolicyName') as firewall_policy_name,
              JSON_EXTRACT(Properties, '$.FirewallPolicyArn') as firewall_policy_arn,
              JSON_EXTRACT(Properties, '$.FirewallPolicy') as firewall_policy,
              JSON_EXTRACT(Properties, '$.FirewallPolicyId') as firewall_policy_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
              AND data__Identifier = '<FirewallPolicyArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.FirewallPolicyName') as firewall_policy_name,
                JSON_EXTRACT(detail.Properties, '$.FirewallPolicyArn') as firewall_policy_arn,
                JSON_EXTRACT(detail.Properties, '$.FirewallPolicy') as firewall_policy,
                JSON_EXTRACT(detail.Properties, '$.FirewallPolicyId') as firewall_policy_id,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'FirewallPolicyName') as firewall_policy_name,
                  json_extract_path_text(Properties, 'FirewallPolicyArn') as firewall_policy_arn,
                  json_extract_path_text(Properties, 'FirewallPolicy') as firewall_policy,
                  json_extract_path_text(Properties, 'FirewallPolicyId') as firewall_policy_id,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                  AND data__Identifier = '<FirewallPolicyArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'FirewallPolicyName') as firewall_policy_name,
                    json_extract_path_text(detail.Properties, 'FirewallPolicyArn') as firewall_policy_arn,
                    json_extract_path_text(detail.Properties, 'FirewallPolicy') as firewall_policy,
                    json_extract_path_text(detail.Properties, 'FirewallPolicyId') as firewall_policy_id,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                    AND detail.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                    AND listing.region = 'us-east-1'
    firewall_policies_list_only:
      name: firewall_policies_list_only
      id: aws.networkfirewall.firewall_policies_list_only
      x-cfn-schema-name: FirewallPolicy
      x-cfn-type-name: AWS::NetworkFirewall::FirewallPolicy
      x-identifiers:
        - FirewallPolicyArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallPolicyArn') as firewall_policy_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'FirewallPolicyArn') as firewall_policy_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                AND region = 'us-east-1'
    firewall_policy_tags:
      name: firewall_policy_tags
      id: aws.networkfirewall.firewall_policy_tags
      x-cfn-schema-name: FirewallPolicy
      x-cfn-type-name: AWS::NetworkFirewall::FirewallPolicy
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.FirewallPolicyName') as firewall_policy_name,
              JSON_EXTRACT(detail.Properties, '$.FirewallPolicyArn') as firewall_policy_arn,
              JSON_EXTRACT(detail.Properties, '$.FirewallPolicy') as firewall_policy,
              JSON_EXTRACT(detail.Properties, '$.FirewallPolicyId') as firewall_policy_id,
              JSON_EXTRACT(detail.Properties, '$.Description') as description
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
              AND detail.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'FirewallPolicyName') as firewall_policy_name,
                json_extract_path_text(detail.Properties, 'FirewallPolicyArn') as firewall_policy_arn,
                json_extract_path_text(detail.Properties, 'FirewallPolicy') as firewall_policy,
                json_extract_path_text(detail.Properties, 'FirewallPolicyId') as firewall_policy_id,
                json_extract_path_text(detail.Properties, 'Description') as description
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
                AND listing.region = 'us-east-1'
    logging_configurations:
      name: logging_configurations
      id: aws.networkfirewall.logging_configurations
      x-cfn-schema-name: LoggingConfiguration
      x-cfn-type-name: AWS::NetworkFirewall::LoggingConfiguration
      x-identifiers:
        - FirewallArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__LoggingConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::LoggingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::LoggingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::LoggingConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/logging_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/logging_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/logging_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.FirewallName') as firewall_name,
              JSON_EXTRACT(Properties, '$.FirewallArn') as firewall_arn,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration') as logging_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::LoggingConfiguration'
              AND data__Identifier = '<FirewallArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
              ddl: |-
                SELECT
                region,
                data__Identifier,
                json_extract_path_text(Properties, 'FirewallName') as firewall_name,
                json_extract_path_text(Properties, 'FirewallArn') as firewall_arn,
                json_extract_path_text(Properties, 'LoggingConfiguration') as logging_configuration
                FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::LoggingConfiguration'
                AND data__Identifier = '<FirewallArn>'
                AND region = 'us-east-1'
    rule_groups:
      name: rule_groups
      id: aws.networkfirewall.rule_groups
      x-cfn-schema-name: RuleGroup
      x-cfn-type-name: AWS::NetworkFirewall::RuleGroup
      x-identifiers:
        - RuleGroupArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__RuleGroup&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::RuleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::RuleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::RuleGroup"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/rule_groups/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/rule_groups/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/rule_groups/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.RuleGroupName') as rule_group_name,
              JSON_EXTRACT(Properties, '$.RuleGroupArn') as rule_group_arn,
              JSON_EXTRACT(Properties, '$.RuleGroupId') as rule_group_id,
              JSON_EXTRACT(Properties, '$.RuleGroup') as rule_group,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
              AND data__Identifier = '<RuleGroupArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.RuleGroupName') as rule_group_name,
                JSON_EXTRACT(detail.Properties, '$.RuleGroupArn') as rule_group_arn,
                JSON_EXTRACT(detail.Properties, '$.RuleGroupId') as rule_group_id,
                JSON_EXTRACT(detail.Properties, '$.RuleGroup') as rule_group,
                JSON_EXTRACT(detail.Properties, '$.Type') as type,
                JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'RuleGroupName') as rule_group_name,
                  json_extract_path_text(Properties, 'RuleGroupArn') as rule_group_arn,
                  json_extract_path_text(Properties, 'RuleGroupId') as rule_group_id,
                  json_extract_path_text(Properties, 'RuleGroup') as rule_group,
                  json_extract_path_text(Properties, 'Type') as type,
                  json_extract_path_text(Properties, 'Capacity') as capacity,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                  AND data__Identifier = '<RuleGroupArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'RuleGroupName') as rule_group_name,
                    json_extract_path_text(detail.Properties, 'RuleGroupArn') as rule_group_arn,
                    json_extract_path_text(detail.Properties, 'RuleGroupId') as rule_group_id,
                    json_extract_path_text(detail.Properties, 'RuleGroup') as rule_group,
                    json_extract_path_text(detail.Properties, 'Type') as type,
                    json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                    AND detail.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                    AND listing.region = 'us-east-1'
    rule_groups_list_only:
      name: rule_groups_list_only
      id: aws.networkfirewall.rule_groups_list_only
      x-cfn-schema-name: RuleGroup
      x-cfn-type-name: AWS::NetworkFirewall::RuleGroup
      x-identifiers:
        - RuleGroupArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleGroupArn') as rule_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'RuleGroupArn') as rule_group_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                AND region = 'us-east-1'
    rule_group_tags:
      name: rule_group_tags
      id: aws.networkfirewall.rule_group_tags
      x-cfn-schema-name: RuleGroup
      x-cfn-type-name: AWS::NetworkFirewall::RuleGroup
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.RuleGroupName') as rule_group_name,
              JSON_EXTRACT(detail.Properties, '$.RuleGroupArn') as rule_group_arn,
              JSON_EXTRACT(detail.Properties, '$.RuleGroupId') as rule_group_id,
              JSON_EXTRACT(detail.Properties, '$.RuleGroup') as rule_group,
              JSON_EXTRACT(detail.Properties, '$.Type') as type,
              JSON_EXTRACT(detail.Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(detail.Properties, '$.Description') as description
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
              AND detail.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'RuleGroupName') as rule_group_name,
                json_extract_path_text(detail.Properties, 'RuleGroupArn') as rule_group_arn,
                json_extract_path_text(detail.Properties, 'RuleGroupId') as rule_group_id,
                json_extract_path_text(detail.Properties, 'RuleGroup') as rule_group,
                json_extract_path_text(detail.Properties, 'Type') as type,
                json_extract_path_text(detail.Properties, 'Capacity') as capacity,
                json_extract_path_text(detail.Properties, 'Description') as description
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
                AND listing.region = 'us-east-1'
    tls_inspection_configurations:
      name: tls_inspection_configurations
      id: aws.networkfirewall.tls_inspection_configurations
      x-cfn-schema-name: TLSInspectionConfiguration
      x-cfn-type-name: AWS::NetworkFirewall::TLSInspectionConfiguration
      x-identifiers:
        - TLSInspectionConfigurationArn
      x-type: cloud_control
      methods:
        create_resource:
          config:
            requestBodyTranslate:
              algorithm: naive_DesiredState
          operation:
            $ref: '#/paths/~1?Action=CreateResource&Version=2021-09-30&__TLSInspectionConfiguration&__detailTransformed=true/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::TLSInspectionConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        update_resource:
          operation:
            $ref: '#/paths/~1?Action=UpdateResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::TLSInspectionConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
        delete_resource:
          operation:
            $ref: '#/paths/~1?Action=DeleteResource&Version=2021-09-30/post'
          request:
            mediaType: application/x-amz-json-1.0
            base: |-
              {
                "TypeName": "AWS::NetworkFirewall::TLSInspectionConfiguration"
              }
          response:
            mediaType: application/json
            openAPIDocKey: '200'
      sqlVerbs:
        insert:
          - $ref: '#/components/x-stackQL-resources/tls_inspection_configurations/methods/create_resource'
        delete:
          - $ref: '#/components/x-stackQL-resources/tls_inspection_configurations/methods/delete_resource'
        update:
          - $ref: '#/components/x-stackQL-resources/tls_inspection_configurations/methods/update_resource'
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3" && requiredParams == [ data__Identifier ]
            ddl: |-
              SELECT
              region,
              data__Identifier,
              JSON_EXTRACT(Properties, '$.TLSInspectionConfigurationName') as tls_inspection_configuration_name,
              JSON_EXTRACT(Properties, '$.TLSInspectionConfigurationArn') as tls_inspection_configuration_arn,
              JSON_EXTRACT(Properties, '$.TLSInspectionConfiguration') as tls_inspection_configuration,
              JSON_EXTRACT(Properties, '$.TLSInspectionConfigurationId') as tls_inspection_configuration_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
              AND data__Identifier = '<TLSInspectionConfigurationArn>'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "sqlite3"
              ddl: |-
                SELECT
                detail.region,
                JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfigurationName') as tls_inspection_configuration_name,
                JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfigurationArn') as tls_inspection_configuration_arn,
                JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfiguration') as tls_inspection_configuration,
                JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfigurationId') as tls_inspection_configuration_id,
                JSON_EXTRACT(detail.Properties, '$.Description') as description,
                JSON_EXTRACT(detail.Properties, '$.Tags') as tags
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                AND listing.region = 'us-east-1'
              fallback:
                predicate: sqlDialect == "postgres" && requiredParams == [ data__Identifier ]
                ddl: |-
                  SELECT
                  region,
                  data__Identifier,
                  json_extract_path_text(Properties, 'TLSInspectionConfigurationName') as tls_inspection_configuration_name,
                  json_extract_path_text(Properties, 'TLSInspectionConfigurationArn') as tls_inspection_configuration_arn,
                  json_extract_path_text(Properties, 'TLSInspectionConfiguration') as tls_inspection_configuration,
                  json_extract_path_text(Properties, 'TLSInspectionConfigurationId') as tls_inspection_configuration_id,
                  json_extract_path_text(Properties, 'Description') as description,
                  json_extract_path_text(Properties, 'Tags') as tags
                  FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                  AND data__Identifier = '<TLSInspectionConfigurationArn>'
                  AND region = 'us-east-1'
                fallback:
                  predicate: sqlDialect == "postgres"
                  ddl: |-
                    SELECT
                    detail.region,
                    json_extract_path_text(detail.Properties, 'TLSInspectionConfigurationName') as tls_inspection_configuration_name,
                    json_extract_path_text(detail.Properties, 'TLSInspectionConfigurationArn') as tls_inspection_configuration_arn,
                    json_extract_path_text(detail.Properties, 'TLSInspectionConfiguration') as tls_inspection_configuration,
                    json_extract_path_text(detail.Properties, 'TLSInspectionConfigurationId') as tls_inspection_configuration_id,
                    json_extract_path_text(detail.Properties, 'Description') as description,
                    json_extract_path_text(detail.Properties, 'Tags') as tags
                    FROM aws.cloud_control.resources listing
                    INNER JOIN aws.cloud_control.resource detail
                    ON detail.data__Identifier = listing.Identifier
                    AND detail.region = listing.region
                    WHERE listing.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                    AND detail.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                    AND listing.region = 'us-east-1'
    tls_inspection_configurations_list_only:
      name: tls_inspection_configurations_list_only
      id: aws.networkfirewall.tls_inspection_configurations_list_only
      x-cfn-schema-name: TLSInspectionConfiguration
      x-cfn-type-name: AWS::NetworkFirewall::TLSInspectionConfiguration
      x-identifiers:
        - TLSInspectionConfigurationArn
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.TLSInspectionConfigurationArn') as tls_inspection_configuration_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
              AND region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                region,
                json_extract_path_text(Properties, 'TLSInspectionConfigurationArn') as tls_inspection_configuration_arn
                FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                AND region = 'us-east-1'
    tls_inspection_configuration_tags:
      name: tls_inspection_configuration_tags
      id: aws.networkfirewall.tls_inspection_configuration_tags
      x-cfn-schema-name: TLSInspectionConfiguration
      x-cfn-type-name: AWS::NetworkFirewall::TLSInspectionConfiguration
      x-type: cloud_control_view
      methods: {}
      sqlVerbs:
        insert: []
        delete: []
        update: []
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              detail.region,
              JSON_EXTRACT(json_each.value, '$.Key') as tag_key,
              JSON_EXTRACT(json_each.value, '$.Value') as tag_value,
              JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfigurationName') as tls_inspection_configuration_name,
              JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfigurationArn') as tls_inspection_configuration_arn,
              JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfiguration') as tls_inspection_configuration,
              JSON_EXTRACT(detail.Properties, '$.TLSInspectionConfigurationId') as tls_inspection_configuration_id,
              JSON_EXTRACT(detail.Properties, '$.Description') as description
              FROM aws.cloud_control.resources listing
              INNER JOIN aws.cloud_control.resource detail
              ON detail.data__Identifier = listing.Identifier
              AND detail.region = listing.region
              ,json_each(JSON_EXTRACT(detail.Properties, '$.Tags'))
              WHERE listing.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
              AND detail.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
              AND listing.region = 'us-east-1'
            fallback:
              predicate: sqlDialect == "postgres"
              ddl: |-
                SELECT
                detail.region,
                json_extract_path_text(json_each.value, 'Key') as tag_key,
                json_extract_path_text(json_each.value, 'Value') as tag_value,
                json_extract_path_text(detail.Properties, 'TLSInspectionConfigurationName') as tls_inspection_configuration_name,
                json_extract_path_text(detail.Properties, 'TLSInspectionConfigurationArn') as tls_inspection_configuration_arn,
                json_extract_path_text(detail.Properties, 'TLSInspectionConfiguration') as tls_inspection_configuration,
                json_extract_path_text(detail.Properties, 'TLSInspectionConfigurationId') as tls_inspection_configuration_id,
                json_extract_path_text(detail.Properties, 'Description') as description
                FROM aws.cloud_control.resources listing
                INNER JOIN aws.cloud_control.resource detail
                ON detail.data__Identifier = listing.Identifier
                AND detail.region = listing.region
                ,json_array_elements_text(json_extract_path_text(detail.Properties, 'Tags'))
                WHERE listing.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                AND detail.data__TypeName = 'AWS::NetworkFirewall::TLSInspectionConfiguration'
                AND listing.region = 'us-east-1'
paths:
  /?Action=CreateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/CreateResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=DeleteResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: DeleteResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.DeleteResource
            enum:
              - CloudApiService.DeleteResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/x-cloud-control-schemas/DeleteResourceInput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/DeleteResourceOutput'
          description: Success
  /?Action=UpdateResource&Version=2021-09-30:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: UpdateResource
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.UpdateResource
            enum:
              - CloudApiService.UpdateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              properties:
                ClientName:
                  type: string
                Identifier:
                  $ref: '#/components/x-cloud-control-schemas/Identifier'
                PatchDocument:
                  type: string
                RoleArn:
                  $ref: '#/components/x-cloud-control-schemas/RoleArn'
                TypeName:
                  $ref: '#/components/x-cloud-control-schemas/TypeName'
                TypeVersionId:
                  $ref: '#/components/x-cloud-control-schemas/TypeVersionId'
              required:
                - Identifier
                - PatchDocument
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/UpdateResourceOutput'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__Firewall&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFirewall
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFirewallRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__FirewallPolicy&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateFirewallPolicy
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateFirewallPolicyRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__LoggingConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateLoggingConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateLoggingConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__RuleGroup&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateRuleGroup
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateRuleGroupRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
  /?Action=CreateResource&Version=2021-09-30&__TLSInspectionConfiguration&__detailTransformed=true:
    parameters:
      - $ref: '#/components/parameters/X-Amz-Content-Sha256'
      - $ref: '#/components/parameters/X-Amz-Date'
      - $ref: '#/components/parameters/X-Amz-Algorithm'
      - $ref: '#/components/parameters/X-Amz-Credential'
      - $ref: '#/components/parameters/X-Amz-Security-Token'
      - $ref: '#/components/parameters/X-Amz-Signature'
      - $ref: '#/components/parameters/X-Amz-SignedHeaders'
    post:
      operationId: CreateTLSInspectionConfiguration
      parameters:
        - description: Action Header
          in: header
          name: X-Amz-Target
          required: false
          schema:
            default: CloudApiService.CreateResource
            enum:
              - CloudApiService.CreateResource
            type: string
        - in: header
          name: Content-Type
          required: false
          schema:
            default: application/x-amz-json-1.0
            enum:
              - application/x-amz-json-1.0
            type: string
      requestBody:
        content:
          application/x-amz-json-1.0:
            schema:
              $ref: '#/components/schemas/CreateTLSInspectionConfigurationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/x-cloud-control-schemas/ProgressEvent'
          description: Success
x-stackQL-config:
  requestTranslate:
    algorithm: drop_double_underscore_params
  pagination:
    requestToken:
      key: NextToken
      location: body
    responseToken:
      key: NextToken
      location: body
