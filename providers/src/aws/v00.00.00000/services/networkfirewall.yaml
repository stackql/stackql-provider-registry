openapi: 3.0.0
info:
  title: NetworkFirewall
  version: 1.0.0
paths: {}
components:
  schemas:
    ResourceArn:
      description: A resource ARN.
      type: string
      pattern: ^(arn:aws.*)$
      minLength: 1
      maxLength: 256
    EndpointId:
      description: An endpoint Id.
      type: string
    SubnetMapping:
      type: object
      properties:
        SubnetId:
          description: A SubnetId.
          type: string
        IPAddressType:
          description: A IPAddressType
          type: string
      required:
        - SubnetId
      additionalProperties: false
    Tag:
      type: object
      properties:
        Key:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^.*$
        Value:
          type: string
          minLength: 0
          maxLength: 255
          pattern: ^.*$
      required:
        - Key
        - Value
      additionalProperties: false
    Firewall:
      type: object
      properties:
        FirewallName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        FirewallArn:
          $ref: '#/components/schemas/ResourceArn'
        FirewallId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        FirewallPolicyArn:
          $ref: '#/components/schemas/ResourceArn'
        VpcId:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^vpc-[0-9a-f]+$
        SubnetMappings:
          type: array
          minItems: 1
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/SubnetMapping'
        DeleteProtection:
          type: boolean
        SubnetChangeProtection:
          type: boolean
        FirewallPolicyChangeProtection:
          type: boolean
        Description:
          type: string
          maxLength: 512
          pattern: ^.*$
        EndpointIds:
          type: array
          x-insertionOrder: false
          items:
            $ref: '#/components/schemas/EndpointId'
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FirewallName
        - FirewallPolicyArn
        - VpcId
        - SubnetMappings
      x-stackql-resource-name: firewall
      x-stackql-primaryIdentifier:
        - FirewallArn
    FirewallPolicy:
      type: object
      properties:
        FirewallPolicyName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        FirewallPolicyArn:
          $ref: '#/components/schemas/ResourceArn'
        FirewallPolicy:
          $ref: '#/components/schemas/FirewallPolicy'
        FirewallPolicyId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        Description:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - FirewallPolicyName
        - FirewallPolicy
      x-stackql-resource-name: firewall_policy
      x-stackql-primaryIdentifier:
        - FirewallPolicyArn
    CustomAction:
      type: object
      properties:
        ActionName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9]+$
        ActionDefinition:
          $ref: '#/components/schemas/ActionDefinition'
      required:
        - ActionName
        - ActionDefinition
      additionalProperties: false
    ActionDefinition:
      type: object
      properties:
        PublishMetricAction:
          $ref: '#/components/schemas/PublishMetricAction'
      additionalProperties: false
    PublishMetricAction:
      type: object
      properties:
        Dimensions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Dimension'
      required:
        - Dimensions
      additionalProperties: false
    Dimension:
      type: object
      properties:
        Value:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-_ ]+$
      required:
        - Value
      additionalProperties: false
    StatefulRuleGroupReference:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
        Priority:
          $ref: '#/components/schemas/Priority'
        Override:
          $ref: '#/components/schemas/StatefulRuleGroupOverride'
      required:
        - ResourceArn
      additionalProperties: false
    StatelessRuleGroupReference:
      type: object
      properties:
        ResourceArn:
          $ref: '#/components/schemas/ResourceArn'
        Priority:
          $ref: '#/components/schemas/Priority'
      required:
        - ResourceArn
        - Priority
      additionalProperties: false
    Priority:
      type: integer
      minimum: 1
      maximum: 65535
    StatefulRuleGroupOverride:
      type: object
      properties:
        Action:
          $ref: '#/components/schemas/OverrideAction'
      additionalProperties: false
    OverrideAction:
      type: string
      enum:
        - DROP_TO_ALERT
    StatefulEngineOptions:
      type: object
      properties:
        RuleOrder:
          $ref: '#/components/schemas/RuleOrder'
        StreamExceptionPolicy:
          $ref: '#/components/schemas/StreamExceptionPolicy'
      additionalProperties: false
    RuleOrder:
      type: string
      enum:
        - DEFAULT_ACTION_ORDER
        - STRICT_ORDER
    StreamExceptionPolicy:
      type: string
      enum:
        - DROP
        - CONTINUE
    LoggingConfiguration:
      type: object
      properties:
        FirewallName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        FirewallArn:
          $ref: '#/components/schemas/ResourceArn'
        LoggingConfiguration:
          $ref: '#/components/schemas/LoggingConfiguration'
      required:
        - FirewallArn
        - LoggingConfiguration
      x-stackql-resource-name: logging_configuration
      x-stackql-primaryIdentifier:
        - FirewallArn
    LogDestinationConfig:
      type: object
      properties:
        LogType:
          type: string
          enum:
            - ALERT
            - FLOW
        LogDestinationType:
          type: string
          enum:
            - S3
            - CloudWatchLogs
            - KinesisDataFirehose
        LogDestination:
          type: object
          description: A key-value pair to configure the logDestinations.
          x-patternProperties:
            ^[0-9A-Za-z.\-_@\/]+$:
              type: string
              minLength: 1
              maxLength: 1024
          minProperties: 1
          additionalProperties: false
      required:
        - LogType
        - LogDestinationType
        - LogDestination
      additionalProperties: false
    RulesString:
      type: string
      minLength: 0
      maxLength: 1000000
    RuleGroup:
      type: object
      properties:
        RuleGroupName:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^[a-zA-Z0-9-]+$
        RuleGroupArn:
          $ref: '#/components/schemas/ResourceArn'
        RuleGroupId:
          type: string
          minLength: 36
          maxLength: 36
          pattern: ^([0-9a-f]{8})-([0-9a-f]{4}-){3}([0-9a-f]{12})$
        RuleGroup:
          $ref: '#/components/schemas/RuleGroup'
        Type:
          type: string
          enum:
            - STATELESS
            - STATEFUL
        Capacity:
          type: integer
        Description:
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^.*$
        Tags:
          type: array
          x-insertionOrder: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - Type
        - Capacity
        - RuleGroupName
      x-stackql-resource-name: rule_group
      x-stackql-primaryIdentifier:
        - RuleGroupArn
    RuleVariables:
      type: object
      properties:
        IPSets:
          type: object
          x-patternProperties:
            ^[A-Za-z0-9_]{1,32}$:
              $ref: '#/components/schemas/IPSet'
          additionalProperties: false
        PortSets:
          type: object
          x-patternProperties:
            ^[A-Za-z0-9_]{1,32}$:
              $ref: '#/components/schemas/PortSet'
          additionalProperties: false
      additionalProperties: false
    IPSet:
      type: object
      properties:
        Definition:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VariableDefinition'
      additionalProperties: false
    PortSet:
      type: object
      properties:
        Definition:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/VariableDefinition'
      additionalProperties: false
    VariableDefinition:
      type: string
      minLength: 1
      pattern: ^.*$
    ReferenceSets:
      type: object
      properties:
        IPSetReferences:
          type: object
          x-patternProperties:
            ^[A-Za-z0-9_]{1,32}$:
              $ref: '#/components/schemas/IPSetReference'
          additionalProperties: false
      additionalProperties: false
    IPSetReference:
      type: object
      properties:
        ReferenceArn:
          $ref: '#/components/schemas/ResourceArn'
      additionalProperties: false
    RulesSource:
      type: object
      properties:
        RulesString:
          $ref: '#/components/schemas/RulesString'
        RulesSourceList:
          $ref: '#/components/schemas/RulesSourceList'
        StatefulRules:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/StatefulRule'
        StatelessRulesAndCustomActions:
          $ref: '#/components/schemas/StatelessRulesAndCustomActions'
      additionalProperties: false
    RulesSourceList:
      type: object
      properties:
        Targets:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            type: string
        TargetTypes:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TargetType'
        GeneratedRulesType:
          $ref: '#/components/schemas/GeneratedRulesType'
      required:
        - Targets
        - TargetTypes
        - GeneratedRulesType
      additionalProperties: false
    TargetType:
      type: string
      enum:
        - TLS_SNI
        - HTTP_HOST
    GeneratedRulesType:
      type: string
      enum:
        - ALLOWLIST
        - DENYLIST
    StatefulRule:
      type: object
      properties:
        Action:
          type: string
          enum:
            - PASS
            - DROP
            - ALERT
            - REJECT
        Header:
          $ref: '#/components/schemas/Header'
        RuleOptions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/RuleOption'
      required:
        - Action
        - Header
        - RuleOptions
      additionalProperties: false
    Header:
      type: object
      properties:
        Protocol:
          type: string
          enum:
            - IP
            - TCP
            - UDP
            - ICMP
            - HTTP
            - FTP
            - TLS
            - SMB
            - DNS
            - DCERPC
            - SSH
            - SMTP
            - IMAP
            - MSN
            - KRB5
            - IKEV2
            - TFTP
            - NTP
            - DHCP
        Source:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^.*$
        SourcePort:
          $ref: '#/components/schemas/Port'
        Direction:
          type: string
          enum:
            - FORWARD
            - ANY
        Destination:
          type: string
          minLength: 1
          maxLength: 1024
          pattern: ^.*$
        DestinationPort:
          $ref: '#/components/schemas/Port'
      required:
        - Protocol
        - Source
        - SourcePort
        - Direction
        - Destination
        - DestinationPort
      additionalProperties: false
    RuleOption:
      type: object
      properties:
        Keyword:
          type: string
          minLength: 1
          maxLength: 128
          pattern: ^.*$
        Settings:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Setting'
      required:
        - Keyword
      additionalProperties: false
    Setting:
      type: string
      minLength: 1
      maxLength: 8192
      pattern: ^.*$
    Port:
      type: string
      minLength: 1
      maxLength: 1024
      pattern: ^.*$
    StatelessRulesAndCustomActions:
      type: object
      properties:
        StatelessRules:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/StatelessRule'
        CustomActions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/CustomAction'
      required:
        - StatelessRules
      additionalProperties: false
    StatelessRule:
      type: object
      properties:
        RuleDefinition:
          $ref: '#/components/schemas/RuleDefinition'
        Priority:
          type: integer
          minimum: 1
          maximum: 65535
      required:
        - RuleDefinition
        - Priority
      additionalProperties: false
    RuleDefinition:
      type: object
      properties:
        MatchAttributes:
          $ref: '#/components/schemas/MatchAttributes'
        Actions:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            type: string
      required:
        - MatchAttributes
        - Actions
      additionalProperties: false
    MatchAttributes:
      type: object
      properties:
        Sources:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Address'
        Destinations:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/Address'
        SourcePorts:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PortRange'
        DestinationPorts:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/PortRange'
        Protocols:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/ProtocolNumber'
        TCPFlags:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TCPFlagField'
      additionalProperties: false
    Address:
      type: object
      properties:
        AddressDefinition:
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^([a-fA-F\d:\.]+/\d{1,3})$
      required:
        - AddressDefinition
      additionalProperties: false
    PortRange:
      type: object
      properties:
        FromPort:
          $ref: '#/components/schemas/PortRangeBound'
        ToPort:
          $ref: '#/components/schemas/PortRangeBound'
      required:
        - FromPort
        - ToPort
      additionalProperties: false
    PortRangeBound:
      type: integer
      minimum: 0
      maximum: 65535
    ProtocolNumber:
      type: integer
      minimum: 0
      maximum: 255
    TCPFlagField:
      type: object
      properties:
        Flags:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TCPFlag'
        Masks:
          type: array
          x-insertionOrder: true
          uniqueItems: false
          items:
            $ref: '#/components/schemas/TCPFlag'
      required:
        - Flags
      additionalProperties: false
    TCPFlag:
      type: string
      enum:
        - FIN
        - SYN
        - RST
        - PSH
        - ACK
        - URG
        - ECE
        - CWR
    StatefulRuleOptions:
      type: object
      properties:
        RuleOrder:
          $ref: '#/components/schemas/RuleOrder'
      additionalProperties: false
  x-stackQL-resources:
    firewalls:
      name: firewalls
      id: aws.networkfirewall.firewalls
      x-cfn-schema-name: Firewall
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallArn') as firewall_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::Firewall'
    firewall:
      name: firewall
      id: aws.networkfirewall.firewall
      x-cfn-schema-name: Firewall
      x-type: get
      x-identifiers:
        - FirewallArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallName') as firewall_name,
              JSON_EXTRACT(Properties, '$.FirewallId') as firewall_id,
              JSON_EXTRACT(Properties, '$.VpcId') as vpc_id,
              JSON_EXTRACT(Properties, '$.SubnetMappings') as subnet_mappings,
              JSON_EXTRACT(Properties, '$.DeleteProtection') as delete_protection,
              JSON_EXTRACT(Properties, '$.SubnetChangeProtection') as subnet_change_protection,
              JSON_EXTRACT(Properties, '$.FirewallPolicyChangeProtection') as firewall_policy_change_protection,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.EndpointIds') as endpoint_ids,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::Firewall'
    firewall_policies:
      name: firewall_policies
      id: aws.networkfirewall.firewall_policies
      x-cfn-schema-name: FirewallPolicy
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallPolicyArn') as firewall_policy_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
    firewall_policy:
      name: firewall_policy
      id: aws.networkfirewall.firewall_policy
      x-cfn-schema-name: FirewallPolicy
      x-type: get
      x-identifiers:
        - FirewallPolicyArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallPolicyName') as firewall_policy_name,
              JSON_EXTRACT(Properties, '$.FirewallPolicy.FirewallPolicyName') as firewall_policy_firewall_policy_name,
              JSON_EXTRACT(Properties, '$.FirewallPolicy.FirewallPolicyArn') as firewall_policy_firewall_policy_arn,
              JSON_EXTRACT(Properties, '$.FirewallPolicy.FirewallPolicy') as firewall_policy_firewall_policy,
              JSON_EXTRACT(Properties, '$.FirewallPolicy.FirewallPolicyId') as firewall_policy_firewall_policy_id,
              JSON_EXTRACT(Properties, '$.FirewallPolicy.Description') as firewall_policy_description,
              JSON_EXTRACT(Properties, '$.FirewallPolicy.Tags') as firewall_policy_tags,
              JSON_EXTRACT(Properties, '$.FirewallPolicyId') as firewall_policy_id,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::FirewallPolicy'
    logging_configurations:
      name: logging_configurations
      id: aws.networkfirewall.logging_configurations
      x-cfn-schema-name: LoggingConfiguration
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallArn') as firewall_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::LoggingConfiguration'
    logging_configuration:
      name: logging_configuration
      id: aws.networkfirewall.logging_configuration
      x-cfn-schema-name: LoggingConfiguration
      x-type: get
      x-identifiers:
        - FirewallArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.FirewallName') as firewall_name,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration.FirewallName') as logging_configuration_firewall_name,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration.FirewallArn') as logging_configuration_firewall_arn,
              JSON_EXTRACT(Properties, '$.LoggingConfiguration.LoggingConfiguration') as logging_configuration_logging_configuration
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::LoggingConfiguration'
    rule_groups:
      name: rule_groups
      id: aws.networkfirewall.rule_groups
      x-cfn-schema-name: RuleGroup
      x-type: list
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleGroupArn') as rule_group_arn
              FROM aws.cloud_control.resources WHERE data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
    rule_group:
      name: rule_group
      id: aws.networkfirewall.rule_group
      x-cfn-schema-name: RuleGroup
      x-type: get
      x-identifiers:
        - RuleGroupArn
      config:
        views:
          select:
            predicate: sqlDialect == "sqlite3"
            ddl: |-
              SELECT
              region,
              JSON_EXTRACT(Properties, '$.RuleGroupName') as rule_group_name,
              JSON_EXTRACT(Properties, '$.RuleGroupId') as rule_group_id,
              JSON_EXTRACT(Properties, '$.RuleGroup.RuleGroupName') as rule_group_rule_group_name,
              JSON_EXTRACT(Properties, '$.RuleGroup.RuleGroupArn') as rule_group_rule_group_arn,
              JSON_EXTRACT(Properties, '$.RuleGroup.RuleGroupId') as rule_group_rule_group_id,
              JSON_EXTRACT(Properties, '$.RuleGroup.RuleGroup') as rule_group_rule_group,
              JSON_EXTRACT(Properties, '$.RuleGroup.Type') as rule_group_type,
              JSON_EXTRACT(Properties, '$.RuleGroup.Capacity') as rule_group_capacity,
              JSON_EXTRACT(Properties, '$.RuleGroup.Description') as rule_group_description,
              JSON_EXTRACT(Properties, '$.RuleGroup.Tags') as rule_group_tags,
              JSON_EXTRACT(Properties, '$.Type') as type,
              JSON_EXTRACT(Properties, '$.Capacity') as capacity,
              JSON_EXTRACT(Properties, '$.Description') as description,
              JSON_EXTRACT(Properties, '$.Tags') as tags
              FROM aws.cloud_control.resource WHERE data__TypeName = 'AWS::NetworkFirewall::RuleGroup'
